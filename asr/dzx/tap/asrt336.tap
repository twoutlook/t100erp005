<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="asrt336" std_prog="asrt336" erpver="1.0" module="ASR" ver="1" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.asrt336_set_required" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asrt336_set_required()
#   DEFINE l_sfaa061     LIKE sfaa_t.sfaa061
   
#   SELECT sfaa061 INTO l_sfaa061 FROM sfaa_t
#    WHERE sfaaent   = g_enterprise
#      AND sfaasite  = g_site
#      AND sfaadocno = g_sfga_m.sfga004
      
   
#   IF l_sfaa061 = 'Y' THEN
#      CALL cl_set_comp_required("sfga006,sfga007",TRUE)              
#   END IF
END FUNCTION]]>
  </point>
  <point name="function.asrt336_set_sfga009" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 在改变判定方式和数量时，更新单头报废数量
# Memo...........:
# Usage..........: CALL asrt336_set_sfga009(p_sfgc002_t,p_sfgc002,p_sfgc003)
#                  RETURNING r_success
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: r_success      回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/03/07 By wujie
# Modify.........:
################################################################################
PRIVATE FUNCTION asrt336_set_sfga009()
DEFINE l_sfgc003_sum     LIKE sfgc_t.sfgc003
DEFINE l_sfgc003_sum1    LIKE sfgc_t.sfgc003     #报废数量
DEFINE l_sfgc003_sum2    LIKE sfgc_t.sfgc003     #重工数量
DEFINE i                 LIKE type_t.num5
DEFINE r_success         LIKE type_t.num5

   LET l_sfgc003_sum  = 0
   LET l_sfgc003_sum1 = 0
   LET l_sfgc003_sum2 = 0
   LET r_success = TRUE
   FOR i = 1 TO g_sfgb2_d.getlength()
       IF g_sfgb2_d[i].sfgc002 = '1' THEN
          LET l_sfgc003_sum1 = l_sfgc003_sum1 + g_sfgb2_d[i].sfgc003
       END IF
       IF g_sfgb2_d[i].sfgc002 = '2' THEN
          LET l_sfgc003_sum2 = l_sfgc003_sum2 + g_sfgb2_d[i].sfgc003
       END IF
   END FOR
   LET l_sfgc003_sum = l_sfgc003_sum1 + l_sfgc003_sum2
   IF l_sfgc003_sum > g_sfga_m.sfga008 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00290'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   UPDATE sfga_t set sfga009 = l_sfgc003_sum1
    WHERE sfgaent   = g_enterprise
      AND sfgadocno = g_sfga_m.sfgadocno
      
   IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00148'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF
   LET g_sfga_m.sfga009 = l_sfgc003_sum1
   DISPLAY BY NAME g_sfga_m.sfga009
   RETURN r_success
                   
END FUNCTION]]>
  </point>
  <point name="function.asrt336_set_no_required" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asrt336_set_no_required()
   CALL cl_set_comp_required("sfga006,sfga007",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.asrt336_input_sfgc" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asrt336_input_sfgc()
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_sfaa061             LIKE sfaa_t.sfaa061 
   DEFINE  l_sffb009             LIKE sffb_t.sffb009
   DEFINE  l_qty                 LIKE sfga_t.sfga008
   DEFINE  l_sfgc003_sum         LIKE sfgc_t.sfgc003
   DEFINE  l_sffb016             LIKE sffb_t.sffb016 
   DEFINE  l_success             LIKE type_t.num5  



#参数不使用判定流程不能进入
   CALL s_aooi200_get_slip(g_sfga_m.sfgadocno) RETURNING l_success,g_doc_slip
   IF cl_get_doc_para(g_enterprise,g_site,g_doc_slip,'D-MFG-0060') = 'N' OR g_sfga_m.sfgastus <> 'Y' THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00259'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF 

#定义cursor放在asrt336_init()里了，因为asrt336_lock_b()要用到这个cursor，但是现在设计器没办法把本函数提到asrt336_lock_b()之前去
#   LET g_forupd_sql = "SELECT sfgcseq,sfgc001,'',sfgc002,sfgc003,sfgc004,sfgc005,'',sfgc006,sfgcsite  
#       FROM sfgc_t WHERE sfgcent=? AND sfgcdocno=? AND sfgcseq=? FOR UPDATE"
#
#   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
#   DECLARE asrt336_bcl21 CURSOR FROM g_forupd_sql 
 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL asrt336_set_entry(p_cmd)
   #add-point:set_entry後
                        
   #end add-point
   CALL asrt336_set_no_entry(p_cmd)

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT ARRAY g_sfgb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfgb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL asrt336_b_fill()
            LET g_rec_b = g_sfgb2_d.getLength()
            #add-point:資料輸入前          
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfgb2_d[l_ac].* TO NULL 
                  LET g_sfgb2_d[l_ac].sfgc004 = "1"
 
 
            LET g_sfgb2_d_t.* = g_sfgb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asrt336_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            LET g_sfgb2_d[l_ac].sfgc004 = '1'                                                                                     
            #end add-point
            CALL asrt336_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfgb2_d[li_reproduce_target].* = g_sfgb2_d[li_reproduce].*
 
               LET g_sfgb2_d[li_reproduce_target].sfgcseq = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            LET g_sfgb2_d[l_ac].sfgc002 = '1'
            LET g_sfgb2_d[l_ac].sfgcsite = g_site
            CALL asrt336_set_no_required_b()
            CALL asrt336_set_required_b()
            #end add-point  
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asrt336_cl USING g_enterprise,g_sfga_m.sfgadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN asrt336_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_sfgb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfgb2_d[l_ac].sfgcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_sfgb2_d_t.* = g_sfgb2_d[l_ac].*  #BACKUP
               CALL asrt336_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
                                                                                                                        
               #end add-point  
               CALL asrt336_set_no_entry_b(l_cmd)
               IF NOT asrt336_lock_b("maintain_sfgc","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asrt336_bcl21 INTO g_sfgb2_d[l_ac].sfgcseq,g_sfgb2_d[l_ac].sfgc001,g_sfgb2_d[l_ac].sfgc001_desc, 
                      g_sfgb2_d[l_ac].sfgc002,g_sfgb2_d[l_ac].sfgc003,g_sfgb2_d[l_ac].sfgc004,g_sfgb2_d[l_ac].sfgc005, 
                      g_sfgb2_d[l_ac].sfgc005_desc,g_sfgb2_d[l_ac].sfgc006,g_sfgb2_d[l_ac].sfgcsite
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL asrt336_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            CALL asrt336_set_no_required_b()
            CALL asrt336_set_required_b()                                                                                                
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_sfgb2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfgb2_d.deleteElement(l_ac)
               NEXT FIELD sfgcseq
            END IF
         
            IF g_sfgb2_d[l_ac].sfgcseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
                                                                                                                        
               #end add-point    
               
               DELETE FROM sfgc_t
                WHERE sfgcent = g_enterprise AND sfgcdocno = g_sfga_m.sfgadocno AND
                      sfgcseq = g_sfgb2_d_t.sfgcseq
                  
               #add-point:單身2刪除中
                                                                                                                        
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "sfgb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                                                                                                                                                
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE asrt336_bcl
               LET l_count = g_sfgb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfga_m.sfgadocno
               LET gs_keys[2] = g_sfgb2_d[g_detail_idx].sfgcseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
                                                                                               
            #end add-point
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
                                                                                                
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sfgc_t 
             WHERE sfgcent = g_enterprise AND sfgcdocno = g_sfga_m.sfgadocno
               AND sfgcseq = g_sfgb2_d[l_ac].sfgcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
                                                                                                                        
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfga_m.sfgadocno
               LET gs_keys[2] = g_sfgb2_d[g_detail_idx].sfgcseq
               CALL asrt336_insert_b('sfgc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
                                                                                                                        
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_sfgb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "sfgc_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asrt336_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
                                                                                                                        
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
               CLOSE asrt336_bcl21
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
            ELSE
               #add-point:單身page2修改前
                                                                                                                        
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE sfgc_t SET (sfgcdocno,sfgcseq,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006, 
                   sfgcsite) = (g_sfga_m.sfgadocno,g_sfgb2_d[l_ac].sfgcseq,g_sfgb2_d[l_ac].sfgc001,g_sfgb2_d[l_ac].sfgc002, 
                   g_sfgb2_d[l_ac].sfgc003,g_sfgb2_d[l_ac].sfgc004,g_sfgb2_d[l_ac].sfgc005,g_sfgb2_d[l_ac].sfgc006, 
                   g_sfgb2_d[l_ac].sfgcsite) #自訂欄位頁簽
                WHERE sfgcent = g_enterprise AND sfgcdocno = g_sfga_m.sfgadocno
                  AND sfgcseq = g_sfgb2_d_t.sfgcseq #項次 
                  
               #add-point:單身page2修改中
                                                                                                                        
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "sfgc_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "sfgc_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                     LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfga_m.sfgadocno
               LET gs_keys_bak[1] = g_sfgadocno_t
               LET gs_keys[2] = g_sfgb2_d[g_detail_idx].sfgcseq
               LET gs_keys_bak[2] = g_sfgb2_d_t.sfgcseq
               CALL asrt336_update_b('sfgc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page2修改後
                                                                                                                        
               #end add-point
            END IF
         
         #---------------------<  Detail: page2  >---------------------
         #----<<sfgcseq>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfgcseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfgb2_d[l_ac].sfgcseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfgcseq
            END IF
 
 
            #add-point:AFTER FIELD sfgcseq
                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgcseq) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_sfga_m.sfgadocno IS NOT NULL AND g_sfgb2_d[g_detail_idx].sfgcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfga_m.sfgadocno != g_sfgadocno_t OR g_sfgb2_d[g_detail_idx].sfgcseq != g_sfgb2_d_t.sfgcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfgc_t WHERE "||"sfgcent = '" ||g_enterprise|| "' AND "||"sfgcdocno = '"||g_sfga_m.sfgadocno ||"' AND "|| "sfgcseq = '"||g_sfgb2_d[g_detail_idx].sfgcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfgcseq
            #add-point:BEFORE FIELD sfgcseq
                                                IF g_sfgb2_d[l_ac].sfgcseq IS NULL OR g_sfgb2_d[l_ac].sfgcseq = 0 THEN
               SELECT MAX(sfgcseq)+1 INTO g_sfgb2_d[l_ac].sfgcseq
                 FROM sfgc_t
                WHERE sfgcent   = g_enterprise 
                  AND sfgcdocno = g_sfga_m.sfgadocno 

            END IF
            IF g_sfgb2_d[l_ac].sfgcseq IS NULL THEN
               LET g_sfgb2_d[l_ac].sfgcseq = 1
            END IF                                                            
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfgcseq
            #add-point:ON CHANGE sfgcseq
                                                                                                
            #END add-point
 
         #----<<sfgc001>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfgc001
            
            #add-point:AFTER FIELD sfgc001
                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc001) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_sfgb2_d[l_ac].sfgc001 <> g_sfgb2_d_t.sfgc001) THEN
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_sfgb2_d[l_ac].sfgc001
			      
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oocq002_1053") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
			      
                  ELSE
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfgb2_d[l_ac].sfgc001
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='1053' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfgb2_d[l_ac].sfgc001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfgb2_d[l_ac].sfgc001_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfgc001
            #add-point:BEFORE FIELD sfgc001
                                                                                                
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfgc001
            #add-point:ON CHANGE sfgc001
                                                                                                
            #END add-point
 
         #----<<sfgc001_desc>>----
         #----<<sfgc002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfgc002
            #add-point:BEFORE FIELD sfgc002
                                                                                                
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfgc002
            
            #add-point:AFTER FIELD sfgc002
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc002) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_sfgb2_d[l_ac].sfgc002 <> g_sfgb2_d_t.sfgc002) THEN
                  IF NOT asrt336_set_sfga009() THEN
                     LET g_sfgb2_d[l_ac].sfgc002 = g_sfgb2_d_t.sfgc002
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF               
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfgc002
            #add-point:ON CHANGE sfgc002
                                                                                                
            #END add-point
 
         #----<<sfgc003>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfgc003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfgb2_d[l_ac].sfgc003,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfgc003
            END IF
 
 
            #add-point:AFTER FIELD sfgc003
                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc003) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_sfgb2_d_t.sfgc003 IS NULL OR g_sfgb2_d[l_ac].sfgc003 <> g_sfgb2_d_t.sfgc003)) THEN  
#同步单头报废数量为单身之和 
#同时判断单身合计数不可大于单头申请数量
                  IF NOT asrt336_set_sfga009() THEN
                     LET g_sfgb2_d[l_ac].sfgc003 = g_sfgb2_d_t.sfgc003
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF 

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfgc003
            #add-point:BEFORE FIELD sfgc003
                                                                                                
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfgc003
            #add-point:ON CHANGE sfgc003
                                                                                                
            #END add-point
 
         #----<<sfgc004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfgc004
            #add-point:BEFORE FIELD sfgc004
            CALL asrt336_set_entry_b(l_cmd)  
            CALL asrt336_set_no_required()            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfgc004
            
            #add-point:AFTER FIELD sfgc004
            CALL asrt336_set_no_entry_b(l_cmd)  
            CALL asrt336_set_required()         
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfgc004
            #add-point:ON CHANGE sfgc004
                                                                                                
            #END add-point
 
         #----<<sfgc005>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfgc005
            
            #add-point:AFTER FIELD sfgc005
                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc005) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_sfgb2_d_t.sfgc005 IS NULL OR g_sfgb2_d[l_ac].sfgc005 <> g_sfgb2_d_t.sfgc005)) THEN  
                  IF g_sfgb2_d[l_ac].sfgc004 = '1' THEN               
#此段落由子樣板a19產生
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_sfgb2_d[l_ac].sfgc005
                     LET g_chkparam.arg2 = cl_get_today()
			         
                        
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_ooeg001_2") THEN
                        #檢查成功時後續處理
                        #LET  = g_chkparam.return1
                        #DISPLAY BY NAME 
			         
                     ELSE
                        #檢查失敗時後續處理
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  IF g_sfgb2_d[l_ac].sfgc004 = '2' THEN               
#此段落由子樣板a19產生
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_sfgb2_d[l_ac].sfgc005
			         
                        
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_pmaa001_1") THEN
                        #檢查成功時後續處理
                        #LET  = g_chkparam.return1
                        #DISPLAY BY NAME 
			         
                     ELSE
                        #檢查失敗時後續處理
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            

            END IF 
            IF g_sfgb2_d[l_ac].sfgc004 = '1' THEN 
               CALL s_desc_get_department_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc            
            END IF
            IF g_sfgb2_d[l_ac].sfgc004 = '2' THEN 
               CALL s_desc_get_trading_partner_full_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc
            END IF            
            IF g_sfgb2_d[l_ac].sfgc004 = '3' THEN 
               LET g_sfgb2_d[l_ac].sfgc005_desc = NULL
            END IF
            DISPLAY BY NAME g_sfgb2_d[l_ac].sfgc005_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfgc005
            #add-point:BEFORE FIELD sfgc005
                                                                                                
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfgc005
            #add-point:ON CHANGE sfgc005
                                                                                                
            #END add-point
 
         #----<<sfgc005_desc>>----
         #----<<sfgc006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfgc006
            #add-point:BEFORE FIELD sfgc006
                                                                                                
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfgc006
            
            #add-point:AFTER FIELD sfgc006
                                                                                                
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfgc006
            #add-point:ON CHANGE sfgc006
                                                                                                
            #END add-point
 
         #----<<sfgcsite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfgcsite
            #add-point:BEFORE FIELD sfgcsite
                                                                                                
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfgcsite
            
            #add-point:AFTER FIELD sfgcsite
                                                                                                
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfgcsite
            #add-point:ON CHANGE sfgcsite
                                                                                                
            #END add-point
 
 
         #---------------------<  Detail: page2  >---------------------
         #----<<sfgcseq>>----
         #Ctrlp:input.c.page2.sfgcseq
         ON ACTION controlp INFIELD sfgcseq
            #add-point:ON ACTION controlp INFIELD sfgcseq
                                                                                                
            #END add-point
 
         #----<<sfgc001>>----
         #Ctrlp:input.c.page2.sfgc001
         ON ACTION controlp INFIELD sfgc001
            #add-point:ON ACTION controlp INFIELD sfgc001
                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfgb2_d[l_ac].sfgc001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1053" 

            CALL q_oocq002()                                #呼叫開窗

            LET g_sfgb2_d[l_ac].sfgc001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfgb2_d[l_ac].sfgc001 TO sfgc001              #顯示到畫面上

            NEXT FIELD sfgc001                          #返回原欄位


            #END add-point
 
         #----<<sfgc001_desc>>----
         #----<<sfgc002>>----
         #Ctrlp:input.c.page2.sfgc002
         ON ACTION controlp INFIELD sfgc002
            #add-point:ON ACTION controlp INFIELD sfgc002
                                                                                                
            #END add-point
 
         #----<<sfgc003>>----
         #Ctrlp:input.c.page2.sfgc003
         ON ACTION controlp INFIELD sfgc003
            #add-point:ON ACTION controlp INFIELD sfgc003
                                                                                                
            #END add-point
 
         #----<<sfgc004>>----
         #Ctrlp:input.c.page2.sfgc004
         ON ACTION controlp INFIELD sfgc004
            #add-point:ON ACTION controlp INFIELD sfgc004
                                                                                                
            #END add-point
 
         #----<<sfgc005>>----
         #Ctrlp:input.c.page2.sfgc005
         ON ACTION controlp INFIELD sfgc005
            #add-point:ON ACTION controlp INFIELD sfgc005
                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfgb2_d[l_ac].sfgc005             #給予default值

            #給予arg
            IF g_sfgb2_d[l_ac].sfgc004 ='1' THEN
               LET g_qryparam.arg1 = g_sfga_m.sfgadocdt
               CALL q_ooeg001()                                              #呼叫開窗
               LET g_sfgb2_d[l_ac].sfgc005 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfgb2_d[l_ac].sfgc005 TO sfgc005                    #顯示到畫面上
            END IF
            IF g_sfgb2_d[l_ac].sfgc004 ='2' THEN
               LET g_qryparam.arg1 = " ('1','3')"                            #交易對象類型
               CALL q_pmaa001_1()                                            #呼叫開窗
               LET g_sfgb2_d[l_ac].sfgc005 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfgb2_d[l_ac].sfgc005 TO sfgc005                    #顯示到畫面上
            END IF

            NEXT FIELD sfgc005                          #返回原欄位


            #END add-point
 
         #----<<sfgc005_desc>>----
         #----<<sfgc006>>----
         #Ctrlp:input.c.page2.sfgc006
         ON ACTION controlp INFIELD sfgc006
            #add-point:ON ACTION controlp INFIELD sfgc006
                                                                                                
            #END add-point
 
         #----<<sfgcsite>>----
         #Ctrlp:input.c.page2.sfgcsite
         ON ACTION controlp INFIELD sfgcsite
            #add-point:ON ACTION controlp INFIELD sfgcsite
                                                                                                
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
                                                                                                
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
               END IF
               CLOSE asrt336_bcl21
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL asrt336_unlock_b("maintain_sfgc","'3'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
                                                                                                
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_sfgb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfgb2_d.getLength()+1
 
      END INPUT
 
      
 

      #add-point:自定義input
                                                
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
                                                                        
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD sfgadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD sfgbseq
               WHEN "s_detail2"
                  NEXT FIELD sfgcseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 

         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
   
END FUNCTION]]>
  </point>
  <point name="function.asrt336_set_no_required_b" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asrt336_set_no_required_b()
   CALL cl_set_comp_required("sfgc005",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.asrt336_set_required_b" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asrt336_set_required_b()
   IF g_sfgb2_d[l_ac].sfgc004 <> '3' THEN
      CALL cl_set_comp_required("sfgc005",TRUE) 
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.asrt336_refresh_stus" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION asrt336_refresh_stus()
       SELECT DISTINCT sfgastus,sfgaownid,sfgaowndp,sfgacrtid,sfgacrtdp,
                       sfgacrtdt,sfgamodid,sfgamoddt,sfgacnfid,sfgacnfdt,sfgapstid,sfgapstdt
         INTO g_sfga_m.sfgastus,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp,
              g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt,g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt
         
         FROM sfga_t
        WHERE sfgaent   = g_enterprise
          AND sfgadocno = g_sfga_m.sfgadocno
       
       LET g_sfga_m.sfgaownid_desc = s_desc_get_person_desc(g_sfga_m.sfgaownid)
       LET g_sfga_m.sfgacrtid_desc = s_desc_get_person_desc(g_sfga_m.sfgacrtid)
       LET g_sfga_m.sfgamodid_desc = s_desc_get_person_desc(g_sfga_m.sfgamodid)
       LET g_sfga_m.sfgacnfid_desc = s_desc_get_person_desc(g_sfga_m.sfgacnfid)
       LET g_sfga_m.sfgapstid_desc = s_desc_get_person_desc(g_sfga_m.sfgapstid)
       
       LET g_sfga_m.sfgaowndp_desc = s_desc_get_department_desc(g_sfga_m.sfgaowndp)
       LET g_sfga_m.sfgacrtdp_desc = s_desc_get_department_desc(g_sfga_m.sfgacrtdp)
 
       CASE g_sfga_m.sfgastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
          
       END CASE 
       
       DISPLAY BY NAME
       g_sfga_m.sfgastus,g_sfga_m.sfgaownid,
       g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtid_desc, 
       g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamodid_desc, 
       g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgacnfdt,g_sfga_m.sfgapstid,g_sfga_m.sfgapstid_desc,g_sfga_m.sfgapstdt
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="b_fill.body2.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_sfgb_d[l_ac].sfgb001
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='1053' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_sfgb_d[l_ac].sfgb001_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_sfgb_d[l_ac].sfgb001_desc                                                                        ]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="b_fill.sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_sfgb2_d[l_ac].sfgc001
         CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='1053' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_sfgb2_d[l_ac].sfgc001_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_sfgb2_d[l_ac].sfgc001_desc

         IF g_sfgb2_d[l_ac].sfgc004 = '1' THEN 
            CALL s_desc_get_department_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc            
         END IF
         IF g_sfgb2_d[l_ac].sfgc004 = '2' THEN 
            CALL s_desc_get_trading_partner_full_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc
         END IF            
         IF g_sfgb2_d[l_ac].sfgc004 = '3' THEN 
            LET g_sfgb2_d[l_ac].sfgc005_desc = NULL
         END IF
         DISPLAY BY NAME g_sfgb2_d[l_ac].sfgc005_desc                                                                        ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF cl_null(g_wc) THEN
      LET g_wc = " sfgasite = '",g_site,"' AND sfga004 IS NULL AND sfga011 IS NOT NULL "
   ELSE
      LET g_wc = g_wc," AND sfgasite = '",g_site,"' AND sfga004 IS NULL AND sfga011 IS NOT NULL "
   END IF 
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()   ]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_browser[g_cnt].b_sfgadocno_desc = s_aooi200_get_slip_desc(g_browser[g_cnt].b_sfgadocno)
      DISPLAY BY NAME g_browser[g_cnt].b_sfgadocno_desc                                                ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="construct.a.imaal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.a.imaal004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.a.oobxl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.oocql004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.ooeal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page1.sfgb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page1.sfgb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page1.sfgb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page1.sfgbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page1.sfgbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.page2.sfgcsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.a.sfga001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfga010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.a.sfgastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.imaal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.b.imaal004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.b.oobxl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.oocql004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.ooeal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page1.sfgb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page1.sfgb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page1.sfgb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page1.sfgbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page1.sfgbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.page2.sfgcsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.b.sfga001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfga010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgacnfdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgacrtdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgamoddt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgapstdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.b.sfgastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.imaal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.c.imaal004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="construct.c.oobxl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.oocql004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.ooeal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page1.sfgb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "1053" 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgb001  #顯示到畫面上

            NEXT FIELD sfgb001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.sfgb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page1.sfgb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page1.sfgbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page1.sfgbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page2.sfgc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "1053" 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgc001  #顯示到畫面上

            NEXT FIELD sfgc001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.sfgc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page2.sfgc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page2.sfgc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page2.sfgc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
]]>
  </point>
  <point name="construct.c.page2.sfgc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page2.sfgcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.page2.sfgcsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa010  #顯示到畫面上

            NEXT FIELD sfaa010                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfga001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.sfga002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga002  #顯示到畫面上

            NEXT FIELD sfga002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfga003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga003  #顯示到畫面上

            NEXT FIELD sfga003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfga004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_sfaadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga004  #顯示到畫面上

            NEXT FIELD sfga004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfga005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_sfca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga005  #顯示到畫面上

            NEXT FIELD sfga005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfga006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
   			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
   			LET g_qryparam.reqry = FALSE
            CALL q_sfcb003_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga006  #顯示到畫面上
   
            NEXT FIELD sfga006                     #返回原欄位


]]>
  </point>
  <point name="construct.c.sfga007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_sfcb003_4()                           #呼叫開窗
            DISPLAY g_qryparam.return3 TO sfga007  #顯示到畫面上

            NEXT FIELD sfga007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfga008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.sfga009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.sfga010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.sfga011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_srza001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga011  #顯示到畫面上
            NEXT FIELD sfga011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.sfga012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga012  #顯示到畫面上
            NEXT FIELD sfga012                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.sfga013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga013  #顯示到畫面上
            NEXT FIELD sfga013                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.sfga014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1=g_sfga_m.sfga012
            CALL q_bmaa002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfga014  #顯示到畫面上
            NEXT FIELD sfga014                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.sfgacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgacnfid  #顯示到畫面上

            NEXT FIELD sfgacnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgacrtdp  #顯示到畫面上

            NEXT FIELD sfgacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgacrtid  #顯示到畫面上

            NEXT FIELD sfgacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.sfgadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where="  sfga004 IS NULL AND sfga011 IS NOT NULL"
            CALL q_sfgadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgadocno  #顯示到畫面上

            NEXT FIELD sfgadocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgamodid  #顯示到畫面上

            NEXT FIELD sfgamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgaowndp  #顯示到畫面上

            NEXT FIELD sfgaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgaownid  #顯示到畫面上

            NEXT FIELD sfgaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfgapstid  #顯示到畫面上

            NEXT FIELD sfgapstid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.sfgasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="construct.c.sfgastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="cs.body2.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete.body.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete.body.b_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete.body.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_sfga_m.sfgastus <> 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00034'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF                        ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt) THEN CALL s_transaction_end('N','0') RETURN END IF                                          ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete_b.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete_b.b_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete_b.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_reproduce.body.table2.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_reproduce.body.table2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_reproduce.body.table2.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_doc_slip            LIKE sfga_t.sfgadocno
DEFINE g_sfgc_entry          LIKE type_t.chr1              #标识判定单身是否可以进入 Y/N]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sfgc_entry = 'N'                  #只有使用维护判定结果按钮才能进单身2  
#判定结果单身的锁定cursor放这里定义是因为设计器有bug，若放在asrt336_input_sfgc()里定义，会变成在asrt336_lock_b()之后定义cursor，编译报asrt336_bcl21还未定义
#但是设计器的FUNCTION list功能不全，没办法把自定义的FUNCTION提到前面去
   LET g_forupd_sql = "SELECT sfgcseq,sfgc001,'',sfgc002,sfgc003,sfgc004,sfgc005,'',sfgc006,sfgcsite  
       FROM sfgc_t WHERE sfgcent=? AND sfgcdocno=? AND sfgcseq=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asrt336_bcl21 CURSOR FROM g_forupd_sql]]>
  </point>
  <point name="input.a.imaal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.a.imaal004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.a.oobxl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.oocql004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.ooeal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.page1.sfgb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                
            IF NOT cl_null(g_sfgb_d[l_ac].sfgb001) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_sfgb_d[l_ac].sfgb001 <> g_sfgb_d_t.sfgb001) THEN
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_sfgb_d[l_ac].sfgb001
			      
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oocq002_1053") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
			      
                  ELSE
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
            

               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfgb_d[l_ac].sfgb001
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='1053' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfgb_d[l_ac].sfgb001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfgb_d[l_ac].sfgb001_desc
]]>
  </point>
  <point name="input.a.page1.sfgb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                
            IF NOT cl_null(g_sfgb_d[l_ac].sfgb002) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.sfgb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.page1.sfgbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a05產生
            IF  g_sfga_m.sfgadocno IS NOT NULL AND g_sfgb_d[g_detail_idx].sfgbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfga_m.sfgadocno != g_sfgadocno_t OR g_sfgb_d[g_detail_idx].sfgbseq != g_sfgb_d_t.sfgbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfgb_t WHERE "||"sfgbent = '" ||g_enterprise|| "' AND "||"sfgbdocno = '"||g_sfga_m.sfgadocno ||"' AND "|| "sfgbseq = '"||g_sfgb_d[g_detail_idx].sfgbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.sfgbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.page2.sfgc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc001) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_sfgb2_d[l_ac].sfgc001 <> g_sfgb2_d_t.sfgc001) THEN
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_sfgb2_d[l_ac].sfgc001
			      
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oocq002_1053") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
			      
                  ELSE
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfgb2_d[l_ac].sfgc001
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='1053' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfgb2_d[l_ac].sfgc001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfgb2_d[l_ac].sfgc001_desc
]]>
  </point>
  <point name="input.a.page2.sfgc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc002) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_sfgb2_d[l_ac].sfgc002 <> g_sfgb2_d_t.sfgc002) THEN
                  IF NOT asrt336_set_sfga009() THEN
                     LET g_sfgb2_d[l_ac].sfgc002 = g_sfgb2_d_t.sfgc002
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF               ]]>
  </point>
  <point name="input.a.page2.sfgc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc003) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_sfgb2_d_t.sfgc003 IS NULL OR g_sfgb2_d[l_ac].sfgc003 <> g_sfgb2_d_t.sfgc003)) THEN  
                  IF NOT asrt336_set_sfga009() THEN
                     LET g_sfgb2_d[l_ac].sfgc003 = g_sfgb2_d_t.sfgc003
                     NEXT FIELD CURRENT
                  END IF
               END IF 
            END IF 
]]>
  </point>
  <point name="input.a.page2.sfgc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asrt336_set_no_entry_b(l_cmd)  
            CALL asrt336_set_required()         ]]>
  </point>
  <point name="input.a.page2.sfgc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgc005) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_sfgb2_d_t.sfgc005 IS NULL OR g_sfgb2_d[l_ac].sfgc005 <> g_sfgb2_d_t.sfgc005)) THEN  
                  IF g_sfgb2_d[l_ac].sfgc004 = '1' THEN               
#此段落由子樣板a19產生
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_sfgb2_d[l_ac].sfgc005
                     LET g_chkparam.arg2 = cl_get_today()
			         
                        
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_ooeg001_2") THEN
                        #檢查成功時後續處理
                        #LET  = g_chkparam.return1
                        #DISPLAY BY NAME 
			         
                     ELSE
                        #檢查失敗時後續處理
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  IF g_sfgb2_d[l_ac].sfgc004 = '2' THEN               
#此段落由子樣板a19產生
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
                     
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_sfgb2_d[l_ac].sfgc005
			         
                        
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_pmaa001_1") THEN
                        #檢查成功時後續處理
                        #LET  = g_chkparam.return1
                        #DISPLAY BY NAME 
			         
                     ELSE
                        #檢查失敗時後續處理
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            

            END IF 
            IF g_sfgb2_d[l_ac].sfgc004 = '1' THEN 
               CALL s_desc_get_department_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc            
            END IF
            IF g_sfgb2_d[l_ac].sfgc004 = '2' THEN 
               CALL s_desc_get_trading_partner_full_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc
            END IF            
            IF g_sfgb2_d[l_ac].sfgc004 = '3' THEN 
               LET g_sfgb2_d[l_ac].sfgc005_desc = NULL
            END IF
            DISPLAY BY NAME g_sfgb2_d[l_ac].sfgc005_desc]]>
  </point>
  <point name="input.a.page2.sfgc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.page2.sfgcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                
            IF NOT cl_null(g_sfgb2_d[l_ac].sfgcseq) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_sfga_m.sfgadocno IS NOT NULL AND g_sfgb2_d[g_detail_idx].sfgcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfga_m.sfgadocno != g_sfgadocno_t OR g_sfgb2_d[g_detail_idx].sfgcseq != g_sfgb2_d_t.sfgcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfgc_t WHERE "||"sfgcent = '" ||g_enterprise|| "' AND "||"sfgcdocno = '"||g_sfga_m.sfgadocno ||"' AND "|| "sfgcseq = '"||g_sfgb2_d[g_detail_idx].sfgcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.sfgcsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.a.sfga001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_sfga_m.sfga001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m_t.sfga001 IS NULL OR g_sfga_m.sfga001 != g_sfga_m_t.sfga001)) THEN 
                  IF NOT s_date_chk_close(g_sfga_m.sfga001,'1') THEN

                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF             ]]>
  </point>
  <point name="input.a.sfga002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfga_m.sfga002) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_sfga_m_t.sfga002 IS NULL OR g_sfga_m.sfga002 <> g_sfga_m_t.sfga002)) THEN
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_sfga_m.sfga002
   
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
   
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfga_m.sfga002 = g_sfga_m_t.sfga002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            

            END IF 
            LET g_sfga_m.sfga002_desc = s_desc_get_person_desc(g_sfga_m.sfga002)
            DISPLAY BY NAME g_sfga_m.sfga002_desc]]>
  </point>
  <point name="input.a.sfga003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_sfga_m.sfga003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m_t.sfga003 IS NULL OR g_sfga_m.sfga003 != g_sfga_m_t.sfga003)) THEN 
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_sfga_m.sfga003
                  LET g_chkparam.arg2 = g_sfga_m.sfgadocdt
			      
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooeg001_3") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
			      
                  ELSE
                     #檢查失敗時後續處理
                     LET g_sfga_m.sfga003 = g_sfga_m_t.sfga003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            

            END IF 
            LET g_sfga_m.sfga003_desc = s_desc_get_department_desc(g_sfga_m.sfga003)
            DISPLAY BY NAME g_sfga_m.sfga003_desc]]>
  </point>
  <point name="input.a.sfga004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#当工单栏位是新增或者修改后，如果对应的run card是唯一的，则预设到run card栏位
#预设工单对应的其他资料
            IF NOT cl_null(g_sfga_m.sfga004) THEN 
               IF p_cmd = 'a' OR (p_cmd ='u' AND (g_sfga_m_t.sfga004 IS NULL OR g_sfga_m.sfga004 != g_sfga_m_t.sfga004)) THEN 
                  IF NOT s_asft335_chk_sffb0078('3',g_sfga_m.sfga004,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007) THEN
                     LET g_sfga_m.sfga004 = g_sfga_m_t.sfga004
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
                           
                  CALL s_asft335_default_sffb056('3',g_sfga_m.sfga004,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007)
                  RETURNING g_sfga_m.sfaa010,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007,l_sffb009
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_sfga_m.sfga006
                  CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_sfga_m.sfga006_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_sfga_m.sfga006_desc                   
#display工单对应料件的品名规格                                   
                  CALL s_desc_get_item_desc(g_sfga_m.sfaa010)
                  RETURNING g_sfga_m.imaal003,g_sfga_m.imaal004 
                  DISPLAY BY NAME g_sfga_m.sfaa010,g_sfga_m.imaal003,g_sfga_m.imaal004,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007
               END IF
            END IF
            CALL asrt336_set_no_entry(p_cmd)
            CALL asrt336_set_required()]]>
  </point>
  <point name="input.a.sfga005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#当工单栏位是新增或者修改后，如果对应的run card是唯一的，则预设到run card栏位
#预设工单对应的其他资料
            IF NOT cl_null(g_sfga_m.sfga005) THEN 
               IF p_cmd = 'a' OR (p_cmd ='u' AND (g_sfga_m_t.sfga005 IS NULL OR g_sfga_m.sfga005 != g_sfga_m_t.sfga005)) THEN 
                  IF NOT s_asft335_chk_sffb0078('3',g_sfga_m.sfga004,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007) THEN
                     LET g_sfga_m.sfga005 = g_sfga_m_t.sfga005
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
                           
                  CALL s_asft335_default_sffb056('3',g_sfga_m.sfga004,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007)
                  RETURNING g_sfga_m.sfaa010,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007,l_sffb009
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_sfga_m.sfga006
                  CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_sfga_m.sfga006_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_sfga_m.sfga006_desc                   
#display工单对应料件的品名规格                                   
                  CALL s_desc_get_item_desc(g_sfga_m.sfaa010)
                  RETURNING g_sfga_m.imaal003,g_sfga_m.imaal004 
                  DISPLAY BY NAME g_sfga_m.sfaa010,g_sfga_m.imaal003,g_sfga_m.imaal004,g_sfga_m.sfga005,g_sfga_m.sfga006,g_sfga_m.sfga007
               END IF
            END IF]]>
  </point>
  <point name="input.a.sfga006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#当工单栏位是新增或者修改后，如果对应的run card是唯一的，则预设到run card栏位
#预设工单对应的其他资料
            IF NOT cl_null(g_sfga_m.sfga006) THEN 
               IF p_cmd = 'a' OR (p_cmd ='u' AND (g_sfga_m_t.sfga006 IS NULL OR g_sfga_m.sfga006 != g_sfga_m_t.sfga006)) THEN 
                  CALL s_asrt335_chk_sffb('3',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,'') RETURNING l_success
                  IF NOT l_success THEN
                     LET g_sfga_m.sfga006 = g_sfga_m_t.sfga006
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
                           
#                  CALL s_asft335_default_sffb056('3','','',g_sfga_m.sfga006,g_sfga_m.sfga007)
#                  RETURNING g_sfga_m.sfga012,l_sffb005,g_sfga_m.sfga006,g_sfga_m.sfga007,l_sffb009                
#display工单对应料件的品名规格                                   
#                  CALL s_desc_get_item_desc(g_sfga_m.sfga012)
#                  RETURNING g_sfga_m.imaal003,g_sfga_m.imaal004 
#                  DISPLAY BY NAME g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004,g_sfga_m.sfga006,g_sfga_m.sfga007
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfga_m.sfga006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfga_m.sfga006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfga_m.sfga006_desc   ]]>
  </point>
  <point name="input.a.sfga007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#当工单栏位是新增或者修改后，如果对应的run card是唯一的，则预设到run card栏位
#预设工单对应的其他资料
            IF NOT cl_null(g_sfga_m.sfga007) THEN 
               IF p_cmd = 'a' OR (p_cmd ='u' AND (g_sfga_m_t.sfga007 IS NULL OR g_sfga_m.sfga007 != g_sfga_m_t.sfga007)) THEN 
                  CALL s_asrt335_chk_sffb('3',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_sfga_m.sfga007 = g_sfga_m_t.sfga007
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF                                     ]]>
  </point>
  <point name="input.a.sfga008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                
            IF NOT cl_null(g_sfga_m.sfga008) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_sfga_m_t.sfga008 IS NULL OR g_sfga_m.sfga008 <> g_sfga_m_t.sfga008)) THEN
                  CALL s_asrt335_set_qty('','','3',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga007,g_sfga_m.sfga008) 
                   RETURNING l_qty,l_sffb016
                  IF NOT s_asrt335_chk_qty(g_sfga_m.sfgadocno,'',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga007,g_sfga_m.sfga008,0,0,l_qty) THEN 
                     LET g_sfga_m.sfga008 = g_sfga_m_t.sfga008
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi200_get_slip(g_sfga_m.sfgadocno) RETURNING l_success,g_doc_slip
                  IF cl_get_doc_para(g_enterprise,g_site,g_doc_slip,'D-MFG-0060') = 'N' THEN    #不使用判定流程
                     LET g_sfga_m.sfga009 = g_sfga_m.sfga008
                  END IF
               END IF
            END IF 
            CALL asrt336_set_no_entry(p_cmd)
]]>
  </point>
  <point name="input.a.sfga009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT s_asft335_chk_qty('','',g_sfga_m.sfga006,g_sfga_m.sfga007,0,g_sfga_m.sfga009,0,0,g_sfga_m.sfga008) THEN
               LET g_sfga_m.sfga009 = g_sfga_m_t.sfga009
               NEXT FIELD CURRENT
            END IF            ]]>
  </point>
  <point name="input.a.sfga010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.sfga011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_sfga_m.sfga011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m_t.sfga011 IS NULL OR g_sfga_m.sfga011 != g_sfga_m_t.sfga011)) THEN 
               #判断生產計畫+生產料號+BOM特性+產品特徵是否存在報工日期同年月的asrt300內
                  CALL s_asrt335_chk_sffb('3',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,'','') RETURNING l_success
                  IF NOT l_success THEN
                     LET g_sfga_m.sfga011=g_sfga_m_t.sfga011
                     NEXT FIELD CURRENT
                  ELSE 
                     #如果生產計劃只有一個料號，帶出該料號+BOM特徵+產品特徵作為默認值
                     LET l_year=YEAR(g_sfga_m.sfgadocdt)
                     LET l_month=MONTH(g_sfga_m.sfgadocdt)
                     SELECT COUNT(*) INTO l_count FROM srab_t 
                        LEFT JOIN sraa_t ON sraaent=srabent AND sraasite=srabsite AND sraa001=srab001 AND sraa002=srab002 AND sraa003=srab003
                        WHERE srabent=g_enterprise AND srabsite=g_site AND srab001=g_sfga_m.sfga011 AND srab002=l_year AND srab003=l_month AND sraastus='Y'
                     
                     IF l_count=1 THEN
                        SELECT srab004,srab005,srab006 INTO g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014 
                           FROM srab_t 
                           LEFT JOIN sraa_t ON sraaent=srabent AND sraasite=srabsite AND sraa001=srab001 AND sraa002=srab002 AND sraa003=srab003
                           WHERE srabsnt=g_enterprise AND srabsite=g_site AND srab001=g_sfga_m.sfga011 AND srab002=l_year AND srab003=l_month AND sraastus='Y'
                     END IF
                     
                  END IF
                  
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfga_m.sfga011
            CALL ap_ref_array2(g_ref_fields,"SELECT srza002 FROM srza_t WHERE srzaent='"||g_enterprise||"' AND srza001=? ","") RETURNING g_rtn_fields
            LET g_sfga_m.sfga011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfga_m.sfga011_desc

]]>
  </point>
  <point name="input.a.sfga012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_sfga_m.sfga012) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m_t.sfga012 IS NULL OR g_sfga_m.sfga012 != g_sfga_m_t.sfga012)) THEN 
#                  INITIALIZE g_chkparam.* TO NULL
#
#                  #設定g_chkparam.*的參數
#                  LET g_chkparam.arg1 = g_sfga_m.sfga012
   
   
                  #呼叫檢查存在並帶值的library
#                  IF cl_chk_exist("v_imaf001_1") THEN
                     #檢查成功時後續處理

#                  ELSE
                     #檢查失敗時後續處理
#                     LET g_sfga_m.sfga012=g_sfga_m_t.sfga012
#                     NEXT FIELD CURRENT        
#                  END IF

                  CALL s_asrt335_chk_sffb('3',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,'','') RETURNING l_success
                  IF NOT l_success THEN
                     LET g_sfga_m.sfga012=g_sfga_m_t.sfga012
                     NEXT FIELD CURRENT
                  END IF
               END IF
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_sfga_m.sfga012
               CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_sfga_m.imaal003 = '', g_rtn_fields[1] , ''
               LET g_sfga_m.imaal004 = '', g_rtn_fields[2] , ''
               DISPLAY BY NAME g_sfga_m.imaal003,g_sfga_m.imaal004
            END IF]]>
  </point>
  <point name="input.a.sfga013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_sfga_m.sfga013) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m_t.sfga013 IS NULL OR g_sfga_m.sfga013 != g_sfga_m_t.sfga013)) THEN 
               #判断生產計畫+生產料號+BOM特性+產品特徵是否存在報工日期同年月的asrt300內
                  CALL s_asrt335_chk_sffb('3',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,'','') RETURNING l_success
                  IF NOT l_success THEN
                     LET g_sfga_m.sfga013=g_sfga_m_t.sfga013
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF]]>
  </point>
  <point name="input.a.sfga014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_sfga_m.sfga014) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m_t.sfga014 IS NULL OR g_sfga_m.sfga014 != g_sfga_m_t.sfga014)) THEN 
               #判断生產計畫+生產料號+BOM特性+產品特徵是否存在報工日期同年月的asrt300內
                  CALL s_asrt335_chk_sffb('3',g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,'','') RETURNING l_success
                  IF NOT l_success THEN
                     LET g_sfga_m.sfga014=g_sfga_m_t.sfga014
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF]]>
  </point>
  <point name="input.a.sfgadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_sfga_m.sfgadocdt) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m_t.sfgadocdt IS NULL OR g_sfga_m.sfgadocdt != g_sfga_m_t.sfgadocdt)) THEN 
                  IF NOT s_date_chk_close(g_sfga_m.sfgadocdt,'1') THEN

                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF            ]]>
  </point>
  <point name="input.a.sfgadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                            #此段落由子樣板a05產生
            IF  NOT cl_null(g_sfga_m.sfgadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfga_m.sfgadocno != g_sfgadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfga_t WHERE "||"sfgaent = '" ||g_enterprise|| "' AND "||"sfgadocno = '"||g_sfga_m.sfgadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_sfga_m.sfgadocno) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_sfga_m_t.sfgadocno IS NULL OR g_sfga_m.sfgadocno <> g_sfga_m_t.sfgadocno)) THEN  
#有单别检查单别，是完整单号检查完整单号，传入完整单号的话，会截取单别做单别合法性检查               
                  IF NOT s_aooi200_chk_docno(g_site,g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_prog) THEN
                     LET g_sfga_m.sfgadocno = g_sfgadocno_t
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF 
            LET g_sfga_m.sfgadocno_desc = s_aooi200_get_slip_desc(g_sfga_m.sfgadocno)
            DISPLAY BY NAME g_sfga_m.sfgadocno_desc

]]>
  </point>
  <point name="input.a.sfgasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.a.sfgastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.after_define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.b.imaal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.b.imaal004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.b.oobxl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.oocql004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.ooeal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page1.sfgb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page1.sfgb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page1.sfgb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page1.sfgbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_sfgb_d[l_ac].sfgbseq IS NULL OR g_sfgb_d[l_ac].sfgbseq = 0 THEN
               SELECT MAX(sfgbseq)+1 INTO g_sfgb_d[l_ac].sfgbseq
                 FROM sfgb_t
                WHERE sfgbent   = g_enterprise 
                  AND sfgbdocno = g_sfga_m.sfgadocno 

            END IF
            IF g_sfgb_d[l_ac].sfgbseq IS NULL THEN
               LET g_sfgb_d[l_ac].sfgbseq = 1
            END IF                                                 ]]>
  </point>
  <point name="input.b.page1.sfgbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page2.sfgc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page2.sfgc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page2.sfgc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page2.sfgc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asrt336_set_entry_b(l_cmd)  
            CALL asrt336_set_no_required()            ]]>
  </point>
  <point name="input.b.page2.sfgc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page2.sfgc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.page2.sfgcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                IF g_sfgb2_d[l_ac].sfgcseq IS NULL OR g_sfgb2_d[l_ac].sfgcseq = 0 THEN
               SELECT MAX(sfgcseq)+1 INTO g_sfgb2_d[l_ac].sfgcseq
                 FROM sfgc_t
                WHERE sfgcent   = g_enterprise 
                  AND sfgcdocno = g_sfga_m.sfgadocno 

            END IF
            IF g_sfgb2_d[l_ac].sfgcseq IS NULL THEN
               LET g_sfgb2_d[l_ac].sfgcseq = 1
            END IF                                                            ]]>
  </point>
  <point name="input.b.page2.sfgcsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.b.sfga001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfga002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfga003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfga004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#根据工单制程否决定作业编号和制程序栏位的动态开启关闭，这里无条件的开启
            CALL asrt336_set_entry(p_cmd) 
            CALL asrt336_set_no_required()            ]]>
  </point>
  <point name="input.b.sfga005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfga006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfga007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfga008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asrt336_set_entry(p_cmd)                        ]]>
  </point>
  <point name="input.b.sfga009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfga010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfgadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfgadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfgasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.b.sfgastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                                ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_sfgb_d[l_ac].sfgbsite = g_site                                                                                  ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[              ]]>
  </point>
  <point name="input.body.before_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                     ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_sfgb_d[l_ac].sfgbseq) THEN
               SELECT MAX(sfgbseq)+1 INTO g_sfgb_d[l_ac].sfgbseq
                    FROM sfgb_t
                   WHERE sfgbent   = g_enterprise 
                     AND sfgbdocno = g_sfga_m.sfgadocno 
               IF g_sfgb_d[l_ac].sfgbseq IS NULL THEN
                  LET g_sfgb_d[l_ac].sfgbseq = 1
               END IF      
            END IF ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                                                ]]>
  </point>
  <point name="input.body2.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body2.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.body2.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#参数不使用判定流程不能进入
            CALL s_aooi200_get_slip(g_sfga_m.sfgadocno) RETURNING l_success,g_doc_slip
            IF cl_get_doc_para(g_enterprise,g_site,g_doc_slip,'D-MFG-0060') = 'N' OR g_sfga_m.sfgastus <> 'Y' THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'asf-00259'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               EXIT DIALOG
            END IF          ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_sfgb2_d[l_ac].sfgc002 = '1'
            LET g_sfgb2_d[l_ac].sfgcsite = g_site
            CALL asrt336_set_no_required_b()
            CALL asrt336_set_required_b()]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL asrt336_set_no_required_b()
            CALL asrt336_set_required_b()                                                                                                ]]>
  </point>
  <point name="input.body2.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_sfgb2_d[l_ac].sfgc004 = '1'                                                                                     ]]>
  </point>
  <point name="input.body2.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.body2.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.c.imaal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.c.imaal004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.c.oobxl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.oocql004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.ooeal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page1.sfgb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfgb_d[l_ac].sfgb001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1053" 

            CALL q_oocq002()                                #呼叫開窗

            LET g_sfgb_d[l_ac].sfgb001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfgb_d[l_ac].sfgb001 TO sfgb001              #顯示到畫面上

            NEXT FIELD sfgb001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.sfgb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfgb_d[l_ac].sfgb002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1053" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_sfgb_d[l_ac].sfgb002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfgb_d[l_ac].sfgb002 TO sfgb002              #顯示到畫面上

            NEXT FIELD sfgb002                          #返回原欄位

                                                            ]]>
  </point>
  <point name="input.c.page1.sfgb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page1.sfgbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page1.sfgbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page2.sfgc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfgb2_d[l_ac].sfgc001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "1053" 

            CALL q_oocq002()                                #呼叫開窗

            LET g_sfgb2_d[l_ac].sfgc001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfgb2_d[l_ac].sfgc001 TO sfgc001              #顯示到畫面上

            NEXT FIELD sfgc001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.sfgc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page2.sfgc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page2.sfgc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page2.sfgc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfgb2_d[l_ac].sfgc005             #給予default值

            #給予arg
            IF g_sfgb2_d[l_ac].sfgc004 ='1' THEN
               LET g_qryparam.arg1 = g_sfga_m.sfgadocdt
               CALL q_ooeg001()                                              #呼叫開窗
               LET g_sfgb2_d[l_ac].sfgc005 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfgb2_d[l_ac].sfgc005 TO sfgc005                    #顯示到畫面上
            END IF
            IF g_sfgb2_d[l_ac].sfgc004 ='2' THEN
               LET g_qryparam.arg1 = " ('1','3')"                            #交易對象類型
               CALL q_pmaa001_1()                                            #呼叫開窗
               LET g_sfgb2_d[l_ac].sfgc005 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_sfgb2_d[l_ac].sfgc005 TO sfgc005                    #顯示到畫面上
            END IF

            NEXT FIELD sfgc005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.sfgc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page2.sfgcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.page2.sfgcsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfaa010             #給予default值

            #給予arg

            CALL q_imaa001_9()                                #呼叫開窗

            LET g_sfga_m.sfaa010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfga_m.sfaa010 TO sfaa010              #顯示到畫面上

            NEXT FIELD sfaa010                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfga001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.sfga002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga002             #給予default值

            #給予arg

            CALL q_ooag001_4()                                #呼叫開窗

            LET g_sfga_m.sfga002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfga_m.sfga002 TO sfga002              #顯示到畫面上
            LET g_sfga_m.sfga002_desc = s_desc_get_person_desc(g_sfga_m.sfga002)
            DISPLAY BY NAME g_sfga_m.sfga002_desc
            NEXT FIELD sfga002                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfga003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_sfga_m.sfgadocdt

            CALL q_ooeg001()                                #呼叫開窗

            LET g_sfga_m.sfga003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfga_m.sfga003 TO sfga003              #顯示到畫面上
            LET g_sfga_m.sfga003_desc = s_desc_get_department_desc(g_sfga_m.sfga003)
            DISPLAY BY NAME g_sfga_m.sfga003_desc
            NEXT FIELD sfga003                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfga004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = 'F'
            CALL q_sfaadocno_1()

            LET g_sfga_m.sfga004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfga_m.sfga004 TO sfga004              #顯示到畫面上

            NEXT FIELD sfga004                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfga005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = g_sfga_m.sfga004

            CALL q_sfca001()                                #呼叫開窗

            LET g_sfga_m.sfga005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfga_m.sfga005 TO sfga005              #顯示到畫面上

            NEXT FIELD sfga005                          #返回原欄位
]]>
  </point>
  <point name="input.c.sfga006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga006             #給予default值
            LET g_qryparam.default2 = g_sfga_m.sfga007             #製程序

            #給予arg
            LET g_qryparam.arg1 = g_site
#            LET g_qryparam.arg2 = g_sfga_m.sfga004
#            LET g_qryparam.arg3 = g_sfga_m.sfga005

            CALL q_sfcb003_4()                                #呼叫開窗

            LET g_sfga_m.sfga006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_sfga_m.sfga007 = g_qryparam.return3 #製程序

            DISPLAY g_sfga_m.sfga006 TO sfga006              #顯示到畫面上
            DISPLAY g_sfga_m.sfga007 TO sfga007 #製程序
#            DISPLAY g_sfga_m.sfga004 TO sfga004              #顯示到畫面上
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfga_m.sfga006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfga_m.sfga006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfga_m.sfga006_desc   
            NEXT FIELD CURRENT                                #返回原欄位
]]>
  </point>
  <point name="input.c.sfga007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga006             #給予default值
            LET g_qryparam.default2 = g_sfga_m.sfga007             #製程序

            #給予arg
            LET g_qryparam.arg1 = g_site
#            LET g_qryparam.arg2 = g_sfga_m.sfga004
#            LET g_qryparam.arg3 = g_sfga_m.sfga005

            CALL q_sfcb003_4()                                       #呼叫開窗

            LET g_sfga_m.sfga006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_sfga_m.sfga007 = g_qryparam.return3              #製程序

            DISPLAY g_sfga_m.sfga006 TO sfga006                    #顯示到畫面上
            DISPLAY g_sfga_m.sfga007 TO sfga007                    #製程序

            NEXT FIELD sfga007                                     #返回原欄位]]>
  </point>
  <point name="input.c.sfga008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.sfga009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.sfga010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.sfga011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga011             #給予default值

            #給予arg
            IF NOT cl_null(g_sfga_m.sfgadocdt) THEN
               LET l_year = YEAR(g_sfga_m.sfgadocdt)
               LET l_month = MONTH(g_sfga_m.sfgadocdt)
               LET g_qryparam.where = " sraa002 ='",l_year,"' AND sraa003 = '",l_month,"'"
            END IF


            CALL q_sraa001()                                #呼叫開窗

            LET g_sfga_m.sfga011 = g_qryparam.return1              

            DISPLAY g_sfga_m.sfga011 TO sfga011              #

            NEXT FIELD sfga011                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfga012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga012             #給予default值
            IF NOT cl_null(g_sfga_m.sfgadocdt) THEN
               LET l_year = YEAR(g_sfga_m.sfgadocdt)
               LET l_month = MONTH(g_sfga_m.sfgadocdt)
               LET g_qryparam.where = " srab002 ='",l_year,"' AND srab003 = '",l_month,"'"
            END IF
            IF NOT cl_null(g_sfga_m.sfga011) THEN
               LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"'"
            END IF
            IF NOT cl_null(g_sfga_m.sfgadocdt) AND NOT cl_null(g_sfga_m.sfga011) THEN
               LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab002 ='",l_year,"' AND srab003 = '",l_month,"'"
            END IF
            CALL q_srab004()                                #呼叫開窗

            LET g_sfga_m.sfga012 = g_qryparam.return1              
            LET g_sfga_m.sfga013 = g_qryparam.return2
            LET g_sfga_m.sfga014 = g_qryparam.return3
            #LET g_sfga_m.bmaa002 = g_qryparam.return4 
            DISPLAY g_sfga_m.sfga012 TO sfga012              #
            #DISPLAY g_sfga_m.imaal004 TO imaal004 #規格
            #DISPLAY g_sfga_m.bmaa001 TO bmaa001 #主件料號
            #DISPLAY g_sfga_m.bmaa002 TO bmaa002 #特性
            NEXT FIELD sfga012                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfga013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga013             #給予default值

            #給予arg
            IF NOT cl_null(g_sfga_m.sfgadocdt) THEN
               LET l_year = YEAR(g_sfga_m.sfgadocdt)
               LET l_month = MONTH(g_sfga_m.sfgadocdt)
               LET g_qryparam.where = " srab002 ='",l_year,"' AND srab003 = '",l_month,"'"
               IF NOT cl_null(g_sfga_m.sfga012) THEN
                  LET g_qryparam.where = " srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab004 = '",g_sfga_m.sfga012,"'"
               END IF
            END IF
            IF NOT cl_null(g_sfga_m.sfga011) THEN
               LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"'"
               IF NOT cl_null(g_sfga_m.sfga012) THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"'  AND srab004 = '",g_sfga_m.sfga012,"'"
               END IF
            END IF
            IF NOT cl_null(g_sfga_m.sfgadocdt) AND NOT cl_null(g_sfga_m.sfga011) THEN
               LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab002 ='",l_year,"' AND srab003 = '",l_month,"'"
               IF NOT cl_null(g_sfga_m.sfga012) THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab004='",g_sfga_m.sfga012,"'"
               END IF
            END IF
            CALL q_srab004()                                #呼叫開窗
            IF cl_null(g_sfga_m.sfga012) THEN
               LET g_sfga_m.sfga012 = g_qryparam.return1
            END IF
            LET g_sfga_m.sfga013 = g_qryparam.return2
            LET g_sfga_m.sfga014 = g_qryparam.return3

            DISPLAY g_sfga_m.sfga013 TO sfga013              #顯示到畫面上

            LET g_qryparam.where = ""
            NEXT FIELD sfga013                         #返回原欄位           

                        #返回原欄位

]]>
  </point>
  <point name="input.c.sfga014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfga014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_sfga_m.sfga012 #s
            IF NOT cl_null(g_sfga_m.sfgadocdt) THEN
               LET l_year = YEAR(g_sfga_m.sfgadocdt)
               LET l_month = MONTH(g_sfga_m.sfgadocdt)
               LET g_qryparam.where = " srab002 ='",l_year,"' AND srab003 = '",l_month,"'"
               IF NOT cl_null(g_sfga_m.sfga012) THEN
                  LET g_qryparam.where = " srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab004 = '",g_sfga_m.sfga012,"'"  
               END IF
               IF g_sfga_m.sfga013 IS NOT NULL THEN
                  LET g_qryparam.where = " srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab005 = '",g_sfga_m.sfga013,"'"  
               END IF
               IF NOT cl_null(g_sfga_m.sfga012) AND g_sfga_m.sfga013 IS NOT NULL THEN
                  LET g_qryparam.where = " srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab004 = '",g_sfga_m.sfga012,"' AND srab005 = '",g_sfga_m.sfga013,"'"  
               END IF
            END IF
            IF NOT cl_null(g_sfga_m.sfga011) THEN
               LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"'"
               IF NOT cl_null(g_sfga_m.sfga012) THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab004 = '",g_sfga_m.sfga012,"'"  
               END IF
               IF g_sfga_m.sfga013 IS NOT NULL THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab005 = '",g_sfga_m.sfga013,"'"  
               END IF
               IF NOT cl_null(g_sfga_m.sfga012) AND g_sfga_m.sfga013 IS NOT NULL THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab004 = '",g_sfga_m.sfga012,"' AND srab005 = '",g_sfga_m.sfga013,"'"  
               END IF
            END IF
            IF NOT cl_null(g_sfga_m.sfgadocdt) AND NOT cl_null(g_sfga_m.sfga011) THEN
               LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab002 ='",l_year,"' AND srab003 = '",l_month,"'"
               IF NOT cl_null(g_sfga_m.sfga012) THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab004 = '",g_sfga_m.sfga012,"'"  
               END IF
               IF g_sfga_m.sfga013 IS NOT NULL THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab005 = '",g_sfga_m.sfga013,"'"  
               END IF
               IF NOT cl_null(g_sfga_m.sfga012) AND g_sfga_m.sfga013 IS NOT NULL THEN
                  LET g_qryparam.where = " srab001 = '",g_sfga_m.sfga011,"' AND srab002 ='",l_year,"' AND srab003 = '",l_month,"' AND srab004 = '",g_sfga_m.sfga012,"' AND srab005 = '",g_sfga_m.sfga013,"'"  
               END IF
            END IF
            CALL q_srab004()                                #呼叫開窗
            IF cl_null(g_sfga_m.sfga012) THEN
               LET g_sfga_m.sfga012 = g_qryparam.return1
            END IF
            IF cl_null(g_sfga_m.sfga013) THEN
               LET g_sfga_m.sfga013 = g_qryparam.return2
            END IF
            LET g_sfga_m.sfga014 = g_qryparam.return3
            DISPLAY g_sfga_m.sfga014 TO sfga014              #
            LET g_qryparam.where = ""
            NEXT FIELD sfga014                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfgadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.sfgadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfga_m.sfgadocno             #給予default值

            #給予arg
            SELECT ooef004 INTO l_ooef004 
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_site
               
            LET g_qryparam.arg1 = l_ooef004          #
            LET g_qryparam.arg2 = g_prog      #
            CALL q_ooba002_1()                                      #呼叫開窗

            LET g_sfga_m.sfgadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfga_m.sfgadocno TO sfgadocno              #顯示到畫面上
            LET g_sfga_m.sfgadocno_desc = s_aooi200_get_slip_desc(g_sfga_m.sfgadocno)
            DISPLAY BY NAME g_sfga_m.sfgadocno_desc
            NEXT FIELD sfgadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.sfgasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.c.sfgastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_sfaa061             LIKE sfaa_t.sfaa061 
   DEFINE  l_sffb009             LIKE sffb_t.sffb009
   DEFINE  l_qty                 LIKE sfga_t.sfga008
   DEFINE  l_sfgc003_sum         LIKE sfgc_t.sfgc003
   DEFINE  l_sffb016             LIKE sffb_t.sffb016
   DEFINE  l_sffb005             LIKE sffb_t.sffb005   #暫時定義，待sub函數完成即可清除   
   DEFINE  l_success             LIKE type_t.num5   
   DEFINE l_year                LIKE type_t.num5
   DEFINE l_month               LIKE type_t.num5]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.g.imaal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.g.imaal004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.g.oobxl003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.oocql004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.ooeal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page1.sfgb001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page1.sfgb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page1.sfgb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page1.sfgbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page1.sfgbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.page2.sfgcsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.g.sfga001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfga010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfgadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfgadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfgasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.g.sfgastus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_site,g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_prog) RETURNING l_success,g_sfga_m.sfgadocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_sfga_m.sfgadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF  
               IF g_sfga_m.sfga006 IS NULL THEN LET g_sfga_m.sfga006 = ' ' END IF
               IF g_sfga_m.sfga007 IS NULL THEN LET g_sfga_m.sfga007 = ' ' END IF               ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_sfga_m.sfga006 IS NULL THEN LET g_sfga_m.sfga006 = ' ' END IF
               IF g_sfga_m.sfga007 IS NULL THEN LET g_sfga_m.sfga007 = ' ' END IF                                                                                                                        ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #栏位預設值
            
            
            LET g_sfga_m.sfgasite = g_site 
            CALL asrt336_set_no_required()
            CALL asrt336_set_required()            ]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_asrt335_default_sffb('3','','','','','','') RETURNING 
               g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga007,g_sfga_m.sfga008,l_sffb009
      LET g_sfga_m.sfgadocdt = cl_get_today()
      LET g_sfga_m.sfga001 = cl_get_today()
      LET g_sfga_m.sfga002 = g_user
      LET g_sfga_m.sfga002_desc = s_desc_get_person_desc(g_sfga_m.sfga002)
      DISPLAY BY NAME g_sfga_m.sfga002_desc
      LET g_sfga_m.sfga003 = g_dept
      LET g_sfga_m.sfga003_desc = s_desc_get_department_desc(g_sfga_m.sfga003)
      DISPLAY BY NAME g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc
      LET g_sfga_m.sfga008 = 0
      LET g_sfga_m.sfgastus = 'N'
      LET g_sfga_m_t.* = g_sfga_m.*  ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_sffb009             LIKE sffb_t.sffb009                        ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="insert_b.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="insert_b.m_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #action进入维护判定结果
   LET ls_group = "maintain_sfgc"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN asrt336_bcl21 USING g_enterprise,
                                             g_sfga_m.sfgadocno,g_sfgb2_d[g_detail_idx].sfgcseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "asrt336_bcl21"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF                        ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="menu.maintain_sfgc" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_sfgc_entry = 'Y'
               CALL asrt336_input_sfgc()
               LET g_sfgc_entry = 'N']]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_wc = " sfgadocno = '",g_sfga_m.sfgadocno,"'"
              
               LET g_rep_wc = l_wc                                                                                                                        ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_sfga_m.sfgastus MATCHES "[DR]" THEN
         LET g_sfga_m.sfgastus = "N"
      END IF                                          ]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="modify.body.a_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="modify.body.b_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="modify.body.m_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_sfga_m.sfgastus <> 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00035'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF                        ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sfga_m.sfgacnfid = NULL 
   LET g_sfga_m.sfgacnfdt = NULL 
   LET g_sfga_m.sfgapstid = NULL 
   LET g_sfga_m.sfgapstdt = NULL                         ]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_asrt336_conf_chk(g_sfga_m.sfgadocno) RETURNING l_success
   IF NOT l_success THEN
      CLOSE asrt336_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
   CALL s_asrt336_conf_upd(g_sfga_m.sfgadocno) RETURNING l_success
   IF NOT l_success THEN
      CLOSE asrt336_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_sfga_m.sfgastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("sfga006,sfga007,sfga009",TRUE)      ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("sfgcseq,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006",TRUE)   ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#   SELECT sfaa061 INTO l_sfaa061 FROM sfaa_t
#    WHERE sfaaent   = g_enterprise
#      AND sfaasite  = g_site
#      AND sfaadocno = g_sfga_m.sfga004
      
   
#   IF l_sfaa061 = 'N' THEN
#      LET g_sfga_m.sfga006 = ' '
#      LET g_sfga_m.sfga007 = ' '
#      LET g_sfga_m.sfga006_desc = NULL
#      DISPLAY BY NAME g_sfga_m.sfga006_desc
#      CALL cl_set_comp_entry("sfga006,sfga007",FALSE)              
#   END IF
  
   IF g_sfga_m.sfgadocno IS NOT NULL THEN
      CALL s_aooi200_get_slip(g_sfga_m.sfgadocno) RETURNING l_success,g_doc_slip
      IF cl_get_doc_para(g_enterprise,g_site,g_doc_slip,'D-MFG-0060') = 'Y' THEN    #使用判定流程
         LET g_sfga_m.sfga009 = 0
         CALL cl_set_comp_entry("sfga009",FALSE)
      END IF 
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_sfaa061     LIKE sfaa_t.sfaa061   
   DEFINE l_success     LIKE type_t.num5   ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_sfgb2_d[l_ac].sfgc004 ='3' THEN
      LET g_sfgb2_d[l_ac].sfgc005 = NULL
      CALL cl_set_comp_entry("sfgc005",FALSE) 
   END IF   
   IF g_sfgc_entry = 'N' THEN
      CALL cl_set_comp_entry("sfgcseq,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006",FALSE)
   END IF    ]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            IF g_sfgb2_d[l_ac].sfgc004 = '1' THEN 
               CALL s_desc_get_department_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc            
            END IF
            IF g_sfgb2_d[l_ac].sfgc004 = '2' THEN 
               CALL s_desc_get_trading_partner_full_desc(g_sfgb2_d[l_ac].sfgc005) RETURNING g_sfgb2_d[l_ac].sfgc005_desc
            END IF            
            IF g_sfgb2_d[l_ac].sfgc004 = '3' THEN 
               LET g_sfgb2_d[l_ac].sfgc005_desc = NULL
            END IF
            DISPLAY BY NAME g_sfgb2_d[l_ac].sfgc005_desc
]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_sffb009   LIKE sffb_t.sffb009
   DEFINE l_sfga005   LIKE sfga_t.sfga005  
   DEFINE l_sfga006   LIKE sfga_t.sfga006
   DEFINE l_sfga007   LIKE sfga_t.sfga007   ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#            CALL s_asft335_default_sffb056('3','','',g_sfga_m.sfga006,g_sfga_m.sfga007)
#            RETURNING g_sfga_m.sfga012,l_sfga005,l_sfga006,l_sfga007,l_sffb009                  
#display工单对应料件的品名规格                                   
#           CALL s_desc_get_item_desc(g_sfga_m.sfga012)
#            RETURNING g_sfga_m.imaal003,g_sfga_m.imaal004 
#            DISPLAY BY NAME g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfga_m.sfga012
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfga_m.imaal003 = '', g_rtn_fields[1] , ''
            LET g_sfga_m.imaal004 = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_sfga_m.imaal003,g_sfga_m.imaal004            
            LET g_sfga_m.sfgadocno_desc = s_aooi200_get_slip_desc(g_sfga_m.sfgadocno)
            DISPLAY BY NAME g_sfga_m.sfgadocno_desc]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#产生的报工单审核需要tmp表
   IF NOT s_asrt335_cre_tmp_table() THEN
      RETURN      
   END IF                        ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#一些不能切换的状态给隐藏掉，比如post时只能切confimed，不可切unconfirmed和invalid 
         IF g_sfga_m.sfgastus = 'X' THEN
            CLOSE asrt336_cl
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         
         HIDE OPTION "signing"
         HIDE OPTION "withdraw"
         HIDE OPTION "closed"
         HIDE OPTION "hold"
         
         CASE g_sfga_m.sfgastus
            WHEN "N"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "posted"
               HIDE OPTION "unposted"
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                  SHOW OPTION "signing"
                  HIDE OPTION "confirmed"
               END IF
            WHEN "X"
               HIDE OPTION "invalid"
               HIDE OPTION "confirmed"
               HIDE OPTION "posted"
               HIDE OPTION "unposted"               
               HIDE OPTION "hold"
            WHEN "Y"
               HIDE OPTION "confirmed"
               HIDE OPTION "invalid"
               HIDE OPTION "hold"
               HIDE OPTION "unposted"
            WHEN "S"
               HIDE OPTION "posted"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "invalid" 
               HIDE OPTION "confirmed"
            WHEN "R"
            #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               HIDE OPTION "confirmed"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "hold" 
            WHEN "D"
            #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               HIDE OPTION "confirmed"
               HIDE OPTION "unconfirmed"
               HIDE OPTION "hold" 
            WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
                SHOW OPTION "withdraw"  
                HIDE OPTION "unconfirmed"
                HIDE OPTION "invalid"
                HIDE OPTION "confirmed"
                HIDE OPTION "hold"
            
            WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
                SHOW OPTION "confirmed" 
                HIDE OPTION "unconfirmed"
                HIDE OPTION "invalid"
                HIDE OPTION "hold"        
         END CASE ]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#仅当状态为 N.未审核/S.已过帐时,才可以切换为Y.已审核
            IF NOT cl_ask_confirm('aim-00108') THEN
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            IF g_sfga_m.sfgastus NOT MATCHES '[N]' THEN
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF         
            IF g_sfga_m.sfgastus = 'N' THEN
               CALL s_transaction_begin()         
               IF NOT s_asrt336_conf_chk(g_sfga_m.sfgadocno) THEN
                  LET lc_state = "N"
                  CALL s_transaction_end('N',0)
               ELSE
                  IF NOT s_asrt336_conf_upd(g_sfga_m.sfgadocno) THEN  
                     LET lc_state = "N"
                     CALL s_transaction_end('N',0)
                  ELSE
                     CALL s_transaction_end('Y',0) 
                     CALL asrt336_refresh_stus()                                  
                  END IF                
                 
               END IF               
            END IF  
            CLOSE asrt336_cl            ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5                     ]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_ask_confirm('aim-00109') THEN
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            IF g_sfga_m.sfgastus NOT MATCHES '[N]' THEN
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF                                                                        ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#仅当状态为 Y.已审核 或是 X.作废时,才可以切换为N.未确认
         IF g_sfga_m.sfgastus NOT MATCHES '[YX]' THEN
            RETURN
         END IF
         
         #仅当已确认时,才执行下面操作,若是X.作废时,直接更新状态
         IF g_sfga_m.sfgastus = 'Y' THEN
            CALL s_transaction_begin()
            IF NOT s_asrt336_unconf(g_sfga_m.sfgadocno) THEN
               CALL s_transaction_end('N',0)
            ELSE
               LET g_sfga_m.sfgastus = 'N'
               CALL s_transaction_end('Y',0)
            END IF
            RETURN
         END IF   

                                                                        ]]>
  </point>
  <point name="statechange.posted" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF g_sfga_m.sfgastus NOT MATCHES '[Y]' THEN
            CLOSE asrt336_cl
            CALL s_transaction_end('N','0')
            RETURN
         END IF 
#过帐日期录入
         CALL s_asrt336_post_input(g_sfga_m.sfgadocno)
              RETURNING l_success,g_sfga_m.sfga001
         IF NOT l_success THEN
            LET lc_state = "Y"
            CLOSE asrt336_cl
            CALL s_transaction_end('N','0')
            RETURN
         END IF          

         CALL s_asrt336_post(g_sfga_m.sfgadocno,g_sfga_m.sfga001)
              RETURNING l_success
         IF NOT l_success THEN
            LET lc_state = "Y"
            CALL s_transaction_end('N',0)
         ELSE
            LET g_sfga_m.sfgastus = 'S'
            CALL s_transaction_end('Y',0)         
         END IF 
         CLOSE asrt336_cl
         CALL s_asft335_drop_tmp_table() 
         CALL asrt336_refresh_stus()         ]]>
  </point>
  <point name="statechange.unconfirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_ask_confirm('aim-00110') THEN
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            IF g_sfga_m.sfgastus = 'Y' THEN   #判断从审核到未审核的，这才是取消审核，从无效到有效（未审核）的，不该走取消审核逻辑
               CALL s_transaction_begin()
               IF NOT s_asrt336_unconf(g_sfga_m.sfgadocno) THEN
                  LET lc_state = "Y"
                  CALL s_transaction_end('N',0)
               ELSE
                  CALL s_transaction_end('Y',0)
                  CALL asrt336_refresh_stus()
               END IF             
            END IF
            CLOSE asrt336_cl]]>
  </point>
  <point name="statechange.unposted" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         LET lc_state = "Y"
         IF g_sfga_m.sfgastus = 'S' THEN        
            IF NOT s_asrt336_unpost(g_sfga_m.sfgadocno) THEN
               LET lc_state = "S"
               CALL s_transaction_end('N',0)
            ELSE
               LET g_sfga_m.sfgastus = 'Y'
               CALL s_transaction_end('Y',0)         
            END IF  
            CLOSE asrt336_cl
            CALL s_asft335_drop_tmp_table()  
            CALL asrt336_refresh_stus()            
         END IF ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="ui_dialog.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="ui_dialog.body2.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_wc      STRING                        ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                                                                        ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asrt336_bcl21
   END IF                        ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="update_b.after_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="update_b.before_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="update_b.m_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <section id="asrt336.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION asrt336_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.b_fill" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION asrt336_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_sfgb_d.clear()    #g_sfgb_d 單頭及單身 
   CALL g_sfgb2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF asrt336_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE sfgbseq,sfgb001,sfgb002,sfgb003,sfgbsite ,t1.oocql004 FROM sfgb_t", 
                
                     " INNER JOIN sfga_t ON sfgadocno = sfgbdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='1053' AND t1.oocql002=sfgb001 AND t1.oocql003='"||g_dlang||"' ",
 
                     " WHERE sfgbent=? AND sfgbdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY sfgb_t.sfgbseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE asrt336_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR asrt336_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_sfga_m.sfgadocno
                                               
      FOREACH b_fill_cs INTO g_sfgb_d[l_ac].sfgbseq,g_sfgb_d[l_ac].sfgb001,g_sfgb_d[l_ac].sfgb002,g_sfgb_d[l_ac].sfgb003, 
          g_sfgb_d[l_ac].sfgbsite,g_sfgb_d[l_ac].sfgb001_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF asrt336_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE sfgcseq,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006,sfgcsite , 
             t2.oocql004 ,t3.ooefl003 FROM sfgc_t",   
                     " INNER JOIN sfga_t ON sfgadocno = sfgcdocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='1053' AND t2.oocql002=sfgc001 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=sfgc005 AND t3.ooefl002='"||g_dlang||"' ",
 
                     " WHERE sfgcent=? AND sfgcdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY sfgc_t.sfgcseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE asrt336_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR asrt336_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_sfga_m.sfgadocno
                                               
      FOREACH b_fill_cs2 INTO g_sfgb2_d[l_ac].sfgcseq,g_sfgb2_d[l_ac].sfgc001,g_sfgb2_d[l_ac].sfgc002, 
          g_sfgb2_d[l_ac].sfgc003,g_sfgb2_d[l_ac].sfgc004,g_sfgb2_d[l_ac].sfgc005,g_sfgb2_d[l_ac].sfgc006, 
          g_sfgb2_d[l_ac].sfgcsite,g_sfgb2_d[l_ac].sfgc001_desc,g_sfgb2_d[l_ac].sfgc005_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_sfgb_d.deleteElement(g_sfgb_d.getLength())
   CALL g_sfgb2_d.deleteElement(g_sfgb2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE asrt336_pb
   FREE asrt336_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_sfgb_d.getLength()
      LET g_sfgb_d_mask_o[l_ac].* =  g_sfgb_d[l_ac].*
      CALL asrt336_sfgb_t_mask()
      LET g_sfgb_d_mask_n[l_ac].* =  g_sfgb_d[l_ac].*
   END FOR
   
   LET g_sfgb2_d_mask_o.* =  g_sfgb2_d.*
   FOR l_ac = 1 TO g_sfgb2_d.getLength()
      LET g_sfgb2_d_mask_o[l_ac].* =  g_sfgb2_d[l_ac].*
      CALL asrt336_sfgc_t_mask()
      LET g_sfgb2_d_mask_n[l_ac].* =  g_sfgb2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.b_fill2" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION asrt336_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL asrt336_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.browser_fill" ver="33" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION asrt336_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE sfgadocno ",
                      " FROM sfga_t ",
                      " ",
                      " LEFT JOIN sfgb_t ON sfgbent = sfgaent AND sfgadocno = sfgbdocno ", "  ",
                      #add-point:browser_fill段sql(sfgb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN sfgc_t ON sfgcent = sfgaent AND sfgadocno = sfgcdocno", "  ",
                      #add-point:browser_fill段sql(sfgc_t1)
                      {<point name="browser_fill.cnt.join.sfgc_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE sfgaent = '" ||g_enterprise|| "' AND sfgbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("sfga_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE sfgadocno ",
                      " FROM sfga_t ", 
                      "  ",
                      "  ",
                      " WHERE sfgaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("sfga_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_sfga_m.* TO NULL
      CALL g_sfgb_d.clear()        
      CALL g_sfgb2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.sfgadocno,t0.sfgadocdt,t0.sfga002,t0.sfga003 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.sfgastus,t0.sfgadocno,t0.sfgadocdt,t0.sfga002,t0.sfga003,t1.ooag011 , 
       t2.ooefl003 ",
               " FROM sfga_t t0",
               "  ",
               "  LEFT JOIN sfgb_t ON sfgbent = sfgaent AND sfgadocno = sfgbdocno ", "  ", 
               #add-point:browser_fill段sql(sfgb_t1)
               {<point name="browser_fill.join.sfgb_t1"/>}
               #end add-point
               "  LEFT JOIN sfgc_t ON sfgcent = sfgaent AND sfgadocno = sfgcdocno", "  ", 
               #add-point:browser_fill段sql(sfgc_t1)
               {<point name="browser_fill.join.sfgc_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.sfga002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.sfga003 AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.sfgaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("sfga_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY sfgadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"sfga_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_sfgadocno,g_browser[g_cnt].b_sfgadocdt, 
       g_browser[g_cnt].b_sfga002,g_browser[g_cnt].b_sfga003,g_browser[g_cnt].b_sfga002_desc,g_browser[g_cnt].b_sfga003_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL asrt336_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_sfgadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.construct" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION asrt336_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_sfga_m.* TO NULL
   CALL g_sfgb_d.clear()        
   CALL g_sfgb2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON sfgadocno,sfgadocdt,sfga002,sfgadocno_desc,sfga001,sfga003,sfgastus, 
          sfgasite,sfga011,sfga012,sfga013,sfga014,sfga006,sfga007,sfga008,sfga009,sfga010,sfgaownid, 
          sfgaowndp,sfgacrtid,sfgacrtdp,sfgacrtdt,sfgamodid,sfgamoddt,sfgacnfid,sfgacnfdt,sfgapstid, 
          sfgapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<sfgacrtdt>>----
         AFTER FIELD sfgacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<sfgamoddt>>----
         AFTER FIELD sfgamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<sfgacnfdt>>----
         AFTER FIELD sfgacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<sfgapstdt>>----
         AFTER FIELD sfgapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.sfgadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgadocno
            #add-point:ON ACTION controlp INFIELD sfgadocno
            {<point name="construct.c.sfgadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgadocno
            #add-point:BEFORE FIELD sfgadocno
            {<point name="construct.b.sfgadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgadocno
            
            #add-point:AFTER FIELD sfgadocno
            {<point name="construct.a.sfgadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgadocdt
            #add-point:BEFORE FIELD sfgadocdt
            {<point name="construct.b.sfgadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgadocdt
            
            #add-point:AFTER FIELD sfgadocdt
            {<point name="construct.a.sfgadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfgadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgadocdt
            #add-point:ON ACTION controlp INFIELD sfgadocdt
            {<point name="construct.c.sfgadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.sfga002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga002
            #add-point:ON ACTION controlp INFIELD sfga002
            {<point name="construct.c.sfga002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga002
            #add-point:BEFORE FIELD sfga002
            {<point name="construct.b.sfga002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga002
            
            #add-point:AFTER FIELD sfga002
            {<point name="construct.a.sfga002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgadocno_desc
            #add-point:BEFORE FIELD sfgadocno_desc
            {<point name="construct.b.sfgadocno_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgadocno_desc
            
            #add-point:AFTER FIELD sfgadocno_desc
            {<point name="construct.a.sfgadocno_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfgadocno_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgadocno_desc
            #add-point:ON ACTION controlp INFIELD sfgadocno_desc
            {<point name="construct.c.sfgadocno_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga001
            #add-point:BEFORE FIELD sfga001
            {<point name="construct.b.sfga001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga001
            
            #add-point:AFTER FIELD sfga001
            {<point name="construct.a.sfga001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga001
            #add-point:ON ACTION controlp INFIELD sfga001
            {<point name="construct.c.sfga001" />}
            #END add-point
 
         #Ctrlp:construct.c.sfga003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga003
            #add-point:ON ACTION controlp INFIELD sfga003
            {<point name="construct.c.sfga003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga003
            #add-point:BEFORE FIELD sfga003
            {<point name="construct.b.sfga003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga003
            
            #add-point:AFTER FIELD sfga003
            {<point name="construct.a.sfga003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgastus
            #add-point:BEFORE FIELD sfgastus
            {<point name="construct.b.sfgastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgastus
            
            #add-point:AFTER FIELD sfgastus
            {<point name="construct.a.sfgastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfgastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgastus
            #add-point:ON ACTION controlp INFIELD sfgastus
            {<point name="construct.c.sfgastus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgasite
            #add-point:BEFORE FIELD sfgasite
            {<point name="construct.b.sfgasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgasite
            
            #add-point:AFTER FIELD sfgasite
            {<point name="construct.a.sfgasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfgasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgasite
            #add-point:ON ACTION controlp INFIELD sfgasite
            {<point name="construct.c.sfgasite" />}
            #END add-point
 
         #Ctrlp:construct.c.sfga011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga011
            #add-point:ON ACTION controlp INFIELD sfga011
            {<point name="construct.c.sfga011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga011
            #add-point:BEFORE FIELD sfga011
            {<point name="construct.b.sfga011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga011
            
            #add-point:AFTER FIELD sfga011
            {<point name="construct.a.sfga011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga012
            #add-point:ON ACTION controlp INFIELD sfga012
            {<point name="construct.c.sfga012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga012
            #add-point:BEFORE FIELD sfga012
            {<point name="construct.b.sfga012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga012
            
            #add-point:AFTER FIELD sfga012
            {<point name="construct.a.sfga012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga013
            #add-point:ON ACTION controlp INFIELD sfga013
            {<point name="construct.c.sfga013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga013
            #add-point:BEFORE FIELD sfga013
            {<point name="construct.b.sfga013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga013
            
            #add-point:AFTER FIELD sfga013
            {<point name="construct.a.sfga013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga014
            #add-point:ON ACTION controlp INFIELD sfga014
            {<point name="construct.c.sfga014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga014
            #add-point:BEFORE FIELD sfga014
            {<point name="construct.b.sfga014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga014
            
            #add-point:AFTER FIELD sfga014
            {<point name="construct.a.sfga014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga006
            #add-point:ON ACTION controlp INFIELD sfga006
            {<point name="construct.c.sfga006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga006
            #add-point:BEFORE FIELD sfga006
            {<point name="construct.b.sfga006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga006
            
            #add-point:AFTER FIELD sfga006
            {<point name="construct.a.sfga006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga007
            #add-point:ON ACTION controlp INFIELD sfga007
            {<point name="construct.c.sfga007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga007
            #add-point:BEFORE FIELD sfga007
            {<point name="construct.b.sfga007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga007
            
            #add-point:AFTER FIELD sfga007
            {<point name="construct.a.sfga007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga008
            #add-point:BEFORE FIELD sfga008
            {<point name="construct.b.sfga008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga008
            
            #add-point:AFTER FIELD sfga008
            {<point name="construct.a.sfga008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga008
            #add-point:ON ACTION controlp INFIELD sfga008
            {<point name="construct.c.sfga008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga009
            #add-point:BEFORE FIELD sfga009
            {<point name="construct.b.sfga009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga009
            
            #add-point:AFTER FIELD sfga009
            {<point name="construct.a.sfga009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga009
            #add-point:ON ACTION controlp INFIELD sfga009
            {<point name="construct.c.sfga009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga010
            #add-point:BEFORE FIELD sfga010
            {<point name="construct.b.sfga010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga010
            
            #add-point:AFTER FIELD sfga010
            {<point name="construct.a.sfga010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfga010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga010
            #add-point:ON ACTION controlp INFIELD sfga010
            {<point name="construct.c.sfga010" />}
            #END add-point
 
         #Ctrlp:construct.c.sfgaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgaownid
            #add-point:ON ACTION controlp INFIELD sfgaownid
            {<point name="construct.c.sfgaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgaownid
            #add-point:BEFORE FIELD sfgaownid
            {<point name="construct.b.sfgaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgaownid
            
            #add-point:AFTER FIELD sfgaownid
            {<point name="construct.a.sfgaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfgaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgaowndp
            #add-point:ON ACTION controlp INFIELD sfgaowndp
            {<point name="construct.c.sfgaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgaowndp
            #add-point:BEFORE FIELD sfgaowndp
            {<point name="construct.b.sfgaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgaowndp
            
            #add-point:AFTER FIELD sfgaowndp
            {<point name="construct.a.sfgaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfgacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgacrtid
            #add-point:ON ACTION controlp INFIELD sfgacrtid
            {<point name="construct.c.sfgacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgacrtid
            #add-point:BEFORE FIELD sfgacrtid
            {<point name="construct.b.sfgacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgacrtid
            
            #add-point:AFTER FIELD sfgacrtid
            {<point name="construct.a.sfgacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sfgacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgacrtdp
            #add-point:ON ACTION controlp INFIELD sfgacrtdp
            {<point name="construct.c.sfgacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgacrtdp
            #add-point:BEFORE FIELD sfgacrtdp
            {<point name="construct.b.sfgacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgacrtdp
            
            #add-point:AFTER FIELD sfgacrtdp
            {<point name="construct.a.sfgacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgacrtdt
            #add-point:BEFORE FIELD sfgacrtdt
            {<point name="construct.b.sfgacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.sfgamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgamodid
            #add-point:ON ACTION controlp INFIELD sfgamodid
            {<point name="construct.c.sfgamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgamodid
            #add-point:BEFORE FIELD sfgamodid
            {<point name="construct.b.sfgamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgamodid
            
            #add-point:AFTER FIELD sfgamodid
            {<point name="construct.a.sfgamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgamoddt
            #add-point:BEFORE FIELD sfgamoddt
            {<point name="construct.b.sfgamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.sfgacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgacnfid
            #add-point:ON ACTION controlp INFIELD sfgacnfid
            {<point name="construct.c.sfgacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgacnfid
            #add-point:BEFORE FIELD sfgacnfid
            {<point name="construct.b.sfgacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgacnfid
            
            #add-point:AFTER FIELD sfgacnfid
            {<point name="construct.a.sfgacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgacnfdt
            #add-point:BEFORE FIELD sfgacnfdt
            {<point name="construct.b.sfgacnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.sfgapstid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgapstid
            #add-point:ON ACTION controlp INFIELD sfgapstid
            {<point name="construct.c.sfgapstid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgapstid
            #add-point:BEFORE FIELD sfgapstid
            {<point name="construct.b.sfgapstid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgapstid
            
            #add-point:AFTER FIELD sfgapstid
            {<point name="construct.a.sfgapstid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgapstdt
            #add-point:BEFORE FIELD sfgapstdt
            {<point name="construct.b.sfgapstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON sfgbseq,sfgb001,sfgb002,sfgb003,sfgbsite
           FROM s_detail1[1].sfgbseq,s_detail1[1].sfgb001,s_detail1[1].sfgb002,s_detail1[1].sfgb003, 
               s_detail1[1].sfgbsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgbseq
            #add-point:BEFORE FIELD sfgbseq
            {<point name="construct.b.page1.sfgbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgbseq
            
            #add-point:AFTER FIELD sfgbseq
            {<point name="construct.a.page1.sfgbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfgbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgbseq
            #add-point:ON ACTION controlp INFIELD sfgbseq
            {<point name="construct.c.page1.sfgbseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.sfgb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgb001
            #add-point:ON ACTION controlp INFIELD sfgb001
            {<point name="construct.c.page1.sfgb001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgb001
            #add-point:BEFORE FIELD sfgb001
            {<point name="construct.b.page1.sfgb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgb001
            
            #add-point:AFTER FIELD sfgb001
            {<point name="construct.a.page1.sfgb001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgb002
            #add-point:BEFORE FIELD sfgb002
            {<point name="construct.b.page1.sfgb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgb002
            
            #add-point:AFTER FIELD sfgb002
            {<point name="construct.a.page1.sfgb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfgb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgb002
            #add-point:ON ACTION controlp INFIELD sfgb002
            {<point name="construct.c.page1.sfgb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgb003
            #add-point:BEFORE FIELD sfgb003
            {<point name="construct.b.page1.sfgb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgb003
            
            #add-point:AFTER FIELD sfgb003
            {<point name="construct.a.page1.sfgb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfgb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgb003
            #add-point:ON ACTION controlp INFIELD sfgb003
            {<point name="construct.c.page1.sfgb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgbsite
            #add-point:BEFORE FIELD sfgbsite
            {<point name="construct.b.page1.sfgbsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgbsite
            
            #add-point:AFTER FIELD sfgbsite
            {<point name="construct.a.page1.sfgbsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfgbsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgbsite
            #add-point:ON ACTION controlp INFIELD sfgbsite
            {<point name="construct.c.page1.sfgbsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON sfgcseq,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006,sfgcsite
           FROM s_detail2[1].sfgcseq,s_detail2[1].sfgc001,s_detail2[1].sfgc002,s_detail2[1].sfgc003, 
               s_detail2[1].sfgc004,s_detail2[1].sfgc005,s_detail2[1].sfgc006,s_detail2[1].sfgcsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgcseq
            #add-point:BEFORE FIELD sfgcseq
            {<point name="construct.b.page2.sfgcseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgcseq
            
            #add-point:AFTER FIELD sfgcseq
            {<point name="construct.a.page2.sfgcseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfgcseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgcseq
            #add-point:ON ACTION controlp INFIELD sfgcseq
            {<point name="construct.c.page2.sfgcseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.sfgc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc001
            #add-point:ON ACTION controlp INFIELD sfgc001
            {<point name="construct.c.page2.sfgc001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc001
            #add-point:BEFORE FIELD sfgc001
            {<point name="construct.b.page2.sfgc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc001
            
            #add-point:AFTER FIELD sfgc001
            {<point name="construct.a.page2.sfgc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc002
            #add-point:BEFORE FIELD sfgc002
            {<point name="construct.b.page2.sfgc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc002
            
            #add-point:AFTER FIELD sfgc002
            {<point name="construct.a.page2.sfgc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfgc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc002
            #add-point:ON ACTION controlp INFIELD sfgc002
            {<point name="construct.c.page2.sfgc002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc003
            #add-point:BEFORE FIELD sfgc003
            {<point name="construct.b.page2.sfgc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc003
            
            #add-point:AFTER FIELD sfgc003
            {<point name="construct.a.page2.sfgc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfgc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc003
            #add-point:ON ACTION controlp INFIELD sfgc003
            {<point name="construct.c.page2.sfgc003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc004
            #add-point:BEFORE FIELD sfgc004
            {<point name="construct.b.page2.sfgc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc004
            
            #add-point:AFTER FIELD sfgc004
            {<point name="construct.a.page2.sfgc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfgc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc004
            #add-point:ON ACTION controlp INFIELD sfgc004
            {<point name="construct.c.page2.sfgc004" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.sfgc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc005
            #add-point:ON ACTION controlp INFIELD sfgc005
            {<point name="construct.c.page2.sfgc005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc005
            #add-point:BEFORE FIELD sfgc005
            {<point name="construct.b.page2.sfgc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc005
            
            #add-point:AFTER FIELD sfgc005
            {<point name="construct.a.page2.sfgc005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc006
            #add-point:BEFORE FIELD sfgc006
            {<point name="construct.b.page2.sfgc006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc006
            
            #add-point:AFTER FIELD sfgc006
            {<point name="construct.a.page2.sfgc006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfgc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc006
            #add-point:ON ACTION controlp INFIELD sfgc006
            {<point name="construct.c.page2.sfgc006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgcsite
            #add-point:BEFORE FIELD sfgcsite
            {<point name="construct.b.page2.sfgcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgcsite
            
            #add-point:AFTER FIELD sfgcsite
            {<point name="construct.a.page2.sfgcsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfgcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgcsite
            #add-point:ON ACTION controlp INFIELD sfgcsite
            {<point name="construct.c.page2.sfgcsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "sfga_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "sfgb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "sfgc_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.default_search" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION asrt336_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " sfgadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "sfga_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfgb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "sfgc_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.delete" ver="31" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION asrt336_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_sfga_m.sfgadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN asrt336_cl USING g_enterprise,g_sfga_m.sfgadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN asrt336_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE asrt336_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE asrt336_master_referesh USING g_sfga_m.sfgadocno INTO g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt, 
       g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
       g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp, 
       g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt,g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc,g_sfga_m.sfga011_desc, 
       g_sfga_m.sfga006_desc,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid_desc, 
       g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgapstid_desc 

   
   #檢查是否允許此動作
   IF NOT asrt336_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_sfga_m_mask_o.* =  g_sfga_m.*
   CALL asrt336_sfga_t_mask()
   LET g_sfga_m_mask_n.* =  g_sfga_m.*
   
   CALL asrt336_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL asrt336_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
 
      DELETE FROM sfga_t
       WHERE sfgaent = g_enterprise AND sfgadocno = g_sfga_m.sfgadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_sfga_m.sfgadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM sfgb_t
       WHERE sfgbent = g_enterprise AND sfgbdocno = g_sfga_m.sfgadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfgb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM sfgc_t
       WHERE sfgcent = g_enterprise AND
             sfgcdocno = g_sfga_m.sfgadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfgc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE asrt336_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_sfgb_d.clear() 
      CALL g_sfgb2_d.clear()       
 
     
      CALL asrt336_ui_browser_refresh()  
      #CALL asrt336_ui_headershow()  
      #CALL asrt336_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL asrt336_browser_fill("")
         CALL asrt336_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE asrt336_cl
 
   #功能已完成,通報訊息中心
   CALL asrt336_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="asrt336.delete_b" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION asrt336_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM sfgb_t
       WHERE sfgbent = g_enterprise AND
         sfgbdocno = ps_keys_bak[1] AND sfgbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_sfgb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM sfgc_t
       WHERE sfgcent = g_enterprise AND
             sfgcdocno = ps_keys_bak[1] AND sfgcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfgc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_sfgb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.description" ver="127" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000097
#+ 
#+ Filename...: asrt336
#+ Description: 重覆性生產當站報廢維護作業
#+ Creator....: 05426(2015-06-09 08:26:24)
#+ Modifier...: 05426(2015-06-12 10:37:37) -SD/PR-
]]>
  </section>
  <section id="asrt336.detail_reproduce" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION asrt336_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE sfgb_t.*
   DEFINE l_detail2    RECORD LIKE sfgc_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE asrt336_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE asrt336_detail AS ",
                "SELECT * FROM sfgb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asrt336_detail SELECT * FROM sfgb_t 
                                         WHERE sfgbent = g_enterprise AND sfgbdocno = g_sfgadocno_t
 
   
   #將key修正為調整後   
   UPDATE asrt336_detail 
      #更新key欄位
      SET sfgbdocno = g_sfga_m.sfgadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO sfgb_t SELECT * FROM asrt336_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asrt336_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE asrt336_detail AS ",
      "SELECT * FROM sfgc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asrt336_detail SELECT * FROM sfgc_t
                                         WHERE sfgcent = g_enterprise AND sfgcdocno = g_sfgadocno_t
 
 
   #將key修正為調整後   
   UPDATE asrt336_detail SET sfgcdocno = g_sfga_m.sfgadocno
 
  
   #將資料塞回原table   
   INSERT INTO sfgc_t SELECT * FROM asrt336_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asrt336_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION asrt336_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.fetch" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION asrt336_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_sfga_m.sfgadocno = g_browser[g_current_idx].b_sfgadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE asrt336_master_referesh USING g_sfga_m.sfgadocno INTO g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt, 
       g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
       g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp, 
       g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt,g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc,g_sfga_m.sfga011_desc, 
       g_sfga_m.sfga006_desc,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid_desc, 
       g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgapstid_desc 

   
   #遮罩相關處理
   LET g_sfga_m_mask_o.* =  g_sfga_m.*
   CALL asrt336_sfga_t_mask()
   LET g_sfga_m_mask_n.* =  g_sfga_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asrt336_set_act_visible()   
   CALL asrt336_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_sfga_m_t.* = g_sfga_m.*
   LET g_sfga_m_o.* = g_sfga_m.*
   
   LET g_data_owner = g_sfga_m.sfgaownid      
   LET g_data_dept  = g_sfga_m.sfgaowndp
   
   #重新顯示   
   CALL asrt336_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.fill_chk" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION asrt336_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.filter" ver="13" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION asrt336_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON sfgadocno,sfgadocdt,sfga002,sfga003
                          FROM s_browse[1].b_sfgadocno,s_browse[1].b_sfgadocdt,s_browse[1].b_sfga002, 
                              s_browse[1].b_sfga003
 
         BEFORE CONSTRUCT
               DISPLAY asrt336_filter_parser('sfgadocno') TO s_browse[1].b_sfgadocno
            DISPLAY asrt336_filter_parser('sfgadocdt') TO s_browse[1].b_sfgadocdt
            DISPLAY asrt336_filter_parser('sfga002') TO s_browse[1].b_sfga002
            DISPLAY asrt336_filter_parser('sfga003') TO s_browse[1].b_sfga003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL asrt336_filter_show('sfgadocno')
   CALL asrt336_filter_show('sfgadocdt')
   CALL asrt336_filter_show('sfga002')
   CALL asrt336_filter_show('sfga003')
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION asrt336_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION asrt336_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = asrt336_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.global" ver="33" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:37)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_sfga_m        RECORD
       sfgadocno LIKE sfga_t.sfgadocno, 
   sfgadocdt LIKE sfga_t.sfgadocdt, 
   sfga002 LIKE sfga_t.sfga002, 
   sfga002_desc LIKE type_t.chr80, 
   sfgadocno_desc LIKE type_t.chr80, 
   sfga001 LIKE sfga_t.sfga001, 
   sfga003 LIKE sfga_t.sfga003, 
   sfga003_desc LIKE type_t.chr80, 
   sfgastus LIKE sfga_t.sfgastus, 
   sfgasite LIKE sfga_t.sfgasite, 
   sfga011 LIKE sfga_t.sfga011, 
   sfga011_desc LIKE type_t.chr80, 
   sfga012 LIKE sfga_t.sfga012, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   sfga013 LIKE sfga_t.sfga013, 
   sfga014 LIKE sfga_t.sfga014, 
   sfga006 LIKE sfga_t.sfga006, 
   sfga006_desc LIKE type_t.chr80, 
   sfga007 LIKE sfga_t.sfga007, 
   sfga008 LIKE sfga_t.sfga008, 
   sfga009 LIKE sfga_t.sfga009, 
   sfga010 LIKE sfga_t.sfga010, 
   sfgaownid LIKE sfga_t.sfgaownid, 
   sfgaownid_desc LIKE type_t.chr80, 
   sfgaowndp LIKE sfga_t.sfgaowndp, 
   sfgaowndp_desc LIKE type_t.chr80, 
   sfgacrtid LIKE sfga_t.sfgacrtid, 
   sfgacrtid_desc LIKE type_t.chr80, 
   sfgacrtdp LIKE sfga_t.sfgacrtdp, 
   sfgacrtdp_desc LIKE type_t.chr80, 
   sfgacrtdt LIKE sfga_t.sfgacrtdt, 
   sfgamodid LIKE sfga_t.sfgamodid, 
   sfgamodid_desc LIKE type_t.chr80, 
   sfgamoddt LIKE sfga_t.sfgamoddt, 
   sfgacnfid LIKE sfga_t.sfgacnfid, 
   sfgacnfid_desc LIKE type_t.chr80, 
   sfgacnfdt LIKE sfga_t.sfgacnfdt, 
   sfgapstid LIKE sfga_t.sfgapstid, 
   sfgapstid_desc LIKE type_t.chr80, 
   sfgapstdt LIKE sfga_t.sfgapstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_sfgb_d        RECORD
       sfgbseq LIKE sfgb_t.sfgbseq, 
   sfgb001 LIKE sfgb_t.sfgb001, 
   sfgb001_desc LIKE type_t.chr500, 
   sfgb002 LIKE sfgb_t.sfgb002, 
   sfgb003 LIKE sfgb_t.sfgb003, 
   sfgbsite LIKE sfgb_t.sfgbsite
       END RECORD
PRIVATE TYPE type_g_sfgb2_d RECORD
       sfgcseq LIKE sfgc_t.sfgcseq, 
   sfgc001 LIKE sfgc_t.sfgc001, 
   sfgc001_desc LIKE type_t.chr500, 
   sfgc002 LIKE sfgc_t.sfgc002, 
   sfgc003 LIKE sfgc_t.sfgc003, 
   sfgc004 LIKE sfgc_t.sfgc004, 
   sfgc005 LIKE sfgc_t.sfgc005, 
   sfgc005_desc LIKE type_t.chr500, 
   sfgc006 LIKE sfgc_t.sfgc006, 
   sfgcsite LIKE sfgc_t.sfgcsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_sfgadocno LIKE sfga_t.sfgadocno,
   b_sfgadocno_desc LIKE type_t.chr80,
      b_sfgadocdt LIKE sfga_t.sfgadocdt,
      b_sfga002 LIKE sfga_t.sfga002,
   b_sfga002_desc LIKE type_t.chr80,
      b_sfga003 LIKE sfga_t.sfga003,
   b_sfga003_desc LIKE type_t.chr80
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_sfga_m          type_g_sfga_m
DEFINE g_sfga_m_t        type_g_sfga_m
DEFINE g_sfga_m_o        type_g_sfga_m
DEFINE g_sfga_m_mask_o   type_g_sfga_m #轉換遮罩前資料
DEFINE g_sfga_m_mask_n   type_g_sfga_m #轉換遮罩後資料
 
   DEFINE g_sfgadocno_t LIKE sfga_t.sfgadocno
 
 
DEFINE g_sfgb_d          DYNAMIC ARRAY OF type_g_sfgb_d
DEFINE g_sfgb_d_t        type_g_sfgb_d
DEFINE g_sfgb_d_o        type_g_sfgb_d
DEFINE g_sfgb_d_mask_o   DYNAMIC ARRAY OF type_g_sfgb_d #轉換遮罩前資料
DEFINE g_sfgb_d_mask_n   DYNAMIC ARRAY OF type_g_sfgb_d #轉換遮罩後資料
DEFINE g_sfgb2_d          DYNAMIC ARRAY OF type_g_sfgb2_d
DEFINE g_sfgb2_d_t        type_g_sfgb2_d
DEFINE g_sfgb2_d_o        type_g_sfgb2_d
DEFINE g_sfgb2_d_mask_o   DYNAMIC ARRAY OF type_g_sfgb2_d #轉換遮罩前資料
DEFINE g_sfgb2_d_mask_n   DYNAMIC ARRAY OF type_g_sfgb2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="asrt336.idx_chk" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION asrt336_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_sfgb_d.getLength() THEN
         LET g_detail_idx = g_sfgb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfgb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfgb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_sfgb2_d.getLength() THEN
         LET g_detail_idx = g_sfgb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfgb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfgb2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.init" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION asrt336_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('sfgastus','13','N,Y,S,A,D,R,W,Z,X')
 
      CALL cl_set_combo_scc('sfgc002','5417') 
   CALL cl_set_combo_scc('sfgc004','5418') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL asrt336_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="asrt336.input" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION asrt336_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga002_desc,g_sfga_m.sfgadocno_desc, 
       g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfga003_desc,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga011_desc,g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004,g_sfga_m.sfga013,g_sfga_m.sfga014, 
       g_sfga_m.sfga006,g_sfga_m.sfga006_desc,g_sfga_m.sfga007,g_sfga_m.sfga008,g_sfga_m.sfga009,g_sfga_m.sfga010, 
       g_sfga_m.sfgaownid,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid, 
       g_sfga_m.sfgacrtid_desc,g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid, 
       g_sfga_m.sfgamodid_desc,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstid_desc,g_sfga_m.sfgapstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT sfgbseq,sfgb001,sfgb002,sfgb003,sfgbsite FROM sfgb_t WHERE sfgbent=? AND  
       sfgbdocno=? AND sfgbseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE asrt336_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT sfgcseq,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006,sfgcsite FROM  
       sfgc_t WHERE sfgcent=? AND sfgcdocno=? AND sfgcseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE asrt336_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL asrt336_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL asrt336_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003, 
       g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004, 
       g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008,g_sfga_m.sfga009, 
       g_sfga_m.sfga010
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="asrt336.input.body" ver="25" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_sfgb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfgb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL asrt336_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_sfgb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asrt336_cl USING g_enterprise,g_sfga_m.sfgadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN asrt336_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_sfgb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfgb_d[l_ac].sfgbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_sfgb_d_t.* = g_sfgb_d[l_ac].*  #BACKUP
               LET g_sfgb_d_o.* = g_sfgb_d[l_ac].*  #BACKUP
               CALL asrt336_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL asrt336_set_no_entry_b(l_cmd)
               IF NOT asrt336_lock_b("sfgb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asrt336_bcl INTO g_sfgb_d[l_ac].sfgbseq,g_sfgb_d[l_ac].sfgb001,g_sfgb_d[l_ac].sfgb002, 
                      g_sfgb_d[l_ac].sfgb003,g_sfgb_d[l_ac].sfgbsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_sfgb_d_t.sfgbseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_sfgb_d_mask_o[l_ac].* =  g_sfgb_d[l_ac].*
                  CALL asrt336_sfgb_t_mask()
                  LET g_sfgb_d_mask_n[l_ac].* =  g_sfgb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL asrt336_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfgb_d[l_ac].* TO NULL 
            INITIALIZE g_sfgb_d_t.* TO NULL 
            INITIALIZE g_sfgb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_sfgb_d_t.* = g_sfgb_d[l_ac].*     #新輸入資料
            LET g_sfgb_d_o.* = g_sfgb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asrt336_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL asrt336_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfgb_d[li_reproduce_target].* = g_sfgb_d[li_reproduce].*
 
               LET g_sfgb_d[li_reproduce_target].sfgbseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sfgb_t 
             WHERE sfgbent = g_enterprise AND sfgbdocno = g_sfga_m.sfgadocno
 
               AND sfgbseq = g_sfgb_d[l_ac].sfgbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfga_m.sfgadocno
               LET gs_keys[2] = g_sfgb_d[g_detail_idx].sfgbseq
               CALL asrt336_insert_b('sfgb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_sfgb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfgb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asrt336_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_sfga_m.sfgadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_sfgb_d_t.sfgbseq
 
            
               #刪除同層單身
               IF NOT asrt336_delete_b('sfgb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asrt336_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT asrt336_key_delete_b(gs_keys,'sfgb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asrt336_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE asrt336_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_sfgb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_sfgb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgbseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfgb_d[l_ac].sfgbseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfgbseq
            END IF 
 
 
            #add-point:AFTER FIELD sfgbseq
            {<point name="input.a.page1.sfgbseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgbseq
            #add-point:BEFORE FIELD sfgbseq
            {<point name="input.b.page1.sfgbseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgbseq
            #add-point:ON CHANGE sfgbseq
            {<point name="input.g.page1.sfgbseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgb001
            
            #add-point:AFTER FIELD sfgb001
            {<point name="input.a.page1.sfgb001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgb001
            #add-point:BEFORE FIELD sfgb001
            {<point name="input.b.page1.sfgb001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgb001
            #add-point:ON CHANGE sfgb001
            {<point name="input.g.page1.sfgb001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgb002
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfgb_d[l_ac].sfgb002,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfgb002
            END IF 
 
 
            #add-point:AFTER FIELD sfgb002
            {<point name="input.a.page1.sfgb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgb002
            #add-point:BEFORE FIELD sfgb002
            {<point name="input.b.page1.sfgb002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgb002
            #add-point:ON CHANGE sfgb002
            {<point name="input.g.page1.sfgb002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgb003
            #add-point:BEFORE FIELD sfgb003
            {<point name="input.b.page1.sfgb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgb003
            
            #add-point:AFTER FIELD sfgb003
            {<point name="input.a.page1.sfgb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgb003
            #add-point:ON CHANGE sfgb003
            {<point name="input.g.page1.sfgb003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgbsite
            #add-point:BEFORE FIELD sfgbsite
            {<point name="input.b.page1.sfgbsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgbsite
            
            #add-point:AFTER FIELD sfgbsite
            {<point name="input.a.page1.sfgbsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgbsite
            #add-point:ON CHANGE sfgbsite
            {<point name="input.g.page1.sfgbsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.sfgbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgbseq
            #add-point:ON ACTION controlp INFIELD sfgbseq
            {<point name="input.c.page1.sfgbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.sfgb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgb001
            #add-point:ON ACTION controlp INFIELD sfgb001
            {<point name="input.c.page1.sfgb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.sfgb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgb002
            #add-point:ON ACTION controlp INFIELD sfgb002
            {<point name="input.c.page1.sfgb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.sfgb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgb003
            #add-point:ON ACTION controlp INFIELD sfgb003
            {<point name="input.c.page1.sfgb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.sfgbsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgbsite
            #add-point:ON ACTION controlp INFIELD sfgbsite
            {<point name="input.c.page1.sfgbsite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_sfgb_d[l_ac].* = g_sfgb_d_t.*
               CLOSE asrt336_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_sfgb_d[l_ac].sfgbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_sfgb_d[l_ac].* = g_sfgb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL asrt336_sfgb_t_mask_restore('restore_mask_o')
      
               UPDATE sfgb_t SET (sfgbdocno,sfgbseq,sfgb001,sfgb002,sfgb003,sfgbsite) = (g_sfga_m.sfgadocno, 
                   g_sfgb_d[l_ac].sfgbseq,g_sfgb_d[l_ac].sfgb001,g_sfgb_d[l_ac].sfgb002,g_sfgb_d[l_ac].sfgb003, 
                   g_sfgb_d[l_ac].sfgbsite)
                WHERE sfgbent = g_enterprise AND sfgbdocno = g_sfga_m.sfgadocno 
 
                  AND sfgbseq = g_sfgb_d_t.sfgbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfgb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfgb_d[l_ac].* = g_sfgb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfgb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_sfgb_d[l_ac].* = g_sfgb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfga_m.sfgadocno
               LET gs_keys_bak[1] = g_sfgadocno_t
               LET gs_keys[2] = g_sfgb_d[g_detail_idx].sfgbseq
               LET gs_keys_bak[2] = g_sfgb_d_t.sfgbseq
               CALL asrt336_update_b('sfgb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL asrt336_sfgb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_sfgb_d[g_detail_idx].sfgbseq = g_sfgb_d_t.sfgbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_sfga_m.sfgadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_sfgb_d_t.sfgbseq
 
                  CALL asrt336_key_update_b(gs_keys,'sfgb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_sfga_m),util.JSON.stringify(g_sfgb_d_t)
               LET g_log2 = util.JSON.stringify(g_sfga_m),util.JSON.stringify(g_sfgb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL asrt336_unlock_b("sfgb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_sfgb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfgb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_sfgb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfgb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL asrt336_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_sfgb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfgb2_d[l_ac].* TO NULL 
            INITIALIZE g_sfgb2_d_t.* TO NULL 
            INITIALIZE g_sfgb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_sfgb2_d[l_ac].sfgc004 = "1"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_sfgb2_d_t.* = g_sfgb2_d[l_ac].*     #新輸入資料
            LET g_sfgb2_d_o.* = g_sfgb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asrt336_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL asrt336_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfgb2_d[li_reproduce_target].* = g_sfgb2_d[li_reproduce].*
 
               LET g_sfgb2_d[li_reproduce_target].sfgcseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asrt336_cl USING g_enterprise,g_sfga_m.sfgadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN asrt336_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_sfgb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfgb2_d[l_ac].sfgcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_sfgb2_d_t.* = g_sfgb2_d[l_ac].*  #BACKUP
               LET g_sfgb2_d_o.* = g_sfgb2_d[l_ac].*  #BACKUP
               CALL asrt336_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL asrt336_set_no_entry_b(l_cmd)
               IF NOT asrt336_lock_b("sfgc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asrt336_bcl2 INTO g_sfgb2_d[l_ac].sfgcseq,g_sfgb2_d[l_ac].sfgc001,g_sfgb2_d[l_ac].sfgc002, 
                      g_sfgb2_d[l_ac].sfgc003,g_sfgb2_d[l_ac].sfgc004,g_sfgb2_d[l_ac].sfgc005,g_sfgb2_d[l_ac].sfgc006, 
                      g_sfgb2_d[l_ac].sfgcsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_sfgb2_d_mask_o[l_ac].* =  g_sfgb2_d[l_ac].*
                  CALL asrt336_sfgc_t_mask()
                  LET g_sfgb2_d_mask_n[l_ac].* =  g_sfgb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL asrt336_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_sfga_m.sfgadocno
               LET gs_keys[gs_keys.getLength()+1] = g_sfgb2_d_t.sfgcseq
            
               #刪除同層單身
               IF NOT asrt336_delete_b('sfgc_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asrt336_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT asrt336_key_delete_b(gs_keys,'sfgc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE asrt336_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE asrt336_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_sfgb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_sfgb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sfgc_t 
             WHERE sfgcent = g_enterprise AND sfgcdocno = g_sfga_m.sfgadocno
               AND sfgcseq = g_sfgb2_d[l_ac].sfgcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfga_m.sfgadocno
               LET gs_keys[2] = g_sfgb2_d[g_detail_idx].sfgcseq
               CALL asrt336_insert_b('sfgc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_sfgb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfgc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asrt336_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
               CLOSE asrt336_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL asrt336_sfgc_t_mask_restore('restore_mask_o')
                              
               UPDATE sfgc_t SET (sfgcdocno,sfgcseq,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006, 
                   sfgcsite) = (g_sfga_m.sfgadocno,g_sfgb2_d[l_ac].sfgcseq,g_sfgb2_d[l_ac].sfgc001,g_sfgb2_d[l_ac].sfgc002, 
                   g_sfgb2_d[l_ac].sfgc003,g_sfgb2_d[l_ac].sfgc004,g_sfgb2_d[l_ac].sfgc005,g_sfgb2_d[l_ac].sfgc006, 
                   g_sfgb2_d[l_ac].sfgcsite) #自訂欄位頁簽
                WHERE sfgcent = g_enterprise AND sfgcdocno = g_sfga_m.sfgadocno
                  AND sfgcseq = g_sfgb2_d_t.sfgcseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfgc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sfgc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfga_m.sfgadocno
               LET gs_keys_bak[1] = g_sfgadocno_t
               LET gs_keys[2] = g_sfgb2_d[g_detail_idx].sfgcseq
               LET gs_keys_bak[2] = g_sfgb2_d_t.sfgcseq
               CALL asrt336_update_b('sfgc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL asrt336_sfgc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_sfgb2_d[g_detail_idx].sfgcseq = g_sfgb2_d_t.sfgcseq 
                  ) THEN
                  LET gs_keys[01] = g_sfga_m.sfgadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_sfgb2_d_t.sfgcseq
                  CALL asrt336_key_update_b(gs_keys,'sfgc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_sfga_m),util.JSON.stringify(g_sfgb2_d_t)
               LET g_log2 = util.JSON.stringify(g_sfga_m),util.JSON.stringify(g_sfgb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgcseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfgb2_d[l_ac].sfgcseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfgcseq
            END IF 
 
 
            #add-point:AFTER FIELD sfgcseq
            {<point name="input.a.page2.sfgcseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgcseq
            #add-point:BEFORE FIELD sfgcseq
            {<point name="input.b.page2.sfgcseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgcseq
            #add-point:ON CHANGE sfgcseq
            {<point name="input.g.page2.sfgcseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc001
            
            #add-point:AFTER FIELD sfgc001
            {<point name="input.a.page2.sfgc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc001
            #add-point:BEFORE FIELD sfgc001
            {<point name="input.b.page2.sfgc001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgc001
            #add-point:ON CHANGE sfgc001
            {<point name="input.g.page2.sfgc001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc002
            #add-point:BEFORE FIELD sfgc002
            {<point name="input.b.page2.sfgc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc002
            
            #add-point:AFTER FIELD sfgc002
            {<point name="input.a.page2.sfgc002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgc002
            #add-point:ON CHANGE sfgc002
            {<point name="input.g.page2.sfgc002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfgb2_d[l_ac].sfgc003,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfgc003
            END IF 
 
 
            #add-point:AFTER FIELD sfgc003
            {<point name="input.a.page2.sfgc003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc003
            #add-point:BEFORE FIELD sfgc003
            {<point name="input.b.page2.sfgc003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgc003
            #add-point:ON CHANGE sfgc003
            {<point name="input.g.page2.sfgc003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc004
            #add-point:BEFORE FIELD sfgc004
            {<point name="input.b.page2.sfgc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc004
            
            #add-point:AFTER FIELD sfgc004
            {<point name="input.a.page2.sfgc004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgc004
            #add-point:ON CHANGE sfgc004
            {<point name="input.g.page2.sfgc004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc005
            
            #add-point:AFTER FIELD sfgc005
            {<point name="input.a.page2.sfgc005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc005
            #add-point:BEFORE FIELD sfgc005
            {<point name="input.b.page2.sfgc005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgc005
            #add-point:ON CHANGE sfgc005
            {<point name="input.g.page2.sfgc005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgc006
            #add-point:BEFORE FIELD sfgc006
            {<point name="input.b.page2.sfgc006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgc006
            
            #add-point:AFTER FIELD sfgc006
            {<point name="input.a.page2.sfgc006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgc006
            #add-point:ON CHANGE sfgc006
            {<point name="input.g.page2.sfgc006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgcsite
            #add-point:BEFORE FIELD sfgcsite
            {<point name="input.b.page2.sfgcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgcsite
            
            #add-point:AFTER FIELD sfgcsite
            {<point name="input.a.page2.sfgcsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgcsite
            #add-point:ON CHANGE sfgcsite
            {<point name="input.g.page2.sfgcsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.sfgcseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgcseq
            #add-point:ON ACTION controlp INFIELD sfgcseq
            {<point name="input.c.page2.sfgcseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.sfgc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc001
            #add-point:ON ACTION controlp INFIELD sfgc001
            {<point name="input.c.page2.sfgc001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.sfgc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc002
            #add-point:ON ACTION controlp INFIELD sfgc002
            {<point name="input.c.page2.sfgc002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.sfgc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc003
            #add-point:ON ACTION controlp INFIELD sfgc003
            {<point name="input.c.page2.sfgc003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.sfgc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc004
            #add-point:ON ACTION controlp INFIELD sfgc004
            {<point name="input.c.page2.sfgc004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.sfgc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc005
            #add-point:ON ACTION controlp INFIELD sfgc005
            {<point name="input.c.page2.sfgc005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.sfgc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgc006
            #add-point:ON ACTION controlp INFIELD sfgc006
            {<point name="input.c.page2.sfgc006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.sfgcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgcsite
            #add-point:ON ACTION controlp INFIELD sfgcsite
            {<point name="input.c.page2.sfgcsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfgb2_d[l_ac].* = g_sfgb2_d_t.*
               END IF
               CLOSE asrt336_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL asrt336_unlock_b("sfgc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_sfgb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfgb2_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="asrt336.input.head" ver="37" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003, 
          g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004, 
          g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008,g_sfga_m.sfga009, 
          g_sfga_m.sfga010 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN asrt336_cl USING g_enterprise,g_sfga_m.sfgadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN asrt336_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE asrt336_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL asrt336_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL asrt336_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgadocno
            
            #add-point:AFTER FIELD sfgadocno
            {<point name="input.a.sfgadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgadocno
            #add-point:BEFORE FIELD sfgadocno
            {<point name="input.b.sfgadocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgadocno
            #add-point:ON CHANGE sfgadocno
            {<point name="input.g.sfgadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgadocdt
            #add-point:BEFORE FIELD sfgadocdt
            {<point name="input.b.sfgadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgadocdt
            
            #add-point:AFTER FIELD sfgadocdt
            {<point name="input.a.sfgadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgadocdt
            #add-point:ON CHANGE sfgadocdt
            {<point name="input.g.sfgadocdt" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga002
            
            #add-point:AFTER FIELD sfga002
            {<point name="input.a.sfga002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga002
            #add-point:BEFORE FIELD sfga002
            {<point name="input.b.sfga002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga002
            #add-point:ON CHANGE sfga002
            {<point name="input.g.sfga002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga001
            #add-point:BEFORE FIELD sfga001
            {<point name="input.b.sfga001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga001
            
            #add-point:AFTER FIELD sfga001
            {<point name="input.a.sfga001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga001
            #add-point:ON CHANGE sfga001
            {<point name="input.g.sfga001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga003
            
            #add-point:AFTER FIELD sfga003
            {<point name="input.a.sfga003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga003
            #add-point:BEFORE FIELD sfga003
            {<point name="input.b.sfga003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga003
            #add-point:ON CHANGE sfga003
            {<point name="input.g.sfga003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgastus
            #add-point:BEFORE FIELD sfgastus
            {<point name="input.b.sfgastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgastus
            
            #add-point:AFTER FIELD sfgastus
            {<point name="input.a.sfgastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgastus
            #add-point:ON CHANGE sfgastus
            {<point name="input.g.sfgastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfgasite
            #add-point:BEFORE FIELD sfgasite
            {<point name="input.b.sfgasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfgasite
            
            #add-point:AFTER FIELD sfgasite
            {<point name="input.a.sfgasite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfgasite
            #add-point:ON CHANGE sfgasite
            {<point name="input.g.sfgasite" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga011
            
            #add-point:AFTER FIELD sfga011
            {<point name="input.a.sfga011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga011
            #add-point:BEFORE FIELD sfga011
            {<point name="input.b.sfga011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga011
            #add-point:ON CHANGE sfga011
            {<point name="input.g.sfga011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga012
            #add-point:BEFORE FIELD sfga012
            {<point name="input.b.sfga012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga012
            
            #add-point:AFTER FIELD sfga012
            {<point name="input.a.sfga012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga012
            #add-point:ON CHANGE sfga012
            {<point name="input.g.sfga012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga013
            #add-point:BEFORE FIELD sfga013
            {<point name="input.b.sfga013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga013
            
            #add-point:AFTER FIELD sfga013
            {<point name="input.a.sfga013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga013
            #add-point:ON CHANGE sfga013
            {<point name="input.g.sfga013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga014
            #add-point:BEFORE FIELD sfga014
            {<point name="input.b.sfga014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga014
            
            #add-point:AFTER FIELD sfga014
            {<point name="input.a.sfga014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga014
            #add-point:ON CHANGE sfga014
            {<point name="input.g.sfga014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga006
            
            #add-point:AFTER FIELD sfga006
            {<point name="input.a.sfga006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga006
            #add-point:BEFORE FIELD sfga006
            {<point name="input.b.sfga006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga006
            #add-point:ON CHANGE sfga006
            {<point name="input.g.sfga006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga007
            #add-point:BEFORE FIELD sfga007
            {<point name="input.b.sfga007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga007
            
            #add-point:AFTER FIELD sfga007
            {<point name="input.a.sfga007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga007
            #add-point:ON CHANGE sfga007
            {<point name="input.g.sfga007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga008
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_sfga_m.sfga008,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfga008
            END IF 
 
 
            #add-point:AFTER FIELD sfga008
            {<point name="input.a.sfga008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga008
            #add-point:BEFORE FIELD sfga008
            {<point name="input.b.sfga008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga008
            #add-point:ON CHANGE sfga008
            {<point name="input.g.sfga008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga009
            #add-point:BEFORE FIELD sfga009
            {<point name="input.b.sfga009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga009
            
            #add-point:AFTER FIELD sfga009
            {<point name="input.a.sfga009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga009
            #add-point:ON CHANGE sfga009
            {<point name="input.g.sfga009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sfga010
            #add-point:BEFORE FIELD sfga010
            {<point name="input.b.sfga010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sfga010
            
            #add-point:AFTER FIELD sfga010
            {<point name="input.a.sfga010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sfga010
            #add-point:ON CHANGE sfga010
            {<point name="input.g.sfga010" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.sfgadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgadocno
            #add-point:ON ACTION controlp INFIELD sfgadocno
            {<point name="input.c.sfgadocno" />}
            #END add-point
 
         #Ctrlp:input.c.sfgadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgadocdt
            #add-point:ON ACTION controlp INFIELD sfgadocdt
            {<point name="input.c.sfgadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.sfga002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga002
            #add-point:ON ACTION controlp INFIELD sfga002
            {<point name="input.c.sfga002" />}
            #END add-point
 
         #Ctrlp:input.c.sfga001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga001
            #add-point:ON ACTION controlp INFIELD sfga001
            {<point name="input.c.sfga001" />}
            #END add-point
 
         #Ctrlp:input.c.sfga003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga003
            #add-point:ON ACTION controlp INFIELD sfga003
            {<point name="input.c.sfga003" />}
            #END add-point
 
         #Ctrlp:input.c.sfgastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgastus
            #add-point:ON ACTION controlp INFIELD sfgastus
            {<point name="input.c.sfgastus" />}
            #END add-point
 
         #Ctrlp:input.c.sfgasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfgasite
            #add-point:ON ACTION controlp INFIELD sfgasite
            {<point name="input.c.sfgasite" />}
            #END add-point
 
         #Ctrlp:input.c.sfga011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga011
            #add-point:ON ACTION controlp INFIELD sfga011
            {<point name="input.c.sfga011" />}
            #END add-point
 
         #Ctrlp:input.c.sfga012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga012
            #add-point:ON ACTION controlp INFIELD sfga012
            {<point name="input.c.sfga012" />}
            #END add-point
 
         #Ctrlp:input.c.imaal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point
 
         #Ctrlp:input.c.imaal004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point
 
         #Ctrlp:input.c.sfga013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga013
            #add-point:ON ACTION controlp INFIELD sfga013
            {<point name="input.c.sfga013" />}
            #END add-point
 
         #Ctrlp:input.c.sfga014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga014
            #add-point:ON ACTION controlp INFIELD sfga014
            {<point name="input.c.sfga014" />}
            #END add-point
 
         #Ctrlp:input.c.sfga006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga006
            #add-point:ON ACTION controlp INFIELD sfga006
            {<point name="input.c.sfga006" />}
            #END add-point
 
         #Ctrlp:input.c.sfga007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga007
            #add-point:ON ACTION controlp INFIELD sfga007
            {<point name="input.c.sfga007" />}
            #END add-point
 
         #Ctrlp:input.c.sfga008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga008
            #add-point:ON ACTION controlp INFIELD sfga008
            {<point name="input.c.sfga008" />}
            #END add-point
 
         #Ctrlp:input.c.sfga009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga009
            #add-point:ON ACTION controlp INFIELD sfga009
            {<point name="input.c.sfga009" />}
            #END add-point
 
         #Ctrlp:input.c.sfga010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sfga010
            #add-point:ON ACTION controlp INFIELD sfga010
            {<point name="input.c.sfga010" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_sfga_m.sfgadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO sfga_t (sfgaent,sfgadocno,sfgadocdt,sfga002,sfga001,sfga003,sfgastus,sfgasite, 
                   sfga011,sfga012,sfga013,sfga014,sfga006,sfga007,sfga008,sfga009,sfga010,sfgaownid, 
                   sfgaowndp,sfgacrtid,sfgacrtdp,sfgacrtdt,sfgamodid,sfgamoddt,sfgacnfid,sfgacnfdt,sfgapstid, 
                   sfgapstdt)
               VALUES (g_enterprise,g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga001, 
                   g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011,g_sfga_m.sfga012, 
                   g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
                   g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid, 
                   g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid, 
                   g_sfga_m.sfgacnfdt,g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_sfga_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL asrt336_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL asrt336_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL asrt336_sfga_t_mask_restore('restore_mask_o')
               
               UPDATE sfga_t SET (sfgadocno,sfgadocdt,sfga002,sfga001,sfga003,sfgastus,sfgasite,sfga011, 
                   sfga012,sfga013,sfga014,sfga006,sfga007,sfga008,sfga009,sfga010,sfgaownid,sfgaowndp, 
                   sfgacrtid,sfgacrtdp,sfgacrtdt,sfgamodid,sfgamoddt,sfgacnfid,sfgacnfdt,sfgapstid,sfgapstdt) = (g_sfga_m.sfgadocno, 
                   g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus, 
                   g_sfga_m.sfgasite,g_sfga_m.sfga011,g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014, 
                   g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008,g_sfga_m.sfga009,g_sfga_m.sfga010, 
                   g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdt, 
                   g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt,g_sfga_m.sfgapstid, 
                   g_sfga_m.sfgapstdt)
                WHERE sfgaent = g_enterprise AND sfgadocno = g_sfgadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "sfga_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL asrt336_sfga_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_sfga_m_t)
               LET g_log2 = util.JSON.stringify(g_sfga_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="asrt336.input.other" ver="12" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD sfgadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD sfgbseq
               WHEN "s_detail2"
                  NEXT FIELD sfgcseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.insert" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION asrt336_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_sfgb_d.clear()   
   CALL g_sfgb2_d.clear()  
 
 
   INITIALIZE g_sfga_m.* LIKE sfga_t.*             #DEFAULT 設定
   
   LET g_sfgadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_sfga_m.sfgaownid = g_user
      LET g_sfga_m.sfgaowndp = g_dept
      LET g_sfga_m.sfgacrtid = g_user
      LET g_sfga_m.sfgacrtdp = g_dept 
      LET g_sfga_m.sfgacrtdt = cl_get_current()
      LET g_sfga_m.sfgamodid = g_user
      LET g_sfga_m.sfgamoddt = cl_get_current()
      LET g_sfga_m.sfgastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_sfga_m.sfga009 = "0"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_sfga_m_t.* = g_sfga_m.*
      LET g_sfga_m_o.* = g_sfga_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_sfga_m.sfgastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL asrt336_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_sfga_m.* TO NULL
         INITIALIZE g_sfgb_d TO NULL
         INITIALIZE g_sfgb2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL asrt336_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_sfgb_d.clear()
      #CALL g_sfgb2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asrt336_set_act_visible()   
   CALL asrt336_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " sfgaent = '" ||g_enterprise|| "' AND",
                      " sfgadocno = '", g_sfga_m.sfgadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL asrt336_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE asrt336_cl
   
   CALL asrt336_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE asrt336_master_referesh USING g_sfga_m.sfgadocno INTO g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt, 
       g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
       g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp, 
       g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt,g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc,g_sfga_m.sfga011_desc, 
       g_sfga_m.sfga006_desc,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid_desc, 
       g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgapstid_desc 

   
   #遮罩相關處理
   LET g_sfga_m_mask_o.* =  g_sfga_m.*
   CALL asrt336_sfga_t_mask()
   LET g_sfga_m_mask_n.* =  g_sfga_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga002_desc,g_sfga_m.sfgadocno_desc, 
       g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfga003_desc,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga011_desc,g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004,g_sfga_m.sfga013,g_sfga_m.sfga014, 
       g_sfga_m.sfga006,g_sfga_m.sfga006_desc,g_sfga_m.sfga007,g_sfga_m.sfga008,g_sfga_m.sfga009,g_sfga_m.sfga010, 
       g_sfga_m.sfgaownid,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid, 
       g_sfga_m.sfgacrtid_desc,g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid, 
       g_sfga_m.sfgamodid_desc,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstid_desc,g_sfga_m.sfgapstdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL asrt336_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.insert_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION asrt336_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO sfgb_t
                  (sfgbent,
                   sfgbdocno,
                   sfgbseq
                   ,sfgb001,sfgb002,sfgb003,sfgbsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_sfgb_d[g_detail_idx].sfgb001,g_sfgb_d[g_detail_idx].sfgb002,g_sfgb_d[g_detail_idx].sfgb003, 
                       g_sfgb_d[g_detail_idx].sfgbsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfgb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_sfgb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO sfgc_t
                  (sfgcent,
                   sfgcdocno,
                   sfgcseq
                   ,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006,sfgcsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_sfgb2_d[g_detail_idx].sfgc001,g_sfgb2_d[g_detail_idx].sfgc002,g_sfgb2_d[g_detail_idx].sfgc003, 
                       g_sfgb2_d[g_detail_idx].sfgc004,g_sfgb2_d[g_detail_idx].sfgc005,g_sfgb2_d[g_detail_idx].sfgc006, 
                       g_sfgb2_d[g_detail_idx].sfgcsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sfgc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_sfgb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.key_delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION asrt336_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION asrt336_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.lock_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION asrt336_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL asrt336_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "sfgb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN asrt336_bcl USING g_enterprise,
                                       g_sfga_m.sfgadocno,g_sfgb_d[g_detail_idx].sfgbseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "asrt336_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "sfgc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN asrt336_bcl2 USING g_enterprise,
                                             g_sfga_m.sfgadocno,g_sfgb2_d[g_detail_idx].sfgcseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "asrt336_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.main" ver="23" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("asr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT sfgadocno,sfgadocdt,sfga002,'','',sfga001,sfga003,'',sfgastus,sfgasite, 
       sfga011,'',sfga012,'','',sfga013,sfga014,sfga006,'',sfga007,sfga008,sfga009,sfga010,sfgaownid, 
       '',sfgaowndp,'',sfgacrtid,'',sfgacrtdp,'',sfgacrtdt,sfgamodid,'',sfgamoddt,sfgacnfid,'',sfgacnfdt, 
       sfgapstid,'',sfgapstdt", 
                      " FROM sfga_t",
                      " WHERE sfgaent= ? AND sfgadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE asrt336_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.sfgadocno,t0.sfgadocdt,t0.sfga002,t0.sfga001,t0.sfga003,t0.sfgastus, 
       t0.sfgasite,t0.sfga011,t0.sfga012,t0.sfga013,t0.sfga014,t0.sfga006,t0.sfga007,t0.sfga008,t0.sfga009, 
       t0.sfga010,t0.sfgaownid,t0.sfgaowndp,t0.sfgacrtid,t0.sfgacrtdp,t0.sfgacrtdt,t0.sfgamodid,t0.sfgamoddt, 
       t0.sfgacnfid,t0.sfgacnfdt,t0.sfgapstid,t0.sfgapstdt,t1.ooag011 ,t2.ooefl003 ,t3.srza002 ,t4.oocql004 , 
       t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooag011 ,t11.ooag011",
               " FROM sfga_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.sfga002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.sfga003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN srza_t t3 ON t3.srzaent='"||g_enterprise||"' AND t3.srza001=t0.sfga011  ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='221' AND t4.oocql002=t0.sfga006 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.sfgaownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.sfgaowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.sfgacrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=t0.sfgacrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.sfgamodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.sfgacnfid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=t0.sfgapstid  ",
 
               " WHERE t0.sfgaent = '" ||g_enterprise|| "' AND t0.sfgadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE asrt336_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_asrt336 WITH FORM cl_ap_formpath("asr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL asrt336_init()   
 
      #進入選單 Menu (="N")
      CALL asrt336_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_asrt336
      
   END IF 
   
   CLOSE asrt336_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="asrt336.mask_functions" ver="2" status="" src="s" readonly="">
    <![CDATA[&include "erp/asr/asrt336_mask.4gl"
]]>
  </section>
  <section id="asrt336.modify" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION asrt336_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_sfga_m_t.* = g_sfga_m.*
   LET g_sfga_m_o.* = g_sfga_m.*
   
   IF g_sfga_m.sfgadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
   CALL s_transaction_begin()
   
   OPEN asrt336_cl USING g_enterprise,g_sfga_m.sfgadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN asrt336_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE asrt336_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE asrt336_master_referesh USING g_sfga_m.sfgadocno INTO g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt, 
       g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
       g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp, 
       g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt,g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc,g_sfga_m.sfga011_desc, 
       g_sfga_m.sfga006_desc,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid_desc, 
       g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgapstid_desc 

   
   #檢查是否允許此動作
   IF NOT asrt336_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_sfga_m_mask_o.* =  g_sfga_m.*
   CALL asrt336_sfga_t_mask()
   LET g_sfga_m_mask_n.* =  g_sfga_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL asrt336_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_sfga_m.sfgamodid = g_user 
LET g_sfga_m.sfgamoddt = cl_get_current()
LET g_sfga_m.sfgamodid_desc = cl_get_username(g_sfga_m.sfgamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL asrt336_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE sfga_t SET (sfgamodid,sfgamoddt) = (g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt)
          WHERE sfgaent = g_enterprise AND sfgadocno = g_sfgadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_sfga_m.* = g_sfga_m_t.*
         CALL asrt336_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_sfga_m.sfgadocno != g_sfgadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE sfgb_t SET sfgbdocno = g_sfga_m.sfgadocno
 
          WHERE sfgbent = g_enterprise AND sfgbdocno = g_sfgadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfgb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfgb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE sfgc_t
            SET sfgcdocno = g_sfga_m.sfgadocno
 
          WHERE sfgcent = g_enterprise AND
                sfgcdocno = g_sfgadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfgc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sfgc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asrt336_set_act_visible()   
   CALL asrt336_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " sfgaent = '" ||g_enterprise|| "' AND",
                      " sfgadocno = '", g_sfga_m.sfgadocno, "' "
 
   #填到對應位置
   CALL asrt336_browser_fill("")
 
   CLOSE asrt336_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL asrt336_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="asrt336.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION asrt336_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL asrt336_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_sfga_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="asrt336.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="asrt336.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="asrt336.query" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION asrt336_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_sfgb_d.clear()
   CALL g_sfgb2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL asrt336_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL asrt336_browser_fill("")
      CALL asrt336_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL asrt336_filter_show('sfgadocno')
   CALL asrt336_filter_show('sfgadocdt')
   CALL asrt336_filter_show('sfga002')
   CALL asrt336_filter_show('sfga003')
   CALL asrt336_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL asrt336_fetch("F") 
      #顯示單身筆數
      CALL asrt336_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.reproduce" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION asrt336_reproduce()
   DEFINE l_newno     LIKE sfga_t.sfgadocno 
   DEFINE l_oldno     LIKE sfga_t.sfgadocno 
 
   DEFINE l_master    RECORD LIKE sfga_t.*
   DEFINE l_detail    RECORD LIKE sfgb_t.*
   DEFINE l_detail2    RECORD LIKE sfgc_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_sfga_m.sfgadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
    
   LET g_sfga_m.sfgadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_sfga_m.sfgaownid = g_user
      LET g_sfga_m.sfgaowndp = g_dept
      LET g_sfga_m.sfgacrtid = g_user
      LET g_sfga_m.sfgacrtdp = g_dept 
      LET g_sfga_m.sfgacrtdt = cl_get_current()
      LET g_sfga_m.sfgamodid = g_user
      LET g_sfga_m.sfgamoddt = cl_get_current()
      LET g_sfga_m.sfgastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_sfga_m.sfgastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_sfga_m.sfgadocno_desc = ''
   DISPLAY BY NAME g_sfga_m.sfgadocno_desc
 
   
   CALL asrt336_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_sfga_m.* TO NULL
      INITIALIZE g_sfgb_d TO NULL
      INITIALIZE g_sfgb2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL asrt336_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL asrt336_set_act_visible()   
   CALL asrt336_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_sfgadocno_t = g_sfga_m.sfgadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " sfgaent = '" ||g_enterprise|| "' AND",
                      " sfgadocno = '", g_sfga_m.sfgadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL asrt336_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL asrt336_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL asrt336_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION asrt336_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION asrt336_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION asrt336_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION asrt336_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION asrt336_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("sfgadocno,sfgadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("sfgadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION asrt336_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_no_entry" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION asrt336_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("sfgadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("sfgadocno,sfgadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION asrt336_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="asrt336.set_pk_array" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION asrt336_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_sfga_m.sfgadocno
   LET g_pk_array[1].column = 'sfgadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="asrt336.show" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION asrt336_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL asrt336_b_fill() #單身填充
      CALL asrt336_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL asrt336_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_sfga_m_mask_o.* =  g_sfga_m.*
   CALL asrt336_sfga_t_mask()
   LET g_sfga_m_mask_n.* =  g_sfga_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga002_desc,g_sfga_m.sfgadocno_desc, 
       g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfga003_desc,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga011_desc,g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004,g_sfga_m.sfga013,g_sfga_m.sfga014, 
       g_sfga_m.sfga006,g_sfga_m.sfga006_desc,g_sfga_m.sfga007,g_sfga_m.sfga008,g_sfga_m.sfga009,g_sfga_m.sfga010, 
       g_sfga_m.sfgaownid,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid, 
       g_sfga_m.sfgacrtid_desc,g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid, 
       g_sfga_m.sfgamodid_desc,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstid_desc,g_sfga_m.sfgapstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_sfga_m.sfgastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_sfgb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_sfgb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL asrt336_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.signature" ver="14" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION asrt336_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL asrt336_show()
   CALL asrt336_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_sfga_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_sfgb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_sfgb2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL asrt336_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL asrt336_ui_headershow()
   CALL asrt336_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION asrt336_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL asrt336_ui_headershow()  
   CALL asrt336_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="asrt336.state_change" ver="21" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION asrt336_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_sfga_m.sfgadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN asrt336_cl USING g_enterprise,g_sfga_m.sfgadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN asrt336_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE asrt336_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE asrt336_master_referesh USING g_sfga_m.sfgadocno INTO g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt, 
       g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
       g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp, 
       g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt,g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc,g_sfga_m.sfga011_desc, 
       g_sfga_m.sfga006_desc,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid_desc, 
       g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgapstid_desc 

 
   #檢查是否允許此動作
   IF NOT asrt336_action_chk() THEN
      CLOSE asrt336_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga002_desc,g_sfga_m.sfgadocno_desc, 
       g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfga003_desc,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga011_desc,g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004,g_sfga_m.sfga013,g_sfga_m.sfga014, 
       g_sfga_m.sfga006,g_sfga_m.sfga006_desc,g_sfga_m.sfga007,g_sfga_m.sfga008,g_sfga_m.sfga009,g_sfga_m.sfga010, 
       g_sfga_m.sfgaownid,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid, 
       g_sfga_m.sfgacrtid_desc,g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid, 
       g_sfga_m.sfgamodid_desc,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstid_desc,g_sfga_m.sfgapstdt
 
   CASE g_sfga_m.sfgastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_sfga_m.sfgastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT asrt336_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE asrt336_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT asrt336_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE asrt336_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制
            {<point name="statechange.unposted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "Z"
      AND lc_state <> "X"
      ) OR 
      g_sfga_m.sfgastus = lc_state OR cl_null(lc_state) THEN
      CLOSE asrt336_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_sfga_m.sfgamodid = g_user
   LET g_sfga_m.sfgamoddt = cl_get_current()
   LET g_sfga_m.sfgastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE sfga_t 
      SET (sfgastus,sfgamodid,sfgamoddt) 
        = (g_sfga_m.sfgastus,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt)     
    WHERE sfgaent = g_enterprise AND sfgadocno = g_sfga_m.sfgadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE asrt336_master_referesh USING g_sfga_m.sfgadocno INTO g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt, 
          g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
          g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
          g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid, 
          g_sfga_m.sfgacrtdp,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid, 
          g_sfga_m.sfgacnfdt,g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt,g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc, 
          g_sfga_m.sfga011_desc,g_sfga_m.sfga006_desc,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp_desc, 
          g_sfga_m.sfgacrtid_desc,g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgacnfid_desc, 
          g_sfga_m.sfgapstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt,g_sfga_m.sfga002,g_sfga_m.sfga002_desc,g_sfga_m.sfgadocno_desc, 
          g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfga003_desc,g_sfga_m.sfgastus,g_sfga_m.sfgasite, 
          g_sfga_m.sfga011,g_sfga_m.sfga011_desc,g_sfga_m.sfga012,g_sfga_m.imaal003,g_sfga_m.imaal004, 
          g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga006_desc,g_sfga_m.sfga007, 
          g_sfga_m.sfga008,g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaownid_desc, 
          g_sfga_m.sfgaowndp,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtid_desc,g_sfga_m.sfgacrtdp, 
          g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgamoddt, 
          g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgacnfdt,g_sfga_m.sfgapstid,g_sfga_m.sfgapstid_desc, 
          g_sfga_m.sfgapstdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE asrt336_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL asrt336_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="asrt336.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION asrt336_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="asrt336.ui_browser_refresh" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION asrt336_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_sfgadocno = g_sfga_m.sfgadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.ui_detailshow" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION asrt336_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="asrt336.ui_dialog" ver="50" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION asrt336_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL asrt336_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_sfga_m.* TO NULL
         CALL g_sfgb_d.clear()
         CALL g_sfgb2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL asrt336_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL asrt336_fetch('') # reload data
               LET l_ac = 1
               CALL asrt336_ui_detailshow() #Setting the current row 
         
               CALL asrt336_idx_chk()
               #NEXT FIELD sfgbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_sfgb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL asrt336_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL asrt336_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_sfgb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL asrt336_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL asrt336_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL asrt336_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL asrt336_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL asrt336_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL asrt336_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL asrt336_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL asrt336_set_act_visible()   
            CALL asrt336_set_act_no_visible()
            IF NOT (g_sfga_m.sfgadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " sfgaent = '" ||g_enterprise|| "' AND",
                                  " sfgadocno = '", g_sfga_m.sfgadocno, "' "
 
               #填到對應位置
               CALL asrt336_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "sfga_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfgb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfgc_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL asrt336_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "sfga_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfgb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "sfgc_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL asrt336_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL asrt336_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL asrt336_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL asrt336_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asrt336_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL asrt336_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asrt336_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL asrt336_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asrt336_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL asrt336_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asrt336_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL asrt336_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL asrt336_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_sfgb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_sfgb2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD sfgbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL asrt336_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL asrt336_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION maintain_sfgc
            LET g_action_choice="maintain_sfgc"
            IF cl_auth_chk_act("maintain_sfgc") THEN
               
               #add-point:ON ACTION maintain_sfgc
               {<point name="menu.maintain_sfgc" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL asrt336_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL asrt336_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/asr/asrt336_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL asrt336_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL asrt336_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL asrt336_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL asrt336_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL asrt336_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_sfga_m.sfgadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="asrt336.ui_headershow" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION asrt336_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_sfga_m.sfgadocno = g_browser[g_current_idx].b_sfgadocno   
 
   EXECUTE asrt336_master_referesh USING g_sfga_m.sfgadocno INTO g_sfga_m.sfgadocno,g_sfga_m.sfgadocdt, 
       g_sfga_m.sfga002,g_sfga_m.sfga001,g_sfga_m.sfga003,g_sfga_m.sfgastus,g_sfga_m.sfgasite,g_sfga_m.sfga011, 
       g_sfga_m.sfga012,g_sfga_m.sfga013,g_sfga_m.sfga014,g_sfga_m.sfga006,g_sfga_m.sfga007,g_sfga_m.sfga008, 
       g_sfga_m.sfga009,g_sfga_m.sfga010,g_sfga_m.sfgaownid,g_sfga_m.sfgaowndp,g_sfga_m.sfgacrtid,g_sfga_m.sfgacrtdp, 
       g_sfga_m.sfgacrtdt,g_sfga_m.sfgamodid,g_sfga_m.sfgamoddt,g_sfga_m.sfgacnfid,g_sfga_m.sfgacnfdt, 
       g_sfga_m.sfgapstid,g_sfga_m.sfgapstdt,g_sfga_m.sfga002_desc,g_sfga_m.sfga003_desc,g_sfga_m.sfga011_desc, 
       g_sfga_m.sfga006_desc,g_sfga_m.sfgaownid_desc,g_sfga_m.sfgaowndp_desc,g_sfga_m.sfgacrtid_desc, 
       g_sfga_m.sfgacrtdp_desc,g_sfga_m.sfgamodid_desc,g_sfga_m.sfgacnfid_desc,g_sfga_m.sfgapstid_desc 

   CALL asrt336_sfga_t_mask()
   CALL asrt336_show()
      
END FUNCTION
]]>
  </section>
  <section id="asrt336.unlock_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION asrt336_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asrt336_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asrt336_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="asrt336.update_b" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION asrt336_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfgb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL asrt336_sfgb_t_mask_restore('restore_mask_o')
               
      UPDATE sfgb_t 
         SET (sfgbdocno,
              sfgbseq
              ,sfgb001,sfgb002,sfgb003,sfgbsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_sfgb_d[g_detail_idx].sfgb001,g_sfgb_d[g_detail_idx].sfgb002,g_sfgb_d[g_detail_idx].sfgb003, 
                  g_sfgb_d[g_detail_idx].sfgbsite) 
         WHERE sfgbent = g_enterprise AND sfgbdocno = ps_keys_bak[1] AND sfgbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfgb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfgb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL asrt336_sfgb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfgc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL asrt336_sfgc_t_mask_restore('restore_mask_o')
               
      UPDATE sfgc_t 
         SET (sfgcdocno,
              sfgcseq
              ,sfgc001,sfgc002,sfgc003,sfgc004,sfgc005,sfgc006,sfgcsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_sfgb2_d[g_detail_idx].sfgc001,g_sfgb2_d[g_detail_idx].sfgc002,g_sfgb2_d[g_detail_idx].sfgc003, 
                  g_sfgb2_d[g_detail_idx].sfgc004,g_sfgb2_d[g_detail_idx].sfgc005,g_sfgb2_d[g_detail_idx].sfgc006, 
                  g_sfgb2_d[g_detail_idx].sfgcsite) 
         WHERE sfgcent = g_enterprise AND sfgcdocno = ps_keys_bak[1] AND sfgcseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfgc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sfgc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL asrt336_sfgc_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
