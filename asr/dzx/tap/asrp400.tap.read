<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="asrp400" std_prog="asrp400" erpver="1.0" module="ASR" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.asrp400_b1_fill" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 工单单身fill
# Memo...........:
# Usage..........: CALL asrp400_b1_fill()
#                  RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2014-03-24 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION asrp400_b1_fill()
   DEFINE l_i            LIKE type_t.num5
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_cnt          LIKE type_t.num10
   DEFINE l_srab010      LIKE srab_t.srab010
   DEFINE l_srac028      LIKE srac_t.srac028
   DEFINE l_srac029      LIKE srac_t.srac029
   
   CALL g_srab_d.clear()
   
   IF cl_null(g_param.wc) THEN
      LET g_param.wc = ' 1 = 1'
   END IF
   
   LET g_sql = " SELECT 'N'    , srab004, ''     , '' , srab005, srab006, srac008, ''     , ",
               "        srac009, srab009, srac027, 0  , 0      , 0      , srac037, ''     , ",
               "        ''     , ''     , ''     , '' , ''     , ''     , 0      , srab000, ",
               "        srab010, srac028, srac029 ",
               "   FROM sraa_t,srab_t,srac_t",
               " WHERE srabent  = sraaent  AND srabent  = sracent  AND srabent  = ",g_enterprise,
               "   AND srabsite = sraasite AND srabsite = sracsite AND srabsite = '",g_site,"'",
               "   AND srab000  = sraa000 ",
               "   AND srab001  = sraa001  AND srab001  = srac001  AND srab001 = '",g_param.sraa001,"'",
               "   AND srab002  = sraa002 ",
               "   AND srab003  = sraa003 ",
               "   AND srab004  = srac004 ",
               "   AND srab005  = srac005 ",
               "   AND srab006  = srac006 ",
               "   AND srab008  = srac002 ",
               "   AND srac036  = 'Y' ",
               "   AND sraastus = 'Y' ",
               "   AND ",g_param.wc
               
#               "   AND srab000  = ( SELECT MAX(sraa000) FROM sraa_t ",
#               "                     WHERE sraaent  = srabent  AND sraasite = srabsite ",
#               "                       AND sraa001  = srab001  AND sraa002  = srab002  ",
#               "                       AND sraa003  = srab003  AND sraastus = 'Y' ) " 

   PREPARE asrp400_b1_fill_p1 FROM g_sql
   DECLARE asrp400_b1_fill_cs1 CURSOR FOR asrp400_b1_fill_p1
   IF SQLCA.sqlcode THEN
      CALL cl_err('declare asrp400_b1_fill_cs1',SQLCA.sqlcode,1)
      RETURN
   END IF

   LET l_i = 1
   CALL g_pmal.clear()
   FOREACH asrp400_b1_fill_cs1 INTO g_srab_d[l_i].*,l_srab010,l_srac028,l_srac029
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF   
      
      #完工差異數diff_qty:生產數量sfaa012-入庫合格量sfaa050-入庫不合格量sfaa051-
      #                  下線量sfaa055-報廢量sfaa056
     
      LET g_srab_d[l_i].qty1 = l_srab010 * l_srac028 / l_srac029
      IF cl_null(g_srab_d[l_i].qty1) THEN LET g_srab_d[l_i].qty1 = 0 END IF
      
      #carrier 这里应该是少了一个"生产计划"的参数
      CALL s_asrp400_get_carried_qty(g_param.sraa001,g_srab_d[l_i].srab004,g_srab_d[l_i].srab006,
                                     g_srab_d[l_i].srac008,g_srab_d[l_i].srac009,g_srab_d[l_i].srab005,
                                     g_srab_d[l_i].srab009,g_srab_d[l_i].srac027)
           RETURNING g_srab_d[l_i].qty2
      LET g_srab_d[l_i].carry_qty = g_srab_d[l_i].qty1 - g_srab_d[l_i].qty2
      
      IF g_srab_d[l_i].carry_qty <=0 THEN
         CONTINUE FOREACH
      END IF
         
      CALL asrp400_pmdl004_reference(l_i)
      #取各字段说明
      CALL asrp400_set_desc(l_i)
        
      LET l_i = l_i + 1
   
   END FOREACH
   
   CALL g_srab_d.deleteElement(l_i)
   LET g_rec_b1 = l_i - 1
   
   IF g_rec_b1 > 0 THEN
      LET l_ac = 1
   END IF
   
   #选项清空
   CALL g_pmal.clear()    
END FUNCTION]]>
  </point>
  <point name="function.asrp400_sel_all" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 全选
# Memo...........:
# Usage..........: CALL asrp400_sel_all(p_flag)
#                       RETURNING NULL
# Input parameter: p_flag         Y/N
# Return code....: NULL
# Date & Author..: 2014-03-24 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION asrp400_sel_all(p_flag)
   DEFINE p_flag         LIKE type_t.chr1
   DEFINE l_i            LIKE type_t.num5
   DEFINE l_date         LIKE type_t.dat
   
   FOR l_i = 1 TO g_srab_d.getLength()
       LET g_srab_d[l_i].sel = p_flag
   END FOR
END FUNCTION]]>
  </point>
  <point name="function.asrp400_chk_doc_type" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 检查单别
# Memo...........:
# Usage..........: CALL asrp400_chk_doc_type(p_doc_type)
#                       RETURNING r_success
# Input parameter: p_doc_type  采购单别
# Return code....: r_success   检查通过否
# Date & Author..: 2014-04-30 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION asrp400_chk_doc_type(p_doc_type)
   DEFINE p_doc_type     LIKE ooba_t.ooba002
   DEFINE l_i            LIKE type_t.num10
   DEFINE r_success      LIKE type_t.num5
   DEFINE l_success      LIKE type_t.num5

   LET r_success = FALSE

   CALL s_aooi200_chk_slip(g_site,'',g_param.doctype,'apmt500')
        RETURNING l_success
   IF NOT l_success THEN
      RETURN r_success
   END IF

   LET r_success = TRUE
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.asrp400_filter" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 二次过滤
# Memo...........:
# Usage..........: CALL asrp400_filter()
#                  RETURNING NULL
# Input parameter: NULL
# Return code....: NULL
# Date & Author..: 2014-04-10 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION asrp400_filter()
   DEFINE l_filter_wc    STRING

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      CONSTRUCT l_filter_wc ON srab004,srab005,srab006,srac008,srac009,srac027,srab009
           FROM s_detail1[1].srab004,s_detail1[1].srab005,s_detail1[1].srab006,s_detail1[1].srac008,
                s_detail1[1].srac009,s_detail1[1].srac027,s_detail1[1].srab009

            #料件
            ON ACTION controlp INFIELD srab004
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_bmaa001_1()                     
               DISPLAY g_qryparam.return1 TO srab004  
               NEXT FIELD srab004   

            #BOM特性
            ON ACTION controlp INFIELD srab005
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_bmaa002()                    
               DISPLAY g_qryparam.return1 TO srab005  
               NEXT FIELD srab005                 

            #作业编号
            ON ACTION controlp INFIELD srac008
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = '221'
               CALL q_oocq002()
               DISPLAY g_qryparam.return1 TO srac008
               NEXT FIELD srac008

            #单位
            ON ACTION controlp INFIELD srac027
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooca001()
               DISPLAY g_qryparam.return1 TO srac027
               NEXT FIELD srac027

      END CONSTRUCT
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG      

   END DIALOG
   
   LET g_param.wc = g_param.wc CLIPPED,' AND ',l_filter_wc
   CALL asrp400_b1_fill()
     
END FUNCTION]]>
  </point>
  <point name="function.asrp400_chk_sraa001" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 检查 重复性生产计划sraa001 值的合法性
# Memo...........:
# Usage..........: CALL asrp400_chk_sraa001()
#                       RETURNING r_success
# Input parameter: NULL
# Return code....: r_success 检查通过否标识位
# Date & Author..: 2014-04-30 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION asrp400_chk_sraa001()
   DEFINE r_success      LIKE type_t.num5
   DEFINE l_cnt          LIKE type_t.num5

   LET r_success = FALSE

   #检查重复性生产版本档
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = g_param.sraa001
   IF NOT cl_chk_exist("v_srza001") THEN
      RETURN r_success
   END IF

   LET r_success = TRUE
   RETURN r_success

END FUNCTION]]>
  </point>
  <point name="function.asrp400_pmdl004_reference" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 厂商相关字段的DEFAULT
# Memo...........:
# Usage..........: CALL asrp400_pmdl004_reference(p_i)
#                       RETURNING NULL
# Input parameter: p_i       行号
# Return code....: NULL
# Date & Author..: 2014-05-04 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION asrp400_pmdl004_reference(p_i)
   DEFINE p_i            LIKE type_t.num10
   DEFINE l_pmal         RECORD LIKE pmal_t.*
   DEFINE l_pmab         RECORD LIKE pmab_t.*
   DEFINE l_pmal002      LIKE pmal_t.pmal002   #控制组
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_i            LIKE type_t.num5

   IF p_i <= 0 THEN
      RETURN
   END IF

   IF cl_null(g_srab_d[p_i].pmdl004) THEN
      RETURN
   END IF
   
   #相同的供应商时,仅提供一次取pmal002的机会,否则可能同一个供应商,有几十笔资料时,跳几十次选择的情形
   LET l_pmal002 = ''
   FOR l_i = 1 TO g_pmal.getLength()
       IF g_pmal[l_i].pmdl004 = g_srab_d[p_i].pmdl004 AND NOT cl_null(g_pmal[l_i].pmal002) THEN
          LET l_pmal002 = g_pmal[l_i].pmal002
          EXIT FOR
       END IF
   END FOR

   IF cl_null(l_pmal002) THEN
      CALL s_control_get_pmal002('4',g_user,g_dept,g_srab_d[p_i].pmdl004)
           RETURNING l_success,l_pmal002
      IF NOT l_success THEN
         LET l_pmal002 = NULL
      END IF
      IF NOT cl_null(l_pmal002) THEN
         CALL g_pmal.insertElement(1)
         LET g_pmal[1].pmdl004 = g_srab_d[p_i].pmdl004
         LET g_pmal[1].pmal002 = l_pmal002
      END IF
   END IF

   #取供应商的控制组预设条件
   SELECT * INTO l_pmal.* FROM pmal_t
    WHERE pmalent = g_enterprise
      AND pmal001 = g_srab_d[p_i].pmdl004
      AND pmal002 = l_pmal002

   SELECT * INTO l_pmab.* FROM pmab_t
    WHERE pmabent  = g_enterprise
      AND pmabsite = g_site
      AND pmab001  = g_srab_d[p_i].pmdl004

   #取价方式
   LET g_srab_d[p_i].pmdl017 = l_pmal.pmal021
   IF cl_null(g_srab_d[p_i].pmdl017) THEN
      LET g_srab_d[p_i].pmdl017 = l_pmab.pmab054
   END IF
   CALL s_desc_get_price_type_desc(g_srab_d[p_i].pmdl017)
        RETURNING g_srab_d[p_i].pmdl017_desc

   #币种
   LET g_srab_d[p_i].pmdl015 = l_pmal.pmal003
   IF cl_null(g_srab_d[p_i].pmdl015) THEN
      LET g_srab_d[p_i].pmdl015 = l_pmab.pmab033
   END IF
   CALL s_desc_get_currency_desc(g_srab_d[p_i].pmdl015)
        RETURNING g_srab_d[p_i].pmdl015_desc

   #税别
   LET g_srab_d[p_i].pmdl011 = l_pmal.pmal004
   IF cl_null(g_srab_d[p_i].pmdl011) THEN
      LET g_srab_d[p_i].pmdl011 = l_pmab.pmab034
   END IF
   CALL s_desc_get_tax_desc1(g_site,g_srab_d[p_i].pmdl011)
        RETURNING g_srab_d[p_i].pmdl011_desc

END FUNCTION]]>
  </point>
  <point name="function.asrp400_set_desc" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 各说明字段的FILL
# Memo...........:
# Usage..........: CALL asrp400_set_desc(p_i)
#                  RETURNING NULL
# Input parameter: p_i       当前行号
# Return code....: NULL
# Date & Author..: 2014-04-12 By Carrier
# Modify.........:
################################################################################
PRIVATE FUNCTION asrp400_set_desc(p_i)
   DEFINE p_i            LIKE type_t.num10

   IF p_i <= 0 OR cl_null(p_i) THEN
      RETURN
   END IF

   #品名/规格
   IF NOT cl_null(g_srab_d[p_i].srab004) THEN
      CALL s_desc_get_item_desc(g_srab_d[p_i].srab004)
           RETURNING g_srab_d[p_i].srab004_desc1,g_srab_d[p_i].srab004_desc2
   END IF

   #作业编号
   IF NOT cl_null(g_srab_d[p_i].srac008) THEN
      CALL s_desc_get_acc_desc('221',g_srab_d[p_i].srac008)
           RETURNING g_srab_d[p_i].srac008_desc
   END IF

   #厂商说明
   IF NOT cl_null(g_srab_d[p_i].pmdl004) THEN
      CALL s_desc_get_trading_partner_abbr_desc(g_srab_d[p_i].pmdl004)
           RETURNING g_srab_d[p_i].pmdl004_desc
   END IF

   #取价说明
   IF NOT cl_null(g_srab_d[p_i].pmdl017) THEN
      CALL s_desc_get_price_type_desc(g_srab_d[p_i].pmdl017)
           RETURNING g_srab_d[p_i].pmdl017_desc
   END IF

   #币种
   IF NOT cl_null(g_srab_d[p_i].pmdl015) THEN
      CALL s_desc_get_currency_desc(g_srab_d[p_i].pmdl015)
           RETURNING g_srab_d[p_i].pmdl015_desc
   END IF

   #税种
   IF NOT cl_null(g_srab_d[p_i].pmdl011) THEN
      CALL s_desc_get_tax_desc1(g_site,g_srab_d[p_i].pmdl011)
           RETURNING g_srab_d[p_i].pmdl011_desc
   END IF


END FUNCTION]]>
  </point>
  <point name="construct.c.l_srab004" order="" ver="2" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_srab004  #顯示到畫面上
            NEXT FIELD l_srab004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.l_srab005" order="" ver="2" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_srab005  #顯示到畫面上
            NEXT FIELD l_srab005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.sfaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag00_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa002  #顯示到畫面上

            NEXT FIELD sfaa002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.sfaa009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa009  #顯示到畫面上

            NEXT FIELD sfaa009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa010  #顯示到畫面上

            NEXT FIELD sfaa010                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.sfaa013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaa013  #顯示到畫面上

            NEXT FIELD sfaa013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.sfaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_sfaadocno_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfaadocno  #顯示到畫面上

            NEXT FIELD sfaadocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.sfba002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfba002  #顯示到畫面上

            NEXT FIELD sfba002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.sfba003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfba003  #顯示到畫面上

            NEXT FIELD sfba003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.sfba006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfba006  #顯示到畫面上

            NEXT FIELD sfba006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.sfba014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sfba014  #顯示到畫面上

            NEXT FIELD sfba014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.srab004" order="" ver="2" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO srab004  #顯示到畫面上
            NEXT FIELD srab004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.srab005" order="" ver="2" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO srab005  #顯示到畫面上
            NEXT FIELD srab005                     #返回原欄位
    

]]>
  </point>
  <point name="global.parameter" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[        doctype          LIKE ooba_t.ooba002,
        docdate          LIKE pmdl_t.pmdldocdt,
        sraa001          LIKE sraa_t.sraa001,
        combine          LIKE type_t.chr1,]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[TYPE type_g_srab_d     RECORD
                       sel            LIKE type_t.chr1, 
                       srab004        LIKE srab_t.srab004, 
                       srab004_desc1  LIKE type_t.chr500, 
                       srab004_desc2  LIKE type_t.chr500,   
                       srab005        LIKE srab_t.srab005, 
                       srab006        LIKE srab_t.srab006, 
                       srac008        LIKE srac_t.srac008,
                       srac008_desc   LIKE type_t.chr500,                        
                       srac009        LIKE srac_t.srac009,
                       srab009        LIKE srab_t.srab009,
                       srac027        LIKE srac_t.srac027,
                       qty1           LIKE srab_t.srab010,
                       qty2           LIKE srab_t.srab010,
                       carry_qty      LIKE srab_t.srab010,
                       pmdl004        LIKE pmdl_t.pmdl004,
                       pmdl004_desc   LIKE type_t.chr500,
                       pmdl017        LIKE pmdl_t.pmdl017,
                       pmdl017_desc   LIKE type_t.chr500,
                       pmdl015        LIKE pmdl_t.pmdl015,
                       pmdl015_desc   LIKE type_t.chr500,
                       pmdl011        LIKE pmdl_t.pmdl011,
                       pmdl011_desc   LIKE type_t.chr500,
                       price          LIKE pmdn_t.pmdn015,
                       srab000        LIKE srab_t.srab000
                       END RECORD
DEFINE g_srab_d        DYNAMIC ARRAY OF type_g_srab_d
DEFINE g_srab_d_t      type_g_srab_d
DEFINE g_arr1          DYNAMIC ARRAY OF type_g_srab_d    
DEFINE g_param         type_parameter
DEFINE g_rec_b1        LIKE type_t.num5
DEFINE l_ac            LIKE type_t.num5
DEFINE g_press         LIKE type_t.num5
DEFINE g_pmal          DYNAMIC ARRAY OF RECORD
                       pmdl004       LIKE pmdl_t.pmdl004,
                       pmal002       LIKE pmal_t.pmal002
                       END RECORD]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE lwin_curr      ui.Window
   DEFINE lfrm_curr      ui.Form
   DEFINE ls_path        STRING
]]>
  </point>
  <point name="init.init" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
#   LET lwin_curr = ui.Window.getCurrent()
#   LET lfrm_curr = lwin_curr.getForm()
#   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
#   LET ls_path = os.Path.join(ls_path,"toolbar_q.4tb")
#   CALL lfrm_curr.loadToolBar(ls_path)

   LET g_master.docdate  = cl_get_today()
   LET g_master.combine  = 'Y']]>
  </point>
  <point name="input.a.combine" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF g_master.combine NOT MATCHES '[YN]' THEN
                  NEXT FIELD combine
               END IF    
               LET lc_master.combine = g_master.combine  ]]>
  </point>
  <point name="input.a.docdate" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_master.docdate) THEN
                  LET g_master.docdate = lc_master.docdate
                  NEXT FIELD docdate
               END IF
               LET lc_master.docdate = g_master.docdate]]>
  </point>
  <point name="input.a.doctype" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_master.doctype) THEN
                  NEXT FIELD doctype
               END IF
               CALL asrp400_chk_doc_type(g_master.doctype)
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_master.doctype = lc_master.doctype      
                  NEXT FIELD doctype
               END IF
               LET lc_master.doctype = g_master.doctype]]>
  </point>
  <point name="input.a.page1.sfaa009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa_d[l_ac].sfaa009
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal002 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa_d[l_ac].sfaa009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa_d[l_ac].sfaa009_desc
]]>
  </point>
  <point name="input.a.page1.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa_d[l_ac].sfaa010
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal002 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa_d[l_ac].sfaa010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa_d[l_ac].sfaa010_desc
]]>
  </point>
  <point name="input.a.page1.sfaa012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_sfaa_d[l_ac].sfaa012) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.sfaa017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa_d[l_ac].sfaa017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl002 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa_d[l_ac].sfaa017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa_d[l_ac].sfaa017_desc
]]>
  </point>
  <point name="input.a.page1.sfaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfaa_d[g_detail_idx].sfaadocno IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfaa_d[g_detail_idx].sfaadocno != g_sfaa_d_t.sfaadocno)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfaa_t WHERE "||"sfaaent = '" ||g_enterprise|| "' AND sfaasite = '" ||g_site|| "' AND "||"sfaadocno = '"||g_sfaa_d[g_detail_idx].sfaadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.sfaasite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfzz_m.sfzzdocno IS NOT NULL AND g_sfaa_d[g_detail_idx].sfaasite IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfzz_m.sfzzdocno != g_sfzzdocno_t OR g_sfaa_d[g_detail_idx].sfaasite != g_sfaa_d_t.sfaasite)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfaa_t WHERE "||"sfaaent = '" ||g_enterprise|| "' AND "||"sfaadocno = '"||g_sfzz_m.sfzzdocno ||"' AND "|| "sfaasite = '"||g_sfaa_d[g_detail_idx].sfaasite ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.sfba002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql003 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba002_desc
]]>
  </point>
  <point name="input.a.page2.sfba003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql003 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba003_desc
]]>
  </point>
  <point name="input.a.page2.sfba006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba006
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal002 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba006_desc
]]>
  </point>
  <point name="input.a.page2.sfba012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_sfaa2_d[l_ac].sfba012) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.sfba014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal002 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba014_desc
]]>
  </point>
  <point name="input.a.page2.sfba023" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_sfaa2_d[l_ac].sfba023) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.sfbadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfzz_m.sfzzdocno IS NOT NULL AND g_sfaa2_d[g_detail_idx].sfbadocno IS NOT NULL AND g_sfaa2_d[g_detail_idx].sfbaseq IS NOT NULL AND g_sfaa2_d[g_detail_idx].sfbaseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfzz_m.sfzzdocno != g_sfzzdocno_t OR g_sfaa2_d[g_detail_idx].sfbadocno != g_sfaa2_d_t.sfbadocno OR g_sfaa2_d[g_detail_idx].sfbaseq != g_sfaa2_d_t.sfbaseq OR g_sfaa2_d[g_detail_idx].sfbaseq1 != g_sfaa2_d_t.sfbaseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfba_t WHERE "||"sfbaent = '" ||g_enterprise|| "' AND sfbasite = '" ||g_site|| "' AND "||"sfbadocno = '"||g_sfzz_m.sfzzdocno ||"' AND "|| "sfbaseq = '"||g_sfaa2_d[g_detail_idx].sfbadocno ||"' AND "|| "sfbaseq1 = '"||g_sfaa2_d[g_detail_idx].sfbaseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.sfbaseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_sfaa2_d[l_ac].sfbaseq) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_sfaa_d[g_detail_idx].sfaadocno IS NOT NULL AND g_sfaa2_d[g_detail_idx2].sfbaseq IS NOT NULL AND g_sfaa2_d[g_detail_idx2].sfbaseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfaa_d[g_detail_idx].sfaadocno != g_sfaa_d[g_detail_idx].sfaadocno OR g_sfaa2_d[g_detail_idx2].sfbaseq != g_sfaa2_d_t.sfbaseq OR g_sfaa2_d[g_detail_idx2].sfbaseq1 != g_sfaa2_d_t.sfbaseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfba_t WHERE "||"sfbaent = '" ||g_enterprise|| "' AND sfbasite = '" ||g_site|| "' AND "||"sfbadocno = '"||g_sfaa_d[g_detail_idx].sfaadocno ||"' AND "|| "sfbaseq = '"||g_sfaa2_d[g_detail_idx2].sfbaseq ||"' AND "|| "sfbaseq1 = '"||g_sfaa2_d[g_detail_idx2].sfbaseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.sfbaseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            IF NOT cl_null(g_sfaa2_d[l_ac].sfbaseq1) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  g_sfaa_d[g_detail_idx].sfaadocno IS NOT NULL AND g_sfaa2_d[g_detail_idx2].sfbaseq IS NOT NULL AND g_sfaa2_d[g_detail_idx2].sfbaseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfaa_d[g_detail_idx].sfaadocno != g_sfaa_d[g_detail_idx].sfaadocno OR g_sfaa2_d[g_detail_idx2].sfbaseq != g_sfaa2_d_t.sfbaseq OR g_sfaa2_d[g_detail_idx2].sfbaseq1 != g_sfaa2_d_t.sfbaseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfba_t WHERE "||"sfbaent = '" ||g_enterprise|| "' AND sfbasite = '" ||g_site|| "' AND "||"sfbadocno = '"||g_sfaa_d[g_detail_idx].sfaadocno ||"' AND "|| "sfbaseq = '"||g_sfaa2_d[g_detail_idx2].sfbaseq ||"' AND "|| "sfbaseq1 = '"||g_sfaa2_d[g_detail_idx2].sfbaseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.sfcb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfaa_d[g_detail_idx].sfaadocno IS NOT NULL AND g_sfaa3_d[g_detail_idx2].sfcb001 IS NOT NULL AND g_sfaa3_d[g_detail_idx2].sfcb002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfaa_d[g_detail_idx].sfaadocno != g_sfaa_d[g_detail_idx].sfaadocno OR g_sfaa3_d[g_detail_idx2].sfcb001 != g_sfaa3_d_t.sfcb001 OR g_sfaa3_d[g_detail_idx2].sfcb002 != g_sfaa3_d_t.sfcb002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfcb_t WHERE "||"sfcbent = '" ||g_enterprise|| "' AND sfcbsite = '" ||g_site|| "' AND "||"sfcbdocno = '"||g_sfaa_d[g_detail_idx].sfaadocno ||"' AND "|| "sfcb001 = '"||g_sfaa3_d[g_detail_idx2].sfcb001 ||"' AND "|| "sfcb002 = '"||g_sfaa3_d[g_detail_idx2].sfcb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.sfcb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfaa_d[g_detail_idx].sfaadocno IS NOT NULL AND g_sfaa3_d[g_detail_idx2].sfcb001 IS NOT NULL AND g_sfaa3_d[g_detail_idx2].sfcb002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfaa_d[g_detail_idx].sfaadocno != g_sfaa_d[g_detail_idx].sfaadocno OR g_sfaa3_d[g_detail_idx2].sfcb001 != g_sfaa3_d_t.sfcb001 OR g_sfaa3_d[g_detail_idx2].sfcb002 != g_sfaa3_d_t.sfcb002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfcb_t WHERE "||"sfcbent = '" ||g_enterprise|| "' AND sfcbsite = '" ||g_site|| "' AND "||"sfcbdocno = '"||g_sfaa_d[g_detail_idx].sfaadocno ||"' AND "|| "sfcb001 = '"||g_sfaa3_d[g_detail_idx2].sfcb001 ||"' AND "|| "sfcb002 = '"||g_sfaa3_d[g_detail_idx2].sfcb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.sfcbdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_sfzz_m.sfzzdocno IS NOT NULL AND g_sfaa3_d[g_detail_idx].sfcbdocno IS NOT NULL AND g_sfaa3_d[g_detail_idx].sfcb001 IS NOT NULL AND g_sfaa3_d[g_detail_idx].sfcb002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_sfzz_m.sfzzdocno != g_sfzzdocno_t OR g_sfaa3_d[g_detail_idx].sfcbdocno != g_sfaa3_d_t.sfcbdocno OR g_sfaa3_d[g_detail_idx].sfcb001 != g_sfaa3_d_t.sfcb001 OR g_sfaa3_d[g_detail_idx].sfcb002 != g_sfaa3_d_t.sfcb002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfcb_t WHERE "||"sfcbent = '" ||g_enterprise|| "' AND sfcbsite = '" ||g_site|| "' AND "||"sfcbdocno = '"||g_sfzz_m.sfzzdocno ||"' AND "|| "sfcb001 = '"||g_sfaa3_d[g_detail_idx].sfcbdocno ||"' AND "|| "sfcb002 = '"||g_sfaa3_d[g_detail_idx].sfcb001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.sfzzdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_sfzz_m.sfzzdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_sfzz_m.sfzzdocno != g_sfzzdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sfzz_t WHERE "||"sfzzent = '" ||g_enterprise|| "' AND "||"sfzzdocno = '"||g_sfzz_m.sfzzdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.sraa001" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_master.sraa001) THEN
                  NEXT FIELD sraa001
               END IF
               CALL asrp400_chk_sraa001()
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_master.sraa001 = lc_master.sraa001 
                  NEXT FIELD sraa001
               END IF
               LET lc_master.sraa001 = g_master.sraa001  

]]>
  </point>
  <point name="input.c.doctype" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_master.doctype          
               #給予arg
               SELECT ooef004 INTO l_ooef004
                 FROM ooef_t
                WHERE ooefent = g_enterprise
                  AND ooef001 = g_site
               LET g_qryparam.arg1 = l_ooef004
               LET g_qryparam.arg2 = "apmt500"
               CALL q_ooba002_1()                               
               LET g_master.doctype = g_qryparam.return1      
               DISPLAY g_master.doctype TO doctype           
               NEXT FIELD doctype]]>
  </point>
  <point name="input.c.page1.sfaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa_d[l_ac].sfaa002             #給予default值
            LET g_qryparam.default2 = "" #g_sfaa_d[l_ac].oofa011 #全名

            #給予arg

            CALL q_ooag001_2()                                #呼叫開窗

            LET g_sfaa_d[l_ac].sfaa002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_sfaa_d[l_ac].oofa011 = g_qryparam.return2 #全名

            DISPLAY g_sfaa_d[l_ac].sfaa002 TO sfaa002              #顯示到畫面上
            #DISPLAY g_sfaa_d[l_ac].oofa011 TO oofa011 #全名

            NEXT FIELD sfaa002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.sfaa009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa_d[l_ac].sfaa009             #給予default值

            #給予arg

            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_sfaa_d[l_ac].sfaa009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa_d[l_ac].sfaa009 TO sfaa009              #顯示到畫面上

            NEXT FIELD sfaa009                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.sfaa010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa_d[l_ac].sfaa010             #給予default值

            #給予arg

            CALL q_imaa001_9()                                #呼叫開窗

            LET g_sfaa_d[l_ac].sfaa010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa_d[l_ac].sfaa010 TO sfaa010              #顯示到畫面上

            NEXT FIELD sfaa010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.sfaa013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa_d[l_ac].sfaa013             #給予default值

            #給予arg

            CALL q_ooca001()                                #呼叫開窗

            LET g_sfaa_d[l_ac].sfaa013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa_d[l_ac].sfaa013 TO sfaa013              #顯示到畫面上

            NEXT FIELD sfaa013                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.sfaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa_d[l_ac].sfaadocno             #給予default值

            #給予arg

            CALL q_ooba002()                                #呼叫開窗

            LET g_sfaa_d[l_ac].sfaadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa_d[l_ac].sfaadocno TO sfaadocno              #顯示到畫面上

            NEXT FIELD sfaadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.sfba002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa2_d[l_ac].sfba002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_sfaa2_d[l_ac].sfba002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa2_d[l_ac].sfba002 TO sfba002              #顯示到畫面上

            NEXT FIELD sfba002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.sfba003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa2_d[l_ac].sfba003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_sfaa2_d[l_ac].sfba003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa2_d[l_ac].sfba003 TO sfba003              #顯示到畫面上

            NEXT FIELD sfba003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.sfba006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa2_d[l_ac].sfba006             #給予default值

            #給予arg

            CALL q_bmea008_4()                                #呼叫開窗

            LET g_sfaa2_d[l_ac].sfba006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa2_d[l_ac].sfba006 TO sfba006              #顯示到畫面上

            NEXT FIELD sfba006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.sfba014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_sfaa2_d[l_ac].sfba014             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_sfaa2_d[l_ac].sfba014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_sfaa2_d[l_ac].sfba014 TO sfba014              #顯示到畫面上

            NEXT FIELD sfba014                          #返回原欄位

]]>
  </point>
  <point name="input.c.sraa001" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_master.sraa001
               CALL q_srza001()
               LET g_master.sraa001 = g_qryparam.return1
               DISPLAY g_master.sraa001 TO sraa001
               NEXT FIELD sraa001
]]>
  </point>
  <point name="input.m.before_input" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET lc_master.* = g_master.*]]>
  </point>
  <point name="main.background" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_param.doctype  = g_argv[1]
   LET g_param.docdate  = g_argv[2]
   LET g_param.sraa001  = g_argv[3]
   LET g_param.combine  = g_argv[4]
   LET g_param.wc       = g_argv[5]
   LET g_bgjob          = g_argv[6]
   IF cl_null(g_bgjob) THEN LET g_bgjob = 'N' END IF
   LET g_press = FALSE
   
   CALL s_asrp400_def_cursor()]]>
  </point>
  <point name="process.background_finish" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL s_asrp400_cre_tmp_table(g_param.doctype,g_param.docdate,g_param.sraa001,g_arr1)
           RETURNING l_success
      IF NOT l_success THEN
         RETURN 
      END IF
      
      CALL s_transaction_begin()
      CALL s_asrp400_carry_po(g_param.doctype,g_param.docdate,g_param.combine)
           RETURNING l_success,l_begin_no,l_end_no
      IF l_success THEN
         CALL s_transaction_end('Y',0)
      ELSE
         CALL s_transaction_end('N',1)
      END IF
   
      CALL s_asrp400_drop_tmp_table()
]]>
  </point>
  <point name="process.count_progress" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET li_count = g_rec_b1
      CALL cl_progress_bar_no_window(li_count)]]>
  </point>
  <point name="process.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE r_success        LIKE type_t.num5     
   DEFINE l_begin_no       LIKE pmdl_t.pmdldocno   
   DEFINE l_end_no         LIKE pmdl_t.pmdldocno
   DEFINE l_success        LIKE type_t.num5
   DEFINE l_i              LIKE type_t.num10
   DEFINE l_j              LIKE type_t.num10
   DEFINE l_choice         LIKE type_t.chr1
   DEFINE la_param         RECORD
                           prog   STRING,
                           param  DYNAMIC ARRAY OF STRING
                           END RECORD
   ]]>
  </point>
  <point name="process.foreground_finish" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL g_arr1.clear()
      LET l_j = 1 
      FOR l_i = 1 TO g_srab_d.getLength()
          CALL cl_progress_no_window_ing("读取"||g_srab_d[l_i].srab004||"基本资料")   
          IF g_srab_d[l_i].sel = 'Y' THEN
             LET g_arr1[l_j].*   = g_srab_d[l_i].*  
             LET l_j = l_j + 1                     
          END IF
      END FOR
            
      CALL s_asrp400_cre_tmp_table(g_param.doctype,g_param.docdate,g_param.sraa001,g_arr1)
           RETURNING l_success
      IF NOT l_success THEN
         RETURN 
      END IF
      
      CALL s_transaction_begin()
      CALL s_asrp400_carry_po(g_param.doctype,g_param.docdate,g_param.combine)
           RETURNING l_success,l_begin_no,l_end_no
      IF l_success THEN
         CALL s_transaction_end('Y',0)
         #成功产生单据，单据范围：%1 ~ %2
         CALL cl_err_msg('','asf-00251',l_begin_no || '|' || l_end_no,1)
      ELSE
         CALL s_transaction_end('N',1)
      END IF
   
      CALL s_asrp400_drop_tmp_table()
      
      IF l_success AND NOT cl_null(l_begin_no) THEN
         #是否要运行apmt500查看生成的采购单信息[Y/N]?
         LET l_choice = cl_ask_promp('asf-00261')         
         IF l_choice = 'Y' OR l_choice = 'y' THEN
             LET la_param.prog     = "apmt500"
             LET la_param.param[1] = l_begin_no
             LET ls_js = util.JSON.stringify( la_param )
             CALL cl_cmdrun(ls_js)
         END IF
      END IF
      RETURN]]>
  </point>
  <point name="process.pre_process" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_bgjob = 'N' THEN
      IF NOT g_press THEN
         RETURN
      END IF
   END IF

   IF g_bgjob = 'Y' THEN
      FOR l_i = 1 TO g_srab_d.getLength()
          IF g_srab_d[l_i].sel = 'Y' THEN
             CALL s_asrp400_chk_before_carry(g_srab_d[l_i].*,g_param.sraa001,g_param.doctype,g_param.docdate)
                  RETURNING l_success
             IF NOT l_success THEN
                RETURN
             END IF   
          END IF
      END FOR
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa_d[l_ac].sfaa009
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal002 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa_d[l_ac].sfaa009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa_d[l_ac].sfaa009_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa_d[l_ac].sfaa010
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal002 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa_d[l_ac].sfaa010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa_d[l_ac].sfaa010_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa_d[l_ac].sfaa017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl002 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa_d[l_ac].sfaa017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa_d[l_ac].sfaa017_desc
]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql003 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql003 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba006
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal002 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba006_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_sfaa2_d[l_ac].sfba014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal002 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_sfaa2_d[l_ac].sfba014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_sfaa2_d[l_ac].sfba014_desc
]]>
  </point>
  <point name="ui_dialog.define" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_srab_t     type_g_srab_d
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_sql        STRING
   DEFINE l_sql1       STRING
   DEFINE l_ooef004    LIKE ooef_t.ooef004
   DEFINE l_i          LIKE type_t.num10
   DEFINE lc_master    type_master   ]]>
  </point>
  <point name="ui_dialog.more_action" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ON ACTION filter
            CALL asrp400_filter()

         ON ACTION carry_po
            FOR l_i = 1 TO g_srab_d.getLength()
                IF g_srab_d[l_i].sel = 'Y' THEN
                   CALL s_asrp400_chk_before_carry(g_srab_d[l_i].*,g_param.sraa001,g_param.doctype,g_param.docdate)
                        RETURNING l_success
                   IF NOT l_success THEN
                      CONTINUE DIALOG
                   END IF   
                END IF
            END FOR         
            LET g_bgjob = 'N'
            LET g_press = TRUE
            CALL asrp400_process('')
            CALL asrp400_b1_fill()
            IF l_ac > 0 THEN
               CALL DIALOG.setCurrentRow("s_detail1",l_ac) 
               LET l_srab_t.* = g_srab_d[l_ac].*  
            END IF               
            LET g_press = FALSE

         ON ACTION selall
            CALL asrp400_sel_all("Y")

         ON ACTION selnone
            CALL asrp400_sel_all("N")
]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         INPUT BY NAME g_param.doctype,g_param.docdate,g_param.sraa001,g_param.combine ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
               #lc_param存放旧值
               LET lc_param.* = g_param.*
            
            AFTER FIELD doctype
               IF cl_null(g_param.doctype) THEN
                  NEXT FIELD doctype
               END IF
               CALL asrp400_chk_doc_type(g_param.doctype)
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_param.doctype = lc_param.doctype      
                  NEXT FIELD doctype
               END IF
               LET lc_param.doctype = g_param.doctype

            AFTER FIELD docdate
               IF cl_null(g_param.docdate) THEN
                  LET g_param.docdate = lc_param.docdate
                  NEXT FIELD docdate
               END IF
               LET lc_param.docdate = g_param.docdate

            AFTER FIELD sraa001
               IF cl_null(g_param.sraa001) THEN
                  NEXT FIELD sraa001
               END IF
               CALL asrp400_chk_sraa001()
                    RETURNING l_success
               IF NOT l_success THEN
                  LET g_param.sraa001 = lc_param.sraa001 
                  NEXT FIELD sraa001
               END IF
               LET lc_param.sraa001 = g_param.sraa001  
               
               
            AFTER FIELD combine
               IF g_param.combine NOT MATCHES '[YN]' THEN
                  NEXT FIELD combine
               END IF    
               LET lc_param.combine = g_param.combine    

            ON ACTION controlp INFIELD doctype
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_param.doctype          
               #給予arg
               SELECT ooef004 INTO l_ooef004
                 FROM ooef_t
                WHERE ooefent = g_enterprise
                  AND ooef001 = g_site
               LET g_qryparam.arg1 = l_ooef004
               LET g_qryparam.arg2 = "apmt500"
               CALL q_ooba002_1()                               
               LET g_param.doctype = g_qryparam.return1      
               DISPLAY g_param.doctype TO doctype           
               NEXT FIELD doctype

            ON ACTION controlp INFIELD sraa001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_param.sraa001
               CALL q_srza001()
               LET g_param.sraa001 = g_qryparam.return1
               DISPLAY g_param.sraa001 TO sraa001
               NEXT FIELD sraa001
            
            AFTER INPUT
               IF INT_FLAG THEN
                  EXIT DIALOG
               END IF

           # ON ACTION accept
           #    ACCEPT DIALOG
 
            ON ACTION cancel
               LET INT_FLAG = 1
               EXIT DIALOG                   
         
         END INPUT

   
         CONSTRUCT g_param.wc ON srab004,srab005,srab006,srab009 
              FROM l_srab004,l_srab005,l_srab006,l_srab009 
         
            #料件
            ON ACTION controlp INFIELD l_srab004
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_bmaa001_1()                     
               DISPLAY g_qryparam.return1 TO l_srab004  
               NEXT FIELD l_srab004                     
         
         
            #BOM特性
            ON ACTION controlp INFIELD l_srab005
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_bmaa002()                    
               DISPLAY g_qryparam.return1 TO l_srab005  
               NEXT FIELD l_srab005                     

            ON ACTION accept
               CALL asrp400_b1_fill()
 
            ON ACTION cancel
               LET INT_FLAG = 1
               EXIT DIALOG 

         END CONSTRUCT
      
         INPUT ARRAY g_srab_d FROM s_detail1.*
             ATTRIBUTE(COUNT = g_rec_b1,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = FALSE,
                     DELETE ROW = FALSE,
                     APPEND ROW = FALSE)

            BEFORE ROW
               LET l_ac = ARR_CURR()
               IF g_srab_d[l_ac].sel = 'Y' THEN
                  CALL cl_set_comp_entry('carry_qty,pmdl004,pmdl017,pmdl015,pmdl011',TRUE)
               ELSE
                  CALL cl_set_comp_entry('carry_qty,pmdl004,pmdl017,pmdl015,pmdl011',FALSE)
               END IF
               LET l_srab_t.* = g_srab_d[l_ac].*               

            BEFORE FIELD sel
               CALL cl_set_comp_entry('carry_qty,pmdl004,pmdl017,pmdl015,pmdl011',TRUE)
               CALL cl_set_comp_required('carry_qty,pmdl004,pmdl017,pmdl015,pmdl011',FALSE)

            AFTER FIELD sel
               IF g_srab_d[l_ac].sel NOT MATCHES '[YN]' THEN
                  NEXT FIELD sel
               END IF
               IF g_srab_d[l_ac].sel = 'Y' THEN
                  CALL cl_set_comp_required('carry_qty,pmdl004,pmdl017,pmdl015,pmdl011',TRUE)
                  #本次委外数
                  IF cl_null(g_srab_d[l_ac].carry_qty) OR g_srab_d[l_ac].carry_qty = 0 THEN
                     LET g_srab_d[l_ac].carry_qty = l_srab_t.carry_qty
                  END IF
                  #委外厂商
                  IF cl_null(g_srab_d[l_ac].pmdl004) THEN
                     LET g_srab_d[l_ac].pmdl004 = l_srab_t.pmdl004
                     CALL s_desc_get_trading_partner_abbr_desc(g_srab_d[l_ac].pmdl004)
                          RETURNING g_srab_d[l_ac].pmdl004_desc
                  END IF
                  #取价方式
                  IF cl_null(g_srab_d[l_ac].pmdl017) THEN
                     LET g_srab_d[l_ac].pmdl017 = l_srab_t.pmdl017
                     CALL s_desc_get_price_type_desc(g_srab_d[l_ac].pmdl017)
                          RETURNING g_srab_d[l_ac].pmdl017_desc
                  END IF
                  #币种
                  IF cl_null(g_srab_d[l_ac].pmdl015) THEN
                     LET g_srab_d[l_ac].pmdl015 = l_srab_t.pmdl015
                     CALL s_desc_get_currency_desc(g_srab_d[l_ac].pmdl015)
                          RETURNING g_srab_d[l_ac].pmdl015_desc
                  END IF                       
                  #税别
                  IF cl_null(g_srab_d[l_ac].pmdl011) THEN
                     LET g_srab_d[l_ac].pmdl011 = l_srab_t.pmdl011
                     CALL s_desc_get_tax_desc1(g_site,g_srab_d[l_ac].pmdl011)
                          RETURNING g_srab_d[l_ac].pmdl011_desc
                  END IF                                            
               ELSE
                  CALL cl_set_comp_entry('carry_qty,pmdl004,pmdl017,pmdl015,pmdl011',FALSE)
               END IF

            AFTER FIELD carry_qty
               IF NOT cl_null(g_srab_d[l_ac].carry_qty) THEN
                  CALL s_asrp400_chk_carry_qty(g_srab_d[l_ac].srab000,g_param.sraa001,
                                               g_srab_d[l_ac].srab009,g_srab_d[l_ac].srab004,
                                               g_srab_d[l_ac].srab005,g_srab_d[l_ac].srab006,
                                               g_srab_d[l_ac].srac008,g_srab_d[l_ac].srac009,
                                               g_srab_d[l_ac].srac027,g_srab_d[l_ac].carry_qty)
                       RETURNING l_success
                  IF NOT l_success THEN
                     LET g_srab_d[l_ac].carry_qty = l_srab_t.carry_qty
                     NEXT FIELD carry_qty
                  END IF
               END IF

            AFTER FIELD pmdl004
               IF NOT cl_null(g_srab_d[l_ac].pmdl004) THEN
                  IF cl_null(l_srab_t.pmdl004) OR l_srab_t.pmdl004 <> g_srab_d[l_ac].pmdl004 THEN
                     CALL s_asrp400_chk_pmdl004(g_srab_d[l_ac].srab004,g_srab_d[l_ac].srab009,
                                                g_srab_d[l_ac].pmdl004,g_param.doctype)
                          RETURNING l_success
                     IF NOT l_success THEN
                        LET g_srab_d[l_ac].pmdl004 = l_srab_t.pmdl004
                        CALL s_desc_get_trading_partner_abbr_desc(g_srab_d[l_ac].pmdl004)
                             RETURNING g_srab_d[l_ac].pmdl004_desc
                        NEXT FIELD pmdl004
                     END IF
                     CALL asrp400_pmdl004_reference(l_ac)
                  END IF
                  CALL s_desc_get_trading_partner_abbr_desc(g_srab_d[l_ac].pmdl004)
                       RETURNING g_srab_d[l_ac].pmdl004_desc
               ELSE
                  LET g_srab_d[l_ac].pmdl004_desc = NULL
               END IF

            AFTER FIELD pmdl017
               IF NOT cl_null(g_srab_d[l_ac].pmdl017) THEN
                  IF cl_null(l_srab_t.pmdl017) OR l_srab_t.pmdl017 <> g_srab_d[l_ac].pmdl017 THEN
                     CALL s_asrp400_chk_pmdl017(g_srab_d[l_ac].srab004,g_srab_d[l_ac].srab009,
                                                g_srab_d[l_ac].pmdl017)
                          RETURNING l_success
                     IF NOT l_success THEN
                        LET g_srab_d[l_ac].pmdl017 = l_srab_t.pmdl017
                        CALL s_desc_get_price_type_desc(g_srab_d[l_ac].pmdl017)
                             RETURNING g_srab_d[l_ac].pmdl017_desc
                        NEXT FIELD pmdl017
                     END IF
                  END IF
                  CALL s_desc_get_price_type_desc(g_srab_d[l_ac].pmdl017)
                       RETURNING g_srab_d[l_ac].pmdl017_desc
               ELSE
                  LET g_srab_d[l_ac].pmdl017_desc = NULL
               END IF

            AFTER FIELD pmdl015
               IF NOT cl_null(g_srab_d[l_ac].pmdl015) THEN
                  IF cl_null(l_srab_t.pmdl015) OR l_srab_t.pmdl015 <> g_srab_d[l_ac].pmdl015 THEN
                     CALL s_asrp400_chk_pmdl015(g_srab_d[l_ac].srab004,g_srab_d[l_ac].srab009,
                                                g_srab_d[l_ac].pmdl015)
                          RETURNING l_success
                     IF NOT l_success THEN
                        LET g_srab_d[l_ac].pmdl015 = l_srab_t.pmdl015
                        CALL s_desc_get_currency_desc(g_srab_d[l_ac].pmdl015)
                             RETURNING g_srab_d[l_ac].pmdl015_desc
                        NEXT FIELD pmdl015
                     END IF
                  END IF
                  CALL s_desc_get_currency_desc(g_srab_d[l_ac].pmdl015)
                       RETURNING g_srab_d[l_ac].pmdl015_desc
               ELSE
                  LET g_srab_d[l_ac].pmdl015_desc = NULL
               END IF

            AFTER FIELD pmdl011
               IF NOT cl_null(g_srab_d[l_ac].pmdl011) THEN
                  IF cl_null(l_srab_t.pmdl011) OR l_srab_t.pmdl011 <> g_srab_d[l_ac].pmdl011 THEN
                     CALL s_asrp400_chk_pmdl011(g_srab_d[l_ac].srab004,g_srab_d[l_ac].srab009,
                                                g_srab_d[l_ac].pmdl011)
                          RETURNING l_success
                     IF NOT l_success THEN
                        LET g_srab_d[l_ac].pmdl011 = l_srab_t.pmdl011
                        CALL s_desc_get_tax_desc1(g_site,g_srab_d[l_ac].pmdl011)
                             RETURNING g_srab_d[l_ac].pmdl011_desc
                        NEXT FIELD pmdl011
                     END IF
                  END IF
                  CALL s_desc_get_tax_desc1(g_site,g_srab_d[l_ac].pmdl011)
                       RETURNING g_srab_d[l_ac].pmdl011_desc
               ELSE
                  LET g_srab_d[l_ac].pmdl011_desc = NULL
               END IF


            ON ACTION controlp INFIELD pmdl004
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_srab_d[l_ac].pmdl004
               LET g_qryparam.where = "1=1 "
               LET l_sql = ''
               CALL s_control_get_sql("pmaa080",'3','4',g_user,g_dept) RETURNING l_success,l_sql
               IF l_success THEN
                  LET g_qryparam.where = g_qryparam.where ," AND ",l_sql
               END IF
               LET l_sql1 = ''
               CALL s_control_get_sql("pmaa001",'4','4',g_user,g_dept) RETURNING l_success,l_sql1
               IF l_success THEN
                  LET g_qryparam.where = g_qryparam.where ," AND ",l_sql1
               END IF
               CALL q_pmaa001_3()
               LET g_srab_d[l_ac].pmdl004 = g_qryparam.return1
               NEXT FIELD pmdl004

            ON ACTION controlp INFIELD pmdl017
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_srab_d[l_ac].pmdl017
               CALL q_pmam001()
               LET g_srab_d[l_ac].pmdl017 = g_qryparam.return1
               NEXT FIELD pmdl017

            ON ACTION controlp INFIELD pmdl015
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_srab_d[l_ac].pmdl015
               LET g_qryparam.arg1 = g_site
               CALL q_ooaj002_1()
               LET g_srab_d[l_ac].pmdl015 = g_qryparam.return1
               NEXT FIELD pmdl015

            ON ACTION controlp INFIELD pmdl011
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_srab_d[l_ac].pmdl011
               CALL q_oodb002_2()
               LET g_srab_d[l_ac].pmdl011 = g_qryparam.return1
               NEXT FIELD pmdl011

            ON ACTION cancel
               LET INT_FLAG = 1
               EXIT DIALOG

         END INPUT
]]>
  </point>
  <section id="asrp400.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION asrp400_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_sfaa_d.clear()    #g_sfaa_d 單頭及單身 
   CALL g_sfaa2_d.clear()
 
   CALL g_sfaa3_d.clear()
 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF asrp400_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE sfaa003,sfaa057,sfaa010,'',sfaa020,sfaastus,sfaa012,sfaa050,sfaa051, 
          sfaa055,sfaa056,sfaa013,sfaa009,'',sfaa017,'',sfaa002,sfaasite FROM sfaa_t",   
                  " INNER JOIN sfzz_t ON sfzzdocno = sfaadocno ",
 
                  #"",
                  " LEFT JOIN sfba_t ON sfaaent = sfbaent AND sfaadocno = sfbadocno ",
               " LEFT JOIN sfcb_t ON sfaaent = sfcbent AND sfaadocno = sfcbdocno ",
                  "",
                  " WHERE sfaaent=? AND sfaadocno=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
         IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
   IF NOT cl_null(g_wc2_table3) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table3 CLIPPED
   END IF 
 
      
      LET g_sql = g_sql, " ORDER BY "
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE asrp400_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR asrp400_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_sfzz_m.sfzzdocno
 
                                               
      FOREACH b_fill_cs INTO g_sfaa_d[l_ac].sfaa003,g_sfaa_d[l_ac].sfaa057,g_sfaa_d[l_ac].sfaa010,g_sfaa_d[l_ac].sfaa010_desc, 
          g_sfaa_d[l_ac].sfaa020,g_sfaa_d[l_ac].sfaastus,g_sfaa_d[l_ac].sfaa012,g_sfaa_d[l_ac].sfaa050, 
          g_sfaa_d[l_ac].sfaa051,g_sfaa_d[l_ac].sfaa055,g_sfaa_d[l_ac].sfaa056,g_sfaa_d[l_ac].sfaa013, 
          g_sfaa_d[l_ac].sfaa009,g_sfaa_d[l_ac].sfaa009_desc,g_sfaa_d[l_ac].sfaa017,g_sfaa_d[l_ac].sfaa017_desc, 
          g_sfaa_d[l_ac].sfaa002,g_sfaa_d[l_ac].sfaasite
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_sfaa_d.deleteElement(g_sfaa_d.getLength())
   CALL g_sfaa2_d.deleteElement(g_sfaa2_d.getLength())
 
   CALL g_sfaa3_d.deleteElement(g_sfaa3_d.getLength())
 
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE asrp400_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION asrp400_b_fill2(pi_idx)
   {<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF asrp400_fill_chk(2) THEN
      IF pi_idx = 2 OR pi_idx = 0 THEN
               CALL g_sfaa2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE sfbaseq,sfbaseq1,sfba006,'',sfba002,'',sfba003,'',sfba004,sfba014, 
             '',sfba023,sfba016,sfba012 FROM sfba_t",    
                     "",
                     " WHERE sfbaent=? AND sfbadocno=? AND sfbasite=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  sfba_t.sfbaseq,sfba_t.sfbaseq1" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         PREPARE asrp400_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR asrp400_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,
                                        g_sfzz_m.sfzzdocno,
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_sfaa2_d[l_ac].sfbaseq,g_sfaa2_d[l_ac].sfbaseq1,g_sfaa2_d[l_ac].sfba006, 
             g_sfaa2_d[l_ac].sfba006_desc,g_sfaa2_d[l_ac].sfba002,g_sfaa2_d[l_ac].sfba002_desc,g_sfaa2_d[l_ac].sfba003, 
             g_sfaa2_d[l_ac].sfba003_desc,g_sfaa2_d[l_ac].sfba004,g_sfaa2_d[l_ac].sfba014,g_sfaa2_d[l_ac].sfba014_desc, 
             g_sfaa2_d[l_ac].sfba023,g_sfaa2_d[l_ac].sfba016,g_sfaa2_d[l_ac].sfba012
            IF SQLCA.sqlcode THEN
               CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               CALL cl_err( '', 9035, 0 )
               EXIT FOREACH
            END IF
            
         END FOREACH
               CALL g_sfaa2_d.deleteElement(g_sfaa2_d.getLength())
 
      END IF
   END IF
 
   IF asrp400_fill_chk(3) THEN
      IF pi_idx = 3 OR pi_idx = 0 THEN
               CALL g_sfaa3_d.clear()
 
         LET g_sql = "SELECT  UNIQUE sfcb001,sfcb002,sfcb003,sfcb004,sfcb046,sfcb047,sfcb050,sfcb048, 
             sfcb049,sfcb051 FROM sfcb_t",    
                     "",
                     " WHERE sfcbent=? AND sfcbdocno=? AND sfcbsite=?"
         
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  sfcb_t.sfcb001,sfcb_t.sfcb002" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill3" />}
         #end add-point
         
         PREPARE asrp400_pb3 FROM g_sql
         DECLARE b_fill_curs3 CURSOR FOR asrp400_pb3
         
         OPEN b_fill_curs3 USING g_enterprise,
                                        g_sfzz_m.sfzzdocno,
         LET l_ac = 1
         FOREACH b_fill_curs3 INTO g_sfaa3_d[l_ac].sfcb001,g_sfaa3_d[l_ac].sfcb002,g_sfaa3_d[l_ac].sfcb003, 
             g_sfaa3_d[l_ac].sfcb004,g_sfaa3_d[l_ac].sfcb046,g_sfaa3_d[l_ac].sfcb047,g_sfaa3_d[l_ac].sfcb050, 
             g_sfaa3_d[l_ac].sfcb048,g_sfaa3_d[l_ac].sfcb049,g_sfaa3_d[l_ac].sfcb051
            IF SQLCA.sqlcode THEN
               CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill3"/>}
            #end add-point
           
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               CALL cl_err( '', 9035, 0 )
               EXIT FOREACH
            END IF
            
         END FOREACH
               CALL g_sfaa3_d.deleteElement(g_sfaa3_d.getLength())
 
      END IF
   END IF
 
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL asrp400_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.browser_fill" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION asrp400_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_sfzz_m.* TO NULL
   CALL g_sfaa_d.clear()        
   CALL g_sfaa2_d.clear() 
 
   CALL g_sfaa3_d.clear() 
 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "sfzzdocno"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE sfzzdocno ",
 
                        " FROM sfzz_t ",
                              " ",
                              " LEFT JOIN sfaa_t ON sfaaent = sfzzent AND sfzzdocno = sfaadocno ",
 
                              " LEFT JOIN sfba_t ON sfbaent = sfzzent AND sfaadocno = sfbadocno", 
 
                              " LEFT JOIN sfcb_t ON sfcbent = sfzzent AND sfaadocno = sfcbdocno", 
 
 
                              " ", 
                              " ", 
                       " WHERE sfzzent = '" ||g_enterprise|| "' AND sfaaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE sfzzdocno ",
 
                        " FROM sfzz_t ", 
                              " ",
                              " ",
                        "WHERE sfzzent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - 1
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + 1
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - 1
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - 1
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照sfzzdocno Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT sfzzstus,sfzzdocno,DENSE_RANK() OVER(ORDER BY sfzzdocno ",g_order, 
          ") AS RANK ",
                        " FROM sfzz_t ",
                              " ",
                              " LEFT JOIN sfaa_t ON sfaaent = sfzzent AND sfzzdocno = sfaadocno ",
 
                              " LEFT JOIN sfba_t ON sfbaent = sfzzent AND sfaadocno = sfbadocno",
 
                              " LEFT JOIN sfcb_t ON sfcbent = sfzzent AND sfaadocno = sfcbdocno",
 
 
                              " ",
                              " ",
                       " ",
                       " WHERE sfzzent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT sfzzstus,sfzzdocno,DENSE_RANK() OVER(ORDER BY sfzzdocno ",g_order, 
          ") AS RANK ",
                       " FROM sfzz_t ",
                            "  ",
                            "  ",
                       " WHERE sfzzent = '" ||g_enterprise|| "' AND ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT sfzzstus,sfzzdocno FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_sfzzdocno
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION asrp400_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY sfzzdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL asrp400_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.construct" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION asrp400_construct()
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_sfzz_m.* TO NULL
   CALL g_sfaa_d.clear()        
   CALL g_sfaa2_d.clear() 
 
   CALL g_sfaa3_d.clear() 
 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON 
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON sfaa003,sfaa057,sfaa010,sfaa020,sfaastus,sfaa012,sfaa050,sfaa051,sfaa055, 
          sfaa056,sfaa013,sfaa009,sfaa017,sfaa002,sfaasite
           FROM s_detail1[1].sfaa003,s_detail1[1].sfaa057,s_detail1[1].sfaa010,s_detail1[1].sfaa020, 
               s_detail1[1].sfaastus,s_detail1[1].sfaa012,s_detail1[1].sfaa050,s_detail1[1].sfaa051, 
               s_detail1[1].sfaa055,s_detail1[1].sfaa056,s_detail1[1].sfaa013,s_detail1[1].sfaa009,s_detail1[1].sfaa017, 
               s_detail1[1].sfaa002,s_detail1[1].sfaasite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<sfaaownid>>----
         ##ON ACTION controlp INFIELD sfaaownid
         ##   CALL q_common('sfzz_t','sfaaownid',TRUE,FALSE,g_sfaa3_d[1].sfaaownid) RETURNING ls_return
         ##   DISPLAY ls_return TO sfaaownid
         ##   NEXT FIELD sfaaownid  
         #
         ##----<<sfaaowndp>>----
         ##ON ACTION controlp INFIELD sfaaowndp
         ##   CALL q_common('sfzz_t','sfaaowndp',TRUE,FALSE,g_sfaa3_d[1].sfaaowndp) RETURNING ls_return
         ##   DISPLAY ls_return TO sfaaowndp
         ##   NEXT FIELD sfaaowndp
         #
         ##----<<sfaacrtid>>----
         ##ON ACTION controlp INFIELD sfaacrtid
         ##   CALL q_common('sfzz_t','sfaacrtid',TRUE,FALSE,g_sfaa3_d[1].sfaacrtid) RETURNING ls_return
         ##   DISPLAY ls_return TO sfaacrtid
         ##   NEXT FIELD sfaacrtid
         #
         ##----<<sfaacrtdp>>----
         ##ON ACTION controlp INFIELD sfaacrtdp
         ##   CALL q_common('sfzz_t','sfaacrtdp',TRUE,FALSE,g_sfaa3_d[1].sfaacrtdp) RETURNING ls_return
         ##   DISPLAY ls_return TO sfaacrtdp
         ##   NEXT FIELD sfaacrtdp
         #
         ##----<<sfaamodid>>----
         ##ON ACTION controlp INFIELD sfaamodid
         ##   CALL q_common('sfzz_t','sfaamodid',TRUE,FALSE,g_sfaa3_d[1].sfaamodid) RETURNING ls_return
         ##   DISPLAY ls_return TO sfaamodid
         ##   NEXT FIELD sfaamodid
         #
         ##----<<sfaacnfid>>----
         ##ON ACTION controlp INFIELD sfaacnfid
         ##   CALL q_common('sfzz_t','sfaacnfid',TRUE,FALSE,g_sfaa3_d[1].sfaacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO sfaacnfid
         ##   NEXT FIELD sfaacnfid
         #
         ##----<<sfaapstid>>----
         ##ON ACTION controlp INFIELD sfaapstid
         ##   CALL q_common('sfzz_t','sfaapstid',TRUE,FALSE,g_sfaa3_d[1].sfaapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO sfaapstid
         ##   NEXT FIELD sfaapstid
         
         ##----<<sfaacrtdt>>----
         #AFTER FIELD sfaacrtdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<sfaamoddt>>----
         #AFTER FIELD sfaamoddt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<sfaacnfdt>>----
         #AFTER FIELD sfaacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<sfaapstdt>>----
         #AFTER FIELD sfaapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<sfaa003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa003
            #add-point:BEFORE FIELD sfaa003
            {<point name="construct.b.page1.sfaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa003
            
            #add-point:AFTER FIELD sfaa003
            {<point name="construct.a.page1.sfaa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa003
         ON ACTION controlp INFIELD sfaa003
            #add-point:ON ACTION controlp INFIELD sfaa003
            {<point name="construct.c.page1.sfaa003" />}
            #END add-point
 
         #----<<sfaa057>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa057
            #add-point:BEFORE FIELD sfaa057
            {<point name="construct.b.page1.sfaa057" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa057
            
            #add-point:AFTER FIELD sfaa057
            {<point name="construct.a.page1.sfaa057" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa057
         ON ACTION controlp INFIELD sfaa057
            #add-point:ON ACTION controlp INFIELD sfaa057
            {<point name="construct.c.page1.sfaa057" />}
            #END add-point
 
         #----<<sfaa010>>----
         #Ctrlp:construct.c.page1.sfaa010
         ON ACTION controlp INFIELD sfaa010
            #add-point:ON ACTION controlp INFIELD sfaa010
            {<point name="construct.c.page1.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa010
            #add-point:BEFORE FIELD sfaa010
            {<point name="construct.b.page1.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa010
            
            #add-point:AFTER FIELD sfaa010
            {<point name="construct.a.page1.sfaa010" />}
            #END add-point
            
 
         #----<<sfaa020>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa020
            #add-point:BEFORE FIELD sfaa020
            {<point name="construct.b.page1.sfaa020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa020
            
            #add-point:AFTER FIELD sfaa020
            {<point name="construct.a.page1.sfaa020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa020
         ON ACTION controlp INFIELD sfaa020
            #add-point:ON ACTION controlp INFIELD sfaa020
            {<point name="construct.c.page1.sfaa020" />}
            #END add-point
 
         #----<<sfaastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaastus
            #add-point:BEFORE FIELD sfaastus
            {<point name="construct.b.page1.sfaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaastus
            
            #add-point:AFTER FIELD sfaastus
            {<point name="construct.a.page1.sfaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaastus
         ON ACTION controlp INFIELD sfaastus
            #add-point:ON ACTION controlp INFIELD sfaastus
            {<point name="construct.c.page1.sfaastus" />}
            #END add-point
 
         #----<<sfaa012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa012
            #add-point:BEFORE FIELD sfaa012
            {<point name="construct.b.page1.sfaa012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa012
            
            #add-point:AFTER FIELD sfaa012
            {<point name="construct.a.page1.sfaa012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa012
         ON ACTION controlp INFIELD sfaa012
            #add-point:ON ACTION controlp INFIELD sfaa012
            {<point name="construct.c.page1.sfaa012" />}
            #END add-point
 
         #----<<sfaa050>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa050
            #add-point:BEFORE FIELD sfaa050
            {<point name="construct.b.page1.sfaa050" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa050
            
            #add-point:AFTER FIELD sfaa050
            {<point name="construct.a.page1.sfaa050" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa050
         ON ACTION controlp INFIELD sfaa050
            #add-point:ON ACTION controlp INFIELD sfaa050
            {<point name="construct.c.page1.sfaa050" />}
            #END add-point
 
         #----<<sfaa051>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa051
            #add-point:BEFORE FIELD sfaa051
            {<point name="construct.b.page1.sfaa051" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa051
            
            #add-point:AFTER FIELD sfaa051
            {<point name="construct.a.page1.sfaa051" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa051
         ON ACTION controlp INFIELD sfaa051
            #add-point:ON ACTION controlp INFIELD sfaa051
            {<point name="construct.c.page1.sfaa051" />}
            #END add-point
 
         #----<<sfaa055>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa055
            #add-point:BEFORE FIELD sfaa055
            {<point name="construct.b.page1.sfaa055" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa055
            
            #add-point:AFTER FIELD sfaa055
            {<point name="construct.a.page1.sfaa055" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa055
         ON ACTION controlp INFIELD sfaa055
            #add-point:ON ACTION controlp INFIELD sfaa055
            {<point name="construct.c.page1.sfaa055" />}
            #END add-point
 
         #----<<sfaa056>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa056
            #add-point:BEFORE FIELD sfaa056
            {<point name="construct.b.page1.sfaa056" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa056
            
            #add-point:AFTER FIELD sfaa056
            {<point name="construct.a.page1.sfaa056" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa056
         ON ACTION controlp INFIELD sfaa056
            #add-point:ON ACTION controlp INFIELD sfaa056
            {<point name="construct.c.page1.sfaa056" />}
            #END add-point
 
         #----<<sfaa013>>----
         #Ctrlp:construct.c.page1.sfaa013
         ON ACTION controlp INFIELD sfaa013
            #add-point:ON ACTION controlp INFIELD sfaa013
            {<point name="construct.c.page1.sfaa013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa013
            #add-point:BEFORE FIELD sfaa013
            {<point name="construct.b.page1.sfaa013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa013
            
            #add-point:AFTER FIELD sfaa013
            {<point name="construct.a.page1.sfaa013" />}
            #END add-point
            
 
         #----<<sfaa009>>----
         #Ctrlp:construct.c.page1.sfaa009
         ON ACTION controlp INFIELD sfaa009
            #add-point:ON ACTION controlp INFIELD sfaa009
            {<point name="construct.c.page1.sfaa009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa009
            #add-point:BEFORE FIELD sfaa009
            {<point name="construct.b.page1.sfaa009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa009
            
            #add-point:AFTER FIELD sfaa009
            {<point name="construct.a.page1.sfaa009" />}
            #END add-point
            
 
         #----<<sfaa017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa017
            #add-point:BEFORE FIELD sfaa017
            {<point name="construct.b.page1.sfaa017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa017
            
            #add-point:AFTER FIELD sfaa017
            {<point name="construct.a.page1.sfaa017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaa017
         ON ACTION controlp INFIELD sfaa017
            #add-point:ON ACTION controlp INFIELD sfaa017
            {<point name="construct.c.page1.sfaa017" />}
            #END add-point
 
         #----<<sfaa002>>----
         #Ctrlp:construct.c.page1.sfaa002
         ON ACTION controlp INFIELD sfaa002
            #add-point:ON ACTION controlp INFIELD sfaa002
            {<point name="construct.c.page1.sfaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa002
            #add-point:BEFORE FIELD sfaa002
            {<point name="construct.b.page1.sfaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa002
            
            #add-point:AFTER FIELD sfaa002
            {<point name="construct.a.page1.sfaa002" />}
            #END add-point
            
 
         #----<<sfaasite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaasite
            #add-point:BEFORE FIELD sfaasite
            {<point name="construct.b.page1.sfaasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaasite
            
            #add-point:AFTER FIELD sfaasite
            {<point name="construct.a.page1.sfaasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.sfaasite
         ON ACTION controlp INFIELD sfaasite
            #add-point:ON ACTION controlp INFIELD sfaasite
            {<point name="construct.c.page1.sfaasite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON sfbaseq,sfbaseq1,sfba006,sfba002,sfba003,sfba004,sfba014,sfba023,sfba016, 
          sfba012
           FROM s_detail2[1].sfbaseq,s_detail2[1].sfbaseq1,s_detail2[1].sfba006,s_detail2[1].sfba002, 
               s_detail2[1].sfba003,s_detail2[1].sfba004,s_detail2[1].sfba014,s_detail2[1].sfba023,s_detail2[1].sfba016, 
               s_detail2[1].sfba012
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page2  >---------------------
         #----<<sfbaseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfbaseq
            #add-point:BEFORE FIELD sfbaseq
            {<point name="construct.b.page2.sfbaseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfbaseq
            
            #add-point:AFTER FIELD sfbaseq
            {<point name="construct.a.page2.sfbaseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfbaseq
         ON ACTION controlp INFIELD sfbaseq
            #add-point:ON ACTION controlp INFIELD sfbaseq
            {<point name="construct.c.page2.sfbaseq" />}
            #END add-point
 
         #----<<sfbaseq1>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfbaseq1
            #add-point:BEFORE FIELD sfbaseq1
            {<point name="construct.b.page2.sfbaseq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfbaseq1
            
            #add-point:AFTER FIELD sfbaseq1
            {<point name="construct.a.page2.sfbaseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfbaseq1
         ON ACTION controlp INFIELD sfbaseq1
            #add-point:ON ACTION controlp INFIELD sfbaseq1
            {<point name="construct.c.page2.sfbaseq1" />}
            #END add-point
 
         #----<<sfba006>>----
         #Ctrlp:construct.c.page2.sfba006
         ON ACTION controlp INFIELD sfba006
            #add-point:ON ACTION controlp INFIELD sfba006
            {<point name="construct.c.page2.sfba006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba006
            #add-point:BEFORE FIELD sfba006
            {<point name="construct.b.page2.sfba006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba006
            
            #add-point:AFTER FIELD sfba006
            {<point name="construct.a.page2.sfba006" />}
            #END add-point
            
 
         #----<<sfba002>>----
         #Ctrlp:construct.c.page2.sfba002
         ON ACTION controlp INFIELD sfba002
            #add-point:ON ACTION controlp INFIELD sfba002
            {<point name="construct.c.page2.sfba002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba002
            #add-point:BEFORE FIELD sfba002
            {<point name="construct.b.page2.sfba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba002
            
            #add-point:AFTER FIELD sfba002
            {<point name="construct.a.page2.sfba002" />}
            #END add-point
            
 
         #----<<sfba003>>----
         #Ctrlp:construct.c.page2.sfba003
         ON ACTION controlp INFIELD sfba003
            #add-point:ON ACTION controlp INFIELD sfba003
            {<point name="construct.c.page2.sfba003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba003
            #add-point:BEFORE FIELD sfba003
            {<point name="construct.b.page2.sfba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba003
            
            #add-point:AFTER FIELD sfba003
            {<point name="construct.a.page2.sfba003" />}
            #END add-point
            
 
         #----<<sfba004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfba004
            #add-point:BEFORE FIELD sfba004
            {<point name="construct.b.page2.sfba004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba004
            
            #add-point:AFTER FIELD sfba004
            {<point name="construct.a.page2.sfba004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfba004
         ON ACTION controlp INFIELD sfba004
            #add-point:ON ACTION controlp INFIELD sfba004
            {<point name="construct.c.page2.sfba004" />}
            #END add-point
 
         #----<<sfba014>>----
         #Ctrlp:construct.c.page2.sfba014
         ON ACTION controlp INFIELD sfba014
            #add-point:ON ACTION controlp INFIELD sfba014
            {<point name="construct.c.page2.sfba014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba014
            #add-point:BEFORE FIELD sfba014
            {<point name="construct.b.page2.sfba014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba014
            
            #add-point:AFTER FIELD sfba014
            {<point name="construct.a.page2.sfba014" />}
            #END add-point
            
 
         #----<<sfba023>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfba023
            #add-point:BEFORE FIELD sfba023
            {<point name="construct.b.page2.sfba023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba023
            
            #add-point:AFTER FIELD sfba023
            {<point name="construct.a.page2.sfba023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfba023
         ON ACTION controlp INFIELD sfba023
            #add-point:ON ACTION controlp INFIELD sfba023
            {<point name="construct.c.page2.sfba023" />}
            #END add-point
 
         #----<<sfba016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfba016
            #add-point:BEFORE FIELD sfba016
            {<point name="construct.b.page2.sfba016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba016
            
            #add-point:AFTER FIELD sfba016
            {<point name="construct.a.page2.sfba016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfba016
         ON ACTION controlp INFIELD sfba016
            #add-point:ON ACTION controlp INFIELD sfba016
            {<point name="construct.c.page2.sfba016" />}
            #END add-point
 
         #----<<sfba012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfba012
            #add-point:BEFORE FIELD sfba012
            {<point name="construct.b.page2.sfba012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba012
            
            #add-point:AFTER FIELD sfba012
            {<point name="construct.a.page2.sfba012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.sfba012
         ON ACTION controlp INFIELD sfba012
            #add-point:ON ACTION controlp INFIELD sfba012
            {<point name="construct.c.page2.sfba012" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON sfcb001,sfcb002,sfcb003,sfcb004,sfcb046,sfcb047,sfcb050,sfcb048,sfcb049, 
          sfcb051
           FROM s_detail3[1].sfcb001,s_detail3[1].sfcb002,s_detail3[1].sfcb003,s_detail3[1].sfcb004, 
               s_detail3[1].sfcb046,s_detail3[1].sfcb047,s_detail3[1].sfcb050,s_detail3[1].sfcb048,s_detail3[1].sfcb049, 
               s_detail3[1].sfcb051
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page3  >---------------------
         #----<<sfcb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb001
            #add-point:BEFORE FIELD sfcb001
            {<point name="construct.b.page3.sfcb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb001
            
            #add-point:AFTER FIELD sfcb001
            {<point name="construct.a.page3.sfcb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb001
         ON ACTION controlp INFIELD sfcb001
            #add-point:ON ACTION controlp INFIELD sfcb001
            {<point name="construct.c.page3.sfcb001" />}
            #END add-point
 
         #----<<sfcb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb002
            #add-point:BEFORE FIELD sfcb002
            {<point name="construct.b.page3.sfcb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb002
            
            #add-point:AFTER FIELD sfcb002
            {<point name="construct.a.page3.sfcb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb002
         ON ACTION controlp INFIELD sfcb002
            #add-point:ON ACTION controlp INFIELD sfcb002
            {<point name="construct.c.page3.sfcb002" />}
            #END add-point
 
         #----<<sfcb003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb003
            #add-point:BEFORE FIELD sfcb003
            {<point name="construct.b.page3.sfcb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb003
            
            #add-point:AFTER FIELD sfcb003
            {<point name="construct.a.page3.sfcb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb003
         ON ACTION controlp INFIELD sfcb003
            #add-point:ON ACTION controlp INFIELD sfcb003
            {<point name="construct.c.page3.sfcb003" />}
            #END add-point
 
         #----<<sfcb004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb004
            #add-point:BEFORE FIELD sfcb004
            {<point name="construct.b.page3.sfcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb004
            
            #add-point:AFTER FIELD sfcb004
            {<point name="construct.a.page3.sfcb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb004
         ON ACTION controlp INFIELD sfcb004
            #add-point:ON ACTION controlp INFIELD sfcb004
            {<point name="construct.c.page3.sfcb004" />}
            #END add-point
 
         #----<<sfcb046>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb046
            #add-point:BEFORE FIELD sfcb046
            {<point name="construct.b.page3.sfcb046" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb046
            
            #add-point:AFTER FIELD sfcb046
            {<point name="construct.a.page3.sfcb046" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb046
         ON ACTION controlp INFIELD sfcb046
            #add-point:ON ACTION controlp INFIELD sfcb046
            {<point name="construct.c.page3.sfcb046" />}
            #END add-point
 
         #----<<sfcb047>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb047
            #add-point:BEFORE FIELD sfcb047
            {<point name="construct.b.page3.sfcb047" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb047
            
            #add-point:AFTER FIELD sfcb047
            {<point name="construct.a.page3.sfcb047" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb047
         ON ACTION controlp INFIELD sfcb047
            #add-point:ON ACTION controlp INFIELD sfcb047
            {<point name="construct.c.page3.sfcb047" />}
            #END add-point
 
         #----<<sfcb050>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb050
            #add-point:BEFORE FIELD sfcb050
            {<point name="construct.b.page3.sfcb050" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb050
            
            #add-point:AFTER FIELD sfcb050
            {<point name="construct.a.page3.sfcb050" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb050
         ON ACTION controlp INFIELD sfcb050
            #add-point:ON ACTION controlp INFIELD sfcb050
            {<point name="construct.c.page3.sfcb050" />}
            #END add-point
 
         #----<<sfcb048>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb048
            #add-point:BEFORE FIELD sfcb048
            {<point name="construct.b.page3.sfcb048" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb048
            
            #add-point:AFTER FIELD sfcb048
            {<point name="construct.a.page3.sfcb048" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb048
         ON ACTION controlp INFIELD sfcb048
            #add-point:ON ACTION controlp INFIELD sfcb048
            {<point name="construct.c.page3.sfcb048" />}
            #END add-point
 
         #----<<sfcb049>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb049
            #add-point:BEFORE FIELD sfcb049
            {<point name="construct.b.page3.sfcb049" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb049
            
            #add-point:AFTER FIELD sfcb049
            {<point name="construct.a.page3.sfcb049" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb049
         ON ACTION controlp INFIELD sfcb049
            #add-point:ON ACTION controlp INFIELD sfcb049
            {<point name="construct.c.page3.sfcb049" />}
            #END add-point
 
         #----<<sfcb051>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb051
            #add-point:BEFORE FIELD sfcb051
            {<point name="construct.b.page3.sfcb051" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb051
            
            #add-point:AFTER FIELD sfcb051
            {<point name="construct.a.page3.sfcb051" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.sfcb051
         ON ACTION controlp INFIELD sfcb051
            #add-point:ON ACTION controlp INFIELD sfcb051
            {<point name="construct.c.page3.sfcb051" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION asrp400_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " sfzzdocno = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION asrp400_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_sfzz_m.sfzzdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE 
 INTO 
 FROM sfzz_t
 WHERE sfzzent = g_enterprise AND sfzzdocno = g_sfzz_m.sfzzdocno
   
   
 
   CALL asrp400_show()
   
   CALL s_transaction_begin()
 
   OPEN asrp400_cl USING g_enterprise,g_sfzz_m.sfzzdocno
 
   IF STATUS THEN
      CALL cl_err("OPEN asrp400_cl:", STATUS, 1)
      CLOSE asrp400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH asrp400_cl INTO g_sfzz_m.a,g_sfzz_m.b,g_sfzz_m.c,g_sfzz_m.d              #鎖住將被更改或取消的資料 

   IF SQLCA.sqlcode THEN
      CALL cl_err(g_sfzz_m.sfzzdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "sfzzdocno"       
      LET g_doc.value1 = g_sfzz_m.sfzzdocno     
      CALL cl_doc_remove()   
  
      #資料備份
      LET g_sfzzdocno_t = g_sfzz_m.sfzzdocno
 
 
      DELETE FROM sfzz_t
       WHERE sfzzent = g_enterprise AND sfzzdocno = g_sfzz_m.sfzzdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_sfzz_m.sfzzdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM sfaa_t
       WHERE sfaaent = g_enterprise AND sfaadocno = g_sfzz_m.sfzzdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfaa_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM sfba_t
       WHERE sfbaent = g_enterprise AND
             sfbadocno = g_sfzz_m.sfzzdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfba_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
      
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM sfcb_t
       WHERE sfcbent = g_enterprise AND
             sfcbdocno = g_sfzz_m.sfzzdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfcb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
      
 
 
                                                               
      CLEAR FORM
      CALL g_sfaa_d.clear() 
      CALL g_sfaa2_d.clear()       
 
      CALL g_sfaa3_d.clear()       
 
 
     
      CALL asrp400_ui_browser_refresh()  
      CALL asrp400_ui_headershow()  
      CALL asrp400_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL asrp400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL asrp400_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
      
 
      
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE asrp400_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_sfzz_m.sfzzdocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="asrp400.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION asrp400_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM sfaa_t
       WHERE sfaaent = g_enterprise AND
         sfaadocno = ps_keys_bak[1]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM sfba_t
       WHERE sfbadocno = ps_keys_bak[1]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfba_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'1',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM sfcb_t
       WHERE sfcbdocno = ps_keys_bak[1]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfcb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.description" ver="169" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000049
#+ 
#+ Filename...: asrp400
#+ Description: 重覆性生產委外批次作業
#+ Creator....: 00378(2014/04/30)
#+ Modifier...: 00378(2014/06/30)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="asrp400.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION asrp400_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE sfaa_t.*
 
   DEFINE l_detail2    RECORD LIKE sfba_t.*
 
   DEFINE l_detail3    RECORD LIKE sfcb_t.*
 
 
   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE asrp400_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE asrp400_detail AS ",
                "SELECT * FROM sfaa_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asrp400_detail SELECT * FROM sfaa_t 
                                         WHERE sfaaent = g_enterprise AND sfaadocno = g_sfzzdocno_t
 
   
   #將key修正為調整後   
   UPDATE asrp400_detail 
      #更新key欄位
      SET sfaadocno = g_sfzz_m.sfzzdocno
 
      #更新共用欄位
      #此段落由子樣板a13產生
      # , sfaaownid = g_user
      # , sfaaowndp = g_dept
      # , sfaacrtid = g_user
      # , sfaacrtdp = g_dept 
      # , sfaacrtdt = ld_date
      # , sfaamodid = "" 
      # , sfaamoddt = "" 
      #, sfaastus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO sfaa_t SELECT * FROM asrp400_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asrp400_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE asrp400_detail AS ",
      "SELECT * FROM sfba_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asrp400_detail SELECT * FROM sfba_t
                                         WHERE sfbaent = g_enterprise AND sfbadocno = g_sfzzdocno_t
 
 
   #將key修正為調整後   
   UPDATE asrp400_detail SET sfbadocno = g_sfzz_m.sfzzdocno
 
  
   #將資料塞回原table   
   INSERT INTO sfba_t SELECT * FROM asrp400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asrp400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE asrp400_detail AS ",
      "SELECT * FROM sfcb_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO asrp400_detail SELECT * FROM sfcb_t
                                         WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfzzdocno_t
 
 
   #將key修正為調整後   
   UPDATE asrp400_detail SET sfcbdocno = g_sfzz_m.sfzzdocno
 
  
   #將資料塞回原table   
   INSERT INTO sfcb_t SELECT * FROM asrp400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE asrp400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_sfzzdocno_t = g_sfzz_m.sfzzdocno
 
   
   DROP TABLE asrp400_detail
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION asrp400_detail_show()
   {<Local define>}
   {</Local define>}
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION asrp400_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL asrp400_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_sfzz_m.sfzzdocno = g_browser[g_current_idx].b_sfzzdocno
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE 
 INTO 
 FROM sfzz_t
 WHERE sfzzent = g_enterprise AND sfzzdocno = g_sfzz_m.sfzzdocno
   IF SQLCA.sqlcode THEN
      CALL cl_err("sfzz_t",SQLCA.sqlcode,1)
      INITIALIZE g_sfzz_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL asrp400_show()
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.fill_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION asrp400_fill_chk(ps_idx)
   {<Local define>}
   DEFINE ps_idx        LIKE type_t.chr10
   {</Local define>}
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段define
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') OR 
      (NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.filter" ver="1" status="" src="s">
    <![CDATA[PRIVATE FUNCTION asrp400_filter()
 
 
 
 
 
 
 
 
      
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
 
 
   
 
 
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION asrp400_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
 
 
 
 
]]>
  </section>
  <section id="asrp400.global" ver="8" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       doctype LIKE type_t.chr5, 
   docdate LIKE type_t.dat, 
   sraa001 LIKE type_t.chr10, 
   combine LIKE type_t.chr80, 
   srab004 LIKE type_t.chr500, 
   srab005 LIKE type_t.chr30, 
   srab006 LIKE type_t.chr10, 
   srab009 LIKE type_t.dat,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="asrp400.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION asrp400_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_sfaa_d.getLength() THEN
         LET g_detail_idx = g_sfaa_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_sfaa_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_sfaa_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_sfaa2_d.getLength() THEN
         LET g_detail_idx2 = g_sfaa2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_sfaa2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_sfaa2_d.getLength() TO FORMONLY.cnt
   END IF
 
   IF g_current_page = 3 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx2 > g_sfaa3_d.getLength() THEN
         LET g_detail_idx2 = g_sfaa3_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_sfaa3_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_sfaa3_d.getLength() TO FORMONLY.cnt
   END IF
 
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.init" ver="4" status="" src="s">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION asrp400_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.input" ver="1" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION asrp400_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT sfaa003,sfaa057,sfaa010,'',sfaa020,sfaastus,sfaa012,sfaa050,sfaa051,sfaa055, 
       sfaa056,sfaa013,sfaa009,'',sfaa017,'',sfaa002,sfaasite FROM sfaa_t WHERE sfaaent=? AND sfaadocno=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asrp400_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT sfbaseq,sfbaseq1,sfba006,'',sfba002,'',sfba003,'',sfba004,sfba014,'',sfba023, 
       sfba016,sfba012 FROM sfba_t WHERE sfbaent=? AND sfbadocno=? AND sfbaseq=? AND sfbaseq1=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asrp400_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT sfcb001,sfcb002,sfcb003,sfcb004,sfcb046,sfcb047,sfcb050,sfcb048,sfcb049, 
       sfcb051 FROM sfcb_t WHERE sfcbent=? AND sfcbdocno=? AND sfcb001=? AND sfcb002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE asrp400_bcl3 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL asrp400_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL asrp400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME 
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="asrp400.input.body" ver="1" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_sfaa_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfaa_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL asrp400_b_fill()
            LET g_rec_b = g_sfaa_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
                           CALL asrp400_b_fill2('2')
               CALL asrp400_b_fill2('3')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asrp400_cl USING g_enterprise,g_sfzz_m.sfzzdocno
 
            IF STATUS THEN
               CALL cl_err("OPEN asrp400_cl:", STATUS, 1)
               CLOSE asrp400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_sfaa_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfaa_d[l_ac]. IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_sfaa_d_t.* = g_sfaa_d[l_ac].*  #BACKUP
               CALL asrp400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL asrp400_set_no_entry_b(l_cmd)
               IF NOT asrp400_lock_b("sfaa_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asrp400_bcl INTO g_sfaa_d[l_ac].sfaa003,g_sfaa_d[l_ac].sfaa057,g_sfaa_d[l_ac].sfaa010, 
                      g_sfaa_d[l_ac].sfaa010_desc,g_sfaa_d[l_ac].sfaa020,g_sfaa_d[l_ac].sfaastus,g_sfaa_d[l_ac].sfaa012, 
                      g_sfaa_d[l_ac].sfaa050,g_sfaa_d[l_ac].sfaa051,g_sfaa_d[l_ac].sfaa055,g_sfaa_d[l_ac].sfaa056, 
                      g_sfaa_d[l_ac].sfaa013,g_sfaa_d[l_ac].sfaa009,g_sfaa_d[l_ac].sfaa009_desc,g_sfaa_d[l_ac].sfaa017, 
                      g_sfaa_d[l_ac].sfaa017_desc,g_sfaa_d[l_ac].sfaa002,g_sfaa_d[l_ac].sfaasite
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_sfaa_d_t.,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL asrp400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfaa_d[l_ac].* TO NULL 
                  LET g_sfaa_d[l_ac].sfaastus = "N"
      LET g_sfaa_d[l_ac].sfaa050 = "0"
      LET g_sfaa_d[l_ac].sfaa051 = "0"
      LET g_sfaa_d[l_ac].sfaa055 = "0"
      LET g_sfaa_d[l_ac].sfaa056 = "0"
 
 
            LET g_sfaa_d_t.* = g_sfaa_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asrp400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL asrp400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfaa_d[li_reproduce_target].* = g_sfaa_d[li_reproduce].*
 
               LET g_sfaa_d[li_reproduce_target]. = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      #LET g_sfaa3_d[l_ac].sfaaownid = g_user
      #LET g_sfaa3_d[l_ac].sfaaowndp = g_dept
      #LET g_sfaa3_d[l_ac].sfaacrtid = g_user
      #LET g_sfaa3_d[l_ac].sfaacrtdp = g_dept 
      #LET g_sfaa3_d[l_ac].sfaacrtdt = cl_get_current()
      #LET g_sfaa3_d[l_ac].sfaamodid = ""
      #LET g_sfaa3_d[l_ac].sfaamoddt = ""
      #LET g_sfaa_d[l_ac].sfaastus = ""
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sfaa_t 
             WHERE sfaaent = g_enterprise AND sfaadocno = g_sfzz_m.sfzzdocno
 
               AND  = g_sfaa_d[l_ac].
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               CALL asrp400_insert_b('sfaa_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_sfaa_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("sfaa_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asrp400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_sfaa_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfaa_d.deleteElement(l_ac)
               NEXT FIELD 
            END IF
         
            IF g_sfaa_d[l_ac]. IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM sfaa_t
                WHERE sfaaent = g_enterprise AND sfaadocno = g_sfzz_m.sfzzdocno AND
 
                       = g_sfaa_d_t.
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("sfaa_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE asrp400_bcl
               LET l_count = g_sfaa_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL asrp400_delete_b('sfaa_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<sfaa003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa003
            #add-point:BEFORE FIELD sfaa003
            {<point name="input.b.page1.sfaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa003
            
            #add-point:AFTER FIELD sfaa003
            {<point name="input.a.page1.sfaa003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa003
            #add-point:ON CHANGE sfaa003
            {<point name="input.g.page1.sfaa003" />}
            #END add-point
 
         #----<<sfaa057>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa057
            #add-point:BEFORE FIELD sfaa057
            {<point name="input.b.page1.sfaa057" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa057
            
            #add-point:AFTER FIELD sfaa057
            {<point name="input.a.page1.sfaa057" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa057
            #add-point:ON CHANGE sfaa057
            {<point name="input.g.page1.sfaa057" />}
            #END add-point
 
         #----<<sfaa010>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfaa010
            
            #add-point:AFTER FIELD sfaa010
            {<point name="input.a.page1.sfaa010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa010
            #add-point:BEFORE FIELD sfaa010
            {<point name="input.b.page1.sfaa010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa010
            #add-point:ON CHANGE sfaa010
            {<point name="input.g.page1.sfaa010" />}
            #END add-point
 
         #----<<sfaa020>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa020
            #add-point:BEFORE FIELD sfaa020
            {<point name="input.b.page1.sfaa020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa020
            
            #add-point:AFTER FIELD sfaa020
            {<point name="input.a.page1.sfaa020" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa020
            #add-point:ON CHANGE sfaa020
            {<point name="input.g.page1.sfaa020" />}
            #END add-point
 
         #----<<sfaastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaastus
            #add-point:BEFORE FIELD sfaastus
            {<point name="input.b.page1.sfaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaastus
            
            #add-point:AFTER FIELD sfaastus
            {<point name="input.a.page1.sfaastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaastus
            #add-point:ON CHANGE sfaastus
            {<point name="input.g.page1.sfaastus" />}
            #END add-point
 
         #----<<sfaa012>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfaa012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfaa_d[l_ac].sfaa012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfaa012
            END IF
 
 
            #add-point:AFTER FIELD sfaa012
            {<point name="input.a.page1.sfaa012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa012
            #add-point:BEFORE FIELD sfaa012
            {<point name="input.b.page1.sfaa012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa012
            #add-point:ON CHANGE sfaa012
            {<point name="input.g.page1.sfaa012" />}
            #END add-point
 
         #----<<sfaa050>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa050
            #add-point:BEFORE FIELD sfaa050
            {<point name="input.b.page1.sfaa050" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa050
            
            #add-point:AFTER FIELD sfaa050
            {<point name="input.a.page1.sfaa050" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa050
            #add-point:ON CHANGE sfaa050
            {<point name="input.g.page1.sfaa050" />}
            #END add-point
 
         #----<<sfaa051>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa051
            #add-point:BEFORE FIELD sfaa051
            {<point name="input.b.page1.sfaa051" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa051
            
            #add-point:AFTER FIELD sfaa051
            {<point name="input.a.page1.sfaa051" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa051
            #add-point:ON CHANGE sfaa051
            {<point name="input.g.page1.sfaa051" />}
            #END add-point
 
         #----<<sfaa055>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa055
            #add-point:BEFORE FIELD sfaa055
            {<point name="input.b.page1.sfaa055" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa055
            
            #add-point:AFTER FIELD sfaa055
            {<point name="input.a.page1.sfaa055" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa055
            #add-point:ON CHANGE sfaa055
            {<point name="input.g.page1.sfaa055" />}
            #END add-point
 
         #----<<sfaa056>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa056
            #add-point:BEFORE FIELD sfaa056
            {<point name="input.b.page1.sfaa056" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa056
            
            #add-point:AFTER FIELD sfaa056
            {<point name="input.a.page1.sfaa056" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa056
            #add-point:ON CHANGE sfaa056
            {<point name="input.g.page1.sfaa056" />}
            #END add-point
 
         #----<<sfaa013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa013
            #add-point:BEFORE FIELD sfaa013
            {<point name="input.b.page1.sfaa013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa013
            
            #add-point:AFTER FIELD sfaa013
            {<point name="input.a.page1.sfaa013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa013
            #add-point:ON CHANGE sfaa013
            {<point name="input.g.page1.sfaa013" />}
            #END add-point
 
         #----<<sfaa009>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfaa009
            
            #add-point:AFTER FIELD sfaa009
            {<point name="input.a.page1.sfaa009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa009
            #add-point:BEFORE FIELD sfaa009
            {<point name="input.b.page1.sfaa009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa009
            #add-point:ON CHANGE sfaa009
            {<point name="input.g.page1.sfaa009" />}
            #END add-point
 
         #----<<sfaa017>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfaa017
            
            #add-point:AFTER FIELD sfaa017
            {<point name="input.a.page1.sfaa017" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa017
            #add-point:BEFORE FIELD sfaa017
            {<point name="input.b.page1.sfaa017" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa017
            #add-point:ON CHANGE sfaa017
            {<point name="input.g.page1.sfaa017" />}
            #END add-point
 
         #----<<sfaa002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaa002
            #add-point:BEFORE FIELD sfaa002
            {<point name="input.b.page1.sfaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaa002
            
            #add-point:AFTER FIELD sfaa002
            {<point name="input.a.page1.sfaa002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaa002
            #add-point:ON CHANGE sfaa002
            {<point name="input.g.page1.sfaa002" />}
            #END add-point
 
         #----<<sfaasite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfaasite
            #add-point:BEFORE FIELD sfaasite
            {<point name="input.b.page1.sfaasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfaasite
            
            #add-point:AFTER FIELD sfaasite
            {<point name="input.a.page1.sfaasite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfaasite
            #add-point:ON CHANGE sfaasite
            {<point name="input.g.page1.sfaasite" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<sfaa003>>----
         #Ctrlp:input.c.page1.sfaa003
         ON ACTION controlp INFIELD sfaa003
            #add-point:ON ACTION controlp INFIELD sfaa003
            {<point name="input.c.page1.sfaa003" />}
            #END add-point
 
         #----<<sfaa057>>----
         #Ctrlp:input.c.page1.sfaa057
         ON ACTION controlp INFIELD sfaa057
            #add-point:ON ACTION controlp INFIELD sfaa057
            {<point name="input.c.page1.sfaa057" />}
            #END add-point
 
         #----<<sfaa010>>----
         #Ctrlp:input.c.page1.sfaa010
         ON ACTION controlp INFIELD sfaa010
            #add-point:ON ACTION controlp INFIELD sfaa010
            {<point name="input.c.page1.sfaa010" />}
            #END add-point
 
         #----<<sfaa020>>----
         #Ctrlp:input.c.page1.sfaa020
         ON ACTION controlp INFIELD sfaa020
            #add-point:ON ACTION controlp INFIELD sfaa020
            {<point name="input.c.page1.sfaa020" />}
            #END add-point
 
         #----<<sfaastus>>----
         #Ctrlp:input.c.page1.sfaastus
         ON ACTION controlp INFIELD sfaastus
            #add-point:ON ACTION controlp INFIELD sfaastus
            {<point name="input.c.page1.sfaastus" />}
            #END add-point
 
         #----<<sfaa012>>----
         #Ctrlp:input.c.page1.sfaa012
         ON ACTION controlp INFIELD sfaa012
            #add-point:ON ACTION controlp INFIELD sfaa012
            {<point name="input.c.page1.sfaa012" />}
            #END add-point
 
         #----<<sfaa050>>----
         #Ctrlp:input.c.page1.sfaa050
         ON ACTION controlp INFIELD sfaa050
            #add-point:ON ACTION controlp INFIELD sfaa050
            {<point name="input.c.page1.sfaa050" />}
            #END add-point
 
         #----<<sfaa051>>----
         #Ctrlp:input.c.page1.sfaa051
         ON ACTION controlp INFIELD sfaa051
            #add-point:ON ACTION controlp INFIELD sfaa051
            {<point name="input.c.page1.sfaa051" />}
            #END add-point
 
         #----<<sfaa055>>----
         #Ctrlp:input.c.page1.sfaa055
         ON ACTION controlp INFIELD sfaa055
            #add-point:ON ACTION controlp INFIELD sfaa055
            {<point name="input.c.page1.sfaa055" />}
            #END add-point
 
         #----<<sfaa056>>----
         #Ctrlp:input.c.page1.sfaa056
         ON ACTION controlp INFIELD sfaa056
            #add-point:ON ACTION controlp INFIELD sfaa056
            {<point name="input.c.page1.sfaa056" />}
            #END add-point
 
         #----<<sfaa013>>----
         #Ctrlp:input.c.page1.sfaa013
         ON ACTION controlp INFIELD sfaa013
            #add-point:ON ACTION controlp INFIELD sfaa013
            {<point name="input.c.page1.sfaa013" />}
            #END add-point
 
         #----<<sfaa009>>----
         #Ctrlp:input.c.page1.sfaa009
         ON ACTION controlp INFIELD sfaa009
            #add-point:ON ACTION controlp INFIELD sfaa009
            {<point name="input.c.page1.sfaa009" />}
            #END add-point
 
         #----<<sfaa017>>----
         #Ctrlp:input.c.page1.sfaa017
         ON ACTION controlp INFIELD sfaa017
            #add-point:ON ACTION controlp INFIELD sfaa017
            {<point name="input.c.page1.sfaa017" />}
            #END add-point
 
         #----<<sfaa002>>----
         #Ctrlp:input.c.page1.sfaa002
         ON ACTION controlp INFIELD sfaa002
            #add-point:ON ACTION controlp INFIELD sfaa002
            {<point name="input.c.page1.sfaa002" />}
            #END add-point
 
         #----<<sfaasite>>----
         #Ctrlp:input.c.page1.sfaasite
         ON ACTION controlp INFIELD sfaasite
            #add-point:ON ACTION controlp INFIELD sfaasite
            {<point name="input.c.page1.sfaasite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_sfaa_d[l_ac].* = g_sfaa_d_t.*
               CLOSE asrp400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_sfaa_d[l_ac].,-263,1)
               LET g_sfaa_d[l_ac].* = g_sfaa_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               #LET g_sfaa3_d[l_ac].sfaamodid = g_user 
#LET g_sfaa3_d[l_ac].sfaamoddt = cl_get_current()
 
      
               UPDATE sfaa_t SET (sfaadocno,sfaa003,sfaa057,sfaa010,sfaa020,sfaastus,sfaa012,sfaa050, 
                   sfaa051,sfaa055,sfaa056,sfaa013,sfaa009,sfaa017,sfaa002,sfaasite) = (g_sfzz_m.sfzzdocno, 
                   g_sfaa_d[l_ac].sfaa003,g_sfaa_d[l_ac].sfaa057,g_sfaa_d[l_ac].sfaa010,g_sfaa_d[l_ac].sfaa020, 
                   g_sfaa_d[l_ac].sfaastus,g_sfaa_d[l_ac].sfaa012,g_sfaa_d[l_ac].sfaa050,g_sfaa_d[l_ac].sfaa051, 
                   g_sfaa_d[l_ac].sfaa055,g_sfaa_d[l_ac].sfaa056,g_sfaa_d[l_ac].sfaa013,g_sfaa_d[l_ac].sfaa009, 
                   g_sfaa_d[l_ac].sfaa017,g_sfaa_d[l_ac].sfaa002,g_sfaa_d[l_ac].sfaasite)
                WHERE sfaaent = g_enterprise AND sfaadocno = g_sfzz_m.sfzzdocno 
 
                  AND  = g_sfaa_d_t. #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("sfaa_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_sfaa_d[l_ac].* = g_sfaa_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("sfaa_t",SQLCA.sqlcode,1)
                     LET g_sfaa_d[l_ac].* = g_sfaa_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               LET gs_keys_bak[1] = g_sfzzdocno_t
               CALL asrp400_update_b('sfaa_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL asrp400_unlock_b("sfaa_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_sfaa_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfaa_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_sfaa2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfaa2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_rec_b = g_sfaa2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfaa2_d[l_ac].* TO NULL 
                  LET g_sfaa2_d[l_ac].sfba016 = "0"
      LET g_sfaa2_d[l_ac].sfba012 = "0"
 
 
            LET g_sfaa2_d_t.* = g_sfaa2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asrp400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL asrp400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfaa2_d[li_reproduce_target].* = g_sfaa2_d[li_reproduce].*
 
               LET g_sfaa2_d[li_reproduce_target].sfbaseq = NULL
               LET g_sfaa2_d[li_reproduce_target].sfbaseq1 = NULL
 
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asrp400_cl USING g_enterprise,g_sfzz_m.sfzzdocno
            OPEN asrp400_bcl USING g_enterprise,g_sfzz_m.sfzzdocno,
            IF STATUS THEN
               CALL cl_err("OPEN asrp400_cl:", STATUS, 1)
               CLOSE asrp400_cl
               CLOSE asrp400_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_sfaa2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfaa2_d[l_ac].sfbaseq IS NOT NULL
               AND g_sfaa2_d[l_ac].sfbaseq1 IS NOT NULL
 
            THEN 
               LET l_cmd='u'
               LET g_sfaa2_d_t.* = g_sfaa2_d[l_ac].*  #BACKUP
               CALL asrp400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL asrp400_set_no_entry_b(l_cmd)
               IF NOT asrp400_lock_b("sfba_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asrp400_bcl2 INTO g_sfaa2_d[l_ac].sfbaseq,g_sfaa2_d[l_ac].sfbaseq1,g_sfaa2_d[l_ac].sfba006, 
                      g_sfaa2_d[l_ac].sfba006_desc,g_sfaa2_d[l_ac].sfba002,g_sfaa2_d[l_ac].sfba002_desc, 
                      g_sfaa2_d[l_ac].sfba003,g_sfaa2_d[l_ac].sfba003_desc,g_sfaa2_d[l_ac].sfba004,g_sfaa2_d[l_ac].sfba014, 
                      g_sfaa2_d[l_ac].sfba014_desc,g_sfaa2_d[l_ac].sfba023,g_sfaa2_d[l_ac].sfba016,g_sfaa2_d[l_ac].sfba012 

                   IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL asrp400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_sfaa2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfaa2_d.deleteElement(l_ac)
               NEXT FIELD sfbaseq
            END IF
            IF g_sfaa2_d[l_ac].sfbaseq IS NOT NULL
               AND g_sfaa2_d_t.sfbaseq1 IS NOT NULL
 
            THEN
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM sfba_t
                WHERE sfbaent = g_enterprise AND sfbadocno = g_sfzz_m.sfzzdocno AND sfbaseq = g_sfaa2_d[g_detail_idx2].sfbaseq  
                    AND sfbaseq1 = g_sfaa2_d[g_detail_idx2].sfbaseq1
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("sfaa_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE asrp400_bcl
               LET l_count = g_sfaa_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               LET gs_keys[2] = g_sfaa2_d[g_detail_idx2].sfbaseq
               LET gs_keys[3] = g_sfaa2_d[g_detail_idx2].sfbaseq1
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL asrp400_delete_b('sfba_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sfba_t 
             WHERE sfbaent = g_enterprise AND sfbadocno = g_sfzz_m.sfzzdocno AND sfbaseq = g_sfaa2_d[g_detail_idx2].sfbaseq  
                 AND sfbaseq1 = g_sfaa2_d[g_detail_idx2].sfbaseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               LET gs_keys[2] = g_sfaa2_d[g_detail_idx2].sfbaseq
               LET gs_keys[3] = g_sfaa2_d[g_detail_idx2].sfbaseq1
               CALL asrp400_insert_b('sfba_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_sfaa_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("sfba_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asrp400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_sfaa2_d[l_ac].* = g_sfaa2_d_t.*
               CLOSE asrp400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_sfaa2_d[l_ac].* = g_sfaa2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE sfba_t SET (sfbadocno,sfbaseq,sfbaseq1,sfba006,sfba002,sfba003,sfba004,sfba014, 
                   sfba023,sfba016,sfba012) = (g_sfzz_m.sfzzdocno,g_sfaa2_d[l_ac].sfbaseq,g_sfaa2_d[l_ac].sfbaseq1, 
                   g_sfaa2_d[l_ac].sfba006,g_sfaa2_d[l_ac].sfba002,g_sfaa2_d[l_ac].sfba003,g_sfaa2_d[l_ac].sfba004, 
                   g_sfaa2_d[l_ac].sfba014,g_sfaa2_d[l_ac].sfba023,g_sfaa2_d[l_ac].sfba016,g_sfaa2_d[l_ac].sfba012)  
                   #自訂欄位頁簽
                WHERE sfbaent = g_enterprise AND sfbadocno = g_sfzzdocno_t AND sfbaseq = g_sfaa2_d_t.sfbaseq AND sfbaseq1 = g_sfaa2_d_t.sfbaseq1
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("sfba_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_sfaa2_d[l_ac].* = g_sfaa2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("sfba_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_sfaa2_d[l_ac].* = g_sfaa2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               LET gs_keys_bak[1] = g_sfzzdocno_t
               LET gs_keys[2] = g_sfaa2_d[g_detail_idx2].sfbaseq
               LET gs_keys_bak[2] = g_sfaa2_d_t.sfbaseq
               LET gs_keys[3] = g_sfaa2_d[g_detail_idx2].sfbaseq1
               LET gs_keys_bak[3] = g_sfaa2_d_t.sfbaseq1
               CALL asrp400_update_b('sfba_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page2  >---------------------
         #----<<sfbaseq>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfbaseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfaa2_d[l_ac].sfbaseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfbaseq
            END IF
 
 
            #add-point:AFTER FIELD sfbaseq
            {<point name="input.a.page2.sfbaseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfbaseq
            #add-point:BEFORE FIELD sfbaseq
            {<point name="input.b.page2.sfbaseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfbaseq
            #add-point:ON CHANGE sfbaseq
            {<point name="input.g.page2.sfbaseq" />}
            #END add-point
 
         #----<<sfbaseq1>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfbaseq1
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfaa2_d[l_ac].sfbaseq1,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD sfbaseq1
            END IF
 
 
            #add-point:AFTER FIELD sfbaseq1
            {<point name="input.a.page2.sfbaseq1" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfbaseq1
            #add-point:BEFORE FIELD sfbaseq1
            {<point name="input.b.page2.sfbaseq1" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfbaseq1
            #add-point:ON CHANGE sfbaseq1
            {<point name="input.g.page2.sfbaseq1" />}
            #END add-point
 
         #----<<sfba006>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfba006
            
            #add-point:AFTER FIELD sfba006
            {<point name="input.a.page2.sfba006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba006
            #add-point:BEFORE FIELD sfba006
            {<point name="input.b.page2.sfba006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfba006
            #add-point:ON CHANGE sfba006
            {<point name="input.g.page2.sfba006" />}
            #END add-point
 
         #----<<sfba002>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfba002
            
            #add-point:AFTER FIELD sfba002
            {<point name="input.a.page2.sfba002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba002
            #add-point:BEFORE FIELD sfba002
            {<point name="input.b.page2.sfba002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfba002
            #add-point:ON CHANGE sfba002
            {<point name="input.g.page2.sfba002" />}
            #END add-point
 
         #----<<sfba003>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfba003
            
            #add-point:AFTER FIELD sfba003
            {<point name="input.a.page2.sfba003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba003
            #add-point:BEFORE FIELD sfba003
            {<point name="input.b.page2.sfba003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfba003
            #add-point:ON CHANGE sfba003
            {<point name="input.g.page2.sfba003" />}
            #END add-point
 
         #----<<sfba004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfba004
            #add-point:BEFORE FIELD sfba004
            {<point name="input.b.page2.sfba004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba004
            
            #add-point:AFTER FIELD sfba004
            {<point name="input.a.page2.sfba004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfba004
            #add-point:ON CHANGE sfba004
            {<point name="input.g.page2.sfba004" />}
            #END add-point
 
         #----<<sfba014>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfba014
            
            #add-point:AFTER FIELD sfba014
            {<point name="input.a.page2.sfba014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba014
            #add-point:BEFORE FIELD sfba014
            {<point name="input.b.page2.sfba014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfba014
            #add-point:ON CHANGE sfba014
            {<point name="input.g.page2.sfba014" />}
            #END add-point
 
         #----<<sfba023>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfba023
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfaa2_d[l_ac].sfba023,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD sfba023
            END IF
 
 
            #add-point:AFTER FIELD sfba023
            {<point name="input.a.page2.sfba023" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba023
            #add-point:BEFORE FIELD sfba023
            {<point name="input.b.page2.sfba023" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfba023
            #add-point:ON CHANGE sfba023
            {<point name="input.g.page2.sfba023" />}
            #END add-point
 
         #----<<sfba016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfba016
            #add-point:BEFORE FIELD sfba016
            {<point name="input.b.page2.sfba016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfba016
            
            #add-point:AFTER FIELD sfba016
            {<point name="input.a.page2.sfba016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfba016
            #add-point:ON CHANGE sfba016
            {<point name="input.g.page2.sfba016" />}
            #END add-point
 
         #----<<sfba012>>----
         #此段落由子樣板a02產生
         AFTER FIELD sfba012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_sfaa2_d[l_ac].sfba012,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD sfba012
            END IF
 
 
            #add-point:AFTER FIELD sfba012
            {<point name="input.a.page2.sfba012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sfba012
            #add-point:BEFORE FIELD sfba012
            {<point name="input.b.page2.sfba012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sfba012
            #add-point:ON CHANGE sfba012
            {<point name="input.g.page2.sfba012" />}
            #END add-point
 
 
         #---------------------<  Detail: page2  >---------------------
         #----<<sfbaseq>>----
         #Ctrlp:input.c.page2.sfbaseq
         ON ACTION controlp INFIELD sfbaseq
            #add-point:ON ACTION controlp INFIELD sfbaseq
            {<point name="input.c.page2.sfbaseq" />}
            #END add-point
 
         #----<<sfbaseq1>>----
         #Ctrlp:input.c.page2.sfbaseq1
         ON ACTION controlp INFIELD sfbaseq1
            #add-point:ON ACTION controlp INFIELD sfbaseq1
            {<point name="input.c.page2.sfbaseq1" />}
            #END add-point
 
         #----<<sfba006>>----
         #Ctrlp:input.c.page2.sfba006
         ON ACTION controlp INFIELD sfba006
            #add-point:ON ACTION controlp INFIELD sfba006
            {<point name="input.c.page2.sfba006" />}
            #END add-point
 
         #----<<sfba002>>----
         #Ctrlp:input.c.page2.sfba002
         ON ACTION controlp INFIELD sfba002
            #add-point:ON ACTION controlp INFIELD sfba002
            {<point name="input.c.page2.sfba002" />}
            #END add-point
 
         #----<<sfba003>>----
         #Ctrlp:input.c.page2.sfba003
         ON ACTION controlp INFIELD sfba003
            #add-point:ON ACTION controlp INFIELD sfba003
            {<point name="input.c.page2.sfba003" />}
            #END add-point
 
         #----<<sfba004>>----
         #Ctrlp:input.c.page2.sfba004
         ON ACTION controlp INFIELD sfba004
            #add-point:ON ACTION controlp INFIELD sfba004
            {<point name="input.c.page2.sfba004" />}
            #END add-point
 
         #----<<sfba014>>----
         #Ctrlp:input.c.page2.sfba014
         ON ACTION controlp INFIELD sfba014
            #add-point:ON ACTION controlp INFIELD sfba014
            {<point name="input.c.page2.sfba014" />}
            #END add-point
 
         #----<<sfba023>>----
         #Ctrlp:input.c.page2.sfba023
         ON ACTION controlp INFIELD sfba023
            #add-point:ON ACTION controlp INFIELD sfba023
            {<point name="input.c.page2.sfba023" />}
            #END add-point
 
         #----<<sfba016>>----
         #Ctrlp:input.c.page2.sfba016
         ON ACTION controlp INFIELD sfba016
            #add-point:ON ACTION controlp INFIELD sfba016
            {<point name="input.c.page2.sfba016" />}
            #END add-point
 
         #----<<sfba012>>----
         #Ctrlp:input.c.page2.sfba012
         ON ACTION controlp INFIELD sfba012
            #add-point:ON ACTION controlp INFIELD sfba012
            {<point name="input.c.page2.sfba012" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfaa2_d[l_ac].* = g_sfaa2_d_t.*
               END IF
               CLOSE asrp400_bcl2
               CLOSE asrp400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL asrp400_unlock_b("sfba_t","'2'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point  
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_sfaa2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfaa2_d.getLength()+1
 
      END INPUT
 
      INPUT ARRAY g_sfaa3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_sfaa3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_rec_b = g_sfaa3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_sfaa3_d[l_ac].* TO NULL 
            
            LET g_sfaa3_d_t.* = g_sfaa3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL asrp400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL asrp400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_sfaa3_d[li_reproduce_target].* = g_sfaa3_d[li_reproduce].*
 
               LET g_sfaa3_d[li_reproduce_target].sfcb001 = NULL
               LET g_sfaa3_d[li_reproduce_target].sfcb002 = NULL
 
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN asrp400_cl USING g_enterprise,g_sfzz_m.sfzzdocno
            OPEN asrp400_bcl USING g_enterprise,g_sfzz_m.sfzzdocno,
            IF STATUS THEN
               CALL cl_err("OPEN asrp400_cl:", STATUS, 1)
               CLOSE asrp400_cl
               CLOSE asrp400_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_sfaa3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_sfaa3_d[l_ac].sfcb001 IS NOT NULL
               AND g_sfaa3_d[l_ac].sfcb002 IS NOT NULL
 
            THEN 
               LET l_cmd='u'
               LET g_sfaa3_d_t.* = g_sfaa3_d[l_ac].*  #BACKUP
               CALL asrp400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL asrp400_set_no_entry_b(l_cmd)
               IF NOT asrp400_lock_b("sfcb_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH asrp400_bcl3 INTO g_sfaa3_d[l_ac].sfcb001,g_sfaa3_d[l_ac].sfcb002,g_sfaa3_d[l_ac].sfcb003, 
                      g_sfaa3_d[l_ac].sfcb004,g_sfaa3_d[l_ac].sfcb046,g_sfaa3_d[l_ac].sfcb047,g_sfaa3_d[l_ac].sfcb050, 
                      g_sfaa3_d[l_ac].sfcb048,g_sfaa3_d[l_ac].sfcb049,g_sfaa3_d[l_ac].sfcb051
                   IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL asrp400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_sfaa3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_sfaa3_d.deleteElement(l_ac)
               NEXT FIELD sfcb001
            END IF
            IF g_sfaa3_d[l_ac].sfcb001 IS NOT NULL
               AND g_sfaa3_d_t.sfcb002 IS NOT NULL
 
            THEN
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM sfcb_t
                WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfzz_m.sfzzdocno AND sfcb001 = g_sfaa3_d[g_detail_idx2].sfcb001  
                    AND sfcb002 = g_sfaa3_d[g_detail_idx2].sfcb002
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("sfaa_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE asrp400_bcl
               LET l_count = g_sfaa_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               LET gs_keys[2] = g_sfaa3_d[g_detail_idx2].sfcb001
               LET gs_keys[3] = g_sfaa3_d[g_detail_idx2].sfcb002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL asrp400_delete_b('sfcb_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sfcb_t 
             WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfzz_m.sfzzdocno AND sfcb001 = g_sfaa3_d[g_detail_idx2].sfcb001  
                 AND sfcb002 = g_sfaa3_d[g_detail_idx2].sfcb002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               LET gs_keys[2] = g_sfaa3_d[g_detail_idx2].sfcb001
               LET gs_keys[3] = g_sfaa3_d[g_detail_idx2].sfcb002
               CALL asrp400_insert_b('sfcb_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_sfaa_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL asrp400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_sfaa3_d[l_ac].* = g_sfaa3_d_t.*
               CLOSE asrp400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_sfaa3_d[l_ac].* = g_sfaa3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE sfcb_t SET (sfcbdocno,sfcb001,sfcb002,sfcb003,sfcb004,sfcb046,sfcb047,sfcb050, 
                   sfcb048,sfcb049,sfcb051) = (g_sfzz_m.sfzzdocno,g_sfaa3_d[l_ac].sfcb001,g_sfaa3_d[l_ac].sfcb002, 
                   g_sfaa3_d[l_ac].sfcb003,g_sfaa3_d[l_ac].sfcb004,g_sfaa3_d[l_ac].sfcb046,g_sfaa3_d[l_ac].sfcb047, 
                   g_sfaa3_d[l_ac].sfcb050,g_sfaa3_d[l_ac].sfcb048,g_sfaa3_d[l_ac].sfcb049,g_sfaa3_d[l_ac].sfcb051)  
                   #自訂欄位頁簽
                WHERE sfcbent = g_enterprise AND sfcbdocno = g_sfzzdocno_t AND sfcb001 = g_sfaa3_d_t.sfcb001 AND sfcb002 = g_sfaa3_d_t.sfcb002
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("sfcb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_sfaa3_d[l_ac].* = g_sfaa3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_sfaa3_d[l_ac].* = g_sfaa3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_sfzz_m.sfzzdocno
               LET gs_keys_bak[1] = g_sfzzdocno_t
               LET gs_keys[2] = g_sfaa3_d[g_detail_idx2].sfcb001
               LET gs_keys_bak[2] = g_sfaa3_d_t.sfcb001
               LET gs_keys[3] = g_sfaa3_d[g_detail_idx2].sfcb002
               LET gs_keys_bak[3] = g_sfaa3_d_t.sfcb002
               CALL asrp400_update_b('sfcb_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page3  >---------------------
         #----<<sfcb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb001
            #add-point:BEFORE FIELD sfcb001
            {<point name="input.b.page3.sfcb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb001
            
            #add-point:AFTER FIELD sfcb001
            {<point name="input.a.page3.sfcb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb001
            #add-point:ON CHANGE sfcb001
            {<point name="input.g.page3.sfcb001" />}
            #END add-point
 
         #----<<sfcb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb002
            #add-point:BEFORE FIELD sfcb002
            {<point name="input.b.page3.sfcb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb002
            
            #add-point:AFTER FIELD sfcb002
            {<point name="input.a.page3.sfcb002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb002
            #add-point:ON CHANGE sfcb002
            {<point name="input.g.page3.sfcb002" />}
            #END add-point
 
         #----<<sfcb003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb003
            #add-point:BEFORE FIELD sfcb003
            {<point name="input.b.page3.sfcb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb003
            
            #add-point:AFTER FIELD sfcb003
            {<point name="input.a.page3.sfcb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb003
            #add-point:ON CHANGE sfcb003
            {<point name="input.g.page3.sfcb003" />}
            #END add-point
 
         #----<<sfcb004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb004
            #add-point:BEFORE FIELD sfcb004
            {<point name="input.b.page3.sfcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb004
            
            #add-point:AFTER FIELD sfcb004
            {<point name="input.a.page3.sfcb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb004
            #add-point:ON CHANGE sfcb004
            {<point name="input.g.page3.sfcb004" />}
            #END add-point
 
         #----<<sfcb046>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb046
            #add-point:BEFORE FIELD sfcb046
            {<point name="input.b.page3.sfcb046" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb046
            
            #add-point:AFTER FIELD sfcb046
            {<point name="input.a.page3.sfcb046" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb046
            #add-point:ON CHANGE sfcb046
            {<point name="input.g.page3.sfcb046" />}
            #END add-point
 
         #----<<sfcb047>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb047
            #add-point:BEFORE FIELD sfcb047
            {<point name="input.b.page3.sfcb047" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb047
            
            #add-point:AFTER FIELD sfcb047
            {<point name="input.a.page3.sfcb047" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb047
            #add-point:ON CHANGE sfcb047
            {<point name="input.g.page3.sfcb047" />}
            #END add-point
 
         #----<<sfcb050>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb050
            #add-point:BEFORE FIELD sfcb050
            {<point name="input.b.page3.sfcb050" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb050
            
            #add-point:AFTER FIELD sfcb050
            {<point name="input.a.page3.sfcb050" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb050
            #add-point:ON CHANGE sfcb050
            {<point name="input.g.page3.sfcb050" />}
            #END add-point
 
         #----<<sfcb048>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb048
            #add-point:BEFORE FIELD sfcb048
            {<point name="input.b.page3.sfcb048" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb048
            
            #add-point:AFTER FIELD sfcb048
            {<point name="input.a.page3.sfcb048" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb048
            #add-point:ON CHANGE sfcb048
            {<point name="input.g.page3.sfcb048" />}
            #END add-point
 
         #----<<sfcb049>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb049
            #add-point:BEFORE FIELD sfcb049
            {<point name="input.b.page3.sfcb049" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb049
            
            #add-point:AFTER FIELD sfcb049
            {<point name="input.a.page3.sfcb049" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb049
            #add-point:ON CHANGE sfcb049
            {<point name="input.g.page3.sfcb049" />}
            #END add-point
 
         #----<<sfcb051>>----
         #此段落由子樣板a01產生
         BEFORE FIELD sfcb051
            #add-point:BEFORE FIELD sfcb051
            {<point name="input.b.page3.sfcb051" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sfcb051
            
            #add-point:AFTER FIELD sfcb051
            {<point name="input.a.page3.sfcb051" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sfcb051
            #add-point:ON CHANGE sfcb051
            {<point name="input.g.page3.sfcb051" />}
            #END add-point
 
 
         #---------------------<  Detail: page3  >---------------------
         #----<<sfcb001>>----
         #Ctrlp:input.c.page3.sfcb001
         ON ACTION controlp INFIELD sfcb001
            #add-point:ON ACTION controlp INFIELD sfcb001
            {<point name="input.c.page3.sfcb001" />}
            #END add-point
 
         #----<<sfcb002>>----
         #Ctrlp:input.c.page3.sfcb002
         ON ACTION controlp INFIELD sfcb002
            #add-point:ON ACTION controlp INFIELD sfcb002
            {<point name="input.c.page3.sfcb002" />}
            #END add-point
 
         #----<<sfcb003>>----
         #Ctrlp:input.c.page3.sfcb003
         ON ACTION controlp INFIELD sfcb003
            #add-point:ON ACTION controlp INFIELD sfcb003
            {<point name="input.c.page3.sfcb003" />}
            #END add-point
 
         #----<<sfcb004>>----
         #Ctrlp:input.c.page3.sfcb004
         ON ACTION controlp INFIELD sfcb004
            #add-point:ON ACTION controlp INFIELD sfcb004
            {<point name="input.c.page3.sfcb004" />}
            #END add-point
 
         #----<<sfcb046>>----
         #Ctrlp:input.c.page3.sfcb046
         ON ACTION controlp INFIELD sfcb046
            #add-point:ON ACTION controlp INFIELD sfcb046
            {<point name="input.c.page3.sfcb046" />}
            #END add-point
 
         #----<<sfcb047>>----
         #Ctrlp:input.c.page3.sfcb047
         ON ACTION controlp INFIELD sfcb047
            #add-point:ON ACTION controlp INFIELD sfcb047
            {<point name="input.c.page3.sfcb047" />}
            #END add-point
 
         #----<<sfcb050>>----
         #Ctrlp:input.c.page3.sfcb050
         ON ACTION controlp INFIELD sfcb050
            #add-point:ON ACTION controlp INFIELD sfcb050
            {<point name="input.c.page3.sfcb050" />}
            #END add-point
 
         #----<<sfcb048>>----
         #Ctrlp:input.c.page3.sfcb048
         ON ACTION controlp INFIELD sfcb048
            #add-point:ON ACTION controlp INFIELD sfcb048
            {<point name="input.c.page3.sfcb048" />}
            #END add-point
 
         #----<<sfcb049>>----
         #Ctrlp:input.c.page3.sfcb049
         ON ACTION controlp INFIELD sfcb049
            #add-point:ON ACTION controlp INFIELD sfcb049
            {<point name="input.c.page3.sfcb049" />}
            #END add-point
 
         #----<<sfcb051>>----
         #Ctrlp:input.c.page3.sfcb051
         ON ACTION controlp INFIELD sfcb051
            #add-point:ON ACTION controlp INFIELD sfcb051
            {<point name="input.c.page3.sfcb051" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3_after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_sfaa3_d[l_ac].* = g_sfaa3_d_t.*
               END IF
               CLOSE asrp400_bcl3
               CLOSE asrp400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL asrp400_unlock_b("sfcb_t","'3'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point  
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_sfaa3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_sfaa3_d.getLength()+1
 
      END INPUT
 
 
      
 
      
 
      
]]>
  </section>
  <section id="asrp400.input.head" ver="1" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME  
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
 #欄位檢查
         #---------------------------<  Master  >---------------------------
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_sfzz_m.sfzzdocno             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO sfzz_t (sfzzent,)
               VALUES (g_enterprise,) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_sfzz_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL asrp400_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE sfzz_t SET () = ()
                WHERE sfzzent = g_enterprise AND sfzzdocno = g_sfzzdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("sfzz_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_sfzzdocno_t = g_sfzz_m.sfzzdocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="asrp400.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD sfzzdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD sfaa003
               WHEN "s_detail2"
                  NEXT FIELD sfbaseq
 
               WHEN "s_detail3"
                  NEXT FIELD sfcb001
 
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION asrp400_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_sfaa_d.clear()   
   CALL g_sfaa2_d.clear()  
 
   CALL g_sfaa3_d.clear()  
 
 
 
   INITIALIZE g_sfzz_m.* LIKE sfzz_t.*             #DEFAULT 設定
   
   LET g_sfzzdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL asrp400_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_sfzz_m.* = g_sfzz_m_t.*
         CALL asrp400_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_sfaa_d.clear()
      CALL g_sfaa2_d.clear()
 
      CALL g_sfaa3_d.clear()
 
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_sfzzdocno_t = g_sfzz_m.sfzzdocno
 
   
   LET g_wc = g_wc,  
              " OR ( sfzzent = '" ||g_enterprise|| "' AND",
              " sfzzdocno = '", g_sfzz_m.sfzzdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE asrp400_cl
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION asrp400_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO sfaa_t
                  (sfaaent,
                   sfaadocno,
                   
                   ,sfaa003,sfaa057,sfaa010,sfaa020,sfaastus,sfaa012,sfaa050,sfaa051,sfaa055,sfaa056,sfaa013,sfaa009,sfaa017,sfaa002,sfaasite) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_sfaa_d[g_detail_idx].sfaa003,g_sfaa_d[g_detail_idx].sfaa057,g_sfaa_d[g_detail_idx].sfaa010, 
                       g_sfaa_d[g_detail_idx].sfaa020,g_sfaa_d[g_detail_idx].sfaastus,g_sfaa_d[g_detail_idx].sfaa012, 
                       g_sfaa_d[g_detail_idx].sfaa050,g_sfaa_d[g_detail_idx].sfaa051,g_sfaa_d[g_detail_idx].sfaa055, 
                       g_sfaa_d[g_detail_idx].sfaa056,g_sfaa_d[g_detail_idx].sfaa013,g_sfaa_d[g_detail_idx].sfaa009, 
                       g_sfaa_d[g_detail_idx].sfaa017,g_sfaa_d[g_detail_idx].sfaa002,g_sfaa_d[g_detail_idx].sfaasite) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfaa_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO sfba_t
                  (sfbaent,
                   sfbadocno,
                   sfbaseq,sfbaseq1
                   ,sfba006,sfba002,sfba003,sfba004,sfba014,sfba023,sfba016,sfba012) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_sfaa2_d[g_detail_idx2].sfba006,g_sfaa2_d[g_detail_idx2].sfba002,g_sfaa2_d[g_detail_idx2].sfba003, 
                       g_sfaa2_d[g_detail_idx2].sfba004,g_sfaa2_d[g_detail_idx2].sfba014,g_sfaa2_d[g_detail_idx2].sfba023, 
                       g_sfaa2_d[g_detail_idx2].sfba016,g_sfaa2_d[g_detail_idx2].sfba012)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfba_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO sfcb_t
                  (sfcbent,
                   sfcbdocno,
                   sfcb001,sfcb002
                   ,sfcb003,sfcb004,sfcb046,sfcb047,sfcb050,sfcb048,sfcb049,sfcb051) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_sfaa3_d[g_detail_idx2].sfcb003,g_sfaa3_d[g_detail_idx2].sfcb004,g_sfaa3_d[g_detail_idx2].sfcb046, 
                       g_sfaa3_d[g_detail_idx2].sfcb047,g_sfaa3_d[g_detail_idx2].sfcb050,g_sfaa3_d[g_detail_idx2].sfcb048, 
                       g_sfaa3_d[g_detail_idx2].sfcb049,g_sfaa3_d[g_detail_idx2].sfcb051)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("sfcb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION asrp400_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL asrp400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "sfaa_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN asrp400_bcl USING g_enterprise,
                                       g_sfzz_m.sfzzdocno,
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("asrp400_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "sfba_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN asrp400_bcl2 USING g_enterprise,
                                             g_sfzz_m.sfzzdocno,
                                             g_sfaa2_d[g_detail_idx2].sfbaseq,g_sfaa2_d[g_detail_idx2].sfbaseq1 

      IF SQLCA.sqlcode THEN
         CALL cl_err("asrp400_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "sfcb_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN asrp400_bcl3 USING g_enterprise,
                                             g_sfzz_m.sfzzdocno,
                                             g_sfaa3_d[g_detail_idx2].sfcb001,g_sfaa3_d[g_detail_idx2].sfcb002 

      IF SQLCA.sqlcode THEN
         CALL cl_err("asrp400_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.main" ver="4" status="" src="s">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("asr","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL asrp400_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_asrp400 WITH FORM cl_ap_formpath("asr",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL asrp400_init()
 
      #進入選單 Menu (="N")
      CALL asrp400_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_asrp400
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="asrp400.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION asrp400_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_sfzz_m.sfzzdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE 
 INTO 
 FROM sfzz_t
 WHERE sfzzent = g_enterprise AND sfzzdocno = g_sfzz_m.sfzzdocno
 
   ERROR ""
  
   LET g_sfzzdocno_t = g_sfzz_m.sfzzdocno
 
   CALL s_transaction_begin()
   
   OPEN asrp400_cl USING g_enterprise,g_sfzz_m.sfzzdocno
 
   IF STATUS THEN
      CALL cl_err("OPEN asrp400_cl:", STATUS, 1)
      CLOSE asrp400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH asrp400_cl INTO g_sfzz_m.a,g_sfzz_m.b,g_sfzz_m.c,g_sfzz_m.d
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_sfzz_m.sfzzdocno,SQLCA.sqlcode,0)
      CLOSE asrp400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL asrp400_show()
   WHILE TRUE
      LET g_sfzzdocno_t = g_sfzz_m.sfzzdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL asrp400_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_sfzz_m.* = g_sfzz_m_t.*
         CALL asrp400_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_sfzz_m.sfzzdocno != g_sfzzdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE sfaa_t SET sfaadocno = g_sfzz_m.sfzzdocno
 
          WHERE sfaaent = g_enterprise AND sfaadocno = g_sfzzdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("sfaa_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("sfaa_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE sfba_t
            SET sfbadocno = g_sfzz_m.sfzzdocno
 
          WHERE sfbaent = g_enterprise AND
                sfbadocno = g_sfzzdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("sfba_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("sfba_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE sfcb_t
            SET sfcbdocno = g_sfzz_m.sfzzdocno
 
          WHERE sfcbent = g_enterprise AND
                sfcbdocno = g_sfzzdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("sfcb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         
 
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_sfzz_m.sfzzdocno,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE asrp400_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_sfzz_m.sfzzdocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="asrp400.other_function" ver="2" status="" src="s">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="asrp400.process" ver="2" status="" src="s">
    <![CDATA[#+ 資料處理
PRIVATE FUNCTION asrp400_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE asrp400_process_cs CURSOR FROM ls_sql
#  FOREACH asrp400_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
  </section>
  <section id="asrp400.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION asrp400_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_sfaa_d.clear()
   CALL g_sfaa2_d.clear()
 
   CALL g_sfaa3_d.clear()
 
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL asrp400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL asrp400_browser_fill("")
      CALL asrp400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL asrp400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL asrp400_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION asrp400_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE sfzz_t.sfzzdocno 
   DEFINE l_oldno     LIKE sfzz_t.sfzzdocno 
 
   DEFINE l_master    RECORD LIKE sfzz_t.*
   DEFINE l_detail    RECORD LIKE sfaa_t.*
 
   DEFINE l_detail2    RECORD LIKE sfba_t.*
 
   DEFINE l_detail3    RECORD LIKE sfcb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_sfzz_m.sfzzdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_sfzzdocno_t = g_sfzz_m.sfzzdocno
 
    
   LET g_sfzz_m.sfzzdocno = ""
 
    
   CALL asrp400_set_entry('a')
   CALL asrp400_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL asrp400_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " sfzzdocno = '", g_sfzz_m.sfzzdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION asrp400_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("sfzzdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION asrp400_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="asrp400.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION asrp400_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("sfzzdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION asrp400_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="asrp400.show" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION asrp400_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_sfzz_m_t.* = g_sfzz_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL asrp400_b_fill() #單身填充
      CALL asrp400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_sfzz_m.a,g_sfzz_m.b,g_sfzz_m.c,g_sfzz_m.d
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_sfaa_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_sfaa2_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   FOR l_ac = 1 TO g_sfaa3_d.getLength()
      #帶出公用欄位reference值
      #此段落由子樣板a12產生
      ##LET g_sfaa3_d[l_ac].sfaaownid_desc = cl_get_username(g_sfaa3_d[l_ac].sfaaownid)
      ##LET g_sfaa3_d[l_ac].sfaaowndp_desc = cl_get_deptname(g_sfaa3_d[l_ac].sfaaowndp)
      ##LET g_sfaa3_d[l_ac].sfaacrtid_desc = cl_get_username(g_sfaa3_d[l_ac].sfaacrtid)
      ##LET g_sfaa3_d[l_ac].sfaacrtdp_desc = cl_get_deptname(g_sfaa3_d[l_ac].sfaacrtdp)
      ##LET g_sfaa3_d[l_ac].sfaamodid_desc = cl_get_username(g_sfaa3_d[l_ac].sfaamodid)
      ##LET g_sfaa3_d[l_ac].sfaacnfid_desc = cl_get_deptname(g_sfaa3_d[l_ac].sfaacnfid)
      ##LET g_sfaa3_d[l_ac].sfaapstid_desc = cl_get_deptname(g_sfaa3_d[l_ac].sfaapstid)
      
 
 
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
 
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL asrp400_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="asrp400.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="asrp400.transfer_argv" ver="1" status="" src="s">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION asrp400_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="asrp400.ui_browser_refresh" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION asrp400_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_sfzzdocno = g_sfzz_m.sfzzdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION asrp400_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.ui_dialog" ver="17" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION asrp400_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #+ 此段落由子樣板a57產生
         INPUT BY NAME g_master.doctype,g_master.docdate,g_master.sraa001,g_master.combine 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #此段落由子樣板a01產生
         BEFORE FIELD doctype
            #add-point:BEFORE FIELD doctype
            {<point name="input.b.doctype" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD doctype
            
            #add-point:AFTER FIELD doctype
            {<point name="input.a.doctype" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE doctype
            #add-point:ON CHANGE doctype
            {<point name="input.g.doctype" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD docdate
            #add-point:BEFORE FIELD docdate
            {<point name="input.b.docdate" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD docdate
            
            #add-point:AFTER FIELD docdate
            {<point name="input.a.docdate" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE docdate
            #add-point:ON CHANGE docdate
            {<point name="input.g.docdate" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sraa001
            
            #add-point:AFTER FIELD sraa001
            {<point name="input.a.sraa001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD sraa001
            #add-point:BEFORE FIELD sraa001
            {<point name="input.b.sraa001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE sraa001
            #add-point:ON CHANGE sraa001
            {<point name="input.g.sraa001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD combine
            #add-point:BEFORE FIELD combine
            {<point name="input.b.combine" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD combine
            
            #add-point:AFTER FIELD combine
            {<point name="input.a.combine" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE combine
            #add-point:ON CHANGE combine
            {<point name="input.g.combine" />}
            #END add-point
 
 
                     #Ctrlp:input.c.doctype
         ON ACTION controlp INFIELD doctype
            #add-point:ON ACTION controlp INFIELD doctype
            {<point name="input.c.doctype" />}
            #END add-point
 
         #Ctrlp:input.c.docdate
         ON ACTION controlp INFIELD docdate
            #add-point:ON ACTION controlp INFIELD docdate
            {<point name="input.c.docdate" />}
            #END add-point
 
         #Ctrlp:input.c.sraa001
         ON ACTION controlp INFIELD sraa001
            #add-point:ON ACTION controlp INFIELD sraa001
            {<point name="input.c.sraa001" />}
            #END add-point
 
         #Ctrlp:input.c.combine
         ON ACTION controlp INFIELD combine
            #add-point:ON ACTION controlp INFIELD combine
            {<point name="input.c.combine" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
               
         END INPUT
 
 
         
         #+ 此段落由子樣板a57產生
         CONSTRUCT BY NAME g_master.wc ON srab004,srab005,srab006,srab009
         
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.srab004
         ON ACTION controlp INFIELD srab004
            #add-point:ON ACTION controlp INFIELD srab004
            {<point name="construct.c.srab004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD srab004
            #add-point:BEFORE FIELD srab004
            {<point name="construct.b.srab004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD srab004
            
            #add-point:AFTER FIELD srab004
            {<point name="construct.a.srab004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.srab005
         ON ACTION controlp INFIELD srab005
            #add-point:ON ACTION controlp INFIELD srab005
            {<point name="construct.c.srab005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD srab005
            #add-point:BEFORE FIELD srab005
            {<point name="construct.b.srab005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD srab005
            
            #add-point:AFTER FIELD srab005
            {<point name="construct.a.srab005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD srab006
            #add-point:BEFORE FIELD srab006
            {<point name="construct.b.srab006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD srab006
            
            #add-point:AFTER FIELD srab006
            {<point name="construct.a.srab006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.srab006
         ON ACTION controlp INFIELD srab006
            #add-point:ON ACTION controlp INFIELD srab006
            {<point name="construct.c.srab006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD srab009
            #add-point:BEFORE FIELD srab009
            {<point name="construct.b.srab009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD srab009
            
            #add-point:AFTER FIELD srab009
            {<point name="construct.a.srab009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.srab009
         ON ACTION controlp INFIELD srab009
            #add-point:ON ACTION controlp INFIELD srab009
            {<point name="construct.c.srab009" />}
            #END add-point
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL asrp400_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = asrp400_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.ui_headershow" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION asrp400_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_sfzz_m.sfzzdocno = g_browser[g_current_idx].b_sfzzdocno   
 
    SELECT UNIQUE 
 INTO 
 FROM sfzz_t
 WHERE sfzzent = g_enterprise AND sfzzdocno = g_sfzz_m.sfzzdocno
   CALL asrp400_show()
   
END FUNCTION
]]>
  </section>
  <section id="asrp400.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION asrp400_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asrp400_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asrp400_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE asrp400_bcl3
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="asrp400.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION asrp400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfaa_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE sfaa_t 
         SET (sfaadocno,
              
              ,sfaa003,sfaa057,sfaa010,sfaa020,sfaastus,sfaa012,sfaa050,sfaa051,sfaa055,sfaa056,sfaa013,sfaa009,sfaa017,sfaa002,sfaasite) 
              = 
             (ps_keys[1]
              ,g_sfaa_d[g_detail_idx].sfaa003,g_sfaa_d[g_detail_idx].sfaa057,g_sfaa_d[g_detail_idx].sfaa010, 
                  g_sfaa_d[g_detail_idx].sfaa020,g_sfaa_d[g_detail_idx].sfaastus,g_sfaa_d[g_detail_idx].sfaa012, 
                  g_sfaa_d[g_detail_idx].sfaa050,g_sfaa_d[g_detail_idx].sfaa051,g_sfaa_d[g_detail_idx].sfaa055, 
                  g_sfaa_d[g_detail_idx].sfaa056,g_sfaa_d[g_detail_idx].sfaa013,g_sfaa_d[g_detail_idx].sfaa009, 
                  g_sfaa_d[g_detail_idx].sfaa017,g_sfaa_d[g_detail_idx].sfaa002,g_sfaa_d[g_detail_idx].sfaasite)  

         WHERE sfaaent = g_enterprise AND sfaadocno = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("sfaa_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("sfaa_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfba_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE sfba_t 
         SET (sfbadocno,
              sfbaseq,sfbaseq1
              ,sfba006,sfba002,sfba003,sfba004,sfba014,sfba023,sfba016,sfba012) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_sfaa2_d[g_detail_idx2].sfba006,g_sfaa2_d[g_detail_idx2].sfba002,g_sfaa2_d[g_detail_idx2].sfba003, 
                  g_sfaa2_d[g_detail_idx2].sfba004,g_sfaa2_d[g_detail_idx2].sfba014,g_sfaa2_d[g_detail_idx2].sfba023, 
                  g_sfaa2_d[g_detail_idx2].sfba016,g_sfaa2_d[g_detail_idx2].sfba012) 
         WHERE sfbaent = g_enterprise AND sfbadocno = ps_keys_bak[1] AND sfbaseq = ps_keys_bak[2] AND sfbaseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("sfba_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("sfba_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfcb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE sfcb_t 
         SET (sfcbdocno,
              sfcb001,sfcb002
              ,sfcb003,sfcb004,sfcb046,sfcb047,sfcb050,sfcb048,sfcb049,sfcb051) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_sfaa3_d[g_detail_idx2].sfcb003,g_sfaa3_d[g_detail_idx2].sfcb004,g_sfaa3_d[g_detail_idx2].sfcb046, 
                  g_sfaa3_d[g_detail_idx2].sfcb047,g_sfaa3_d[g_detail_idx2].sfcb050,g_sfaa3_d[g_detail_idx2].sfcb048, 
                  g_sfaa3_d[g_detail_idx2].sfcb049,g_sfaa3_d[g_detail_idx2].sfcb051) 
         WHERE sfcbent = g_enterprise AND sfcbdocno = ps_keys_bak[1] AND sfcb001 = ps_keys_bak[2] AND sfcb002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("sfcb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfba_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.key.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE sfba_t 
         SET (sfbadocno) 
              = 
             (ps_keys[1]) 
         WHERE sfbaent = g_enterprise AND sfbadocno = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.key.m_update2"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("sfba_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("sfba_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.key.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'1',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sfcb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.key.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE sfcb_t 
         SET (sfcbdocno) 
              = 
             (ps_keys[1]) 
         WHERE sfcbent = g_enterprise AND sfcbdocno = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.key.m_update3"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("sfcb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("sfcb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.key.after_update3"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
