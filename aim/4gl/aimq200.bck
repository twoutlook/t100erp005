#該程式未解開Section, 採用最新樣板產出!
{<section id="aimq200.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:2(2016-09-29 17:06:19), PR版次:0002(2016-09-29 17:08:27)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000008
#+ Filename...: aimq200
#+ Description: 料件變更記錄查詢作業
#+ Creator....: 05423(2016-08-04 17:40:54)
#+ Modifier...: 05423 -SD/PR- 05423
 
{</section>}
 
{<section id="aimq200.global" >}
#應用 q01 樣板自動產生(Version:32)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_imaa_d RECORD
       
       sel LIKE type_t.chr1, 
   imaa001 LIKE imaa_t.imaa001, 
   imaa001_desc LIKE type_t.chr500, 
   imaa001_desc_1 LIKE type_t.chr500, 
   imaa004 LIKE imaa_t.imaa004, 
   imaa009 LIKE imaa_t.imaa009, 
   url_b_imaa009 STRING, 
   imaa009_desc LIKE type_t.chr500, 
   imaa003 LIKE imaa_t.imaa003, 
   url_b_imaa003 STRING, 
   imaa003_desc LIKE type_t.chr500, 
   imaa005 LIKE imaa_t.imaa005, 
   imaa005_desc LIKE type_t.chr500, 
   imaa010 LIKE imaa_t.imaa010, 
   imaa010_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_imaa2_d RECORD
       l_seq LIKE type_t.num10, 
   l_col LIKE type_t.chr500, 
   l_col_desc LIKE type_t.chr500, 
   l_cha_b LIKE type_t.chr500, 
   l_cha_a LIKE type_t.chr500, 
   l_logc005 LIKE type_t.chr10, 
   l_logc005_desc LIKE type_t.chr500, 
   l_logc002 LIKE type_t.chr20, 
   l_logc002_desc LIKE type_t.chr500, 
   l_logc001 LIKE type_t.chr20, 
   l_logc001_desc LIKE type_t.chr500, 
   imaamoddt LIKE type_t.chr500
       END RECORD
 
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_qbe      STRING
DEFINE g_col      STRING
DEFINE g_dt       STRING
DEFINE g_wc_tt                STRING                        #儲存 user 的查詢條件
#end add-point
 
#模組變數(Module Variables)
DEFINE g_imaa_d            DYNAMIC ARRAY OF type_g_imaa_d
DEFINE g_imaa_d_t          type_g_imaa_d
DEFINE g_imaa2_d     DYNAMIC ARRAY OF type_g_imaa2_d
DEFINE g_imaa2_d_t   type_g_imaa2_d
 
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
DEFINE g_tot_cnt             LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page         LIKE type_t.num10             #每頁筆數
DEFINE g_page_act_list       STRING                        #分頁ACTION清單
DEFINE g_current_row_tot     LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_start_num      LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num        LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aimq200.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aim","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimq200_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE aimq200_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimq200_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aimq200 WITH FORM cl_ap_formpath("aim",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aimq200_init()   
 
      #進入選單 Menu (="N")
      CALL aimq200_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aimq200
      
   END IF 
   
   CLOSE aimq200_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   DROP TABLE aimq200_logc_tmp
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="aimq200.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aimq200_init()
   #add-point:init段define-客製 name="init.define_customerization"
   
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('b_imaa004','1001') 
  
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('imaa004','1001')
   CALL aimq200_create_tmp()
   #end add-point
 
   CALL aimq200_default_search()
END FUNCTION
 
{</section>}
 
{<section id="aimq200.default_search" >}
PRIVATE FUNCTION aimq200_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point
 
 
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " imaa001 = '", g_argv[01], "' AND "
   END IF
 
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aimq200_ui_dialog() 
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old   STRING
   DEFINE ls_js     STRING
   DEFINE la_param  RECORD
                    prog       STRING,
                    actionid   STRING,
                    background LIKE type_t.chr1,
                    param      DYNAMIC ARRAY OF STRING
                    END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE p_dialog   ui.DIALOG
   DEFINE l_sql      STRING
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   
   #end add-point
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET g_current_row_tot = 0
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
  
   #end add-point
 
   
   CALL aimq200_b_fill()
  
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_imaa_d.clear()
         CALL g_imaa2_d.clear()
 
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 0
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL aimq200_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落 name="ui_dialog.input"
         CONSTRUCT BY NAME g_wc ON imaa001,imaa004,imaa009,imaa003,imaa005,imaa010

            BEFORE CONSTRUCT       
                           
            ON ACTION controlp INFIELD imaa001
            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imaa001_10()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO imaa001      #顯示到畫面上
            
               NEXT FIELD imaa001  
            
            ON ACTION controlp INFIELD imaa009
            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_rtax001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO imaa009      #顯示到畫面上
            
               NEXT FIELD imaa009                         #返回原欄位
               
            ON ACTION controlp INFIELD imaa003
            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imck001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO imaa003      #顯示到畫面上
            
               NEXT FIELD imaa003 
               
            ON ACTION controlp INFIELD imaa005
            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imea001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO imaa005      #顯示到畫面上
            
               NEXT FIELD imaa005                         #返回原欄位    
            
            ON ACTION controlp INFIELD imaa010
            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = "210"                #應用分類
               CALL q_oocq002()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO imaa010      #顯示到畫面上
            
               NEXT FIELD imaa010                         #返回原欄位
               
         END CONSTRUCT   
         
         CONSTRUCT BY NAME g_col ON l_cha_col

            BEFORE CONSTRUCT
               LET g_qbe = NULL
               LET g_col = NULL
               
            ON ACTION controlp INFIELD l_cha_col
            
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = " dzeb001 LIKE 'ima%' "
               CALL q_dzeb002_10()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO l_cha_col      #顯示到畫面上
               LET g_col = g_qryparam.return1 
               NEXT FIELD l_cha_col 
             
            AFTER CONSTRUCT
               LET g_qbe = p_dialog.getFieldBuffer('l_cha_col')
            
            
         END CONSTRUCT   
         
         CONSTRUCT BY NAME g_dt ON l_cha_dt

            BEFORE CONSTRUCT
            
            AFTER FIELD l_cha_dt
               CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
               IF NOT cl_null(ls_result) THEN
                  IF NOT cl_chk_date_symbol(ls_result) THEN
                     LET ls_result = cl_add_date_extra_cond(ls_result)
                  END IF
               END IF
               CALL FGL_DIALOG_SETBUFFER(ls_result) 
          
            AFTER CONSTRUCT
#               LET g_col = p_dialog.getFieldBuffer('l_cha_col')
           
            
         END CONSTRUCT   
         #end add-point
 
         #add-point:construct段落 name="ui_dialog.construct"
         
         #end add-point
     
         DISPLAY ARRAY g_imaa_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL aimq200_detail_action_trans()
 
               LET g_master_idx = l_ac
               #為避免按上下筆時影響執行效能，所以做一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL aimq200_b_fill2()
               LET g_action_choice = lc_action_choice_old
 
               #add-point:input段before row name="input.body.before_row"
               
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION 相關動作 name="menu.detail_show.page1_sub."
                  
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_aimi010
                  LET g_action_choice="prog_aimi010"
                  IF cl_auth_chk_act("prog_aimi010") THEN
                     
                     #add-point:ON ACTION prog_aimi010 name="menu.detail_show.page1_sub.prog_aimi010"
               #應用 a41 樣板自動產生(Version:3)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aimi010'
               LET la_param.param[1] = g_imaa_d[g_detail_idx].imaa009

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 



                     #END add-point
                     
                     
                  END IF
 
 
 
               #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_aimi100
                  LET g_action_choice="prog_aimi100"
                  IF cl_auth_chk_act("prog_aimi100") THEN
                     
                     #add-point:ON ACTION prog_aimi100 name="menu.detail_show.page1_sub.prog_aimi100"
               #應用 a41 樣板自動產生(Version:3)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aimi100'
               LET la_param.param[1] = g_imaa_d[g_detail_idx].imaa003

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 



                     #END add-point
                     
                     
                  END IF
 
 
 
 
               END MENU
 
 
 
               #add-point:ON ACTION detail_qrystr name="menu.detail_show.page1.detail_qrystr"
               
               #END add-point
               
 
 
 
 
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            
            #end add-point
 
         END DISPLAY
 
         #add-point:第一頁籤程式段mark結束用 name="ui_dialog.page1.mark.end"
         
         #end add-point
 
         DISPLAY ARRAY g_imaa2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 2
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body2.before_row"
               
               #end add-point
 
            #自訂ACTION(detail_show,page_2)
            
 
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
 
         END DISPLAY
 
 
 
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
 
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL aimq200_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            
            #end add-point
            NEXT FIELD imaa001
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
            
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
         
            IF cl_null(g_wc2) THEN
               LET g_wc2 = " 1=1"
            END IF
 
 
 
            #add-point:ON ACTION accept name="ui_dialog.accept"
            
            #end add-point
 
            LET g_detail_idx = 1
            LET g_detail_idx2 = 1
            CALL aimq200_b_fill()
 
            IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = -100
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_imaa_d)
               LET g_export_id[1]   = "s_detail1"
               LET g_export_node[2] = base.typeInfo.create(g_imaa2_d)
               LET g_export_id[2]   = "s_detail2"
 
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
         ON ACTION datarefresh   # 重新整理
            CALL aimq200_b_fill()
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL aimq200_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL aimq200_b_fill()
 
         ON ACTION detail_next               #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL aimq200_b_fill()
 
         ON ACTION detail_last               #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL aimq200_b_fill()
 
         #應用 qs19 樣板自動產生(Version:3)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_imaa_d.getLength()
               LET g_imaa_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_imaa_d.getLength()
               LET g_imaa_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_imaa_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_imaa_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_imaa_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_imaa_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            
            #end add-point
 
 
 
 
 
         #應用 qs16 樣板自動產生(Version:3)
         ON ACTION filter
            LET g_action_choice="filter"
            CALL aimq200_filter()
            #add-point:ON ACTION filter name="menu.filter"
            
            #END add-point
            EXIT DIALOG
 
 
 
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               
               #END add-point
               
               
            END IF
 
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後 name="ui_dialog.qbeclear"
            
            #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         
         #end add-point
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aimq200_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
 
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
 
   CALL g_imaa_d.clear()
   CALL g_imaa2_d.clear()
 
 
   #add-point:陣列清空 name="b_fill.array_clear"
   
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs04 樣板自動產生(Version:9)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET ls_sql_rank = "SELECT  UNIQUE '',imaa001,'','',imaa004,imaa009,'',imaa003,'',imaa005,'',imaa010, 
       '','','','','','','','','','','','',''  ,DENSE_RANK() OVER( ORDER BY imaa_t.imaa001) AS RANK FROM imaa_t", 
 
 
 
                     "",
                     " WHERE imaaent= ? AND 1=1 AND ", ls_wc
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("imaa_t"),
                     " ORDER BY imaa_t.imaa001"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql  #總筆數
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '',imaa001,'','',imaa004,imaa009,'',imaa003,'',imaa005,'',imaa010,'','','','', 
       '','','','','','','','',''",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE aimq200_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aimq200_pb
 
   OPEN b_fill_curs USING g_enterprise
 
   FOREACH b_fill_curs INTO g_imaa_d[l_ac].sel,g_imaa_d[l_ac].imaa001,g_imaa_d[l_ac].imaa001_desc,g_imaa_d[l_ac].imaa001_desc_1, 
       g_imaa_d[l_ac].imaa004,g_imaa_d[l_ac].imaa009,g_imaa_d[l_ac].imaa009_desc,g_imaa_d[l_ac].imaa003, 
       g_imaa_d[l_ac].imaa003_desc,g_imaa_d[l_ac].imaa005,g_imaa_d[l_ac].imaa005_desc,g_imaa_d[l_ac].imaa010, 
       g_imaa_d[l_ac].imaa010_desc,g_imaa2_d[l_ac].l_seq,g_imaa2_d[l_ac].l_col,g_imaa2_d[l_ac].l_col_desc, 
       g_imaa2_d[l_ac].l_cha_b,g_imaa2_d[l_ac].l_cha_a,g_imaa2_d[l_ac].l_logc005,g_imaa2_d[l_ac].l_logc005_desc, 
       g_imaa2_d[l_ac].l_logc002,g_imaa2_d[l_ac].l_logc002_desc,g_imaa2_d[l_ac].l_logc001,g_imaa2_d[l_ac].l_logc001_desc, 
       g_imaa2_d[l_ac].imaamoddt
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      
      #end add-point
 
      CALL aimq200_detail_show("'1'")
 
      CALL aimq200_imaa_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
 
 
 
   #應用 qs05 樣板自動產生(Version:3)
   #+ b_fill段其他table資料取得(包含sql組成及資料填充)
 
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   
   #end add-point
 
   CALL g_imaa_d.deleteElement(g_imaa_d.getLength())
   CALL g_imaa2_d.deleteElement(g_imaa2_d.getLength())
 
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = g_imaa_d.getLength()
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #應用 qs06 樣板自動產生(Version:3)
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE aimq200_pb
 
 
 
 
 
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL aimq200_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL aimq200_detail_action_trans()
 
   LET l_ac = 1
   IF g_imaa_d.getLength() > 0 THEN
      CALL aimq200_b_fill2()
   END IF
 
      CALL aimq200_filter_show('imaa001','b_imaa001')
   CALL aimq200_filter_show('imaa004','b_imaa004')
   CALL aimq200_filter_show('imaa009','b_imaa009')
   CALL aimq200_filter_show('imaa003','b_imaa003')
   CALL aimq200_filter_show('imaa005','b_imaa005')
   CALL aimq200_filter_show('imaa010','b_imaa010')
 
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aimq200_b_fill2()
   #add-point:b_fill2段define-客製 name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   DEFINE l_sql           STRING
   #end add-point
 
   #add-point:FUNCTION前置處理 name="b_fill2.before_function"
   
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #應用 qs07 樣板自動產生(Version:6)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
 
   #add-point:陣列清空 name="b_fill2.array_clear"
   CALL g_imaa2_d.clear()
   IF NOT cl_null(g_dt) THEN
      CALL cl_replace_str(g_dt,'l_cha_dt','logc003') RETURNING g_dt
   ELSE 
      LET g_dt = " 1=1 "
   END IF
   IF NOT cl_null(g_col) THEN
      CALL cl_replace_str(g_col,'l_cha_col','l_column') RETURNING g_col
   ELSE 
      LET g_col = " 1=1 "
   END IF
#   IF cl_null(g_wc_tt) OR g_wc <> g_wc_tt THEN   #查询条件有变
      CALL aimq200_change_data()
#      LET g_wc_tt = g_wc
#   END IF
   #end add-point
 
 
 
 
   #add-point:陣列長度調整 name="b_fill2.array_deleteElement"
   #4.抓取temp table資料，顯示到單身
   #  4.1 序號=序號+1(非temp table的seq)
   #  4.2 QBE的變更欄位有值時，只顯示QBE的變更欄位的資料
   LET l_sql = " SELECT DISTINCT l_seq,l_column,NULL,l_value,l_value_t,logc005,NULL,logc002,NULL,logc001,NULL,logc003 ",
               "   FROM aimq200_logc_tmp ",
               "  WHERE logcent = ",g_enterprise,
               "    AND l_type = '1' ",
               "    AND l_column NOT LIKE '%ent' AND l_column NOT LIKE '%site' AND l_column NOT LIKE '%ownid'  AND l_column NOT LIKE '%owndp' ",
               "    AND l_column NOT LIKE '%crtid'  AND l_column NOT LIKE '%crtdp'  AND l_column NOT LIKE '%crtdt'  AND l_column NOT LIKE '%modid' ",
               "    AND l_column NOT LIKE '%moddt'  AND l_column NOT LIKE '%cnfdt'  AND l_column NOT LIKE '%cnfid' AND l_column NOT LIKE '%stus'",
               "    AND l_column NOT LIKE '%desc%' AND l_column LIKE 'ima%' "  ,             
               "    AND ",g_col,
               "  ORDER BY l_seq,logc003,l_column,l_value "
   LET l_ac = 1              
   PREPARE aimq200_b_fill2_pre FROM l_sql
   DECLARE aimq200_b_fill2_curs CURSOR FOR aimq200_b_fill2_pre
   FOREACH aimq200_b_fill2_curs INTO g_imaa2_d[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      CALL aimq200_detail_show("'2'")
      LET g_imaa2_d[l_ac].l_seq = l_ac
      LET l_ac = l_ac + 1
   END FOREACH
   CALL g_imaa2_d.deleteElement(g_imaa2_d.getLength())       
   #end add-point
 
 
   DISPLAY li_ac TO FORMONLY.cnt
   LET g_detail_idx2 = 1
   DISPLAY g_detail_idx2 TO FORMONLY.idx
 
 
 
 
 
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION aimq200_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      #應用 a12 樣板自動產生(Version:4)
 
 
 
 
      #add-point:show段單身reference name="detail_show.body.reference"

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imaa_d[l_ac].imaa001
            LET ls_sql = "SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'"
            LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
            CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
            LET g_imaa_d[l_ac].imaa001_desc = '', g_rtn_fields[1] , ''
            LET g_imaa_d[l_ac].imaa001_desc_1 = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_imaa_d[l_ac].imaa001_desc
            DISPLAY BY NAME g_imaa_d[l_ac].imaa001_desc_1

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imaa_d[l_ac].imaa009
            LET ls_sql = "SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'"
            LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
            CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
            LET g_imaa_d[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imaa_d[l_ac].imaa009_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imaa_d[l_ac].imaa003
            LET ls_sql = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='200' AND oocql002 = ? AND oocql003='"||g_dlang||"'"
            LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
            CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
            LET g_imaa_d[l_ac].imaa003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imaa_d[l_ac].imaa003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imaa_d[l_ac].imaa005
            LET ls_sql = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='211' AND oocql002=? AND oocql003='"||g_dlang||"'"
            LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
            CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
            LET g_imaa_d[l_ac].imaa005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imaa_d[l_ac].imaa005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imaa_d[l_ac].imaa010
            LET ls_sql = "SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='210' AND oocql002=? AND oocql003='"||g_dlang||"'"
            LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
            CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
            LET g_imaa_d[l_ac].imaa010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imaa_d[l_ac].imaa010_desc

      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'2'",1) > 0 THEN
      #帶出公用欄位reference值page2
      
 
      #add-point:show段單身reference name="detail_show.body2.reference"
      #营运据点
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_imaa2_d[l_ac].l_logc005
      LET ls_sql = "SELECT ooefl004 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'"
      LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
      CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
      LET g_imaa2_d[l_ac].l_logc005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_imaa2_d[l_ac].l_logc005_desc
      #字段说明
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_imaa2_d[l_ac].l_col
      LET ls_sql = "SELECT dzebl003 FROM dzebl_t WHERE dzebl001 = ? AND dzebl002='"||g_dlang||"'"
      LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
      CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
      LET g_imaa2_d[l_ac].l_col_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_imaa2_d[l_ac].l_col_desc
      #变更作业
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_imaa2_d[l_ac].l_logc002
      LET ls_sql = "SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_dlang||"'"
      LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
      CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
      LET g_imaa2_d[l_ac].l_logc002_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_imaa2_d[l_ac].l_logc002_desc
      #变更人员
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_imaa2_d[l_ac].l_logc001
      LET ls_sql = "SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? "
      LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
      CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
      LET g_imaa2_d[l_ac].l_logc001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_imaa2_d[l_ac].l_logc001_desc
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.filter" >}
#應用 qs13 樣板自動產生(Version:8)
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION aimq200_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter.before_function"
   
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #應用 qs08 樣板自動產生(Version:5)
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON imaa001,imaa004,imaa009,imaa003,imaa005,imaa010
                          FROM s_detail1[1].b_imaa001,s_detail1[1].b_imaa004,s_detail1[1].b_imaa009, 
                              s_detail1[1].b_imaa003,s_detail1[1].b_imaa005,s_detail1[1].b_imaa010
 
         BEFORE CONSTRUCT
                     DISPLAY aimq200_filter_parser('imaa001') TO s_detail1[1].b_imaa001
            DISPLAY aimq200_filter_parser('imaa004') TO s_detail1[1].b_imaa004
            DISPLAY aimq200_filter_parser('imaa009') TO s_detail1[1].b_imaa009
            DISPLAY aimq200_filter_parser('imaa003') TO s_detail1[1].b_imaa003
            DISPLAY aimq200_filter_parser('imaa005') TO s_detail1[1].b_imaa005
            DISPLAY aimq200_filter_parser('imaa010') TO s_detail1[1].b_imaa010
 
 
         #單身公用欄位開窗相關處理
         
 
         #單身一般欄位開窗相關處理
                  #----<<sel>>----
         #----<<b_imaa001>>----
         #Ctrlp:construct.c.page1.b_imaa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_imaa001
            #add-point:ON ACTION controlp INFIELD b_imaa001 name="construct.c.filter.page1.b_imaa001"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imaa001  #顯示到畫面上
            NEXT FIELD b_imaa001                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_imaa001_desc>>----
         #----<<b_imaa001_desc_1>>----
         #----<<b_imaa004>>----
         #Ctrlp:construct.c.filter.page1.b_imaa004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_imaa004
            #add-point:ON ACTION controlp INFIELD b_imaa004 name="construct.c.filter.page1.b_imaa004"
            
            #END add-point
 
 
         #----<<b_imaa009>>----
         #Ctrlp:construct.c.page1.b_imaa009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_imaa009
            #add-point:ON ACTION controlp INFIELD b_imaa009 name="construct.c.filter.page1.b_imaa009"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imaa009  #顯示到畫面上
            NEXT FIELD b_imaa009                     #返回原欄位
    



            #END add-point
 
 
         #----<<url_b_imaa009>>----
         #----<<b_imaa009_desc>>----
         #----<<b_imaa003>>----
         #Ctrlp:construct.c.page1.b_imaa003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_imaa003
            #add-point:ON ACTION controlp INFIELD b_imaa003 name="construct.c.filter.page1.b_imaa003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imck001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imaa003  #顯示到畫面上
            NEXT FIELD b_imaa003                     #返回原欄位
    



            #END add-point
 
 
         #----<<url_b_imaa003>>----
         #----<<b_imaa003_desc>>----
         #----<<b_imaa005>>----
         #Ctrlp:construct.c.page1.b_imaa005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_imaa005
            #add-point:ON ACTION controlp INFIELD b_imaa005 name="construct.c.filter.page1.b_imaa005"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imea001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imaa005  #顯示到畫面上
            NEXT FIELD b_imaa005                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_imaa005_desc>>----
         #----<<b_imaa010>>----
         #Ctrlp:construct.c.page1.b_imaa010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_imaa010
            #add-point:ON ACTION controlp INFIELD b_imaa010 name="construct.c.filter.page1.b_imaa010"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_imaa010  #顯示到畫面上
            NEXT FIELD b_imaa010                     #返回原欄位
    



            #END add-point
 
 
         #----<<b_imaa010_desc>>----
         #----<<l_seq>>----
         #----<<l_col>>----
         #----<<l_col_desc>>----
         #----<<l_cha_b>>----
         #----<<l_cha_a>>----
         #----<<l_logc005>>----
         #----<<l_logc005_desc>>----
         #----<<l_logc002>>----
         #----<<l_logc002_desc>>----
         #----<<l_logc001>>----
         #----<<l_logc001_desc>>----
         #----<<imaamoddt>>----
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
 
 
   
 
   #add-point:離開DIALOG後相關處理 name="filter.after_dialog"
   
   #end add-point
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL aimq200_filter_show('imaa001','b_imaa001')
   CALL aimq200_filter_show('imaa004','b_imaa004')
   CALL aimq200_filter_show('imaa009','b_imaa009')
   CALL aimq200_filter_show('imaa003','b_imaa003')
   CALL aimq200_filter_show('imaa005','b_imaa005')
   CALL aimq200_filter_show('imaa010','b_imaa010')
 
 
   CALL aimq200_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.filter_parser" >}
#應用 qs14 樣板自動產生(Version:6)
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION aimq200_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   
   #end add-point
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
 
{</section>}
 
{<section id="aimq200.filter_show" >}
#應用 qs15 樣板自動產生(Version:6)
#+ filter標題欄位顯示搜尋條件
PRIVATE FUNCTION aimq200_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aimq200_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
 
{</section>}
 
{<section id="aimq200.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION aimq200_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   
   #end add-point
 
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION aimq200_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="detail_index_setting.define_customerization"
   
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_imaa_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_imaa_d.getLength() AND g_imaa_d.getLength() > 0
            LET g_detail_idx = g_imaa_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_imaa_d.getLength() THEN
               LET g_detail_idx = g_imaa_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="aimq200.mask_functions" >}
 &include "erp/aim/aimq200_mask.4gl"
 
{</section>}
 
{<section id="aimq200.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 获取变更数据
################################################################################
PRIVATE FUNCTION aimq200_change_data()
DEFINE l_sql      STRING
DEFINE l_upd_sql  STRING
DEFINE l_date_sql STRING   #用来获取变更时间
DEFINE l_table    STRING
DEFINE l_tmp      STRING
DEFINE l_length   LIKE type_t.num10
DEFINE l_start    LIKE type_t.num10
DEFINE l_end      LIKE type_t.num10
DEFINE l_logc RECORD  #修改歷程記錄表
   logc001 LIKE logc_t.logc001, #员工编号
   logc002 LIKE logc_t.logc002, #程序编号
   logc003 DATETIME YEAR TO SECOND, #事件时间
   logc004 LIKE logc_t.logc004, #旧值
   logc005 LIKE logc_t.logc005, #事件营运据点
   logc006 LIKE logc_t.logc006, #新值
   logcent LIKE logc_t.logcent, #企业编号
   logc007 LIKE logc_t.logc007, #行为编号
   logc008 LIKE logc_t.logc008  #key值旧值
END RECORD
DEFINE l_ac       LIKE type_t.num10 #记录序号
DEFINE l_cnt      LIKE type_t.num10
DEFINE l_column   LIKE type_t.chr100   #变更前栏位
DEFINE l_column_t LIKE type_t.chr100   #变更后栏位
DEFINE l_value    LIKE type_t.chr500   #变更前值
DEFINE l_value_t  LIKE type_t.chr500   #变更后值
DEFINE tok                 base.StringTokenizer

   #1.建立一temp table，記錄seq、變更欄位、變更前資料、變更後資料、變更據點、變更作業、變更人員、變更日期
   DELETE FROM aimq200_logc_tmp
   #解析过滤条件     
   #2.根據上單身的料件，抓取logc_t的資料
   #  過濾條件
   #  logcent = g_enterprise
   #  logc006 LIKE '%'||'"ima_001":"'||上單身指定的料件||'"%' <--- 查詢含有ima_001的字串 ex."imaa001":"YS01"、"imaf001":"YS01"
   #
   #  SELECT ... FROM logc_t
   #   WHERE logcent = g_enterprise
   #     AND logc006 LIKE '%'||'"ima_001":"'||上單身指定的料件||'"%'
   #     AND logc003 = QBE的變更日期
   #logc006 例子：{"imaa001":"5566NO5"}
   LET l_sql = " SELECT * FROM logc_t ",
               "  WHERE logcent = ",g_enterprise,
               "    AND logc006 LIKE '%\"ima_001\":\"",g_imaa_d[g_detail_idx].imaa001 CLIPPED,"\"%' ",   #用[\"]进行转义
               "    AND ",g_dt,
               "  ORDER BY logc003"
   DECLARE aimq200_logc_cur CURSOR FROM l_sql
   #3.讀取每筆logc_t資料
#  3.1 seq = seq+1
#  3.2 變更據點 = logc005
#  3.3 變更作業 = logc002
#  3.3 變更人員 = logc001
#  3.4 變更日期 = logc003 (若logc003只記錄到日期，那該欄位改成顯示ima_moddt)
#  3.5 拆解logc004的字串，記錄到變更欄位、變更前資料 (異動資訊的共用欄位不用記錄)
#      ex.{"imaa001"="YS01","imaa006":"KPCS"}   (這只是舉例)
#         拆解成兩筆新增到temp table
#         第一筆：變更欄位 = imaa001、變更前資料 = YS01
#         第二筆：變更欄位 = imaa006、變更前資料 = KPCS
#  3.2 拆解logc006的字串，記錄到變更欄位、變更後資料 (異動資訊的共用欄位不用記錄)
#      ex.{"imaa001"="YS01","imaa006":"PCS"}   (這只是舉例)
#         拆解成兩筆做下面判斷
#         第一筆：變更欄位 = imaa001、變更前資料 = YS01
#         第二筆：變更欄位 = imaa006、變更前資料 = PCS
#      3.2.1 檢查同seq、同欄位的變更前資料是否等於變更後資料
#      3.2.2 相同時，刪除該筆temp table資料
#      3.2.3 不相同時，更新該筆temp table變更後資料
   LET l_ac = 1
   FOREACH aimq200_logc_cur INTO l_logc.*
#3.讀取每筆logc_t資料
#  3.1 seq = seq+1
#  3.2 變更據點 = logc005
#  3.3 變更作業 = logc002
#  3.3 變更人員 = logc001
#  3.4 變更日期 = logc003 (若logc003只記錄到日期，那該欄位改成顯示ima_moddt)
#  3.5 拆解logc004的字串，記錄到變更欄位、變更前資料 (異動資訊的共用欄位不用記錄)
#      ex.{"imaa001"="YS01","imaa006":"KPCS"}   (這只是舉例)
#         拆解成兩筆新增到temp table
#         第一筆：變更欄位 = imaa001、變更前資料 = YS01
#         第二筆：變更欄位 = imaa006、變更前資料 = KPCS
#  3.2 拆解logc006的字串，記錄到變更欄位、變更後資料 (異動資訊的共用欄位不用記錄)
#      ex.{"imaa001"="YS01","imaa006":"PCS"}   (這只是舉例)
#         拆解成兩筆做下面判斷
#         第一筆：變更欄位 = imaa001、變更前資料 = YS01
#         第二筆：變更欄位 = imaa006、變更前資料 = PCS
#      3.2.1 檢查同seq、同欄位的變更前資料是否等於變更後資料
#      3.2.2 相同時，刪除該筆temp table資料
#      3.2.3 不相同時，更新該筆temp table變更後資料---->b_fill2
      IF NOT cl_null(l_logc.logc004) THEN
         #{\"imaa001\":\"160815\",\"imaa009\":\"6611001\",\"imaa009_desc\":\"服装\",\"imaa003\":\"02\",\"imaa003_desc\":\"半成品\",\"imaa004\":\"A\",\"imaa006\":\"M\",\"imaa006_desc\":\"中杯\",\"imaa010\":\"1\",\"imaa010_desc\":\"初期構思\",\"imaastus\":\"Y\",\"imaaownid\":\"02040\",\"imaaownid_desc\":\"林冠君\",\"imaaowndp\":\"DC0340\",\"imaaowndp_desc\":\"台中開發部\",\"imaacrtid\":\"02040\",\"imaacrtid_desc\":\"林冠君\",\"imaacrtdp\":\"DC0340\",\"imaacrtdp_desc\":\"台中開發部\",\"imaacrtdt\":\"2016-08-15 10:57:55\",\"imaamodid\":\"02040\",\"imaamodid_desc\":\"林冠君\",\"imaamoddt\":\"2016-08-15 11:16:06\",\"imaacnfid\":\"02040\",\"imaacnfid_desc\":\"林冠君\",\"imaacnfdt\":\"2016-08-15 10:58:09\",\"imaa011\":\"0\",\"imaa012\":\"Y\",\"imaa142\":\"DSCTC\",\"imaa142_desc\":\"鼎新台中國泰\",\"imaa108\":\"1\",\"imaa100\":\"1\",\"imaa109\":\"1\",\"imaa018\":\"KG\",\"imaa018_desc\":\"公斤\",\"imaa019\":0,\"imaa020\":0,\"imaa021\":0,\"imaa022\":\"DAM\",\"imaa022_desc\":\"公丈\",\"imaa023\":0,\"imaa025\":0,\"imaa027\":\"N\",\"imaa028\":0,\"imaa031\":0,\"imaa034\":\"2\",\"imaa036\":\"N\",\"imaa037\":\"N\",\"imaa043\":\"N\",\"imaa038\":\"N\",\"imaa044\":\"3\",\"imac002\":\"N\",\"imac003\":99}
         LET l_tmp = l_logc.logc004
         LET l_length = l_tmp.getLength()
         LET l_tmp = l_tmp.subString(2,l_length)      #去除外面的{，最后的}作为判断依据
         #若有多个组在一起 {}{}，去除{}变成,
         LET l_tmp = cl_replace_str(l_tmp,'}{',',')
         LET l_length = l_tmp.getLength()
         LET l_end = 1
         WHILE l_end < l_length 
            LET l_start = l_tmp.getIndexOf('\"',l_end)+1
            IF l_start < 0 OR l_start = 0  THEN 
               EXIT WHILE
            END IF
            LET l_end = l_tmp.getIndexOf('\":',l_start)-1
            IF l_end < 0 OR l_end = 0  THEN 
               EXIT WHILE
            END IF
            LET l_column = l_tmp.subString(l_start,l_end)
            IF l_tmp.getIndexOf('\"',l_end+2)+1 = l_tmp.getIndexOf(':\"',l_end+2)+2 THEN
               LET l_start = l_tmp.getIndexOf('\"',l_end+2)+1     #需要考虑数值或chr的情况chr,资料呈现{\"imaa001\":\"0000\"}
            ELSE
               LET l_start = l_tmp.getIndexOf(':',l_end+2)+1     #需要考虑数值或chr的情况num,资料呈现{\"imaaent\":99}
            END IF
            IF l_start < 0 OR l_start = 0  THEN 
               EXIT WHILE
            END IF
            IF l_tmp.getIndexOf(',\"',l_start)-2 = l_tmp.getIndexOf('\",\"',l_start)-1 THEN
               LET l_end = l_tmp.getIndexOf(',\"',l_start)-2     #需要考虑数值或chr的情况chr,资料呈现{\"imaa001\":\"0000\",\"imaa002\":\"abc\"}
            ELSE
               LET l_end = l_tmp.getIndexOf(',\"',l_start)-1     #需要考虑数值或chr的情况num,资料呈现{\"imaaent\":99,\"imaa001\":\"0000\"}
            END IF
            IF l_end < 0 OR l_end = 0 THEN 
               LET l_end = l_tmp.getIndexOf('\"}',l_start)-1
               IF l_end < 0 OR l_end = 0 THEN 
                  LET l_end = l_tmp.getIndexOf('}',l_start)-1
                  IF l_end < 0 OR l_end = 0 THEN 
                     EXIT WHILE
                  END IF
               END IF
            END IF
            LET l_value = l_tmp.subString(l_start,l_end)
            LET l_end = l_end + 2
            INSERT INTO aimq200_logc_tmp VALUES(l_ac,'1',l_column,l_value,NULL,l_logc.logc005,l_logc.logc002,l_logc.logc001,l_logc.logc003,l_logc.logcent)
         END WHILE
      END IF
      #变更前资料
      IF NOT cl_null(l_logc.logc006) THEN
         LET l_tmp = l_logc.logc006
         LET l_length = l_tmp.getLength()
         LET l_tmp = l_tmp.subString(2,l_length)      #去除外面的{，最后的}作为判断依据
         #若有多个组在一起 {}{}，去除{}变成,
         LET l_tmp = cl_replace_str(l_tmp,'}{',',')
         LET l_length = l_tmp.getLength()
         LET l_end = 1
         WHILE l_end < l_length 
            LET l_start = l_tmp.getIndexOf('\"',l_end)+1
            IF l_start < 0 OR l_start = 0  THEN 
               EXIT WHILE
            END IF
            LET l_end = l_tmp.getIndexOf('\":',l_start)-1
            IF l_end < 0 OR l_end = 0  THEN 
               EXIT WHILE
            END IF
            LET l_column_t = l_tmp.subString(l_start,l_end)
            IF l_tmp.getIndexOf('\"',l_end+2)+1 = l_tmp.getIndexOf(':\"',l_end+2)+2 THEN
               LET l_start = l_tmp.getIndexOf('\"',l_end+2)+1     #需要考虑数值或chr的情况chr,资料呈现{\"imaa001\":\"0000\"}
            ELSE
               LET l_start = l_tmp.getIndexOf(':',l_end+2)+1      #需要考虑数值或chr的情况num,资料呈现{\"imaaent\":99}
            END IF
            IF l_start < 0 OR l_start = 0  THEN 
               EXIT WHILE
            END IF
            IF l_tmp.getIndexOf(',\"',l_start)-2 = l_tmp.getIndexOf('\",\"',l_start)-1 THEN
               LET l_end = l_tmp.getIndexOf(',\"',l_start)-2     #需要考虑数值或chr的情况
            ELSE
               LET l_end = l_tmp.getIndexOf(',\"',l_start)-1     #需要考虑数值或chr的情况
            END IF
            IF l_end < 0 OR l_end = 0 THEN 
               LET l_end = l_tmp.getIndexOf('\"}',l_start)-1
               IF l_end < 0 OR l_end = 0 THEN 
                  LET l_end = l_tmp.getIndexOf('}',l_start)-1
                  IF l_end < 0 OR l_end = 0 THEN 
                     EXIT WHILE
                  END IF
               END IF
            END IF
            LET l_value_t = l_tmp.subString(l_start,l_end)
            LET l_end = l_end + 2
            INSERT INTO aimq200_logc_tmp VALUES(l_ac,'2',l_column_t,NULL,l_value_t,l_logc.logc005,l_logc.logc002,l_logc.logc001,l_logc.logc003,l_logc.logcent)
         END WHILE
      END IF
      LET l_upd_sql = " UPDATE aimq200_logc_tmp ",
                      " SET l_type = '1' ",
                      " WHERE l_seq = ",l_ac ,
                      " AND l_type = '2' ",
                      " AND l_column NOT IN (SELECT l_column FROM aimq200_logc_tmp WHERE l_seq = ",l_ac ," AND l_type = '1')"
      EXECUTE IMMEDIATE l_upd_sql  
      LET l_upd_sql = " MERGE INTO aimq200_logc_tmp A ", #区分变更前后有区别的资料
                      " USING (SELECT * FROM aimq200_logc_tmp WHERE l_type = '2') B ",
                      " ON ( A.l_seq = B.l_seq AND A.l_column = B.l_column AND NVL(A.l_value,'*') = NVL(B.l_value_t,'*') AND A.l_seq = ",l_ac," )",
                      " WHEN MATCHED THEN ",
                      "    UPDATE SET A.l_type = '3' "   #相同，待删,l_type设为‘3’，与变更后资料以示区别
      EXECUTE IMMEDIATE l_upd_sql
      LET l_upd_sql = " MERGE INTO aimq200_logc_tmp A ", #更新
                      " USING (SELECT * FROM aimq200_logc_tmp WHERE l_type = '2') B ",
                      " ON ( A.l_seq = B.l_seq AND A.l_column = B.l_column AND A.l_seq = ",l_ac," AND A.l_type = '1' )",
                      " WHEN MATCHED THEN ",
                      "    UPDATE SET A.l_value_t = B.l_value_t "  #区分出来前后有变化的资料，更新前后笔资料。
#                      " WHEN NOT MATCHED THEN ",
#                      "    INSERT VALUES (",l_ac,",'1',B.l_column,NULL,B.l_value_t,B.logc005,B.logc002,B.logc001,B.logc003,B.logcent) "
      
      EXECUTE IMMEDIATE l_upd_sql
      DELETE FROM aimq200_logc_tmp WHERE l_type = '2' OR l_type = '3'   #删去不符合的资料，以及单纯变更后的资料
      LET l_ac = l_ac + 1
   END FOREACH

END FUNCTION

################################################################################
# Descriptions...: 建立变更资料的暂存档
# Memo...........:
################################################################################
PRIVATE FUNCTION aimq200_create_tmp()
#建立一temp table，記錄seq、變更欄位、變更前資料、變更後資料、變更據點、變更作業、變更人員、變更日期
DROP TABLE aimq200_logc_tmp
CREATE TEMP TABLE aimq200_logc_tmp(
l_seq       LIKE type_t.num10,
l_type      LIKE type_t.chr2,
l_column    LIKE type_t.chr100,     #logc004
l_value     LIKE type_t.chr500,
l_value_t   LIKE type_t.chr500,
logc005     LIKE logc_t.logc005,
logc002     LIKE logc_t.logc002,
logc001     LIKE logc_t.logc001,
logc003     LIKE imaa_t.imaamoddt,
logcent     LIKE logc_t.logcent
)
END FUNCTION

 
{</section>}
 
