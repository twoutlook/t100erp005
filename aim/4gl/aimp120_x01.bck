#該程式未解開Section, 採用最新樣板產出!
{<section id="aimp120_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2015-01-21 14:05:05), PR版次:0001(2015-01-21 15:23:46)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000052
#+ Filename...: aimp120_x01
#+ Description: 料件銷售平均單價明細表
#+ Creator....: 02295(2015-01-13 16:15:21)
#+ Modifier...: 02295 -SD/PR- 02295
 
{</section>}
 
{<section id="aimp120_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       bdate LIKE type_t.dat,         #bdate 
       edate LIKE type_t.dat          #edate
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="aimp120_x01.main" readonly="Y" >}
PUBLIC FUNCTION aimp120_x01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.dat         #tm.bdate  bdate 
DEFINE  p_arg3 LIKE type_t.dat         #tm.edate  edate
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.bdate = p_arg2
   LET tm.edate = p_arg3
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aimp120_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aimp120_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aimp120_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aimp120_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aimp120_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aimp120_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="aimp120_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION aimp120_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "imaa001.imaa_t.imaa001,imaal003.imaal_t.imaal003,imaal004.imaal_t.imaal004,imaa006.imaa_t.imaa006,l_imai222.imai_t.imai222,l_xmdl018.xmdl_t.xmdl008,l_xmdl022.xmdl_t.xmdl022" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="aimp120_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION aimp120_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="aimp120_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aimp120_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
 
   #end add-point
   LET g_select = " SELECT imaa001,imaal003,imaal004,imaa006,NULL,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_from = " FROM imaa_t LEFT OUTER JOIN imaal_t ON imaaent=imaalent AND imaa001=imaal001 AND imaal002='",g_dlang,"'"
#   #end add-point
#    LET g_from = " FROM imaa_t,imaal_t"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
   LET g_where = " WHERE imaaent = '",g_enterprise,"' AND ",tm.wc CLIPPED
#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("imaa_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE aimp120_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aimp120_x01_curs CURSOR FOR aimp120_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="aimp120_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION aimp120_x01_ins_data()
DEFINE sr RECORD 
   imaa001 LIKE imaa_t.imaa001, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   imaa006 LIKE imaa_t.imaa006, 
   l_imai222 LIKE imai_t.imai222, 
   l_xmdl018 LIKE xmdl_t.xmdl008, 
   l_xmdl022 LIKE xmdl_t.xmdl022
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
DEFINE l_sql STRING
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    #-------------------------------------計價單位，計價數量，單價 ，單頭匯率，採購單位，採購數量
    LET l_sql = "SELECT xmdldocno,xmdlseq,xmdl021,xmdl022,xmdl024,xmdk017,xmdl017,xmdl018 ",
                 "  FROM xmdl_t,xmdk_t",
                 " WHERE xmdlent = xmdkent AND xmdldocno = xmdkdocno ",
                 "   AND xmdkent = '",g_enterprise,"'",
                 "   AND xmdksite = '",g_site,"'",
                 "   AND xmdl008 = ? ",
                 "   AND xmdkdocdt BETWEEN '",tm.bdate,"' AND '",tm.edate,"'",
                 "   AND xmdkstus = 'Y' "
    PREPARE aimp120_x01_xmd_pr FROM l_sql
    DECLARE aimp120_x01_xmd_cs CURSOR FOR aimp120_x01_xmd_pr
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aimp120_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       CALL aimp120_x01_g(sr.imaa001,sr.imaa006) RETURNING sr.l_xmdl018,sr.l_xmdl022
       IF sr.l_xmdl018 <> 0 THEN 
          LET sr.l_imai222 = sr.l_xmdl022/sr.l_xmdl018
       ELSE
          LET sr.l_imai222 = 0      
       END IF       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.imaa001,sr.imaal003,sr.imaal004,sr.imaa006,sr.l_imai222,sr.l_xmdl018,sr.l_xmdl022
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aimp120_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="aimp120_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION aimp120_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="aimp120_x01.other_function" readonly="Y" >}

PRIVATE FUNCTION aimp120_x01_g(p_imaa001,p_imaa006)
DEFINE p_imaa001  LIKE imaa_t.imaa001,
       p_imaa006  LIKE imaa_t.imaa006
DEFINE l_xmdl   RECORD
          xmdldocno LIKE xmdl_t.xmdldocno,
          xmdlseq LIKE xmdl_t.xmdlseq,
          xmdl021 LIKE xmdl_t.xmdl021,
          xmdl022 LIKE xmdl_t.xmdl022,
          xmdl024 LIKE xmdl_t.xmdl024,
          xmdk017 LIKE xmdk_t.xmdk017,
          xmdl017 LIKE xmdl_t.xmdl017,
          xmdl018 LIKE xmdl_t.xmdl018
       END RECORD 
DEFINE l_ant    LIKE type_t.num20_6
DEFINE l_qty    LIKE type_t.num20_6    
DEFINE l_rate   LIKE inaj_t.inaj014 

   LET l_ant = 0 
   LET l_qty = 0
   FOREACH aimp120_x01_xmd_cs USING p_imaa001 INTO l_xmdl.*
   
      IF cl_null(l_xmdl.xmdk017) THEN LET l_xmdl.xmdk017 = 1 END IF
      #計價數量
      CALL s_aimi190_get_convert(p_imaa001,l_xmdl.xmdl021,p_imaa006) RETURNING g_success,l_rate
      IF g_success THEN 
         LET l_xmdl.xmdl022 = l_xmdl.xmdl022 * l_rate
      END IF
      LET l_ant = l_ant +l_xmdl.xmdl022 * l_xmdl.xmdl024 * l_xmdl.xmdk017
      
      #銷售數量
      CALL s_aimi190_get_convert(p_imaa001,l_xmdl.xmdl017,p_imaa006) RETURNING g_success,l_rate
      IF g_success THEN 
         LET l_xmdl.xmdl018 = l_xmdl.xmdl018 * l_rate
      END IF         
      LET l_qty = l_qty +l_xmdl.xmdl018 
   END FOREACH
   RETURN l_qty,l_ant   
END FUNCTION

 
{</section>}
 
