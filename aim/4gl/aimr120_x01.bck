#該程式未解開Section, 採用最新樣板產出!
{<section id="aimr120_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:2(2016-07-01 11:54:57), PR版次:0002(2016-07-01 14:35:34)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000072
#+ Filename...: aimr120_x01
#+ Description: 企業料件資料明細表
#+ Creator....: 05423(2014-10-10 10:54:19)
#+ Modifier...: 02295 -SD/PR- 02295
 
{</section>}
 
{<section id="aimr120_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明
#160629-00002#3  2016/07/01 By xianghui 效能优化
#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_sql_ins  STRING   #160629-00002#3
#end add-point
 
{</section>}
 
{<section id="aimr120_x01.main" readonly="Y" >}
PUBLIC FUNCTION aimr120_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aimr120_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aimr120_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aimr120_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aimr120_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aimr120_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aimr120_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="aimr120_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION aimr120_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "imaa001.imaa_t.imaa001,imaal003.imaal_t.imaal003,imaal004.imaal_t.imaal004,imaa002.imaa_t.imaa002,imaa009.imaa_t.imaa009,l_imaa009_desc.type_t.chr500,imaa003.imaa_t.imaa003,l_imaa003_desc.type_t.chr500,imaa004.imaa_t.imaa004,l_imaa004_desc.type_t.chr500,imaa006.imaa_t.imaa006,l_imaa006_desc.type_t.chr500,imaa010.imaa_t.imaa010,l_imaa010_desc.type_t.chr500,imaa011.imaa_t.imaa011,l_imaa011_desc.type_t.chr500,imaa013.imaa_t.imaa013,imaa035.imaa_t.imaa035" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="aimr120_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION aimr120_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         LET g_sql_ins = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED  #160629-00002#3
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="aimr120_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aimr120_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
DEFINE g_order       STRING
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   RETURN   #160629-00002#3
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   #160629-00002#3---mark---s
   #LET g_select = " SELECT DISTINCT imaa001,imaal003,imaal004,imaa002,imaa009,rtaxl003,imaa003,imckl003,imaa004,NULL, 
   #               imaa006,oocal003,imaa010,oocql004,imaa011,NULL,imaa013,imaa035"
   #160629-00002#3---mark---e               
#   #end add-point
#   LET g_select = " SELECT imaa001,imaal003,imaal004,imaa002,imaa009,NULL,imaa003,NULL,imaa004,NULL, 
#       imaa006,NULL,imaa010,NULL,imaa011,NULL,imaa013,imaa035"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   #160629-00002#3---mark---s 
   #LET g_from = " FROM imaa_t LEFT OUTER JOIN imaal_t ON imaa001 = imaal001 AND imaaent = imaalent AND imaal002 = '",g_dlang,"' ",
   #             "             LEFT OUTER JOIN imaf_t ON imaf001 = imaa001 AND imafent = imaaent AND imafsite = '",g_site,"' ",
   #             "             LEFT OUTER JOIN rtaxl_t ON imaa009 = rtaxl001 AND imaaent = rtaxlent AND rtaxl002 = '",g_dlang,"' ",
   #             "             LEFT OUTER JOIN imckl_t ON imaa003 = imckl001 AND imaaent = imcklent AND imckl002 = '",g_dlang,"' ",
   #             "             LEFT OUTER JOIN oocal_t ON imaa006 = oocal001 AND imaaent = oocalent AND oocal002 = '",g_dlang,"' ",
   #             "             LEFT OUTER JOIN oocql_t ON imaa010 = oocql002 AND imaaent = oocqlent AND oocql001 = '210' AND oocql003 = '",g_dlang,"' "
   #160629-00002#3---mark---e
#   #end add-point
#    LET g_from = " FROM imaa_t,imaal_t"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
    LET g_where = " WHERE " ,tm.wc CLIPPED , " AND imaaent = ",g_enterprise ," "

#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
    LET g_order = " ORDER BY imaa001 "
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("imaa_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   #160629-00002#3---mark---s
   #LET g_sql = g_sql CLIPPED ," ",g_order CLIPPED 
   #LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
   #160629-00002#3---mark---e
   #end add-point
   PREPARE aimr120_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aimr120_x01_curs CURSOR FOR aimr120_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="aimr120_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION aimr120_x01_ins_data()
DEFINE sr RECORD 
   imaa001 LIKE imaa_t.imaa001, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   imaa002 LIKE imaa_t.imaa002, 
   imaa009 LIKE imaa_t.imaa009, 
   l_imaa009_desc LIKE type_t.chr500, 
   imaa003 LIKE imaa_t.imaa003, 
   l_imaa003_desc LIKE type_t.chr500, 
   imaa004 LIKE imaa_t.imaa004, 
   l_imaa004_desc LIKE type_t.chr500, 
   imaa006 LIKE imaa_t.imaa006, 
   l_imaa006_desc LIKE type_t.chr500, 
   imaa010 LIKE imaa_t.imaa010, 
   l_imaa010_desc LIKE type_t.chr500, 
   imaa011 LIKE imaa_t.imaa011, 
   l_imaa011_desc LIKE type_t.chr500, 
   imaa013 LIKE imaa_t.imaa013, 
   imaa035 LIKE imaa_t.imaa035
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
DEFINE l_sql  STRING  #160629-00002#3
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    #160629-00002#3---add---s
    LET l_sql = " SELECT DISTINCT imaa001,",
                "        (SELECT imaal003 FROM imaal_t WHERE imaaent = imaalent AND imaa001 = imaal001 AND imaal002 = '",g_dlang,"') imaal003,",
                "        (SELECT imaal004 FROM imaal_t WHERE imaaent = imaalent AND imaa001 = imaal001 AND imaal002 = '",g_dlang,"') imaal004,",
                "        imaa002,imaa009,",
                "        (SELECT rtaxl003 FROM rtaxl_t WHERE imaaent = rtaxlent AND imaa009 = rtaxl001 AND rtaxl002 = '",g_dlang,"') rtaxl003,",
                "        imaa003,",
                "        (SELECT imckl003 FROM imckl_t WHERE imaaent = imcklent AND imaa003 = imckl001 AND imckl002 = '",g_dlang,"') imckl003,",
                "        imaa004,",
                "        (imaa004||'.'||(SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001 = '1001' AND gzcbl002 = imaa004 AND gzcbl003 = '",g_dlang,"')) l_imaa004_desc,", 
                "        imaa006,",
                "        (SELECT oocal003 FROM oocal_t WHERE imaaent = oocalent AND imaa006 = oocal001 AND oocal002 = '",g_dlang,"') oocal003,",
                "        imaa010,",
                "        (imaa010||'.'||(SELECT oocql004 FROM oocql_t WHERE imaaent = oocqlent AND imaa010 = oocql002 AND oocql001 = '210' AND oocql003 = '",g_dlang,"')) oocql004,",
                "        imaa011,",
                "        (imaa011||'.'||(SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001 = '1002' AND gzcbl002 = imaa011 AND gzcbl003 = '",g_dlang,"')) l_imaa011_desc,",
                "        imaa013,imaa035 ", 
                "   FROM imaa_t ",
                "   WHERE ",tm.wc CLIPPED , " AND imaaent = ",g_enterprise ," "
    LET l_sql = g_sql_ins,l_sql
    PREPARE aimr120_ins_tmp FROM l_sql    
    EXECUTE aimr120_ins_tmp   
    RETURN   
    #160629-00002#3---add---e
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aimr120_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       #160629-00002#3---mark---s
       #CALL aimr120_x01_desc('1001',sr.imaa004) RETURNING sr.l_imaa004_desc  
       #CALL aimr120_x01_desc('1002',sr.imaa011) RETURNING sr.l_imaa011_desc  
       #IF NOT cl_null(sr.imaa004) THEN
       #  LET sr.l_imaa004_desc = sr.imaa004 CLIPPED , '.' , sr.l_imaa004_desc
       #ELSE 
       #  LET sr.l_imaa004_desc = NULL
       #END IF
       #IF NOT cl_null(sr.imaa010) THEN
       #  LET sr.l_imaa010_desc = sr.imaa010 CLIPPED , '.' , sr.l_imaa010_desc
       #ELSE 
       #  LET sr.l_imaa010_desc = NULL
       #END IF
       #IF NOT cl_null(sr.imaa011) THEN
       #  LET sr.l_imaa011_desc = sr.imaa011 CLIPPED , '.' , sr.l_imaa011_desc
       #ELSE 
       #  LET sr.l_imaa011_desc = NULL
       #END IF
       #160629-00002#3---mark---s
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.imaa001,sr.imaal003,sr.imaal004,sr.imaa002,sr.imaa009,sr.l_imaa009_desc,sr.imaa003,sr.l_imaa003_desc,sr.imaa004,sr.l_imaa004_desc,sr.imaa006,sr.l_imaa006_desc,sr.imaa010,sr.l_imaa010_desc,sr.imaa011,sr.l_imaa011_desc,sr.imaa013,sr.imaa035
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aimr120_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="aimr120_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION aimr120_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="aimr120_x01.other_function" readonly="Y" >}

PRIVATE FUNCTION aimr120_x01_desc(p_num,p_target)
   DEFINE p_num    LIKE type_t.num5
   DEFINE p_target LIKE type_t.chr10
   DEFINE r_desc   LIKE type_t.chr500
   
   SELECT gzcbl004 INTO r_desc
      FROM gzcbl_t
     WHERE gzcbl001 = p_num
       AND gzcbl002 = p_target
       AND gzcbl003 = g_dlang
   
   RETURN r_desc 
END FUNCTION

 
{</section>}
 
