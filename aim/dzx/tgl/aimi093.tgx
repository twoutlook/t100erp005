{<section id="aimi093.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2013-10-24 10:22:59), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000493
#+ Filename...: aimi093
#+ Description: 規則化品名設定作業
#+ Creator....: 02482(2013-09-24 17:54:06)
#+ Modifier...: 02482 -SD/PR-
{</section>}



{<section id="aimi093.global" >}
#應用 i08 樣板自動產生(Version:32)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
    
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_imee_m        RECORD
       imee001 LIKE imee_t.imee001, 
   imeel004 LIKE imeel_t.imeel004, 
   imeel005 LIKE imeel_t.imeel005, 
   imeestus LIKE imee_t.imeestus, 
   imee004 LIKE imee_t.imee004, 
   imee004_desc LIKE type_t.chr80, 
   imee003 LIKE imee_t.imee003, 
   imeel004_2 LIKE type_t.chr500, 
   imee006 LIKE imee_t.imee006, 
   imee007 LIKE imee_t.imee007, 
   imee008 LIKE imee_t.imee008, 
   imee009 LIKE imee_t.imee009, 
   imee010 LIKE imee_t.imee010, 
   imee011 LIKE imee_t.imee011, 
   imee012 LIKE imee_t.imee012, 
   imee005 LIKE imee_t.imee005, 
   imeeownid LIKE imee_t.imeeownid, 
   imeeownid_desc LIKE type_t.chr80, 
   imeeowndp LIKE imee_t.imeeowndp, 
   imeeowndp_desc LIKE type_t.chr80, 
   imeecrtid LIKE imee_t.imeecrtid, 
   imeecrtid_desc LIKE type_t.chr80, 
   imeecrtdp LIKE imee_t.imeecrtdp, 
   imeecrtdp_desc LIKE type_t.chr80, 
   imeecrtdt LIKE imee_t.imeecrtdt, 
   imeemodid LIKE imee_t.imeemodid, 
   imeemodid_desc LIKE type_t.chr80, 
   imeemoddt LIKE imee_t.imeemoddt, 
   imee002 LIKE imee_t.imee002
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_imef_d        RECORD
       imef003 LIKE imef_t.imef003, 
   imefl005 LIKE imefl_t.imefl005
       END RECORD

 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_imee_m          type_g_imee_m
DEFINE g_imee_m_t        type_g_imee_m
DEFINE g_imee_m_o        type_g_imee_m
 
   DEFINE g_imee001_t LIKE imee_t.imee001
DEFINE g_imee003_t LIKE imee_t.imee003

 
#DEFINE g_imee003_t        LIKE imee_t.imee003
DEFINE g_imee004_t        LIKE imee_t.imee004
#DEFINE g_imee001_t      LIKE imee_t.imee001
 
DEFINE g_imef_d          DYNAMIC ARRAY OF type_g_imef_d
DEFINE g_imef_d_t        type_g_imef_d
DEFINE g_imef_d_o        type_g_imef_d

 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_imee001 LIKE imee_t.imee001,
      b_imee003 LIKE imee_t.imee003,
      b_imee004 LIKE imee_t.imee004
       END RECORD
      
DEFINE g_master_multi_table_t    RECORD
      imeel001 LIKE imeel_t.imeel001,
      imeel002 LIKE imeel_t.imeel002,
      imeel004 LIKE imeel_t.imeel004,
      imeel005 LIKE imeel_t.imeel005,
      imeel001_idx2 LIKE imeel_t.imeel001,
      imeel002_idx2 LIKE imeel_t.imeel002,
      imeel004_2_idx2 LIKE imeel_t.imeel004
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      imefl001 LIKE imefl_t.imefl001,
      imefl002 LIKE imefl_t.imefl002,
      imefl003 LIKE imefl_t.imefl003,
      imefl004 LIKE imefl_t.imefl004,
      imefl005 LIKE imefl_t.imefl005
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_searchtype          LIKE type_t.chr200
                                                   
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_root_search         BOOLEAN
DEFINE g_browser_root        DYNAMIC ARRAY OF INTEGER      #root資料所在
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING                        #確定當下點擊的單身
 
DEFINE g_wc_table1           STRING                        #第1個單身table所使用的g_wc

 
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="aimi093.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aim","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT imee001,'','',imeestus,imee004,'',imee003,'',imee006,imee007,imee008,imee009,imee010,imee011,imee012,imee005,imeeownid,'',imeeowndp,'',imeecrtid,'',imeecrtdp,'',imeecrtdt,imeemodid,'',imeemoddt,imee002", 
                      " FROM imee_t",
                      " WHERE imeeent= ? AND imee001=? AND imee003=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimi093_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.imee001,t0.imeestus,t0.imee004,t0.imee003,t0.imee006,t0.imee007,t0.imee008,t0.imee009,t0.imee010,t0.imee011,t0.imee012,t0.imee005,t0.imeeownid,t0.imeeowndp,t0.imeecrtid,t0.imeecrtdp,t0.imeecrtdt,t0.imeemodid,t0.imeemoddt,t0.imee002,t1.imeel004 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011",
               " FROM imee_t t0",
                              " LEFT JOIN imeel_t t1 ON t1.imeelent="||g_enterprise||" AND t1.imeel001=imee001 AND t1.imeel002=imee004 AND t1.imeel003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=imeeownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=imeeowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=imeecrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=imeecrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=imeemodid  ",

               " WHERE t0.imeeent = " ||g_enterprise|| " AND t0.imee001 = ? AND t0.imee003 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aimi093_master_referesh FROM g_sql
 
   #該樣板不需此段落#add-point:main段define_sql name="main.body.define_sql"
   #該樣板不需此段落{<point name="main.body.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT imef003 FROM imef_t WHERE imefent=? AND imef001=? AND imef002=? AND imef003=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body.after_define_sql"
   #該樣板不需此段落{<point name="main.body.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE aimi093_bcl CURSOR FROM g_forupd_sql
    

   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aimi093 WITH FORM cl_ap_formpath("aim",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aimi093_init()   
 
      #進入選單 Menu (="N")
      CALL aimi093_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aimi093
      
   END IF 
   
   CLOSE aimi093_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN



{</section>}
 
{<section id="aimi093.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aimi093_init()
   #add-point:init段define name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point    
  
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
  
   LET g_bfill = "Y"
   LET g_searchtype = "3"
   LET g_error_show = 1
      CALL cl_set_combo_scc_part('imeestus','17','N,Y')

      CALL cl_set_combo_scc('imee006','48') 
   CALL cl_set_combo_scc('imee008','51') 

   
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   CALL aimi093_default_search()
    
END FUNCTION
{</section>}
 
{<section id="aimi093.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aimi093_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE la_param  RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
      
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_imee_m.* TO NULL
         CALL g_imef_d.clear()

         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aimi093_init()
      END IF
   
      CALL aimi093_browser_fill()
      
      #temp CALL cl_notice()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype
            BEFORE INPUT
         END INPUT
            
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aimi093_fetch('') # reload data
               #LET g_detail_idx = 1
               CALL aimi093_ui_detailshow() #Setting the current row 
      
               CALL aimi093_idx_chk()
               #NEXT FIELD imef003
               
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL aimi093_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
         
         END DISPLAY
        
         DISPLAY ARRAY g_imef_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               CALL aimi093_idx_chk()
               
            BEFORE DISPLAY
               LET g_current_page = 1
               CALL aimi093_idx_chk()
               
            
               
         END DISPLAY
        

      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aimi093_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aimi093_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aimi093_idx_chk()
            
            #NEXT FIELD imef003
      
         #Browser用Action
      
         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            INITIALIZE g_wc_table1 TO NULL

            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT aimi093_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser.getLength() = 0 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -100 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
            END IF   
            LET g_action_choice = "searchdata"
            EXIT DIALOG
      
         #進階搜尋
         ON ACTION advancesearch    
            
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aimi093_statechange()
      
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_imef_d)
                  LET g_export_id[1]   = "s_detail1"

                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
            
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF
       
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_imee001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aimi093_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aimi093_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               #該樣板不需此段落
               CALL aimi093_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               #該樣板不需此段落
               CALL aimi093_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               #該樣板不需此段落
               CALL aimi093_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               #該樣板不需此段落
               CALL aimi093_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)




            END IF
 



         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aimi093_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aimi093_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aimi093_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')



         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
{</section>}
 
{<section id="aimi093.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aimi093_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   {<point name="browser_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   {<point name="browser_search.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="browser_search.pre_function"
   {<point name="browser_search.pre_function"/>}
   #end add-point
      
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "searchcol" 
      LET g_errparam.code   = "std-00005" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY imee001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aimi093_browser_fill()
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="aimi093.browser_fill" >}
#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION aimi093_browser_fill()
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="browser_fill.pre_function"
   {<point name="browser_fill.pre_function"/>}
   #end add-point
      
   CALL g_browser.clear()
   CLEAR FORM
   
   DROP TABLE aimi093_tmp
   
   #Create temp table
   CREATE TEMP TABLE aimi093_tmp
   (
         imee001 VARCHAR(500),
   imee003 VARCHAR(500),
   imee004 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   LET g_root_search = FALSE
   IF (g_wc.trim() = "1=1"  OR cl_null(g_wc))  AND 
      (g_wc2.trim() = "1=1" OR cl_null(g_wc2)) THEN
      #未輸入條件時則只查找root節點
      LET g_wc = " imee003 = imee004 "
      LET g_root_search = TRUE
   END IF
 
   IF cl_null(g_wc2) OR g_wc2.trim() = "1=1" THEN
      LET g_sql = "SELECT t0.imee001,t0.imee003,t0.imee004 ",
                  " FROM imee_t t0",
                  " WHERE imeeent = " ||g_enterprise|| " AND ",g_wc
   ELSE
      LET g_sql = "SELECT t0.imee001,t0.imee003,t0.imee004 ",
                  " FROM imee_t t0",
                  " INNER JOIN imef_t ",
                  " ON imef001 = imee001 ",

                  " WHERE imeeent = " ||g_enterprise|| " AND ", g_wc, " AND ", g_wc2
   END IF
   LET g_sql = g_sql ,cl_sql_add_filter("imee_t")
  
   #LET g_sql = cl_sql_add_tabid(g_sql,"imee_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料   
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
 
   #搜尋建構樹所需的節點
   CASE g_searchtype
      WHEN "1" #上推
         CALL aimi093_match_node(g_wc,g_searchtype) 
      WHEN "2" #下展
         #CALL aimi093_find_speed_tbl(g_wc,g_searchtype) 
         CALL aimi093_match_node(g_wc,g_searchtype) 
      WHEN "3" #全部
         CALL aimi093_match_node(g_wc,g_searchtype) 
   END CASE
 
   CALL aimi093_browser_create(g_searchtype)
   
   FREE master_ext
     
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
     
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
     
END FUNCTION
{</section>}
 
{<section id="aimi093.match_node" >}
PRIVATE FUNCTION aimi093_match_node(p_wc,p_type)
   #add-point:match_node段define name="match_node.define_customerization"
   {<point name="match_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位   
             imee001 VARCHAR(500),
   imee003 VARCHAR(500),
   imee004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位   
             imee001 VARCHAR(500),
   imee003 VARCHAR(500),
   imee004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   #add-point:match_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="match_node.define"
   {<point name="match_node.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="match_node.pre_function"
   {<point name="match_node.pre_function"/>}
   #end add-point
      
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0"
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null('imee004') THEN
      LET ls_code = '0'
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO aimi093_tmp (imee001,imee003,imee004,exp_code) VALUES (?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end('Y','0')
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      EXECUTE master_tmp USING l_bstmp.*,ls_code
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT t0.imee001,t0.imee003,t0.imee004 ",
                  " FROM imee_t t0",
                  " WHERE imeeent = " ||g_enterprise|| " AND imee003 = ? ",
                  " AND imee001 = ? ",
                  cl_sql_add_filter("imee_t")
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].imee003) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].imee004
                                           ,l_child_list[1].imee001
                                           INTO l_bstmp.*
         FREE master_getparent_up
      
      #確定該節點是否存在於temp table中
         
         IF STATUS = 0 AND aimi093_tmp_tbl_chk(l_bstmp.imee003,ls_code2
                     ,l_bstmp.imee001
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      
      END WHILE
   
   END FOREACH  
   
   FREE master_tmp
   
   CALL s_transaction_end('Y','0')
 
END FUNCTION
{</section>}
 
{<section id="aimi093.tmp_tbl_chk" >}
#+ TEMP TABLE CHK
PRIVATE FUNCTION aimi093_tmp_tbl_chk(ps_id,pi_code,ps_type)
   #add-point:tmp_tbl_chk段define name="tmp_tbl_chk.define_customerization"
   {<point name="tmp_tbl_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10
   #add-point:tmp_tbl_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="tmp_tbl_chk.define"
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="tmp_tbl_chk.pre_function"
   {<point name="tmp_tbl_chk.pre_function"/>}
   #end add-point
      
   LET ls_id = ps_id
   LET ls_type = ps_type
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(1) FROM aimi093_tmp ", 
               " WHERE imee003 = ? "
                ," AND imee001 = ? "
 
   PREPARE aimi093_get_cnt FROM g_sql
   EXECUTE aimi093_get_cnt USING ls_id 
                                     ,ls_type
                                     INTO li_cnt
   FREE aimi093_get_cnt
                                     
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
    
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM aimi093_tmp  ",
                  " WHERE imee003 = ? " 
                   ," AND imee001 = ? "
 
      PREPARE aimi093_chk_exp FROM g_sql
      
      EXECUTE aimi093_chk_exp USING ls_id 
                                        ,ls_type
                                        INTO li_code
      FREE aimi093_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE aimi093_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE imee003 = ? "
                      ," AND imee001 = ? "
         PREPARE aimi093_upd_exp FROM g_sql
         EXECUTE aimi093_upd_exp USING ls_id ,ls_type
         FREE aimi093_upd_exp
         
      END IF      
      
      RETURN FALSE
   END IF
 
END FUNCTION
{</section>}
 
{<section id="aimi093.browser_expand" >}
#+ Tree子節點展開
PRIVATE FUNCTION aimi093_browser_expand(p_id)
   #add-point:browser_expand段define name="browser_expand.define_customerization"
   {<point name="browser_expand.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         STRING
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   #add-point:browser_expand段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_expand.define"
   {<point name="browser_expand.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="browser_expand.pre_function"
   {<point name="browser_expand.pre_function"/>}
   #end add-point
      
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_imee003
   LET l_typevalue = g_browser[p_id].b_imee001
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "aimi093_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "imee_t"
         LET ls_exp_code = "'2'"
   END CASE
   
   LET l_sql = " SELECT DISTINCT '','','','FALSE','','',",ls_exp_code,",imee001,imee003,imee004",
               " FROM   ",ls_source,
               
               " WHERE  imee004 = '", l_keyvalue,
               "' AND   imee003 <> imee004",
               " AND  imee001 = '", l_typevalue,"'", 
               " ORDER BY imee003"
   
   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = l_id
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].* 
      #pid=父節點id
      LET g_browser[l_id].b_pid  = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id   = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_imee003 = g_browser[l_id].b_imee003 CLIPPED
      CALL aimi093_desc_show(l_id)
      LET g_browser[l_id].b_hasC = aimi093_chk_hasC(l_id)
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   
   FREE tree_expand
 
END FUNCTION
{</section>}
 
{<section id="aimi093.browser_create" >}
PRIVATE FUNCTION aimi093_browser_create(p_type)
   #add-point:browser_create name="browser_create.define_customerization"
   {<point name="browser_create.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_create.define"
   {<point name="browser_create.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="browser_create.pre_function"
   {<point name="browser_create.pre_function"/>}
   #end add-point
      
   #先找出所有的帳別資料
   LET g_sql = " SELECT DISTINCT imee001 FROM aimi093_tmp ORDER BY imee001"
   PREPARE master_type FROM g_sql
   DECLARE master_typecur CURSOR FOR master_type
   
   INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   FOREACH master_typecur INTO g_browser[l_ac].b_imee001
      #確定root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      LET g_browser[l_ac].b_imee003  = g_browser[l_ac].b_imee001
      LET g_browser[l_ac].b_imee001 = g_browser[l_ac].b_imee001
      LET g_browser[l_ac].b_pid = '0' CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      LET g_sql = " SELECT DISTINCT t0.imee001,t0.imee003,t0.imee004,exp_code FROM aimi093_tmp a ",
                  
                  " WHERE ",
                  "a.imee001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(1) FROM aimi093_tmp b WHERE a.imee004 = b.imee003 ", 
                  " AND a.imee001 = b.imee001",
                  ") = 0 OR ", 
                  " a.imee003 = a.imee004 )", 
                  " ORDER BY a.imee003"
 
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      #OPEN master_getLV2cur USING g_browser[l_ac-1].b_imee001   #(ver:32)
      
      LET g_cnt = l_ac
      
      FOREACH master_getLV2cur   #(ver:32)
         USING g_browser[l_ac-1].b_imee001   #(ver:32)
         INTO g_browser[g_cnt].b_imee001,g_browser[g_cnt].b_imee003,g_browser[g_cnt].b_imee004,g_browser[g_cnt].b_expcode   #(ver:32)
 
         #(ver:32) ---start---
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.SQLCODE
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
  
            EXIT FOREACH
         END IF
         #(ver:32) --- end ---
 
         #去除多餘空白
         #LET g_browser[g_cnt].b_imee003 = g_browser[g_cnt].b_imee003 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = aimi093_find_node(g_cnt)
         #END CASE
         LET g_browser[g_cnt].b_hasC = TRUE
 
         LET g_cnt = g_cnt + 1   
         
         IF g_cnt > g_max_rec AND g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = g_cnt
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            EXIT FOREACH
         END IF
      END FOREACH
      LET l_ac = g_browser.getLength()
      
      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
         EXIT FOREACH
      END IF
   END FOREACH
   
   LET g_error_show = 0
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_imee003) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL aimi093_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
   
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
   
   FREE master_getLV2
   
END FUNCTION
{</section>}
 
{<section id="aimi093.desc_show" >}
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION aimi093_desc_show(pi_ac)
   #add-point:desc_show段define name="desc_show.define_customerization"
   {<point name="desc_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   #add-point:desc_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="desc_show.define"
   {<point name="desc_show.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="desc_show.pre_function"
   {<point name="desc_show.pre_function"/>}
   #end add-point
      
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理 name="desc_show.show"
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
   
END FUNCTION
{</section>}
 
{<section id="aimi093.find_node" >}
#+ 尋找符合條件的節點
PRIVATE FUNCTION aimi093_find_node(pi_ac)
   #add-point:find_node段define name="find_node.define_customerization"
   {<point name="find_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   DEFINE ls_pid  STRING
   #add-point:find_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="find_node.define"
   {<point name="find_node.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="find_node.pre_function"
   {<point name="find_node.pre_function"/>}
   #end add-point
      
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,t0.imee001,t0.imee003,t0.imee004 ",
               " FROM aimi093_tmp ",
               " WHERE imee004 = ? AND imee004 <> imee003",
               " ORDER BY imee003"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
      #  OPEN master_getNodecur USING g_browser[li_idx].b_imee003   #(ver:32)
         FOREACH master_getNodecur USING g_browser[li_idx].b_imee003 INTO g_browser[g_browser.getLength()+1].*   #(ver:32)
            #(ver:32) ---start---
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.SQLCODE
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
        
               EXIT FOREACH
            END IF
            #(ver:32) --- end ---
            CALL aimi093_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = aimi093_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION
{</section>}
 
{<section id="aimi093.chk_hasC" >}
#+ QBE資料查詢
PRIVATE FUNCTION aimi093_chk_hasC(pi_id)
   #add-point:chk_hasC段define name="chk_hasC.define_customerization"
   {<point name="chk_hasC.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   #add-point:chk_hasC段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="chk_hasC.define"
   {<point name="chk_hasC.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="chk_hasC.pre_function"
   {<point name="chk_hasC.pre_function"/>}
   #end add-point
      
   LET g_sql = "SELECT COUNT(imee004) FROM aimi093_tmp ",
               " WHERE ",
                "imee004 = ? AND ",
                "exp_code <> '-1' AND imee003 <> imee004 "
                 ," AND ",
                "imee001 = ?"
 
   PREPARE aimi093_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(1) FROM imee_t ",
               " WHERE imeeent = " ||g_enterprise|| " AND ",
               "imee003 <> imee004 AND ",
               "imee004 = ? "
                ," AND ",
               "imee001 = ?",
               cl_sql_add_filter("imee_t")     
   
   PREPARE aimi093_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE aimi093_temp_chk 
           USING g_browser[pi_id].b_imee003
                 ,g_browser[pi_id].b_imee001
            INTO li_cnt
         FREE aimi093_temp_chk
      WHEN 2 
         EXECUTE aimi093_master_chk 
           USING g_browser[pi_id].b_imee003
                 ,g_browser[pi_id].b_imee001
            INTO li_cnt
         FREE aimi093_master_chk
   END CASE
   
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
{</section>}
 
{<section id="aimi093.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aimi093_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
      
   LET g_imee_m.imee001 = g_browser[g_current_idx].b_imee001   
   LET g_imee_m.imee003 = g_browser[g_current_idx].b_imee003   

   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002,g_imee_m.imee004_desc,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp_desc,g_imee_m.imeemodid_desc
   CALL aimi093_show()
   
END FUNCTION
{</section>}
 
{<section id="aimi093.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aimi093_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      

   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="aimi093.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aimi093_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
      
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_imee001 = g_imee_m.imee001 
         AND g_browser[l_i].b_imee003 = g_imee_m.imee003 

         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
{</section>}
 
{<section id="aimi093.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aimi093_construct()
   #add-point:cs段define name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
      
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_imee_m.* TO NULL
   CALL g_imef_d.clear()        

   
   LET g_current_idx = 1
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc_table1 TO NULL

    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON imee001,imeel004,imeel005,imeestus,imee004,imee003,imeel004_2,imee006,imee007,imee008,imee009,imee010,imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid,imeemoddt,imee002
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #單頭公用欄位開窗
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<imeecrtdt>>----
         AFTER FIELD imeecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<imeemoddt>>----
         AFTER FIELD imeemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imeecnfdt>>----
         #該樣板不需此段落AFTER FIELD imeecnfdt
         #該樣板不需此段落   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #該樣板不需此段落   IF NOT cl_null(ls_result) THEN
         #該樣板不需此段落      IF NOT cl_chk_date_symbol(ls_result) THEN
         #該樣板不需此段落         LET ls_result = cl_add_date_extra_cond(ls_result)
         #該樣板不需此段落      END IF
         #該樣板不需此段落   END IF
         #該樣板不需此段落   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imeepstdt>>----
         #該樣板不需此段落AFTER FIELD imeepstdt
         #該樣板不需此段落   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #該樣板不需此段落   IF NOT cl_null(ls_result) THEN
         #該樣板不需此段落      IF NOT cl_chk_date_symbol(ls_result) THEN
         #該樣板不需此段落         LET ls_result = cl_add_date_extra_cond(ls_result)
         #該樣板不需此段落      END IF
         #該樣板不需此段落   END IF
         #該樣板不需此段落   CALL FGL_DIALOG_SETBUFFER(ls_result)



          
         #單頭一般欄位開窗          
                  #Ctrlp:construct.c.imee001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee001
            #add-point:ON ACTION controlp INFIELD imee001 name="construct.c.imee001"
            {<point name="construct.c.imee001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee001
            #add-point:BEFORE FIELD imee001 name="construct.b.imee001"
            {<point name="construct.b.imee001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee001
            
            #add-point:AFTER FIELD imee001 name="construct.a.imee001"
            {<point name="construct.a.imee001" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeel004
            #add-point:BEFORE FIELD imeel004 name="construct.b.imeel004"
            {<point name="construct.b.imeel004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeel004
            
            #add-point:AFTER FIELD imeel004 name="construct.a.imeel004"
            {<point name="construct.a.imeel004" />}
            #END add-point
            


         #Ctrlp:construct.c.imeel004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeel004
            #add-point:ON ACTION controlp INFIELD imeel004 name="construct.c.imeel004"
            {<point name="construct.c.imeel004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeel005
            #add-point:BEFORE FIELD imeel005 name="construct.b.imeel005"
            {<point name="construct.b.imeel005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeel005
            
            #add-point:AFTER FIELD imeel005 name="construct.a.imeel005"
            {<point name="construct.a.imeel005" />}
            #END add-point
            


         #Ctrlp:construct.c.imeel005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeel005
            #add-point:ON ACTION controlp INFIELD imeel005 name="construct.c.imeel005"
            {<point name="construct.c.imeel005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeestus
            #add-point:BEFORE FIELD imeestus name="construct.b.imeestus"
            {<point name="construct.b.imeestus" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeestus
            
            #add-point:AFTER FIELD imeestus name="construct.a.imeestus"
            {<point name="construct.a.imeestus" />}
            #END add-point
            


         #Ctrlp:construct.c.imeestus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeestus
            #add-point:ON ACTION controlp INFIELD imeestus name="construct.c.imeestus"
            {<point name="construct.c.imeestus" />}
            #END add-point


         #Ctrlp:construct.c.imee004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee004
            #add-point:ON ACTION controlp INFIELD imee004 name="construct.c.imee004"
            {<point name="construct.c.imee004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee004
            #add-point:BEFORE FIELD imee004 name="construct.b.imee004"
            {<point name="construct.b.imee004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee004
            
            #add-point:AFTER FIELD imee004 name="construct.a.imee004"
            {<point name="construct.a.imee004" />}
            #END add-point
            


         #Ctrlp:construct.c.imee003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee003
            #add-point:ON ACTION controlp INFIELD imee003 name="construct.c.imee003"
            {<point name="construct.c.imee003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee003
            #add-point:BEFORE FIELD imee003 name="construct.b.imee003"
            {<point name="construct.b.imee003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee003
            
            #add-point:AFTER FIELD imee003 name="construct.a.imee003"
            {<point name="construct.a.imee003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeel004_2
            #add-point:BEFORE FIELD imeel004_2 name="construct.b.imeel004_2"
            {<point name="construct.b.imeel004_2" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeel004_2
            
            #add-point:AFTER FIELD imeel004_2 name="construct.a.imeel004_2"
            {<point name="construct.a.imeel004_2" />}
            #END add-point
            


         #Ctrlp:construct.c.imeel004_2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeel004_2
            #add-point:ON ACTION controlp INFIELD imeel004_2 name="construct.c.imeel004_2"
            {<point name="construct.c.imeel004_2" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee006
            #add-point:BEFORE FIELD imee006 name="construct.b.imee006"
            {<point name="construct.b.imee006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee006
            
            #add-point:AFTER FIELD imee006 name="construct.a.imee006"
            {<point name="construct.a.imee006" />}
            #END add-point
            


         #Ctrlp:construct.c.imee006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee006
            #add-point:ON ACTION controlp INFIELD imee006 name="construct.c.imee006"
            {<point name="construct.c.imee006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee007
            #add-point:BEFORE FIELD imee007 name="construct.b.imee007"
            {<point name="construct.b.imee007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee007
            
            #add-point:AFTER FIELD imee007 name="construct.a.imee007"
            {<point name="construct.a.imee007" />}
            #END add-point
            


         #Ctrlp:construct.c.imee007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee007
            #add-point:ON ACTION controlp INFIELD imee007 name="construct.c.imee007"
            {<point name="construct.c.imee007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee008
            #add-point:BEFORE FIELD imee008 name="construct.b.imee008"
            {<point name="construct.b.imee008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee008
            
            #add-point:AFTER FIELD imee008 name="construct.a.imee008"
            {<point name="construct.a.imee008" />}
            #END add-point
            


         #Ctrlp:construct.c.imee008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee008
            #add-point:ON ACTION controlp INFIELD imee008 name="construct.c.imee008"
            {<point name="construct.c.imee008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee009
            #add-point:BEFORE FIELD imee009 name="construct.b.imee009"
            {<point name="construct.b.imee009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee009
            
            #add-point:AFTER FIELD imee009 name="construct.a.imee009"
            {<point name="construct.a.imee009" />}
            #END add-point
            


         #Ctrlp:construct.c.imee009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee009
            #add-point:ON ACTION controlp INFIELD imee009 name="construct.c.imee009"
            {<point name="construct.c.imee009" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee010
            #add-point:BEFORE FIELD imee010 name="construct.b.imee010"
            {<point name="construct.b.imee010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee010
            
            #add-point:AFTER FIELD imee010 name="construct.a.imee010"
            {<point name="construct.a.imee010" />}
            #END add-point
            


         #Ctrlp:construct.c.imee010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee010
            #add-point:ON ACTION controlp INFIELD imee010 name="construct.c.imee010"
            {<point name="construct.c.imee010" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee011
            #add-point:BEFORE FIELD imee011 name="construct.b.imee011"
            {<point name="construct.b.imee011" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee011
            
            #add-point:AFTER FIELD imee011 name="construct.a.imee011"
            {<point name="construct.a.imee011" />}
            #END add-point
            


         #Ctrlp:construct.c.imee011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee011
            #add-point:ON ACTION controlp INFIELD imee011 name="construct.c.imee011"
            {<point name="construct.c.imee011" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee012
            #add-point:BEFORE FIELD imee012 name="construct.b.imee012"
            {<point name="construct.b.imee012" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee012
            
            #add-point:AFTER FIELD imee012 name="construct.a.imee012"
            {<point name="construct.a.imee012" />}
            #END add-point
            


         #Ctrlp:construct.c.imee012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee012
            #add-point:ON ACTION controlp INFIELD imee012 name="construct.c.imee012"
            {<point name="construct.c.imee012" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee005
            #add-point:BEFORE FIELD imee005 name="construct.b.imee005"
            {<point name="construct.b.imee005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee005
            
            #add-point:AFTER FIELD imee005 name="construct.a.imee005"
            {<point name="construct.a.imee005" />}
            #END add-point
            


         #Ctrlp:construct.c.imee005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee005
            #add-point:ON ACTION controlp INFIELD imee005 name="construct.c.imee005"
            {<point name="construct.c.imee005" />}
            #END add-point


         #Ctrlp:construct.c.imeeownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeeownid
            #add-point:ON ACTION controlp INFIELD imeeownid name="construct.c.imeeownid"
            {<point name="construct.c.imeeownid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeeownid
            #add-point:BEFORE FIELD imeeownid name="construct.b.imeeownid"
            {<point name="construct.b.imeeownid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeeownid
            
            #add-point:AFTER FIELD imeeownid name="construct.a.imeeownid"
            {<point name="construct.a.imeeownid" />}
            #END add-point
            


         #Ctrlp:construct.c.imeeowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeeowndp
            #add-point:ON ACTION controlp INFIELD imeeowndp name="construct.c.imeeowndp"
            {<point name="construct.c.imeeowndp" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeeowndp
            #add-point:BEFORE FIELD imeeowndp name="construct.b.imeeowndp"
            {<point name="construct.b.imeeowndp" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeeowndp
            
            #add-point:AFTER FIELD imeeowndp name="construct.a.imeeowndp"
            {<point name="construct.a.imeeowndp" />}
            #END add-point
            


         #Ctrlp:construct.c.imeecrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeecrtid
            #add-point:ON ACTION controlp INFIELD imeecrtid name="construct.c.imeecrtid"
            {<point name="construct.c.imeecrtid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeecrtid
            #add-point:BEFORE FIELD imeecrtid name="construct.b.imeecrtid"
            {<point name="construct.b.imeecrtid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeecrtid
            
            #add-point:AFTER FIELD imeecrtid name="construct.a.imeecrtid"
            {<point name="construct.a.imeecrtid" />}
            #END add-point
            


         #Ctrlp:construct.c.imeecrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeecrtdp
            #add-point:ON ACTION controlp INFIELD imeecrtdp name="construct.c.imeecrtdp"
            {<point name="construct.c.imeecrtdp" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeecrtdp
            #add-point:BEFORE FIELD imeecrtdp name="construct.b.imeecrtdp"
            {<point name="construct.b.imeecrtdp" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeecrtdp
            
            #add-point:AFTER FIELD imeecrtdp name="construct.a.imeecrtdp"
            {<point name="construct.a.imeecrtdp" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeecrtdt
            #add-point:BEFORE FIELD imeecrtdt name="construct.b.imeecrtdt"
            {<point name="construct.b.imeecrtdt" />}
            #END add-point


         #Ctrlp:construct.c.imeemodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeemodid
            #add-point:ON ACTION controlp INFIELD imeemodid name="construct.c.imeemodid"
            {<point name="construct.c.imeemodid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeemodid
            #add-point:BEFORE FIELD imeemodid name="construct.b.imeemodid"
            {<point name="construct.b.imeemodid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeemodid
            
            #add-point:AFTER FIELD imeemodid name="construct.a.imeemodid"
            {<point name="construct.a.imeemodid" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeemoddt
            #add-point:BEFORE FIELD imeemoddt name="construct.b.imeemoddt"
            {<point name="construct.b.imeemoddt" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee002
            #add-point:BEFORE FIELD imee002 name="construct.b.imee002"
            {<point name="construct.b.imee002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee002
            
            #add-point:AFTER FIELD imee002 name="construct.a.imee002"
            {<point name="construct.a.imee002" />}
            #END add-point
            


         #Ctrlp:construct.c.imee002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee002
            #add-point:ON ACTION controlp INFIELD imee002 name="construct.c.imee002"
            {<point name="construct.c.imee002" />}
            #END add-point



         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table1 ON imef003,imefl005
           FROM s_detail1[1].imef003,s_detail1[1].imefl005
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.imef003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imef003
            #add-point:ON ACTION controlp INFIELD imef003 name="construct.c.page1.imef003"
            {<point name="construct.c.page1.imef003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imef003
            #add-point:BEFORE FIELD imef003 name="construct.b.page1.imef003"
            {<point name="construct.b.page1.imef003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imef003
            
            #add-point:AFTER FIELD imef003 name="construct.a.page1.imef003"
            {<point name="construct.a.page1.imef003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imefl005
            #add-point:BEFORE FIELD imefl005 name="construct.b.page1.imefl005"
            {<point name="construct.b.page1.imefl005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imefl005
            
            #add-point:AFTER FIELD imefl005 name="construct.a.page1.imefl005"
            {<point name="construct.a.page1.imefl005" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.imefl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imefl005
            #add-point:ON ACTION controlp INFIELD imefl005 name="construct.c.page1.imefl005"
            {<point name="construct.c.page1.imefl005" />}
            #END add-point


  
       
      END CONSTRUCT
      

      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc_table1

 
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
{</section>}
 
{<section id="aimi093.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aimi093_query()
   #add-point:query段define name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
      
   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_imef_d.clear()

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   
   CALL aimi093_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_imee_m.* TO NULL
      LET g_wc2 = " 1=1"
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      RETURN
   END IF
 
   LET g_error_show = 1
   CALL aimi093_browser_fill()
         
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF   
 
END FUNCTION
{</section>}
 
{<section id="aimi093.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aimi093_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
      
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf('.',1) = 0 THEN
      INITIALIZE g_imee_m.* TO NULL
      DISPLAY BY NAME g_imee_m.*
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
      DISPLAY '' TO FORMONLY.b_index
      RETURN
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
 
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_imee_m.imee001 = g_browser[g_current_idx].b_imee001
   LET g_imee_m.imee003 = g_browser[g_current_idx].b_imee003

   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002,g_imee_m.imee004_desc,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp_desc,g_imee_m.imeemodid_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "imee_t",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_imee_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #保存單頭舊值
   LET g_imee_m_t.* = g_imee_m.*
   LET g_imee_m_o.* = g_imee_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aimi093_show()
 
   
 
END FUNCTION
{</section>}
 
{<section id="aimi093.insert" >}
#+ 資料新增
PRIVATE FUNCTION aimi093_insert()
   #add-point:insert段define name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
      
   CLEAR FORM                                #清畫面欄位內容
   CALL g_imef_d.clear()          #清除陣列

   
   INITIALIZE g_imee_m.* LIKE imee_t.*             #DEFAULT 設定
   
   LET g_imee001_t = NULL
   LET g_imee003_t = NULL

   LET g_imee004_t = NULL
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_imee_m.imeeownid = g_user
      LET g_imee_m.imeeowndp = g_dept
      LET g_imee_m.imeecrtid = g_user
      LET g_imee_m.imeecrtdp = g_dept 
      LET g_imee_m.imeecrtdt = cl_get_current()
      LET g_imee_m.imeemodid = g_user
      LET g_imee_m.imeemoddt = cl_get_current()
      LET g_imee_m.imeestus = 'Y'



 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_imee_m.imee001 = "0"
      LET g_imee_m.imeestus = "Y"
      LET g_imee_m.imee008 = "1"

  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aimi093_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imee_m.* = g_imee_m_t.*
         CALL aimi093_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      CALL g_imef_d.clear()

 
      LET g_rec_b = 0
      EXIT WHILE
        
   END WHILE
   
   #功能已完成,通報訊息中心
   CALL aimi093_msgcentre_notify('insert')
   
END FUNCTION
{</section>}
 
{<section id="aimi093.modify" >}
#+ 資料修改
PRIVATE FUNCTION aimi093_modify()
   #add-point:modify段define name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
      
   IF g_imee_m.imee001 IS NULL
   OR g_imee_m.imee003 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002,g_imee_m.imee004_desc,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp_desc,g_imee_m.imeemodid_desc
 
   #檢查是否允許此動作
   IF NOT aimi093_action_chk() THEN
      RETURN
   END IF
  
   LET g_imee001_t = g_imee_m.imee001
   LET g_imee003_t = g_imee_m.imee003

   CALL s_transaction_begin()
   
   OPEN aimi093_cl USING g_enterprise,g_imee_m.imee001
                                                       ,g_imee_m.imee003

   IF SQLCA.SQLCODE THEN   #(ver:32)
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aimi093_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:32)
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aimi093_cl INTO g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_imee_m.imee001,":",SQLERRMESSAGE  
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
 
   CALL aimi093_show()
   WHILE TRUE
      LET g_imee001_t = g_imee_m.imee001
      LET g_imee003_t = g_imee_m.imee003

      
      #寫入修改者/修改日期資訊(單頭)
      LET g_imee_m.imeemodid = g_user 
LET g_imee_m.imeemoddt = cl_get_current()
LET g_imee_m.imeemodid_desc = cl_get_username(g_imee_m.imeemodid)
 
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aimi093_input("u")     #欄位更改
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imee_m.* = g_imee_m_t.*
         CALL aimi093_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      #若有modid跟moddt則進行update
      UPDATE imee_t SET (imeemodid,imeemoddt) = (g_imee_m.imeemodid,g_imee_m.imeemoddt)
       WHERE imeeent = g_enterprise AND imee001 = g_imee001_t
         AND imee003 = g_imee003_t

      
      #若單頭key欄位有變更
      IF g_imee_m.imee001 != g_imee001_t 
      OR g_imee_m.imee003 != g_imee003_t 

      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE imef_t SET imef001 = g_imee_m.imee001
                                      ,imef002 = g_imee_m.imee003

          WHERE imefent = g_enterprise AND imef001 = g_imee001_t
            AND imef002 = g_imee003_t

            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "imef_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "imef_t",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         IF SQLCA.sqlcode THEN
             CALL s_transaction_end('N','0')
             INITIALIZE g_errparam TO NULL 
             LET g_errparam.extend = SQLERRMESSAGE 
             LET g_errparam.code   = SQLCA.sqlcode 
             LET g_errparam.popup  = TRUE 
             CALL cl_err()
             CONTINUE WHILE
         END IF
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         

         
         #UPDATE 多語言table key值
         

         CALL s_transaction_end('Y','0')
      END IF
      
      EXIT WHILE
   END WHILE
 
   CLOSE aimi093_cl
   CALL s_transaction_end('Y','0')
   
   #功能已完成,通報訊息中心
   CALL aimi093_msgcentre_notify('modify')
 
END FUNCTION   
{</section>}
 
{<section id="aimi093.input" >}
#+ 資料輸入
PRIVATE FUNCTION aimi093_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
      
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002
   
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT imef003 FROM imef_t WHERE imefent=? AND imef001=? AND imef002=? AND imef003=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aimi093_bcl CURSOR FROM g_forupd_sql
   

 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   LET lb_reproduce = FALSE
   
   #控制key欄位可否輸入
   CALL aimi093_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aimi093_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imee002
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
{</section>}
   
{<section id="aimi093.input.head" >}
      #單頭段
      INPUT BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imee002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               {<point name="input.master_input.update_item" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               #該樣板不需此段落
            END IF
 



     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.imeel001 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002 = ' '
LET g_master_multi_table_t.imeel004 = g_imee_m.imeel004
LET g_master_multi_table_t.imeel005 = g_imee_m.imeel005
LET g_master_multi_table_t.imeel001_idx2 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002_idx2 = g_imee_m.imee003
LET g_master_multi_table_t.imeel004_2_idx2 = g_imee_m.imeel004_2

            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.imeel001 = ''
LET g_master_multi_table_t.imeel002 = ''
LET g_master_multi_table_t.imeel004 = ''
LET g_master_multi_table_t.imeel005 = ''
LET g_master_multi_table_t.imeel001_idx2 = ''
LET g_master_multi_table_t.imeel002_idx2 = ''
LET g_master_multi_table_t.imeel004_2_idx2 = ''

            END IF
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee001
            #add-point:BEFORE FIELD imee001 name="input.b.imee001"
            {<point name="input.b.imee001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee001
            
            #add-point:AFTER FIELD imee001 name="input.a.imee001"
            {<point name="input.a.imee001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee001
            #add-point:ON CHANGE imee001 name="input.g.imee001"
            {<point name="input.g.imee001" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeel004
            #add-point:BEFORE FIELD imeel004 name="input.b.imeel004"
            {<point name="input.b.imeel004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeel004
            
            #add-point:AFTER FIELD imeel004 name="input.a.imeel004"
            {<point name="input.a.imeel004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeel004
            #add-point:ON CHANGE imeel004 name="input.g.imeel004"
            {<point name="input.g.imeel004" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeel005
            #add-point:BEFORE FIELD imeel005 name="input.b.imeel005"
            {<point name="input.b.imeel005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeel005
            
            #add-point:AFTER FIELD imeel005 name="input.a.imeel005"
            {<point name="input.a.imeel005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeel005
            #add-point:ON CHANGE imeel005 name="input.g.imeel005"
            {<point name="input.g.imeel005" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeestus
            #add-point:BEFORE FIELD imeestus name="input.b.imeestus"
            {<point name="input.b.imeestus" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeestus
            
            #add-point:AFTER FIELD imeestus name="input.a.imeestus"
            {<point name="input.a.imeestus" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeestus
            #add-point:ON CHANGE imeestus name="input.g.imeestus"
            {<point name="input.g.imeestus" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee004
            
            #add-point:AFTER FIELD imee004 name="input.a.imee004"
            {<point name="input.a.imee004" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee004
            #add-point:BEFORE FIELD imee004 name="input.b.imee004"
            {<point name="input.b.imee004" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee004
            #add-point:ON CHANGE imee004 name="input.g.imee004"
            {<point name="input.g.imee004" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee003
            #add-point:BEFORE FIELD imee003 name="input.b.imee003"
            {<point name="input.b.imee003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee003
            
            #add-point:AFTER FIELD imee003 name="input.a.imee003"
            {<point name="input.a.imee003" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee003
            #add-point:ON CHANGE imee003 name="input.g.imee003"
            {<point name="input.g.imee003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeel004_2
            #add-point:BEFORE FIELD imeel004_2 name="input.b.imeel004_2"
            {<point name="input.b.imeel004_2" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeel004_2
            
            #add-point:AFTER FIELD imeel004_2 name="input.a.imeel004_2"
            {<point name="input.a.imeel004_2" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeel004_2
            #add-point:ON CHANGE imeel004_2 name="input.g.imeel004_2"
            {<point name="input.g.imeel004_2" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee006
            #add-point:BEFORE FIELD imee006 name="input.b.imee006"
            {<point name="input.b.imee006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee006
            
            #add-point:AFTER FIELD imee006 name="input.a.imee006"
            {<point name="input.a.imee006" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee006
            #add-point:ON CHANGE imee006 name="input.g.imee006"
            {<point name="input.g.imee006" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee007
            #add-point:BEFORE FIELD imee007 name="input.b.imee007"
            {<point name="input.b.imee007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee007
            
            #add-point:AFTER FIELD imee007 name="input.a.imee007"
            {<point name="input.a.imee007" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee007
            #add-point:ON CHANGE imee007 name="input.g.imee007"
            {<point name="input.g.imee007" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee008
            #add-point:BEFORE FIELD imee008 name="input.b.imee008"
            {<point name="input.b.imee008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee008
            
            #add-point:AFTER FIELD imee008 name="input.a.imee008"
            {<point name="input.a.imee008" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee008
            #add-point:ON CHANGE imee008 name="input.g.imee008"
            {<point name="input.g.imee008" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_imee_m.imee009,"0","1","255","1","azz-00087",1) THEN
               NEXT FIELD imee009
            END IF 



            #add-point:AFTER FIELD imee009 name="input.a.imee009"
            {<point name="input.a.imee009" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee009
            #add-point:BEFORE FIELD imee009 name="input.b.imee009"
            {<point name="input.b.imee009" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee009
            #add-point:ON CHANGE imee009 name="input.g.imee009"
            {<point name="input.g.imee009" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee010
            #add-point:BEFORE FIELD imee010 name="input.b.imee010"
            {<point name="input.b.imee010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee010
            
            #add-point:AFTER FIELD imee010 name="input.a.imee010"
            {<point name="input.a.imee010" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee010
            #add-point:ON CHANGE imee010 name="input.g.imee010"
            {<point name="input.g.imee010" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee011
            #add-point:BEFORE FIELD imee011 name="input.b.imee011"
            {<point name="input.b.imee011" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee011
            
            #add-point:AFTER FIELD imee011 name="input.a.imee011"
            {<point name="input.a.imee011" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee011
            #add-point:ON CHANGE imee011 name="input.g.imee011"
            {<point name="input.g.imee011" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee012
            #add-point:BEFORE FIELD imee012 name="input.b.imee012"
            {<point name="input.b.imee012" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee012
            
            #add-point:AFTER FIELD imee012 name="input.a.imee012"
            {<point name="input.a.imee012" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee012
            #add-point:ON CHANGE imee012 name="input.g.imee012"
            {<point name="input.g.imee012" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee005
            #add-point:BEFORE FIELD imee005 name="input.b.imee005"
            {<point name="input.b.imee005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee005
            
            #add-point:AFTER FIELD imee005 name="input.a.imee005"
            {<point name="input.a.imee005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee005
            #add-point:ON CHANGE imee005 name="input.g.imee005"
            {<point name="input.g.imee005" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imee002
            #add-point:BEFORE FIELD imee002 name="input.b.imee002"
            {<point name="input.b.imee002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imee002
            
            #add-point:AFTER FIELD imee002 name="input.a.imee002"
            {<point name="input.a.imee002" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imee002
            #add-point:ON CHANGE imee002 name="input.g.imee002"
            {<point name="input.g.imee002" />}
            #END add-point 


 #欄位檢查
                  #Ctrlp:input.c.imee001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee001
            #add-point:ON ACTION controlp INFIELD imee001 name="input.c.imee001"
            {<point name="input.c.imee001" />}
            #END add-point


         #Ctrlp:input.c.imeel004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeel004
            #add-point:ON ACTION controlp INFIELD imeel004 name="input.c.imeel004"
            {<point name="input.c.imeel004" />}
            #END add-point


         #Ctrlp:input.c.imeel005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeel005
            #add-point:ON ACTION controlp INFIELD imeel005 name="input.c.imeel005"
            {<point name="input.c.imeel005" />}
            #END add-point


         #Ctrlp:input.c.imeestus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeestus
            #add-point:ON ACTION controlp INFIELD imeestus name="input.c.imeestus"
            {<point name="input.c.imeestus" />}
            #END add-point


         #Ctrlp:input.c.imee004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee004
            #add-point:ON ACTION controlp INFIELD imee004 name="input.c.imee004"
            {<point name="input.c.imee004" />}
            #END add-point


         #Ctrlp:input.c.imee003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee003
            #add-point:ON ACTION controlp INFIELD imee003 name="input.c.imee003"
            {<point name="input.c.imee003" />}
            #END add-point


         #Ctrlp:input.c.imeel004_2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeel004_2
            #add-point:ON ACTION controlp INFIELD imeel004_2 name="input.c.imeel004_2"
            {<point name="input.c.imeel004_2" />}
            #END add-point


         #Ctrlp:input.c.imee006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee006
            #add-point:ON ACTION controlp INFIELD imee006 name="input.c.imee006"
            {<point name="input.c.imee006" />}
            #END add-point


         #Ctrlp:input.c.imee007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee007
            #add-point:ON ACTION controlp INFIELD imee007 name="input.c.imee007"
            {<point name="input.c.imee007" />}
            #END add-point


         #Ctrlp:input.c.imee008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee008
            #add-point:ON ACTION controlp INFIELD imee008 name="input.c.imee008"
            {<point name="input.c.imee008" />}
            #END add-point


         #Ctrlp:input.c.imee009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee009
            #add-point:ON ACTION controlp INFIELD imee009 name="input.c.imee009"
            {<point name="input.c.imee009" />}
            #END add-point


         #Ctrlp:input.c.imee010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee010
            #add-point:ON ACTION controlp INFIELD imee010 name="input.c.imee010"
            {<point name="input.c.imee010" />}
            #END add-point


         #Ctrlp:input.c.imee011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee011
            #add-point:ON ACTION controlp INFIELD imee011 name="input.c.imee011"
            {<point name="input.c.imee011" />}
            #END add-point


         #Ctrlp:input.c.imee012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee012
            #add-point:ON ACTION controlp INFIELD imee012 name="input.c.imee012"
            {<point name="input.c.imee012" />}
            #END add-point


         #Ctrlp:input.c.imee005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee005
            #add-point:ON ACTION controlp INFIELD imee005 name="input.c.imee005"
            {<point name="input.c.imee005" />}
            #END add-point


         #Ctrlp:input.c.imee002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imee002
            #add-point:ON ACTION controlp INFIELD imee002 name="input.c.imee002"
            {<point name="input.c.imee002" />}
            #END add-point


 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_imee_m.imee001             
                            ,g_imee_m.imee003   

 
            IF p_cmd <> 'u' THEN
               LET l_count = 1  
               
               SELECT COUNT(1) INTO l_count FROM imee_t
                WHERE imeeent = g_enterprise AND imee001 = g_imee_m.imee001
                  AND imee003 = g_imee_m.imee003

               IF l_count = 0 THEN
                  
                  #add-point:單頭新增前 name="input.head.b_insert"
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
                  
                  INSERT INTO imee_t (imeeent,imee001,imeestus,imee004,imee003,imee006,imee007,imee008,imee009,imee010,imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid,imeemoddt,imee002)
                  VALUES (g_enterprise,g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002) 
                  
                  #add-point:單頭新增中 name="input.head.m_insert"
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "g_imee_m",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CONTINUE DIALOG
                  END IF
                  
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001 AND
         ' ' = g_master_multi_table_t.imeel002 AND
         g_imee_m.imeel004 = g_master_multi_table_t.imeel004 AND 
         g_imee_m.imeel005 = g_master_multi_table_t.imeel005  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeelent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imee_m.imee001
            LET l_field_keys[02] = 'imeel001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel001
            LET l_var_keys[03] = ' '
            LET l_field_keys[03] = 'imeel002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imeel002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imeel003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004
            LET l_fields[01] = 'imeel004'
            LET l_vars[02] = g_imee_m.imeel005
            LET l_fields[02] = 'imeel005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001_idx2 AND
         g_imee_m.imee003 = g_master_multi_table_t.imeel002_idx2 AND
         g_imee_m.imeel004_2 = g_master_multi_table_t.imeel004_2_idx2  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeelent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imee_m.imee001
            LET l_field_keys[02] = 'imeel001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel001_idx2
            LET l_var_keys[03] = g_imee_m.imee003
            LET l_field_keys[03] = 'imeel002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imeel002_idx2
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imeel003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004_2
            LET l_fields[01] = 'imeel004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 

 
                  #add-point:單頭新增後 name="input.head.a_insert"
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
                  
                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                     CALL aimi093_detail_reproduce()
                  END IF
                  
                  LET p_cmd = 'u'
               ELSE
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend =  g_imee_m.imee001 
                  LET g_errparam.code   = '!' 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD imee001
               END IF 
            ELSE
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE imee_t SET (imee001,imeestus,imee004,imee003,imee006,imee007,imee008,imee009,imee010,imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid,imeemoddt,imee002) = (g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002)
                WHERE imeeent = g_enterprise AND imee001 = g_imee001_t
                  AND imee003 = g_imee003_t

                  
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imee_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imee_t",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                  OTHERWISE
                     
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001 AND
         ' ' = g_master_multi_table_t.imeel002 AND
         g_imee_m.imeel004 = g_master_multi_table_t.imeel004 AND 
         g_imee_m.imeel005 = g_master_multi_table_t.imeel005  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeelent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imee_m.imee001
            LET l_field_keys[02] = 'imeel001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel001
            LET l_var_keys[03] = ' '
            LET l_field_keys[03] = 'imeel002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imeel002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imeel003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004
            LET l_fields[01] = 'imeel004'
            LET l_vars[02] = g_imee_m.imeel005
            LET l_fields[02] = 'imeel005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001_idx2 AND
         g_imee_m.imee003 = g_master_multi_table_t.imeel002_idx2 AND
         g_imee_m.imeel004_2 = g_master_multi_table_t.imeel004_2_idx2  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeelent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imee_m.imee001
            LET l_field_keys[02] = 'imeel001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel001_idx2
            LET l_var_keys[03] = g_imee_m.imee003
            LET l_field_keys[03] = 'imeel002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imeel002_idx2
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imeel003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004_2
            LET l_fields[01] = 'imeel004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 

                     #add-point:單頭修改後 name="input.head.a_update"
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     LET g_log1 = util.JSON.stringify(g_imee_m_t)
                     LET g_log2 = util.JSON.stringify(g_imee_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
               
            END IF
            LET g_imee001_t = g_imee_m.imee001
            LET g_imee003_t = g_imee_m.imee003

           #controlp
      END INPUT
{</section>}
   
{<section id="aimi093.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_imef_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION
         

         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION update_item name="input.detail_input.page1.update_item"
               {<point name="input.detail_input.page1.update_item" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               #該樣板不需此段落
            END IF
 



         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_imef_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            CALL aimi093_b_fill()
            LET g_rec_b = g_imef_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
 
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aimi093_cl USING g_enterprise,g_imee_m.imee001
                                                                ,g_imee_m.imee003

            IF SQLCA.SQLCODE THEN   #(VER:32)
               CLOSE aimi093_cl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aimi093_cl:" 
               LET g_errparam.code   = SQLCA.SQLCODE   #(ver:32)
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_imef_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_imef_d[l_ac].imef003 IS NOT NULL

            THEN
               LET l_cmd='u'
               LET g_imef_d_t.* = g_imef_d[l_ac].*  #BACKUP
               LET g_imef_d_o.* = g_imef_d[l_ac].*  #BACKUP
               CALL aimi093_set_entry_b(l_cmd)
               CALL aimi093_set_no_entry_b(l_cmd)
               IF NOT aimi093_lock_b("imef_t","1") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aimi093_bcl INTO g_imef_d[l_ac].imef003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_imef_d_t.imef003,":",SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aimi093_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            
            #其他table資料備份(確定是否更改用)
            
LET g_detail_multi_table_t.imefl001 = g_imee_m.imee001
LET g_detail_multi_table_t.imefl002 = g_imee_m.imee003
LET g_detail_multi_table_t.imefl003 = g_imef_d[l_ac].imef003
LET g_detail_multi_table_t.imefl004 = g_dlang
LET g_detail_multi_table_t.imefl005 = g_imef_d[l_ac].imefl005

            
            #其他table進行lock
            
            INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'imeflent'
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[02] = 'imefl001'
            LET l_var_keys[02] = g_imee_m.imee001
            LET l_field_keys[03] = 'imefl002'
            LET l_var_keys[03] = g_imee_m.imee003
            LET l_field_keys[04] = 'imefl003'
            LET l_var_keys[04] = g_imef_d[l_ac].imef003
            LET l_field_keys[05] = 'imefl004'
            LET l_var_keys[05] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'imefl_t') THEN
               RETURN 
            END IF 

        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_imef_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            
            
            #add-point:modify段before備份 name="input.body.before_bak"
            {<point name="input.body.before_bak"/>}
            #end add-point
            LET g_imef_d_t.* = g_imef_d[l_ac].*     #新輸入資料
            LET g_imef_d_o.* = g_imef_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aimi093_set_entry_b(l_cmd)
            CALL aimi093_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_imef_d[li_reproduce_target].* = g_imef_d[li_reproduce].*

               LET g_imef_d[g_imef_d.getLength()].imef003 = NULL

            END IF
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM imef_t 
             WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001
               AND imef002 = g_imee_m.imee003

               AND g_imef_d[l_ac].imef003 = imef003

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imee_m.imee001
               LET gs_keys[2] = g_imee_m.imee003
               LET gs_keys[3] = g_imef_d[g_detail_idx].imef003
               CALL aimi093_insert_b('imef_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_imef_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL s_transaction_end('N','0')                    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "imef_t",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aimi093_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_imee_m.imee001 = g_detail_multi_table_t.imefl001 AND
         g_imee_m.imee003 = g_detail_multi_table_t.imefl002 AND
         g_imef_d[l_ac].imef003 = g_detail_multi_table_t.imefl003 AND
         g_imef_d[l_ac].imefl005 = g_detail_multi_table_t.imefl005 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeflent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imee_m.imee001
            LET l_field_keys[02] = 'imefl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.imefl001
            LET l_var_keys[03] = g_imee_m.imee003
            LET l_field_keys[03] = 'imefl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.imefl002
            LET l_var_keys[04] = g_imef_d[l_ac].imef003
            LET l_field_keys[04] = 'imefl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.imefl003
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'imefl004'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.imefl004
            LET l_vars[01] = g_imef_d[l_ac].imefl005
            LET l_fields[01] = 'imefl005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imefl_t')
         END IF 

               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ##ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM imef_t
                WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001 AND
                                          imef002 = g_imee_m.imee003 AND

                      imef003 = g_imef_d_t.imef003

                  
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point  
                  
               IF SQLCA.sqlcode THEN
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "imef_t",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'imeflent'
                  LET l_var_keys_bak[01] = g_enterprise
                  LET l_field_keys[02] = 'imefl001'
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.imefl001
                  LET l_field_keys[03] = 'imefl002'
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.imefl002
                  LET l_field_keys[04] = 'imefl003'
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.imefl003
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'imefl_t')

                  #add-point:單身刪除後 name="input.body.a_delete"
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aimi093_bcl
               LET l_count = g_imef_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imee_m.imee001
               LET gs_keys[2] = g_imee_m.imee003
               LET gs_keys[3] = g_imef_d_t.imef003

            END IF 
 
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2 name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
                              CALL aimi093_delete_b('imef_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_imef_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imef003
            #add-point:BEFORE FIELD imef003 name="input.b.page1.imef003"
            {<point name="input.b.page1.imef003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imef003
            
            #add-point:AFTER FIELD imef003 name="input.a.page1.imef003"
            {<point name="input.a.page1.imef003" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imef003
            #add-point:ON CHANGE imef003 name="input.g.page1.imef003"
            {<point name="input.g.page1.imef003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imefl005
            #add-point:BEFORE FIELD imefl005 name="input.b.page1.imefl005"
            {<point name="input.b.page1.imefl005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imefl005
            
            #add-point:AFTER FIELD imefl005 name="input.a.page1.imefl005"
            {<point name="input.a.page1.imefl005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imefl005
            #add-point:ON CHANGE imefl005 name="input.g.page1.imefl005"
            {<point name="input.g.page1.imefl005" />}
            #END add-point 



                  #Ctrlp:input.c.page1.imef003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imef003
            #add-point:ON ACTION controlp INFIELD imef003 name="input.c.page1.imef003"
            {<point name="input.c.page1.imef003" />}
            #END add-point


         #Ctrlp:input.c.page1.imefl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imefl005
            #add-point:ON ACTION controlp INFIELD imefl005 name="input.c.page1.imefl005"
            {<point name="input.c.page1.imefl005" />}
            #END add-point



 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_imef_d[l_ac].* = g_imef_d_t.*
               CLOSE aimi093_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_imef_d[l_ac].imef003 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_imef_d[l_ac].* = g_imef_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
    
               UPDATE imef_t SET (imef001,imef002,imef003) = (g_imee_m.imee001,g_imee_m.imee003,g_imef_d[l_ac].imef003)
                WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001 
                  AND imef002 = g_imee_m.imee003 

                  AND imef003 = g_imef_d_t.imef003 #項次   

               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_imef_d[l_ac].* = g_imef_d_t.*
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imef_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_imef_d[l_ac].* = g_imef_d_t.*                     
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imef_t",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imee_m.imee001
               LET gs_keys_bak[1] = g_imee001_t
               LET gs_keys[2] = g_imee_m.imee003
               LET gs_keys_bak[2] = g_imee003_t
               LET gs_keys[3] = g_imef_d[g_detail_idx].imef003
               LET gs_keys_bak[3] = g_imef_d_t.imef003
               CALL aimi093_update_b('imef_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_imee_m.imee001 = g_detail_multi_table_t.imefl001 AND
         g_imee_m.imee003 = g_detail_multi_table_t.imefl002 AND
         g_imef_d[l_ac].imef003 = g_detail_multi_table_t.imefl003 AND
         g_imef_d[l_ac].imefl005 = g_detail_multi_table_t.imefl005 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeflent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imee_m.imee001
            LET l_field_keys[02] = 'imefl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.imefl001
            LET l_var_keys[03] = g_imee_m.imee003
            LET l_field_keys[03] = 'imefl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.imefl002
            LET l_var_keys[04] = g_imef_d[l_ac].imef003
            LET l_field_keys[04] = 'imefl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.imefl003
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'imefl004'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.imefl004
            LET l_vars[01] = g_imef_d[l_ac].imefl005
            LET l_fields[01] = 'imefl005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imefl_t')
         END IF 

                     LET g_log1 = util.JSON.stringify(g_imee_m),util.JSON.stringify(g_imef_d_t)
                     LET g_log2 = util.JSON.stringify(g_imee_m),util.JSON.stringify(g_imef_d[l_ac])
                     IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aimi093_unlock_b("imef_t","1")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
            
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point   
              
         #add-point:page自定義行為 name="input.page.action"
         {<point name="input.page.action"/>}
         #end add-point
 
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_imef_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_imef_d.getLength()+1
            
      END INPUT
      

   

      
      #add-point:input段more input  name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD imee001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD imef003

            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
{</section>}
 
{<section id="aimi093.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aimi093_show()
   #add-point:show段define name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   DEFINE l_sql     STRING
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:Function前置處理  name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
  
   DISPLAY BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_imee_m.imeestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE



  
   IF g_bfill = "Y" THEN
      CALL aimi093_b_fill()                 #單身
   END IF
   
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)



 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL aimi093_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  



 
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_imef_d.getLength()
      
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   

   
    
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="aimi093.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aimi093_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE imee_t.imee001 
   DEFINE l_oldno     LIKE imee_t.imee001 
   DEFINE l_newno02     LIKE imee_t.imee003 
   DEFINE l_oldno02     LIKE imee_t.imee003 

   DEFINE l_master    RECORD LIKE imee_t.*
   DEFINE l_detail    RECORD LIKE imef_t.*
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
      
   IF g_imee_m.imee001 IS NULL
   OR g_imee_m.imee003 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   LET g_imee001_t = g_imee_m.imee001
   LET g_imee003_t = g_imee_m.imee003

   
   LET g_imee_m.imee001 = ""
   LET g_imee_m.imee003 = ""

    
   CALL aimi093_set_entry('a')
   CALL aimi093_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_imee_m.imeeownid = g_user
      LET g_imee_m.imeeowndp = g_dept
      LET g_imee_m.imeecrtid = g_user
      LET g_imee_m.imeecrtdp = g_dept 
      LET g_imee_m.imeecrtdt = cl_get_current()
      LET g_imee_m.imeemodid = g_user
      LET g_imee_m.imeemoddt = cl_get_current()
      LET g_imee_m.imeestus = 'Y'



   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aimi093_input("r")
   
   
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL aimi093_msgcentre_notify('reproduce')
   
END FUNCTION
{</section>}
 
{<section id="aimi093.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aimi093_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE imef_t.*

   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
      
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aimi093_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM imef_t
    WHERE imefent = g_enterprise AND imef001 = g_imee001_t
    AND imef002 = g_imee003_t

    INTO TEMP aimi093_detail
   
   #將key修正為調整後   
   UPDATE aimi093_detail 
      #更新key欄位
      SET imef001 = g_imee_m.imee001
          , imef002 = g_imee_m.imee003

      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO imef_t SELECT * FROM aimi093_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "Reproduce",SQLERRMESSAGE  
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimi093_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 

 
   #多語言複製段落
      #應用 a38 樣板自動產生(Version:6)
   #單身多語言複製
   DROP TABLE aimi093_detail_lang
   
   #add-point:單身複製前1 name="detail_reproduce.body.lang0.b_insert"
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE & INSERT 
   SELECT * FROM imefl_t 
    WHERE imeflent = g_enterprise AND imefl001 = g_imee001_t
      AND imefl002 = g_imee003_t
     INTO TEMP aimi093_detail_lang
 
   #將key修正為調整後   
   UPDATE aimi093_detail_lang 
      #更新key欄位
      SET imefl001 = g_imee_m.imee001
          , imefl002 = g_imee_m.imee003
  
   #add-point:單身修改前 name="detail_reproduce.body.lang0.b_update"
   {<point name="detail_reproduce.body.lang0.b_update"/>}
   #end add-point   
  
   #將資料塞回原table   
   INSERT INTO imefl_t SELECT * FROM aimi093_detail_lang
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.lang0.table1.m_insert"
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimi093_detail_lang
   
   #add-point:單身複製後1 name="detail_reproduce.lang0.table1.a_insert"
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point



   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_imee001_t = g_imee_m.imee001
   LET g_imee003_t = g_imee_m.imee003

   
   DROP TABLE aimi093_detail
   
END FUNCTION
{</section>}
 
{<section id="aimi093.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aimi093_delete()
   #add-point:delete段define name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
      
   IF g_imee_m.imee001 IS NULL
   OR g_imee_m.imee003 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002,g_imee_m.imee004_desc,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp_desc,g_imee_m.imeemodid_desc
   
   #檢查是否允許此動作
   IF NOT aimi093_action_chk() THEN
      RETURN
   END IF
   
   CALL aimi093_show()
   
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.imeel001 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002 = ' '
LET g_master_multi_table_t.imeel004 = g_imee_m.imeel004
LET g_master_multi_table_t.imeel005 = g_imee_m.imeel005
LET g_master_multi_table_t.imeel001_idx2 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002_idx2 = g_imee_m.imee003
LET g_master_multi_table_t.imeel004_2_idx2 = g_imee_m.imeel004_2

 
   OPEN aimi093_cl USING g_enterprise,g_imee_m.imee001
                                                       ,g_imee_m.imee003

   IF SQLCA.SQLCODE THEN   #(ver:32)
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aimi093_cl:" 
      LET g_errparam.code   = SQLCA.SQLCODE   #(ver:32)
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   FETCH aimi093_cl INTO g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002              #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_imee_m.imee001,":",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL aimi093_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 


 
  
      #資料備份
      LET g_imee001_t = g_imee_m.imee001
      LET g_imee003_t = g_imee_m.imee003

      
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imee_t
       WHERE imeeent = g_enterprise AND imee001 = g_imee_m.imee001
         AND imee003 = g_imee_m.imee003

      
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL s_transaction_end('N','0')
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_imee_m.imee001,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'imeelent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.imeel001_idx2
   LET l_field_keys[02] = 'imeel001'
   LET l_var_keys_bak[03] = g_master_multi_table_t.imeel002_idx2
   LET l_field_keys[03] = 'imeel002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'imeel_t')

      
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imef_t
       WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001
         AND imef002 = g_imee_m.imee003

         
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
 
      IF SQLCA.sqlcode THEN
         CALL s_transaction_end('N','0')
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "imef_t",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF       
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point      
                                                               

 
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_imee_m)   #(ver:32)
      IF NOT cl_log_modified_record(g_log1,'') THEN   #(ver:32)
         CLOSE aimi093_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
 
      CLEAR FORM
      CALL g_imef_d.clear() 

     
      CALL aimi093_ui_browser_refresh()  
      CALL aimi093_ui_headershow()  
      CALL aimi093_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aimi093_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL aimi093_browser_fill()
      END IF
       
   END IF
 
   CLOSE aimi093_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aimi093_msgcentre_notify('delete')
    
END FUNCTION
{</section>}
 
{<section id="aimi093.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aimi093_b_fill()
   #add-point:b_fill段define name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
      
   CALL g_imef_d.clear()    #g_imef_d 單頭及單身 

 
   #add-point:b_fill段define name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT imef003  FROM imef_t",   
               " INNER JOIN imee_t ON imee001 = imef001 ",
               " AND imee003 = imef002 ",

               " LEFT JOIN imefl_t ON imeflent = "||g_enterprise||" AND imee001 = imefl001 AND imee003 = imefl002 AND imef003 = imefl003 AND imefl004 = '",g_dlang,"'",
               
               " WHERE imefent=? AND imef001=? AND imef002=?"
 
   IF NOT cl_null(g_wc_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table1 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY imef003"
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料   
   PREPARE aimi093_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR aimi093_pb
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
#  OPEN b_fill_cs USING g_enterprise,g_imee_m.imee001,g_imee_m.imee003   #(ver:32)
                                            
   FOREACH b_fill_cs USING g_enterprise,g_imee_m.imee001,g_imee_m.imee003 INTO g_imef_d[l_ac].imef003   #(ver:32)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充 name="b_fill.fill"
      {<point name="b_fill.fill"/>}
      #end add-point
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   

   
   CALL g_imef_d.deleteElement(g_imef_d.getLength())

 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aimi093_pb

   
   
END FUNCTION
{</section>}
 
{<section id="aimi093.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aimi093_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
      
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point  
      DELETE FROM imef_t
       WHERE imefent = g_enterprise AND
         imef001 = ps_keys_bak[1] AND imef002 = ps_keys_bak[2] AND imef003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:delete_b段刪除後 name="delete_b.a_delete"
      {<point name="delete_b.a_delete"/>}
      #end add-point  
      RETURN
   END IF
   

   
END FUNCTION
{</section>}
 
{<section id="aimi093.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aimi093_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
      
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前 name="insert_b.b_insert"
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point  
      INSERT INTO imef_t
                  (imefent,
                   imef001,imef002,
                   imef003
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   )
      #add-point:insert_b段新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "imef_t",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:insert_b段新增後 name="insert_b.a_insert"
      {<point name="insert_b.a_insert"/>}
      #end add-point  
   END IF
   

   
END FUNCTION
{</section>}
 
{<section id="aimi093.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aimi093_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
      
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "imef_t" THEN
      #add-point:update_b段修改前 name="update_b.b_update"
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point  
      UPDATE imef_t 
         SET (imef001,imef002,
              imef003
              ) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ) 
         WHERE imefent = g_enterprise AND
               imef001 = ps_keys_bak[1] AND imef002 = ps_keys_bak[2] AND imef003 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL s_transaction_end('N','0')
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "imef_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            CALL s_transaction_end('N','0')
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "imef_t",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            
         OTHERWISE
            LET l_new_key[01] = g_enterprise
LET l_old_key[01] = g_enterprise
LET l_field_key[01] = 'imeflent'
LET l_new_key[02] = ps_keys[1] 
LET l_old_key[02] = ps_keys_bak[1] 
LET l_field_key[02] = 'imefl001'
LET l_new_key[03] = ps_keys[2] 
LET l_old_key[03] = ps_keys_bak[2] 
LET l_field_key[03] = 'imefl002'
LET l_new_key[04] = ps_keys[3] 
LET l_old_key[04] = ps_keys_bak[3] 
LET l_field_key[04] = 'imefl003'
LET l_new_key[05] = g_dlang 
LET l_old_key[05] = g_dlang 
LET l_field_key[05] = 'imefl004'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'imefl_t')
      END CASE
      #add-point:update_b段修改後 name="update_b.a_update"
      {<point name="update_b.a_update"/>}
      #end add-point  
      RETURN
   END IF
   

   
END FUNCTION
{</section>}
 
{<section id="aimi093.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aimi093_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>}
   #end add-point   
 
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
      
   #先刷新資料
   #CALL aimi093_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "imef_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aimi093_bcl USING g_enterprise,
                                       g_imee_m.imee001,g_imee_m.imee003,g_imef_d[g_detail_idx].imef003
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aimi093_bcl",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         RETURN FALSE
      END IF
   
   END IF
                                    

   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="aimi093.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aimi093_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>}
   #end add-point  
 
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
      
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aimi093_bcl
   END IF
   

 
END FUNCTION
{</section>}
 
{<section id="aimi093.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aimi093_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>}
   #end add-point       
 
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
      
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("imee001,imee003",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="aimi093.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aimi093_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
      
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("imee001,imee003",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="aimi093.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aimi093_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
{</section>}
 
{<section id="aimi093.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aimi093_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
{</section>}
 
{<section id="aimi093.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aimi093_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:Function前置處理  name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " imee001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " imee003 = '", g_argv[02], "' AND "
   END IF

   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
{</section>}
 
{<section id="aimi093.idx_chk" >}
#+ 單身筆數變更
PRIVATE FUNCTION aimi093_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>}
   #end add-point  
 
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
      
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_imef_d.getLength() THEN
         LET g_detail_idx = g_imef_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_imef_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_imef_d.getLength() TO FORMONLY.cnt
   END IF
   

 
END FUNCTION
{</section>}
 
{<section id="aimi093.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION aimi093_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   {<point name="modify_detail_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "imef003"

      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
{</section>}
 
{<section id="aimi093.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION aimi093_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_imee_m.imee001 IS NULL
      OR g_imee_m.imee003 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aimi093_cl USING g_enterprise,g_imee_m.imee001,g_imee_m.imee003
   IF STATUS THEN
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aimi093_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002,g_imee_m.imee004_desc,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp_desc,g_imee_m.imeemodid_desc
   
 
   #檢查是否允許此動作
   IF NOT aimi093_action_chk() THEN
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002
 
   CASE g_imee_m.imeestus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_imee_m.imeestus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_imee_m.imeestus = lc_state OR cl_null(lc_state) THEN
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_imee_m.imeemodid = g_user
   LET g_imee_m.imeemoddt = cl_get_current()
   LET g_imee_m.imeestus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE imee_t 
      SET (imeestus,imeemodid,imeemoddt) 
        = (g_imee_m.imeestus,g_imee_m.imeemodid,g_imee_m.imeemoddt)     
    WHERE imeeent = g_enterprise AND imee001 = g_imee_m.imee001
      AND imee003 = g_imee_m.imee003
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002,g_imee_m.imee004_desc,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp_desc,g_imee_m.imeemodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aimi093_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aimi093_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION



{</section>}
 
{<section id="aimi093.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION aimi093_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_imee_m.imee001
   LET g_pk_array[1].column = 'imee001'
   LET g_pk_array[2].values = g_imee_m.imee003
   LET g_pk_array[2].column = 'imee003'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION



{</section>}
 
{<section id="aimi093.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION aimi093_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aimi093_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_imee_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION



{</section>}
 
{<section id="aimi093.action_chk" >}
PRIVATE FUNCTION aimi093_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>}
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="aimi093.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 

