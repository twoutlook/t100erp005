#該程式未解開Section, 採用最新樣板產出!
{<section id="aimi094.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2015-08-25 17:15:20), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000037
#+ Filename...: aimi094
#+ Description: 規則化規格設定作業
#+ Creator....: 05384(2015-08-20 15:08:57)
#+ Modifier...: 05384 -SD/PR-

{</section>}

{<section id="aimi094.global" >}
#應用 i08 樣板自動產生(Version:30)
#add-point:填寫註解說明
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用)
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
    
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_imeg_m        RECORD
       imeg001 LIKE imeg_t.imeg001, 
   imegl004 LIKE imegl_t.imegl004, 
   imegl005 LIKE imegl_t.imegl005, 
   imegstus LIKE imeg_t.imegstus, 
   imeg004 LIKE imeg_t.imeg004, 
   imeg004_desc LIKE type_t.chr80, 
   imeg003 LIKE imeg_t.imeg003, 
   imegl004_2 LIKE type_t.chr500, 
   imeg006 LIKE imeg_t.imeg006, 
   imeg007 LIKE imeg_t.imeg007, 
   imeg008 LIKE imeg_t.imeg008, 
   imeg009 LIKE imeg_t.imeg009, 
   imeg010 LIKE imeg_t.imeg010, 
   imeg011 LIKE imeg_t.imeg011, 
   imeg012 LIKE imeg_t.imeg012, 
   imeg005 LIKE imeg_t.imeg005, 
   imegownid LIKE imeg_t.imegownid, 
   imegownid_desc LIKE type_t.chr80, 
   imegowndp LIKE imeg_t.imegowndp, 
   imegowndp_desc LIKE type_t.chr80, 
   imegcrtid LIKE imeg_t.imegcrtid, 
   imegcrtid_desc LIKE type_t.chr80, 
   imegcrtdp LIKE imeg_t.imegcrtdp, 
   imegcrtdp_desc LIKE type_t.chr80, 
   imegcrtdt LIKE imeg_t.imegcrtdt, 
   imegmodid LIKE imeg_t.imegmodid, 
   imegmodid_desc LIKE type_t.chr80, 
   imegmoddt LIKE imeg_t.imegmoddt, 
   imeg002 LIKE imeg_t.imeg002
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_imeh_d        RECORD
       imeh003 LIKE imeh_t.imeh003, 
   imehl005 LIKE imehl_t.imehl005
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_imeg_m          type_g_imeg_m
DEFINE g_imeg_m_t        type_g_imeg_m
DEFINE g_imeg_m_o        type_g_imeg_m
 
   DEFINE g_imeg001_t LIKE imeg_t.imeg001
DEFINE g_imeg003_t LIKE imeg_t.imeg003
 
 
#DEFINE g_imeg003_t        LIKE imeg_t.imeg003
DEFINE g_imeg004_t        LIKE imeg_t.imeg004
#DEFINE g_imeg001_t      LIKE imeg_t.imeg001
 
DEFINE g_imeh_d          DYNAMIC ARRAY OF type_g_imeh_d
DEFINE g_imeh_d_t        type_g_imeh_d
DEFINE g_imeh_d_o        type_g_imeh_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_imeg001 LIKE imeg_t.imeg001,
      b_imeg003 LIKE imeg_t.imeg003,
      b_imeg004 LIKE imeg_t.imeg004
       END RECORD
      
DEFINE g_master_multi_table_t    RECORD
      imegl001 LIKE imegl_t.imegl001,
      imegl002 LIKE imegl_t.imegl002,
      imegl004 LIKE imegl_t.imegl004,
      imegl005 LIKE imegl_t.imegl005,
      imegl001_idx2 LIKE imegl_t.imegl001,
      imegl002_idx2 LIKE imegl_t.imegl002,
      imegl004_2_idx2 LIKE imegl_t.imegl004
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      imehl001 LIKE imehl_t.imehl001,
      imehl002 LIKE imehl_t.imehl002,
      imehl003 LIKE imehl_t.imehl003,
      imehl004 LIKE imehl_t.imehl004,
      imehl005 LIKE imehl_t.imehl005
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_searchtype          LIKE type_t.chr200
                                                   
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_root_search         BOOLEAN
DEFINE g_browser_root        DYNAMIC ARRAY OF INTEGER      #root資料所在
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING                        #確定當下點擊的單身
 
DEFINE g_wc_table1           STRING                        #第1個單身table所使用的g_wc
 
 
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="aimi094.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aim","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT imeg001,'','',imegstus,imeg004,'',imeg003,'',imeg006,imeg007,imeg008, 
       imeg009,imeg010,imeg011,imeg012,imeg005,imegownid,'',imegowndp,'',imegcrtid,'',imegcrtdp,'',imegcrtdt, 
       imegmodid,'',imegmoddt,imeg002", 
                      " FROM imeg_t",
                      " WHERE imegent= ? AND imeg001=? AND imeg003=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimi094_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.imeg001,t0.imegstus,t0.imeg004,t0.imeg003,t0.imeg006,t0.imeg007, 
       t0.imeg008,t0.imeg009,t0.imeg010,t0.imeg011,t0.imeg012,t0.imeg005,t0.imegownid,t0.imegowndp,t0.imegcrtid, 
       t0.imegcrtdp,t0.imegcrtdt,t0.imegmodid,t0.imegmoddt,t0.imeg002,t1.imegl004 ,t2.ooag011 ,t3.ooefl003 , 
       t4.ooag011 ,t5.ooefl003 ,t6.ooag011",
               " FROM imeg_t t0",
                              " LEFT JOIN imegl_t t1 ON t1.imeglent="||g_enterprise||" AND t1.imegl001=imeg001 AND t1.imegl002=imeg004 AND t1.imegl003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=imegownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=imegowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=imegcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=imegcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=imegmodid  ",
 
               " WHERE t0.imegent = " ||g_enterprise|| " AND t0.imeg001 = ? AND t0.imeg003 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aimi094_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aimi094 WITH FORM cl_ap_formpath("aim",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aimi094_init()   
 
      #進入選單 Menu (="N")
      CALL aimi094_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aimi094
      
   END IF 
   
   CLOSE aimi094_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="aimi094.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aimi094_init()
   #add-point:init段define name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point    
  
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
  
   LET g_bfill = "Y"
   LET g_searchtype = "3"
   LET g_error_show = 1
      CALL cl_set_combo_scc_part('imegstus','17','N,Y')
 
      CALL cl_set_combo_scc('imeg006','48') 
   CALL cl_set_combo_scc('imeg008','51') 
 
   
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   CALL aimi094_default_search()
    
END FUNCTION

{</section>}

{<section id="aimi094.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aimi094_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE la_param  RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
      
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_imeg_m.* TO NULL
         CALL g_imeh_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aimi094_init()
      END IF
   
      CALL aimi094_browser_fill()
      
      #temp CALL cl_notice()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype 

            BEFORE INPUT
         END INPUT
            
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aimi094_fetch('') # reload data
               #LET g_detail_idx = 1
               CALL aimi094_ui_detailshow() #Setting the current row 
      
               CALL aimi094_idx_chk()
               #NEXT FIELD imeh003
               
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL aimi094_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
         
         END DISPLAY
        
         DISPLAY ARRAY g_imeh_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               CALL aimi094_idx_chk()
               
            BEFORE DISPLAY
               LET g_current_page = 1
               CALL aimi094_idx_chk()
               
            
               
         END DISPLAY
        
 
      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aimi094_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aimi094_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aimi094_idx_chk()
            
            #NEXT FIELD imeh003
      
         #Browser用Action
      
         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            INITIALIZE g_wc_table1 TO NULL
 
            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT aimi094_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser.getLength() = 0 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -100 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
            END IF   
            LET g_action_choice = "searchdata"
            EXIT DIALOG
      
         #進階搜尋
         ON ACTION advancesearch    
            
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aimi094_statechange()
      
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_imeh_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
            
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF
       
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_imeg001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aimi094_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aimi094_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aimi094_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aimi094_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aimi094_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aimi094_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aimi094_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aimi094_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aimi094_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION

{</section>}

{<section id="aimi094.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aimi094_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   {<point name="browser_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   {<point name="browser_search.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="browser_search.pre_function"
   {<point name="browser_search.pre_function"/>}
   #end add-point
      
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "searchcol" 
      LET g_errparam.code   = "std-00005" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY imeg001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aimi094_browser_fill()
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="aimi094.browser_fill" >}
#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION aimi094_browser_fill()
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="browser_fill.pre_function"
   {<point name="browser_fill.pre_function"/>}
   #end add-point
      
   CALL g_browser.clear()
   CLEAR FORM
   
   DROP TABLE aimi094_tmp
   
   #Create temp table
   CREATE TEMP TABLE aimi094_tmp
   (
         imeg001 VARCHAR(500),
   imeg003 VARCHAR(500),
   imeg004 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   LET g_root_search = FALSE
   IF (g_wc.trim() = "1=1"  OR cl_null(g_wc))  AND 
      (g_wc2.trim() = "1=1" OR cl_null(g_wc2)) THEN
      #未輸入條件時則只查找root節點
      LET g_wc = " imeg003 = imeg004 "
      LET g_root_search = TRUE
   END IF
 
   IF cl_null(g_wc2) OR g_wc2.trim() = "1=1" THEN
      LET g_sql = "SELECT t0.imeg001,t0.imeg003,t0.imeg004 ",
                  " FROM imeg_t t0",
                  " WHERE imegent = " ||g_enterprise|| " AND ",g_wc
   ELSE
      LET g_sql = "SELECT t0.imeg001,t0.imeg003,t0.imeg004 ",
                  " FROM imeg_t t0",
                  " INNER JOIN imeh_t ",
                  " ON imeh001 = imeg001 ",
 
                  " WHERE imegent = " ||g_enterprise|| " AND ", g_wc, " AND ", g_wc2
   END IF
   LET g_sql = g_sql ,cl_sql_add_filter("imeg_t")
  
   #LET g_sql = cl_sql_add_tabid(g_sql,"imeg_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料   
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
 
   #搜尋建構樹所需的節點
   CASE g_searchtype
      WHEN "1" #上推
         CALL aimi094_match_node(g_wc,g_searchtype) 
      WHEN "2" #下展
         #CALL aimi094_find_speed_tbl(g_wc,g_searchtype) 
         CALL aimi094_match_node(g_wc,g_searchtype) 
      WHEN "3" #全部
         CALL aimi094_match_node(g_wc,g_searchtype) 
   END CASE
 
   CALL aimi094_browser_create(g_searchtype)
   
   FREE master_ext
     
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
     
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
     
END FUNCTION

{</section>}

{<section id="aimi094.match_node" >}
PRIVATE FUNCTION aimi094_match_node(p_wc,p_type)
   #add-point:match_node段define name="match_node.define_customerization"
   {<point name="match_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位   
             imeg001 VARCHAR(500),
   imeg003 VARCHAR(500),
   imeg004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位   
             imeg001 VARCHAR(500),
   imeg003 VARCHAR(500),
   imeg004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   #add-point:match_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="match_node.define"
   {<point name="match_node.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="match_node.pre_function"
   {<point name="match_node.pre_function"/>}
   #end add-point
      
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0"
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null('imeg004') THEN
      LET ls_code = '0'
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO aimi094_tmp (imeg001,imeg003,imeg004,exp_code) VALUES (?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end('Y','0')
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      EXECUTE master_tmp USING l_bstmp.*,ls_code
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT t0.imeg001,t0.imeg003,t0.imeg004 ",
                  " FROM imeg_t t0",
                  " WHERE imegent = " ||g_enterprise|| " AND imeg003 = ? ",
                  " AND imeg001 = ? ",
                  cl_sql_add_filter("imeg_t")
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].imeg003) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].imeg004
                                           ,l_child_list[1].imeg001
                                           INTO l_bstmp.*
         FREE master_getparent_up
      
      #確定該節點是否存在於temp table中
         
         IF STATUS = 0 AND aimi094_tmp_tbl_chk(l_bstmp.imeg003,ls_code2
                     ,l_bstmp.imeg001
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      
      END WHILE
   
   END FOREACH  
   
   FREE master_tmp
   
   CALL s_transaction_end('Y','0')
 
END FUNCTION

{</section>}

{<section id="aimi094.tmp_tbl_chk" >}
#+ TEMP TABLE CHK
PRIVATE FUNCTION aimi094_tmp_tbl_chk(ps_id,pi_code,ps_type)
   #add-point:tmp_tbl_chk段define name="tmp_tbl_chk.define_customerization"
   {<point name="tmp_tbl_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10
   #add-point:tmp_tbl_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="tmp_tbl_chk.define"
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="tmp_tbl_chk.pre_function"
   {<point name="tmp_tbl_chk.pre_function"/>}
   #end add-point
      
   LET ls_id = ps_id
   LET ls_type = ps_type
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(1) FROM aimi094_tmp ", 
               " WHERE imeg003 = ? "
                ," AND imeg001 = ? "
 
   PREPARE aimi094_get_cnt FROM g_sql
   EXECUTE aimi094_get_cnt USING ls_id 
                                     ,ls_type
                                     INTO li_cnt
   FREE aimi094_get_cnt
                                     
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
    
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM aimi094_tmp  ",
                  " WHERE imeg003 = ? " 
                   ," AND imeg001 = ? "
 
      PREPARE aimi094_chk_exp FROM g_sql
      
      EXECUTE aimi094_chk_exp USING ls_id 
                                        ,ls_type
                                        INTO li_code
      FREE aimi094_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE aimi094_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE imeg003 = ? "
                      ," AND imeg001 = ? "
         PREPARE aimi094_upd_exp FROM g_sql
         EXECUTE aimi094_upd_exp USING ls_id ,ls_type
         FREE aimi094_upd_exp
         
      END IF      
      
      RETURN FALSE
   END IF
 
END FUNCTION

{</section>}

{<section id="aimi094.browser_expand" >}
#+ Tree子節點展開
PRIVATE FUNCTION aimi094_browser_expand(p_id)
   #add-point:browser_expand段define name="browser_expand.define_customerization"
   {<point name="browser_expand.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         STRING
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   #add-point:browser_expand段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_expand.define"
   {<point name="browser_expand.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="browser_expand.pre_function"
   {<point name="browser_expand.pre_function"/>}
   #end add-point
      
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_imeg003
   LET l_typevalue = g_browser[p_id].b_imeg001
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "aimi094_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "imeg_t"
         LET ls_exp_code = "'2'"
   END CASE
   
   LET l_sql = " SELECT DISTINCT '','','','FALSE','','',",ls_exp_code,",imeg001,imeg003,imeg004",
               " FROM   ",ls_source,
               
               " WHERE  imeg004 = '", l_keyvalue,
               "' AND   imeg003 <> imeg004",
               " AND  imeg001 = '", l_typevalue,"'", 
               " ORDER BY imeg003"
   
   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = l_id
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].* 
      #pid=父節點id
      LET g_browser[l_id].b_pid  = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id   = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_imeg003 = g_browser[l_id].b_imeg003 CLIPPED
      CALL aimi094_desc_show(l_id)
      LET g_browser[l_id].b_hasC = aimi094_chk_hasC(l_id)
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   
   FREE tree_expand
 
END FUNCTION

{</section>}

{<section id="aimi094.browser_create" >}
PRIVATE FUNCTION aimi094_browser_create(p_type)
   #add-point:browser_create name="browser_create.define_customerization"
   {<point name="browser_create.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_create.define"
   {<point name="browser_create.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="browser_create.pre_function"
   {<point name="browser_create.pre_function"/>}
   #end add-point
      
   #先找出所有的帳別資料
   LET g_sql = " SELECT DISTINCT imeg001 FROM aimi094_tmp ORDER BY imeg001"
   PREPARE master_type FROM g_sql
   DECLARE master_typecur CURSOR FOR master_type
   
   INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   FOREACH master_typecur INTO g_browser[l_ac].b_imeg001
      #確定root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      LET g_browser[l_ac].b_imeg003  = g_browser[l_ac].b_imeg001
      LET g_browser[l_ac].b_imeg001 = g_browser[l_ac].b_imeg001
      LET g_browser[l_ac].b_pid = '0' CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      LET g_sql = " SELECT DISTINCT t0.imeg001,t0.imeg003,t0.imeg004,exp_code FROM aimi094_tmp a ",
                  
                  " WHERE ",
                  "a.imeg001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(1) FROM aimi094_tmp b WHERE a.imeg004 = b.imeg003 ", 
                  " AND a.imeg001 = b.imeg001",
                  ") = 0 OR ", 
                  " a.imeg003 = a.imeg004 )", 
                  " ORDER BY a.imeg003"
 
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      OPEN master_getLV2cur USING g_browser[l_ac-1].b_imeg001
      
      LET g_cnt = l_ac
      
      FOREACH master_getLV2cur INTO g_browser[g_cnt].b_imeg001,g_browser[g_cnt].b_imeg003,g_browser[g_cnt].b_imeg004, 
          g_browser[g_cnt].b_expcode 
         #去除多餘空白
         #LET g_browser[g_cnt].b_imeg003 = g_browser[g_cnt].b_imeg003 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = aimi094_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = aimi094_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = aimi094_find_node(g_cnt)
         #END CASE
         LET g_browser[g_cnt].b_hasC = TRUE
 
         LET g_cnt = g_cnt + 1   
         
         IF g_cnt > g_max_rec AND g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = g_cnt
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            EXIT FOREACH
         END IF
      END FOREACH
      LET l_ac = g_browser.getLength()
      
      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
         EXIT FOREACH
      END IF
   END FOREACH
   
   LET g_error_show = 0
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_imeg003) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL aimi094_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
   
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
   
   FREE master_getLV2
   
END FUNCTION

{</section>}

{<section id="aimi094.desc_show" >}
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION aimi094_desc_show(pi_ac)
   #add-point:desc_show段define name="desc_show.define_customerization"
   {<point name="desc_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   #add-point:desc_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="desc_show.define"
   {<point name="desc_show.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="desc_show.pre_function"
   {<point name="desc_show.pre_function"/>}
   #end add-point
      
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理 name="desc_show.show"
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
   
END FUNCTION

{</section>}

{<section id="aimi094.find_node" >}
#+ 尋找符合條件的節點
PRIVATE FUNCTION aimi094_find_node(pi_ac)
   #add-point:find_node段define name="find_node.define_customerization"
   {<point name="find_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   DEFINE ls_pid  STRING
   #add-point:find_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="find_node.define"
   {<point name="find_node.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="find_node.pre_function"
   {<point name="find_node.pre_function"/>}
   #end add-point
      
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,t0.imeg001,t0.imeg003,t0.imeg004 ",
               " FROM aimi094_tmp ",
               " WHERE imeg004 = ? AND imeg004 <> imeg003",
               " ORDER BY imeg003"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_browser[li_idx].b_imeg003
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL aimi094_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = aimi094_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION

{</section>}

{<section id="aimi094.chk_hasC" >}
#+ QBE資料查詢
PRIVATE FUNCTION aimi094_chk_hasC(pi_id)
   #add-point:chk_hasC段define name="chk_hasC.define_customerization"
   {<point name="chk_hasC.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   #add-point:chk_hasC段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="chk_hasC.define"
   {<point name="chk_hasC.define"/>}
   #end add-point
 
   #add-point:Function前置處理  name="chk_hasC.pre_function"
   {<point name="chk_hasC.pre_function"/>}
   #end add-point
      
   LET g_sql = "SELECT COUNT(imeg004) FROM aimi094_tmp ",
               " WHERE ",
                "imeg004 = ? AND ",
                "exp_code <> '-1' AND imeg003 <> imeg004 "
                 ," AND ",
                "imeg001 = ?"
 
   PREPARE aimi094_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(1) FROM imeg_t ",
               " WHERE imegent = " ||g_enterprise|| " AND ",
               "imeg003 <> imeg004 AND ",
               "imeg004 = ? "
                ," AND ",
               "imeg001 = ?",
               cl_sql_add_filter("imeg_t")     
   
   PREPARE aimi094_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE aimi094_temp_chk 
           USING g_browser[pi_id].b_imeg003
                 ,g_browser[pi_id].b_imeg001
            INTO li_cnt
         FREE aimi094_temp_chk
      WHEN 2 
         EXECUTE aimi094_master_chk 
           USING g_browser[pi_id].b_imeg003
                 ,g_browser[pi_id].b_imeg001
            INTO li_cnt
         FREE aimi094_master_chk
   END CASE
   
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION

{</section>}

{<section id="aimi094.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aimi094_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
      
   LET g_imeg_m.imeg001 = g_browser[g_current_idx].b_imeg001   
   LET g_imeg_m.imeg003 = g_browser[g_current_idx].b_imeg003   
 
   EXECUTE aimi094_master_referesh USING g_imeg_m.imeg001,g_imeg_m.imeg003 INTO g_imeg_m.imeg001,g_imeg_m.imegstus, 
       g_imeg_m.imeg004,g_imeg_m.imeg003,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009, 
       g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid,g_imeg_m.imegowndp, 
       g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid,g_imeg_m.imegmoddt, 
       g_imeg_m.imeg002,g_imeg_m.imeg004_desc,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid_desc, 
       g_imeg_m.imegcrtdp_desc,g_imeg_m.imegmodid_desc
   CALL aimi094_show()
   
END FUNCTION

{</section>}

{<section id="aimi094.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aimi094_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="aimi094.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aimi094_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
      
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_imeg001 = g_imeg_m.imeg001 
         AND g_browser[l_i].b_imeg003 = g_imeg_m.imeg003 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="aimi094.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aimi094_construct()
   #add-point:cs段define name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
      
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_imeg_m.* TO NULL
   CALL g_imeh_d.clear()        
 
   
   LET g_current_idx = 1
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON imeg001,imegl004,imegl005,imegstus,imeg004,imeg003,imegl004_2,imeg006, 
          imeg007,imeg008,imeg009,imeg010,imeg011,imeg012,imeg005,imegownid,imegowndp,imegcrtid,imegcrtdp, 
          imegcrtdt,imegmodid,imegmoddt,imeg002
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #單頭公用欄位開窗
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<imegcrtdt>>----
         AFTER FIELD imegcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<imegmoddt>>----
         AFTER FIELD imegmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imegcnfdt>>----
         
         #----<<imegpstdt>>----
 
 
 
          
         #單頭一般欄位開窗          
                  #Ctrlp:construct.c.imeg001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg001
            #add-point:ON ACTION controlp INFIELD imeg001 name="construct.c.imeg001"
            {<point name="construct.c.imeg001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg001
            #add-point:BEFORE FIELD imeg001 name="construct.b.imeg001"
            {<point name="construct.b.imeg001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg001
            
            #add-point:AFTER FIELD imeg001 name="construct.a.imeg001"
            {<point name="construct.a.imeg001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegl004
            #add-point:BEFORE FIELD imegl004 name="construct.b.imegl004"
            {<point name="construct.b.imegl004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegl004
            
            #add-point:AFTER FIELD imegl004 name="construct.a.imegl004"
            {<point name="construct.a.imegl004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imegl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegl004
            #add-point:ON ACTION controlp INFIELD imegl004 name="construct.c.imegl004"
            {<point name="construct.c.imegl004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegl005
            #add-point:BEFORE FIELD imegl005 name="construct.b.imegl005"
            {<point name="construct.b.imegl005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegl005
            
            #add-point:AFTER FIELD imegl005 name="construct.a.imegl005"
            {<point name="construct.a.imegl005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imegl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegl005
            #add-point:ON ACTION controlp INFIELD imegl005 name="construct.c.imegl005"
            {<point name="construct.c.imegl005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegstus
            #add-point:BEFORE FIELD imegstus name="construct.b.imegstus"
            {<point name="construct.b.imegstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegstus
            
            #add-point:AFTER FIELD imegstus name="construct.a.imegstus"
            {<point name="construct.a.imegstus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imegstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegstus
            #add-point:ON ACTION controlp INFIELD imegstus name="construct.c.imegstus"
            {<point name="construct.c.imegstus" />}
            #END add-point
 
 
         #Ctrlp:construct.c.imeg004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg004
            #add-point:ON ACTION controlp INFIELD imeg004 name="construct.c.imeg004"
            {<point name="construct.c.imeg004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg004
            #add-point:BEFORE FIELD imeg004 name="construct.b.imeg004"
            {<point name="construct.b.imeg004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg004
            
            #add-point:AFTER FIELD imeg004 name="construct.a.imeg004"
            {<point name="construct.a.imeg004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg003
            #add-point:ON ACTION controlp INFIELD imeg003 name="construct.c.imeg003"
            {<point name="construct.c.imeg003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg003
            #add-point:BEFORE FIELD imeg003 name="construct.b.imeg003"
            {<point name="construct.b.imeg003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg003
            
            #add-point:AFTER FIELD imeg003 name="construct.a.imeg003"
            {<point name="construct.a.imeg003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegl004_2
            #add-point:BEFORE FIELD imegl004_2 name="construct.b.imegl004_2"
            {<point name="construct.b.imegl004_2" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegl004_2
            
            #add-point:AFTER FIELD imegl004_2 name="construct.a.imegl004_2"
            {<point name="construct.a.imegl004_2" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imegl004_2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegl004_2
            #add-point:ON ACTION controlp INFIELD imegl004_2 name="construct.c.imegl004_2"
            {<point name="construct.c.imegl004_2" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg006
            #add-point:BEFORE FIELD imeg006 name="construct.b.imeg006"
            {<point name="construct.b.imeg006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg006
            
            #add-point:AFTER FIELD imeg006 name="construct.a.imeg006"
            {<point name="construct.a.imeg006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg006
            #add-point:ON ACTION controlp INFIELD imeg006 name="construct.c.imeg006"
            {<point name="construct.c.imeg006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg007
            #add-point:BEFORE FIELD imeg007 name="construct.b.imeg007"
            {<point name="construct.b.imeg007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg007
            
            #add-point:AFTER FIELD imeg007 name="construct.a.imeg007"
            {<point name="construct.a.imeg007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg007
            #add-point:ON ACTION controlp INFIELD imeg007 name="construct.c.imeg007"
            {<point name="construct.c.imeg007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg008
            #add-point:BEFORE FIELD imeg008 name="construct.b.imeg008"
            {<point name="construct.b.imeg008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg008
            
            #add-point:AFTER FIELD imeg008 name="construct.a.imeg008"
            {<point name="construct.a.imeg008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg008
            #add-point:ON ACTION controlp INFIELD imeg008 name="construct.c.imeg008"
            {<point name="construct.c.imeg008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg009
            #add-point:BEFORE FIELD imeg009 name="construct.b.imeg009"
            {<point name="construct.b.imeg009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg009
            
            #add-point:AFTER FIELD imeg009 name="construct.a.imeg009"
            {<point name="construct.a.imeg009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg009
            #add-point:ON ACTION controlp INFIELD imeg009 name="construct.c.imeg009"
            {<point name="construct.c.imeg009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg010
            #add-point:BEFORE FIELD imeg010 name="construct.b.imeg010"
            {<point name="construct.b.imeg010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg010
            
            #add-point:AFTER FIELD imeg010 name="construct.a.imeg010"
            {<point name="construct.a.imeg010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg010
            #add-point:ON ACTION controlp INFIELD imeg010 name="construct.c.imeg010"
            {<point name="construct.c.imeg010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg011
            #add-point:BEFORE FIELD imeg011 name="construct.b.imeg011"
            {<point name="construct.b.imeg011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg011
            
            #add-point:AFTER FIELD imeg011 name="construct.a.imeg011"
            {<point name="construct.a.imeg011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg011
            #add-point:ON ACTION controlp INFIELD imeg011 name="construct.c.imeg011"
            {<point name="construct.c.imeg011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg012
            #add-point:BEFORE FIELD imeg012 name="construct.b.imeg012"
            {<point name="construct.b.imeg012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg012
            
            #add-point:AFTER FIELD imeg012 name="construct.a.imeg012"
            {<point name="construct.a.imeg012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg012
            #add-point:ON ACTION controlp INFIELD imeg012 name="construct.c.imeg012"
            {<point name="construct.c.imeg012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg005
            #add-point:BEFORE FIELD imeg005 name="construct.b.imeg005"
            {<point name="construct.b.imeg005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg005
            
            #add-point:AFTER FIELD imeg005 name="construct.a.imeg005"
            {<point name="construct.a.imeg005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg005
            #add-point:ON ACTION controlp INFIELD imeg005 name="construct.c.imeg005"
            {<point name="construct.c.imeg005" />}
            #END add-point
 
 
         #Ctrlp:construct.c.imegownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegownid
            #add-point:ON ACTION controlp INFIELD imegownid name="construct.c.imegownid"
            {<point name="construct.c.imegownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegownid
            #add-point:BEFORE FIELD imegownid name="construct.b.imegownid"
            {<point name="construct.b.imegownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegownid
            
            #add-point:AFTER FIELD imegownid name="construct.a.imegownid"
            {<point name="construct.a.imegownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imegowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegowndp
            #add-point:ON ACTION controlp INFIELD imegowndp name="construct.c.imegowndp"
            {<point name="construct.c.imegowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegowndp
            #add-point:BEFORE FIELD imegowndp name="construct.b.imegowndp"
            {<point name="construct.b.imegowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegowndp
            
            #add-point:AFTER FIELD imegowndp name="construct.a.imegowndp"
            {<point name="construct.a.imegowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imegcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegcrtid
            #add-point:ON ACTION controlp INFIELD imegcrtid name="construct.c.imegcrtid"
            {<point name="construct.c.imegcrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegcrtid
            #add-point:BEFORE FIELD imegcrtid name="construct.b.imegcrtid"
            {<point name="construct.b.imegcrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegcrtid
            
            #add-point:AFTER FIELD imegcrtid name="construct.a.imegcrtid"
            {<point name="construct.a.imegcrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imegcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegcrtdp
            #add-point:ON ACTION controlp INFIELD imegcrtdp name="construct.c.imegcrtdp"
            {<point name="construct.c.imegcrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegcrtdp
            #add-point:BEFORE FIELD imegcrtdp name="construct.b.imegcrtdp"
            {<point name="construct.b.imegcrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegcrtdp
            
            #add-point:AFTER FIELD imegcrtdp name="construct.a.imegcrtdp"
            {<point name="construct.a.imegcrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegcrtdt
            #add-point:BEFORE FIELD imegcrtdt name="construct.b.imegcrtdt"
            {<point name="construct.b.imegcrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.imegmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegmodid
            #add-point:ON ACTION controlp INFIELD imegmodid name="construct.c.imegmodid"
            {<point name="construct.c.imegmodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegmodid
            #add-point:BEFORE FIELD imegmodid name="construct.b.imegmodid"
            {<point name="construct.b.imegmodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegmodid
            
            #add-point:AFTER FIELD imegmodid name="construct.a.imegmodid"
            {<point name="construct.a.imegmodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegmoddt
            #add-point:BEFORE FIELD imegmoddt name="construct.b.imegmoddt"
            {<point name="construct.b.imegmoddt" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg002
            #add-point:BEFORE FIELD imeg002 name="construct.b.imeg002"
            {<point name="construct.b.imeg002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg002
            
            #add-point:AFTER FIELD imeg002 name="construct.a.imeg002"
            {<point name="construct.a.imeg002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.imeg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg002
            #add-point:ON ACTION controlp INFIELD imeg002 name="construct.c.imeg002"
            {<point name="construct.c.imeg002" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table1 ON imeh003,imehl005
           FROM s_detail1[1].imeh003,s_detail1[1].imehl005
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.imeh003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeh003
            #add-point:ON ACTION controlp INFIELD imeh003 name="construct.c.page1.imeh003"
            {<point name="construct.c.page1.imeh003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeh003
            #add-point:BEFORE FIELD imeh003 name="construct.b.page1.imeh003"
            {<point name="construct.b.page1.imeh003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeh003
            
            #add-point:AFTER FIELD imeh003 name="construct.a.page1.imeh003"
            {<point name="construct.a.page1.imeh003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imehl005
            #add-point:BEFORE FIELD imehl005 name="construct.b.page1.imehl005"
            {<point name="construct.b.page1.imehl005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imehl005
            
            #add-point:AFTER FIELD imehl005 name="construct.a.page1.imehl005"
            {<point name="construct.a.page1.imehl005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imehl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imehl005
            #add-point:ON ACTION controlp INFIELD imehl005 name="construct.c.page1.imehl005"
            {<point name="construct.c.page1.imehl005" />}
            #END add-point
 
 
  
       
      END CONSTRUCT
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc_table1
 
 
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="aimi094.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aimi094_query()
   #add-point:query段define name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
      
   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_imeh_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   
   CALL aimi094_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_imeg_m.* TO NULL
      LET g_wc2 = " 1=1"
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      RETURN
   END IF
 
   LET g_error_show = 1
   CALL aimi094_browser_fill()
         
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF   
 
END FUNCTION

{</section>}

{<section id="aimi094.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aimi094_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
      
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf('.',1) = 0 THEN
      INITIALIZE g_imeg_m.* TO NULL
      DISPLAY BY NAME g_imeg_m.*
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
      DISPLAY '' TO FORMONLY.b_index
      RETURN
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
 
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_imeg_m.imeg001 = g_browser[g_current_idx].b_imeg001
   LET g_imeg_m.imeg003 = g_browser[g_current_idx].b_imeg003
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aimi094_master_referesh USING g_imeg_m.imeg001,g_imeg_m.imeg003 INTO g_imeg_m.imeg001,g_imeg_m.imegstus, 
       g_imeg_m.imeg004,g_imeg_m.imeg003,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009, 
       g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid,g_imeg_m.imegowndp, 
       g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid,g_imeg_m.imegmoddt, 
       g_imeg_m.imeg002,g_imeg_m.imeg004_desc,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid_desc, 
       g_imeg_m.imegcrtdp_desc,g_imeg_m.imegmodid_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "imeg_t",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      INITIALIZE g_imeg_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #保存單頭舊值
   LET g_imeg_m_t.* = g_imeg_m.*
   LET g_imeg_m_o.* = g_imeg_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aimi094_show()
 
   
 
END FUNCTION

{</section>}

{<section id="aimi094.insert" >}
#+ 資料新增
PRIVATE FUNCTION aimi094_insert()
   #add-point:insert段define name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
      
   CLEAR FORM                                #清畫面欄位內容
   CALL g_imeh_d.clear()          #清除陣列
 
   
   INITIALIZE g_imeg_m.* LIKE imeg_t.*             #DEFAULT 設定
   
   LET g_imeg001_t = NULL
   LET g_imeg003_t = NULL
 
   LET g_imeg004_t = NULL
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_imeg_m.imegownid = g_user
      LET g_imeg_m.imegowndp = g_dept
      LET g_imeg_m.imegcrtid = g_user
      LET g_imeg_m.imegcrtdp = g_dept 
      LET g_imeg_m.imegcrtdt = cl_get_current()
      LET g_imeg_m.imegmodid = g_user
      LET g_imeg_m.imegmoddt = cl_get_current()
      LET g_imeg_m.imegstus = 'Y'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_imeg_m.imegstus = "Y"
      LET g_imeg_m.imeg008 = "1"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aimi094_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imeg_m.* = g_imeg_m_t.*
         CALL aimi094_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      CALL g_imeh_d.clear()
 
 
      LET g_rec_b = 0
      EXIT WHILE
        
   END WHILE
   
   #功能已完成,通報訊息中心
   CALL aimi094_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="aimi094.modify" >}
#+ 資料修改
PRIVATE FUNCTION aimi094_modify()
   #add-point:modify段define name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
      
   IF g_imeg_m.imeg001 IS NULL
   OR g_imeg_m.imeg003 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   EXECUTE aimi094_master_referesh USING g_imeg_m.imeg001,g_imeg_m.imeg003 INTO g_imeg_m.imeg001,g_imeg_m.imegstus, 
       g_imeg_m.imeg004,g_imeg_m.imeg003,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009, 
       g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid,g_imeg_m.imegowndp, 
       g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid,g_imeg_m.imegmoddt, 
       g_imeg_m.imeg002,g_imeg_m.imeg004_desc,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid_desc, 
       g_imeg_m.imegcrtdp_desc,g_imeg_m.imegmodid_desc
 
   #檢查是否允許此動作
   IF NOT aimi094_action_chk() THEN
      RETURN
   END IF
  
   LET g_imeg001_t = g_imeg_m.imeg001
   LET g_imeg003_t = g_imeg_m.imeg003
 
   CALL s_transaction_begin()
   
   OPEN aimi094_cl USING g_enterprise,g_imeg_m.imeg001
                                                       ,g_imeg_m.imeg003
 
   IF STATUS THEN
      CLOSE aimi094_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aimi094_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aimi094_cl INTO g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
       g_imeg_m.imeg004_desc,g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007, 
       g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005, 
       g_imeg_m.imegownid,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid, 
       g_imeg_m.imegcrtid_desc,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdp_desc,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid, 
       g_imeg_m.imegmodid_desc,g_imeg_m.imegmoddt,g_imeg_m.imeg002
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CLOSE aimi094_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_imeg_m.imeg001,":",SQLERRMESSAGE  
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
 
   CALL aimi094_show()
   WHILE TRUE
      LET g_imeg001_t = g_imeg_m.imeg001
      LET g_imeg003_t = g_imeg_m.imeg003
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_imeg_m.imegmodid = g_user 
LET g_imeg_m.imegmoddt = cl_get_current()
LET g_imeg_m.imegmodid_desc = cl_get_username(g_imeg_m.imegmodid)
 
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aimi094_input("u")     #欄位更改
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imeg_m.* = g_imeg_m_t.*
         CALL aimi094_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
      
      #若有modid跟moddt則進行update
      UPDATE imeg_t SET (imegmodid,imegmoddt) = (g_imeg_m.imegmodid,g_imeg_m.imegmoddt)
       WHERE imegent = g_enterprise AND imeg001 = g_imeg001_t
         AND imeg003 = g_imeg003_t
 
      
      #若單頭key欄位有變更
      IF g_imeg_m.imeg001 != g_imeg001_t 
      OR g_imeg_m.imeg003 != g_imeg003_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE imeh_t SET imeh001 = g_imeg_m.imeg001
                                      ,imeh002 = g_imeg_m.imeg003
 
          WHERE imehent = g_enterprise AND imeh001 = g_imeg001_t
            AND imeh002 = g_imeg003_t
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "imeh_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "imeh_t",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         IF SQLCA.sqlcode THEN
             CALL s_transaction_end('N','0')
             INITIALIZE g_errparam TO NULL 
             LET g_errparam.extend = SQLERRMESSAGE 
             LET g_errparam.code   = SQLCA.sqlcode 
             LET g_errparam.popup  = TRUE 
             CALL cl_err()
             CONTINUE WHILE
         END IF
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
      
      EXIT WHILE
   END WHILE
 
   CLOSE aimi094_cl
   CALL s_transaction_end('Y','0')
   
   #功能已完成,通報訊息中心
   CALL aimi094_msgcentre_notify('modify')
 
END FUNCTION   

{</section>}

{<section id="aimi094.input" >}
#+ 資料輸入
PRIVATE FUNCTION aimi094_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
      
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
       g_imeg_m.imeg004_desc,g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007, 
       g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005, 
       g_imeg_m.imegownid,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid, 
       g_imeg_m.imegcrtid_desc,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdp_desc,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid, 
       g_imeg_m.imegmodid_desc,g_imeg_m.imegmoddt,g_imeg_m.imeg002
   
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT imeh003 FROM imeh_t WHERE imehent=? AND imeh001=? AND imeh002=? AND imeh003=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aimi094_bcl CURSOR FROM g_forupd_sql
   
 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   LET lb_reproduce = FALSE
   
   #控制key欄位可否輸入
   CALL aimi094_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aimi094_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
       g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009, 
       g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imeg002
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="aimi094.input.head" >}
      #單頭段
      INPUT BY NAME g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
          g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009, 
          g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imeg002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               {<point name="input.master_input.update_item" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.imegl001 = g_imeg_m.imeg001
LET g_master_multi_table_t.imegl002 = ' '
LET g_master_multi_table_t.imegl004 = g_imeg_m.imegl004
LET g_master_multi_table_t.imegl005 = g_imeg_m.imegl005
LET g_master_multi_table_t.imegl001_idx2 = g_imeg_m.imeg001
LET g_master_multi_table_t.imegl002_idx2 = g_imeg_m.imeg003
LET g_master_multi_table_t.imegl004_2_idx2 = g_imeg_m.imegl004_2
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.imegl001 = ''
LET g_master_multi_table_t.imegl002 = ''
LET g_master_multi_table_t.imegl004 = ''
LET g_master_multi_table_t.imegl005 = ''
LET g_master_multi_table_t.imegl001_idx2 = ''
LET g_master_multi_table_t.imegl002_idx2 = ''
LET g_master_multi_table_t.imegl004_2_idx2 = ''
 
            END IF
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg001
            #add-point:BEFORE FIELD imeg001 name="input.b.imeg001"
            {<point name="input.b.imeg001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg001
            
            #add-point:AFTER FIELD imeg001 name="input.a.imeg001"
            {<point name="input.a.imeg001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg001
            #add-point:ON CHANGE imeg001 name="input.g.imeg001"
            {<point name="input.g.imeg001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegl004
            #add-point:BEFORE FIELD imegl004 name="input.b.imegl004"
            {<point name="input.b.imegl004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegl004
            
            #add-point:AFTER FIELD imegl004 name="input.a.imegl004"
            {<point name="input.a.imegl004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imegl004
            #add-point:ON CHANGE imegl004 name="input.g.imegl004"
            {<point name="input.g.imegl004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegl005
            #add-point:BEFORE FIELD imegl005 name="input.b.imegl005"
            {<point name="input.b.imegl005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegl005
            
            #add-point:AFTER FIELD imegl005 name="input.a.imegl005"
            {<point name="input.a.imegl005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imegl005
            #add-point:ON CHANGE imegl005 name="input.g.imegl005"
            {<point name="input.g.imegl005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegstus
            #add-point:BEFORE FIELD imegstus name="input.b.imegstus"
            {<point name="input.b.imegstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegstus
            
            #add-point:AFTER FIELD imegstus name="input.a.imegstus"
            {<point name="input.a.imegstus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imegstus
            #add-point:ON CHANGE imegstus name="input.g.imegstus"
            {<point name="input.g.imegstus" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg004
            
            #add-point:AFTER FIELD imeg004 name="input.a.imeg004"
            {<point name="input.a.imeg004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg004
            #add-point:BEFORE FIELD imeg004 name="input.b.imeg004"
            {<point name="input.b.imeg004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg004
            #add-point:ON CHANGE imeg004 name="input.g.imeg004"
            {<point name="input.g.imeg004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg003
            #add-point:BEFORE FIELD imeg003 name="input.b.imeg003"
            {<point name="input.b.imeg003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg003
            
            #add-point:AFTER FIELD imeg003 name="input.a.imeg003"
            {<point name="input.a.imeg003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg003
            #add-point:ON CHANGE imeg003 name="input.g.imeg003"
            {<point name="input.g.imeg003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imegl004_2
            #add-point:BEFORE FIELD imegl004_2 name="input.b.imegl004_2"
            {<point name="input.b.imegl004_2" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imegl004_2
            
            #add-point:AFTER FIELD imegl004_2 name="input.a.imegl004_2"
            {<point name="input.a.imegl004_2" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imegl004_2
            #add-point:ON CHANGE imegl004_2 name="input.g.imegl004_2"
            {<point name="input.g.imegl004_2" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg006
            #add-point:BEFORE FIELD imeg006 name="input.b.imeg006"
            {<point name="input.b.imeg006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg006
            
            #add-point:AFTER FIELD imeg006 name="input.a.imeg006"
            {<point name="input.a.imeg006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg006
            #add-point:ON CHANGE imeg006 name="input.g.imeg006"
            {<point name="input.g.imeg006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg007
            #add-point:BEFORE FIELD imeg007 name="input.b.imeg007"
            {<point name="input.b.imeg007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg007
            
            #add-point:AFTER FIELD imeg007 name="input.a.imeg007"
            {<point name="input.a.imeg007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg007
            #add-point:ON CHANGE imeg007 name="input.g.imeg007"
            {<point name="input.g.imeg007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg008
            #add-point:BEFORE FIELD imeg008 name="input.b.imeg008"
            {<point name="input.b.imeg008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg008
            
            #add-point:AFTER FIELD imeg008 name="input.a.imeg008"
            {<point name="input.a.imeg008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg008
            #add-point:ON CHANGE imeg008 name="input.g.imeg008"
            {<point name="input.g.imeg008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_imeg_m.imeg009,"0","1","255","1","azz-00087",1) THEN
               NEXT FIELD imeg009
            END IF 
 
 
 
            #add-point:AFTER FIELD imeg009 name="input.a.imeg009"
            {<point name="input.a.imeg009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg009
            #add-point:BEFORE FIELD imeg009 name="input.b.imeg009"
            {<point name="input.b.imeg009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg009
            #add-point:ON CHANGE imeg009 name="input.g.imeg009"
            {<point name="input.g.imeg009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg010
            #add-point:BEFORE FIELD imeg010 name="input.b.imeg010"
            {<point name="input.b.imeg010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg010
            
            #add-point:AFTER FIELD imeg010 name="input.a.imeg010"
            {<point name="input.a.imeg010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg010
            #add-point:ON CHANGE imeg010 name="input.g.imeg010"
            {<point name="input.g.imeg010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg011
            #add-point:BEFORE FIELD imeg011 name="input.b.imeg011"
            {<point name="input.b.imeg011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg011
            
            #add-point:AFTER FIELD imeg011 name="input.a.imeg011"
            {<point name="input.a.imeg011" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg011
            #add-point:ON CHANGE imeg011 name="input.g.imeg011"
            {<point name="input.g.imeg011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg012
            #add-point:BEFORE FIELD imeg012 name="input.b.imeg012"
            {<point name="input.b.imeg012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg012
            
            #add-point:AFTER FIELD imeg012 name="input.a.imeg012"
            {<point name="input.a.imeg012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg012
            #add-point:ON CHANGE imeg012 name="input.g.imeg012"
            {<point name="input.g.imeg012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg005
            #add-point:BEFORE FIELD imeg005 name="input.b.imeg005"
            {<point name="input.b.imeg005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg005
            
            #add-point:AFTER FIELD imeg005 name="input.a.imeg005"
            {<point name="input.a.imeg005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg005
            #add-point:ON CHANGE imeg005 name="input.g.imeg005"
            {<point name="input.g.imeg005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeg002
            #add-point:BEFORE FIELD imeg002 name="input.b.imeg002"
            {<point name="input.b.imeg002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeg002
            
            #add-point:AFTER FIELD imeg002 name="input.a.imeg002"
            {<point name="input.a.imeg002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeg002
            #add-point:ON CHANGE imeg002 name="input.g.imeg002"
            {<point name="input.g.imeg002" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.imeg001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg001
            #add-point:ON ACTION controlp INFIELD imeg001 name="input.c.imeg001"
            {<point name="input.c.imeg001" />}
            #END add-point
 
 
         #Ctrlp:input.c.imegl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegl004
            #add-point:ON ACTION controlp INFIELD imegl004 name="input.c.imegl004"
            {<point name="input.c.imegl004" />}
            #END add-point
 
 
         #Ctrlp:input.c.imegl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegl005
            #add-point:ON ACTION controlp INFIELD imegl005 name="input.c.imegl005"
            {<point name="input.c.imegl005" />}
            #END add-point
 
 
         #Ctrlp:input.c.imegstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegstus
            #add-point:ON ACTION controlp INFIELD imegstus name="input.c.imegstus"
            {<point name="input.c.imegstus" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg004
            #add-point:ON ACTION controlp INFIELD imeg004 name="input.c.imeg004"
            {<point name="input.c.imeg004" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg003
            #add-point:ON ACTION controlp INFIELD imeg003 name="input.c.imeg003"
            {<point name="input.c.imeg003" />}
            #END add-point
 
 
         #Ctrlp:input.c.imegl004_2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imegl004_2
            #add-point:ON ACTION controlp INFIELD imegl004_2 name="input.c.imegl004_2"
            {<point name="input.c.imegl004_2" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg006
            #add-point:ON ACTION controlp INFIELD imeg006 name="input.c.imeg006"
            {<point name="input.c.imeg006" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg007
            #add-point:ON ACTION controlp INFIELD imeg007 name="input.c.imeg007"
            {<point name="input.c.imeg007" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg008
            #add-point:ON ACTION controlp INFIELD imeg008 name="input.c.imeg008"
            {<point name="input.c.imeg008" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg009
            #add-point:ON ACTION controlp INFIELD imeg009 name="input.c.imeg009"
            {<point name="input.c.imeg009" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg010
            #add-point:ON ACTION controlp INFIELD imeg010 name="input.c.imeg010"
            {<point name="input.c.imeg010" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg011
            #add-point:ON ACTION controlp INFIELD imeg011 name="input.c.imeg011"
            {<point name="input.c.imeg011" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg012
            #add-point:ON ACTION controlp INFIELD imeg012 name="input.c.imeg012"
            {<point name="input.c.imeg012" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg005
            #add-point:ON ACTION controlp INFIELD imeg005 name="input.c.imeg005"
            {<point name="input.c.imeg005" />}
            #END add-point
 
 
         #Ctrlp:input.c.imeg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeg002
            #add-point:ON ACTION controlp INFIELD imeg002 name="input.c.imeg002"
            {<point name="input.c.imeg002" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_imeg_m.imeg001             
                            ,g_imeg_m.imeg003   
 
 
            IF p_cmd <> 'u' THEN
               LET l_count = 1  
               
               SELECT COUNT(1) INTO l_count FROM imeg_t
                WHERE imegent = g_enterprise AND imeg001 = g_imeg_m.imeg001
                  AND imeg003 = g_imeg_m.imeg003
 
               IF l_count = 0 THEN
                  
                  #add-point:單頭新增前 name="input.head.b_insert"
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
                  
                  INSERT INTO imeg_t (imegent,imeg001,imegstus,imeg004,imeg003,imeg006,imeg007,imeg008, 
                      imeg009,imeg010,imeg011,imeg012,imeg005,imegownid,imegowndp,imegcrtid,imegcrtdp, 
                      imegcrtdt,imegmodid,imegmoddt,imeg002)
                  VALUES (g_enterprise,g_imeg_m.imeg001,g_imeg_m.imegstus,g_imeg_m.imeg004,g_imeg_m.imeg003, 
                      g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010, 
                      g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid,g_imeg_m.imegowndp, 
                      g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid,g_imeg_m.imegmoddt, 
                      g_imeg_m.imeg002) 
                  
                  #add-point:單頭新增中 name="input.head.m_insert"
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "g_imeg_m",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CONTINUE DIALOG
                  END IF
                  
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imeg_m.imeg001 = g_master_multi_table_t.imegl001 AND
         ' ' = g_master_multi_table_t.imegl002 AND
         g_imeg_m.imegl004 = g_master_multi_table_t.imegl004 AND 
         g_imeg_m.imegl005 = g_master_multi_table_t.imegl005  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeglent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imeg_m.imeg001
            LET l_field_keys[02] = 'imegl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imegl001
            LET l_var_keys[03] = ' '
            LET l_field_keys[03] = 'imegl002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imegl002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imegl003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imeg_m.imegl004
            LET l_fields[01] = 'imegl004'
            LET l_vars[02] = g_imeg_m.imegl005
            LET l_fields[02] = 'imegl005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imegl_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imeg_m.imeg001 = g_master_multi_table_t.imegl001_idx2 AND
         g_imeg_m.imeg003 = g_master_multi_table_t.imegl002_idx2 AND
         g_imeg_m.imegl004_2 = g_master_multi_table_t.imegl004_2_idx2  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeglent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imeg_m.imeg001
            LET l_field_keys[02] = 'imegl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imegl001_idx2
            LET l_var_keys[03] = g_imeg_m.imeg003
            LET l_field_keys[03] = 'imegl002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imegl002_idx2
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imegl003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imeg_m.imegl004_2
            LET l_fields[01] = 'imegl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imegl_t')
         END IF 
 
 
                  #add-point:單頭新增後 name="input.head.a_insert"
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
                  
                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                     CALL aimi094_detail_reproduce()
                  END IF
                  
                  LET p_cmd = 'u'
               ELSE
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend =  g_imeg_m.imeg001 
                  LET g_errparam.code   = '!' 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD imeg001
               END IF 
            ELSE
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE imeg_t SET (imeg001,imegstus,imeg004,imeg003,imeg006,imeg007,imeg008,imeg009,imeg010, 
                   imeg011,imeg012,imeg005,imegownid,imegowndp,imegcrtid,imegcrtdp,imegcrtdt,imegmodid, 
                   imegmoddt,imeg002) = (g_imeg_m.imeg001,g_imeg_m.imegstus,g_imeg_m.imeg004,g_imeg_m.imeg003, 
                   g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010, 
                   g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid,g_imeg_m.imegowndp, 
                   g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid,g_imeg_m.imegmoddt, 
                   g_imeg_m.imeg002)
                WHERE imegent = g_enterprise AND imeg001 = g_imeg001_t
                  AND imeg003 = g_imeg003_t
 
                  
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imeg_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imeg_t",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                  OTHERWISE
                     
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imeg_m.imeg001 = g_master_multi_table_t.imegl001 AND
         ' ' = g_master_multi_table_t.imegl002 AND
         g_imeg_m.imegl004 = g_master_multi_table_t.imegl004 AND 
         g_imeg_m.imegl005 = g_master_multi_table_t.imegl005  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeglent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imeg_m.imeg001
            LET l_field_keys[02] = 'imegl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imegl001
            LET l_var_keys[03] = ' '
            LET l_field_keys[03] = 'imegl002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imegl002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imegl003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imeg_m.imegl004
            LET l_fields[01] = 'imegl004'
            LET l_vars[02] = g_imeg_m.imegl005
            LET l_fields[02] = 'imegl005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imegl_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imeg_m.imeg001 = g_master_multi_table_t.imegl001_idx2 AND
         g_imeg_m.imeg003 = g_master_multi_table_t.imegl002_idx2 AND
         g_imeg_m.imegl004_2 = g_master_multi_table_t.imegl004_2_idx2  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imeglent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imeg_m.imeg001
            LET l_field_keys[02] = 'imegl001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imegl001_idx2
            LET l_var_keys[03] = g_imeg_m.imeg003
            LET l_field_keys[03] = 'imegl002'
            LET l_var_keys_bak[03] = g_master_multi_table_t.imegl002_idx2
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imegl003'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_imeg_m.imegl004_2
            LET l_fields[01] = 'imegl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imegl_t')
         END IF 
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     LET g_log1 = util.JSON.stringify(g_imeg_m_t)
                     LET g_log2 = util.JSON.stringify(g_imeg_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
               
            END IF
            LET g_imeg001_t = g_imeg_m.imeg001
            LET g_imeg003_t = g_imeg_m.imeg003
 
           #controlp
      END INPUT

{</section>}

{<section id="aimi094.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_imeh_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.detail_input.page1.update_item"
               {<point name="input.detail_input.page1.update_item" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_imeh_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aimi094_b_fill()
            LET g_rec_b = g_imeh_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
 
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aimi094_cl USING g_enterprise,g_imeg_m.imeg001
                                                                ,g_imeg_m.imeg003
 
            IF STATUS THEN
               CLOSE aimi094_cl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aimi094_cl:" 
               LET g_errparam.code   =  STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_imeh_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_imeh_d[l_ac].imeh003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_imeh_d_t.* = g_imeh_d[l_ac].*  #BACKUP
               LET g_imeh_d_o.* = g_imeh_d[l_ac].*  #BACKUP
               CALL aimi094_set_entry_b(l_cmd)
               CALL aimi094_set_no_entry_b(l_cmd)
               IF NOT aimi094_lock_b("imeh_t","1") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aimi094_bcl INTO g_imeh_d[l_ac].imeh003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_imeh_d_t.imeh003,":",SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aimi094_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            
            #其他table資料備份(確定是否更改用)
            
LET g_detail_multi_table_t.imehl001 = g_imeg_m.imeg001
LET g_detail_multi_table_t.imehl002 = g_imeg_m.imeg003
LET g_detail_multi_table_t.imehl003 = g_imeh_d[l_ac].imeh003
LET g_detail_multi_table_t.imehl004 = g_dlang
LET g_detail_multi_table_t.imehl005 = g_imeh_d[l_ac].imehl005
 
            
            #其他table進行lock
            
            INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'imehlent'
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[02] = 'imehl001'
            LET l_var_keys[02] = g_imeg_m.imeg001
            LET l_field_keys[03] = 'imehl002'
            LET l_var_keys[03] = g_imeg_m.imeg003
            LET l_field_keys[04] = 'imehl003'
            LET l_var_keys[04] = g_imeh_d[l_ac].imeh003
            LET l_field_keys[05] = 'imehl004'
            LET l_var_keys[05] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'imehl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_imeh_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            
            
            #add-point:modify段before備份 name="input.body.before_bak"
            {<point name="input.body.before_bak"/>}
            #end add-point
            LET g_imeh_d_t.* = g_imeh_d[l_ac].*     #新輸入資料
            LET g_imeh_d_o.* = g_imeh_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aimi094_set_entry_b(l_cmd)
            CALL aimi094_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_imeh_d[li_reproduce_target].* = g_imeh_d[li_reproduce].*
 
               LET g_imeh_d[g_imeh_d.getLength()].imeh003 = NULL
 
            END IF
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM imeh_t 
             WHERE imehent = g_enterprise AND imeh001 = g_imeg_m.imeg001
               AND imeh002 = g_imeg_m.imeg003
 
               AND g_imeh_d[l_ac].imeh003 = imeh003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imeg_m.imeg001
               LET gs_keys[2] = g_imeg_m.imeg003
               LET gs_keys[3] = g_imeh_d[g_detail_idx].imeh003
               CALL aimi094_insert_b('imeh_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_imeh_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL s_transaction_end('N','0')                    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "imeh_t",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aimi094_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_imeg_m.imeg001 = g_detail_multi_table_t.imehl001 AND
         g_imeg_m.imeg003 = g_detail_multi_table_t.imehl002 AND
         g_imeh_d[l_ac].imeh003 = g_detail_multi_table_t.imehl003 AND
         g_imeh_d[l_ac].imehl005 = g_detail_multi_table_t.imehl005 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imehlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imeg_m.imeg001
            LET l_field_keys[02] = 'imehl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.imehl001
            LET l_var_keys[03] = g_imeg_m.imeg003
            LET l_field_keys[03] = 'imehl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.imehl002
            LET l_var_keys[04] = g_imeh_d[l_ac].imeh003
            LET l_field_keys[04] = 'imehl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.imehl003
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'imehl004'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.imehl004
            LET l_vars[01] = g_imeh_d[l_ac].imehl005
            LET l_fields[01] = 'imehl005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imehl_t')
         END IF 
 
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ##ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM imeh_t
                WHERE imehent = g_enterprise AND imeh001 = g_imeg_m.imeg001 AND
                                          imeh002 = g_imeg_m.imeg003 AND
 
                      imeh003 = g_imeh_d_t.imeh003
 
                  
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point  
                  
               IF SQLCA.sqlcode THEN
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "imeh_t",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'imehlent'
                  LET l_var_keys_bak[01] = g_enterprise
                  LET l_field_keys[02] = 'imehl001'
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.imehl001
                  LET l_field_keys[03] = 'imehl002'
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.imehl002
                  LET l_field_keys[04] = 'imehl003'
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.imehl003
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'imehl_t')
 
                  #add-point:單身刪除後 name="input.body.a_delete"
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aimi094_bcl
               LET l_count = g_imeh_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imeg_m.imeg001
               LET gs_keys[2] = g_imeg_m.imeg003
               LET gs_keys[3] = g_imeh_d_t.imeh003
 
            END IF 
 
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2 name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
                              CALL aimi094_delete_b('imeh_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_imeh_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imeh003
            #add-point:BEFORE FIELD imeh003 name="input.b.page1.imeh003"
            {<point name="input.b.page1.imeh003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imeh003
            
            #add-point:AFTER FIELD imeh003 name="input.a.page1.imeh003"
            {<point name="input.a.page1.imeh003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imeh003
            #add-point:ON CHANGE imeh003 name="input.g.page1.imeh003"
            {<point name="input.g.page1.imeh003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imehl005
            #add-point:BEFORE FIELD imehl005 name="input.b.page1.imehl005"
            {<point name="input.b.page1.imehl005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imehl005
            
            #add-point:AFTER FIELD imehl005 name="input.a.page1.imehl005"
            {<point name="input.a.page1.imehl005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imehl005
            #add-point:ON CHANGE imehl005 name="input.g.page1.imehl005"
            {<point name="input.g.page1.imehl005" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.imeh003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imeh003
            #add-point:ON ACTION controlp INFIELD imeh003 name="input.c.page1.imeh003"
            {<point name="input.c.page1.imeh003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imehl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imehl005
            #add-point:ON ACTION controlp INFIELD imehl005 name="input.c.page1.imehl005"
            {<point name="input.c.page1.imehl005" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_imeh_d[l_ac].* = g_imeh_d_t.*
               CLOSE aimi094_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_imeh_d[l_ac].imeh003 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               LET g_imeh_d[l_ac].* = g_imeh_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
    
               UPDATE imeh_t SET (imeh001,imeh002,imeh003) = (g_imeg_m.imeg001,g_imeg_m.imeg003,g_imeh_d[l_ac].imeh003) 

                WHERE imehent = g_enterprise AND imeh001 = g_imeg_m.imeg001 
                  AND imeh002 = g_imeg_m.imeg003 
 
                  AND imeh003 = g_imeh_d_t.imeh003 #項次   
 
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_imeh_d[l_ac].* = g_imeh_d_t.*
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imeh_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_imeh_d[l_ac].* = g_imeh_d_t.*                     
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "imeh_t",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imeg_m.imeg001
               LET gs_keys_bak[1] = g_imeg001_t
               LET gs_keys[2] = g_imeg_m.imeg003
               LET gs_keys_bak[2] = g_imeg003_t
               LET gs_keys[3] = g_imeh_d[g_detail_idx].imeh003
               LET gs_keys_bak[3] = g_imeh_d_t.imeh003
               CALL aimi094_update_b('imeh_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_imeg_m.imeg001 = g_detail_multi_table_t.imehl001 AND
         g_imeg_m.imeg003 = g_detail_multi_table_t.imehl002 AND
         g_imeh_d[l_ac].imeh003 = g_detail_multi_table_t.imehl003 AND
         g_imeh_d[l_ac].imehl005 = g_detail_multi_table_t.imehl005 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'imehlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_imeg_m.imeg001
            LET l_field_keys[02] = 'imehl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.imehl001
            LET l_var_keys[03] = g_imeg_m.imeg003
            LET l_field_keys[03] = 'imehl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.imehl002
            LET l_var_keys[04] = g_imeh_d[l_ac].imeh003
            LET l_field_keys[04] = 'imehl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.imehl003
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'imehl004'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.imehl004
            LET l_vars[01] = g_imeh_d[l_ac].imehl005
            LET l_fields[01] = 'imehl005'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imehl_t')
         END IF 
 
                     LET g_log1 = util.JSON.stringify(g_imeg_m),util.JSON.stringify(g_imeh_d_t)
                     LET g_log2 = util.JSON.stringify(g_imeg_m),util.JSON.stringify(g_imeh_d[l_ac])
                     IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aimi094_unlock_b("imeh_t","1")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
            
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point   
              
         #add-point:page自定義行為 name="input.page.action"
         {<point name="input.page.action"/>}
         #end add-point
 
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_imeh_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_imeh_d.getLength()+1
            
      END INPUT
      
 
   
 
      
      #add-point:input段more input  name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD imeg001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD imeh003
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="aimi094.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aimi094_show()
   #add-point:show段define name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   DEFINE l_sql     STRING
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:Function前置處理  name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
  
   DISPLAY BY NAME g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
       g_imeg_m.imeg004_desc,g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007, 
       g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005, 
       g_imeg_m.imegownid,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid, 
       g_imeg_m.imegcrtid_desc,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdp_desc,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid, 
       g_imeg_m.imegmodid_desc,g_imeg_m.imegmoddt,g_imeg_m.imeg002
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_imeg_m.imegstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
  
   IF g_bfill = "Y" THEN
      CALL aimi094_b_fill()                 #單身
   END IF
   
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL aimi094_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
 
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_imeh_d.getLength()
      
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aimi094.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aimi094_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE imeg_t.imeg001 
   DEFINE l_oldno     LIKE imeg_t.imeg001 
   DEFINE l_newno02     LIKE imeg_t.imeg003 
   DEFINE l_oldno02     LIKE imeg_t.imeg003 
 
   DEFINE l_master    RECORD LIKE imeg_t.*
   DEFINE l_detail    RECORD LIKE imeh_t.*
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
      
   IF g_imeg_m.imeg001 IS NULL
   OR g_imeg_m.imeg003 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   LET g_imeg001_t = g_imeg_m.imeg001
   LET g_imeg003_t = g_imeg_m.imeg003
 
   
   LET g_imeg_m.imeg001 = ""
   LET g_imeg_m.imeg003 = ""
 
    
   CALL aimi094_set_entry('a')
   CALL aimi094_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_imeg_m.imegownid = g_user
      LET g_imeg_m.imegowndp = g_dept
      LET g_imeg_m.imegcrtid = g_user
      LET g_imeg_m.imegcrtdp = g_dept 
      LET g_imeg_m.imegcrtdt = cl_get_current()
      LET g_imeg_m.imegmodid = g_user
      LET g_imeg_m.imegmoddt = cl_get_current()
      LET g_imeg_m.imegstus = 'Y'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aimi094_input("r")
   
   
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL aimi094_msgcentre_notify('reproduce')
   
END FUNCTION

{</section>}

{<section id="aimi094.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aimi094_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE imeh_t.*
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>}
   #end add-point    
 
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
      
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aimi094_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM imeh_t
    WHERE imehent = g_enterprise AND imeh001 = g_imeg001_t
    AND imeh002 = g_imeg003_t
 
    INTO TEMP aimi094_detail
   
   #將key修正為調整後   
   UPDATE aimi094_detail 
      #更新key欄位
      SET imeh001 = g_imeg_m.imeg001
          , imeh002 = g_imeg_m.imeg003
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO imeh_t SELECT * FROM aimi094_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "Reproduce",SQLERRMESSAGE  
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimi094_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
 
   #多語言複製段落
      #應用 a38 樣板自動產生(Version:6)
   #單身多語言複製
   DROP TABLE aimi094_detail_lang
   
   #add-point:單身複製前1 name="detail_reproduce.body.lang0.b_insert"
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE & INSERT 
   SELECT * FROM imehl_t 
    WHERE imehlent = g_enterprise AND imehl001 = g_imeg001_t
      AND imehl002 = g_imeg003_t
     INTO TEMP aimi094_detail_lang
 
   #將key修正為調整後   
   UPDATE aimi094_detail_lang 
      #更新key欄位
      SET imehl001 = g_imeg_m.imeg001
          , imehl002 = g_imeg_m.imeg003
  
   #add-point:單身修改前 name="detail_reproduce.body.lang0.b_update"
   {<point name="detail_reproduce.body.lang0.b_update"/>}
   #end add-point   
  
   #將資料塞回原table   
   INSERT INTO imehl_t SELECT * FROM aimi094_detail_lang
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.lang0.table1.m_insert"
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimi094_detail_lang
   
   #add-point:單身複製後1 name="detail_reproduce.lang0.table1.a_insert"
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_imeg001_t = g_imeg_m.imeg001
   LET g_imeg003_t = g_imeg_m.imeg003
 
   
   DROP TABLE aimi094_detail
   
END FUNCTION

{</section>}

{<section id="aimi094.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aimi094_delete()
   #add-point:delete段define name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
      
   IF g_imeg_m.imeg001 IS NULL
   OR g_imeg_m.imeg003 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   EXECUTE aimi094_master_referesh USING g_imeg_m.imeg001,g_imeg_m.imeg003 INTO g_imeg_m.imeg001,g_imeg_m.imegstus, 
       g_imeg_m.imeg004,g_imeg_m.imeg003,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009, 
       g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid,g_imeg_m.imegowndp, 
       g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid,g_imeg_m.imegmoddt, 
       g_imeg_m.imeg002,g_imeg_m.imeg004_desc,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid_desc, 
       g_imeg_m.imegcrtdp_desc,g_imeg_m.imegmodid_desc
   
   #檢查是否允許此動作
   IF NOT aimi094_action_chk() THEN
      RETURN
   END IF
   
   CALL aimi094_show()
   
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.imegl001 = g_imeg_m.imeg001
LET g_master_multi_table_t.imegl002 = ' '
LET g_master_multi_table_t.imegl004 = g_imeg_m.imegl004
LET g_master_multi_table_t.imegl005 = g_imeg_m.imegl005
LET g_master_multi_table_t.imegl001_idx2 = g_imeg_m.imeg001
LET g_master_multi_table_t.imegl002_idx2 = g_imeg_m.imeg003
LET g_master_multi_table_t.imegl004_2_idx2 = g_imeg_m.imegl004_2
 
 
   OPEN aimi094_cl USING g_enterprise,g_imeg_m.imeg001
                                                       ,g_imeg_m.imeg003
 
   IF STATUS THEN
      CLOSE aimi094_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aimi094_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   FETCH aimi094_cl INTO g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
       g_imeg_m.imeg004_desc,g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007, 
       g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005, 
       g_imeg_m.imegownid,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid, 
       g_imeg_m.imegcrtid_desc,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdp_desc,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid, 
       g_imeg_m.imegmodid_desc,g_imeg_m.imegmoddt,g_imeg_m.imeg002              #鎖住將被更改或取消的資料 

   IF SQLCA.sqlcode THEN
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_imeg_m.imeg001,":",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL aimi094_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
  
      #資料備份
      LET g_imeg001_t = g_imeg_m.imeg001
      LET g_imeg003_t = g_imeg_m.imeg003
 
      
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imeg_t
       WHERE imegent = g_enterprise AND imeg001 = g_imeg_m.imeg001
         AND imeg003 = g_imeg_m.imeg003
 
      
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL s_transaction_end('N','0')
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_imeg_m.imeg001,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'imeglent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.imegl001_idx2
   LET l_field_keys[02] = 'imegl001'
   LET l_var_keys_bak[03] = g_master_multi_table_t.imegl002_idx2
   LET l_field_keys[03] = 'imegl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'imegl_t')
 
      
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imeh_t
       WHERE imehent = g_enterprise AND imeh001 = g_imeg_m.imeg001
         AND imeh002 = g_imeg_m.imeg003
 
         
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
 
      IF SQLCA.sqlcode THEN
         CALL s_transaction_end('N','0')
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "imeh_t",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF       
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point      
                                                               
 
 
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aimi094_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
 
      CLEAR FORM
      CALL g_imeh_d.clear() 
 
     
      CALL aimi094_ui_browser_refresh()  
      CALL aimi094_ui_headershow()  
      CALL aimi094_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aimi094_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL aimi094_browser_fill()
      END IF
       
   END IF
 
   CLOSE aimi094_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aimi094_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="aimi094.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aimi094_b_fill()
   #add-point:b_fill段define name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
      
   CALL g_imeh_d.clear()    #g_imeh_d 單頭及單身 
 
 
   #add-point:b_fill段define name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT imeh003  FROM imeh_t",   
               " INNER JOIN imeg_t ON imeg001 = imeh001 ",
               " AND imeg003 = imeh002 ",
 
               " LEFT JOIN imehl_t ON imehlent = "||g_enterprise||" AND imeg001 = imehl001 AND imeg003 = imehl002 AND imeh003 = imehl003 AND imehl004 = '",g_dlang,"'",
               
               " WHERE imehent=? AND imeh001=? AND imeh002=?"
 
   IF NOT cl_null(g_wc_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table1 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY imeh003"
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料   
   PREPARE aimi094_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR aimi094_pb
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
   OPEN b_fill_cs USING g_enterprise,g_imeg_m.imeg001,g_imeg_m.imeg003
                                            
   FOREACH b_fill_cs INTO g_imeh_d[l_ac].imeh003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充 name="b_fill.fill"
      {<point name="b_fill.fill"/>}
      #end add-point
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
 
   
   CALL g_imeh_d.deleteElement(g_imeh_d.getLength())
 
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aimi094_pb
 
   
   
END FUNCTION

{</section>}

{<section id="aimi094.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aimi094_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
      
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point  
      DELETE FROM imeh_t
       WHERE imehent = g_enterprise AND
         imeh001 = ps_keys_bak[1] AND imeh002 = ps_keys_bak[2] AND imeh003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:delete_b段刪除後 name="delete_b.a_delete"
      {<point name="delete_b.a_delete"/>}
      #end add-point  
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="aimi094.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aimi094_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
      
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前 name="insert_b.b_insert"
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point  
      INSERT INTO imeh_t
                  (imehent,
                   imeh001,imeh002,
                   imeh003
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   )
      #add-point:insert_b段新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "imeh_t",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:insert_b段新增後 name="insert_b.a_insert"
      {<point name="insert_b.a_insert"/>}
      #end add-point  
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="aimi094.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aimi094_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
      
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "imeh_t" THEN
      #add-point:update_b段修改前 name="update_b.b_update"
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point  
      UPDATE imeh_t 
         SET (imeh001,imeh002,
              imeh003
              ) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ) 
         WHERE imehent = g_enterprise AND
               imeh001 = ps_keys_bak[1] AND imeh002 = ps_keys_bak[2] AND imeh003 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL s_transaction_end('N','0')
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "imeh_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            CALL s_transaction_end('N','0')
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "imeh_t",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            
         OTHERWISE
            LET l_new_key[01] = g_enterprise
LET l_old_key[01] = g_enterprise
LET l_field_key[01] = 'imehlent'
LET l_new_key[02] = ps_keys[1] 
LET l_old_key[02] = ps_keys_bak[1] 
LET l_field_key[02] = 'imehl001'
LET l_new_key[03] = ps_keys[2] 
LET l_old_key[03] = ps_keys_bak[2] 
LET l_field_key[03] = 'imehl002'
LET l_new_key[04] = ps_keys[3] 
LET l_old_key[04] = ps_keys_bak[3] 
LET l_field_key[04] = 'imehl003'
LET l_new_key[05] = g_dlang 
LET l_old_key[05] = g_dlang 
LET l_field_key[05] = 'imehl004'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'imehl_t')
      END CASE
      #add-point:update_b段修改後 name="update_b.a_update"
      {<point name="update_b.a_update"/>}
      #end add-point  
      RETURN
   END IF
   
 
   
END FUNCTION

{</section>}

{<section id="aimi094.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aimi094_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>}
   #end add-point   
 
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
      
   #先刷新資料
   #CALL aimi094_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "imeh_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aimi094_bcl USING g_enterprise,
                                       g_imeg_m.imeg001,g_imeg_m.imeg003,g_imeh_d[g_detail_idx].imeh003 

                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aimi094_bcl",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="aimi094.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aimi094_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>}
   #end add-point  
 
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
      
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aimi094_bcl
   END IF
   
 
 
END FUNCTION

{</section>}

{<section id="aimi094.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aimi094_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>}
   #end add-point       
 
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
      
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("imeg001,imeg003",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="aimi094.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aimi094_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
      
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("imeg001,imeg003",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="aimi094.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aimi094_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="aimi094.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aimi094_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="aimi094.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aimi094_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:Function前置處理  name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " imeg001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " imeg003 = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="aimi094.idx_chk" >}
#+ 單身筆數變更
PRIVATE FUNCTION aimi094_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>}
   #end add-point  
 
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
      
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_imeh_d.getLength() THEN
         LET g_detail_idx = g_imeh_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_imeh_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_imeh_d.getLength() TO FORMONLY.cnt
   END IF
   
 
 
END FUNCTION

{</section>}

{<section id="aimi094.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION aimi094_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   {<point name="modify_detail_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "imeh003"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION

{</section>}

{<section id="aimi094.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION aimi094_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_imeg_m.imeg001 IS NULL
      OR g_imeg_m.imeg003 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aimi094_cl USING g_enterprise,g_imeg_m.imeg001,g_imeg_m.imeg003
   IF STATUS THEN
      CLOSE aimi094_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aimi094_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aimi094_master_referesh USING g_imeg_m.imeg001,g_imeg_m.imeg003 INTO g_imeg_m.imeg001,g_imeg_m.imegstus, 
       g_imeg_m.imeg004,g_imeg_m.imeg003,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008,g_imeg_m.imeg009, 
       g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid,g_imeg_m.imegowndp, 
       g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid,g_imeg_m.imegmoddt, 
       g_imeg_m.imeg002,g_imeg_m.imeg004_desc,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid_desc, 
       g_imeg_m.imegcrtdp_desc,g_imeg_m.imegmodid_desc
   
 
   #檢查是否允許此動作
   IF NOT aimi094_action_chk() THEN
      CLOSE aimi094_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
       g_imeg_m.imeg004_desc,g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007, 
       g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005, 
       g_imeg_m.imegownid,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid, 
       g_imeg_m.imegcrtid_desc,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdp_desc,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid, 
       g_imeg_m.imegmodid_desc,g_imeg_m.imegmoddt,g_imeg_m.imeg002
 
   CASE g_imeg_m.imegstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_imeg_m.imegstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_imeg_m.imegstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aimi094_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_imeg_m.imegmodid = g_user
   LET g_imeg_m.imegmoddt = cl_get_current()
   LET g_imeg_m.imegstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE imeg_t 
      SET (imegstus,imegmodid,imegmoddt) 
        = (g_imeg_m.imegstus,g_imeg_m.imegmodid,g_imeg_m.imegmoddt)     
    WHERE imegent = g_enterprise AND imeg001 = g_imeg_m.imeg001
      AND imeg003 = g_imeg_m.imeg003
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aimi094_master_referesh USING g_imeg_m.imeg001,g_imeg_m.imeg003 INTO g_imeg_m.imeg001, 
          g_imeg_m.imegstus,g_imeg_m.imeg004,g_imeg_m.imeg003,g_imeg_m.imeg006,g_imeg_m.imeg007,g_imeg_m.imeg008, 
          g_imeg_m.imeg009,g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005,g_imeg_m.imegownid, 
          g_imeg_m.imegowndp,g_imeg_m.imegcrtid,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid, 
          g_imeg_m.imegmoddt,g_imeg_m.imeg002,g_imeg_m.imeg004_desc,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp_desc, 
          g_imeg_m.imegcrtid_desc,g_imeg_m.imegcrtdp_desc,g_imeg_m.imegmodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_imeg_m.imeg001,g_imeg_m.imegl004,g_imeg_m.imegl005,g_imeg_m.imegstus,g_imeg_m.imeg004, 
          g_imeg_m.imeg004_desc,g_imeg_m.imeg003,g_imeg_m.imegl004_2,g_imeg_m.imeg006,g_imeg_m.imeg007, 
          g_imeg_m.imeg008,g_imeg_m.imeg009,g_imeg_m.imeg010,g_imeg_m.imeg011,g_imeg_m.imeg012,g_imeg_m.imeg005, 
          g_imeg_m.imegownid,g_imeg_m.imegownid_desc,g_imeg_m.imegowndp,g_imeg_m.imegowndp_desc,g_imeg_m.imegcrtid, 
          g_imeg_m.imegcrtid_desc,g_imeg_m.imegcrtdp,g_imeg_m.imegcrtdp_desc,g_imeg_m.imegcrtdt,g_imeg_m.imegmodid, 
          g_imeg_m.imegmodid_desc,g_imeg_m.imegmoddt,g_imeg_m.imeg002
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aimi094_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aimi094_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 

{</section>}

{<section id="aimi094.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION aimi094_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_imeg_m.imeg001
   LET g_pk_array[1].column = 'imeg001'
   LET g_pk_array[2].values = g_imeg_m.imeg003
   LET g_pk_array[2].column = 'imeg003'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="aimi094.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION aimi094_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aimi094_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_imeg_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="aimi094.action_chk" >}
PRIVATE FUNCTION aimi094_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>}
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="aimi094.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

