<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aimi093" std_prog="aimi093" erpver="1.0" module="AIM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.imee001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imee001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imee001  #顯示到畫面上

            NEXT FIELD imee001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.imee003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imee003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imee003  #顯示到畫面上

            NEXT FIELD imee003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.imee004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imee003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imee004  #顯示到畫面上

            NEXT FIELD imee004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.imeecrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeecrtdp  #顯示到畫面上

            NEXT FIELD imeecrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.imeecrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeecrtid  #顯示到畫面上

            NEXT FIELD imeecrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.imeemodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeemodid  #顯示到畫面上

            NEXT FIELD imeemodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.imeeowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeeowndp  #顯示到畫面上

            NEXT FIELD imeeowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.imeeownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeeownid  #顯示到畫面上

            NEXT FIELD imeeownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imef003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imef003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imef003  #顯示到畫面上

            NEXT FIELD imef003                     #返回原欄位

]]>
  </point>
  <point name="desc_show.show" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_imeel004 = ""
   SELECT imeel004 INTO l_imeel004
     FROM imeel_t
    WHERE imeelent = g_enterprise
      AND imeel001 = g_browser[l_ac].b_imee001
      AND imeel002 = g_browser[l_ac].b_imee003
      AND imeel003 = g_dlang
      
   IF NOT cl_null(l_imeel004) THEN    
      LET g_browser[l_ac].b_show = g_browser[l_ac].b_imee003,'(',l_imeel004,')'
   ELSE
      LET g_browser[l_ac].b_show = g_browser[l_ac].b_imee003
   END IF
]]>
  </point>
  <point name="input.a.imee001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL aimi093_imee001_desc()
            IF NOT cl_null(g_imee_m.imee001) AND NOT cl_null(g_imee_m.imee003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_imee_m.imee001 != g_imee001_t  OR g_imee_m.imee003 != g_imee003_t ))) THEN 
                  IF NOT ap_chk_notDup(g_imee_m.imee001,"SELECT COUNT(*) FROM imee_t WHERE "||"imeeent = '" ||g_enterprise|| "' AND "||"imee001 = '"||g_imee_m.imee001 ||"' AND "|| "imee003 = '"||g_imee_m.imee003 ||"'",'std-00004',0) THEN
                     LET g_imee_m.imee001 = g_imee_m_t.imee001 
                     CALL aimi093_imee001_desc()                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_imee_m.imee001) THEN
               IF g_current_row > 0 THEN
                  IF g_browser[g_current_row].b_pid = '0' THEN
                     LET l_n1 = 0
                     SELECT COUNT(*) INTO l_n1
                       FROM imee_t
                      WHERE imeeent = g_enterprise
                        AND imee001 = g_imee_m.imee001
                     IF l_n1 > 0 THEN
                        CALL cl_err(g_imee_m.imee001,'aim-00189',1)
                        LET g_imee_m.imee001 = g_imee_m_t.imee001 
                        CALL aimi093_imee001_desc()                     
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               ELSE
                  LET l_n1 = 0
                  SELECT COUNT(*) INTO l_n1
                    FROM imee_t
                   WHERE imeeent = g_enterprise
                     AND imee001 = g_imee_m.imee001
                  IF l_n1 > 0 THEN
                     CALL cl_err(g_imee_m.imee001,'aim-00189',1)
                     LET g_imee_m.imee001 = g_imee_m_t.imee001 
                     CALL aimi093_imee001_desc()                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT cl_null(g_imee_m.imee004) THEN
#                  IF g_current_row > 0 THEN
#                     IF g_browser[g_current_row].b_pid = '0' THEN
#                        IF g_imee_m.imee004 <> g_imee_m.imee001 THEN
#                           CALL cl_err(g_imee_m.imee001,'aim-00190',1)
#                           LET g_imee_m.imee001 = g_imee_m_t.imee001
#                           CALL aimi093_imee001_desc()
#                           NEXT FIELD imee001
#                        END IF
#                     END IF
#                  ELSE
#                     IF g_imee_m.imee004 <> g_imee_m.imee001 THEN
#                        CALL cl_err(g_imee_m.imee001,'aim-00190',1)
#                        LET g_imee_m.imee001 = g_imee_m_t.imee001
#                        CALL aimi093_imee001_desc()
#                        NEXT FIELD imee001
#                     END IF
#                  END IF
                  CALL aimi093_chk_imee004()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_imee_m.imee001,g_errno,1)
                     LET g_imee_m.imee001 = g_imee_m_t.imee001
                     CALL aimi093_imee001_desc()
                     NEXT FIELD imee001
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.imee003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL aimi093_imee003_desc()          
            IF NOT cl_null(g_imee_m.imee001) AND NOT cl_null(g_imee_m.imee003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_imee_m.imee001 != g_imee001_t  OR g_imee_m.imee003 != g_imee003_t ))) THEN 
                  IF NOT ap_chk_notDup(g_imee_m.imee003,"SELECT COUNT(*) FROM imee_t WHERE "||"imeeent = '" ||g_enterprise|| "' AND "||"imee001 = '"||g_imee_m.imee001 ||"' AND "|| "imee003 = '"||g_imee_m.imee003 ||"'",'std-00004',0) THEN 
                     LET g_imee_m.imee003 = g_imee_m_t.imee003
                     CALL aimi093_imee003_desc() 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF g_current_row > 0 THEN
                  IF g_browser[g_current_row].b_pid = '0' THEN
                     LET g_imee_m.imee004 = g_imee_m.imee003
                  END IF
               ELSE
                  LET g_imee_m.imee004 = g_imee_m.imee003
               END IF
               DISPLAY BY NAME g_imee_m.imee004 
#               IF g_imee_m.imee004 = g_imee_m.imee003 THEN
#                  CALL cl_err(g_imee_m.imee003,'aim-00188',1)
#                  LET g_imee_m.imee003 = g_imee_m_t.imee003
#                  CALL aimi093_imee003_desc() 
#                  NEXT FIELD CURRENT
#               END IF
            END IF


]]>
  </point>
  <point name="input.a.imee004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aimi093_desc()
            IF NOT cl_null(g_imee_m.imee004) AND NOT cl_null(g_imee_m.imee001) THEN
#               IF g_current_row > 0 THEN
#                  IF g_browser[g_current_row].b_pid = '0' THEN
#                     IF g_imee_m.imee004 <> g_imee_m.imee003 THEN
#                        CALL cl_err(g_imee_m.imee001,'aim-00190',1)
#                        LET g_imee_m.imee001 = g_imee_m_t.imee001
#                        CALL aimi093_imee001_desc()
#                        NEXT FIELD imee001
#                     END IF
#                  END IF
#               ELSE
#                  IF g_imee_m.imee004 <> g_imee_m.imee003 THEN
#                     CALL cl_err(g_imee_m.imee001,'aim-00190',1)
#                     LET g_imee_m.imee001 = g_imee_m_t.imee001
#                     CALL aimi093_imee001_desc()
#                     NEXT FIELD imee001
#                  END IF
#               END IF
#               IF g_imee_m.imee004 = g_imee_m.imee003 THEN
#                  CALL cl_err(g_imee_m.imee004,'aim-00188',1)
#                  LET g_imee_m.imee004 = g_imee_m_t.imee004
#                  CALL aimi093_desc()
#                  NEXT FIELD imee004
#               END IF
               CALL aimi093_chk_imee004()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imee_m.imee004,g_errno,1)
                  LET g_imee_m.imee004 = g_imee_m_t.imee004
                  CALL aimi093_desc()
                  NEXT FIELD imee004
               END IF
            END IF
            ]]>
  </point>
  <point name="input.a.imee009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_imee_m.imee009) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.imef003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_imee_m.imee001) AND NOT cl_null(g_imee_m.imee003) AND NOT cl_null(g_imef_d[l_ac].imef003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_imee_m.imee001 != g_imee001_t OR g_imee_m.imee003 != g_imee003_t OR g_imef_d[l_ac].imef003 != g_imef_d_t.imef003))) THEN 
                  IF NOT ap_chk_notDup(g_imef_d[l_ac].imef003,"SELECT COUNT(*) FROM imef_t WHERE "||"imefent = '" ||g_enterprise|| "' AND "||"imef001 = '"||g_imee_m.imee001 ||"' AND "|| "imef002 = '"||g_imee_m.imee003 ||"' AND "|| "imef003 = '"||g_imef_d[l_ac].imef003 ||"'",'std-00004',0) THEN 
                     LET g_imef_d[l_ac].imef003 = g_imef_d_t.imef003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.c.imee004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_imee_m.imee004             #給予default值

            #給予arg
            IF NOT cl_null(g_imee_m.imee001) THEN
               LET g_qryparam.where = " imee001 = '",g_imee_m.imee001,"'"
            END IF
            CALL q_imee003()                                #呼叫開窗

            LET g_imee_m.imee004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_imee_m.imee004 TO imee004              #顯示到畫面上
            LET g_qryparam.where = ""
            NEXT FIELD imee004                          #返回原欄位

]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = g_imee_m.imee003
   LET g_ref_fields[3] = g_imef_d[l_ac].imef003
   CALL ap_ref_array2(g_ref_fields," SELECT imefl005 FROM imefl_t WHERE imeflent = '"||g_enterprise||"' AND imefl001 = ? AND imefl002 = ? AND imefl003 = ? AND imefl004 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_imef_d[l_ac].imefl005 = g_rtn_fields[1] 
   DISPLAY BY NAME g_imef_d[l_ac].imefl005]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = g_imee_m.imee003
   CALL ap_ref_array2(g_ref_fields," SELECT imeel004 FROM imeel_t WHERE imeelent = '"||g_enterprise||"' AND imeel001 = ? AND imeel002 = ? AND imeel003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_imee_m.imeel004_2 = g_rtn_fields[1] 
   DISPLAY g_imee_m.imeel004_2 TO imeel004_2
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = ' '
   CALL ap_ref_array2(g_ref_fields," SELECT imeel004,imeel005 FROM imeel_t WHERE imeelent = '"||g_enterprise||"' AND imeel001 = ? AND imeel002 = ? AND imeel003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_imee_m.imeel004 = g_rtn_fields[1] 
   LET g_imee_m.imeel005 = g_rtn_fields[2] 
   DISPLAY g_imee_m.imeel004,g_imee_m.imeel005 TO imeel004,imeel005
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = g_imee_m.imee004
   CALL ap_ref_array2(g_ref_fields,"SELECT imeel004 FROM imeel_t WHERE imeelent='"||g_enterprise||"' AND imeel001=? AND imeel002=? AND imeel003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imee_m.imee004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imee_m.imee004_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imeeownid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_imee_m.imeeownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imee_m.imeeownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imeeowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imee_m.imeeowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imee_m.imeeowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imeecrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_imee_m.imeecrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imee_m.imeecrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imeecrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imee_m.imeecrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imee_m.imeecrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imeemodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_imee_m.imeemodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imee_m.imeemodid_desc
]]>
  </point>
  <point name="function.aimi093_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+參考欄位顯示
PRIVATE FUNCTION aimi093_desc()
 

   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = g_imee_m.imee004
   CALL ap_ref_array2(g_ref_fields,"SELECT imeel004 FROM imeel_t WHERE imeelent='"||g_enterprise||"' AND imeel001=? AND imeel002=? AND imeel003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imee_m.imee004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imee_m.imee004_desc
END FUNCTION]]>
  </point>
  <point name="function.aimi093_chk_imee004" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+前段節點編號檢查
PRIVATE FUNCTION aimi093_chk_imee004()
DEFINE l_n       LIKE type_t.num5
DEFINE l_n1      LIKE type_t.num5
DEFINE l_n2      LIKE type_t.num5

   LET g_errno = ""
   LET l_n2 = 0
   SELECT COUNT(*) INTO l_n2
     FROM imee_t
    WHERE imeeent = g_enterprise
      AND imee001 = g_imee_m.imee001
      AND imee003 = g_imee_m.imee004
      AND imeestus = 'Y'
#   LET l_n = 0
#   SELECT COUNT(*) INTO l_n
#     FROM imee_t
#    WHERE imeeent = g_enterprise
#      AND imee003 = g_imee_m.imee004
#      AND imeestus = 'Y'
#   LET l_n1 = 0
#   SELECT COUNT(*) INTO l_n1
#     FROM imee_t
#    WHERE imeeent = g_enterprise
#      AND imee001 = g_imee_m.imee004
   IF l_n2 = 0 AND g_imee_m.imee004 <> g_imee_m.imee001 THEN
      LET g_errno = 'aim-00139'
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aimi093_chk_imee010" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+人工輸入數值格式檢查
PRIVATE FUNCTION aimi093_chk_imee010()
DEFINE l_imee010         STRING
DEFINE l_imee            LIKE type_t.chr1
DEFINE l_n               LIKE type_t.num5
DEFINE l_length          LIKE type_t.num5
DEFINE l_flag            LIKE type_t.num5

   LET g_errno = ""
   LET l_imee010 = g_imee_m.imee010
   LET l_length = l_imee010.getLength()
   LET l_imee = l_imee010.subString(l_length,l_length)
   IF l_imee <> '#' THEN
      LET g_errno = 'aim-00140'
      RETURN
   END IF
   LET l_flag = 0
   FOR l_n = 1 TO l_length
       LET l_imee = l_imee010.subString(l_n,l_n)
       IF l_imee <> '#' AND l_imee <> '.' THEN
          LET g_errno = 'aim-00140'
          EXIT FOR
       END IF
       IF l_imee = '.' THEN
          LET l_flag = l_flag +1
       END IF
       IF l_flag > 1 THEN
          LET g_errno = 'aim-00140'
          EXIT FOR
       END IF
   END FOR
END FUNCTION]]>
  </point>
  <point name="function.aimi093_chk_imee012" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+人工输入数值上限检查
PRIVATE FUNCTION aimi093_chk_imee012()
DEFINE l_imee010        STRING
DEFINE l_imee012        LIKE type_t.num5

   LET g_errno = ""
   
   IF NOT cl_null(g_imee_m.imee010) THEN
      LET l_imee010 = cl_replace_str(g_imee_m.imee010,'#','9')
      LET l_imee012 = l_imee010
      IF g_imee_m.imee012 > l_imee012 THEN
         LET g_errno = 'aim-00141'
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aimi093_imef_desc" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 單身多語言欄位顯示
PRIVATE FUNCTION aimi093_imef_desc()
   
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = g_imee_m.imee003
   LET g_ref_fields[3] = g_imef_d[l_ac].imef003
   CALL ap_ref_array2(g_ref_fields," SELECT imefl005 FROM imefl_t WHERE imeflent = '"||g_enterprise||"' AND imefl001 = ? AND imefl002 = ? AND imefl003 = ? AND imefl004 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_imef_d[l_ac].imefl005 = g_rtn_fields[1] 
   DISPLAY BY NAME g_imef_d[l_ac].imefl005
END FUNCTION]]>
  </point>
  <point name="function.aimi093_def_imee002" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+案例值
PRIVATE FUNCTION aimi093_def_imee002()
DEFINE l_imee004      LIKE imee_t.imee004
DEFINE l_level        LIKE type_t.num10
DEFINE l_sql          STRING
DEFINE l_imee002      STRING
DEFINE l_imee009      STRING
DEFINE l_n            LIKE type_t.num5

   LET l_imee004 = ""
   LET l_imee002 = ""
   LET l_sql = "  SELECT LEVEL,imee004 FROM  (SELECT imee001,imee003,imee004 ",
               "                                FROM imee_t ",
               "                                WHERE imeeent = '",g_enterprise,"' ",
               "                                  AND imee001 = '",g_imee_m.imee001,"' ",
               "                                  AND imee003 <> '",g_imee_m.imee001,"' ",
               "                                  AND imee003 <> imee004 ) ",
               "   START WITH imee003 = '",g_imee_m.imee004,"' ",
               " CONNECT BY PRIOR imee004 = imee003 ",
               " ORDER BY LEVEL desc"
   PREPARE aimi093_sel_imee004_pr FROM l_sql
   DECLARE aimi093_sel_imee004_cs CURSOR FOR aimi093_sel_imee004_pr
   FOREACH aimi093_sel_imee004_cs INTO l_level,l_imee004
      CALL aimi093_def_imee002_has(g_imee_m.imee001,l_imee004,l_imee002) RETURNING l_imee002
   END FOREACH
   IF g_imee_m.imee004 <> g_imee_m.imee003 THEN
      CALL aimi093_def_imee002_has(g_imee_m.imee001,g_imee_m.imee004,l_imee002) RETURNING l_imee002
   END IF
   IF g_imee_m.imee006 = '0' THEN
      LET l_imee002 = l_imee002,g_imee_m.imee007
   END IF
   IF g_imee_m.imee006 = '1' THEN
      LET l_imee002 = l_imee002,'S'
   END IF
   IF g_imee_m.imee006 = '2' THEN
      IF g_imee_m.imee008 = '1' THEN
         IF g_imee_m.imee009 >= 1 THEN
            LET l_imee009 = ""
            FOR l_n = 1 TO g_imee_m.imee009
                LET l_imee009 = l_imee009,'C'
            END FOR
            LET l_imee002 = l_imee002,l_imee009
         END IF
      ELSE
         LET l_imee002 = l_imee002,g_imee_m.imee010
      END IF
   END IF
   LET g_imee_m.imee002 = l_imee002
   
END FUNCTION]]>
  </point>
  <point name="function.aimi093_imee001_desc" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+品名種類帶值
PRIVATE FUNCTION aimi093_imee001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = ' '
   CALL ap_ref_array2(g_ref_fields," SELECT imeel004,imeel005 FROM imeel_t WHERE imeelent = '"||g_enterprise||"' AND imeel001 = ? AND imeel002 = ? AND imeel003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_imee_m.imeel004 = g_rtn_fields[1] 
   LET g_imee_m.imeel005 = g_rtn_fields[2] 
   DISPLAY g_imee_m.imeel004,g_imee_m.imeel005 TO imeel004,imeel005
END FUNCTION]]>
  </point>
  <point name="function.aimi093_imee003_desc" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 節點編號帶值
PRIVATE FUNCTION aimi093_imee003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imee_m.imee001
   LET g_ref_fields[2] = g_imee_m.imee003
   CALL ap_ref_array2(g_ref_fields," SELECT imeel004 FROM imeel_t WHERE imeelent = '"||g_enterprise||"' AND imeel001 = ? AND imeel002 = ? AND imeel003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_imee_m.imeel004_2 = g_rtn_fields[1] 
   DISPLAY g_imee_m.imeel004_2 TO imeel004_2
   
END FUNCTION]]>
  </point>
  <point name="function.aimi093_def_imee002_has" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 組案例數據
# Memo...........:
# Usage..........: CALL aimi093_def_imee002_has(p_imee001,p_imee003,p_imee002)
#                  RETURNING p_imee002
# Input parameter: p_imee001   品名種類
#                : p_imee002   節點編號
# Return code....: p_imee002   組出的案例
# Date & Author..: 2013/12/10 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi093_def_imee002_has(p_imee001,p_imee003,p_imee002)
DEFINE p_imee001      LIKE imee_t.imee001
DEFINE p_imee002      STRING
DEFINE p_imee003      LIKE imee_t.imee003
DEFINE l_imee         RECORD LIKE imee_t.*
DEFINE l_imee009      STRING
DEFINE l_n            LIKE type_t.num5

  SELECT * INTO l_imee.*
     FROM imee_t
    WHERE imeeent = g_enterprise
      AND imee001 = p_imee001
      AND imee003 = p_imee003
   IF l_imee.imee006 = '0' THEN
      LET p_imee002 = p_imee002,l_imee.imee007
   END IF
   IF l_imee.imee006 = '1' THEN
      LET p_imee002 = p_imee002,'S'
   END IF
   IF l_imee.imee006 = '2' THEN
      IF l_imee.imee008 = '1' THEN
         IF l_imee.imee009 >= 1 THEN
            LET l_imee009 = ""
            FOR l_n = 1 TO l_imee.imee009
                LET l_imee009 = l_imee009,'C'
            END FOR
            LET p_imee002 = p_imee002,l_imee009
         END IF
      ELSE
         LET p_imee002 = p_imee002,l_imee.imee010
      END IF
   END IF
   RETURN p_imee002
END FUNCTION]]>
  </point>
  <point name="function.aimi093_update_imee002" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 更新下節案例
# Memo...........:
# Usage..........: CALL aimi093_update_imee002()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/12/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi093_update_imee002()
DEFINE l_imee003       LIKE imee_t.imee003
DEFINE l_imee004       LIKE imee_t.imee004
DEFINE l_level         LIKE type_t.num10
DEFINE l_sql           STRING
DEFINE l_imee002       STRING
DEFINE l_imee009       STRING
DEFINE l_n             LIKE type_t.num5
DEFINE l_imee          RECORD LIKE imee_t.*

   CALL s_transaction_begin()
   LET l_imee003 = ''
   LET l_sql = "  SELECT LEVEL,imee003  FROM ( SELECT imee001,imee003,imee004 ",
               "                                 FROM imee_t ",
               "                                WHERE imeeent = '",g_enterprise,"' ",
               "                                  AND imee001 = '",g_imee_m.imee001,"' ",
               "                                  AND imee003 <> '",g_imee_m.imee001,"' ",
               "                                  AND imee003 <> imee004 ) ",
               "   START WITH imee004 = '",g_imee_m.imee003,"' ",
               " CONNECT BY PRIOR imee003 = imee004 ",
               " ORDER BY LEVEL "
   PREPARE aimi093_sel_imee003imee004_pr FROM l_sql
   DECLARE aimi093_sel_imee003imee004_cs CURSOR FOR aimi093_sel_imee003imee004_pr
   FOREACH aimi093_sel_imee003imee004_cs INTO l_level,l_imee003
      INITIALIZE l_imee.* TO NULL
      SELECT * INTO l_imee.*
        FROM imee_t
       WHERE imeeent = g_enterprise
         AND imee001 = g_imee_m.imee001
         AND imee003 = l_imee003
      LET l_imee004 = ""
      LET l_imee002 = ""
      LET l_sql = "  SELECT LEVEL,imee004 FROM  (SELECT imee001,imee003,imee004 ",
                  "                                FROM imee_t ",
                  "                                WHERE imeeent = '",g_enterprise,"' ",
                  "                                  AND imee001 = '",g_imee_m.imee001,"' ",
                  "                                  AND imee003 <> '",g_imee_m.imee001,"' ",
                  "                                  AND imee003 <> imee004 ) ",
                  "   START WITH imee003 = '",l_imee.imee004,"' ",
                  " CONNECT BY PRIOR imee004 = imee003 ",
                  " ORDER BY LEVEL desc"
      PREPARE aimi093_sel_imee004_pr1 FROM l_sql
      DECLARE aimi093_sel_imee004_cs1 CURSOR FOR aimi093_sel_imee004_pr1
      FOREACH aimi093_sel_imee004_cs1 INTO l_level,l_imee004
         CALL aimi093_def_imee002_has(g_imee_m.imee001,l_imee004,l_imee002) RETURNING l_imee002
      END FOREACH
      IF l_imee.imee004 <> l_imee.imee003 THEN
         CALL aimi093_def_imee002_has(g_imee_m.imee001,l_imee.imee004,l_imee002) RETURNING l_imee002
      END IF
      IF l_imee.imee006 = '0' THEN
         LET l_imee002 = l_imee002,l_imee.imee007
      END IF
      IF l_imee.imee006 = '1' THEN
         LET l_imee002 = l_imee002,'S'
      END IF
      IF l_imee.imee006 = '2' THEN
         IF l_imee.imee008 = '1' THEN
            IF l_imee.imee009 >= 1 THEN
               LET l_imee009 = ""
               FOR l_n = 1 TO l_imee.imee009
                   LET l_imee009 = l_imee009,'C'
               END FOR
               LET l_imee002 = l_imee002,l_imee009
            END IF
         ELSE
            LET l_imee002 = l_imee002,l_imee.imee010
         END IF
      END IF
      LET l_imee.imee002 = l_imee002
      UPDATE imee_t SET imee002 = l_imee.imee002
       WHERE imeeent = g_enterprise
         AND imee001 = g_imee_m.imee001
         AND imee003 = l_imee.imee003
      IF SQLCA.sqlcode THEN
         CALL cl_err('Update error!',SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END FOREACH
   CALL s_transaction_end('Y','0')
END FUNCTION]]>
  </point>
  <point name="browser_create.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#   LET g_sql = " SELECT UNIQUE imee001 FROM aimi093_tmp ORDER BY imee001"
#   PREPARE master_type1 FROM g_sql
#   DECLARE master_typecur1 CURSOR FOR master_type1
#   
#   INITIALIZE g_browser_root TO NULL
#   
#   LET l_ac = 1
#   FOREACH master_typecur1 INTO g_browser[l_ac].b_imee001
#      #確定root節點所在
#      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
#      #此處為帳別部分(LV-1)
#      LET g_browser[l_ac].b_imee003  = g_browser[l_ac].b_imee001
#      LET g_browser[l_ac].b_imee001 = g_browser[l_ac].b_imee001
#      LET g_browser[l_ac].b_pid = '0' CLIPPED
#      LET g_browser[l_ac].b_id = l_ac USING "<<<"
#      LET g_browser[l_ac].b_exp = TRUE
#      LET g_browser[l_ac].b_hasC = TRUE
#      LET g_browser[l_ac].b_expcode = 2
#      LET l_pid = g_browser[l_ac].b_id CLIPPED
#      LET l_ac = l_ac + 1
#      
#      #抓出LV2的所有資料
#      LET g_sql = " SELECT UNIQUE imee001,imee003,imee004,exp_code FROM aimi093_tmp a ",
#                  " WHERE a.imee001 = ? ",
#                  " AND a.imee003 = a.imee004 ", 
#                  " AND a.imee001 <> a.imee004 ",
#                  " ORDER BY a.imee003"
#      PREPARE master_getLV21 FROM g_sql
#      DECLARE master_getLV2cur1 CURSOR FOR master_getLV21
#      
#      #以下為一般資料root(LV-2)
#      OPEN master_getLV2cur1 USING g_browser[l_ac-1].b_imee001
#      
#      LET g_cnt = l_ac
#      
#      FOREACH master_getLV2cur1 INTO g_browser[g_cnt].b_imee001,g_browser[g_cnt].b_imee003,g_browser[g_cnt].b_imee004,g_browser[g_cnt].b_expcode
#         #去除多餘空白
#         #LET g_browser[g_cnt].b_imee003 = g_browser[g_cnt].b_imee003 CLIPPED
#         LET g_browser[g_cnt].b_pid = l_pid
#         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
#         LET g_browser[g_cnt].b_exp = FALSE
#         #CASE g_browser[g_cnt].b_expcode
#         #   WHEN 2
#         #      LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
#         #   WHEN 1
#         #      LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
#         #   WHEN 0
#         #      LET g_browser[g_cnt].b_hasC = FALSE
#         #   WHEN -1
#         #      #向下查找到展開值不等於-1得節點(temp table中查找)
#         #      LET g_cnt = aimi093_find_node(g_cnt)
#         #END CASE
#         LET g_browser[g_cnt].b_hasC = TRUE
# 
#         LET g_cnt = g_cnt + 1   
#         
#         IF g_cnt > g_max_rec AND g_error_show = 1 THEN
#            CALL cl_err('',9035,0)
#            EXIT FOREACH
#         END IF
#      END FOREACH
#      LET l_ac = g_browser.getLength()
#      
#      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
#         EXIT FOREACH
#      END IF
#   END FOREACH
#   
#   LET g_error_show = 0
#   
#   #組合描述欄位&刪除多於資料
#   FOR l_ac = 1 TO g_browser.getLength()
#      IF cl_null(g_browser[l_ac].b_imee003) THEN
#         CALL g_browser.deleteElement(l_ac)
#         LET l_ac = l_ac - 1
#      ELSE
#         CALL aimi093_desc_show(l_ac)
#      END IF
#   END FOR
#   CALL g_browser.deleteElement(l_ac)
#   
#   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
#   
#   FREE master_getLV21
#   RETURN

   #先找出所有的帳別資料
   LET g_sql = " SELECT UNIQUE imee001 FROM aimi093_tmp ORDER BY imee001"
   PREPARE master_type1 FROM g_sql
   DECLARE master_typecur1 CURSOR FOR master_type1
   
   INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   FOREACH master_typecur1 INTO g_browser[l_ac].b_imee001
      #確定root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      LET g_browser[l_ac].b_imee003  = g_browser[l_ac].b_imee001
      LET g_browser[l_ac].b_imee001 = g_browser[l_ac].b_imee001
      LET g_browser[l_ac].b_pid = '0' CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      LET g_sql = " SELECT UNIQUE imee001,imee003,imee004,exp_code FROM aimi093_tmp a ",
                  " WHERE ",
                  "a.imee001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(*) FROM aimi093_tmp b WHERE a.imee004 = b.imee003 ", 
                  " AND a.imee001 = b.imee001",
                  ") = 0 OR ", 
                  " a.imee003 = a.imee004 )", 
                  " ORDER BY a.imee003"
      PREPARE master_getLV21 FROM g_sql
      DECLARE master_getLV2cur1 CURSOR FOR master_getLV21
      
      #以下為一般資料root(LV-2)
      OPEN master_getLV2cur1 USING g_browser[l_ac-1].b_imee001
      
      LET g_cnt = l_ac
      
      FOREACH master_getLV2cur1 INTO g_browser[g_cnt].b_imee001,g_browser[g_cnt].b_imee003,g_browser[g_cnt].b_imee004,g_browser[g_cnt].b_expcode
         #去除多餘空白
         #LET g_browser[g_cnt].b_imee003 = g_browser[g_cnt].b_imee003 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         CASE g_browser[g_cnt].b_expcode
            WHEN 2
               LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
            WHEN 1
               LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
            WHEN 0
               LET g_browser[g_cnt].b_hasC = FALSE
            WHEN -1
               #向下查找到展開值不等於-1得節點(temp table中查找)
               LET g_cnt = aimi093_find_node(g_cnt)
         END CASE
 
         LET g_cnt = g_cnt + 1   
         
         IF g_cnt > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err('',9035,0)
            EXIT FOREACH
         END IF
      END FOREACH
      LET l_ac = g_browser.getLength()
      
      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
         EXIT FOREACH
      END IF
   END FOREACH
   
   LET g_error_show = 0
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_imee003) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL aimi093_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
   
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
   
   FREE master_getLV21
   RETURN]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      DELETE FROM imefl_t
       WHERE imeflent = g_enterprise 
         AND imefl001 = g_imee_m.imee001
         AND imefl002 = g_imee_m.imee003
      IF SQLCA.sqlcode THEN
         CALL cl_err("imef_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF  
          ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_n              LIKE type_t.num5]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#      LET l_n = 0
#      SELECT COUNT(*) INTO l_n
#        FROM imee_t
#       WHERE imeeent = g_enterprise
#         AND imee001 = g_imee_m.imee001
#      IF l_n = 1 THEN  
#         DELETE FROM imee_t
#          WHERE imeeent = g_enterprise 
#            AND imee001 = g_imee_m.imee001
#            AND imee003 = g_imee_m.imee004
#         IF SQLCA.sqlcode THEN
#            CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0) 
#            CALL s_transaction_end('N','0')
#            RETURN
#         END IF
#         DELETE FROM imeel_t
#          WHERE imeelent = g_enterprise
#            AND imeel001 = g_imee_m.imee001
#            AND imeel002 = g_imee_m.imee004
#         IF SQLCA.sqlcode THEN
#            CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0) 
#            CALL s_transaction_end('N','0')
#            RETURN
#         END IF
#      END IF
      DELETE FROM imeel_t
       WHERE imeelent = g_enterprise
         AND imeel001 = g_imee_m.imee001
         AND imeel002 = g_imee_m.imee003
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM imee_t
       WHERE imeeent = g_enterprise
         AND imee001 = g_imee_m.imee001
      IF l_n = 0 THEN
         DELETE FROM imeel_t
          WHERE imeelent = g_enterprise
            AND imeel001 = g_imee_m.imee001
            AND imeel002 = ' '
         IF SQLCA.sqlcode THEN
            CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0) 
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF      ]]>
  </point>
  <point name="desc_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_imeel004    LIKE imeel_t.imeel004]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_n        LIKE type_t.num5
   
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf('.',1) = 0 THEN
      INITIALIZE g_imee_m.* TO NULL
      DISPLAY BY NAME g_imee_m.*
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
      DISPLAY '' TO FORMONLY.b_index
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
 
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_imee_m.imee001 = g_browser[g_current_idx].b_imee001
   LET g_imee_m.imee003 = g_browser[g_current_idx].b_imee003


   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE imee001,imeestus,imee004,imee003,imee006,imee007,imee008,imee009,imee010,imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid,imeemoddt,imee002
 INTO g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt,g_imee_m.imee002
 FROM imee_t
 WHERE imeeent = g_enterprise AND imee001 = g_imee_m.imee001 AND imee003 = g_imee_m.imee003
   IF SQLCA.sqlcode THEN
      CALL cl_err("imee_t",SQLCA.sqlcode,1)
      INITIALIZE g_imee_m.* TO NULL
      RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF cl_null(g_imee_m.imee001) THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段action控制
   IF g_imee_m.imee003 = g_imee_m.imee004 THEN
      CALL cl_set_act_visible("reproduce", TRUE)
   ELSE
      CALL cl_set_act_visible("reproduce", FALSE)
   END IF
   LET l_n = 0 
   SELECT COUNT(*) INTO l_n
     FROM imee_t
    WHERE imeeent = g_enterprise
      AND imee001 = g_imee_m.imee001
      AND imee004 = g_imee_m.imee003
      AND imee004 <> imee003
   IF l_n = 0 THEN
      CALL cl_set_act_visible("delete", TRUE)
   ELSE
      CALL cl_set_act_visible("delete", FALSE)
   END IF
   #end add-point  
   
   
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aimi093_show()
   
   RETURN]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_detail_idx = 1]]>
  </point>
  <point name="input.a.imee006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aimi093_set_entry(p_cmd)
            CALL aimi093_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.a.imee008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aimi093_set_entry(p_cmd)
            CALL aimi093_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.a.imee010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_imee_m.imee010) THEN
               CALL aimi093_chk_imee010()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imee_m.imee010,g_errno,1)
                  LET g_imee_m.imee010 = g_imee_m_t.imee010
                  NEXT FIELD imee010
               END IF
            END IF]]>
  </point>
  <point name="input.a.imee011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_imee_m.imee011) THEN
               IF NOT s_num_isnum(g_imee_m.imee011) THEN
                  CALL cl_err(g_imee_m.imee011,'aoo-00266',1)
                  LET g_imee_m.imee011 = g_imee_m_t.imee011
                  NEXT FIELD imee011
               END IF
               IF g_imee_m.imee011 < 0 THEN
                  CALL cl_err(g_imee_m.imee011,'aim-00009',1)
                  LET g_imee_m.imee011 = g_imee_m_t.imee011
                  NEXT FIELD imee011
               END IF
               IF NOT cl_null(g_imee_m.imee012) THEN
                  IF g_imee_m.imee011 > g_imee_m.imee012 THEN
                     CALL cl_err(g_imee_m.imee011,'aim-00142',1)
                     LET g_imee_m.imee011 = g_imee_m_t.imee011
                     NEXT FIELD imee011
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.imee012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_imee_m.imee012) THEN
               IF NOT s_num_isnum(g_imee_m.imee012) THEN
                  CALL cl_err(g_imee_m.imee012,'aoo-00266',1)
                  LET g_imee_m.imee012 = g_imee_m_t.imee012
                  NEXT FIELD imee012
               END IF
               IF NOT cl_null(g_imee_m.imee011) THEN
                  IF g_imee_m.imee011 > g_imee_m.imee012 THEN
                     CALL cl_err(g_imee_m.imee012,'aim-00142',1)
                     LET g_imee_m.imee012 = g_imee_m_t.imee012
                     NEXT FIELD imee012
                  END IF
               END IF
               CALL aimi093_chk_imee012()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imee_m.imee012,g_errno,1)
                  LET g_imee_m.imee012 = g_imee_m_t.imee012
                  NEXT FIELD imee012
               END IF
            END IF]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF g_imef_d_t.imef003 <> g_imef_d[l_ac].imef003 THEN
                  DELETE FROM imefl_t
                   WHERE imeflent = g_enterprise
                     AND imefl001 = g_imee_m.imee001
                     AND imefl002 = g_imee_m.imee003
                     AND imefl003 = g_imef_d_t.imef003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("imefl_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                  END IF
               END IF]]>
  </point>
  <point name="input.body.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_imee_m.imee006 <> '1' THEN
               CALL cl_err('','aim-00136',0)
               NEXT FIELD imee006
            END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_imee_m.imee006 <> '1' THEN
               CALL cl_err('','aim-00136',0)
               NEXT FIELD imee006
            END IF]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_detail_idx = 0 THEN
               LET g_detail_idx =1
            END IF]]>
  </point>
  <point name="input.c.imeel004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.imeel004_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.imeel005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_n1            LIKE type_t.num5]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_imef_d[l_ac].imef003)  THEN
                  CALL n_imefl(g_imee_m.imee001,g_imee_m.imee003,g_imef_d[l_ac].imef003)
                  CALL aimi093_imef_desc()
               END IF ]]>
  </point>
  <point name="input.g.imee006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.imee008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#                  IF g_current_row > 0 THEN
#                     IF g_browser[g_current_row].b_pid = '0' THEN
#                        INSERT INTO imee_t (imeeent,imee001,imeestus,imee004,imee003,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid,imeemoddt)
#                        VALUES (g_enterprise,g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt) # DISK WRITE
#                        IF SQLCA.sqlcode THEN
#                           CALL cl_err("imee_t",SQLCA.sqlcode,1)
#                           CALL s_transaction_end('N','0')
#                           CONTINUE DIALOG
#                        END IF
#                     END IF
#                  ELSE
#                     INSERT INTO imee_t (imeeent,imee001,imeestus,imee004,imee003,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid,imeemoddt)
#                     VALUES (g_enterprise,g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee004,g_imee_m.imeeownid,g_imee_m.imeeowndp,g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt) # DISK WRITE
#                     IF SQLCA.sqlcode THEN
#                        CALL cl_err("imee_t",SQLCA.sqlcode,1)
#                        CALL s_transaction_end('N','0')
#                        CONTINUE DIALOG
#                     END IF
#                  END IF]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     IF g_imee_m.imee006 <> '1' THEN
                        DELETE FROM imef_t 
                         WHERE imefent = g_enterprise
                           AND imef001 = g_imee_m.imee001
                           AND imef002 = g_imee_m.imee003
                        IF SQLCA.sqlcode THEN
                           CALL cl_err("imef_t",SQLCA.sqlcode,1)
                           CALL s_transaction_end('N','0')
                        END IF
                        DELETE FROM imefl_t 
                         WHERE imeflent = g_enterprise
                           AND imefl001 = g_imee_m.imee001
                           AND imefl002 = g_imee_m.imee003
                        IF SQLCA.sqlcode THEN
                           CALL cl_err("imefl_t",SQLCA.sqlcode,1)
                           CALL s_transaction_end('N','0')
                        END IF
                     END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  CALL aimi093_def_imee002()]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL aimi093_def_imee002()
               ]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                CASE 
                   WHEN INFIELD (imeel004)
                      IF NOT cl_null(g_imee_m.imee001) THEN
                         CALL n_imeel(g_imee_m.imee001,' ')
                         CALL aimi093_imee001_desc()
                      END IF
                   
                   WHEN INFIELD (imeel005)   
                      IF NOT cl_null(g_imee_m.imee001) THEN
                         CALL n_imeel(g_imee_m.imee001,' ')
                         CALL aimi093_imee001_desc()
                      END IF
                   
                   WHEN INFIELD (imeel004_2)
                      IF NOT cl_null(g_imee_m.imee001) AND NOT cl_null(g_imee_m.imee003) THEN
                         CALL n_imeel(g_imee_m.imee001,g_imee_m.imee003)
                         CALL aimi093_imee003_desc()
                      END IF
                END CASE      ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL aimi093_update_imee002()]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      INITIALIZE g_imee_m_t.* TO NULL 
      IF g_current_row > 0 THEN
         IF g_browser[g_current_row].b_pid = '0' THEN
            LET g_imee_m.imee005 = 1
         ELSE
            LET g_imee_m.imee001 = g_browser[g_current_row].b_imee001
            SELECT imeel004,imeel005 INTO g_imee_m.imeel004,g_imee_m.imeel005
              FROM imeel_t
             WHERE imeelent = g_enterprise
               AND imeel001 = g_browser[g_current_row].b_imee001
               AND imeel002 = g_browser[g_current_row].b_imee001
               AND imeel003 = g_dlang
            SELECT imee003,imee005 +1 INTO g_imee_m.imee004,g_imee_m.imee005
              FROM imee_t
             WHERE imeeent = g_enterprise
               AND imee001 = g_browser[g_current_row].b_imee001
               AND imee003 = g_browser[g_current_row].b_imee003
         END IF 
      END IF
      CALL aimi093_desc()
      CALL aimi093_imee001_desc()
      CALL aimi093_imee003_desc()]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               EXIT DIALOG]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL aimi093_update_imee002()]]>
  </point>
  <point name="reproduce.a.imee001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT cl_null(l_newno) AND NOT cl_null(l_newno02) THEN
            IF NOT ap_chk_notDup(l_newno,"SELECT COUNT(*) FROM imee_t WHERE "||"imeeent = '" ||g_enterprise|| "' AND "||"imee001 = '"||l_newno||"' AND "|| "imee003 = '"||l_newno02 ||"'",'std-00004',0) THEN
               LET l_newno = ""
               NEXT FIELD CURRENT
            END IF
         END IF]]>
  </point>
  <point name="reproduce.a.imee003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT cl_null(l_newno) AND NOT cl_null(l_newno02) THEN
            IF NOT ap_chk_notDup(l_newno02,"SELECT COUNT(*) FROM imee_t WHERE "||"imeeent = '" ||g_enterprise|| "' AND "||"imee001 = '"||l_newno||"' AND "|| "imee003 = '"||l_newno02 ||"'",'std-00004',0) THEN
               LET l_newno02 = ""
               NEXT FIELD CURRENT
            END IF
         END IF]]>
  </point>
  <point name="reproduce.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      INSERT INTO imefl_t(imeflent,imefl001,imefl002,imefl003,imefl004,imefl005)
      SELECT g_enterprise,l_newno,l_newno02,imefl003,imefl004,imefl005
        FROM imefl_t
       WHERE imeflent = g_enterprise
         AND imefl001 = g_imef_m.imef001
         AND imefl002 = g_imef_m.imef003
      IF SQLCA.sqlcode THEN
         CALL cl_err("imefl_t",SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_sql       STRING
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   IF g_imee_m.imee001 IS NULL OR g_imee_m.imee003 IS NULL THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_imee001_t = g_imee_m.imee001
   LET g_imee003_t = g_imee_m.imee003

   CALL cl_set_comp_entry("imee001",TRUE)
   CALL cl_set_head_visible("","YES")
 
   
   INPUT l_newno FROM imee001 ATTRIBUTE(FIELD ORDER FORM)
      
      BEFORE INPUT
      
      AFTER FIELD imee001
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         IF NOT cl_null(l_newno) THEN
            IF NOT ap_chk_notDup(l_newno,"SELECT COUNT(*) FROM imee_t WHERE "||"imeeent = '" ||g_enterprise|| "' AND "||"imee001 = '"||l_newno ||"' AND "|| "imee003 = '"||g_imee_m.imee003 ||"'",'std-00004',0) THEN
               LET l_newno = ''                   
               NEXT FIELD CURRENT
            END IF
         END IF
      
      AFTER INPUT
         #若取消則直接結束
         IF INT_FLAG = 1 THEN
            LET INT_FLAG = 0
            RETURN
         END IF
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
   END INPUT
   IF INT_FLAG OR l_newno IS NULL THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   CALL s_transaction_begin()
 
   LET l_sql = " SELECT * FROM imee_t ",
                " WHERE imeeent = '",g_enterprise,"'", 
                "   AND imee001 = '",g_imee_m.imee001,"'"
   PREPARE aimi093_sel_imee_pr FROM l_sql
   DECLARE aimi093_sel_imee_cs CURSOR FOR aimi093_sel_imee_pr
   FOREACH aimi093_sel_imee_cs INTO l_master.*
      
      LET l_master.imee001 = l_newno
      #公用欄位給予預設值
      #此段落由子樣板a14產生    
      LET l_master.imeeownid = g_user
      LET l_master.imeeowndp = g_dept
      LET l_master.imeecrtid = g_user
      LET l_master.imeecrtdp = g_dept 
      LET l_master.imeecrtdt = cl_get_current()
      LET l_master.imeemodid = ""
      LET l_master.imeemoddt = ""
      LET l_master.imeestus = 'Y'
      
      INSERT INTO imee_t VALUES (l_master.*)
         IF SQLCA.sqlcode THEN
             CALL cl_err("imee_t",SQLCA.sqlcode,1)
             CALL s_transaction_end('N','0')
             RETURN
         END IF
         
      INSERT INTO imeel_t(imeelent,imeel001,imeel002,imeel003,imeel004,imeel005)
      SELECT imeelent,l_newno,imeel002,imeel003,imeel004,imeel005
        FROM imeel_t
       WHERE imeelent = g_enterprise
         AND imeel001 = g_imee_m.imee001
         AND imeel002 = l_master.imee003
         IF SQLCA.sqlcode THEN
             CALL cl_err("imeel_t",SQLCA.sqlcode,1)
             CALL s_transaction_end('N','0')
             RETURN
         END IF
         
      INSERT INTO imef_t(imefent,imef001,imef002,imef003)
      SELECT imefent,l_newno,imef002,imef003
        FROM imef_t
       WHERE imefent = g_enterprise
         AND imef001 = g_imee_m.imee001
         AND imef002 = l_master.imee003
         IF SQLCA.sqlcode THEN
             CALL cl_err("imef_t",SQLCA.sqlcode,1)
             CALL s_transaction_end('N','0')
             RETURN
         END IF 
 
      INSERT INTO imefl_t(imeflent,imefl001,imefl002,imefl003,imefl004,imefl005,imefl006)
      SELECT imeflent,l_newno,imefl002,imefl003,imefl004,imefl005,imefl006
        FROM imefl_t
       WHERE imeflent = g_enterprise
         AND imefl001 = g_imee_m.imee001
         AND imefl002 = l_master.imee003
         IF SQLCA.sqlcode THEN
             CALL cl_err("imefl_t",SQLCA.sqlcode,1)
             CALL s_transaction_end('N','0')
             RETURN
         END IF   
   END FOREACH
   INSERT INTO imeel_t(imeelent,imeel001,imeel002,imeel003,imeel004,imeel005)
   SELECT imeelent,l_newno,' ',imeel003,imeel004,imeel005
     FROM imeel_t
    WHERE imeelent = g_enterprise
      AND imeel001 = g_imee_m.imee001
      AND imeel002 = ' '
      IF SQLCA.sqlcode THEN
          CALL cl_err("imeel_t",SQLCA.sqlcode,1)
          CALL s_transaction_end('N','0')
          RETURN
      END IF
   CALL s_transaction_end('Y','0')
   ERROR 'ROW(',l_newno,') O.K'
   
   CLOSE aimi093_sel_imee_cs
   
   LET g_wc = g_wc," OR ( imee001 = '", l_newno CLIPPED, "' ", ") " 
   RETURN   ]]>
  </point>
  <point name="reproduce.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INSERT INTO imeel_t(imeelent,imeel001,imeel002,imeel003,imeel004,imeel005)
   SELECT g_enterprise,l_newno,l_newno02,imeel003,imeel004,imeel005
     FROM imeel_t
    WHERE imeelent = g_enterprise
      AND imeel001 = g_imee_m.imee001
      AND imeel002 = g_imee_m.imee003
   IF SQLCA.sqlcode THEN
      CALL cl_err("imeel_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("imee004",TRUE)
   CALL cl_set_comp_entry("imee007,imee008,imee009,imee010",TRUE)
   CALL cl_set_comp_entry("imee011,imee012",TRUE)]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("imeel004,imeel005",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_current_row > 0 AND p_cmd = 'a' THEN
      IF g_browser[g_current_row].b_pid <> '0' THEN
         CALL cl_set_comp_entry("imee001,imeel004,imeel005",FALSE)
      ELSE
         CALL cl_set_comp_entry("imee004",FALSE)
      END IF 
   ELSE
      CALL cl_set_comp_entry("imee004",FALSE)
   END IF
   IF g_imee_m.imee006 <> '0' THEN
      LET g_imee_m.imee007 = ''
      CALL cl_set_comp_entry("imee007",FALSE)
   END IF
   IF g_imee_m.imee006 <> '2' THEN
      LET g_imee_m.imee009 = ''
      LET g_imee_m.imee010 = ''
      LET g_imee_m.imee011 = ''
      LET g_imee_m.imee012 = ''
      CALL cl_set_comp_entry("imee008,imee009,imee010,imee011,imee012",FALSE)
   END IF
   IF g_imee_m.imee008 <> '1'  THEN
      LET g_imee_m.imee009 = ''
      CALL cl_set_comp_entry("imee009",FALSE)
   END IF
   IF g_imee_m.imee008 <> '2'  THEN
      LET g_imee_m.imee011 = ''
      LET g_imee_m.imee012 = ''
      LET g_imee_m.imee010 = ''
      CALL cl_set_comp_entry("imee010,imee011,imee012",FALSE)
   END IF
   ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT imee008 INTO g_imee_m.imee008
     FROM imee_t
    WHERE imeeent = g_enterprise
      AND imee001 = g_imee_m.imee001
      AND imee003 = g_imee_m.imee003]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF NOT cl_ask_confirm('aoo-00270') THEN
      RETURN
   ELSE
      UPDATE imee_t SET imeestus = lc_state 
       WHERE imeeent = g_enterprise
         AND imee001 = g_imee_m.imee001
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
         RETURN
      END IF
   END IF]]>
  </point>
  <section id="aimi093.b_fill" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aimi093_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_imef_d.clear()    #g_imef_d 單頭及單身 
 
 
   #add-point:b_fill段define
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE imef003,'' FROM imef_t",    
               " INNER JOIN imee_t ON imee001 = imef001 ",
               " AND imee003 = imef002 ",
 
               " LEFT JOIN imefl_t ON imee001 = imefl001 AND imee003 = imefl002 AND imef003 = imefl003 AND imefl004 = '",g_lang,"'",
               " WHERE imefent=? AND imef001=? AND imef002=?"
 
   IF NOT cl_null(g_wc_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table1 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY imef003"
 
   PREPARE aimi093_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR aimi093_pb
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
   OPEN b_fill_cs USING g_enterprise,g_imee_m.imee001
                                            ,g_imee_m.imee003
 
                                            
   FOREACH b_fill_cs INTO g_imef_d[l_ac].imef003,g_imef_d[l_ac].imefl005
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
 
   
   CALL g_imef_d.deleteElement(g_imef_d.getLength())
 
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aimi093_pb
 
   
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.browser_create" ver="2" status="" src="s">
    <![CDATA[PRIVATE FUNCTION aimi093_browser_create(p_type)
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create
   {<point name="browser_create.define"/>}
   #end add-point
   
   #先找出所有的帳別資料
   LET g_sql = " SELECT UNIQUE imee001 FROM aimi093_tmp ORDER BY imee001"
   PREPARE master_type FROM g_sql
   DECLARE master_typecur CURSOR FOR master_type
   
   INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   FOREACH master_typecur INTO g_browser[l_ac].b_imee001
      #確定root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      LET g_browser[l_ac].b_imee003  = g_browser[l_ac].b_imee001
      LET g_browser[l_ac].b_imee001 = g_browser[l_ac].b_imee001
      LET g_browser[l_ac].b_pid = '0' CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      LET g_sql = " SELECT UNIQUE imee001,imee003,imee004,exp_code FROM aimi093_tmp a ",
                  " WHERE ",
                  "a.imee001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(*) FROM aimi093_tmp b WHERE a.imee004 = b.imee003 ", 
                  " AND a.imee001 = b.imee001",
                  ") = 0 OR ", 
                  " a.imee003 = a.imee004 )", 
                  " ORDER BY a.imee003"
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      OPEN master_getLV2cur USING g_browser[l_ac-1].b_imee001
      
      LET g_cnt = l_ac
      
      FOREACH master_getLV2cur INTO g_browser[g_cnt].b_imee001,g_browser[g_cnt].b_imee003,g_browser[g_cnt].b_imee004, 
          g_browser[g_cnt].b_expcode
         #去除多餘空白
         #LET g_browser[g_cnt].b_imee003 = g_browser[g_cnt].b_imee003 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = aimi093_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = aimi093_find_node(g_cnt)
         #END CASE
         LET g_browser[g_cnt].b_hasC = TRUE
 
         LET g_cnt = g_cnt + 1   
         
         IF g_cnt > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err('',9035,0)
            EXIT FOREACH
         END IF
      END FOREACH
      LET l_ac = g_browser.getLength()
      
      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
         EXIT FOREACH
      END IF
   END FOREACH
   
   LET g_error_show = 0
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_imee003) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL aimi093_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
   
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
   
   FREE master_getLV2
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.browser_expand" ver="2" status="" src="s">
    <![CDATA[#+ Tree子節點展開
PRIVATE FUNCTION aimi093_browser_expand(p_id)
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         LIKE type_t.chr500
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   #add-point:browser_expand段define
   {<point name="browser_expand.define"/>}
   #end add-point
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_imee003
   LET l_typevalue = g_browser[p_id].b_imee001
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "aimi093_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "imee_t"
         LET ls_exp_code = "'2'"
   END CASE
   
   LET l_sql = " SELECT UNIQUE '','','','FALSE','','',",ls_exp_code,",imee001,imee003,imee004",
               " FROM   ",ls_source,
               " WHERE  imee004 = '", l_keyvalue,
               "' AND   imee003 <> imee004",
               " AND  imee001 = '", l_typevalue,"'", 
               " ORDER BY imee003"
 
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].*
      #pid=父節點id
      LET g_browser[l_id].b_pid  = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id   = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_imee003 = g_browser[l_id].b_imee003 CLIPPED
      CALL aimi093_desc_show(l_id)
      LET g_browser[l_id].b_hasC = aimi093_chk_hasC(l_id)
      LET l_id = l_id + 1
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   
   FREE tree_expand
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.browser_fill" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION aimi093_browser_fill()
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   
   DROP TABLE aimi093_tmp
   
   #Create temp table
   CREATE TEMP TABLE aimi093_tmp
   (
         imee001 VARCHAR(500),
   imee003 VARCHAR(500),
   imee004 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   LET g_root_search = FALSE
   IF (g_wc.trim() = "1=1"  OR cl_null(g_wc))  AND 
      (g_wc2.trim() = "1=1" OR cl_null(g_wc2)) THEN
      #未輸入條件時則只查找root節點
      LET g_wc = " imee003 = imee004 "
      LET g_root_search = TRUE
   END IF
 
   IF cl_null(g_wc2) OR g_wc2.trim() = "1=1" THEN
      LET g_sql = "SELECT imee001,imee003,imee004 ",
                  " FROM imee_t  ",
                  " WHERE imeeent = '" ||g_enterprise|| "' AND ",g_wc
   ELSE
      LET g_sql = "SELECT imee001,imee003,imee004 ",
                  " FROM imee_t  ",
                  " INNER JOIN imef_t ",
                  " ON imef001 = imee001 ",
 
                  " WHERE imeeent = '" ||g_enterprise|| "' AND ", g_wc, " AND ", g_wc2
   END IF
   LET g_sql = g_sql #,cl_get_extra_cond('zzuser', 'zzgrup')
  
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
 
   #搜尋建構樹所需的節點
   CASE g_searchtype
      WHEN "1" #上推
         CALL aimi093_match_node(g_wc,g_searchtype) 
      WHEN "2" #下展
         #CALL aimi093_find_speed_tbl(g_wc,g_searchtype) 
         CALL aimi093_match_node(g_wc,g_searchtype) 
      WHEN "3" #全部
         CALL aimi093_match_node(g_wc,g_searchtype) 
   END CASE
 
   CALL aimi093_browser_create(g_searchtype)
   
   FREE master_ext
     
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
     
END FUNCTION
]]>
  </section>
  <section id="aimi093.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aimi093_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY imee001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aimi093_browser_fill()
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.chk_hasC" ver="3" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aimi093_chk_hasC(pi_id)
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define"/>}
   #end add-point
   
   LET g_sql = "SELECT COUNT(imee004) FROM aimi093_tmp ",
               " WHERE ",
                "imee004 = ? AND ",
                "exp_code <> '-1' AND imee003 <> imee004 "
                 ," AND ",
                "imee001 = ?"
 
   PREPARE aimi093_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(*) FROM imee_t ",
               " WHERE imeeent = '" ||g_enterprise|| "' AND ",
               "imee003 <> imee004 AND ",
               "imee004 = ? "
                ," AND ",
               "imee001 = ?" 
               #,cl_get_extra_cond('zzuser', 'zzgrup')               
   
   PREPARE aimi093_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE aimi093_temp_chk 
           USING g_browser[pi_id].b_imee003
                 ,g_browser[pi_id].b_imee001
            INTO li_cnt
         FREE aimi093_temp_chk
      WHEN 2 
         EXECUTE aimi093_master_chk 
           USING g_browser[pi_id].b_imee003
                 ,g_browser[pi_id].b_imee001
            INTO li_cnt
         FREE aimi093_master_chk
   END CASE
   
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.construct" ver="3" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aimi093_construct()
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_imee_m.* TO NULL
   CALL g_imef_d.clear()        
 
   
   LET g_current_idx = 1
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON imee001,imeel004,imeel005,imeestus,imee004,imee003,imeel004_2,imee006, 
          imee007,imee008,imee009,imee010,imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp, 
          imeecrtdt,imeemodid,imeemoddt,imee002
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #單頭公用欄位開窗
         #此段落由子樣板a11產生
         ##----<<imeeownid>>----
         #ON ACTION controlp INFIELD imeeownid
         #   CALL q_common('imee_t','imeeownid',TRUE,FALSE,g_imee_m.imeeownid) RETURNING ls_return
         #   DISPLAY ls_return TO imeeownid
         #   NEXT FIELD imeeownid  
         #
         ##----<<imeeowndp>>----
         #ON ACTION controlp INFIELD imeeowndp
         #   CALL q_common('imee_t','imeeowndp',TRUE,FALSE,g_imee_m.imeeowndp) RETURNING ls_return
         #   DISPLAY ls_return TO imeeowndp
         #   NEXT FIELD imeeowndp
         #
         ##----<<imeecrtid>>----
         #ON ACTION controlp INFIELD imeecrtid
         #   CALL q_common('imee_t','imeecrtid',TRUE,FALSE,g_imee_m.imeecrtid) RETURNING ls_return
         #   DISPLAY ls_return TO imeecrtid
         #   NEXT FIELD imeecrtid
         #
         ##----<<imeecrtdp>>----
         #ON ACTION controlp INFIELD imeecrtdp
         #   CALL q_common('imee_t','imeecrtdp',TRUE,FALSE,g_imee_m.imeecrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO imeecrtdp
         #   NEXT FIELD imeecrtdp
         #
         ##----<<imeemodid>>----
         #ON ACTION controlp INFIELD imeemodid
         #   CALL q_common('imee_t','imeemodid',TRUE,FALSE,g_imee_m.imeemodid) RETURNING ls_return
         #   DISPLAY ls_return TO imeemodid
         #   NEXT FIELD imeemodid
         #
         ##----<<imeecnfid>>----
         ##ON ACTION controlp INFIELD imeecnfid
         ##   CALL q_common('imee_t','imeecnfid',TRUE,FALSE,g_imee_m.imeecnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO imeecnfid
         ##   NEXT FIELD imeecnfid
         #
         ##----<<imeepstid>>----
         ##ON ACTION controlp INFIELD imeepstid
         ##   CALL q_common('imee_t','imeepstid',TRUE,FALSE,g_imee_m.imeepstid) RETURNING ls_return
         ##   DISPLAY ls_return TO imeepstid
         ##   NEXT FIELD imeepstid
         
         ##----<<imeecrtdt>>----
         AFTER FIELD imeecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imeemoddt>>----
         AFTER FIELD imeemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imeecnfdt>>----
         #AFTER FIELD imeecnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imeepstdt>>----
         #AFTER FIELD imeepstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
          
         #單頭一般欄位開窗          
         #---------------------------<  Master  >---------------------------
         #----<<imee001>>----
         #Ctrlp:construct.c.imee001
         ON ACTION controlp INFIELD imee001
            #add-point:ON ACTION controlp INFIELD imee001
            {<point name="construct.c.imee001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imee001
            #add-point:BEFORE FIELD imee001
            {<point name="construct.b.imee001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee001
            
            #add-point:AFTER FIELD imee001
            {<point name="construct.a.imee001" />}
            #END add-point
            
 
         #----<<imeel004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeel004
            #add-point:BEFORE FIELD imeel004
            {<point name="construct.b.imeel004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeel004
            
            #add-point:AFTER FIELD imeel004
            {<point name="construct.a.imeel004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeel004
         ON ACTION controlp INFIELD imeel004
            #add-point:ON ACTION controlp INFIELD imeel004
            {<point name="construct.c.imeel004" />}
            #END add-point
 
         #----<<imeel005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeel005
            #add-point:BEFORE FIELD imeel005
            {<point name="construct.b.imeel005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeel005
            
            #add-point:AFTER FIELD imeel005
            {<point name="construct.a.imeel005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeel005
         ON ACTION controlp INFIELD imeel005
            #add-point:ON ACTION controlp INFIELD imeel005
            {<point name="construct.c.imeel005" />}
            #END add-point
 
         #----<<imeestus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeestus
            #add-point:BEFORE FIELD imeestus
            {<point name="construct.b.imeestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeestus
            
            #add-point:AFTER FIELD imeestus
            {<point name="construct.a.imeestus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeestus
         ON ACTION controlp INFIELD imeestus
            #add-point:ON ACTION controlp INFIELD imeestus
            {<point name="construct.c.imeestus" />}
            #END add-point
 
         #----<<imee004>>----
         #Ctrlp:construct.c.imee004
         ON ACTION controlp INFIELD imee004
            #add-point:ON ACTION controlp INFIELD imee004
            {<point name="construct.c.imee004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imee004
            #add-point:BEFORE FIELD imee004
            {<point name="construct.b.imee004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee004
            
            #add-point:AFTER FIELD imee004
            {<point name="construct.a.imee004" />}
            #END add-point
            
 
         #----<<imee004_desc>>----
         #----<<imee003>>----
         #Ctrlp:construct.c.imee003
         ON ACTION controlp INFIELD imee003
            #add-point:ON ACTION controlp INFIELD imee003
            {<point name="construct.c.imee003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imee003
            #add-point:BEFORE FIELD imee003
            {<point name="construct.b.imee003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee003
            
            #add-point:AFTER FIELD imee003
            {<point name="construct.a.imee003" />}
            #END add-point
            
 
         #----<<imeel004_2>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeel004_2
            #add-point:BEFORE FIELD imeel004_2
            {<point name="construct.b.imeel004_2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeel004_2
            
            #add-point:AFTER FIELD imeel004_2
            {<point name="construct.a.imeel004_2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeel004_2
         ON ACTION controlp INFIELD imeel004_2
            #add-point:ON ACTION controlp INFIELD imeel004_2
            {<point name="construct.c.imeel004_2" />}
            #END add-point
 
         #----<<imee006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee006
            #add-point:BEFORE FIELD imee006
            {<point name="construct.b.imee006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee006
            
            #add-point:AFTER FIELD imee006
            {<point name="construct.a.imee006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee006
         ON ACTION controlp INFIELD imee006
            #add-point:ON ACTION controlp INFIELD imee006
            {<point name="construct.c.imee006" />}
            #END add-point
 
         #----<<imee007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee007
            #add-point:BEFORE FIELD imee007
            {<point name="construct.b.imee007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee007
            
            #add-point:AFTER FIELD imee007
            {<point name="construct.a.imee007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee007
         ON ACTION controlp INFIELD imee007
            #add-point:ON ACTION controlp INFIELD imee007
            {<point name="construct.c.imee007" />}
            #END add-point
 
         #----<<imee008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee008
            #add-point:BEFORE FIELD imee008
            {<point name="construct.b.imee008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee008
            
            #add-point:AFTER FIELD imee008
            {<point name="construct.a.imee008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee008
         ON ACTION controlp INFIELD imee008
            #add-point:ON ACTION controlp INFIELD imee008
            {<point name="construct.c.imee008" />}
            #END add-point
 
         #----<<imee009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee009
            #add-point:BEFORE FIELD imee009
            {<point name="construct.b.imee009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee009
            
            #add-point:AFTER FIELD imee009
            {<point name="construct.a.imee009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee009
         ON ACTION controlp INFIELD imee009
            #add-point:ON ACTION controlp INFIELD imee009
            {<point name="construct.c.imee009" />}
            #END add-point
 
         #----<<imee010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee010
            #add-point:BEFORE FIELD imee010
            {<point name="construct.b.imee010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee010
            
            #add-point:AFTER FIELD imee010
            {<point name="construct.a.imee010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee010
         ON ACTION controlp INFIELD imee010
            #add-point:ON ACTION controlp INFIELD imee010
            {<point name="construct.c.imee010" />}
            #END add-point
 
         #----<<imee011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee011
            #add-point:BEFORE FIELD imee011
            {<point name="construct.b.imee011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee011
            
            #add-point:AFTER FIELD imee011
            {<point name="construct.a.imee011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee011
         ON ACTION controlp INFIELD imee011
            #add-point:ON ACTION controlp INFIELD imee011
            {<point name="construct.c.imee011" />}
            #END add-point
 
         #----<<imee012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee012
            #add-point:BEFORE FIELD imee012
            {<point name="construct.b.imee012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee012
            
            #add-point:AFTER FIELD imee012
            {<point name="construct.a.imee012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee012
         ON ACTION controlp INFIELD imee012
            #add-point:ON ACTION controlp INFIELD imee012
            {<point name="construct.c.imee012" />}
            #END add-point
 
         #----<<imee005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee005
            #add-point:BEFORE FIELD imee005
            {<point name="construct.b.imee005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee005
            
            #add-point:AFTER FIELD imee005
            {<point name="construct.a.imee005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee005
         ON ACTION controlp INFIELD imee005
            #add-point:ON ACTION controlp INFIELD imee005
            {<point name="construct.c.imee005" />}
            #END add-point
 
         #----<<imeeownid>>----
         #Ctrlp:construct.c.imeeownid
         ON ACTION controlp INFIELD imeeownid
            #add-point:ON ACTION controlp INFIELD imeeownid
            {<point name="construct.c.imeeownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeeownid
            #add-point:BEFORE FIELD imeeownid
            {<point name="construct.b.imeeownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeeownid
            
            #add-point:AFTER FIELD imeeownid
            {<point name="construct.a.imeeownid" />}
            #END add-point
            
 
         #----<<imeeownid_desc>>----
         #----<<imeeowndp>>----
         #Ctrlp:construct.c.imeeowndp
         ON ACTION controlp INFIELD imeeowndp
            #add-point:ON ACTION controlp INFIELD imeeowndp
            {<point name="construct.c.imeeowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeeowndp
            #add-point:BEFORE FIELD imeeowndp
            {<point name="construct.b.imeeowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeeowndp
            
            #add-point:AFTER FIELD imeeowndp
            {<point name="construct.a.imeeowndp" />}
            #END add-point
            
 
         #----<<imeeowndp_desc>>----
         #----<<imeecrtid>>----
         #Ctrlp:construct.c.imeecrtid
         ON ACTION controlp INFIELD imeecrtid
            #add-point:ON ACTION controlp INFIELD imeecrtid
            {<point name="construct.c.imeecrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeecrtid
            #add-point:BEFORE FIELD imeecrtid
            {<point name="construct.b.imeecrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeecrtid
            
            #add-point:AFTER FIELD imeecrtid
            {<point name="construct.a.imeecrtid" />}
            #END add-point
            
 
         #----<<imeecrtid_desc>>----
         #----<<imeecrtdp>>----
         #Ctrlp:construct.c.imeecrtdp
         ON ACTION controlp INFIELD imeecrtdp
            #add-point:ON ACTION controlp INFIELD imeecrtdp
            {<point name="construct.c.imeecrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeecrtdp
            #add-point:BEFORE FIELD imeecrtdp
            {<point name="construct.b.imeecrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeecrtdp
            
            #add-point:AFTER FIELD imeecrtdp
            {<point name="construct.a.imeecrtdp" />}
            #END add-point
            
 
         #----<<imeecrtdp_desc>>----
         #----<<imeecrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeecrtdt
            #add-point:BEFORE FIELD imeecrtdt
            {<point name="construct.b.imeecrtdt" />}
            #END add-point
 
         #----<<imeemodid>>----
         #Ctrlp:construct.c.imeemodid
         ON ACTION controlp INFIELD imeemodid
            #add-point:ON ACTION controlp INFIELD imeemodid
            {<point name="construct.c.imeemodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeemodid
            #add-point:BEFORE FIELD imeemodid
            {<point name="construct.b.imeemodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeemodid
            
            #add-point:AFTER FIELD imeemodid
            {<point name="construct.a.imeemodid" />}
            #END add-point
            
 
         #----<<imeemodid_desc>>----
         #----<<imeemoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeemoddt
            #add-point:BEFORE FIELD imeemoddt
            {<point name="construct.b.imeemoddt" />}
            #END add-point
 
         #----<<imee002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee002
            #add-point:BEFORE FIELD imee002
            {<point name="construct.b.imee002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee002
            
            #add-point:AFTER FIELD imee002
            {<point name="construct.a.imee002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imee002
         ON ACTION controlp INFIELD imee002
            #add-point:ON ACTION controlp INFIELD imee002
            {<point name="construct.c.imee002" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table1 ON imef003,imefl005
           FROM s_detail1[1].imef003,s_detail1[1].imefl005
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<imef003>>----
         #Ctrlp:construct.c.page1.imef003
         ON ACTION controlp INFIELD imef003
            #add-point:ON ACTION controlp INFIELD imef003
            {<point name="construct.c.page1.imef003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imef003
            #add-point:BEFORE FIELD imef003
            {<point name="construct.b.page1.imef003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imef003
            
            #add-point:AFTER FIELD imef003
            {<point name="construct.a.page1.imef003" />}
            #END add-point
            
 
         #----<<imefl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imefl005
            #add-point:BEFORE FIELD imefl005
            {<point name="construct.b.page1.imefl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imefl005
            
            #add-point:AFTER FIELD imefl005
            {<point name="construct.a.page1.imefl005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.imefl005
         ON ACTION controlp INFIELD imefl005
            #add-point:ON ACTION controlp INFIELD imefl005
            {<point name="construct.c.page1.imefl005" />}
            #END add-point
 
  
       
      END CONSTRUCT
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc_table1
 
 
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.default_search" ver="3" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aimi093_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " imee001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " imee003 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.delete" ver="4" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aimi093_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_imee_m.imee001 IS NULL
   OR g_imee_m.imee003 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus, 
       g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009, 
       g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp, 
       g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt, 
       g_imee_m.imee002
   
   CALL aimi093_show()
   
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.imeel001 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002 = ' '
LET g_master_multi_table_t.imeel004 = g_imee_m.imeel004
LET g_master_multi_table_t.imeel005 = g_imee_m.imeel005
LET g_master_multi_table_t.imeel001_idx2 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002_idx2 = g_imee_m.imee003
LET g_master_multi_table_t.imeel004_2_idx2 = g_imee_m.imeel004_2
 
 
   OPEN aimi093_cl USING g_enterprise,g_imee_m.imee001
                                                       ,g_imee_m.imee003
 
   IF STATUS THEN
      CALL cl_err("OPEN aimi093_cl:", STATUS, 1)
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH aimi093_cl INTO g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004, 
       g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007, 
       g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005, 
       g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid, 
       g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid, 
       g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002              #鎖住將被更改或取消的資料 

   IF SQLCA.sqlcode THEN
      CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aimi093_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
      #資料備份
      LET g_imee001_t = g_imee_m.imee001
      LET g_imee003_t = g_imee_m.imee003
 
      
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imee_t
       WHERE imeeent = g_enterprise AND imee001 = g_imee_m.imee001
         AND imee003 = g_imee_m.imee003
 
      
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.imeel001_idx2
   LET l_field_keys[01] = 'imeel001'
   LET l_var_keys_bak[02] = g_master_multi_table_t.imeel002_idx2
   LET l_field_keys[02] = 'imeel002'
   LET l_var_keys_bak[03] = g_dlang
   LET l_field_keys[03] = 'imeel003'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'imeel_t')
 
      
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imef_t
       WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001
         AND imef002 = g_imee_m.imee003
 
         
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
 
      IF SQLCA.sqlcode THEN
         CALL cl_err("imef_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF       
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point      
                                                               
 
 
      CLEAR FORM
      CALL g_imef_d.clear() 
 
     
      CALL aimi093_ui_browser_refresh()  
      CALL aimi093_ui_headershow()  
      CALL aimi093_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aimi093_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL aimi093_browser_fill()
      END IF
       
   END IF
 
   CLOSE aimi093_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_imee_m.imee001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="aimi093.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aimi093_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point  
      DELETE FROM imef_t
       WHERE imefent = g_enterprise AND
         imef001 = ps_keys_bak[1] AND imef002 = ps_keys_bak[2] AND imef003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point  
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.desc_show" ver="2" status="" src="s">
    <![CDATA[#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION aimi093_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   #add-point:desc_show段define
   {<point name="desc_show.define"/>}
   #end add-point
   
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.description" ver="10" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000398
#+ 
#+ Filename...: aimi093
#+ Description: 規則化品名設定作業
#+ Creator....: 02482(2013/09/24)
#+ Modifier...: 02482(2013/10/24)
#+ Buildtype..: 應用 i08 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aimi093.detail_reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aimi093_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE imef_t.*
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aimi093_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aimi093_detail AS ",
                "SELECT * FROM imef_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aimi093_detail SELECT * FROM imef_t 
                                         WHERE imefent = g_enterprise AND imef001 = g_imee001_t
                                         AND imef002 = g_imee003_t
 
   
   #將key修正為調整後   
   UPDATE aimi093_detail 
      #更新key欄位
      SET imef001 = g_imee_m.imee001
          , imef002 = g_imee_m.imee003
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO imef_t SELECT * FROM aimi093_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimi093_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
 
   #多語言複製段落
      #此段落由子樣板a38產生
   DROP TABLE aimi093_detail_lang
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aimi093_detail_lang AS ",
                "SELECT * FROM imefl_t "
   PREPARE repro_imefl_t FROM ls_sql
   EXECUTE repro_imefl_t
   FREE repro_imefl_t
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aimi093_detail_lang SELECT * FROM imefl_t 
                                             WHERE imeflent = g_enterprise AND imefl001 = g_imee001_t
                                             AND imefl002 = g_imee003_t
   
   #將key修正為調整後   
   UPDATE aimi093_detail_lang 
      #更新key欄位
      SET imefl001 = g_imee_m.imee001
          , imefl002 = g_imee_m.imee003
  
   #將資料塞回原table   
   INSERT INTO imefl_t SELECT * FROM aimi093_detail_lang
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimi093_detail_lang
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_imee001_t = g_imee_m.imee001
   LET g_imee003_t = g_imee_m.imee003
 
   
   DROP TABLE aimi093_detail
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aimi093_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf('.',1) = 0 THEN
      INITIALIZE g_imee_m.* TO NULL
      DISPLAY BY NAME g_imee_m.*
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
      DISPLAY '' TO FORMONLY.b_index
      RETURN
   END IF
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
 
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_imee_m.imee001 = g_browser[g_current_idx].b_imee001
   LET g_imee_m.imee003 = g_browser[g_current_idx].b_imee003
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus, 
       g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009, 
       g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp, 
       g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt, 
       g_imee_m.imee002
   IF SQLCA.sqlcode THEN
      CALL cl_err("imee_t",SQLCA.sqlcode,1)
      INITIALIZE g_imee_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aimi093_show()
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.find_node" ver="2" status="" src="s">
    <![CDATA[#+ 尋找符合條件的節點
PRIVATE FUNCTION aimi093_find_node(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   DEFINE ls_pid  STRING
   #add-point:find_node段define
   {<point name="find_node.define"/>}
   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT UNIQUE '','','','FALSE','','',exp_code,imee001,imee003,imee004 ",
               " FROM aimi093_tmp ",
               " WHERE imee004 = ? AND imee004 <> imee003",
               " ORDER BY imee003"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_browser[li_idx].b_imee003
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL aimi093_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = aimi093_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.global" ver="4" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
    
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_imee_m        RECORD
       imee001 LIKE imee_t.imee001, 
   imeel004 LIKE imeel_t.imeel004, 
   imeel005 LIKE imeel_t.imeel005, 
   imeestus LIKE imee_t.imeestus, 
   imee004 LIKE imee_t.imee004, 
   imee004_desc LIKE type_t.chr80, 
   imee003 LIKE imee_t.imee003, 
   imeel004_2 LIKE type_t.chr500, 
   imee006 LIKE imee_t.imee006, 
   imee007 LIKE imee_t.imee007, 
   imee008 LIKE imee_t.imee008, 
   imee009 LIKE imee_t.imee009, 
   imee010 LIKE imee_t.imee010, 
   imee011 LIKE imee_t.imee011, 
   imee012 LIKE imee_t.imee012, 
   imee005 LIKE imee_t.imee005, 
   imeeownid LIKE imee_t.imeeownid, 
   imeeownid_desc LIKE type_t.chr80, 
   imeeowndp LIKE imee_t.imeeowndp, 
   imeeowndp_desc LIKE type_t.chr80, 
   imeecrtid LIKE imee_t.imeecrtid, 
   imeecrtid_desc LIKE type_t.chr80, 
   imeecrtdp LIKE imee_t.imeecrtdp, 
   imeecrtdp_desc LIKE type_t.chr80, 
   imeecrtdt DATETIME YEAR TO SECOND, 
   imeemodid LIKE imee_t.imeemodid, 
   imeemodid_desc LIKE type_t.chr80, 
   imeemoddt DATETIME YEAR TO SECOND, 
   imee002 LIKE imee_t.imee002
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_imef_d        RECORD
       imef003 LIKE imef_t.imef003, 
   imefl005 LIKE imefl_t.imefl005
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_imee_m          type_g_imee_m
DEFINE g_imee_m_t        type_g_imee_m
 
   DEFINE g_imee001_t LIKE imee_t.imee001
DEFINE g_imee003_t LIKE imee_t.imee003
 
 
#DEFINE g_imee003_t        LIKE imee_t.imee003
DEFINE g_imee004_t        LIKE imee_t.imee004
#DEFINE g_imee001_t      LIKE imee_t.imee001
 
DEFINE g_imef_d          DYNAMIC ARRAY OF type_g_imef_d
DEFINE g_imef_d_t        type_g_imef_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_imee001 LIKE imee_t.imee001,
      b_imee003 LIKE imee_t.imee003,
      b_imee004 LIKE imee_t.imee004
       END RECORD
      
DEFINE g_master_multi_table_t    RECORD
      imeel001 LIKE imeel_t.imeel001,
      imeel002 LIKE imeel_t.imeel002,
      imeel004 LIKE imeel_t.imeel004,
      imeel005 LIKE imeel_t.imeel005,
      imeel001_idx2 LIKE imeel_t.imeel001,
      imeel002_idx2 LIKE imeel_t.imeel002,
      imeel004_2_idx2 LIKE imeel_t.imeel004
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      imefl001 LIKE imefl_t.imefl001,
      imefl002 LIKE imefl_t.imefl002,
      imefl003 LIKE imefl_t.imefl003,
      imefl004 LIKE imefl_t.imefl004,
      imefl005 LIKE imefl_t.imefl005
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_searchtype          LIKE type_t.chr200
                                                   
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_root_search         BOOLEAN
DEFINE g_browser_root        DYNAMIC ARRAY OF INTEGER      #root資料所在
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING                        #確定當下點擊的單身
 
DEFINE g_wc_table1           STRING                        #第1個單身table所使用的g_wc
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aimi093.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aimi093_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_imef_d.getLength() THEN
         LET g_detail_idx = g_imef_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_imef_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_imef_d.getLength() TO FORMONLY.cnt
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aimi093_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill = "Y"
   LET g_searchtype = "3"
   LET g_error_show = 1
      CALL cl_set_combo_scc_part('imeestus','17','N,Y')
 
      CALL cl_set_combo_scc('imee006','48') 
   CALL cl_set_combo_scc('imee008','51') 
 
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aimi093_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aimi093.input" ver="2" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aimi093_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT imef003,'' FROM imef_t WHERE imefent=? AND imef001=? AND imef002=? AND  
       imef003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aimi093_bcl CURSOR FROM g_forupd_sql
   
 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   LET lb_reproduce = FALSE
   
   #控制key欄位可否輸入
   CALL aimi093_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aimi093_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004, 
       g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009, 
       g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imee002
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aimi093.input.body" ver="2" status="" src="s">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_imef_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION
         
 
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.detail_input.page1.update_item" />}
            #END add-point
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_imef_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aimi093_b_fill()
            LET g_rec_b = g_imef_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
 
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aimi093_cl USING g_enterprise,g_imee_m.imee001
                                                                ,g_imee_m.imee003
 
            IF STATUS THEN
               CALL cl_err("OPEN aimi093_cl:", STATUS, 1)
               CLOSE aimi093_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
                   
            #FETCH aimi093_cl INTO g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus, 
            #    g_imee_m.imee004,g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006, 
            #    g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011, 
            #    g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp, 
            #    g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid,g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp, 
            #    g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemodid_desc, 
            #    g_imee_m.imeemoddt,g_imee_m.imee002 #鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0)
            #   CLOSE aimi093_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF
            
            LET g_rec_b = g_imef_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_imef_d[l_ac].imef003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_imef_d_t.* = g_imef_d[l_ac].*  #BACKUP
               CALL aimi093_set_entry_b(l_cmd)
               CALL aimi093_set_no_entry_b(l_cmd)
               IF NOT aimi093_lock_b("imef_t","1") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aimi093_bcl INTO g_imef_d[l_ac].imef003,g_imef_d[l_ac].imefl005
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_imef_d_t.imef003,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aimi093_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.imefl001 = g_imee_m.imee001
LET g_detail_multi_table_t.imefl002 = g_imee_m.imee003
LET g_detail_multi_table_t.imefl003 = g_imef_d[l_ac].imef003
LET g_detail_multi_table_t.imefl004 = g_dlang
LET g_detail_multi_table_t.imefl005 = g_imef_d[l_ac].imefl005
 
            
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'imefl001'
            LET l_var_keys[01] = g_imee_m.imee001
            LET l_field_keys[02] = 'imefl002'
            LET l_var_keys[02] = g_imee_m.imee003
            LET l_field_keys[03] = 'imefl003'
            LET l_var_keys[03] = g_imef_d[l_ac].imef003
            LET l_field_keys[04] = 'imefl004'
            LET l_var_keys[04] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'imefl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_imef_d[l_ac].* TO NULL 
            
            LET g_imef_d_t.* = g_imef_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aimi093_set_entry_b(l_cmd)
            CALL aimi093_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_imef_d[li_reproduce_target].* = g_imef_d[li_reproduce].*
 
               LET g_imef_d[g_imef_d.getLength()].imef003 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM imef_t 
             WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001
               AND imef002 = g_imee_m.imee003
 
               AND g_imef_d[l_ac].imef003 = imef003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imee_m.imee001
               LET gs_keys[2] = g_imee_m.imee003
               LET gs_keys[3] = g_imef_d[g_detail_idx].imef003
               CALL aimi093_insert_b('imef_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_imef_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("imef_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aimi093_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_imee_m.imee001 = g_detail_multi_table_t.imefl001 AND
         g_imee_m.imee003 = g_detail_multi_table_t.imefl002 AND
         g_imef_d[l_ac].imef003 = g_detail_multi_table_t.imefl003 AND
         g_imef_d[l_ac].imefl005 = g_detail_multi_table_t.imefl005 THEN
         ELSE 
            LET l_var_keys[01] = g_imee_m.imee001
            LET l_field_keys[01] = 'imefl001'
            LET l_var_keys[02] = g_imee_m.imee003
            LET l_field_keys[02] = 'imefl002'
            LET l_var_keys[03] = g_imef_d[l_ac].imef003
            LET l_field_keys[03] = 'imefl003'
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imefl004'
            LET l_vars[01] = g_imef_d[l_ac].imefl005
            LET l_fields[01] = 'imefl005'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'imeflent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.imefl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.imefl002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.imefl003
            LET l_var_keys_bak[04] = g_detail_multi_table_t.imefl004
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imefl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_imef_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_imef_d.deleteElement(l_ac)
               NEXT FIELD imef003
            END IF
            IF g_imef_d[l_ac].imef003 IS NOT NULL
 
               THEN
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM imef_t
                WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001 AND
                                          imef002 = g_imee_m.imee003 AND
 
                      imef003 = g_imef_d_t.imef003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("imef_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'imefl001'
                  LET l_field_keys[02] = 'imefl002'
                  LET l_field_keys[03] = 'imefl003'
                  LET l_field_keys[04] = 'imefl004'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.imefl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.imefl002
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.imefl003
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.imefl004
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'imefl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aimi093_bcl
               LET l_count = g_imef_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imee_m.imee001
               LET gs_keys[2] = g_imee_m.imee003
               LET gs_keys[3] = g_imef_d[g_detail_idx].imef003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aimi093_delete_b('imef_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<imef003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imef003
            #add-point:BEFORE FIELD imef003
            {<point name="input.b.page1.imef003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imef003
            
            #add-point:AFTER FIELD imef003
            {<point name="input.a.page1.imef003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imef003
            #add-point:ON CHANGE imef003
            {<point name="input.g.page1.imef003" />}
            #END add-point
 
         #----<<imefl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imefl005
            #add-point:BEFORE FIELD imefl005
            {<point name="input.b.page1.imefl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imefl005
            
            #add-point:AFTER FIELD imefl005
            {<point name="input.a.page1.imefl005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imefl005
            #add-point:ON CHANGE imefl005
            {<point name="input.g.page1.imefl005" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<imef003>>----
         #Ctrlp:input.c.page1.imef003
         ON ACTION controlp INFIELD imef003
            #add-point:ON ACTION controlp INFIELD imef003
            {<point name="input.c.page1.imef003" />}
            #END add-point
 
         #----<<imefl005>>----
         #Ctrlp:input.c.page1.imefl005
         ON ACTION controlp INFIELD imefl005
            #add-point:ON ACTION controlp INFIELD imefl005
            {<point name="input.c.page1.imefl005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_imef_d[l_ac].* = g_imef_d_t.*
               CLOSE aimi093_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_imef_d[l_ac].imef003,-263,1)
               LET g_imef_d[l_ac].* = g_imef_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE imef_t SET (imef001,imef002,imef003) = (g_imee_m.imee001,g_imee_m.imee003,g_imef_d[l_ac].imef003) 

                WHERE imefent = g_enterprise AND imef001 = g_imee_m.imee001 
                  AND imef002 = g_imee_m.imee003 
 
                  AND imef003 = g_imef_d_t.imef003 #項次   
 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("imef_t","std-00009",1)
                     LET g_imef_d[l_ac].* = g_imef_d_t.*
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("imef_t",SQLCA.sqlcode,1) 
                     LET g_imef_d[l_ac].* = g_imef_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imee_m.imee001
               LET gs_keys_bak[1] = g_imee001_t
               LET gs_keys[2] = g_imee_m.imee003
               LET gs_keys_bak[2] = g_imee003_t
               LET gs_keys[3] = g_imef_d[g_detail_idx].imef003
               LET gs_keys_bak[3] = g_imef_d_t.imef003
               CALL aimi093_update_b('imef_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_imee_m.imee001 = g_detail_multi_table_t.imefl001 AND
         g_imee_m.imee003 = g_detail_multi_table_t.imefl002 AND
         g_imef_d[l_ac].imef003 = g_detail_multi_table_t.imefl003 AND
         g_imef_d[l_ac].imefl005 = g_detail_multi_table_t.imefl005 THEN
         ELSE 
            LET l_var_keys[01] = g_imee_m.imee001
            LET l_field_keys[01] = 'imefl001'
            LET l_var_keys[02] = g_imee_m.imee003
            LET l_field_keys[02] = 'imefl002'
            LET l_var_keys[03] = g_imef_d[l_ac].imef003
            LET l_field_keys[03] = 'imefl003'
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'imefl004'
            LET l_vars[01] = g_imef_d[l_ac].imefl005
            LET l_fields[01] = 'imefl005'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'imeflent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.imefl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.imefl002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.imefl003
            LET l_var_keys_bak[04] = g_detail_multi_table_t.imefl004
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imefl_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aimi093_unlock_b("imef_t","1")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
            
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point   
              
         #add-point:page自定義行為
         {<point name="input.page.action"/>}
         #end add-point
 
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_imef_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_imef_d.getLength()+1
            
      END INPUT
      
 
   
 
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD imee001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD imef003
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.input.head" ver="2" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004, 
          g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009, 
          g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imee002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION
         
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.master_input.update_item" />}
            #END add-point
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.imeel001 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002 = ' '
LET g_master_multi_table_t.imeel004 = g_imee_m.imeel004
LET g_master_multi_table_t.imeel005 = g_imee_m.imeel005
LET g_master_multi_table_t.imeel001_idx2 = g_imee_m.imee001
LET g_master_multi_table_t.imeel002_idx2 = g_imee_m.imee003
LET g_master_multi_table_t.imeel004_2_idx2 = g_imee_m.imeel004_2
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.imeel001 = ''
LET g_master_multi_table_t.imeel002 = ''
LET g_master_multi_table_t.imeel004 = ''
LET g_master_multi_table_t.imeel005 = ''
LET g_master_multi_table_t.imeel001_idx2 = ''
LET g_master_multi_table_t.imeel002_idx2 = ''
LET g_master_multi_table_t.imeel004_2_idx2 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            
         #---------------------------<  Master  >---------------------------
         #----<<imee001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee001
            #add-point:BEFORE FIELD imee001
            {<point name="input.b.imee001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee001
            
            #add-point:AFTER FIELD imee001
            {<point name="input.a.imee001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee001
            #add-point:ON CHANGE imee001
            {<point name="input.g.imee001" />}
            #END add-point
 
         #----<<imeel004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeel004
            #add-point:BEFORE FIELD imeel004
            {<point name="input.b.imeel004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeel004
            
            #add-point:AFTER FIELD imeel004
            {<point name="input.a.imeel004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeel004
            #add-point:ON CHANGE imeel004
            {<point name="input.g.imeel004" />}
            #END add-point
 
         #----<<imeel005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeel005
            #add-point:BEFORE FIELD imeel005
            {<point name="input.b.imeel005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeel005
            
            #add-point:AFTER FIELD imeel005
            {<point name="input.a.imeel005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeel005
            #add-point:ON CHANGE imeel005
            {<point name="input.g.imeel005" />}
            #END add-point
 
         #----<<imeestus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeestus
            #add-point:BEFORE FIELD imeestus
            {<point name="input.b.imeestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeestus
            
            #add-point:AFTER FIELD imeestus
            {<point name="input.a.imeestus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeestus
            #add-point:ON CHANGE imeestus
            {<point name="input.g.imeestus" />}
            #END add-point
 
         #----<<imee004>>----
         #此段落由子樣板a02產生
         AFTER FIELD imee004
            
            #add-point:AFTER FIELD imee004
            {<point name="input.a.imee004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imee004
            #add-point:BEFORE FIELD imee004
            {<point name="input.b.imee004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imee004
            #add-point:ON CHANGE imee004
            {<point name="input.g.imee004" />}
            #END add-point
 
         #----<<imee004_desc>>----
         #----<<imee003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee003
            #add-point:BEFORE FIELD imee003
            {<point name="input.b.imee003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee003
            
            #add-point:AFTER FIELD imee003
            {<point name="input.a.imee003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee003
            #add-point:ON CHANGE imee003
            {<point name="input.g.imee003" />}
            #END add-point
 
         #----<<imeel004_2>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imeel004_2
            #add-point:BEFORE FIELD imeel004_2
            {<point name="input.b.imeel004_2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeel004_2
            
            #add-point:AFTER FIELD imeel004_2
            {<point name="input.a.imeel004_2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeel004_2
            #add-point:ON CHANGE imeel004_2
            {<point name="input.g.imeel004_2" />}
            #END add-point
 
         #----<<imee006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee006
            #add-point:BEFORE FIELD imee006
            {<point name="input.b.imee006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee006
            
            #add-point:AFTER FIELD imee006
            {<point name="input.a.imee006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee006
            #add-point:ON CHANGE imee006
            {<point name="input.g.imee006" />}
            #END add-point
 
         #----<<imee007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee007
            #add-point:BEFORE FIELD imee007
            {<point name="input.b.imee007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee007
            
            #add-point:AFTER FIELD imee007
            {<point name="input.a.imee007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee007
            #add-point:ON CHANGE imee007
            {<point name="input.g.imee007" />}
            #END add-point
 
         #----<<imee008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee008
            #add-point:BEFORE FIELD imee008
            {<point name="input.b.imee008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee008
            
            #add-point:AFTER FIELD imee008
            {<point name="input.a.imee008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee008
            #add-point:ON CHANGE imee008
            {<point name="input.g.imee008" />}
            #END add-point
 
         #----<<imee009>>----
         #此段落由子樣板a02產生
         AFTER FIELD imee009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_imee_m.imee009,"0","1","255","1","azz-00087",1) THEN
               NEXT FIELD imee009
            END IF
 
 
            #add-point:AFTER FIELD imee009
            {<point name="input.a.imee009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imee009
            #add-point:BEFORE FIELD imee009
            {<point name="input.b.imee009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imee009
            #add-point:ON CHANGE imee009
            {<point name="input.g.imee009" />}
            #END add-point
 
         #----<<imee010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee010
            #add-point:BEFORE FIELD imee010
            {<point name="input.b.imee010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee010
            
            #add-point:AFTER FIELD imee010
            {<point name="input.a.imee010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee010
            #add-point:ON CHANGE imee010
            {<point name="input.g.imee010" />}
            #END add-point
 
         #----<<imee011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee011
            #add-point:BEFORE FIELD imee011
            {<point name="input.b.imee011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee011
            
            #add-point:AFTER FIELD imee011
            {<point name="input.a.imee011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee011
            #add-point:ON CHANGE imee011
            {<point name="input.g.imee011" />}
            #END add-point
 
         #----<<imee012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee012
            #add-point:BEFORE FIELD imee012
            {<point name="input.b.imee012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee012
            
            #add-point:AFTER FIELD imee012
            {<point name="input.a.imee012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee012
            #add-point:ON CHANGE imee012
            {<point name="input.g.imee012" />}
            #END add-point
 
         #----<<imee005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee005
            #add-point:BEFORE FIELD imee005
            {<point name="input.b.imee005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee005
            
            #add-point:AFTER FIELD imee005
            {<point name="input.a.imee005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee005
            #add-point:ON CHANGE imee005
            {<point name="input.g.imee005" />}
            #END add-point
 
         #----<<imeeownid>>----
         #----<<imeeownid_desc>>----
         #----<<imeeowndp>>----
         #----<<imeeowndp_desc>>----
         #----<<imeecrtid>>----
         #----<<imeecrtid_desc>>----
         #----<<imeecrtdp>>----
         #----<<imeecrtdp_desc>>----
         #----<<imeecrtdt>>----
         #----<<imeemodid>>----
         #----<<imeemodid_desc>>----
         #----<<imeemoddt>>----
         #----<<imee002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imee002
            #add-point:BEFORE FIELD imee002
            {<point name="input.b.imee002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imee002
            
            #add-point:AFTER FIELD imee002
            {<point name="input.a.imee002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imee002
            #add-point:ON CHANGE imee002
            {<point name="input.g.imee002" />}
            #END add-point
 
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<imee001>>----
         #Ctrlp:input.c.imee001
         ON ACTION controlp INFIELD imee001
            #add-point:ON ACTION controlp INFIELD imee001
            {<point name="input.c.imee001" />}
            #END add-point
 
         #----<<imeel004>>----
         #Ctrlp:input.c.imeel004
         ON ACTION controlp INFIELD imeel004
            #add-point:ON ACTION controlp INFIELD imeel004
            {<point name="input.c.imeel004" />}
            #END add-point
 
         #----<<imeel005>>----
         #Ctrlp:input.c.imeel005
         ON ACTION controlp INFIELD imeel005
            #add-point:ON ACTION controlp INFIELD imeel005
            {<point name="input.c.imeel005" />}
            #END add-point
 
         #----<<imeestus>>----
         #Ctrlp:input.c.imeestus
         ON ACTION controlp INFIELD imeestus
            #add-point:ON ACTION controlp INFIELD imeestus
            {<point name="input.c.imeestus" />}
            #END add-point
 
         #----<<imee004>>----
         #Ctrlp:input.c.imee004
         ON ACTION controlp INFIELD imee004
            #add-point:ON ACTION controlp INFIELD imee004
            {<point name="input.c.imee004" />}
            #END add-point
 
         #----<<imee004_desc>>----
         #----<<imee003>>----
         #Ctrlp:input.c.imee003
         ON ACTION controlp INFIELD imee003
            #add-point:ON ACTION controlp INFIELD imee003
            {<point name="input.c.imee003" />}
            #END add-point
 
         #----<<imeel004_2>>----
         #Ctrlp:input.c.imeel004_2
         ON ACTION controlp INFIELD imeel004_2
            #add-point:ON ACTION controlp INFIELD imeel004_2
            {<point name="input.c.imeel004_2" />}
            #END add-point
 
         #----<<imee006>>----
         #Ctrlp:input.c.imee006
         ON ACTION controlp INFIELD imee006
            #add-point:ON ACTION controlp INFIELD imee006
            {<point name="input.c.imee006" />}
            #END add-point
 
         #----<<imee007>>----
         #Ctrlp:input.c.imee007
         ON ACTION controlp INFIELD imee007
            #add-point:ON ACTION controlp INFIELD imee007
            {<point name="input.c.imee007" />}
            #END add-point
 
         #----<<imee008>>----
         #Ctrlp:input.c.imee008
         ON ACTION controlp INFIELD imee008
            #add-point:ON ACTION controlp INFIELD imee008
            {<point name="input.c.imee008" />}
            #END add-point
 
         #----<<imee009>>----
         #Ctrlp:input.c.imee009
         ON ACTION controlp INFIELD imee009
            #add-point:ON ACTION controlp INFIELD imee009
            {<point name="input.c.imee009" />}
            #END add-point
 
         #----<<imee010>>----
         #Ctrlp:input.c.imee010
         ON ACTION controlp INFIELD imee010
            #add-point:ON ACTION controlp INFIELD imee010
            {<point name="input.c.imee010" />}
            #END add-point
 
         #----<<imee011>>----
         #Ctrlp:input.c.imee011
         ON ACTION controlp INFIELD imee011
            #add-point:ON ACTION controlp INFIELD imee011
            {<point name="input.c.imee011" />}
            #END add-point
 
         #----<<imee012>>----
         #Ctrlp:input.c.imee012
         ON ACTION controlp INFIELD imee012
            #add-point:ON ACTION controlp INFIELD imee012
            {<point name="input.c.imee012" />}
            #END add-point
 
         #----<<imee005>>----
         #Ctrlp:input.c.imee005
         ON ACTION controlp INFIELD imee005
            #add-point:ON ACTION controlp INFIELD imee005
            {<point name="input.c.imee005" />}
            #END add-point
 
         #----<<imeeownid>>----
         #----<<imeeownid_desc>>----
         #----<<imeeowndp>>----
         #----<<imeeowndp_desc>>----
         #----<<imeecrtid>>----
         #----<<imeecrtid_desc>>----
         #----<<imeecrtdp>>----
         #----<<imeecrtdp_desc>>----
         #----<<imeecrtdt>>----
         #----<<imeemodid>>----
         #----<<imeemodid_desc>>----
         #----<<imeemoddt>>----
         #----<<imee002>>----
         #Ctrlp:input.c.imee002
         ON ACTION controlp INFIELD imee002
            #add-point:ON ACTION controlp INFIELD imee002
            {<point name="input.c.imee002" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_imee_m.imee001             
                            ,g_imee_m.imee003   
 
 
            IF p_cmd <> 'u' THEN
               LET l_count = 1  
               
               SELECT COUNT(*) INTO l_count FROM imee_t
                WHERE imeeent = g_enterprise AND imee001 = g_imee_m.imee001
                  AND imee003 = g_imee_m.imee003
 
               IF l_count = 0 THEN
                  
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
                  
                  INSERT INTO imee_t (imeeent,imee001,imeestus,imee004,imee003,imee006,imee007,imee008, 
                      imee009,imee010,imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp, 
                      imeecrtdt,imeemodid,imeemoddt,imee002)
                  VALUES (g_enterprise,g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003, 
                      g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010, 
                      g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp, 
                      g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt, 
                      g_imee_m.imee002) 
                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("g_imee_m",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001 AND
         ' ' = g_master_multi_table_t.imeel002 AND
         g_imee_m.imeel004 = g_master_multi_table_t.imeel004 AND 
         g_imee_m.imeel005 = g_master_multi_table_t.imeel005  THEN
         ELSE 
            LET l_var_keys[01] = g_imee_m.imee001
            LET l_field_keys[01] = 'imeel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.imeel001
            LET l_var_keys[02] = ' '
            LET l_field_keys[02] = 'imeel002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'imeel003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004
            LET l_fields[01] = 'imeel004'
            LET l_vars[02] = g_imee_m.imeel005
            LET l_fields[02] = 'imeel005'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'imeelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001_idx2 AND
         g_imee_m.imee003 = g_master_multi_table_t.imeel002_idx2 AND
         g_imee_m.imeel004_2 = g_master_multi_table_t.imeel004_2_idx2  THEN
         ELSE 
            LET l_var_keys[01] = g_imee_m.imee001
            LET l_field_keys[01] = 'imeel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.imeel001_idx2
            LET l_var_keys[02] = g_imee_m.imee003
            LET l_field_keys[02] = 'imeel002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel002_idx2
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'imeel003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004_2
            LET l_fields[01] = 'imeel004'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'imeelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 
 
 
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
                  
                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                     CALL aimi093_detail_reproduce()
                  END IF
                  
                  LET p_cmd = 'u'
               ELSE
                  CALL cl_err( g_imee_m.imee001,'!', 0 )
                  CALL s_transaction_end('N','0')
                  NEXT FIELD imee001
               END IF 
            ELSE
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE imee_t SET (imee001,imeestus,imee004,imee003,imee006,imee007,imee008,imee009,imee010, 
                   imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid, 
                   imeemoddt,imee002) = (g_imee_m.imee001,g_imee_m.imeestus,g_imee_m.imee004,g_imee_m.imee003, 
                   g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010, 
                   g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp, 
                   g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt, 
                   g_imee_m.imee002)
                WHERE imeeent = g_enterprise AND imee001 = g_imee001_t
                  AND imee003 = g_imee003_t
 
                  
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("imee_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("imee_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001 AND
         ' ' = g_master_multi_table_t.imeel002 AND
         g_imee_m.imeel004 = g_master_multi_table_t.imeel004 AND 
         g_imee_m.imeel005 = g_master_multi_table_t.imeel005  THEN
         ELSE 
            LET l_var_keys[01] = g_imee_m.imee001
            LET l_field_keys[01] = 'imeel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.imeel001
            LET l_var_keys[02] = ' '
            LET l_field_keys[02] = 'imeel002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'imeel003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004
            LET l_fields[01] = 'imeel004'
            LET l_vars[02] = g_imee_m.imeel005
            LET l_fields[02] = 'imeel005'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'imeelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 
          INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_imee_m.imee001 = g_master_multi_table_t.imeel001_idx2 AND
         g_imee_m.imee003 = g_master_multi_table_t.imeel002_idx2 AND
         g_imee_m.imeel004_2 = g_master_multi_table_t.imeel004_2_idx2  THEN
         ELSE 
            LET l_var_keys[01] = g_imee_m.imee001
            LET l_field_keys[01] = 'imeel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.imeel001_idx2
            LET l_var_keys[02] = g_imee_m.imee003
            LET l_field_keys[02] = 'imeel002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.imeel002_idx2
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'imeel003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_imee_m.imeel004_2
            LET l_fields[01] = 'imeel004'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'imeelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imeel_t')
         END IF 
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
               
            END IF
            LET g_imee001_t = g_imee_m.imee001
            LET g_imee003_t = g_imee_m.imee003
 
           #controlp
      END INPUT
]]>
  </section>
  <section id="aimi093.insert" ver="2" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aimi093_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM                                #清畫面欄位內容
   CALL g_imef_d.clear()          #清除陣列
 
   
   INITIALIZE g_imee_m.* LIKE imee_t.*             #DEFAULT 設定
   
   LET g_imee001_t = NULL
   LET g_imee003_t = NULL
 
   LET g_imee004_t = NULL
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_imee_m.imeeownid = g_user
      LET g_imee_m.imeeowndp = g_dept
      LET g_imee_m.imeecrtid = g_user
      LET g_imee_m.imeecrtdp = g_dept 
      LET g_imee_m.imeecrtdt = cl_get_current()
      LET g_imee_m.imeemodid = ""
      LET g_imee_m.imeemoddt = ""
      #LET g_imee_m.imeestus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_imee_m.imeestus = "Y"
      LET g_imee_m.imee008 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aimi093_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imee_m.* = g_imee_m_t.*
         CALL aimi093_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_imef_d.clear()
 
 
      LET g_rec_b = 0
      EXIT WHILE
        
   END WHILE
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aimi093_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point  
      INSERT INTO imef_t
                  (imefent,
                   imef001,imef002,
                   imef003
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   )
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("imef_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point  
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.lock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aimi093_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aimi093_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "imef_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aimi093_bcl USING g_enterprise,
                                       g_imee_m.imee001,g_imee_m.imee003,g_imef_d[g_detail_idx].imef003 

                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aimi093_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.main" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aim","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT imee001,'','',imeestus,imee004,'',imee003,'',imee006,imee007,imee008,imee009, 
       imee010,imee011,imee012,imee005,imeeownid,'',imeeowndp,'',imeecrtid,'',imeecrtdp,'',imeecrtdt, 
       imeemodid,'',imeemoddt,imee002 FROM imee_t WHERE imeeent= ? AND imee001=? AND imee003=? FOR UPDATE" 

   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE aimi093_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE imee001,imeestus,imee004,imee003,imee006,imee007,imee008,imee009,imee010, 
       imee011,imee012,imee005,imeeownid,imeeowndp,imeecrtid,imeecrtdp,imeecrtdt,imeemodid,imeemoddt, 
       imee002",
               " FROM imee_t",
               " WHERE imeeent = '" ||g_enterprise|| "' AND imee001 = ? AND imee003 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aimi093_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aimi093 WITH FORM cl_ap_formpath("aim",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aimi093_init()   
 
      #進入選單 Menu (="N")
      CALL aimi093_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aimi093
      
   END IF 
   
   CLOSE aimi093_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aimi093.match_node" ver="3" status="" src="s">
    <![CDATA[PRIVATE FUNCTION aimi093_match_node(p_wc,p_type)
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位   
             imee001 VARCHAR(500),
   imee003 VARCHAR(500),
   imee004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位   
             imee001 VARCHAR(500),
   imee003 VARCHAR(500),
   imee004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   #add-point:match_node段define
   {<point name="match_node.define"/>}
   #end add-point
   
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0"
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null('imee004') THEN
      LET ls_code = '0'
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO aimi093_tmp (imee001,imee003,imee004,exp_code) VALUES (?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end('Y','0')
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      EXECUTE master_tmp USING l_bstmp.*,ls_code
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT imee001,imee003,imee004 ",
                  " FROM imee_t  ",
                  " WHERE imeeent = '" ||g_enterprise|| "' AND imee003 = ? "
                  ," AND imee001 = ? "
                  #,cl_get_extra_cond('zzuser', 'zzgrup')
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].imee003) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].imee004
                                           ,l_child_list[1].imee001
                                           INTO l_bstmp.*
         FREE master_getparent_up
      
      #確定該節點是否存在於temp table中
         
         IF STATUS = 0 AND aimi093_tmp_tbl_chk(l_bstmp.imee003,ls_code2
                     ,l_bstmp.imee001
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      
      END WHILE
   
   END FOREACH  
   
   FREE master_tmp
   
   CALL s_transaction_end('Y','0')
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.modify" ver="3" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aimi093_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_imee_m.imee001 IS NULL
   OR g_imee_m.imee003 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus, 
       g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009, 
       g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp, 
       g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt, 
       g_imee_m.imee002
 
   ERROR ""
  
   LET g_imee001_t = g_imee_m.imee001
   LET g_imee003_t = g_imee_m.imee003
 
   CALL s_transaction_begin()
   
   OPEN aimi093_cl USING g_enterprise,g_imee_m.imee001
                                                       ,g_imee_m.imee003
 
   IF STATUS THEN
      CALL cl_err("OPEN aimi093_cl:", STATUS, 1)
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aimi093_cl INTO g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004, 
       g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007, 
       g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005, 
       g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid, 
       g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid, 
       g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_imee_m.imee001,SQLCA.sqlcode,0)
      CLOSE aimi093_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL aimi093_show()
   WHILE TRUE
      LET g_imee001_t = g_imee_m.imee001
      LET g_imee003_t = g_imee_m.imee003
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_imee_m.imeemodid = g_user 
LET g_imee_m.imeemoddt = cl_get_current()
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aimi093_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imee_m.* = g_imee_m_t.*
         CALL aimi093_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_imee_m.imee001 != g_imee001_t 
      OR g_imee_m.imee003 != g_imee003_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE imef_t SET imef001 = g_imee_m.imee001
                                      ,imef002 = g_imee_m.imee003
 
          WHERE imefent = g_enterprise AND imef001 = g_imee001_t
            AND imef002 = g_imee003_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("imef_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("imef_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         IF SQLCA.sqlcode THEN
             CALL cl_err("",SQLCA.sqlcode,1) 
             CALL s_transaction_end('N','0')
             CONTINUE WHILE
         END IF
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
      
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_imee_m.imee001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aimi093_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_imee_m.imee001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="aimi093.modify_detail_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aimi093_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "imef003"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aimi093.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aimi093_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point    
   
   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_imef_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   
   CALL aimi093_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_imee_m.* TO NULL
      LET g_wc = " 1=1"
      LET g_wc2 = " 1=1"
      RETURN
   END IF
 
   LET g_error_show = 1
   CALL aimi093_browser_fill()
         
   IF g_browser.getLength() = 0 THEN
      CALL cl_err('',-100,1)
   END IF   
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aimi093_reproduce()
   DEFINE l_newno     LIKE imee_t.imee001 
   DEFINE l_oldno     LIKE imee_t.imee001 
   DEFINE l_newno02     LIKE imee_t.imee003 
   DEFINE l_oldno02     LIKE imee_t.imee003 
 
   DEFINE l_master    RECORD LIKE imee_t.*
   DEFINE l_detail    RECORD LIKE imef_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   IF g_imee_m.imee001 IS NULL
   OR g_imee_m.imee003 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_imee001_t = g_imee_m.imee001
   LET g_imee003_t = g_imee_m.imee003
 
   
   LET g_imee_m.imee001 = ""
   LET g_imee_m.imee003 = ""
 
    
   CALL aimi093_set_entry('a')
   CALL aimi093_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_imee_m.imeeownid = g_user
      LET g_imee_m.imeeowndp = g_dept
      LET g_imee_m.imeecrtid = g_user
      LET g_imee_m.imeecrtdp = g_dept 
      LET g_imee_m.imeecrtdt = cl_get_current()
      LET g_imee_m.imeemodid = ""
      LET g_imee_m.imeemoddt = ""
      #LET g_imee_m.imeestus = ""
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aimi093_input("r")
   
   
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aimi093_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("imee001,imee003",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aimi093_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aimi093.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aimi093_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("imee001,imee003",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aimi093_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aimi093.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aimi093_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_imee_m.imee001
   LET g_pk_array[1].column = 'imee001'
   LET g_pk_array[2].values = g_imee_m.imee003
   LET g_pk_array[2].column = 'imee003'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aimi093.show" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aimi093_show()
   DEFINE l_ac_t    LIKE type_t.num5
   DEFINE l_sql     STRING
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_imee_m_t.* = g_imee_m.*      #保存單頭舊值
  
   DISPLAY BY NAME g_imee_m.imee001,g_imee_m.imeel004,g_imee_m.imeel005,g_imee_m.imeestus,g_imee_m.imee004, 
       g_imee_m.imee004_desc,g_imee_m.imee003,g_imee_m.imeel004_2,g_imee_m.imee006,g_imee_m.imee007, 
       g_imee_m.imee008,g_imee_m.imee009,g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005, 
       g_imee_m.imeeownid,g_imee_m.imeeownid_desc,g_imee_m.imeeowndp,g_imee_m.imeeowndp_desc,g_imee_m.imeecrtid, 
       g_imee_m.imeecrtid_desc,g_imee_m.imeecrtdp,g_imee_m.imeecrtdp_desc,g_imee_m.imeecrtdt,g_imee_m.imeemodid, 
       g_imee_m.imeemodid_desc,g_imee_m.imeemoddt,g_imee_m.imee002
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_imee_m.imeestus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
  
   IF g_bfill = "Y" THEN
      CALL aimi093_b_fill()                 #單身
   END IF
   
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_imee_m.imeeownid_desc = cl_get_username(g_imee_m.imeeownid)
      #LET g_imee_m.imeeowndp_desc = cl_get_deptname(g_imee_m.imeeowndp)
      #LET g_imee_m.imeecrtid_desc = cl_get_username(g_imee_m.imeecrtid)
      #LET g_imee_m.imeecrtdp_desc = cl_get_deptname(g_imee_m.imeecrtdp)
      #LET g_imee_m.imeemodid_desc = cl_get_username(g_imee_m.imeemodid)
      ##LET g_imee_m.imeecnfid_desc = cl_get_deptname(g_imee_m.imeecnfid)
      ##LET g_imee_m.imeepstid_desc = cl_get_deptname(g_imee_m.imeepstid)
      
 
 
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aimi093_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_imef_d.getLength()
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aimi093_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_imee_m.imee001 IS NULL
      OR g_imee_m.imee003 IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_imee_m.imeestus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE imee_t SET imeestus = lc_state 
    WHERE imeeent = g_enterprise AND imee001 = g_imee_m.imee001
      AND imee003 = g_imee_m.imee003
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_imee_m.imeestus = lc_state
      DISPLAY BY NAME g_imee_m.imeestus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aimi093.tmp_tbl_chk" ver="2" status="" src="s">
    <![CDATA[#+ TEMP TABLE CHK
PRIVATE FUNCTION aimi093_tmp_tbl_chk(ps_id,pi_code,ps_type)
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10
   #add-point:tmp_tbl_chk段define
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
   
   LET ls_id = ps_id
   LET ls_type = ps_type
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM aimi093_tmp ", 
               " WHERE imee003 = ? "
                ," AND imee001 = ? "
 
   PREPARE aimi093_get_cnt FROM g_sql
   EXECUTE aimi093_get_cnt USING ls_id ,ls_type
                                     INTO li_cnt
   FREE aimi093_get_cnt
                                     
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
    
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM aimi093_tmp  ",
                  " WHERE imee003 = ? " 
                   ," AND imee001 = ? "
 
      PREPARE aimi093_chk_exp FROM g_sql
      
      EXECUTE aimi093_chk_exp USING ls_id ,ls_type
                                        INTO li_code
      FREE aimi093_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE aimi093_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE imee003 = ? "
                      ," AND imee001 = ? "
         PREPARE aimi093_upd_exp FROM g_sql
         EXECUTE aimi093_upd_exp USING ls_id ,ls_type
         FREE aimi093_upd_exp
         
      END IF      
      
      RETURN FALSE
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aimi093_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_imee001 = g_imee_m.imee001 
         AND g_browser[l_i].b_imee003 = g_imee_m.imee003 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aimi093_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.ui_dialog" ver="3" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aimi093_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #temp CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   #temp CALL gfrm_curr.setElementHidden("mainlayout",1)
   #temp CALL gfrm_curr.setElementHidden("worksheet",0)
   #temp LET g_main_hidden = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aimi093_browser_fill()
      
      #temp CALL cl_notice()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype 

            BEFORE INPUT
         END INPUT
            
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aimi093_fetch('') # reload data
               #LET g_detail_idx = 1
               CALL aimi093_ui_detailshow() #Setting the current row 
      
               CALL aimi093_idx_chk()
               #NEXT FIELD imef003
               
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL aimi093_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
         
         END DISPLAY
        
         DISPLAY ARRAY g_imef_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               CALL aimi093_idx_chk()
               
            BEFORE DISPLAY
               LET g_current_page = 1
               CALL aimi093_idx_chk()
               
            
               
         END DISPLAY
        
 
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aimi093_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aimi093_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aimi093_idx_chk()
            
            #NEXT FIELD imef003
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
      
         #Browser用Action
      
         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            INITIALIZE g_wc_table1 TO NULL
 
            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT aimi093_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser.getLength() = 0 THEN
               CALL cl_err('',-100,1)
            END IF   
            LET g_action_choice = "searchdata"
            EXIT DIALOG
      
         #進階搜尋
         ON ACTION advancesearch    
            
         ON ACTION statechange
            CALL aimi093_statechange()
            LET g_action_choice = "statechange"
      
         #ACTION表單列
         ON ACTION first
            CALL aimi093_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi093_idx_chk()
            
         ON ACTION previous
            CALL aimi093_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi093_idx_chk()
            
         ON ACTION jump
            CALL aimi093_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi093_idx_chk()
            
         ON ACTION next
            CALL aimi093_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi093_idx_chk()
            
         ON ACTION last
            CALL aimi093_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi093_idx_chk()
            
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF
       
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_imee001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL aimi093_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL aimi093_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL aimi093_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL aimi093_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL aimi093_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aimi093_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aimi093_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aimi093_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.ui_headershow" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aimi093_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_imee_m.imee001 = g_browser[g_current_idx].b_imee001   
   LET g_imee_m.imee003 = g_browser[g_current_idx].b_imee003   
 
   EXECUTE aimi093_master_referesh USING g_imee_m.imee001,g_imee_m.imee003 INTO g_imee_m.imee001,g_imee_m.imeestus, 
       g_imee_m.imee004,g_imee_m.imee003,g_imee_m.imee006,g_imee_m.imee007,g_imee_m.imee008,g_imee_m.imee009, 
       g_imee_m.imee010,g_imee_m.imee011,g_imee_m.imee012,g_imee_m.imee005,g_imee_m.imeeownid,g_imee_m.imeeowndp, 
       g_imee_m.imeecrtid,g_imee_m.imeecrtdp,g_imee_m.imeecrtdt,g_imee_m.imeemodid,g_imee_m.imeemoddt, 
       g_imee_m.imee002
   CALL aimi093_show()
   
END FUNCTION
]]>
  </section>
  <section id="aimi093.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aimi093_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aimi093_bcl
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aimi093.update_b" ver="3" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aimi093_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "imef_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point  
      UPDATE imef_t 
         SET (imef001,imef002,
              imef003
              ) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ) 
         WHERE imef001 = ps_keys_bak[1] AND imef002 = ps_keys_bak[2] AND imef003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("imef_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("imef_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            LET l_new_key[01] = ps_keys[01] 
LET l_old_key[01] = ps_keys_bak[01] 
LET l_field_key[01] = 'imefl001'
LET l_new_key[02] = ps_keys[02] 
LET l_old_key[02] = ps_keys_bak[02] 
LET l_field_key[02] = 'imefl002'
LET l_new_key[03] = ps_keys[03] 
LET l_old_key[03] = ps_keys_bak[03] 
LET l_field_key[03] = 'imefl003'
LET l_new_key[04] = g_dlang 
LET l_old_key[04] = g_dlang 
LET l_field_key[04] = 'imefl004'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'imefl_t')
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point  
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
