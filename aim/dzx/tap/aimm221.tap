<add_points prog="aimm221" std_prog="aimm221" erpver="1.0" module="AIM" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.aimm221_imab001_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION aimm221_imab001_ref()
   SELECT imaa001,imaa002,'','','',imaa009,'',imaa003,'',imaa004,imaa005,'',imaa006,'',imaa010,'',imaa013
     INTO g_imab_m.* FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_imab_m.imab001
   
   DISPLAY BY NAME g_imab_m.*
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_m.imab001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004,imaal005 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_m.imaal003 = '', g_rtn_fields[1] , ''
   LET g_imab_m.imaal004 = '', g_rtn_fields[2] , ''
   LET g_imab_m.imaal005 = '', g_rtn_fields[3] , ''
   DISPLAY BY NAME g_imab_m.imaal003,g_imab_m.imaal004,g_imab_m.imaal005
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_m.imaa009
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_m.imaa009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imab_m.imaa009_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_m.imaa006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_m.imaa006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imab_m.imaa006_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_m.imaa003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='200' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_m.imaa003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imab_m.imaa003_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_m.imaa005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='211' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_m.imaa005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imab_m.imaa005_desc 
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_m.imaa010
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='210' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_m.imaa010_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imab_m.imaa010_desc 
END FUNCTION]]>
</point>
  <point name="function.aimm221_imab002_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION aimm221_imab002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_m.imab002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='209' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_m.imab002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imab_m.imab002_desc
END FUNCTION]]>
</point>
  <point name="function.aimm221_imab004_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION aimm221_imab004_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imab_d[l_ac].imab004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='228' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imab_d[l_ac].imab004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_imab_d[l_ac].imab004_desc
END FUNCTION]]>
</point>
  <point name="construct.c.imaa003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa003  #顯示到畫面上
            NEXT FIELD imaa003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.imaa005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imea001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa005  #顯示到畫面上
            NEXT FIELD imaa005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.imaa006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa006  #顯示到畫面上
            NEXT FIELD imaa006                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.imaa009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上
            NEXT FIELD imaa009                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.imaa010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa010  #顯示到畫面上
            NEXT FIELD imaa010                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.imab001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "imaastus = 'Y'"
            CALL q_imaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imab001  #顯示到畫面上
            NEXT FIELD imab001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.imab002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "209"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imab002  #顯示到畫面上
            NEXT FIELD imab002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.imab004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "228"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imab004  #顯示到畫面上
            NEXT FIELD imab004 ]]>
</point>
  <point name="construct.c.page2.imabcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imabcrtdp  #顯示到畫面上
            NEXT FIELD imabcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.imabcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imabcrtid  #顯示到畫面上
            NEXT FIELD imabcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.imabmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imabmodid  #顯示到畫面上
            NEXT FIELD imabmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.imabowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imabowndp  #顯示到畫面上
            NEXT FIELD imabowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.imabownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imabownid  #顯示到畫面上
            NEXT FIELD imabownid                     #返回原欄位
    

]]>
</point>
  <point name="input.a.imab001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimm221_imab001_ref()
            IF  NOT cl_null(g_imab_m.imab001) AND NOT cl_null(g_imab_m.imab002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_imab_m.imab001 != g_imab001_t  OR g_imab_m.imab002 != g_imab002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imab_t WHERE "||"imabent = '" ||g_enterprise|| "' AND "||"imab001 = '"||g_imab_m.imab001 ||"' AND "|| "imab002 = '"||g_imab_m.imab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_imab_m.imab001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_imab_m.imab001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaa001_7") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  LET g_imab_m.imab001 = g_imab_m_t.imab001
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.imab002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimm221_imab002_desc()

            #此段落由子樣板a05產生
            
            IF  NOT cl_null(g_imab_m.imab001) AND NOT cl_null(g_imab_m.imab002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_imab_m.imab001 != g_imab001_t  OR g_imab_m.imab002 != g_imab002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imab_t WHERE "||"imabent = '" ||g_enterprise|| "' AND "||"imab001 = '"||g_imab_m.imab001 ||"' AND "|| "imab002 = '"||g_imab_m.imab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_imab_m.imab002) THEN
               IF NOT s_azzi650_chk_exist(209,g_imab_m.imab002) THEN
                  LET g_imab_m.imab002 = g_imab_m_t.imab002
                  NEXT FIELD CURRENT
               END IF
            END IF
]]>
</point>
  <point name="input.a.page1.imab003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_imab_d[l_ac].imab003) THEN 
            END IF 


            #此段落由子樣板a05產生
            IF  g_imab_m.imab001 IS NOT NULL AND g_imab_m.imab002 IS NOT NULL AND g_imab_d[g_detail_idx].imab003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imab_m.imab001 != g_imab001_t OR g_imab_m.imab002 != g_imab002_t OR g_imab_d[g_detail_idx].imab003 != g_imab_d_t.imab003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imab_t WHERE "||"imabent = '" ||g_enterprise|| "' AND "||"imab001 = '"||g_imab_m.imab001 ||"' AND "|| "imab002 = '"||g_imab_m.imab002 ||"' AND "|| "imab003 = '"||g_imab_d[g_detail_idx].imab003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.imab004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimm221_imab004_desc()
            IF NOT cl_null(g_imab_d[l_ac].imab004) THEN
               IF NOT s_azzi650_chk_exist(228,g_imab_d[l_ac].imab004) THEN
                  LET g_imab_d[l_ac].imab004 = g_imab_d_t.imab004
                  NEXT FIELD CURRENT
               END IF
               LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM imab_t 
                WHERE imabent = g_enterprise AND imab001 = g_imab_m.imab001
                  AND imab002 = g_imab_m.imab002 AND imab004 = g_imab_d[l_ac].imab004
                  AND imab003 <> g_imab_d[l_ac].imab003
               IF l_n > 0 THEN
                  CALL cl_err('','aim-00214',1)
                  LET g_imab_d[l_ac].imab004 = g_imab_d_t.imab004
                  NEXT FIELD CURRENT
               END IF
            END IF
]]>
</point>
  <point name="input.a.page2.imab003_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_imab_m.imab001 IS NOT NULL AND g_imab_m.imab002 IS NOT NULL AND g_imab2_d[g_detail_idx].imab003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imab_m.imab001 != g_imab001_t OR g_imab_m.imab002 != g_imab002_t OR g_imab2_d[g_detail_idx].imab003 != g_imab2_d_t.imab003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imab_t WHERE "||"imabent = '" ||g_enterprise|| "' AND "||"imab001 = '"||g_imab_m.imab001 ||"' AND "|| "imab002 = '"||g_imab_m.imab002 ||"' AND "|| "imab003 = '"||g_imab2_d[g_detail_idx].imab003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.b.imab001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimm221_imab001_ref()]]>
</point>
  <point name="input.b.imab002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimm221_imab002_desc()]]>
</point>
  <point name="input.b.page1.imab003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF l_cmd = 'a'  THEN
               SELECT MAX(imab003) + 1 INTO g_imab_d[l_ac].imab003 FROM imab_t
                WHERE imabent = g_enterprise AND imab001 = g_imab_m.imab001 
                  AND imab002 = g_imab_m.imab002 
               IF cl_null(g_imab_d[l_ac].imab003) THEN
                  LET g_imab_d[l_ac].imab003 = 1
               END IF
            END IF]]>
</point>
  <point name="input.b.page1.imab004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimm221_imab004_desc()]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(imab003) + 1 INTO g_imab_d[l_ac].imab003 FROM imab_t
             WHERE imabent = g_enterprise AND imab001 = g_imab_m.imab001 AND imab002 = g_imab_m.imab002
            IF cl_null(g_imab_d[l_ac].imab003) THEN
               LET g_imab_d[l_ac].imab003 = 1
            END IF]]>
</point>
  <point name="input.c.imab001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_imab_m.imab001             #給予default值

            #給予arg
            LET g_qryparam.where = "imaastus = 'Y'" #

            
            CALL q_imaa001_5()                                #呼叫開窗

            LET g_imab_m.imab001 = g_qryparam.return1              

            DISPLAY g_imab_m.imab001 TO imab001              #

            NEXT FIELD imab001                          #返回原欄位

]]>
</point>
  <point name="input.c.imab002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_imab_m.imab002             #給予default值
            LET g_qryparam.default2 = "" #g_imab_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "209" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_imab_m.imab002 = g_qryparam.return1              
            #LET g_imab_m.oocq002 = g_qryparam.return2 
            DISPLAY g_imab_m.imab002 TO imab002              #
            #DISPLAY g_imab_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD imab002                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.imab004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_imab_d[l_ac].imab004             #給予default值
            LET g_qryparam.default2 = "" #g_imab_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "228" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_imab_d[l_ac].imab004  = g_qryparam.return1              
            #LET g_imab_m.oocq002 = g_qryparam.return2 
            DISPLAY g_imab_d[l_ac].imab004  TO imab004 ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[     ]]>
</point>
  <point name="ref_show.body.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[

]]>
</point>
  <point name="ref_show.body2.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[

]]>
</point>
  <point name="ref_show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            CALL aimm221_imab001_ref()


]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   ]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_browser_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_sql_rank" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after_clear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.more" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imab001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imab001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaa002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaal005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaal005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaal005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaa003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaa004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa005_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa005_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaa005_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaa010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaa013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaa013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaa013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imab002_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imab002_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imab002_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.befroe_query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.before_fetch" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.b_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.m_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.a_key_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_no_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.imab001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.imab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.imabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imab004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imab005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.imab005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imab005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imab005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_inputarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ref_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ref_show.other_reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="bfill.foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.more" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="before_delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_single_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b段" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aimm221.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aimm221_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_imab_d.clear()
   CALL g_imab2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE imabstus,imab003,imab004,imab005,imab003,imabownid,imabowndp,imabcrtid, 
       imabcrtdp,imabcrtdt,imabmodid,imabmoddt,t1.oocql004 ,t2.oofa011 ,t3.ooefl003 ,t4.oofa011 ,t5.ooefl003 , 
       t6.oofa011 FROM imab_t",   
               "",
               
                              " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='228' AND t1.oocql002=imab004 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=imabownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=imabowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=imabcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=imabcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=imabmodid  ",
 
               " WHERE imabent= ? AND imab001=? AND imab002=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("imab_t")
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF aimm221_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY imab_t.imab003"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aimm221_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aimm221_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_imab_m.imab001,g_imab_m.imab002
                                               
      FOREACH b_fill_cs INTO g_imab_d[l_ac].imabstus,g_imab_d[l_ac].imab003,g_imab_d[l_ac].imab004,g_imab_d[l_ac].imab005, 
          g_imab2_d[l_ac].imab003,g_imab2_d[l_ac].imabownid,g_imab2_d[l_ac].imabowndp,g_imab2_d[l_ac].imabcrtid, 
          g_imab2_d[l_ac].imabcrtdp,g_imab2_d[l_ac].imabcrtdt,g_imab2_d[l_ac].imabmodid,g_imab2_d[l_ac].imabmoddt, 
          g_imab_d[l_ac].imab004_desc,g_imab2_d[l_ac].imabownid_desc,g_imab2_d[l_ac].imabowndp_desc, 
          g_imab2_d[l_ac].imabcrtid_desc,g_imab2_d[l_ac].imabcrtdp_desc,g_imab2_d[l_ac].imabmodid_desc 

                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_imab2_d[l_ac].imabownid_desc = cl_get_username(g_imab2_d[l_ac].imabownid)
      #LET g_imab2_d[l_ac].imabowndp_desc = cl_get_deptname(g_imab2_d[l_ac].imabowndp)
      #LET g_imab2_d[l_ac].imabcrtid_desc = cl_get_username(g_imab2_d[l_ac].imabcrtid)
      #LET g_imab2_d[l_ac].imabcrtdp_desc = cl_get_deptname(g_imab2_d[l_ac].imabcrtdp)
      #LET g_imab2_d[l_ac].imabmodid_desc = cl_get_username(g_imab2_d[l_ac].imabmodid)
      
 
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_imab_d.deleteElement(g_imab_d.getLength())
      CALL g_imab2_d.deleteElement(g_imab2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE aimm221_pb   
   
END FUNCTION
]]>
</section>
  <section id="aimm221.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aimm221_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="aimm221.before_delete" ver="1" status="" src="s">
<![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION aimm221_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM imab_t
    WHERE imabent = g_enterprise AND imab001 = g_imab_m.imab001 AND
                              imab002 = g_imab_m.imab002 AND
 
          imab003 = g_imab_d_t.imab003
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("imab_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
</section>
  <section id="aimm221.browser_fill" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aimm221_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "imab001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE imab001 ",
                      ", imab002 ",
 
                      " FROM imab_t ",
                      " ",
                      " ",
 
                      " WHERE imabent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("imab_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE imab001 ",
                      ", imab002 ",
 
                      " FROM imab_t ",
                      " ",
                      " ",
                      " WHERE imabent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("imab_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1THEN
      CALL cl_err(g_browser_cnt,'9035',1)
   END IF
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照imab001,'',imab002,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT imab001,'',imab002,'',t1.imaal003 ,t2.oocql004",
                " FROM imab_t ",
 
                               " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=imab001 AND t1.imaal002='"||g_lang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='209' AND t2.oocql002=imab002 AND t2.oocql003='"||g_lang||"' ",
 
                " WHERE imabent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("imab_t")
 
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
    
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_imab001,g_browser[g_cnt].b_imab001_desc,g_browser[g_cnt].b_imab002, 
       g_browser[g_cnt].b_imab002_desc,g_browser[g_cnt].b_imab001_desc,g_browser[g_cnt].b_imab002_desc  

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_imab_m.* TO NULL
      CALL g_imab_d.clear()
      CALL g_imab2_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   CALL aimm221_fetch('')
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aimm221.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aimm221_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY imab001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aimm221_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aimm221.construct" ver="7" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aimm221_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_imab_m.* TO NULL
   CALL g_imab_d.clear()
   CALL g_imab2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON imab001,imaa002,imaal003,imaal004,imaal005,imaa009,imaa003,imaa003_desc, 
          imaa004,imaa005,imaa005_desc,imaa006,imaa010,imaa010_desc,imaa013,imab002,imab002_desc
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.imab001
         ON ACTION controlp INFIELD imab001
            #add-point:ON ACTION controlp INFIELD imab001
            {<point name="construct.c.imab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab001
            #add-point:BEFORE FIELD imab001
            {<point name="construct.b.imab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imab001
            
            #add-point:AFTER FIELD imab001
            {<point name="construct.a.imab001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa002
            #add-point:BEFORE FIELD imaa002
            {<point name="construct.b.imaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa002
            
            #add-point:AFTER FIELD imaa002
            {<point name="construct.a.imaa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa002
         ON ACTION controlp INFIELD imaa002
            #add-point:ON ACTION controlp INFIELD imaa002
            {<point name="construct.c.imaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="construct.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="construct.a.imaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="construct.c.imaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="construct.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="construct.a.imaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="construct.c.imaal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal005
            #add-point:BEFORE FIELD imaal005
            {<point name="construct.b.imaal005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal005
            
            #add-point:AFTER FIELD imaal005
            {<point name="construct.a.imaal005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal005
         ON ACTION controlp INFIELD imaal005
            #add-point:ON ACTION controlp INFIELD imaal005
            {<point name="construct.c.imaal005" />}
            #END add-point
 
         #Ctrlp:construct.c.imaa009
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009
            {<point name="construct.c.imaa009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009
            {<point name="construct.b.imaa009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009
            {<point name="construct.a.imaa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa003
         ON ACTION controlp INFIELD imaa003
            #add-point:ON ACTION controlp INFIELD imaa003
            {<point name="construct.c.imaa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa003
            #add-point:BEFORE FIELD imaa003
            {<point name="construct.b.imaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa003
            
            #add-point:AFTER FIELD imaa003
            {<point name="construct.a.imaa003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa003_desc
            #add-point:BEFORE FIELD imaa003_desc
            {<point name="construct.b.imaa003_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa003_desc
            
            #add-point:AFTER FIELD imaa003_desc
            {<point name="construct.a.imaa003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa003_desc
         ON ACTION controlp INFIELD imaa003_desc
            #add-point:ON ACTION controlp INFIELD imaa003_desc
            {<point name="construct.c.imaa003_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa004
            #add-point:BEFORE FIELD imaa004
            {<point name="construct.b.imaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa004
            
            #add-point:AFTER FIELD imaa004
            {<point name="construct.a.imaa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa004
         ON ACTION controlp INFIELD imaa004
            #add-point:ON ACTION controlp INFIELD imaa004
            {<point name="construct.c.imaa004" />}
            #END add-point
 
         #Ctrlp:construct.c.imaa005
         ON ACTION controlp INFIELD imaa005
            #add-point:ON ACTION controlp INFIELD imaa005
            {<point name="construct.c.imaa005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa005
            #add-point:BEFORE FIELD imaa005
            {<point name="construct.b.imaa005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa005
            
            #add-point:AFTER FIELD imaa005
            {<point name="construct.a.imaa005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa005_desc
            #add-point:BEFORE FIELD imaa005_desc
            {<point name="construct.b.imaa005_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa005_desc
            
            #add-point:AFTER FIELD imaa005_desc
            {<point name="construct.a.imaa005_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa005_desc
         ON ACTION controlp INFIELD imaa005_desc
            #add-point:ON ACTION controlp INFIELD imaa005_desc
            {<point name="construct.c.imaa005_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.imaa006
         ON ACTION controlp INFIELD imaa006
            #add-point:ON ACTION controlp INFIELD imaa006
            {<point name="construct.c.imaa006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa006
            #add-point:BEFORE FIELD imaa006
            {<point name="construct.b.imaa006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa006
            
            #add-point:AFTER FIELD imaa006
            {<point name="construct.a.imaa006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa010
         ON ACTION controlp INFIELD imaa010
            #add-point:ON ACTION controlp INFIELD imaa010
            {<point name="construct.c.imaa010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa010
            #add-point:BEFORE FIELD imaa010
            {<point name="construct.b.imaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa010
            
            #add-point:AFTER FIELD imaa010
            {<point name="construct.a.imaa010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa010_desc
            #add-point:BEFORE FIELD imaa010_desc
            {<point name="construct.b.imaa010_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa010_desc
            
            #add-point:AFTER FIELD imaa010_desc
            {<point name="construct.a.imaa010_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa010_desc
         ON ACTION controlp INFIELD imaa010_desc
            #add-point:ON ACTION controlp INFIELD imaa010_desc
            {<point name="construct.c.imaa010_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa013
            #add-point:BEFORE FIELD imaa013
            {<point name="construct.b.imaa013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa013
            
            #add-point:AFTER FIELD imaa013
            {<point name="construct.a.imaa013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa013
         ON ACTION controlp INFIELD imaa013
            #add-point:ON ACTION controlp INFIELD imaa013
            {<point name="construct.c.imaa013" />}
            #END add-point
 
         #Ctrlp:construct.c.imab002
         ON ACTION controlp INFIELD imab002
            #add-point:ON ACTION controlp INFIELD imab002
            {<point name="construct.c.imab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab002
            #add-point:BEFORE FIELD imab002
            {<point name="construct.b.imab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imab002
            
            #add-point:AFTER FIELD imab002
            {<point name="construct.a.imab002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab002_desc
            #add-point:BEFORE FIELD imab002_desc
            {<point name="construct.b.imab002_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imab002_desc
            
            #add-point:AFTER FIELD imab002_desc
            {<point name="construct.a.imab002_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imab002_desc
         ON ACTION controlp INFIELD imab002_desc
            #add-point:ON ACTION controlp INFIELD imab002_desc
            {<point name="construct.c.imab002_desc" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON imabstus,imab003,imab004,imab005,imabownid,imabowndp,imabcrtid,imabcrtdp, 
          imabcrtdt,imabmodid,imabmoddt
           FROM s_detail1[1].imabstus,s_detail1[1].imab003,s_detail1[1].imab004,s_detail1[1].imab005, 
               s_detail2[1].imabownid,s_detail2[1].imabowndp,s_detail2[1].imabcrtid,s_detail2[1].imabcrtdp, 
               s_detail2[1].imabcrtdt,s_detail2[1].imabmodid,s_detail2[1].imabmoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<imabcrtdt>>----
         AFTER FIELD imabcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imabmoddt>>----
         AFTER FIELD imabmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imabcnfdt>>----
         
         #----<<imabpstdt>>----
 
 
           
         #單身一般欄位開窗相關處理
            
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
</section>
  <section id="aimm221.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aimm221_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " imab001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " imab002 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aimm221.delete" ver="4" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aimm221_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_imab_m.imab001 IS NULL
   OR g_imab_m.imab002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aimm221_master_referesh USING g_imab_m.imab001,g_imab_m.imab002 INTO g_imab_m.imab001,g_imab_m.imab002, 
       g_imab_m.imab002_desc
   
   CALL aimm221_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN aimm221_cl USING g_enterprise,g_imab_m.imab001
                                                       ,g_imab_m.imab002
 
   IF STATUS THEN
      CALL cl_err("OPEN aimm221_cl:", STATUS, 1)
      CLOSE aimm221_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aimm221_cl INTO g_imab_m.imab001,g_imab_m.imaa002,g_imab_m.imaal003,g_imab_m.imaal004,g_imab_m.imaal005, 
       g_imab_m.imaa009,g_imab_m.imaa009_desc,g_imab_m.imaa003,g_imab_m.imaa003_desc,g_imab_m.imaa004, 
       g_imab_m.imaa005,g_imab_m.imaa005_desc,g_imab_m.imaa006,g_imab_m.imaa006_desc,g_imab_m.imaa010, 
       g_imab_m.imaa010_desc,g_imab_m.imaa013,g_imab_m.imab002,g_imab_m.imab002_desc
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_imab_m.imab001,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aimm221_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imab_t WHERE imabent = g_enterprise AND imab001 = g_imab_m.imab001
                                                               AND imab002 = g_imab_m.imab002
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("imab_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_imab_d.clear() 
      CALL g_imab2_d.clear()       
 
     
      CALL aimm221_ui_browser_refresh()  
      CALL aimm221_ui_headershow()  
      CALL aimm221_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aimm221_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL aimm221_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE aimm221_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_imab_m.imab001,'D')
    
END FUNCTION
]]>
</section>
  <section id="aimm221.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aimm221_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
</section>
  <section id="aimm221.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000071
#+ 
#+ Filename...: aimm221
#+ Description: 料件額外品名規格維護作業
#+ Creator....: 01996(2014/03/26)
#+ Modifier...: 01996(2014/06/27)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aimm221.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aimm221_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE imab_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aimm221_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aimm221_detail AS ",
                "SELECT * FROM imab_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aimm221_detail SELECT * FROM imab_t 
                                         WHERE imabent = g_enterprise AND imab001 = g_imab001_t
                                         AND imab002 = g_imab002_t
 
   
   #將key修正為調整後   
   UPDATE aimm221_detail 
      #更新key欄位
      SET imab001 = g_imab_m.imab001
          , imab002 = g_imab_m.imab002
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , imabownid = g_user
       , imabowndp = g_dept
       , imabcrtid = g_user
       , imabcrtdp = g_dept 
       , imabcrtdt = ld_date
       , imabmodid = "" 
       , imabmoddt = "" 
      #, imabstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO imab_t SELECT * FROM aimm221_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimm221_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_imab001_t = g_imab_m.imab001
   LET g_imab002_t = g_imab_m.imab002
 
   
   DROP TABLE aimm221_detail
   
END FUNCTION
]]>
</section>
  <section id="aimm221.fetch" ver="5" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aimm221_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_imab_m.imab001 = g_browser[g_current_idx].b_imab001
   LET g_imab_m.imab002 = g_browser[g_current_idx].b_imab002
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aimm221_master_referesh USING g_imab_m.imab001,g_imab_m.imab002 INTO g_imab_m.imab001,g_imab_m.imab002, 
       g_imab_m.imab002_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("imab_t",SQLCA.sqlcode,1)
      INITIALIZE g_imab_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aimm221_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="aimm221.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aimm221_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aimm221.filter" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aimm221_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON imab001,imab002
                          FROM s_browse[1].b_imab001,s_browse[1].b_imab002
 
         BEFORE CONSTRUCT
               DISPLAY aimm221_filter_parser('imab001') TO s_browse[1].b_imab001
            DISPLAY aimm221_filter_parser('imab002') TO s_browse[1].b_imab002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aimm221_filter_show('imab001')
   CALL aimm221_filter_show('imab002')
 
END FUNCTION
]]>
</section>
  <section id="aimm221.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aimm221_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aimm221.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aimm221_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aimm221_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aimm221.global" ver="4" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_imab_m        RECORD
       imab001 LIKE imab_t.imab001, 
   imaa002 LIKE type_t.chr80, 
   imaal003 LIKE type_t.chr80, 
   imaal004 LIKE type_t.chr80, 
   imaal005 LIKE type_t.chr80, 
   imaa009 LIKE type_t.chr80, 
   imaa009_desc LIKE type_t.chr80, 
   imaa003 LIKE type_t.chr80, 
   imaa003_desc LIKE type_t.chr80, 
   imaa004 LIKE type_t.chr80, 
   imaa005 LIKE type_t.chr80, 
   imaa005_desc LIKE type_t.chr80, 
   imaa006 LIKE type_t.chr80, 
   imaa006_desc LIKE type_t.chr80, 
   imaa010 LIKE type_t.chr80, 
   imaa010_desc LIKE type_t.chr80, 
   imaa013 LIKE type_t.chr80, 
   imab002 LIKE imab_t.imab002, 
   imab002_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_imab_d        RECORD
       imabstus LIKE imab_t.imabstus, 
   imab003 LIKE imab_t.imab003, 
   imab004 LIKE imab_t.imab004, 
   imab004_desc LIKE type_t.chr500, 
   imab005 LIKE imab_t.imab005
       END RECORD
PRIVATE TYPE type_g_imab2_d RECORD
       imab003 LIKE imab_t.imab003, 
   imabownid LIKE imab_t.imabownid, 
   imabownid_desc LIKE type_t.chr500, 
   imabowndp LIKE imab_t.imabowndp, 
   imabowndp_desc LIKE type_t.chr500, 
   imabcrtid LIKE imab_t.imabcrtid, 
   imabcrtid_desc LIKE type_t.chr500, 
   imabcrtdp LIKE imab_t.imabcrtdp, 
   imabcrtdp_desc LIKE type_t.chr500, 
   imabcrtdt DATETIME YEAR TO SECOND, 
   imabmodid LIKE imab_t.imabmodid, 
   imabmodid_desc LIKE type_t.chr500, 
   imabmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_imab_m          type_g_imab_m
DEFINE g_imab_m_t        type_g_imab_m
 
   DEFINE g_imab001_t LIKE imab_t.imab001
DEFINE g_imab002_t LIKE imab_t.imab002
 
 
DEFINE g_imab_d          DYNAMIC ARRAY OF type_g_imab_d
DEFINE g_imab_d_t        type_g_imab_d
DEFINE g_imab2_d   DYNAMIC ARRAY OF type_g_imab2_d
DEFINE g_imab2_d_t type_g_imab2_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_imab001 LIKE imab_t.imab001,
   b_imab001_desc LIKE type_t.chr80,
      b_imab002 LIKE imab_t.imab002,
   b_imab002_desc LIKE type_t.chr80
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aimm221.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aimm221_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
      CALL cl_set_combo_scc_part('imabstus','50','N,X,Y')
 
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aimm221_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aimm221.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aimm221_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT imabstus,imab003,imab004,imab005,imab003,imabownid,imabowndp,imabcrtid, 
       imabcrtdp,imabcrtdt,imabmodid,imabmoddt FROM imab_t WHERE imabent=? AND imab001=? AND imab002=?  
       AND imab003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimm221_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aimm221_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aimm221_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_imab_m.imab001,g_imab_m.imab002
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
</section>
  <section id="aimm221.input.body" ver="3" status="" src="s">
<![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_imab_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_imab_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aimm221_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN aimm221_cl USING g_enterprise,
                                               g_imab_m.imab001
                                               ,g_imab_m.imab002
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN aimm221_cl:", STATUS, 1)
                  CLOSE aimm221_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_imab_d[l_ac].imab003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_imab_d_t.* = g_imab_d[l_ac].*  #BACKUP
               CALL aimm221_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL aimm221_set_no_entry_b(l_cmd)
               OPEN aimm221_bcl USING g_enterprise,g_imab_m.imab001,
                                                g_imab_m.imab002,
 
                                                g_imab_d_t.imab003
 
               IF STATUS THEN
                  CALL cl_err("OPEN aimm221_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aimm221_bcl INTO g_imab_d[l_ac].imabstus,g_imab_d[l_ac].imab003,g_imab_d[l_ac].imab004, 
                      g_imab_d[l_ac].imab005
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_imab_d_t.imab003,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aimm221_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_imab_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_imab_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_imab2_d[l_ac].imabownid = g_user
      LET g_imab2_d[l_ac].imabowndp = g_dept
      LET g_imab2_d[l_ac].imabcrtid = g_user
      LET g_imab2_d[l_ac].imabcrtdp = g_dept 
      LET g_imab2_d[l_ac].imabcrtdt = cl_get_current()
      LET g_imab2_d[l_ac].imabmodid = ""
      LET g_imab2_d[l_ac].imabmoddt = ""
      LET g_imab_d[l_ac].imabstus = ""
 
  
            
            #一般欄位預設值
                  LET g_imab_d[l_ac].imabstus = "Y"
 
            
            
            LET g_imab_d_t.* = g_imab_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aimm221_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL aimm221_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_imab_d[li_reproduce_target].* = g_imab_d[li_reproduce].*
               LET g_imab2_d[li_reproduce_target].* = g_imab2_d[li_reproduce].*
 
               LET g_imab_d[g_imab_d.getLength()].imab003 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM imab_t 
             WHERE imabent = g_enterprise AND imab001 = g_imab_m.imab001
               AND imab002 = g_imab_m.imab002
 
               AND imab003 = g_imab_d[l_ac].imab003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO imab_t
                           (imabent,
                            imab001,imab002,
                            imab003
                            ,imabstus,imab004,imab005,imabownid,imabowndp,imabcrtid,imabcrtdp,imabcrtdt,imabmodid,imabmoddt) 
                     VALUES(g_enterprise,
                            g_imab_m.imab001,g_imab_m.imab002,
                            g_imab_d[l_ac].imab003
                            ,g_imab_d[l_ac].imabstus,g_imab_d[l_ac].imab004,g_imab_d[l_ac].imab005,g_imab2_d[l_ac].imabownid, 
                                g_imab2_d[l_ac].imabowndp,g_imab2_d[l_ac].imabcrtid,g_imab2_d[l_ac].imabcrtdp, 
                                g_imab2_d[l_ac].imabcrtdt,g_imab2_d[l_ac].imabmodid,g_imab2_d[l_ac].imabmoddt) 

               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_imab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("imab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_imab_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_imab_d.deleteElement(l_ac)
               NEXT FIELD imab003
            END IF
            IF g_imab_d_t.imab003 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF aimm221_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE aimm221_bcl
               LET l_count = g_imab_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD imabstus
            #add-point:BEFORE FIELD imabstus
            {<point name="input.b.page1.imabstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imabstus
            
            #add-point:AFTER FIELD imabstus
            {<point name="input.a.page1.imabstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imabstus
            #add-point:ON CHANGE imabstus
            {<point name="input.g.page1.imabstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imab003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_imab_d[l_ac].imab003,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD imab003
            END IF
 
 
            #add-point:AFTER FIELD imab003
            {<point name="input.a.page1.imab003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab003
            #add-point:BEFORE FIELD imab003
            {<point name="input.b.page1.imab003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imab003
            #add-point:ON CHANGE imab003
            {<point name="input.g.page1.imab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imab004
            
            #add-point:AFTER FIELD imab004
            {<point name="input.a.page1.imab004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab004
            #add-point:BEFORE FIELD imab004
            {<point name="input.b.page1.imab004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imab004
            #add-point:ON CHANGE imab004
            {<point name="input.g.page1.imab004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab005
            #add-point:BEFORE FIELD imab005
            {<point name="input.b.page1.imab005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imab005
            
            #add-point:AFTER FIELD imab005
            {<point name="input.a.page1.imab005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imab005
            #add-point:ON CHANGE imab005
            {<point name="input.g.page1.imab005" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.imabstus
         ON ACTION controlp INFIELD imabstus
            #add-point:ON ACTION controlp INFIELD imabstus
            {<point name="input.c.page1.imabstus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imab003
         ON ACTION controlp INFIELD imab003
            #add-point:ON ACTION controlp INFIELD imab003
            {<point name="input.c.page1.imab003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imab004
         ON ACTION controlp INFIELD imab004
            #add-point:ON ACTION controlp INFIELD imab004
            {<point name="input.c.page1.imab004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imab005
         ON ACTION controlp INFIELD imab005
            #add-point:ON ACTION controlp INFIELD imab005
            {<point name="input.c.page1.imab005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_imab_d[l_ac].* = g_imab_d_t.*
               CLOSE aimm221_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_imab_d[l_ac].imab003,-263,1)
               LET g_imab_d[l_ac].* = g_imab_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_imab2_d[l_ac].imabmodid = g_user 
LET g_imab2_d[l_ac].imabmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE imab_t SET (imab001,imab002,imabstus,imab003,imab004,imab005,imabownid,imabowndp, 
                   imabcrtid,imabcrtdp,imabcrtdt,imabmodid,imabmoddt) = (g_imab_m.imab001,g_imab_m.imab002, 
                   g_imab_d[l_ac].imabstus,g_imab_d[l_ac].imab003,g_imab_d[l_ac].imab004,g_imab_d[l_ac].imab005, 
                   g_imab2_d[l_ac].imabownid,g_imab2_d[l_ac].imabowndp,g_imab2_d[l_ac].imabcrtid,g_imab2_d[l_ac].imabcrtdp, 
                   g_imab2_d[l_ac].imabcrtdt,g_imab2_d[l_ac].imabmodid,g_imab2_d[l_ac].imabmoddt)
                WHERE imabent = g_enterprise AND imab001 = g_imab_m.imab001 
                 AND imab002 = g_imab_m.imab002 
 
                 AND imab003 = g_imab_d_t.imab003 #項次   
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("imab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("imab_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imab_m.imab001
               LET gs_keys_bak[1] = g_imab001_t
               LET gs_keys[2] = g_imab_m.imab002
               LET gs_keys_bak[2] = g_imab002_t
               LET gs_keys[3] = g_imab_d[g_detail_idx].imab003
               LET gs_keys_bak[3] = g_imab_d_t.imab003
               CALL aimm221_update_b('imab_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_imab_m),util.JSON.stringify(g_imab_d_t)
                     LET g_log2 = util.JSON.stringify(g_imab_m),util.JSON.stringify(g_imab_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_imab_d.getLength() = 0 THEN
               NEXT FIELD imab003
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_imab_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_imab_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_imab2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL aimm221_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL aimm221_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD imab001
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD imabstus
               WHEN "s_detail2"
                  NEXT FIELD imab003_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aimm221.input.head" ver="2" status="" src="s">
<![CDATA[   
      #單頭段
      INPUT BY NAME g_imab_m.imab001,g_imab_m.imab002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD imab001
            
            #add-point:AFTER FIELD imab001
            {<point name="input.a.imab001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab001
            #add-point:BEFORE FIELD imab001
            {<point name="input.b.imab001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imab001
            #add-point:ON CHANGE imab001
            {<point name="input.g.imab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imab002
            
            #add-point:AFTER FIELD imab002
            {<point name="input.a.imab002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imab002
            #add-point:BEFORE FIELD imab002
            {<point name="input.b.imab002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imab002
            #add-point:ON CHANGE imab002
            {<point name="input.g.imab002" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.imab001
         ON ACTION controlp INFIELD imab001
            #add-point:ON ACTION controlp INFIELD imab001
            {<point name="input.c.imab001" />}
            #END add-point
 
         #Ctrlp:input.c.imab002
         ON ACTION controlp INFIELD imab002
            #add-point:ON ACTION controlp INFIELD imab002
            {<point name="input.c.imab002" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_imab_m.imab001             
                            ,g_imab_m.imab002   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE imab_t SET (imab001,imab002) = (g_imab_m.imab001,g_imab_m.imab002)
                WHERE imabent = g_enterprise AND imab001 = g_imab001_t
                  AND imab002 = g_imab002_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("imab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("imab_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imab_m.imab001
               LET gs_keys_bak[1] = g_imab001_t
               LET gs_keys[2] = g_imab_m.imab002
               LET gs_keys_bak[2] = g_imab002_t
               LET gs_keys[3] = g_imab_d[g_detail_idx].imab003
               LET gs_keys_bak[3] = g_imab_d_t.imab003
               CALL aimm221_update_b('imab_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_imab001_t = g_imab_m.imab001
                     LET g_imab002_t = g_imab_m.imab002
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_imab_m_t)
                     LET g_log2 = util.JSON.stringify(g_imab_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aimm221_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_imab001_t = g_imab_m.imab001
           LET g_imab002_t = g_imab_m.imab002
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_imab_d[1].imab003) THEN
           #   CALL g_imab_d.deleteElement(1)
           #   NEXT FIELD imab003
           #END IF
           
           IF g_imab_d.getLength() = 0 THEN
              NEXT FIELD imab003
           END IF
 
      END INPUT
]]>
</section>
  <section id="aimm221.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aimm221_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_imab_d.clear()
   CALL g_imab2_d.clear()
 
 
   INITIALIZE g_imab_m.* LIKE imab_t.*             #DEFAULT 設定
   LET g_imab001_t = NULL
   LET g_imab002_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL aimm221_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imab_m.* = g_imab_m_t.*
         CALL aimm221_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_imab_d.clear()
      CALL g_imab2_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_imab001_t = g_imab_m.imab001
   LET g_imab002_t = g_imab_m.imab002
 
   
   LET g_wc = g_wc,  
              " OR ( imabent = '" ||g_enterprise|| "' AND ",
              " imab001 = '", g_imab_m.imab001 CLIPPED, "' "
              ," AND imab002 = '", g_imab_m.imab002 CLIPPED, "' "
 
              , ") "
   
END FUNCTION
]]>
</section>
  <section id="aimm221.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aimm221_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
</section>
  <section id="aimm221.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aimm221_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aimm221_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aimm221.main" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aim","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT imab001,'','','','','','','','','','','','','','','','',imab002,''", 
                      " FROM imab_t",
                      " WHERE imabent= ? AND imab001=? AND imab002=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimm221_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE imab001,imab002,t3.oocql004",
               " FROM imab_t",
                              " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='209' AND t3.oocql002=imab002 AND t3.oocql003='"||g_dlang||"' ",
 
               " WHERE imabent = '" ||g_enterprise|| "' AND imab001 = ? AND imab002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aimm221_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aimm221 WITH FORM cl_ap_formpath("aim",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aimm221_init()   
 
      #進入選單 Menu (="N")
      CALL aimm221_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aimm221
      
   END IF 
   
   CLOSE aimm221_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aimm221.modify" ver="4" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aimm221_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_imab_m.imab001 IS NULL
   OR g_imab_m.imab002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aimm221_master_referesh USING g_imab_m.imab001,g_imab_m.imab002 INTO g_imab_m.imab001,g_imab_m.imab002, 
       g_imab_m.imab002_desc
 
   ERROR ""
  
   LET g_imab001_t = g_imab_m.imab001
   LET g_imab002_t = g_imab_m.imab002
 
   CALL s_transaction_begin()
   
   OPEN aimm221_cl USING g_enterprise,g_imab_m.imab001
                                                       ,g_imab_m.imab002
 
   IF STATUS THEN
      CALL cl_err("OPEN aimm221_cl:", STATUS, 1)
      CLOSE aimm221_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aimm221_cl INTO g_imab_m.imab001,g_imab_m.imaa002,g_imab_m.imaal003,g_imab_m.imaal004,g_imab_m.imaal005, 
       g_imab_m.imaa009,g_imab_m.imaa009_desc,g_imab_m.imaa003,g_imab_m.imaa003_desc,g_imab_m.imaa004, 
       g_imab_m.imaa005,g_imab_m.imaa005_desc,g_imab_m.imaa006,g_imab_m.imaa006_desc,g_imab_m.imaa010, 
       g_imab_m.imaa010_desc,g_imab_m.imaa013,g_imab_m.imab002,g_imab_m.imab002_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_imab_m.imab001,SQLCA.sqlcode,0)
      CLOSE aimm221_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL aimm221_show()
   WHILE TRUE
      LET g_imab001_t = g_imab_m.imab001
      LET g_imab002_t = g_imab_m.imab002
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aimm221_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imab_m.* = g_imab_m_t.*
         CALL aimm221_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_imab_m.imab001 != g_imab001_t 
      OR g_imab_m.imab002 != g_imab002_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE imab_t SET imab001 = g_imab_m.imab001
                                       , imab002 = g_imab_m.imab002
 
          WHERE imabent = g_enterprise AND imab001 = g_imab001_t
            AND imab002 = g_imab002_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("imab_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("imab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_imab_m.imab001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aimm221_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_imab_m.imab001,'U')
 
   CALL aimm221_b_fill("1=1")
   
END FUNCTION   
]]>
</section>
  <section id="aimm221.modify_detail_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aimm221_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "imabstus"
      WHEN "s_detail2"
         LET ls_return = "imab003_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="aimm221.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aimm221.query" ver="1" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aimm221_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_imab_d.clear()
   CALL g_imab2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aimm221_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aimm221_browser_fill(g_wc)
      CALL aimm221_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL aimm221_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aimm221_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
</section>
  <section id="aimm221.ref_show" ver="2" status="" src="s">
<![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION aimm221_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_imab_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_imab2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
</section>
  <section id="aimm221.reproduce" ver="2" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aimm221_reproduce()
   DEFINE l_newno     LIKE imab_t.imab001 
   DEFINE l_oldno     LIKE imab_t.imab001 
   DEFINE l_newno02     LIKE imab_t.imab002 
   DEFINE l_oldno02     LIKE imab_t.imab002 
 
   DEFINE l_master    RECORD LIKE imab_t.*
   DEFINE l_detail    RECORD LIKE imab_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_imab_m.imab001 IS NULL
      OR g_imab_m.imab002 IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_imab001_t = g_imab_m.imab001
   LET g_imab002_t = g_imab_m.imab002
 
   
   LET g_imab_m.imab001 = ""
   LET g_imab_m.imab002 = ""
 
    
   CALL aimm221_set_entry('a')
   CALL aimm221_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aimm221_input("r")
   
      LET g_imab_m.imab002_desc = ''
   DISPLAY BY NAME g_imab_m.imab002_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " imab001 = '", l_newno CLIPPED, "' "
              ," AND imab002 = '", l_newno02 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aimm221.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aimm221_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("imab001,imab002",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aimm221.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aimm221_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aimm221.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aimm221_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("imab001,imab002",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aimm221.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aimm221_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="aimm221.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aimm221_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_imab_m.imab001
   LET g_pk_array[1].column = 'imab001'
   LET g_pk_array[2].values = g_imab_m.imab002
   LET g_pk_array[2].column = 'imab002'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aimm221.show" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aimm221_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL aimm221_b_fill(g_wc2) #單身填充
      CALL aimm221_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aimm221_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET g_imab_m_t.* = g_imab_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_imab_m.imab001,g_imab_m.imaa002,g_imab_m.imaal003,g_imab_m.imaal004,g_imab_m.imaal005, 
       g_imab_m.imaa009,g_imab_m.imaa009_desc,g_imab_m.imaa003,g_imab_m.imaa003_desc,g_imab_m.imaa004, 
       g_imab_m.imaa005,g_imab_m.imaa005_desc,g_imab_m.imaa006,g_imab_m.imaa006_desc,g_imab_m.imaa010, 
       g_imab_m.imaa010_desc,g_imab_m.imaa013,g_imab_m.imab002,g_imab_m.imab002_desc
   CALL aimm221_b_fill(g_wc2_table1)                 #單身
   CALL aimm221_b_fill2('0') #單身填充
 
   CALL aimm221_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
</section>
  <section id="aimm221.state_change" ver="1" status="" src="s">
<![CDATA[    
]]>
</section>
  <section id="aimm221.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aimm221_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_imab001 = g_imab_m.imab001 
         AND g_browser[l_i].b_imab002 = g_imab_m.imab002 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aimm221.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aimm221_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="aimm221.ui_dialog" ver="2" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aimm221_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png")  
   
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0 
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aimm221_browser_fill("")
 
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_imab001 = g_imab001_t
               AND g_browser[li_idx].b_imab002 = g_imab002_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aimm221_fetch('') # reload data
               LET g_detail_idx = 1
               CALL aimm221_ui_detailshow() #Setting the current row 
         
         END DISPLAY
        
         DISPLAY ARRAY g_imab_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL aimm221_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_imab2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL aimm221_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps 
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aimm221_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aimm221_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aimm221_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aimm221_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL aimm221_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL aimm221_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL aimm221_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL aimm221_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD imab003
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aimm221_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aimm221_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aimm221_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aimm221_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aimm221_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aimm221_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aimm221_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aimm221_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aimm221_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aimm221_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aimm221_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aimm221_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
</section>
  <section id="aimm221.ui_headershow" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aimm221_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_imab_m.imab001 = g_browser[g_current_idx].b_imab001   
   LET g_imab_m.imab002 = g_browser[g_current_idx].b_imab002   
 
   EXECUTE aimm221_master_referesh USING g_imab_m.imab001,g_imab_m.imab002 INTO g_imab_m.imab001,g_imab_m.imab002, 
       g_imab_m.imab002_desc
   CALL aimm221_show()
   
END FUNCTION
]]>
</section>
  <section id="aimm221.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aimm221_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
</section>
  <section id="aimm221.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aimm221_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
</section>
</add_points>