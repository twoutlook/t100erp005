<add_points prog="aimi092" std_prog="aimi092" erpver="1.0" module="AIM" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.imea001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "211"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imea001  #顯示到畫面上

            NEXT FIELD imea001                     #返回原欄位

]]>
</point>
  <point name="construct.c.imeacrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeacrtdp  #顯示到畫面上

            NEXT FIELD imeacrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.imeacrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeacrtid  #顯示到畫面上

            NEXT FIELD imeacrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.imeamodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeamodid  #顯示到畫面上

            NEXT FIELD imeamodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.imeaowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeaowndp  #顯示到畫面上

            NEXT FIELD imeaowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.imeaownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeaownid  #顯示到畫面上

            NEXT FIELD imeaownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.imeb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "273"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imeb004  #顯示到畫面上

            NEXT FIELD imeb004                     #返回原欄位

]]>
</point>
  <point name="input.a.imea001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL aimi092_desc()
            IF NOT cl_null(g_imea_m.imea001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_imea_m.imea001 != g_imea001_t )) THEN 
                  IF NOT ap_chk_notDup(g_imea_m.imea001,"SELECT COUNT(*) FROM imea_t WHERE "||"imeaent = '" ||g_enterprise|| "' AND "||"imea001 = '"||g_imea_m.imea001 ||"'",'std-00004',0) THEN 
                     LET g_imea_m.imea001 = g_imea001_t
                     CALL aimi092_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL s_azzi650_chk_exist('211',g_imea_m.imea001) RETURNING l_success
               IF NOT l_success THEN
                  LET g_imea_m.imea001 = g_imea001_t
                  CALL aimi092_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF


]]>
</point>
  <point name="input.a.page1.imeb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_imea_m.imea001) AND NOT cl_null(g_imeb_d[l_ac].imeb002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imea_m.imea001 != g_imea001_t OR g_imeb_d[l_ac].imeb002 != g_imeb_d_t.imeb002)) THEN 
                  IF NOT ap_chk_notDup(g_imeb_d[l_ac].imeb002,"SELECT COUNT(*) FROM imeb_t WHERE "||"imebent = '" ||g_enterprise|| "' AND "||"imeb001 = '"||g_imea_m.imea001 ||"' AND "|| "imeb002 = '"||g_imeb_d[l_ac].imeb002 ||"'",'std-00004',0) THEN 
                     LET g_imeb_d[l_ac].imeb002 = g_imeb_d_t.imeb002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.imeb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimi092_imeb_desc()
            IF NOT cl_null(g_imeb_d[l_ac].imeb004) THEN
               CALL s_azzi650_chk_exist('273',g_imeb_d[l_ac].imeb004) RETURNING l_success
               IF NOT l_success THEN
                  LET g_imeb_d[l_ac].imeb004 = g_imeb_d_t.imeb004
                  CALL aimi092_imeb_desc()
                  NEXT FIELD imeb004
               END IF
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_imeb_d[l_ac].imeb004 <> g_imeb_d_t.imeb004) THEN
                  CALL aimi092_chk_imeb004(l_cmd)
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb004,g_errno,1)
                     LET g_imeb_d[l_ac].imeb004 = g_imeb_d_t.imeb004
                     CALL aimi092_imeb_desc()
                     NEXT FIELD imeb004
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.imeb007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_imeb_d[l_ac].imeb007) THEN 
               IF NOT cl_null(g_imeb_d[l_ac].imeb008) THEN
                  IF g_imeb_d[l_ac].imeb008 > = g_imeb_d[l_ac].imeb007 THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb007,'aim-00168',1)
                     LET g_imeb_d[l_ac].imeb007 = g_imeb_d_t.imeb007
                     NEXT FIELD imeb007
                  END IF
                  IF NOT cl_null(g_imeb_d[l_ac].imeb009) THEN
                     CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb009,'2')
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_imeb_d[l_ac].imeb009,g_errno,1)
                        LET g_imeb_d[l_ac].imeb009 = ""
                        LET g_imeb_d[l_ac].imeb010 = ""
                        LET g_imeb_d[l_ac].imeb011 = ""
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb009
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb010
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb011
                     END IF
                  END IF
                  IF NOT cl_null(g_imeb_d[l_ac].imeb010) THEN
                     CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb010,'1')
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_imeb_d[l_ac].imeb010,g_errno,1)
                        LET g_imeb_d[l_ac].imeb010 = ""
                        LET g_imeb_d[l_ac].imeb011 = ""
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb010
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb011
                     END IF
                  END IF
                  IF NOT cl_null(g_imeb_d[l_ac].imeb011) THEN
                     CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb011,'1')
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_imeb_d[l_ac].imeb011,g_errno,1)
                        LET g_imeb_d[l_ac].imeb011 = ""
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb011
                     END IF
                  END IF
               END IF
               IF l_cmd = 'u' AND g_imeb_d[l_ac].imeb007 <> g_imeb_d_t.imeb007 THEN
                  CALL aimi092_isdelete()
               END IF
            END IF 
       ]]>
</point>
  <point name="input.a.page1.imeb008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_imeb_d[l_ac].imeb008) THEN 
               IF NOT cl_null(g_imeb_d[l_ac].imeb007) THEN
                  IF g_imeb_d[l_ac].imeb008 > = g_imeb_d[l_ac].imeb007 THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb007,'aim-00168',1)
                     LET g_imeb_d[l_ac].imeb008 = g_imeb_d_t.imeb008
                     NEXT FIELD imeb008
                  END IF
                  IF NOT cl_null(g_imeb_d[l_ac].imeb009) THEN
                     CALL aimi092_digcut(g_imeb_d[l_ac].imeb009,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb009
                     CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb009,'2')
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_imeb_d[l_ac].imeb009,g_errno,1)
                        LET g_imeb_d[l_ac].imeb009 = ""
                        LET g_imeb_d[l_ac].imeb010 = ""
                        LET g_imeb_d[l_ac].imeb011 = ""
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb009
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb010
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb011
                     END IF
                  END IF
                  IF NOT cl_null(g_imeb_d[l_ac].imeb010) THEN
                     CALL aimi092_digcut(g_imeb_d[l_ac].imeb010,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb010
                     CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb010,'1')
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_imeb_d[l_ac].imeb010,g_errno,1)
                        LET g_imeb_d[l_ac].imeb010 = ""
                        LET g_imeb_d[l_ac].imeb011 = ""
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb010
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb011
                     END IF
                  END IF
                  IF NOT cl_null(g_imeb_d[l_ac].imeb011) THEN
                     CALL aimi092_digcut(g_imeb_d[l_ac].imeb011,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb011
                     CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb011,'1')
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err(g_imeb_d[l_ac].imeb011,g_errno,1)
                        LET g_imeb_d[l_ac].imeb011 = ""
                        DISPLAY BY NAME g_imeb_d[l_ac].imeb011
                     END IF
                  END IF
               END IF
               IF l_cmd = 'u' AND g_imeb_d[l_ac].imeb008 <> g_imeb_d_t.imeb008 THEN
                  CALL aimi092_isdelete()
               END IF
            END IF 
]]>
</point>
  <point name="input.a.page2.imec003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_imea_m.imea001) AND NOT cl_null(g_imeb_d[g_detail_idx].imeb002) AND NOT cl_null(g_imeb2_d[g_detail_idx2].imec003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_imea_m.imea001 != g_imea001_t OR g_imeb_d[g_detail_idx].imeb002 != g_imeb_d[g_detail_idx].imeb002 OR g_imeb2_d[g_detail_idx2].imec003 != g_imeb2_d_t.imec003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM imec_t WHERE "||"imecent = '" ||g_enterprise|| "' AND "||"imec001 = '"||g_imea_m.imea001 ||"' AND "|| "imec002 = '"||g_imeb_d[g_detail_idx].imeb002 ||"' AND "|| "imec003 = '"||g_imeb2_d[g_detail_idx2].imec003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.imea001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_imea_m.imea001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "211" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_imea_m.imea001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_imea_m.imea001 TO imea001              #顯示到畫面上
            CALL aimi092_desc()
            NEXT FIELD imea001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.imeb004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_imeb_d[l_ac].imeb004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "273" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_imeb_d[l_ac].imeb004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_imeb_d[l_ac].imeb004 TO imeb004              #顯示到畫面上
            CALL aimi092_imeb_desc()
            NEXT FIELD imeb004                          #返回原欄位

]]>
</point>
  <point name="show.body.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      #CALL aimi092_imeb_desc()
]]>
</point>
  <point name="show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_imea_m.imea001
   LET g_ref_fields[2] = g_imeb2_d[l_ac].imeb002
   LET g_ref_fields[3] = g_imeb2_d[l_ac].imec003
   CALL ap_ref_array2(g_ref_fields," SELECT imecl005 FROM imecl_t WHERE imeclent = '"||g_enterprise||"' AND imecl001 = ? AND imecl002 = ? AND imecl003 = ? AND imecl004 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_imeb2_d[l_ac].imecl005 = g_rtn_fields[1] 
   DISPLAY BY NAME g_imeb2_d[l_ac].imecl005]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL aimi092_b_fill_1()
   
            #CALL aimi092_desc()
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imea_m.imeaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_imea_m.imeaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imea_m.imeaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imea_m.imeaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imea_m.imeaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imea_m.imeaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imea_m.imeacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_imea_m.imeacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imea_m.imeacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imea_m.imeacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_imea_m.imeacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imea_m.imeacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_imea_m.imeamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_imea_m.imeamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_imea_m.imeamodid_desc
]]>
</point>
  <point name="function.aimi092_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單頭參考欄位顯示
# Memo...........:
# Usage..........: CALL aimi092_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/08 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imea_m.imea001
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '211' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imea_m.imea001_desc = g_rtn_fields[1] 
   DISPLAY BY NAME g_imea_m.imea001_desc
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_imeb004" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 同一特徵群組代碼不可有兩筆及以上相同的類型
# Memo...........:
# Usage..........: CALL aimi092_chk_imeb004(p_cmd)
# Input parameter: p_cmd 新增修改標識
# Return code....: 無
# Date & Author..: 2013/11/08 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_imeb004(p_cmd)
DEFINE l_n       LIKE type_t.num5
DEFINE p_cmd     LIKE type_t.chr1

   LET g_errno = ""
   LET l_n = 0
   IF p_cmd = 'a' THEN
      SELECT COUNT(*) INTO l_n
        FROM imeb_t
       WHERE imebent = g_enterprise
         AND imeb001 = g_imea_m.imea001
         AND imeb004 = g_imeb_d[l_ac].imeb004 
   ELSE
      SELECT COUNT(*) INTO l_n
        FROM imeb_t
       WHERE imebent = g_enterprise
         AND imeb001 = g_imea_m.imea001
         AND imeb002 <> g_imeb_d[l_ac].imeb002
         AND imeb004 = g_imeb_d[l_ac].imeb004 
   END IF
   IF l_n > 0 THEN
      LET g_errno = 'aim-00167'
   END IF
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_imeb009" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 檢查輸入的值長度是否與碼長一樣,如果是類型是數值檢查小數位是否大於設定的小數位數
# Memo...........:
# Usage..........: CALL aimi092_chk_imeb009(p_imeb009,p_is)
# Input parameter: p_imeb009     检查的值
#                : p_is          1：不需要检查与码长相同
#                :               2: 检查与码长是否相同
# Return code....: 無
# Date & Author..: 2013/11/08 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_imeb009(p_imeb009,p_is)
DEFINE p_imeb009       LIKE imeb_t.imeb009
DEFINE p_is            LIKE type_t.chr1
DEFINE l_length        LIKE type_t.num5
DEFINE l_length1       LIKE type_t.num5
DEFINE l_length2       LIKE type_t.num5
DEFINE p_type          STRING
DEFINE p_type1         STRING

   LET g_errno = ""
   IF cl_null(g_imeb_d[l_ac].imeb006) OR cl_null(g_imeb_d[l_ac].imeb007) OR cl_null(g_imeb_d[l_ac].imeb008) THEN
      RETURN
   END IF
   LET p_type = p_imeb009
   LET l_length = p_type.getLength()
   IF g_imeb_d[l_ac].imeb006 = '2' THEN
      LET l_length1 = p_type.getIndexOf('.',1)
      IF l_length1 = 0 THEN
         IF g_imeb_d[l_ac].imeb008 = 0 THEN
            LET l_length1 = l_length
         ELSE
            LET l_length1 = l_length + g_imeb_d[l_ac].imeb008 +1
         END IF
      ELSE
         LET p_type1 = p_type.subString(l_length1+1,l_length)
         LET l_length2 = p_type1.getLength()
         LET l_length1 = l_length1 + g_imeb_d[l_ac].imeb008
      END IF
      IF l_length2 > g_imeb_d[l_ac].imeb008 THEN
         LET g_errno = 'aim-00170'
         RETURN
      END IF
      IF p_is = '2' THEN
         IF l_length1 <> g_imeb_d[l_ac].imeb007 THEN
            LET g_errno = 'aim-00169'
            RETURN
         END IF
      END IF
   ELSE
      IF p_is = '2' THEN
         IF l_length <> g_imeb_d[l_ac].imeb007 THEN
            LET g_errno = 'aim-00169'
            RETURN
         END IF
      END IF
   END IF
END FUNCTION]]>
</point>
  <point name="function.aimi092_imeb_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單身參考欄位顯示
# Memo...........:
# Usage..........: CALL aimi092_imeb_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/08 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_imeb_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_imeb_d[l_ac].imeb004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '273' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imeb_d[l_ac].imeb004_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_imeb_d[l_ac].imeb004_desc
END FUNCTION]]>
</point>
  <point name="function.aimi092_set_required_b" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單身欄位必輸設定
# Memo...........:
# Usage..........: CALL aimi092_set_required_b()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/08 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_set_required_b()
   IF g_imeb_d[l_ac].imeb005 = '4' THEN
      CALL cl_set_comp_required("imeb009",TRUE)
   END IF
END FUNCTION]]>
</point>
  <point name="function.aimi092_set_no_required_b" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單身欄位必輸關閉設定
# Memo...........:
# Usage..........: CALL aimi092_set_no_required_b()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/08 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_set_no_required_b()
    
    CALL cl_set_comp_required("imeb009",FALSE)
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_imeb012" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 同一個特徵群組代碼，只能有一筆資料勾選[是否橫向展開]
# Memo...........:
# Usage..........: CALL aimi092_chk_imeb012()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/11 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_imeb012()
DEFINE l_n     LIKE type_t.num5

   LET g_errno = ""
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM imeb_t
    WHERE imebent = g_enterprise
      AND imeb001 = g_imea_m.imea001
      AND imeb012 = 'Y'
   IF l_n > 0 THEN
      LET g_errno = 'aim-00171'
   END IF
END FUNCTION]]>
</point>
  <point name="function.aimi092_rdesc" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 複製單頭參考欄位顯示
# Memo...........:
# Usage..........: CALL aimi092_rdesc(p_newno)
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/11 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_rdesc(p_newno)
DEFINE p_newno         LIKE imea_t.imea001

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_newno
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '211' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_imea_m.imea001_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_imea_m.imea001_desc
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_num" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 檢查輸入的字符是否是數值(包含小數和負數)
# Memo...........:
# Usage..........: CALL aimi092_chk_num(p_num)
#                  RETURNING r_result
# Input parameter: p_num     要檢查的值
# Return code....: r_result TRUE 是数值格式 FALSE 非数值格式
# Date & Author..: 2013/11/11 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_num(p_num)
DEFINE p_num        LIKE ecab_t.ecab007
DEFINE r_result     LIKE type_t.num5
DEFINE l_i          LIKE type_t.num5
DEFINE l_chr        LIKE type_t.chr1
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_pos        LIKE type_t.num5
DEFINE l_len        LIKE type_t.num5

   LET r_result = TRUE
   #数值开始的位置,含'.'
   LET l_pos = 0
   #小数点出现的次数
   LET l_cnt = 0
   LET l_len = LENGTH(p_num CLIPPED)
   #第一個字符可以是數字或負號
   IF p_num[1,1] NOT MATCHES '[-0123456789]' THEN
      LET r_result = FALSE
   END IF
   #第一個字符是'-'則第二個字符不可以是'.'
   IF p_num[1,1] = '-' AND p_num[2,2] = '.' THEN
      LET r_result = FALSE
   END IF
   #最後一個字符只能是數字
   IF p_num[l_len,l_len] NOT MATCHES '[0123456789]' THEN
      LET r_result = FALSE
   END IF
   FOR l_i = 3 TO l_len
       LET l_chr = p_num[l_i,l_i]
       IF l_chr MATCHES '[.0123456789]' THEN
          IF l_pos = 0 THEN
             LET l_pos = l_i
          END IF
          IF l_chr = '.' THEN
             LET l_cnt = l_cnt + 1
          END IF
       ELSE
          IF l_chr = ' ' AND l_pos = 0 THEN
          ELSE
             LET r_result = FALSE
          END IF
       END IF
   END FOR

   IF l_cnt > 1 THEN
      LET r_result = FALSE
   END IF

   RETURN r_result
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_znum" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 檢查輸入的字符是否是數值(包含小數和負數)
# Memo...........:
# Usage..........: CALL aimi092_chk_znum(p_num)
#                  RETURNING r_result
# Input parameter: p_num     要檢查的值
# Return code....: r_result TRUE 是数值格式 FALSE 非数值格式
# Date & Author..: 2013/11/11 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_znum(p_num)
DEFINE p_num        LIKE ecab_t.ecab007
DEFINE r_result     LIKE type_t.num5
DEFINE l_i          LIKE type_t.num5
DEFINE l_chr        LIKE type_t.chr1
DEFINE l_len        LIKE type_t.num5

   LET r_result = TRUE
   LET l_len = LENGTH(p_num CLIPPED)
   #第一個字符可以是數字或負號
   IF p_num[1,1] NOT MATCHES '[-0123456789]' THEN
      LET r_result = FALSE
   END IF
   FOR l_i = 2 TO l_len
       LET l_chr = p_num[l_i,l_i]
       IF l_chr NOT MATCHES '[0123456789]' THEN
          LET r_result = FALSE 
       END IF
   END FOR

   RETURN r_result
END FUNCTION]]>
</point>
  <point name="function.aimi092_b_fill_1" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 第二個單身填充顯示
# Memo...........:
# Usage..........: CALL aimi092_b_fill_1()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/11 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_b_fill_1()
   
   CALL g_imeb2_d.clear()
   IF l_ac = 0 OR cl_null(l_ac) THEN
      RETURN
   END IF
   IF cl_null(g_imeb_d[l_ac].imeb002) THEN
      CALL g_imeb_d.deleteElement(l_ac)
      RETURN
   END IF
   LET g_sql = "SELECT UNIQUE imec003,imecl005,imecl006 FROM imec_t",    
               "  LEFT JOIN imecl_t ON imecent = imeclent ",
               "   AND imec001 = imecl001 ",
               "   AND imec002 = imecl002 ",
               "   AND imec003 = imecl003 ",
               "   AND imecl004 = '",g_lang,"'",
               " WHERE imecent=? AND imec001=? AND imec002=?"
         
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
   
   LET g_sql = g_sql, " ORDER BY  imec_t.imec003" 
                               
   PREPARE aimi092_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR aimi092_pb2
   
   OPEN b_fill_curs2 USING g_enterprise,g_imea_m.imea001,g_imeb_d[l_ac].imeb002
   LET g_cnt = l_ac1
   LET l_ac1 = 1
   FOREACH b_fill_curs2 INTO g_imeb2_d[l_ac1].imec003,g_imeb2_d[l_ac1].imecl005,g_imeb2_d[l_ac1].imecl006
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
      
   END FOREACH
   CALL g_imeb2_d.deleteElement(g_imeb2_d.getLength())
   LET l_ac1 = g_cnt
   LET g_cnt = 0  

   FREE aimi092_pb2
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_define" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 最大限制>=最小限制 預設值在其範圍內
# Memo...........:
# Usage..........: CALL aimi092_chk_define()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/11/26 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_define()
DEFINE l_imeb009     LIKE type_t.num26_10
DEFINE l_imeb010     LIKE type_t.num26_10
DEFINE l_imeb011     LIKE type_t.num26_10

   LET g_errno = ""
   IF g_imeb_d[l_ac].imeb006 = '1' THEN
      RETURN
   END IF
   LET l_imeb009 = g_imeb_d[l_ac].imeb009
   LET l_imeb010 = g_imeb_d[l_ac].imeb010
   LET l_imeb011 = g_imeb_d[l_ac].imeb011
   
   IF NOT cl_null(l_imeb010) AND NOT cl_null(l_imeb011) THEN
      IF l_imeb010 > l_imeb011 THEN
         LET g_errno = 'aim-00175'
         RETURN
      END IF
      IF NOT cl_null(l_imeb009) THEN
         IF (l_imeb009 > l_imeb011) OR (l_imeb009 < l_imeb010) THEN
            LET g_errno = 'aim-00176'
            RETURN
         END IF
      END IF
   END IF
END FUNCTION]]>
</point>
  <point name="function.aimi092_digcut" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 補齊小數位數
# Memo...........:
# Usage..........: CALL aimi092_digcut(p_value,p_digit)
# Input parameter: p_value  需要設置的值
#                : p_digit  小數位數
# Return code....: r_value  補齊小數位數后的值
# Date & Author..: 2013/11/27 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_digcut(p_value,p_digit)
DEFINE p_value       LIKE type_t.chr80 
DEFINE p_digit       LIKE type_t.num5 
DEFINE r_value       LIKE type_t.chr80
DEFINE l_str         STRING
DEFINE l_num         LIKE type_t.num5 
DEFINE l_i          LIKE type_t.num5
DEFINE l_chr        LIKE type_t.chr1
DEFINE l_len        LIKE type_t.num5

#   CALL aimi092_chk_znum(p_value) RETURNING l_success
#   IF NOT l_success THEN
#      RETURN p_value
#   END IF
   LET l_len = LENGTH(p_value CLIPPED)
   #第一個字符可以是數字或負號
   IF p_value[1,1] NOT MATCHES '[-0123456789]' THEN
      RETURN p_value
   END IF
   FOR l_i = 2 TO l_len
       LET l_chr = p_value[l_i,l_i]
       IF l_chr NOT MATCHES '[0123456789.]' THEN
          RETURN p_value
       END IF
   END FOR
   IF p_digit IS NULL THEN LET p_digit=0 END IF 
   LET l_str = p_value
   LET l_num = l_str.getIndexOf('.',1)
   IF l_num > 0 THEN
      LET l_str = l_str.subString(l_num+1,l_str.getLength())
      IF l_str.getLength() > p_digit THEN
         LET r_value = p_value
         RETURN r_value
      END IF
   END IF
   CASE
        WHEN p_digit = 10 LET p_value = p_value USING '----------------&.----------'
        WHEN p_digit = 9 LET p_value = p_value USING '----------------&.---------'
        WHEN p_digit = 8 LET p_value = p_value USING '----------------&.--------'
        WHEN p_digit = 7 LET p_value = p_value USING '----------------&.-------'
        WHEN p_digit = 6 LET p_value = p_value USING '----------------&.------'
        WHEN p_digit = 5 LET p_value = p_value USING '----------------&.-----'
        WHEN p_digit = 4 LET p_value = p_value USING '----------------&.----'
        WHEN p_digit = 3 LET p_value = p_value USING '----------------&.---'
        WHEN p_digit = 2 LET p_value = p_value USING '----------------&.--'
        WHEN p_digit = 1 LET p_value = p_value USING '----------------&.-'
        WHEN p_digit = 0 LET p_value = p_value USING '----------------&'
   END CASE
   CALL s_chr_trim(p_value) RETURNING p_value
   LET r_value = p_value
   RETURN r_value
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_imea002" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單身的歸屬層級是否有'2.庫存'
# Memo...........:
# Usage..........: CALL aimi092_chk_imea002()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/12/02 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_imea002()
DEFINE l_n       LIKE type_t. num5

   LET g_errno = ""
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM imeb_t
    WHERE imebent = g_enterprise
      AND imeb001 = g_imea_m.imea001
      AND imeb003 = '2'
   IF l_n > 0 THEN
      LET g_errno = 'aim-00180'
   END IF
END FUNCTION]]>
</point>
  <point name="function.aimi092_imeb006_change" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 屬性類型修改后資料資料處理邏輯
# Memo...........:
# Usage..........: CALL aimi092_imeb006_change()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/12/02 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_imeb006_change()
   LET g_imeb_d[l_ac].imeb007 = ""
   LET g_imeb_d[l_ac].imeb008 = ""
   LET g_imeb_d[l_ac].imeb009 = ""
   LET g_imeb_d[l_ac].imeb010 = ""
   LET g_imeb_d[l_ac].imeb011 = ""
   DISPLAY BY NAME g_imeb_d[l_ac].imeb007
   DISPLAY BY NAME g_imeb_d[l_ac].imeb008
   DISPLAY BY NAME g_imeb_d[l_ac].imeb009
   DISPLAY BY NAME g_imeb_d[l_ac].imeb010
   DISPLAY BY NAME g_imeb_d[l_ac].imeb011
END FUNCTION]]>
</point>
  <point name="function.aimi092_isdelete" cite_std="N" status="" ver="1" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 是否删除特征值单身
# Memo...........:
# Usage..........: CALL aimi092_isdelete()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2013/12/02 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_isdelete()
DEFINE l_n       LIKE type_t.num5

   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM imec_t
    WHERE imecent = g_enterprise
      AND imec001 = g_imea_m.imea001 
      AND imec002 = g_imeb_d[l_ac].imeb002 
   IF l_n > 0 THEN
      IF g_imeb_d[l_ac].imeb005 = '2' THEN
         IF cl_ask_confirm('aim-00182') THEN
            DELETE FROM imec_t
             WHERE imecent = g_enterprise
               AND imec001 = g_imea_m.imea001 
               AND imec002 = g_imeb_d[l_ac].imeb002 
            DELETE FROM imecl_t
             WHERE imeclent = g_enterprise
               AND imecl001 = g_imea_m.imea001 
               AND imecl002 = g_imeb_d[l_ac].imeb002
         END IF
      END IF
   END IF
   CALL aimi092_b_fill_1()
END FUNCTION]]>
</point>
  <point name="function.aimi092_showerrmsg" cite_std="N" status="" ver="1" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 用cl_showmsg的方式收集使用到這個特徵群組代號的資料
# Memo...........:
# Usage..........: CALL aimi092_showerrmsg()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/01/27 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_showerrmsg()
DEFINE l_imaa001       LIKE imaa_t.imaa001
DEFINE l_imca001       LIKE imca_t.imca001
DEFINE l_imba001       LIKE imba_t.imba001
DEFINE l_n             LIKE type_t.num5
DEFINE l_n1            LIKE type_t.num5
DEFINE l_n2            LIKE type_t.num5

   CALL cl_showmsg_init()
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM imaa_t
    WHERE imaa005 = g_imea_m.imea001
      AND imaaent = g_enterprise
      AND imaastus = 'Y'
   DECLARE aimi092_sel_imaa_cur CURSOR FOR
    SELECT imaa001 FROM imaa_t
     WHERE imaa005 = g_imea_m.imea001
       AND imaaent = g_enterprise
       AND imaastus = 'Y'
   FOREACH aimi092_sel_imaa_cur INTO l_imaa001
      CALL cl_errmsg("imaa001",l_imaa001,'','aim-00206',1)
   END FOREACH
   
   LET l_n1 = 0
   SELECT COUNT(*) INTO l_n1
     FROM imca_t
    WHERE imca005 = g_imea_m.imea001
      AND imcaent = g_enterprise
      AND imcastus = 'Y'
   DECLARE aimi092_sel_imca_cur CURSOR FOR
    SELECT imca001 FROM imca_t
     WHERE imca005 = g_imea_m.imea001
       AND imcaent = g_enterprise
       AND imcastus = 'Y'
   FOREACH aimi092_sel_imca_cur INTO l_imca001
      CALL cl_errmsg("imca001",l_imca001,'','aim-00207',1)
   END FOREACH
   
   LET l_n2 = 0
   SELECT COUNT(*) INTO l_n2
     FROM imba_t
    WHERE imba005 = g_imea_m.imea001
      AND imbaent = g_enterprise
      AND imbastus = 'Y'
   DECLARE aimi092_sel_imba_cur CURSOR FOR
    SELECT imba001 FROM imba_t
     WHERE imba005 = g_imea_m.imea001
       AND imbaent = g_enterprise
       AND imbastus = 'Y'
   FOREACH aimi092_sel_imba_cur INTO l_imba001
      CALL cl_errmsg("imba001",l_imba001,'','aim-00208',1)
   END FOREACH
   IF l_n > 0 OR l_n1 > 0 OR l_n2 > 0 THEN
      CALL cl_showmsg()
   END IF
END FUNCTION]]>
</point>
  <point name="function.aimi092_chk_chr" cite_std="N" status="" ver="1" src="s" new="Y" order="18" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 檢查輸入的字符是否包含'_'
# Memo...........:
# Usage..........: CALL aimi092_chk_chr(p_chr)
#                  RETURNING r_result
# Input parameter: p_chr     要檢查的值
# Return code....: r_result TRUE 是数值格式 FALSE 非数值格式
# Date & Author..: 2014/02/14 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION aimi092_chk_chr(p_chr)
DEFINE p_chr        LIKE ecab_t.ecab007
DEFINE r_result     LIKE type_t.num5
DEFINE l_i          LIKE type_t.num5
DEFINE l_chr        LIKE type_t.chr1
DEFINE l_len        LIKE type_t.num5

    LET r_result = TRUE
    LET l_len = LENGTH(p_chr CLIPPED)
    FOR l_i = 1 TO l_len
       LET l_chr = p_chr[l_i,l_i]
       IF l_chr = '_' THEN
          LET r_result = FALSE
       END IF
   END FOR
   RETURN r_result
END FUNCTION]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_wc3 <> " 1=1" THEN
      #單身2有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE imea001 ",
                      "   FROM imea_t ",
                      "   LEFT JOIN imeb_t ON imebent = imeaent AND imea001 = imeb001 ",
                      "   LEFT JOIN imec_t ON imecent = imeaent AND imeb001 = imec001 AND imeb002 = imec002",
                      "   LEFT JOIN imecl_t ON imec001 = imecl001 AND imec002 = imecl002 AND imec003 = imecl003 AND imecl004 = '",g_lang,"' ",
                      "  WHERE imeaent = '" ||g_enterprise|| "' AND imebent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, " AND ", l_wc3
 
   ELSE
      IF g_wc2 <> " 1=1" THEN
         #單身1有輸入搜尋條件                      
         LET l_sub_sql = " SELECT UNIQUE imea001 ",
                         "   FROM imea_t ",
                         "   LEFT JOIN imeb_t ON imebent = imeaent AND imea001 = imeb001 ",
                         "  WHERE imeaent = '" ||g_enterprise|| "' AND imebent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2
 
      ELSE
         #單身未輸入搜尋條件
         LET l_sub_sql = " SELECT UNIQUE imea001 ",
                         "   FROM imea_t ",
                         "  WHERE imeaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
      END IF
   END IF]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL g_imeb2_d.clear() 
   LET l_wc3 = g_wc3.trim()]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #單身2有輸入查詢條件且非null
   IF g_wc3 <> " 1=1" AND NOT cl_null(g_wc3) THEN
      #依照imea001,'',imea002 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT imeastus,imea001,imea002,DENSE_RANK() OVER(ORDER BY imea001 ",g_order,") AS RANK ",
                       "  FROM imea_t ",
                       "   LEFT JOIN imeb_t ON imebent = imeaent AND imea001 = imeb001 ",
                       "   LEFT JOIN imec_t ON imecent = imeaent AND imeb001 = imec001 AND imeb002 = imec002",
                       "   LEFT JOIN imecl_t ON imec001 = imecl001 AND imec002 = imecl002 AND imec003 = imecl003 AND imecl004 = '",g_lang,"' ",
                       " WHERE imeaent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2," AND ",g_wc3
   ELSE
      IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
         #單身1有輸入查詢條件且非null
         LET l_sql_rank = "SELECT DISTINCT imeastus,imea001,'',imea002,DENSE_RANK() OVER(ORDER BY imea001 ",g_order,") AS RANK ",
                          "  FROM imea_t ",
                          " LEFT JOIN imeb_t ON imebent = imeaent AND imea001 = imeb001 ",
                          " WHERE imeaent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2
      ELSE
         #單身無輸入資料
         LET l_sql_rank = "SELECT DISTINCT imeastus,imea001,'',imea002,DENSE_RANK() OVER(ORDER BY imea001 ",g_order,") AS RANK ",
                          "  FROM imea_t ",
                          " WHERE imeaent = '" ||g_enterprise|| "' AND ", g_wc
      END IF
   END IF
   #定義翻頁CURSOR
   LET g_sql= "SELECT imeastus,imea001,'',imea002 FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_wc3             STRING]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_imea001
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '211' AND oocql002=? AND oocql003='"||g_lang||"'","") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_imea001_desc = g_rtn_fields[1] 
      DISPLAY BY NAME g_browser[g_cnt].b_imea001_desc]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CONSTRUCT g_wc2_table2 ON imec003 FROM s_detail2[1].imec003
                      
         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn)
           
         BEFORE FIELD imec003
         
         AFTER FIELD imec003  
       
      END CONSTRUCT]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_wc3 = g_wc2_table2]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DELETE FROM imec_t
       WHERE imecent = g_enterprise
         AND imec001 = g_imea_m.imea001 
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("imec_t",SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN 
      END IF
      
      DELETE FROM imecl_t
       WHERE imeclent = g_enterprise
         AND imecl001 = g_imea_m.imea001 
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("imecl_t",SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN 
      END IF]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_n              LIKE type_t.num5]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM imaa_t
       WHERE imaa005 = g_imea_m.imea001
         AND imaaent  = g_enterprise
      IF l_n > 0 THEN
         CALL cl_err(g_imea_m.imea001,'aim-00181',1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aimi092_detail1 AS ",
                "SELECT * FROM imec_t "
   PREPARE repro_tbl1 FROM ls_sql
   EXECUTE repro_tbl1
   FREE repro_tbl1
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aimi092_detail1 SELECT * FROM imec_t 
                                         WHERE imecent = g_enterprise AND imec001 = g_imea001_t

   
   #將key修正為調整後   
   UPDATE aimi092_detail1 
      #更新key欄位
      SET imec001 = g_imea_m.imea001

      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO imec_t SELECT * FROM aimi092_detail1
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   DROP TABLE aimi092_detail1
   
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aimi092_detail2 AS ",
                "SELECT * FROM imecl_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aimi092_detail2 SELECT * FROM imecl_t 
                                         WHERE imeclent = g_enterprise AND imecl001 = g_imea001_t

   
   #將key修正為調整後   
   UPDATE aimi092_detail2 
      #更新key欄位
      SET imecl001 = g_imea_m.imea001

      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO imecl_t SELECT * FROM aimi092_detail2
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   DROP TABLE aimi092_detail2]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DROP TABLE aimi092_detail1
   DROP TABLE aimi092_detail2]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE l_success                   LIKE type_t.num5
#單身2
 TYPE type_g_imeb2_d        RECORD
             imec003               LIKE imec_t.imec003, 
             imecl005              LIKE imecl_t.imecl005,
             imecl006              LIKE imecl_t.imecl006
             END RECORD
DEFINE g_detail_multi_table_t    RECORD
             imecl001            LIKE imecl_t.imecl001,
             imecl002            LIKE imecl_t.imecl002,
             imecl003            LIKE imecl_t.imecl003,
             imecl004            LIKE imecl_t.imecl004,
             imecl005            LIKE imecl_t.imecl005,
             imecl006            LIKE imecl_t.imecl006
             END RECORD       
DEFINE g_imeb2_d                 DYNAMIC ARRAY OF type_g_imeb2_d
DEFINE g_imeb2_d_t               type_g_imeb2_d
DEFINE g_wc2_table2              STRING      
DEFINE g_wc3                     STRING   
DEFINE g_rec_b1                  LIKE type_t.num5
DEFINE l_ac1                     LIKE type_t.num5]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_imeb2_d.getLength() THEN
         LET g_detail_idx2 = g_imeb2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_imeb2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_imeb2_d.getLength() TO FORMONLY.cnt
   END IF]]>
</point>
  <point name="input.a.imea002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_imea_m.imea002 = 'N' THEN
               CALL aimi092_chk_imea002()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imea_m.imea002,g_errno,1)
                  LET g_imea_m.imea002 = g_imea_m_t.imea002
                  NEXT FIELD imea002
               END IF 
            END IF
            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.a.page1.imeb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.a.page1.imeb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_imeb_d[l_ac].imeb005 <> '2' AND g_imeb_d_t.imeb005 = '2' THEN
               LET l_n1 = 0
               SELECT COUNT(*) INTO l_n1
                 FROM imec_t
                WHERE imecent = g_enterprise
                  AND imec001 = g_imea_m.imea001 
                  AND imec002 = g_imeb_d[l_ac].imeb002 
               IF l_n1 > 0 THEN
                  IF cl_ask_confirm('aim-00182') THEN
                     DELETE FROM imec_t
                      WHERE imecent = g_enterprise
                        AND imec001 = g_imea_m.imea001 
                        AND imec002 = g_imeb_d[l_ac].imeb002 
                     DELETE FROM imecl_t
                      WHERE imeclent = g_enterprise
                        AND imecl001 = g_imea_m.imea001 
                        AND imecl002 = g_imeb_d[l_ac].imeb002
                  END IF
               END IF
               CALL aimi092_b_fill_1()
            END IF
            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_required_b()
            CALL aimi092_set_required_b()
            CALL aimi092_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.a.page1.imeb006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_entry_b(l_cmd)
            IF NOT cl_null(g_imeb_d[l_ac].imeb009) THEN
               IF g_imeb_d[l_ac].imeb006 = '1' THEN
                  CALL aimi092_chk_chr(g_imeb_d[l_ac].imeb009) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb009,'aim-00209',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '2' THEN
                  CALL aimi092_digcut(g_imeb_d[l_ac].imeb009,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb009
                  CALL aimi092_chk_num(g_imeb_d[l_ac].imeb009) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb009,'aim-00172',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '3' THEN
                  CALL aimi092_chk_znum(g_imeb_d[l_ac].imeb009) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb009,'aim-00173',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb009,'2')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb009,g_errno,1)
                  CALL aimi092_imeb006_change()
               END IF
            END IF
            IF NOT cl_null(g_imeb_d[l_ac].imeb010) THEN
               IF g_imeb_d[l_ac].imeb006 = '1' THEN
                  CALL aimi092_chk_chr(g_imeb_d[l_ac].imeb010) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb010,'aim-00209',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '2' THEN
                  CALL aimi092_digcut(g_imeb_d[l_ac].imeb010,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb010
                  CALL aimi092_chk_num(g_imeb_d[l_ac].imeb010) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb010,'aim-00172',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '3' THEN
                  CALL aimi092_chk_znum(g_imeb_d[l_ac].imeb010) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb010,'aim-00173',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb010,'1')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb010,g_errno,1)
                  CALL aimi092_imeb006_change()
               END IF
            END IF
            IF NOT cl_null(g_imeb_d[l_ac].imeb011) THEN
               IF g_imeb_d[l_ac].imeb006 = '1' THEN
                  CALL aimi092_chk_chr(g_imeb_d[l_ac].imeb011) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb011,'aim-00209',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '2' THEN
                  CALL aimi092_digcut(g_imeb_d[l_ac].imeb011,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb011
                  CALL aimi092_chk_num(g_imeb_d[l_ac].imeb011) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb011,'aim-00172',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '3' THEN
                  CALL aimi092_chk_znum(g_imeb_d[l_ac].imeb011) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb011,'aim-00173',1)
                     CALL aimi092_imeb006_change()
                  END IF
               END IF
               CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb011,'1')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb011,g_errno,1)
                  CALL aimi092_imeb006_change()
               END IF
            END IF
            IF NOT cl_null(g_imeb_d[l_ac].imeb006) THEN
               IF l_cmd = 'u' AND g_imeb_d[l_ac].imeb006 <> g_imeb_d_t.imeb006 THEN
                  CALL aimi092_isdelete()
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.imeb009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_imeb_d[l_ac].imeb009) THEN
               IF g_imeb_d[l_ac].imeb006 = '1' THEN
                  CALL aimi092_chk_chr(g_imeb_d[l_ac].imeb009) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb009,'aim-00209',1)
                     LET g_imeb_d[l_ac].imeb009 = g_imeb_d_t.imeb009
                     NEXT FIELD imeb009
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '2' THEN
                  CALL aimi092_digcut(g_imeb_d[l_ac].imeb009,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb009
                  CALL aimi092_chk_num(g_imeb_d[l_ac].imeb009) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb009,'aim-00172',1)
                     LET g_imeb_d[l_ac].imeb009 = g_imeb_d_t.imeb009
                     NEXT FIELD imeb009
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '3' THEN
                  CALL aimi092_chk_znum(g_imeb_d[l_ac].imeb009) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb009,'aim-00173',1)
                     LET g_imeb_d[l_ac].imeb009 = g_imeb_d_t.imeb009
                     NEXT FIELD imeb009
                  END IF
               END IF
               CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb009,'2')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb009,g_errno,1)
                  LET g_imeb_d[l_ac].imeb009 = g_imeb_d_t.imeb009
                  NEXT FIELD imeb009
               END IF
               CALL aimi092_chk_define()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb009,g_errno,1)
                  LET g_imeb_d[l_ac].imeb009 = g_imeb_d_t.imeb009
                  NEXT FIELD imeb009
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.imeb010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_imeb_d[l_ac].imeb010) THEN
               IF g_imeb_d[l_ac].imeb006 = '1' THEN
                  CALL aimi092_chk_chr(g_imeb_d[l_ac].imeb010) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb010,'aim-00209',1)
                     LET g_imeb_d[l_ac].imeb010 = g_imeb_d_t.imeb010
                     NEXT FIELD imeb010
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '2' THEN
                  CALL aimi092_digcut(g_imeb_d[l_ac].imeb010,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb010
                  CALL aimi092_chk_num(g_imeb_d[l_ac].imeb010) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb010,'aim-00172',1)
                     LET g_imeb_d[l_ac].imeb010 = g_imeb_d_t.imeb010
                     NEXT FIELD imeb010
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '3' THEN
                  CALL aimi092_chk_znum(g_imeb_d[l_ac].imeb010) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb010,'aim-00173',1)
                     LET g_imeb_d[l_ac].imeb010 = g_imeb_d_t.imeb010
                     NEXT FIELD imeb010
                  END IF
               END IF
               CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb010,'1')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb010,g_errno,1)
                  LET g_imeb_d[l_ac].imeb010 = g_imeb_d_t.imeb010
                  NEXT FIELD imeb010
               END IF
               CALL aimi092_chk_define()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb010,g_errno,1)
                  LET g_imeb_d[l_ac].imeb010 = g_imeb_d_t.imeb010
                  NEXT FIELD imeb010
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.imeb011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_imeb_d[l_ac].imeb011) THEN
               IF g_imeb_d[l_ac].imeb006 = '1' THEN
                  CALL aimi092_chk_chr(g_imeb_d[l_ac].imeb011) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb011,'aim-00209',1)
                     LET g_imeb_d[l_ac].imeb011 = g_imeb_d_t.imeb011
                     NEXT FIELD imeb011
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '2' THEN
                  CALL aimi092_digcut(g_imeb_d[l_ac].imeb011,g_imeb_d[l_ac].imeb008) RETURNING g_imeb_d[l_ac].imeb011
                  CALL aimi092_chk_num(g_imeb_d[l_ac].imeb011) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb011,'aim-00172',1)
                     LET g_imeb_d[l_ac].imeb011 = g_imeb_d_t.imeb011
                     NEXT FIELD imeb011
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '3' THEN
                  CALL aimi092_chk_znum(g_imeb_d[l_ac].imeb011) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb011,'aim-00173',1)
                     LET g_imeb_d[l_ac].imeb011 = g_imeb_d_t.imeb011
                     NEXT FIELD imeb011
                  END IF
               END IF
               CALL aimi092_chk_imeb009(g_imeb_d[l_ac].imeb011,'1')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb011,g_errno,1)
                  LET g_imeb_d[l_ac].imeb011 = g_imeb_d_t.imeb011
                  NEXT FIELD imeb011
               END IF
               CALL aimi092_chk_define()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb_d[l_ac].imeb011,g_errno,1)
                  LET g_imeb_d[l_ac].imeb011 = g_imeb_d_t.imeb011
                  NEXT FIELD imeb011
               END IF
            END IF
            ]]>
</point>
  <point name="input.a.page1.imeb012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_imeb_d[l_ac].imeb012 = 'Y' THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_imeb_d[l_ac].imeb012 <> g_imeb_d_t.imeb012) THEN
                  CALL aimi092_chk_imeb012()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_imeb_d[l_ac].imeb012,g_errno,1)
                     LET g_imeb_d[l_ac].imeb012 = g_imeb_d_t.imeb012
                     NEXT FIELD imeb012
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_forupd_sql = "SELECT imec003,'','' FROM imec_t WHERE imecent=? AND imec001=? AND imec002=? AND imec003=? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aimi092_bcl2 CURSOR FROM g_forupd_sql]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  DELETE FROM imec_t
                   WHERE imecent = g_enterprise
                     AND imec001 = g_imea_m.imea001 
                     AND imec002 = g_imeb_d_t.imeb002
                     
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("imec_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE 
                  END IF
                  DELETE FROM imecl_t
                   WHERE imeclent = g_enterprise
                     AND imecl001 = g_imea_m.imea001 
                     AND imecl002 = g_imeb_d_t.imeb002
                     
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("imecl_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE 
                  END IF]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF g_imeb_d[l_ac].imeb005 = '3' THEN
                  IF cl_null(g_imeb_d[l_ac].imeb010) AND cl_null(g_imeb_d[l_ac].imeb011) THEN
                     CALL cl_err('','aim-00210',1)
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  END IF
               END IF]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF g_imeb_d[l_ac].imeb005 = '3' THEN
                  IF cl_null(g_imeb_d[l_ac].imeb010) AND cl_null(g_imeb_d[l_ac].imeb011) THEN
                     CALL cl_err('','aim-00210',1)
                     CALL s_transaction_end('N','0')
                     NEXT FIELD imeb010
                  END IF
               END IF]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            SELECT MAX(imeb002)+1 INTO g_imeb_d[l_ac].imeb002
              FROM imeb_t
             WHERE imebent = g_enterprise
               AND imeb001 = g_imea_m.imea001
            IF cl_null(g_imeb_d[l_ac].imeb002) THEN
               LET g_imeb_d[l_ac].imeb002 = 1
            END IF
            CALL aimi092_set_no_required_b()
            CALL aimi092_set_required_b()
            CALL g_imeb2_d.clear()]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimi092_set_no_required_b()
            CALL aimi092_set_required_b()]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_ac1_t               LIKE type_t.num5
   DEFINE  l_n1                  LIKE type_t.num5      ]]>
</point>
  <point name="input.g.imea002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.g.page1.imeb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.g.page1.imeb005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_required_b()
            CALL aimi092_set_required_b()
            CALL aimi092_set_no_entry_b(l_cmd)]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      INPUT ARRAY g_imeb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b1,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
 
 
         ON ACTION update_item
 
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN 
               IF NOT cl_null(g_imeb_d[l_ac].imeb002) AND NOT cl_null(g_imeb2_d[l_ac1].imec003)  THEN
                  CALL n_imecl(g_imea_m.imea001,g_imeb_d[l_ac].imeb002,g_imeb2_d[l_ac1].imec003)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_imea_m.imea001
                  LET g_ref_fields[2] = g_imeb_d[l_ac].imeb002
                  LET g_ref_fields[3] = g_imeb2_d[l_ac1].imec003
                  CALL ap_ref_array2(g_ref_fields," SELECT imecl005,imecl006 FROM imecl_t WHERE imeclent = '"
                      ||g_enterprise||"' AND imecl001 = ? AND imecl002 = ? AND imecl003 = ? AND imecl004 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_imeb2_d[l_ac1].imecl005 = g_rtn_fields[1]
                  LET g_imeb2_d[l_ac1].imecl006 = g_rtn_fields[2]
                  DISPLAY BY NAME g_imeb2_d[l_ac1].imecl005
                  DISPLAY BY NAME g_imeb2_d[l_ac1].imecl006
               END IF
            END IF
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_imeb2_d.getLength()+1) 
              LET g_insert = 'N' 
            END IF 
 
            LET g_rec_b1 = g_imeb2_d.getLength()
            IF cl_null(g_imeb_d[l_ac].imeb002) THEN
               NEXT FIELD imeb002
            END IF
            IF g_imeb_d[l_ac].imeb005 <> '2' THEN
               CALL cl_err(g_imeb_d[l_ac].imeb005,'aim-00177',0)
               NEXT FIELD imeb005
            END IF
                      
         BEFORE INSERT
                        LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_imeb2_d[l_ac1].* TO NULL 
            LET g_imeb2_d_t.* = g_imeb2_d[l_ac1].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aimi092_set_entry_b(l_cmd)
            CALL aimi092_set_no_entry_b(l_cmd)
            LET g_detail_multi_table_t.imecl001 = g_imea_m.imea001
            LET g_detail_multi_table_t.imecl002 = g_imeb_d[l_ac].imeb002
            LET g_detail_multi_table_t.imecl003 = g_imeb2_d[l_ac1].imec003
            LET g_detail_multi_table_t.imecl004 = g_dlang
            LET g_detail_multi_table_t.imecl005 = g_imeb2_d[l_ac1].imecl005
            LET g_detail_multi_table_t.imecl006 = g_imeb2_d[l_ac1].imecl006
            IF g_imeb_d[l_ac].imeb005 <> '2' THEN 
               CALL cl_err(g_imeb_d[l_ac].imeb005,'aim-00177',0)
               NEXT FIELD imeb005
            END IF

         BEFORE ROW
            LET l_insert = FALSE
            LET p_cmd = ''
            LET l_ac1 = ARR_CURR()
            LET g_detail_idx2 = l_ac1
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac1 TO FORMONLY.idx
            CALL s_transaction_begin()
            OPEN aimi092_cl USING g_enterprise,g_imea_m.imea001
            OPEN aimi092_bcl USING g_enterprise,g_imea_m.imea001,g_imeb_d[l_ac].imeb002
            IF STATUS THEN
               CALL cl_err("OPEN aimi092_cl:", STATUS, 1)
               CLOSE aimi092_cl
               CLOSE aimi092_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b1 = g_imeb2_d.getLength()
            
            IF g_rec_b1 >= l_ac1 
               AND NOT cl_null(g_imeb2_d[l_ac1].imec003) 
            THEN 
               LET l_cmd='u'
               LET g_imeb2_d_t.* = g_imeb2_d[l_ac1].*  #BACKUP
               CALL aimi092_set_entry_b(l_cmd)
               CALL aimi092_set_no_entry_b(l_cmd)
               OPEN aimi092_bcl2 USING g_enterprise,g_imea_m.imea001,g_imeb_d[l_ac].imeb002,g_imeb2_d[l_ac1].imec003
               IF SQLCA.sqlcode THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aimi092_bcl2 INTO g_imeb2_d[l_ac1].imec003,g_imeb2_d[l_ac1].imecl005,g_imeb2_d[l_ac1].imecl006
                   IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aimi092_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
           
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.imecl001 = g_imea_m.imea001
            LET g_detail_multi_table_t.imecl002 = g_imeb_d[l_ac].imeb002
            LET g_detail_multi_table_t.imecl003 = g_imeb2_d[l_ac1].imec003
            LET g_detail_multi_table_t.imecl004 = g_dlang
            LET g_detail_multi_table_t.imecl005 = g_imeb2_d[l_ac1].imecl005
            LET g_detail_multi_table_t.imecl006 = g_imeb2_d[l_ac1].imecl006
 
            #其他table進行lock
            INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'imecl001'
            LET l_var_keys[01] = g_imea_m.imea001
            LET l_field_keys[02] = 'imecl002'
            LET l_var_keys[02] = g_imeb_d[l_ac].imeb002
            LET l_field_keys[03] = 'imecl003'
            LET l_var_keys[03] = g_imeb2_d[l_ac1].imec003
            LET l_field_keys[04] = 'imecl004'
            LET l_var_keys[04] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'imecl_t') THEN
               RETURN 
            END IF 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac1-1)
               CALL g_imeb2_d.deleteElement(l_ac1)
               NEXT FIELD imec003
            END IF
            IF NOT cl_null(g_imeb2_d[l_ac1].imec003) THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               DELETE FROM imec_t
                WHERE imecent = g_enterprise
                  AND imec001 = g_imea_m.imea001 
                  AND imec002 = g_imeb_d[l_ac].imeb002 
                  AND imec003 = g_imeb2_d[l_ac1].imec003
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("imec_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b1 = g_rec_b1-1
                  INITIALIZE l_var_keys_bak TO NULL
                  INITIALIZE l_field_keys TO NULL
                  LET l_field_keys[01] = 'imecl001'
                  LET l_field_keys[02] = 'imecl002'
                  LET l_field_keys[03] = 'imecl003'
                  LET l_field_keys[03] = 'imecl004'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.imecl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.imecl002
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.imecl003
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.imecl004
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'imecl_t')

                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aimi092_bcl
               LET l_count = g_imeb_d.getLength()
            END IF 
            
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imea_m.imea001
               LET gs_keys[2] = g_imeb_d[l_ac].imeb002
               LET gs_keys[3] = g_imeb2_d[l_ac1].imec003
 
            
         AFTER DELETE 
            DELETE FROM imec_t
             WHERE imecent = g_enterprise
               AND imec001 = g_imea_m.imea001 
               AND imec002 = g_imeb_d[l_ac].imeb002 
               AND imec003 = g_imeb2_d[l_ac1].imec003
            DELETE FROM imecl_t
             WHERE imeclent = g_enterprise
               AND imecl001 = g_imea_m.imea001 
               AND imecl002 = g_imeb_d[l_ac].imeb002
               AND imecl003 = g_imeb2_d[l_ac1].imec003               
          
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
          
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM imec_t 
             WHERE imecent = g_enterprise
               AND imec001 = g_imea_m.imea001 
               AND imec002 = g_imeb_d[l_ac].imeb002 
               AND imec003 = g_imeb2_d[l_ac1].imec003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INSERT INTO imec_t(imecent,imec001,imec002,imec003) 
                           VALUES(g_enterprise,g_imea_m.imea001,g_imeb_d[l_ac].imeb002,g_imeb2_d[l_ac1].imec003)           
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_imeb_d[l_ac1].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               CALL cl_err("imec_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               INITIALIZE l_var_keys TO NULL 
               INITIALIZE l_field_keys TO NULL 
               INITIALIZE l_vars TO NULL 
               INITIALIZE l_fields TO NULL 
               INITIALIZE l_var_keys_bak TO NULL 
               IF g_imea_m.imea001 = g_detail_multi_table_t.imecl001 AND
                  g_imeb_d[l_ac].imeb002 = g_detail_multi_table_t.imecl002 AND
                  g_imeb2_d[l_ac1].imec003 = g_detail_multi_table_t.imecl003 AND
                  g_imeb2_d[l_ac1].imecl005 = g_detail_multi_table_t.imecl005 AND 
                  g_imeb2_d[l_ac1].imecl006 = g_detail_multi_table_t.imecl006 THEN
               ELSE 
                  LET l_var_keys[01] = g_imea_m.imea001
                  LET l_field_keys[01] = 'imecl001'
                  LET l_var_keys[02] = g_imeb_d[l_ac].imeb002
                  LET l_field_keys[02] = 'imecl002'
                  LET l_var_keys[03] = g_imeb2_d[l_ac1].imec003
                  LET l_field_keys[03] = 'imecl003'
                  LET l_var_keys[04] = g_dlang
                  LET l_field_keys[04] = 'imecl004'
                  LET l_vars[01] = g_imeb2_d[l_ac1].imecl005
                  LET l_fields[01] = 'imecl005'
                  LET l_vars[02] = g_imeb2_d[l_ac1].imecl006 
                  LET l_fields[02] = 'imecl006'
                  LET l_vars[03] = g_enterprise 
                  LET l_fields[03] = 'imeclent'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.imecl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.imecl002
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.imecl003
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.imecl004
                  CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imecl_t')
               END IF 
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b1 = g_rec_b1 + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_imeb2_d[l_ac1].* = g_imeb2_d_t.*
               CLOSE aimi092_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_imeb2_d[l_ac1].* = g_imeb2_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身2)
               UPDATE imec_t SET (imec001,imec002,imec003) = (g_imea_m.imea001,g_imeb_d[l_ac].imeb002,g_imeb2_d[l_ac1].imec003) #自訂欄位頁簽
                WHERE imecent = g_enterprise 
                  AND imec001 = g_imea001_t
                  AND imec002 = g_imeb_d[l_ac].imeb002
                  AND imec003 = g_imeb2_d_t.imec003
               IF SQLCA.sqlcode THEN
                  CALL cl_err("",SQLCA.sqlcode,1)   
                  LET g_imeb2_d[l_ac1].* = g_imeb2_d_t.*
               ELSE
                  INITIALIZE gs_keys TO NULL 
                  LET gs_keys[1] = g_imea_m.imea001
                  LET gs_keys_bak[1] = g_imea001_t
                  LET gs_keys[2] = g_imeb_d[g_detail_idx].imeb002
                  LET gs_keys_bak[2] = g_imeb_d[g_detail_idx].imeb002
                  LET gs_keys[3] = g_imeb2_d[g_detail_idx2].imec003
                  LET gs_keys_bak[3] = g_imeb2_d_t.imec003
                  CALL aimi092_update_b('imec_t',gs_keys,gs_keys_bak,"'2'")
                  #資料多語言用-增/改
                  INITIALIZE l_var_keys TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  INITIALIZE l_vars TO NULL 
                  INITIALIZE l_fields TO NULL 
                  INITIALIZE l_var_keys_bak TO NULL 
                  IF g_imea_m.imea001 = g_detail_multi_table_t.imecl001 AND
                     g_imeb_d[l_ac].imeb002 = g_detail_multi_table_t.imecl002 AND
                     g_imeb2_d[l_ac1].imec003 = g_detail_multi_table_t.imecl003 AND
                     g_imeb2_d[l_ac1].imecl005 = g_detail_multi_table_t.imecl005 AND
                     g_imeb2_d[l_ac1].imecl006 = g_detail_multi_table_t.imecl006 THEN
                  ELSE 
                     LET l_var_keys[01] = g_imea_m.imea001
                     LET l_field_keys[01] = 'imecl001'
                     LET l_var_keys[02] = g_imeb_d[l_ac].imeb002
                     LET l_field_keys[02] = 'imecl002'
                     LET l_var_keys[03] = g_imeb2_d[l_ac1].imec003
                     LET l_field_keys[03] = 'imecl003'
                     LET l_var_keys[04] = g_dlang
                     LET l_field_keys[04] = 'imecl004'
                     LET l_vars[01] = g_imeb2_d[l_ac1].imecl005
                     LET l_fields[01] = 'imecl005'
                     LET l_vars[02] = g_imeb2_d[l_ac1].imecl006
                     LET l_fields[02] = 'imecl006'
                     LET l_vars[03] = g_enterprise 
                     LET l_fields[03] = 'imeclent'
                     LET l_var_keys_bak[01] = g_detail_multi_table_t.imecl001
                     LET l_var_keys_bak[02] = g_detail_multi_table_t.imecl002
                     LET l_var_keys_bak[03] = g_detail_multi_table_t.imecl003
                     LET l_var_keys_bak[04] = g_detail_multi_table_t.imecl004
                     CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'imecl_t')
                  END IF 
 
               END IF
            END IF
       
         BEFORE FIELD imec003
            
         AFTER FIELD imec003
            IF NOT cl_null(g_imea_m.imea001) AND NOT cl_null(g_imeb_d[l_ac].imeb002) AND NOT cl_null(g_imeb2_d[l_ac1].imec003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND  g_imeb2_d[l_ac1].imec003 != g_imeb2_d_t.imec003) THEN 
                  IF NOT ap_chk_notDup(g_imeb2_d[l_ac1].imec003,"SELECT COUNT(*) FROM imec_t WHERE "||"imecent = '" ||g_enterprise|| "' AND "||"imec001 = '"||g_imea_m.imea001 ||"' AND "|| "imec002 = '"||g_imeb_d[l_ac].imeb002 ||"' AND "|| "imec003 = '"||g_imeb2_d[l_ac1].imec003 ||"'",'std-00004',0) THEN 
                     LET g_imeb2_d[l_ac1].imec003 = g_imeb2_d_t.imec003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_imeb2_d[l_ac1].imec003) THEN
               IF g_imeb_d[l_ac].imeb006 = '1' THEN
                  CALL aimi092_chk_chr(g_imeb2_d[l_ac1].imec003) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb2_d[l_ac1].imec003,'aim-00209',1)
                     LET g_imeb2_d[l_ac1].imec003 = g_imeb2_d_t.imec003
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '2' THEN
                  CALL aimi092_digcut(g_imeb2_d[l_ac1].imec003,g_imeb_d[l_ac].imeb008) RETURNING g_imeb2_d[l_ac1].imec003
                  CALL aimi092_chk_num(g_imeb2_d[l_ac1].imec003) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb2_d[l_ac1].imec003,'aim-00172',1)
                     LET g_imeb2_d[l_ac1].imec003 = g_imeb2_d_t.imec003
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF g_imeb_d[l_ac].imeb006 = '3' THEN
                  CALL aimi092_chk_znum(g_imeb2_d[l_ac1].imec003) RETURNING l_success
                  IF NOT l_success THEN
                     CALL cl_err(g_imeb2_d[l_ac1].imec003,'aim-00173',1)
                     LET g_imeb2_d[l_ac1].imec003 = g_imeb2_d_t.imec003
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL aimi092_chk_imeb009(g_imeb2_d[l_ac1].imec003,'1')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_imeb2_d[l_ac1].imec003,g_errno,1)
                  LET g_imeb2_d[l_ac1].imec003 = g_imeb2_d_t.imec003
                  NEXT FIELD CURRENT
               END IF
            END IF


         ON CHANGE imec003
      
         BEFORE FIELD imecl005
           
         AFTER FIELD imecl005
        
         ON CHANGE imecl005
         
         BEFORE FIELD imecl006
           
         AFTER FIELD imecl006
        
         ON CHANGE imecl006
 
         AFTER ROW
            LET l_ac1 = ARR_CURR()
            LET l_ac1_t = l_ac1
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_imeb2_d[l_ac1].* = g_imeb2_d_t.*
               END IF
               CLOSE aimi092_bcl2
               CLOSE aimi092_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            CALL cl_multitable_unlock()
            CLOSE aimi092_bcl2
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
 
      END INPUT]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL g_imeb2_d.clear()]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL aimi092_showerrmsg()]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         UPDATE imec_t
            SET imec001 = g_imea_m.imea001
          WHERE imecent = g_enterprise 
            AND imec001 = g_imea001_t
         IF SQLCA.sqlcode THEN
            CALL cl_err("",SQLCA.sqlcode,1) 
            CALL s_transaction_end('N','0')
            CONTINUE WHILE
         END IF
         UPDATE imecl_t
            SET imecl001 = g_imea_m.imea001
          WHERE imeclent = g_enterprise 
            AND imecl001 = g_imea001_t
         IF SQLCA.sqlcode THEN
            CALL cl_err("",SQLCA.sqlcode,1) 
            CALL s_transaction_end('N','0')
            CONTINUE WHILE
         END IF]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL g_imeb2_d.clear()]]>
</point>
  <point name="reproduce.a.imea001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL aimi092_rdesc(l_newno)
         IF NOT cl_null(l_newno) THEN
            IF NOT ap_chk_notDup(l_newno,"SELECT COUNT(*) FROM imea_t WHERE "||"imeaent = '" ||g_enterprise|| "' AND "||"imea001 = '"||l_newno ||"'",'std-00004',0) THEN 
               LET l_newno = ""
               CALL aimi092_rdesc(l_newno)
               NEXT FIELD CURRENT
            END IF
            CALL aimi092_chk_oocq('211',l_newno)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err_msg(l_newno,g_errno,'211',1)
               LET l_newno = ""
               CALL aimi092_rdesc(l_newno)
               NEXT FIELD CURRENT
            END IF
         END IF]]>
</point>
  <point name="reproduce.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[       ON ACTION controlp INFIELD imea001           
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = l_newno            #給予default值
            #給予arg
            LET g_qryparam.arg1 = "211" #
            CALL q_oocq002()                             #呼叫開窗
            LET l_newno= g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY l_newno TO imea001                   #顯示到畫面上
            NEXT FIELD imea001                           #返回原欄位]]>
</point>
  <point name="reproduce.body.table1.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      INSERT INTO imec_t(imecent,imec001,imec002,imec003)
      SELECT g_enterprise,l_newno,l_detail.imeb002,imec003
        FROM imec_t
       WHERE imecent = g_enterprise
         AND imec001 = g_imea_m.imea001
         AND imec002 = l_detail.imeb002
      IF SQLCA.sqlcode THEN
         CALL cl_err('Insert imec_t error!',SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      INSERT INTO imecl_t(imeclent,imecl001,imecl002,imecl003,imecl004,imecl005,imecl006)
      SELECT g_enterprise,l_newno,l_detail.imeb002,imec003,imecl004,imecl005,imecl006
        FROM imec_t,imecl_t
       WHERE imecent = g_enterprise
         AND imec001 = g_imea_m.imea001
         AND imec002 = l_detail.imeb002
         AND imecent = imeclent
         AND imec001 = imecl001
         AND imec002 = imecl002
         AND imec003 = imecl003
      IF SQLCA.sqlcode THEN
         CALL cl_err('Insert imecl_t error!',SQLCA.sqlcode,1)
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="reproduce.body.table1.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_detail2   RECORD LIKE imec_t.*]]>
</point>
  <point name="reproduce.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("imeb003",TRUE)
   CALL cl_set_comp_entry("imeb010,imeb011",TRUE)
   CALL cl_set_comp_entry("imeb007",TRUE)
   CALL cl_set_comp_entry("imeb008",TRUE)
   CALL cl_set_comp_entry("imeb012",TRUE)]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_imea_m.imea002 = 'N' THEN
      CALL cl_set_comp_entry("imeb003",FALSE)
      LET g_imeb_d[l_ac].imeb003 = '1'
   END IF
   IF g_imeb_d[l_ac].imeb005 <> '3' THEN
      CALL cl_set_comp_entry("imeb010,imeb011",FALSE)
      LET g_imeb_d[l_ac].imeb010 = ""
      LET g_imeb_d[l_ac].imeb011 = ""
   END IF 
   IF g_imeb_d[l_ac].imeb006 <> '2' THEN
      CALL cl_set_comp_entry("imeb008",FALSE)
      LET g_imeb_d[l_ac].imeb008 = 0
   END IF
   IF g_imeb_d[l_ac].imeb003 = '1' THEN
      CALL cl_set_comp_entry("imeb012",FALSE)
      LET g_imeb_d[l_ac].imeb012 = "N"
   END IF
   IF g_imeb_d[l_ac].imeb005 <> '1' THEN
      CALL cl_set_comp_entry("imeb007",FALSE)
      CALL cl_set_comp_entry("imeb008",FALSE)
      LET g_imeb_d[l_ac].imeb007 = ""
      LET g_imeb_d[l_ac].imeb008 = ""
   END IF]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF l_ac = 0 OR cl_null(l_ac) THEN
      LET l_ac =1
   END IF]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)      
   END IF
   ]]>
</point>
  <point name="ui_dialog.body1.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aimi092_b_fill_1()
               DISPLAY ARRAY g_imeb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b1)  
                  BEFORE DISPLAY
                    EXIT DISPLAY
               END DISPLAY]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         DISPLAY ARRAY g_imeb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b1)  
    
            BEFORE ROW
               CALL aimi092_idx_chk()
               LET l_ac1 = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac1
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac1 = DIALOG.getCurrentRow("s_detail2")
               CALL aimi092_idx_chk()
               LET g_current_page = 2

         END DISPLAY]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL aimi092_b_fill_1()]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imea001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imea001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imea002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imea002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imea002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imeastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imeastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imeaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imeaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imeacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imeacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeacrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imeamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imeamoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.imea001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.imea001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.imea002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.imeastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.imeastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.imeastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.imea002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.imeastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.imeb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.imeb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.imeb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.inactive" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.active" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aimi092.b_fill" ver="5" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aimi092_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_imeb_d.clear()    #g_imeb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aimi092_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE imeb002,imeb003,imeb004,imeb005,imeb006,imeb007,imeb008,imeb009,imeb010, 
          imeb011,imeb012 ,t1.oocql004 FROM imeb_t",   
                  " INNER JOIN imea_t ON imea001 = imeb001 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='273' AND t1.oocql002=imeb004 AND t1.oocql003='"||g_dlang||"' ",
 
                  " WHERE imebent=? AND imeb001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY imeb_t.imeb002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aimi092_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aimi092_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_imea_m.imea001
                                               
      FOREACH b_fill_cs INTO g_imeb_d[l_ac].imeb002,g_imeb_d[l_ac].imeb003,g_imeb_d[l_ac].imeb004,g_imeb_d[l_ac].imeb005, 
          g_imeb_d[l_ac].imeb006,g_imeb_d[l_ac].imeb007,g_imeb_d[l_ac].imeb008,g_imeb_d[l_ac].imeb009, 
          g_imeb_d[l_ac].imeb010,g_imeb_d[l_ac].imeb011,g_imeb_d[l_ac].imeb012,g_imeb_d[l_ac].imeb004_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_imeb_d.deleteElement(g_imeb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aimi092_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aimi092.b_fill2" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aimi092_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aimi092_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aimi092.browser_fill" ver="5" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aimi092_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_imea_m.* TO NULL
   CALL g_imeb_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "imea001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE imea001 ",
                      " FROM imea_t ",
                      " ",
                      " LEFT JOIN imeb_t ON imebent = imeaent AND imea001 = imeb001 ",
 
 
                      " ", 
                      " ", 
                      " WHERE imeaent = '" ||g_enterprise|| "' AND imebent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("imea_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE imea001 ",
                      " FROM imea_t ", 
                      "  ",
                      "  ",
                      " WHERE imeaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("imea_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照imea001,'',imea002 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT imeastus,imea001,'',imea002,t1.oocql004 ",
               " FROM imea_t ",
               "  ",
               "  LEFT JOIN imeb_t ON imebent = imeaent AND imea001 = imeb001 ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql002=imea001 AND t1.oocql003='"||g_lang||"' ",
 
               " WHERE imeaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("imea_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_imea001,g_browser[g_cnt].b_imea001_desc, 
       g_browser[g_cnt].b_imea002,g_browser[g_cnt].b_imea001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aimi092.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aimi092_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY imea001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aimi092_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aimi092.construct" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aimi092_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_imea_m.* TO NULL
   CALL g_imeb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON imea001,imea002,imeastus,imeaownid,imeaowndp,imeacrtid,imeacrtdp,imeacrtdt, 
          imeamodid,imeamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<imeacrtdt>>----
         AFTER FIELD imeacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imeamoddt>>----
         AFTER FIELD imeamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<imeacnfdt>>----
         
         #----<<imeapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.imea001
         ON ACTION controlp INFIELD imea001
            #add-point:ON ACTION controlp INFIELD imea001
            {<point name="construct.c.imea001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imea001
            #add-point:BEFORE FIELD imea001
            {<point name="construct.b.imea001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imea001
            
            #add-point:AFTER FIELD imea001
            {<point name="construct.a.imea001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imea002
            #add-point:BEFORE FIELD imea002
            {<point name="construct.b.imea002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imea002
            
            #add-point:AFTER FIELD imea002
            {<point name="construct.a.imea002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imea002
         ON ACTION controlp INFIELD imea002
            #add-point:ON ACTION controlp INFIELD imea002
            {<point name="construct.c.imea002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeastus
            #add-point:BEFORE FIELD imeastus
            {<point name="construct.b.imeastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeastus
            
            #add-point:AFTER FIELD imeastus
            {<point name="construct.a.imeastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeastus
         ON ACTION controlp INFIELD imeastus
            #add-point:ON ACTION controlp INFIELD imeastus
            {<point name="construct.c.imeastus" />}
            #END add-point
 
         #Ctrlp:construct.c.imeaownid
         ON ACTION controlp INFIELD imeaownid
            #add-point:ON ACTION controlp INFIELD imeaownid
            {<point name="construct.c.imeaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeaownid
            #add-point:BEFORE FIELD imeaownid
            {<point name="construct.b.imeaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeaownid
            
            #add-point:AFTER FIELD imeaownid
            {<point name="construct.a.imeaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeaowndp
         ON ACTION controlp INFIELD imeaowndp
            #add-point:ON ACTION controlp INFIELD imeaowndp
            {<point name="construct.c.imeaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeaowndp
            #add-point:BEFORE FIELD imeaowndp
            {<point name="construct.b.imeaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeaowndp
            
            #add-point:AFTER FIELD imeaowndp
            {<point name="construct.a.imeaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeacrtid
         ON ACTION controlp INFIELD imeacrtid
            #add-point:ON ACTION controlp INFIELD imeacrtid
            {<point name="construct.c.imeacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeacrtid
            #add-point:BEFORE FIELD imeacrtid
            {<point name="construct.b.imeacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeacrtid
            
            #add-point:AFTER FIELD imeacrtid
            {<point name="construct.a.imeacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imeacrtdp
         ON ACTION controlp INFIELD imeacrtdp
            #add-point:ON ACTION controlp INFIELD imeacrtdp
            {<point name="construct.c.imeacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeacrtdp
            #add-point:BEFORE FIELD imeacrtdp
            {<point name="construct.b.imeacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeacrtdp
            
            #add-point:AFTER FIELD imeacrtdp
            {<point name="construct.a.imeacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeacrtdt
            #add-point:BEFORE FIELD imeacrtdt
            {<point name="construct.b.imeacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.imeamodid
         ON ACTION controlp INFIELD imeamodid
            #add-point:ON ACTION controlp INFIELD imeamodid
            {<point name="construct.c.imeamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeamodid
            #add-point:BEFORE FIELD imeamodid
            {<point name="construct.b.imeamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeamodid
            
            #add-point:AFTER FIELD imeamodid
            {<point name="construct.a.imeamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeamoddt
            #add-point:BEFORE FIELD imeamoddt
            {<point name="construct.b.imeamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON imeb002,imeb003,imeb004,imeb005,imeb006,imeb007,imeb008,imeb009,imeb010, 
          imeb011,imeb012
           FROM s_detail1[1].imeb002,s_detail1[1].imeb003,s_detail1[1].imeb004,s_detail1[1].imeb005, 
               s_detail1[1].imeb006,s_detail1[1].imeb007,s_detail1[1].imeb008,s_detail1[1].imeb009,s_detail1[1].imeb010, 
               s_detail1[1].imeb011,s_detail1[1].imeb012
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aimi092.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aimi092_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " imea001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aimi092.delete" ver="7" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aimi092_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_imea_m.imea001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aimi092_master_referesh USING g_imea_m.imea001 INTO g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus, 
       g_imea_m.imeaownid,g_imea_m.imeaowndp,g_imea_m.imeacrtid,g_imea_m.imeacrtdp,g_imea_m.imeacrtdt, 
       g_imea_m.imeamodid,g_imea_m.imeamoddt,g_imea_m.imea001_desc,g_imea_m.imeaownid_desc,g_imea_m.imeaowndp_desc, 
       g_imea_m.imeacrtid_desc,g_imea_m.imeacrtdp_desc,g_imea_m.imeamodid_desc
   
   
 
   CALL aimi092_show()
   
   CALL s_transaction_begin()
 
   OPEN aimi092_cl USING g_enterprise,g_imea_m.imea001
   IF STATUS THEN
      CALL cl_err("OPEN aimi092_cl:", STATUS, 1)
      CLOSE aimi092_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aimi092_master_referesh USING g_imea_m.imea001 INTO g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus, 
       g_imea_m.imeaownid,g_imea_m.imeaowndp,g_imea_m.imeacrtid,g_imea_m.imeacrtdp,g_imea_m.imeacrtdt, 
       g_imea_m.imeamodid,g_imea_m.imeamoddt,g_imea_m.imea001_desc,g_imea_m.imeaownid_desc,g_imea_m.imeaowndp_desc, 
       g_imea_m.imeacrtid_desc,g_imea_m.imeacrtdp_desc,g_imea_m.imeamodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_imea_m.imea001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aimi092_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_imea001_t = g_imea_m.imea001
 
 
      DELETE FROM imea_t
       WHERE imeaent = g_enterprise AND imea001 = g_imea_m.imea001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_imea_m.imea001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM imeb_t
       WHERE imebent = g_enterprise AND imeb001 = g_imea_m.imea001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("imeb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_imeb_d.clear() 
 
     
      #CALL aimi092_ui_browser_refresh()  
      CALL aimi092_ui_headershow()  
      CALL aimi092_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aimi092_browser_fill("")
         CALL aimi092_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aimi092_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aimi092_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_imea_m.imea001,'D')
    
END FUNCTION
]]>
</section>
  <section id="aimi092.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aimi092_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM imeb_t
       WHERE imebent = g_enterprise AND
         imeb001 = ps_keys_bak[1] AND imeb002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aimi092.description" ver="11" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000197
#+ 
#+ Filename...: aimi092
#+ Description: 料件特徵維護作業
#+ Creator....: 02482(2013/11/06)
#+ Modifier...: 02294(2014/06/27)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aimi092.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aimi092_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE imeb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aimi092_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aimi092_detail AS ",
                "SELECT * FROM imeb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aimi092_detail SELECT * FROM imeb_t 
                                         WHERE imebent = g_enterprise AND imeb001 = g_imea001_t
 
   
   #將key修正為調整後   
   UPDATE aimi092_detail 
      #更新key欄位
      SET imeb001 = g_imea_m.imea001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO imeb_t SELECT * FROM aimi092_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aimi092_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_imea001_t = g_imea_m.imea001
 
   
   DROP TABLE aimi092_detail
   
END FUNCTION
]]>
</section>
  <section id="aimi092.detail_show" ver="3" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aimi092_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aimi092.fetch" ver="4" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aimi092_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_imea_m.imea001 = g_browser[g_current_idx].b_imea001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aimi092_master_referesh USING g_imea_m.imea001 INTO g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus, 
       g_imea_m.imeaownid,g_imea_m.imeaowndp,g_imea_m.imeacrtid,g_imea_m.imeacrtdp,g_imea_m.imeacrtdt, 
       g_imea_m.imeamodid,g_imea_m.imeamoddt,g_imea_m.imea001_desc,g_imea_m.imeaownid_desc,g_imea_m.imeaowndp_desc, 
       g_imea_m.imeacrtid_desc,g_imea_m.imeacrtdp_desc,g_imea_m.imeamodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("imea_t",SQLCA.sqlcode,1)
      INITIALIZE g_imea_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aimi092_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="aimi092.fill_chk" ver="4" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aimi092_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aimi092.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aimi092_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON imea001,imea002
                          FROM s_browse[1].b_imea001,s_browse[1].b_imea002
 
         BEFORE CONSTRUCT
               DISPLAY aimi092_filter_parser('imea001') TO s_browse[1].b_imea001
            DISPLAY aimi092_filter_parser('imea002') TO s_browse[1].b_imea002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aimi092_filter_show('imea001')
   CALL aimi092_filter_show('imea002')
 
END FUNCTION
]]>
</section>
  <section id="aimi092.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aimi092_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aimi092.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aimi092_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aimi092_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aimi092.global" ver="4" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_imea_m        RECORD
       imea001 LIKE imea_t.imea001, 
   imea001_desc LIKE type_t.chr80, 
   imea002 LIKE imea_t.imea002, 
   imeastus LIKE imea_t.imeastus, 
   imeaownid LIKE imea_t.imeaownid, 
   imeaownid_desc LIKE type_t.chr80, 
   imeaowndp LIKE imea_t.imeaowndp, 
   imeaowndp_desc LIKE type_t.chr80, 
   imeacrtid LIKE imea_t.imeacrtid, 
   imeacrtid_desc LIKE type_t.chr80, 
   imeacrtdp LIKE imea_t.imeacrtdp, 
   imeacrtdp_desc LIKE type_t.chr80, 
   imeacrtdt DATETIME YEAR TO SECOND, 
   imeamodid LIKE imea_t.imeamodid, 
   imeamodid_desc LIKE type_t.chr80, 
   imeamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_imeb_d        RECORD
       imeb002 LIKE imeb_t.imeb002, 
   imeb003 LIKE imeb_t.imeb003, 
   imeb004 LIKE imeb_t.imeb004, 
   imeb004_desc LIKE type_t.chr500, 
   imeb005 LIKE imeb_t.imeb005, 
   imeb006 LIKE imeb_t.imeb006, 
   imeb007 LIKE imeb_t.imeb007, 
   imeb008 LIKE imeb_t.imeb008, 
   imeb009 LIKE imeb_t.imeb009, 
   imeb010 LIKE imeb_t.imeb010, 
   imeb011 LIKE imeb_t.imeb011, 
   imeb012 LIKE imeb_t.imeb012
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_imea_m          type_g_imea_m
DEFINE g_imea_m_t        type_g_imea_m
 
   DEFINE g_imea001_t LIKE imea_t.imea001
 
 
DEFINE g_imeb_d          DYNAMIC ARRAY OF type_g_imeb_d
DEFINE g_imeb_d_t        type_g_imeb_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_imea001 LIKE imea_t.imea001,
   b_imea001_desc LIKE type_t.chr80,
      b_imea002 LIKE imea_t.imea002
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_imea001 LIKE imea_t.imea001,
   b_imea001_desc LIKE type_t.chr80,
      b_imea002 LIKE imea_t.imea002
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aimi092.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aimi092_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_imeb_d.getLength() THEN
         LET g_detail_idx = g_imeb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_imeb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_imeb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aimi092.init" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aimi092_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('imeastus','17','N,Y')
 
      CALL cl_set_combo_scc('imeb003','4004') 
   CALL cl_set_combo_scc('imeb005','4005') 
   CALL cl_set_combo_scc('imeb006','4006') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aimi092_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aimi092.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aimi092_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT imeb002,imeb003,imeb004,imeb005,imeb006,imeb007,imeb008,imeb009,imeb010, 
       imeb011,imeb012 FROM imeb_t WHERE imebent=? AND imeb001=? AND imeb002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimi092_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aimi092_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aimi092_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aimi092.input.body" ver="4" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_imeb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_imeb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aimi092_b_fill()
            LET g_rec_b = g_imeb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aimi092_cl USING g_enterprise,g_imea_m.imea001
            IF STATUS THEN
               CALL cl_err("OPEN aimi092_cl:", STATUS, 1)
               CLOSE aimi092_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_imeb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_imeb_d[l_ac].imeb002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_imeb_d_t.* = g_imeb_d[l_ac].*  #BACKUP
               CALL aimi092_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aimi092_set_no_entry_b(l_cmd)
               IF NOT aimi092_lock_b("imeb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aimi092_bcl INTO g_imeb_d[l_ac].imeb002,g_imeb_d[l_ac].imeb003,g_imeb_d[l_ac].imeb004, 
                      g_imeb_d[l_ac].imeb005,g_imeb_d[l_ac].imeb006,g_imeb_d[l_ac].imeb007,g_imeb_d[l_ac].imeb008, 
                      g_imeb_d[l_ac].imeb009,g_imeb_d[l_ac].imeb010,g_imeb_d[l_ac].imeb011,g_imeb_d[l_ac].imeb012 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_imeb_d_t.imeb002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aimi092_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_imeb_d[l_ac].* TO NULL 
                  LET g_imeb_d[l_ac].imeb005 = "1"
      LET g_imeb_d[l_ac].imeb006 = "1"
      LET g_imeb_d[l_ac].imeb008 = "0"
      LET g_imeb_d[l_ac].imeb012 = "N"
 
            LET g_imeb_d_t.* = g_imeb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aimi092_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aimi092_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_imeb_d[li_reproduce_target].* = g_imeb_d[li_reproduce].*
 
               LET g_imeb_d[li_reproduce_target].imeb002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM imeb_t 
             WHERE imebent = g_enterprise AND imeb001 = g_imea_m.imea001
 
               AND imeb002 = g_imeb_d[l_ac].imeb002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imea_m.imea001
               LET gs_keys[2] = g_imeb_d[g_detail_idx].imeb002
               CALL aimi092_insert_b('imeb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_imeb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("imeb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aimi092_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_imeb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_imeb_d.deleteElement(l_ac)
               NEXT FIELD imeb002
            END IF
         
            IF g_imeb_d[l_ac].imeb002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM imeb_t
                WHERE imebent = g_enterprise AND imeb001 = g_imea_m.imea001 AND
 
                      imeb002 = g_imeb_d_t.imeb002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("imeb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aimi092_bcl
               LET l_count = g_imeb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imea_m.imea001
               LET gs_keys[2] = g_imeb_d[g_detail_idx].imeb002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aimi092_delete_b('imeb_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD imeb002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_imeb_d[l_ac].imeb002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD imeb002
            END IF
 
 
            #add-point:AFTER FIELD imeb002
            {<point name="input.a.page1.imeb002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb002
            #add-point:BEFORE FIELD imeb002
            {<point name="input.b.page1.imeb002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imeb002
            #add-point:ON CHANGE imeb002
            {<point name="input.g.page1.imeb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb003
            #add-point:BEFORE FIELD imeb003
            {<point name="input.b.page1.imeb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb003
            
            #add-point:AFTER FIELD imeb003
            {<point name="input.a.page1.imeb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeb003
            #add-point:ON CHANGE imeb003
            {<point name="input.g.page1.imeb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb004
            
            #add-point:AFTER FIELD imeb004
            {<point name="input.a.page1.imeb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb004
            #add-point:BEFORE FIELD imeb004
            {<point name="input.b.page1.imeb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imeb004
            #add-point:ON CHANGE imeb004
            {<point name="input.g.page1.imeb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb005
            #add-point:BEFORE FIELD imeb005
            {<point name="input.b.page1.imeb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb005
            
            #add-point:AFTER FIELD imeb005
            {<point name="input.a.page1.imeb005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeb005
            #add-point:ON CHANGE imeb005
            {<point name="input.g.page1.imeb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb006
            #add-point:BEFORE FIELD imeb006
            {<point name="input.b.page1.imeb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb006
            
            #add-point:AFTER FIELD imeb006
            {<point name="input.a.page1.imeb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeb006
            #add-point:ON CHANGE imeb006
            {<point name="input.g.page1.imeb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_imeb_d[l_ac].imeb007,"0.000","0","30.000","1","azz-00087",1) THEN 

               NEXT FIELD imeb007
            END IF
 
 
            #add-point:AFTER FIELD imeb007
            {<point name="input.a.page1.imeb007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb007
            #add-point:BEFORE FIELD imeb007
            {<point name="input.b.page1.imeb007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imeb007
            #add-point:ON CHANGE imeb007
            {<point name="input.g.page1.imeb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_imeb_d[l_ac].imeb008,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD imeb008
            END IF
 
 
            #add-point:AFTER FIELD imeb008
            {<point name="input.a.page1.imeb008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb008
            #add-point:BEFORE FIELD imeb008
            {<point name="input.b.page1.imeb008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imeb008
            #add-point:ON CHANGE imeb008
            {<point name="input.g.page1.imeb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb009
            #add-point:BEFORE FIELD imeb009
            {<point name="input.b.page1.imeb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb009
            
            #add-point:AFTER FIELD imeb009
            {<point name="input.a.page1.imeb009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeb009
            #add-point:ON CHANGE imeb009
            {<point name="input.g.page1.imeb009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb010
            #add-point:BEFORE FIELD imeb010
            {<point name="input.b.page1.imeb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb010
            
            #add-point:AFTER FIELD imeb010
            {<point name="input.a.page1.imeb010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeb010
            #add-point:ON CHANGE imeb010
            {<point name="input.g.page1.imeb010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb011
            #add-point:BEFORE FIELD imeb011
            {<point name="input.b.page1.imeb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb011
            
            #add-point:AFTER FIELD imeb011
            {<point name="input.a.page1.imeb011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeb011
            #add-point:ON CHANGE imeb011
            {<point name="input.g.page1.imeb011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeb012
            #add-point:BEFORE FIELD imeb012
            {<point name="input.b.page1.imeb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeb012
            
            #add-point:AFTER FIELD imeb012
            {<point name="input.a.page1.imeb012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeb012
            #add-point:ON CHANGE imeb012
            {<point name="input.g.page1.imeb012" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.imeb002
         ON ACTION controlp INFIELD imeb002
            #add-point:ON ACTION controlp INFIELD imeb002
            {<point name="input.c.page1.imeb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb003
         ON ACTION controlp INFIELD imeb003
            #add-point:ON ACTION controlp INFIELD imeb003
            {<point name="input.c.page1.imeb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb004
         ON ACTION controlp INFIELD imeb004
            #add-point:ON ACTION controlp INFIELD imeb004
            {<point name="input.c.page1.imeb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb005
         ON ACTION controlp INFIELD imeb005
            #add-point:ON ACTION controlp INFIELD imeb005
            {<point name="input.c.page1.imeb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb006
         ON ACTION controlp INFIELD imeb006
            #add-point:ON ACTION controlp INFIELD imeb006
            {<point name="input.c.page1.imeb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb007
         ON ACTION controlp INFIELD imeb007
            #add-point:ON ACTION controlp INFIELD imeb007
            {<point name="input.c.page1.imeb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb008
         ON ACTION controlp INFIELD imeb008
            #add-point:ON ACTION controlp INFIELD imeb008
            {<point name="input.c.page1.imeb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb009
         ON ACTION controlp INFIELD imeb009
            #add-point:ON ACTION controlp INFIELD imeb009
            {<point name="input.c.page1.imeb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb010
         ON ACTION controlp INFIELD imeb010
            #add-point:ON ACTION controlp INFIELD imeb010
            {<point name="input.c.page1.imeb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb011
         ON ACTION controlp INFIELD imeb011
            #add-point:ON ACTION controlp INFIELD imeb011
            {<point name="input.c.page1.imeb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.imeb012
         ON ACTION controlp INFIELD imeb012
            #add-point:ON ACTION controlp INFIELD imeb012
            {<point name="input.c.page1.imeb012" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_imeb_d[l_ac].* = g_imeb_d_t.*
               CLOSE aimi092_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_imeb_d[l_ac].imeb002,-263,1)
               LET g_imeb_d[l_ac].* = g_imeb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE imeb_t SET (imeb001,imeb002,imeb003,imeb004,imeb005,imeb006,imeb007,imeb008,imeb009, 
                   imeb010,imeb011,imeb012) = (g_imea_m.imea001,g_imeb_d[l_ac].imeb002,g_imeb_d[l_ac].imeb003, 
                   g_imeb_d[l_ac].imeb004,g_imeb_d[l_ac].imeb005,g_imeb_d[l_ac].imeb006,g_imeb_d[l_ac].imeb007, 
                   g_imeb_d[l_ac].imeb008,g_imeb_d[l_ac].imeb009,g_imeb_d[l_ac].imeb010,g_imeb_d[l_ac].imeb011, 
                   g_imeb_d[l_ac].imeb012)
                WHERE imebent = g_enterprise AND imeb001 = g_imea_m.imea001 
 
                  AND imeb002 = g_imeb_d_t.imeb002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("imeb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_imeb_d[l_ac].* = g_imeb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("imeb_t",SQLCA.sqlcode,1)
                     LET g_imeb_d[l_ac].* = g_imeb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_imea_m.imea001
               LET gs_keys_bak[1] = g_imea001_t
               LET gs_keys[2] = g_imeb_d[g_detail_idx].imeb002
               LET gs_keys_bak[2] = g_imeb_d_t.imeb002
               CALL aimi092_update_b('imeb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_imea_m),util.JSON.stringify(g_imeb_d_t)
               LET g_log2 = util.JSON.stringify(g_imea_m),util.JSON.stringify(g_imeb_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aimi092_unlock_b("imeb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_imeb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_imeb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aimi092.input.head" ver="5" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD imea001
            
            #add-point:AFTER FIELD imea001
            {<point name="input.a.imea001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imea001
            #add-point:BEFORE FIELD imea001
            {<point name="input.b.imea001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE imea001
            #add-point:ON CHANGE imea001
            {<point name="input.g.imea001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imea002
            #add-point:BEFORE FIELD imea002
            {<point name="input.b.imea002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imea002
            
            #add-point:AFTER FIELD imea002
            {<point name="input.a.imea002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imea002
            #add-point:ON CHANGE imea002
            {<point name="input.g.imea002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imeastus
            #add-point:BEFORE FIELD imeastus
            {<point name="input.b.imeastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imeastus
            
            #add-point:AFTER FIELD imeastus
            {<point name="input.a.imeastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imeastus
            #add-point:ON CHANGE imeastus
            {<point name="input.g.imeastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.imea001
         ON ACTION controlp INFIELD imea001
            #add-point:ON ACTION controlp INFIELD imea001
            {<point name="input.c.imea001" />}
            #END add-point
 
         #Ctrlp:input.c.imea002
         ON ACTION controlp INFIELD imea002
            #add-point:ON ACTION controlp INFIELD imea002
            {<point name="input.c.imea002" />}
            #END add-point
 
         #Ctrlp:input.c.imeastus
         ON ACTION controlp INFIELD imeastus
            #add-point:ON ACTION controlp INFIELD imeastus
            {<point name="input.c.imeastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_imea_m.imea001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO imea_t (imeaent,imea001,imea002,imeastus,imeaownid,imeaowndp,imeacrtid,imeacrtdp, 
                   imeacrtdt)
               VALUES (g_enterprise,g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus,g_imea_m.imeaownid, 
                   g_imea_m.imeaowndp,g_imea_m.imeacrtid,g_imea_m.imeacrtdp,g_imea_m.imeacrtdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_imea_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aimi092_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE imea_t SET (imea001,imea002,imeastus,imeaownid,imeaowndp,imeacrtid,imeacrtdp,imeacrtdt) = (g_imea_m.imea001, 
                   g_imea_m.imea002,g_imea_m.imeastus,g_imea_m.imeaownid,g_imea_m.imeaowndp,g_imea_m.imeacrtid, 
                   g_imea_m.imeacrtdp,g_imea_m.imeacrtdt)
                WHERE imeaent = g_enterprise AND imea001 = g_imea001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("imea_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_imea_m_t)
               LET g_log2 = util.JSON.stringify(g_imea_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_imea001_t = g_imea_m.imea001
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aimi092.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD imea001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD imeb002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aimi092.insert" ver="3" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aimi092_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_imeb_d.clear()   
 
 
   INITIALIZE g_imea_m.* LIKE imea_t.*             #DEFAULT 設定
   
   LET g_imea001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_imea_m.imeaownid = g_user
      LET g_imea_m.imeaowndp = g_dept
      LET g_imea_m.imeacrtid = g_user
      LET g_imea_m.imeacrtdp = g_dept 
      LET g_imea_m.imeacrtdt = cl_get_current()
      LET g_imea_m.imeamodid = ""
      LET g_imea_m.imeamoddt = ""
      LET g_imea_m.imeastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_imea_m.imea002 = "Y"
      LET g_imea_m.imeastus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aimi092_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imea_m.* = g_imea_m_t.*
         CALL aimi092_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_imeb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_imea001_t = g_imea_m.imea001
 
   
   LET g_wc = g_wc,  
              " OR ( imeaent = '" ||g_enterprise|| "' AND",
              " imea001 = '", g_imea_m.imea001 CLIPPED, "' "
 
              , ") "
   
   CLOSE aimi092_cl
   
END FUNCTION
]]>
</section>
  <section id="aimi092.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aimi092_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO imeb_t
                  (imebent,
                   imeb001,
                   imeb002
                   ,imeb003,imeb004,imeb005,imeb006,imeb007,imeb008,imeb009,imeb010,imeb011,imeb012) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_imeb_d[g_detail_idx].imeb003,g_imeb_d[g_detail_idx].imeb004,g_imeb_d[g_detail_idx].imeb005, 
                       g_imeb_d[g_detail_idx].imeb006,g_imeb_d[g_detail_idx].imeb007,g_imeb_d[g_detail_idx].imeb008, 
                       g_imeb_d[g_detail_idx].imeb009,g_imeb_d[g_detail_idx].imeb010,g_imeb_d[g_detail_idx].imeb011, 
                       g_imeb_d[g_detail_idx].imeb012)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("imeb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aimi092.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aimi092_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aimi092_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "imeb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aimi092_bcl USING g_enterprise,
                                       g_imea_m.imea001,g_imeb_d[g_detail_idx].imeb002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aimi092_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aimi092.main" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aim","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT imea001,'',imea002,imeastus,imeaownid,'',imeaowndp,'',imeacrtid,'',imeacrtdp, 
       '',imeacrtdt,imeamodid,'',imeamoddt", 
                      " FROM imea_t",
                      " WHERE imeaent= ? AND imea001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aimi092_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE imea001,imea002,imeastus,imeaownid,imeaowndp,imeacrtid,imeacrtdp,imeacrtdt, 
       imeamodid,imeamoddt,t1.oocql004 ,t2.oofa011 ,t3.ooefl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011", 

               " FROM imea_t",
                              " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='211' AND t1.oocql002=imea001 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=imeaownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=imeaowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=imeacrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=imeacrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=imeamodid  ",
 
               " WHERE imeaent = '" ||g_enterprise|| "' AND imea001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aimi092_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aimi092 WITH FORM cl_ap_formpath("aim",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aimi092_init()   
 
      #進入選單 Menu (="N")
      CALL aimi092_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aimi092
      
   END IF 
   
   CLOSE aimi092_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aimi092.modify" ver="6" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aimi092_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_imea_m.imea001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aimi092_master_referesh USING g_imea_m.imea001 INTO g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus, 
       g_imea_m.imeaownid,g_imea_m.imeaowndp,g_imea_m.imeacrtid,g_imea_m.imeacrtdp,g_imea_m.imeacrtdt, 
       g_imea_m.imeamodid,g_imea_m.imeamoddt,g_imea_m.imea001_desc,g_imea_m.imeaownid_desc,g_imea_m.imeaowndp_desc, 
       g_imea_m.imeacrtid_desc,g_imea_m.imeacrtdp_desc,g_imea_m.imeamodid_desc
 
   ERROR ""
  
   LET g_imea001_t = g_imea_m.imea001
 
   CALL s_transaction_begin()
   
   OPEN aimi092_cl USING g_enterprise,g_imea_m.imea001
   IF STATUS THEN
      CALL cl_err("OPEN aimi092_cl:", STATUS, 1)
      CLOSE aimi092_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aimi092_master_referesh USING g_imea_m.imea001 INTO g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus, 
       g_imea_m.imeaownid,g_imea_m.imeaowndp,g_imea_m.imeacrtid,g_imea_m.imeacrtdp,g_imea_m.imeacrtdt, 
       g_imea_m.imeamodid,g_imea_m.imeamoddt,g_imea_m.imea001_desc,g_imea_m.imeaownid_desc,g_imea_m.imeaowndp_desc, 
       g_imea_m.imeacrtid_desc,g_imea_m.imeacrtdp_desc,g_imea_m.imeamodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_imea_m.imea001,SQLCA.sqlcode,0)
      CLOSE aimi092_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aimi092_show()
   WHILE TRUE
      LET g_imea001_t = g_imea_m.imea001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_imea_m.imeamodid = g_user 
LET g_imea_m.imeamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aimi092_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_imea_m.* = g_imea_m_t.*
         CALL aimi092_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE imea_t SET (imeamodid,imeamoddt) = (g_imea_m.imeamodid,g_imea_m.imeamoddt)
       WHERE imeaent = g_enterprise AND imea001 = g_imea001_t
 
                  
      #若單頭key欄位有變更
      IF g_imea_m.imea001 != g_imea001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE imeb_t SET imeb001 = g_imea_m.imea001
 
          WHERE imebent = g_enterprise AND imeb001 = g_imea001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("imeb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("imeb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_imea_m.imea001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aimi092_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_imea_m.imea001,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aimi092.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aimi092.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aimi092.query" ver="4" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aimi092_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_imeb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aimi092_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aimi092_browser_fill("")
      CALL aimi092_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aimi092_filter_show('imea001')
   CALL aimi092_filter_show('imea002')
   CALL aimi092_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aimi092_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aimi092.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aimi092_reproduce()
   DEFINE l_newno     LIKE imea_t.imea001 
   DEFINE l_oldno     LIKE imea_t.imea001 
 
   DEFINE l_master    RECORD LIKE imea_t.*
   DEFINE l_detail    RECORD LIKE imeb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_imea_m.imea001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_imea001_t = g_imea_m.imea001
 
    
   LET g_imea_m.imea001 = ""
 
    
   CALL aimi092_set_entry('a')
   CALL aimi092_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_imea_m.imeaownid = g_user
      LET g_imea_m.imeaowndp = g_dept
      LET g_imea_m.imeacrtid = g_user
      LET g_imea_m.imeacrtdp = g_dept 
      LET g_imea_m.imeacrtdt = cl_get_current()
      LET g_imea_m.imeamodid = ""
      LET g_imea_m.imeamoddt = ""
      LET g_imea_m.imeastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aimi092_input("r")
   
      LET g_imea_m.imea001_desc = ''
   DISPLAY BY NAME g_imea_m.imea001_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " imea001 = '", g_imea_m.imea001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aimi092.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aimi092_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("imea001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aimi092.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aimi092_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aimi092.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aimi092_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("imea001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aimi092.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aimi092_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aimi092.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aimi092_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_imea_m.imea001
   LET g_pk_array[1].column = 'imea001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aimi092.show" ver="5" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aimi092_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_imea_m_t.* = g_imea_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aimi092_b_fill() #單身填充
      CALL aimi092_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_imea_m.imeaownid_desc = cl_get_username(g_imea_m.imeaownid)
      #LET g_imea_m.imeaowndp_desc = cl_get_deptname(g_imea_m.imeaowndp)
      #LET g_imea_m.imeacrtid_desc = cl_get_username(g_imea_m.imeacrtid)
      #LET g_imea_m.imeacrtdp_desc = cl_get_deptname(g_imea_m.imeacrtdp)
      #LET g_imea_m.imeamodid_desc = cl_get_username(g_imea_m.imeamodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aimi092_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_imea_m.imea001,g_imea_m.imea001_desc,g_imea_m.imea002,g_imea_m.imeastus,g_imea_m.imeaownid, 
       g_imea_m.imeaownid_desc,g_imea_m.imeaowndp,g_imea_m.imeaowndp_desc,g_imea_m.imeacrtid,g_imea_m.imeacrtid_desc, 
       g_imea_m.imeacrtdp,g_imea_m.imeacrtdp_desc,g_imea_m.imeacrtdt,g_imea_m.imeamodid,g_imea_m.imeamodid_desc, 
       g_imea_m.imeamoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_imea_m.imeastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_imeb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aimi092_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aimi092.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aimi092.state_change" ver="4" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aimi092_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_imea_m.imea001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_imea_m.imeastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE imea_t SET imeastus = lc_state 
    WHERE imeaent = g_enterprise AND imea001 = g_imea_m.imea001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_imea_m.imeastus = lc_state
      DISPLAY BY NAME g_imea_m.imeastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aimi092.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aimi092_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_imea001 = g_imea_m.imea001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aimi092.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aimi092_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aimi092.ui_dialog" ver="7" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aimi092_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aimi092_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aimi092_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_imea001 = g_imea001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aimi092_fetch('') # reload data
               LET l_ac = 1
               CALL aimi092_ui_detailshow() #Setting the current row 
      
               CALL aimi092_idx_chk()
               #NEXT FIELD imeb002
         
         END DISPLAY
        
         DISPLAY ARRAY g_imeb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aimi092_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aimi092_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aimi092_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aimi092_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aimi092_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aimi092_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aimi092_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aimi092_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aimi092_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aimi092_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aimi092_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi092_idx_chk()
            
         ON ACTION previous
            CALL aimi092_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi092_idx_chk()
            
         ON ACTION jump
            CALL aimi092_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi092_idx_chk()
            
         ON ACTION next
            CALL aimi092_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi092_idx_chk()
            
         ON ACTION last
            CALL aimi092_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aimi092_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD imeb002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aimi092_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aimi092_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aimi092_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aimi092_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aimi092_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aimi092_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aimi092_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aimi092_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aimi092_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aimi092.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aimi092_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_imea_m.imea001 = g_browser[g_current_idx].b_imea001   
 
   EXECUTE aimi092_master_referesh USING g_imea_m.imea001 INTO g_imea_m.imea001,g_imea_m.imea002,g_imea_m.imeastus, 
       g_imea_m.imeaownid,g_imea_m.imeaowndp,g_imea_m.imeacrtid,g_imea_m.imeacrtdp,g_imea_m.imeacrtdt, 
       g_imea_m.imeamodid,g_imea_m.imeamoddt,g_imea_m.imea001_desc,g_imea_m.imeaownid_desc,g_imea_m.imeaowndp_desc, 
       g_imea_m.imeacrtid_desc,g_imea_m.imeacrtdp_desc,g_imea_m.imeamodid_desc
   CALL aimi092_show()
   
END FUNCTION
]]>
</section>
  <section id="aimi092.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aimi092_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aimi092_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aimi092.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aimi092_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "imeb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE imeb_t 
         SET (imeb001,
              imeb002
              ,imeb003,imeb004,imeb005,imeb006,imeb007,imeb008,imeb009,imeb010,imeb011,imeb012) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_imeb_d[g_detail_idx].imeb003,g_imeb_d[g_detail_idx].imeb004,g_imeb_d[g_detail_idx].imeb005, 
                  g_imeb_d[g_detail_idx].imeb006,g_imeb_d[g_detail_idx].imeb007,g_imeb_d[g_detail_idx].imeb008, 
                  g_imeb_d[g_detail_idx].imeb009,g_imeb_d[g_detail_idx].imeb010,g_imeb_d[g_detail_idx].imeb011, 
                  g_imeb_d[g_detail_idx].imeb012) 
         WHERE imebent = g_enterprise AND imeb001 = ps_keys_bak[1] AND imeb002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("imeb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("imeb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>