<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="anmt560" std_prog="anmt560" erpver="1.0" module="ANM" ver="3" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.anmt560_ins_nmea" order="1" ver="3" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 整批匯入單身資料
# Memo...........:
# Usage..........: CALL anmt560_ins_nmea()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      产生成功否
# Date & Author..: 2015/04/23 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt560_ins_nmea()
   DEFINE l_rtjf            RECORD
             rtjfsite          LIKE rtjf_t.rtjfsite,
             rtjf001           LIKE rtjf_t.rtjf001,
             rtjf002           LIKE rtjf_t.rtjf002,
             rtjf004           LIKE rtjf_t.rtjf004,
             rtjf005           LIKE rtjf_t.rtjf005,
             rtjf007           LIKE rtjf_t.rtjf007,
             rtjf013           LIKE rtjf_t.rtjf013,
             rtjf026           LIKE rtjf_t.rtjf026,
             rtjf031           LIKE rtjf_t.rtjf031,
             nmbb004           LIKE nmbb_t.nmbb004,
             nmbb026           LIKE nmbb_t.nmbb026,
             rtjf036           LIKE rtjf_t.rtjf036
                            END RECORD
   DEFINE l_nmea            type_nmea
   DEFINE l_nmeaseq         LIKE nmea_t.nmeaseq
   DEFINE l_ooia013         LIKE ooia_t.ooia013
   DEFINE l_ooia014         LIKE ooia_t.ooia014
   DEFINE l_glaa001         LIKE glaa_t.glaa001
   DEFINE l_rtjfdocno       LIKE rtjf_t.rtjfdocno
   DEFINE l_rtjfseq         LIKE rtjf_t.rtjfseq
   DEFINE l_rtjfseq1        LIKE rtjf_t.rtjfseq1
   DEFINE l_origin_str      STRING
   DEFINE l_sql             STRING
   DEFINE r_success         LIKE type_t.num5

   LET r_success = TRUE

   CALL s_fin_account_center_sons_query('6',g_nmba_m.nmbacomp,g_nmba_m.nmbadocdt,'')
   CALL s_fin_account_center_sons_str()RETURNING l_origin_str
   IF cl_null(l_origin_str) THEN LET l_origin_str = g_nmba_m.nmbasite END IF
   CALL anmt560_get_ooef001_wc(l_origin_str)RETURNING l_origin_str

   LET l_sql = "SELECT rtjfsite,rtjf001,rtjf002,rtjf004,rtjf005,rtjf007,rtjf013,rtjf026,rtjf031,'','',rtjf036,rtjfdocno,rtjfseq,rtjfseq1",
               "  FROM rtjf_t ",
               " WHERE rtjfent = '",g_enterprise,"'",
               "   AND rtjf025 <= '",g_nmba_m.nmbadocdt,"'",
               "   AND (rtjf037 = 'N' OR rtjf037 IS NULL)",
               "   AND rtjf001 IN ('50','60')",
               "   AND rtjfsite IN ",l_origin_str CLIPPED,
               " UNION ALL ",
               "SELECT nmbborga,nmbb029,nmbb028,nmbb037,'',nmbb038,'','',nmbb005 * nmbb006,nmbb004,nmbb026,'','','','' ",
               "  FROM nmba_t,nmbb_t",
               " WHERE nmbaent = nmbbent AND nmbbent = '",g_enterprise,"'",
               "   AND nmbadocno = nmbbdocno  AND nmbacomp = nmbbcomp",
               "   AND nmba003 IN ('anmt563','anmt540')",
               "   AND nmbb029 = '50'",
               "   AND NOT EXISTS (SELECT 1 FROM nmea_t,nmba_t WHERE nmbaent = nmeaent AND nmeaent = '",g_enterprise,"'",
               "   AND nmbadocno = nmeadocno AND nmbacomp = nmeacomp AND nmeasite = nmbborga ",
               "   AND nmbadocdt = '",g_nmba_m.nmbadocdt,"')",
               "   AND nmbadocdt = '",g_nmba_m.nmbadocdt,"'",
               "   AND nmbborga IN ",l_origin_str CLIPPED
   PREPARE anmt560_rtjf_prep FROM l_sql
   DECLARE anmt560_rtjf_curs CURSOR FOR anmt560_rtjf_prep

   LET l_nmeaseq = 0

   FOREACH anmt560_rtjf_curs INTO l_rtjf.*,l_rtjfdocno,l_rtjfseq,l_rtjfseq1
      INITIALIZE l_nmea TO NULL

      SELECT ooia013,ooia014 INTO l_ooia013,l_ooia014 FROM ooia_t
       WHERE ooiaent = g_enterprise
         AND ooia001 = l_rtjf.rtjf002

      SELECT glaa001 INTO l_glaa001 FROM glaa_t
       WHERE glaaent = g_enterprise AND glaa014 = 'Y'
         AND glaacomp = g_nmba_m.nmbacomp

      LET l_nmea.nmeaent   = g_enterprise
      LET l_nmea.nmeacomp  = g_nmba_m.nmbacomp
      LET l_nmea.nmeadocno = g_nmba_m.nmbadocno
      LET l_nmea.nmeaseq   = l_nmeaseq + 1
      LET l_nmea.nmeasite  = l_rtjf.rtjfsite
      LET l_nmea.nmea001   = l_rtjf.rtjf004
      LET l_nmea.nmea002   = l_rtjf.rtjf026
      LET l_nmea.nmea003   = l_rtjf.rtjf001
      LET l_nmea.nmea004   = l_rtjf.rtjf002
      LET l_nmea.nmea005   = ''
      LET l_nmea.nmea006   = l_rtjf.nmbb004
      IF cl_null(l_nmea.nmea016) THEN
         LET l_nmea.nmea006 = l_glaa001
      END IF
      LET l_nmea.nmea007   = l_rtjf.rtjf005
      LET l_nmea.nmea008   = l_rtjf.nmbb026
      IF cl_null(l_nmea.nmea008) THEN
         LET l_nmea.nmea008   = l_ooia013
      END IF
      LET l_nmea.nmea009   = l_rtjf.rtjf031
      LET l_nmea.nmea010   = ''
      LET l_nmea.nmea011   = l_ooia014
      LET l_nmea.nmea012   = l_rtjf.rtjf007
      LET l_nmea.nmea013   = l_nmea.nmea008
      LET l_nmea.nmea014   = ''
      LET l_nmea.nmea015   = 'N'
      LET l_nmea.nmea016   = l_rtjf.rtjf013
      LET l_nmea.nmea017   = l_rtjf.rtjf036

      INSERT INTO nmea_t (nmeaent,nmeacomp,nmeadocno,nmeaseq,nmeasite,
                          nmea001,nmea002,nmea003,nmea004,nmea005,
                          nmea006,nmea007,nmea008,nmea009,nmea010,
                          nmea011,nmea012,nmea013,nmea014,nmea015,nmea016,nmea017,nmea018)
                   VALUES(l_nmea.nmeaent,l_nmea.nmeacomp,l_nmea.nmeadocno,l_nmea.nmeaseq,l_nmea.nmeasite,
                          l_nmea.nmea001,l_nmea.nmea002,l_nmea.nmea003,l_nmea.nmea004,l_nmea.nmea005,
                          l_nmea.nmea006,l_nmea.nmea007,l_nmea.nmea008,l_nmea.nmea009,l_nmea.nmea010,
                          l_nmea.nmea011,l_nmea.nmea012,l_nmea.nmea013,l_nmea.nmea014,l_nmea.nmea015,l_nmea.nmea016,l_nmea.nmea017,'N')

      UPDATE rtjf_t SET rtjf037 = 'Y'
       WHERE rtjfdocno = l_rtjfdocno
         AND rtjfseq   = l_rtjfseq
         AND rtjfseq1  = l_rtjfseq1
         AND rtjfent   = g_enterprise

      LET l_nmeaseq = l_nmeaseq + 1

   END FOREACH

   IF l_nmeaseq = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "anm-02903" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF

   RETURN r_success

END FUNCTION]]>
  </point>
  <point name="function.anmt560_get_ooef001_wc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: sub產生的數據集轉換
# Memo...........: DSCNJ,DSCTP,DSCTC --> ('DSCNJ','DSCTP','DSCTC')
# Usage..........: CALL anmt560_get_ooef001_wc(p_wc)
#                  RETURNING r_wc
# Input parameter: p_wc           sub产生的数据集
# Return code....: r_wc           SQL可用的数据集
# Date & Author..: 2015/04/20 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt560_get_ooef001_wc(p_wc)
   DEFINE p_wc       STRING
   DEFINE r_wc       STRING
   DEFINE tok        base.StringTokenizer
   DEFINE l_str      STRING

   LET tok = base.StringTokenizer.create(p_wc,",")
   WHILE tok.hasMoreTokens()
      IF cl_null(l_str) THEN
         LET l_str = tok.nextToken()
      ELSE
         LET l_str = l_str,"','",tok.nextToken()
      END IF      
   END WHILE   
   LET r_wc = "('",l_str,"')"
   
   RETURN r_wc

END FUNCTION]]>
  </point>
  <point name="function.anmt560_confirm_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 審核檢查
# Memo...........:
# Usage..........: CALL anmt560_confirm_chk()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      檢查通過否  TRUE/FALSE
# Date & Author..: 2015/04/28 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt560_confirm_chk()
   DEFINE l_count           LIKE type_t.num5
   DEFINE r_success         LIKE type_t.num5

   #STEP1.檢查單身是否無資料
   #STEP2.檢查單身交易帳戶(nmea013)是否有空值

   LET r_success = TRUE

   LET l_count = 0
   SELECT COUNT(*) INTO l_count FROM nmea_t WHERE nmeaent = g_enterprise
      AND nmeadocno = g_nmba_m.nmbadocno
      AND nmeacomp  = g_nmba_m.nmbacomp
   IF cl_null(l_count) THEN LET l_count = 0 END IF

   IF l_count = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "agl-00065" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   LET l_count = 0
   SELECT COUNT(*) INTO l_count FROM nmea_t WHERE nmeaent = g_enterprise
      AND nmeadocno = g_nmba_m.nmbadocno
      AND nmeacomp  = g_nmba_m.nmbacomp
      AND nmea013 IS NULL
   IF cl_null(l_count) THEN LET l_count = 0 END IF

   IF l_count > 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "anm-02904" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success

END FUNCTION]]>
  </point>
  <point name="function.anmt560_unconfirm_chk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 取消審核檢查
# Memo...........:
# Usage..........: CALL anmt560_unconfirm_chk()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      檢查通過否  TRUE/FALSE
# Date & Author..: 2015/04/28 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt560_unconfirm_chk()
   DEFINE l_count           LIKE type_t.num5
   DEFINE r_success         LIKE type_t.num5

   #STEP1.檢查單身资料是否存在於anmt561中

   LET r_success = TRUE

   LET l_count = 0
   SELECT COUNT(*) INTO l_count FROM nmba_t WHERE nmbaent = g_enterprise
      AND nmba003   = 'anmt561'
      AND nmbacomp  = g_nmba_m.nmbacomp
      AND nmbadocdt = g_nmba_m.nmbadocdt
   IF cl_null(l_count) THEN LET l_count = 0 END IF

   IF l_count > 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "anm-02905" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   RETURN r_success

END FUNCTION]]>
  </point>
  <point name="function.anmt560_dis" order="5" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 匯總頁簽資料顯示
# Memo...........:
# Usage..........: CALL anmt560_dis()
#                  RETURNING ---
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/06/24 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt560_dis()
   DEFINE li_ac         LIKE type_t.num5

   CALL g_nmea3_d.clear()
   LET li_ac = 1

   IF cl_null(g_nmba_m.nmbadocno) OR cl_null(g_nmba_m.nmbacomp) THEN RETURN END IF

   LET g_sql = "SELECT nmea004,nmea006,SUM(nmea009),SUM(nmea012) FROM nmea_t",
               " WHERE nmeaent = '",g_enterprise,"'",
               "   AND nmeacomp = '",g_nmba_m.nmbacomp,"'",
               "   AND nmeadocno = '",g_nmba_m.nmbadocno,"'",
               " GROUP BY nmea004,nmea006"
   PREPARE anmt560_dis_prep FROM g_sql
   DECLARE anmt560_dis_curs CURSOR FOR anmt560_dis_prep

   FOREACH anmt560_dis_curs INTO g_nmea3_d[li_ac].*
      LET li_ac = li_ac + 1
   END FOREACH

   CALL g_nmea3_d.deleteElement(g_nmea3_d.getLength())


END FUNCTION]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_wc = l_wc," AND nmba003 = 'anmt560' "]]>
  </point>
  <point name="construct.c.nmba001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmba001  #顯示到畫面上
            NEXT FIELD nmba001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmba002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmba002  #顯示到畫面上
            NEXT FIELD nmba002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmba004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmba004  #顯示到畫面上
            NEXT FIELD nmba004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmba008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmba008  #顯示到畫面上
            NEXT FIELD nmba008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbacnfid  #顯示到畫面上
            NEXT FIELD nmbacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbacomp  #顯示到畫面上
            NEXT FIELD nmbacomp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbacrtdp  #顯示到畫面上
            NEXT FIELD nmbacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbacrtid  #顯示到畫面上
            NEXT FIELD nmbacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " nmba003 = 'anmt560'"
            CALL q_nmbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbadocno  #顯示到畫面上
            NEXT FIELD nmbadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbamodid  #顯示到畫面上
            NEXT FIELD nmbamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbaowndp  #顯示到畫面上
            NEXT FIELD nmbaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbaownid  #顯示到畫面上
            NEXT FIELD nmbaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmbasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = " ooef206 = 'Y'"
            CALL q_ooef001()                             #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbasite  #顯示到畫面上

            NEXT FIELD nmbasite                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.nmea004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooia001()
            DISPLAY g_qryparam.return1 TO nmea004  #顯示到畫面上
            NEXT FIELD nmea004                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.nmea006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmea006  #顯示到畫面上

            NEXT FIELD nmea006                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.nmea008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmea008  #顯示到畫面上

            NEXT FIELD nmea008                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.nmea013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_nmas002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmea013  #顯示到畫面上
            NEXT FIELD nmea013                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.nmeasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                             #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmeasite  #顯示到畫面上

            NEXT FIELD nmeasite                     #返回原欄位
]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      SELECT glaald INTO l_glaald FROM glaa_t
       WHERE glaaent = g_enterprise AND glaa014 = 'Y'
         AND glaacomp = g_nmba_m.nmbacomp
      IF NOT s_aooi200_fin_del_docno(l_glaald,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_glaald              LIKE glaa_t.glaald]]>
  </point>
  <point name="global.variable" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ TYPE type_nmea RECORD
         nmeaent        LIKE nmea_t.nmeaent,
         nmeacomp       LIKE nmea_t.nmeacomp,
         nmeadocno      LIKE nmea_t.nmeadocno,
         nmeaseq        LIKE nmea_t.nmeaseq,
         nmeasite       LIKE nmea_t.nmeasite,
         nmea001        LIKE nmea_t.nmea001,
         nmea002        LIKE nmea_t.nmea002,
         nmea003        LIKE nmea_t.nmea003,
         nmea004        LIKE nmea_t.nmea004,
         nmea005        LIKE nmea_t.nmea005,
         nmea006        LIKE nmea_t.nmea006,
         nmea007        LIKE nmea_t.nmea007,
         nmea008        LIKE nmea_t.nmea008,
         nmea009        LIKE nmea_t.nmea009,
         nmea010        LIKE nmea_t.nmea010,
         nmea011        LIKE nmea_t.nmea011,
         nmea012        LIKE nmea_t.nmea012,
         nmea013        LIKE nmea_t.nmea013,
         nmea014        LIKE nmea_t.nmea014,
         nmea015        LIKE nmea_t.nmea015,
         nmea016        LIKE nmea_t.nmea016,
         nmea017        LIKE nmea_t.nmea017
END RECORD

 TYPE type_g_nmea3_d      RECORD
                nmea004          LIKE nmea_t.nmea004,
                nmea006          LIKE nmea_t.nmea006,
                nmea009          LIKE nmea_t.nmea009,
                nmea012          LIKE nmea_t.nmea012
                                 END RECORD
DEFINE g_nmea3_d          DYNAMIC ARRAY OF type_g_nmea3_d]]>
  </point>
  <point name="idx_chk.other" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_nmea3_d.getLength() THEN
         LET g_detail_idx = g_nmea3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_nmea3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_nmea3_d.getLength() TO FORMONLY.cnt
   END IF]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_fin_create_account_center_tmp()
   CALL cl_set_combo_scc('nmea003','8310') ]]>
  </point>
  <point name="input.a.nmba001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmba_m.nmba001
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmba_m.nmba001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmba_m.nmba001_desc

]]>
  </point>
  <point name="input.a.nmba002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_nmba_m.nmba002_desc = ' '
            DISPLAY BY NAME g_nmba_m.nmba002_desc
            IF NOT cl_null(g_nmba_m.nmba002) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_nmba_m.nmba002 != g_nmba_m_t.nmba002 OR g_nmba_m_t.nmba002 IS NULL )) THEN
                  #資料存在性、有效性檢查
                  CALL s_employee_chk(g_nmba_m.nmba002) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_nmba_m.nmba002 = g_nmba_m_t.nmba002
                     CALL s_axrt300_xrca_ref('xrca003',g_nmba_m.nmba002,'','') RETURNING l_success,g_nmba_m.nmba002_desc
                     DISPLAY BY NAME g_nmba_m.nmba002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_axrt300_xrca_ref('xrca003',g_nmba_m.nmba002,'','') RETURNING l_success,g_nmba_m.nmba002_desc
            DISPLAY BY NAME g_nmba_m.nmba002,g_nmba_m.nmba002_desc
]]>
  </point>
  <point name="input.a.nmba004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmba_m.nmba004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmba_m.nmba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmba_m.nmba004_desc

]]>
  </point>
  <point name="input.a.nmbacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_nmba_m.nmbacomp) AND NOT cl_null(g_nmba_m.nmbadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_nmba_m.nmbacomp != g_nmbacomp_t  OR g_nmba_m.nmbadocno != g_nmbadocno_t )) THEN 
                  IF NOT ap_chk_notDup(g_nmba_m.nmbacomp,"SELECT COUNT(*) FROM nmba_t WHERE "||"nmbaent = '" ||g_enterprise|| "' AND "||"nmbacomp = '"||g_nmba_m.nmbacomp ||"' AND "|| "nmbadocno = '"||g_nmba_m.nmbadocno ||"'",'std-00004',0) THEN 
                     LET g_nmba_m.nmbacomp = ''
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_nmba_m.nmbacomp) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_nmba_m.nmbacomp != g_nmba_m_t.nmbacomp OR g_nmba_m_t.nmbacomp IS NULL )) THEN
                  LET l_errno = NULL
                  CALL s_fin_comp_chk(g_nmba_m.nmbacomp) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = l_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_nmba_m.nmbacomp = g_nmba_m_t.nmbacomp
                     CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT cl_null(g_nmba_m.nmbacomp)THEN
                     SELECT glaald INTO l_glaald FROM glaa_t
                      WHERE glaaent = g_enterprise AND glaa014 = 'Y'
                        AND glaacomp = g_nmba_m.nmbacomp
                     LET l_errno = NULL
                     CALL s_fin_account_center_with_ld_chk(g_nmba_m.nmbasite,l_glaald,g_user,'6','Y','',g_nmba_m.nmbadocdt) 
                        RETURNING l_success,l_errno
                     IF NOT l_success THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = l_errno
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_nmba_m.nmbacomp = g_nmba_m_t.nmbacomp
                        CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc
                        NEXT FIELD CURRENT
                     END IF   
                  END IF
               END IF
            END IF
            CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc]]>
  </point>
  <point name="input.a.nmbadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_nmba_m.nmbadocdt) THEN 
               LET l_ooab002 = ''
               SELECT ooab002 INTO l_ooab002
                 FROM ooab_t
                WHERE ooabent = g_enterprise
                  AND ooab001 = 'S-FIN-4002'
                  AND ooabsite = g_nmba_m.nmbacomp
               IF g_nmba_m.nmbadocdt < l_ooab002 THEN 
                  IF p_cmd = 'a' THEN 
                     DISPLAY '' TO nmbadocdt
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'anm-00036'
                     LET g_errparam.extend = g_nmba_m.nmbadocdt
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_nmba_m.nmbadocdt = ''
                  ELSE
                     DISPLAY '' TO nmbadocdt
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'anm-00036'
                     LET g_errparam.extend = g_nmba_m.nmbadocdt
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_nmba_m.nmbadocdt = g_nmba_m_t.nmbadocdt
                  END IF
                  NEXT FIELD nmbadocdt
               END IF
            END IF]]>
  </point>
  <point name="input.a.nmbadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_nmba_m.nmbacomp) AND NOT cl_null(g_nmba_m.nmbadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_nmba_m.nmbacomp != g_nmbacomp_t  OR g_nmba_m.nmbadocno != g_nmbadocno_t )) THEN 
                  IF NOT ap_chk_notDup(g_nmba_m.nmbadocno,"SELECT COUNT(*) FROM nmba_t WHERE "||"nmbaent = '" ||g_enterprise|| "' AND "||"nmbacomp = '"||g_nmba_m.nmbacomp ||"' AND "|| "nmbadocno = '"||g_nmba_m.nmbadocno ||"'",'std-00004',0) THEN 
                     LET g_nmba_m.nmbadocno = ''
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_nmba_m.nmbadocno) AND NOT cl_null(g_nmba_m.nmbacomp) THEN
                     SELECT glaald,glaa024 INTO l_glaald,l_glaa024 FROM glaa_t
                      WHERE glaaent = g_enterprise AND glaa014 = 'Y'
                        AND glaacomp = g_nmba_m.nmbacomp
               CALL s_aooi200_fin_chk_slip(l_glaald,l_glaa024,g_nmba_m.nmbadocno,'anmt560') RETURNING l_success
               IF l_success = FALSE THEN 
                  LET g_nmba_m.nmbadocno = g_nmba_m_t.nmbadocno
                  NEXT FIELD nmbadocno
               END IF
            END IF

            #END a]]>
  </point>
  <point name="input.a.nmbasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_nmba_m.nmbasite) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_nmba_m.nmbasite != g_nmba_m_t.nmbasite OR g_nmba_m_t.nmbasite IS NULL )) THEN
                  LET l_errno = NULL
                  CALL s_fin_account_center_chk(g_nmba_m.nmbasite,'','6',g_nmba_m_t.nmbadocdt) RETURNING l_success,l_errno
                  IF NOT cl_null(l_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = l_errno
                     LET g_errparam.extend = g_nmba_m.nmbasite
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     LET g_nmba_m.nmbasite = g_nmba_m_t.nmbasite
                     CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_nmba_m.nmbacomp) THEN
                     SELECT glaald INTO l_glaald FROM glaa_t
                      WHERE glaaent = g_enterprise AND glaa014 = 'Y'
                        AND glaacomp = g_nmba_m.nmbacomp

                     LET l_errno = NULL
                     CALL s_fin_account_center_with_ld_chk(g_nmba_m.nmbasite,l_glaald,g_nmba_m.nmba002,'6','N','',g_nmba_m_t.nmbadocdt)
                        RETURNING l_success,l_errno
                     IF NOT cl_null(l_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = l_errno
                        LET g_errparam.extend = g_nmba_m.nmbasite
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                     
                        LET g_nmba_m.nmbasite = g_nmba_m_t.nmbasite
                        CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF 
            #取得帳務組織下所屬成員
            CALL s_fin_account_center_sons_query('6',g_nmba_m.nmbasite,g_nmba_m.nmbadocdt,'1')
            CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc
]]>
  </point>
  <point name="input.a.page1.nmea009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_nmea_d[l_ac].nmea009) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.nmea013" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_nmea_d[l_ac].nmea013) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_nmea_d[l_ac].nmea013 != g_nmea_d_t.nmea013 OR g_nmea_d_t.nmea013 IS NULL )) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_nmea_d[l_ac].nmea013
                  LET g_chkparam.arg2 = g_nmba_m.nmbacomp

                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_nmas002_1") THEN
                     #檢查成功時後續處理
                     SELECT nmas003 INTO g_nmea_d[l_ac].nmea006 FROM nmas_t WHERE nmasent = g_enterprise
                        AND nmas001 = g_nmea_d[l_ac].nmea008
                        AND nmas002 = g_nmea_d[l_ac].nmea013
                     DISPLAY g_nmea_d[l_ac].nmea006 TO s_detail1[l_ac].nmea006
                  ELSE
                     #檢查失敗時後續處理
                     LET g_nmea_d[l_ac].nmea013 = g_nmea_d_t.nmea013
                     LET g_nmea_d[l_ac].nmea006 = g_nmea_d_t.nmea006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.nmea014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmea_d[l_ac].nmea014
            CALL ap_ref_array2(g_ref_fields,"SELECT nmajl003 FROM nmajl_t WHERE nmajlent='"||g_enterprise||"' AND nmajl001=? AND nmajl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmea_d[l_ac].nmea014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmea_d[l_ac].nmea014_desc

]]>
  </point>
  <point name="input.a.page1.nmeaseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_nmba_m.nmbacomp IS NOT NULL AND g_nmba_m.nmbadocno IS NOT NULL AND g_nmea_d[g_detail_idx].nmeaseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_nmba_m.nmbacomp != g_nmbacomp_t OR g_nmba_m.nmbadocno != g_nmbadocno_t OR g_nmea_d[g_detail_idx].nmeaseq != g_nmea_d_t.nmeaseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM nmea_t WHERE "||"nmeaent = '" ||g_enterprise|| "' AND "||"nmeacomp = '"||g_nmba_m.nmbacomp ||"' AND "|| "nmeadocno = '"||g_nmba_m.nmbadocno ||"' AND "|| "nmeaseq = '"||g_nmea_d[g_detail_idx].nmeaseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.nmeasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmea_d[l_ac].nmeasite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmea_d[l_ac].nmeasite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmea_d[l_ac].nmeasite_desc

]]>
  </point>
  <point name="input.a.page2.nmeaseq_2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_nmba_m.nmbacomp IS NOT NULL AND g_nmba_m.nmbadocno IS NOT NULL AND g_nmea2_d[g_detail_idx].nmeaseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_nmba_m.nmbacomp != g_nmbacomp_t OR g_nmba_m.nmbadocno != g_nmbadocno_t OR g_nmea2_d[g_detail_idx].nmeaseq != g_nmea2_d_t.nmeaseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM nmea_t WHERE "||"nmeaent = '" ||g_enterprise|| "' AND "||"nmeacomp = '"||g_nmba_m.nmbacomp ||"' AND "|| "nmeadocno = '"||g_nmba_m.nmbadocno ||"' AND "|| "nmeaseq = '"||g_nmea2_d[g_detail_idx].nmeaseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.after_input" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL anmt560_dis()]]>
  </point>
  <point name="input.c.nmba001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmba_m.nmba001             #給予default值
            LET g_qryparam.default2 = "" #g_nmba_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooef001()                                #呼叫開窗

            LET g_nmba_m.nmba001 = g_qryparam.return1              
            #LET g_nmba_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_nmba_m.nmba001 TO nmba001              #
            #DISPLAY g_nmba_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD nmba001                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmba002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmba_m.nmba002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooag001_2()                                #呼叫開窗

            LET g_nmba_m.nmba002 = g_qryparam.return1              

            DISPLAY g_nmba_m.nmba002 TO nmba002              #

            NEXT FIELD nmba002                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmba004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmba_m.nmba004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_pmaa001()                                #呼叫開窗

            LET g_nmba_m.nmba004 = g_qryparam.return1              

            DISPLAY g_nmba_m.nmba004 TO nmba004              #

            NEXT FIELD nmba004                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmba008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmba_m.nmba008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooag001_2()                                #呼叫開窗

            LET g_nmba_m.nmba008 = g_qryparam.return1              

            DISPLAY g_nmba_m.nmba008 TO nmba008              #

            NEXT FIELD nmba008                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmbacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #取得帳務組織下所屬成員
            CALL s_fin_account_center_sons_query('6',g_nmba_m.nmbasite,g_nmba_m.nmbadocdt,'1')
            CALL s_fin_account_center_comp_str() RETURNING l_origin_str
            #將取回的字串轉換為SQL條件
            CALL anmt560_get_ooef001_wc(l_origin_str) RETURNING l_origin_str  
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmba_m.nmbacomp             #給予default值
            LET g_qryparam.default2 = "" #g_nmba_m.ooefl003 #說明(簡稱)
            LET g_qryparam.where = " ooef001 IN ",l_origin_str CLIPPED
            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooef001()                                #呼叫開窗

            LET g_nmba_m.nmbacomp = g_qryparam.return1              
            #LET g_nmba_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_nmba_m.nmbacomp TO nmbacomp              #
            #DISPLAY g_nmba_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD nmbacomp                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmbadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmba_m.nmbadocno             #給予default值

            #給予arg
            SELECT glaald,glaa024 INTO l_glaald,l_glaa024 FROM glaa_t
             WHERE glaaent = g_enterprise AND glaa014 = 'Y'
               AND glaacomp = g_nmba_m.nmbacomp
            LET g_qryparam.where = "ooba001 = '",l_glaa024,"' AND oobx003 = 'anmt560'"


            CALL q_ooba002_4()                                #呼叫開窗

            LET g_nmba_m.nmbadocno = g_qryparam.return1              

            DISPLAY g_nmba_m.nmbadocno TO nmbadocno              #

            NEXT FIELD nmbadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmbasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmba_m.nmbasite             #給予default值
            LET g_qryparam.where = " ooef206 = 'Y'"
            
            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_nmba_m.nmbasite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmba_m.nmbasite TO nmbasite              #顯示到畫面上
            CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc
            #取得帳務組織下所屬成員
            CALL s_fin_account_center_sons_query('6',g_nmba_m.nmbasite,g_nmba_m.nmbadocdt,'1')
            NEXT FIELD nmbasite                          #返回原欄位
]]>
  </point>
  <point name="input.c.page1.nmea013" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmea_d[l_ac].nmea013             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_nmba_m.nmbacomp


            CALL q_nmas002()                                #呼叫開窗

            LET g_nmea_d[l_ac].nmea013  = g_qryparam.return1              

            DISPLAY g_nmea_d[l_ac].nmea013 TO s_detail1[l_ac].nmea013              #

            NEXT FIELD nmea013                          #返回原欄位
]]>
  </point>
  <point name="input.c.page1.nmea014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmea_d[l_ac].nmea014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_nmaj001()                                #呼叫開窗

            LET g_nmea_d[l_ac].nmea014 = g_qryparam.return1              

            DISPLAY g_nmea_d[l_ac].nmea014 TO nmea014              #

            NEXT FIELD nmea014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.nmeasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE gzze_t.gzze001
   DEFINE  l_glaald              LIKE glaa_t.glaald
   DEFINE  l_glaa003             LIKE glaa_t.glaa003
   DEFINE  l_glaa024             LIKE glaa_t.glaa024
   DEFINE  l_ooab002             LIKE ooab_t.ooab002
   DEFINE  l_origin_str          STRING]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL anmt560_ins_nmea() RETURNING l_success]]>
  </point>
  <point name="input.head.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               SELECT glaald,glaa003,glaa024 INTO l_glaald,l_glaa003,l_glaa024 FROM glaa_t
                WHERE glaaent = g_enterprise AND glaa014 = 'Y'
                  AND glaacomp = g_nmba_m.nmbacomp
               CALL s_aooi200_fin_gen_docno(l_glaald,l_glaa024,l_glaa003,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_prog)
                     RETURNING l_success,g_nmba_m.nmbadocno
               IF l_success  = 0  THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_nmba_m.nmbadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
              
                  #RETURN  #2015/05/08 by 02599 mark
                  NEXT FIELD nmbadocno #2015/05/08 by 02599 add
               END IF ]]>
  </point>
  <point name="insert.cancel" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         DISPLAY '' TO nmba003_desc]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_nmba_m.nmbadocdt = g_today   #立帳日期
      #取得預設的資金中心,因新增階段的時候,並不會知道site,所以以登入人員做為依據
      CALL s_fin_get_account_center('',g_user,'6',g_today) RETURNING g_sub_success,g_nmba_m.nmbasite,g_errno

      SELECT ooef017 INTO g_nmba_m.nmbacomp
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_nmba_m.nmbasite

      LET g_nmba_m.nmba002 = g_user
      LET g_nmba_m.nmba003 = 'anmt560'
      DISPLAY 'anmt560' TO nmba003_desc

      CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbasite,'','') RETURNING l_success,g_nmba_m.nmbasite_desc
      CALL s_axrt300_xrca_ref('xrcasite',g_nmba_m.nmbacomp,'','') RETURNING l_success,g_nmba_m.nmbacomp_desc
]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success         LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_nmba_m.nmbastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="show.after" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL anmt560_dis()]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DISPLAY g_nmba_m.nmba003 TO nmba003_desc]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF lc_state = 'Y' THEN
      LET g_nmba_m.nmbacnfid = g_user 
      LET g_nmba_m.nmbacnfdt = cl_get_current()
   ELSE
      LET g_nmba_m.nmbacnfid = ''
      LET g_nmba_m.nmbacnfdt = ''
   END IF
   UPDATE nmba_t SET nmbacnfid = g_nmba_m.nmbacnfid,
                     nmbacnfdt = g_nmba_m.nmbacnfdt 
    WHERE nmbaent = g_enterprise AND nmbacomp = g_nmba_m.nmbacomp
      AND nmbadocno = g_nmba_m.nmbadocno]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      HIDE OPTION "verify"
      HIDE OPTION "unverify"]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL anmt560_confirm_chk() RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success         LIKE type_t.num5]]>
  </point>
  <point name="statechange.unconfirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL anmt560_unconfirm_chk() RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_nmea3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL anmt560_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac

            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL anmt560_idx_chk() 

         END DISPLAY]]>
  </point>
  <section id="anmt560.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION anmt560_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.b_fill" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION anmt560_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_nmea_d.clear()    #g_nmea_d 單頭及單身 
   CALL g_nmea2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF anmt560_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE nmeaseq,nmeasite,nmea002,nmea017,nmea003,nmea004,nmea001,nmea016, 
             nmea007,nmea008,nmea013,nmea006,nmea009,nmea012,nmea018,nmea019,nmeaseq,nmea005,nmea010, 
             nmea011,nmea014,nmea015 ,t1.ooefl003 FROM nmea_t",   
                     " INNER JOIN nmba_t ON nmbacomp = nmeacomp ",
                     " AND nmbadocno = nmeadocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=nmeasite AND t1.ooefl002='"||g_dlang||"' ",
 
                     " WHERE nmeaent=? AND nmeacomp=? AND nmeadocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY nmea_t.nmeaseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE anmt560_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR anmt560_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
                                               
      FOREACH b_fill_cs INTO g_nmea_d[l_ac].nmeaseq,g_nmea_d[l_ac].nmeasite,g_nmea_d[l_ac].nmea002,g_nmea_d[l_ac].nmea017, 
          g_nmea_d[l_ac].nmea003,g_nmea_d[l_ac].nmea004,g_nmea_d[l_ac].nmea001,g_nmea_d[l_ac].nmea016, 
          g_nmea_d[l_ac].nmea007,g_nmea_d[l_ac].nmea008,g_nmea_d[l_ac].nmea013,g_nmea_d[l_ac].nmea006, 
          g_nmea_d[l_ac].nmea009,g_nmea_d[l_ac].nmea012,g_nmea_d[l_ac].nmea018,g_nmea_d[l_ac].nmea019, 
          g_nmea2_d[l_ac].nmeaseq,g_nmea2_d[l_ac].nmea005,g_nmea2_d[l_ac].nmea010,g_nmea2_d[l_ac].nmea011, 
          g_nmea2_d[l_ac].nmea014,g_nmea2_d[l_ac].nmea015,g_nmea_d[l_ac].nmeasite_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_nmea_d.deleteElement(g_nmea_d.getLength())
   CALL g_nmea2_d.deleteElement(g_nmea2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE anmt560_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_nmea_d.getLength()
      LET g_nmea_d_mask_o[l_ac].* =  g_nmea_d[l_ac].*
      CALL anmt560_nmea_t_mask()
      LET g_nmea_d_mask_n[l_ac].* =  g_nmea_d[l_ac].*
   END FOR
   
   LET g_nmea2_d_mask_o.* =  g_nmea2_d.*
   FOR l_ac = 1 TO g_nmea2_d.getLength()
      LET g_nmea2_d_mask_o[l_ac].* =  g_nmea2_d[l_ac].*
      CALL anmt560_nmea_t_mask()
      LET g_nmea2_d_mask_n[l_ac].* =  g_nmea2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.b_fill2" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION anmt560_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL anmt560_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.browser_fill" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION anmt560_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE nmbacomp,nmbadocno ",
                      " FROM nmba_t ",
                      " ",
                      " LEFT JOIN nmea_t ON nmeaent = nmbaent AND nmbacomp = nmeacomp AND nmbadocno = nmeadocno ", "  ",
                      #add-point:browser_fill段sql(nmea_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE nmbaent = '" ||g_enterprise|| "' AND nmeaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("nmba_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE nmbacomp,nmbadocno ",
                      " FROM nmba_t ", 
                      "  ",
                      "  ",
                      " WHERE nmbaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("nmba_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_nmba_m.* TO NULL
      CALL g_nmea_d.clear()        
      CALL g_nmea2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.nmbacomp,t0.nmbadocno Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.nmbastus,t0.nmbacomp,t0.nmbadocno ",
               " FROM nmba_t t0",
               "  ",
               "  LEFT JOIN nmea_t ON nmeaent = nmbaent AND nmbacomp = nmeacomp AND nmbadocno = nmeadocno ", "  ", 
               #add-point:browser_fill段sql(nmea_t1)
               {<point name="browser_fill.join.nmea_t1"/>}
               #end add-point
 
 
               "  ",
               
               " WHERE t0.nmbaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("nmba_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY nmbacomp,nmbadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"nmba_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_nmbacomp,g_browser[g_cnt].b_nmbadocno 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "V"
            LET g_browser[g_cnt].b_statepic = "stus/16/verify.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_nmbacomp) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.construct" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION anmt560_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_nmba_m.* TO NULL
   CALL g_nmea_d.clear()        
   CALL g_nmea2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON nmbasite,nmba002,nmbacomp,nmbadocno,nmbadocdt,nmba007,nmba003,nmbastus, 
          nmba001,nmba004,nmba005,nmba006,nmba008,nmba009,nmba010,nmba011,nmbaownid,nmbaowndp,nmbacrtid, 
          nmbacrtdp,nmbacrtdt,nmbamodid,nmbamoddt,nmbacnfid,nmbacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<nmbacrtdt>>----
         AFTER FIELD nmbacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<nmbamoddt>>----
         AFTER FIELD nmbamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmbacnfdt>>----
         AFTER FIELD nmbacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmbapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.nmbasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbasite
            #add-point:ON ACTION controlp INFIELD nmbasite
            {<point name="construct.c.nmbasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbasite
            #add-point:BEFORE FIELD nmbasite
            {<point name="construct.b.nmbasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbasite
            
            #add-point:AFTER FIELD nmbasite
            {<point name="construct.a.nmbasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba002
            #add-point:ON ACTION controlp INFIELD nmba002
            {<point name="construct.c.nmba002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba002
            #add-point:BEFORE FIELD nmba002
            {<point name="construct.b.nmba002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba002
            
            #add-point:AFTER FIELD nmba002
            {<point name="construct.a.nmba002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmbacomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbacomp
            #add-point:ON ACTION controlp INFIELD nmbacomp
            {<point name="construct.c.nmbacomp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbacomp
            #add-point:BEFORE FIELD nmbacomp
            {<point name="construct.b.nmbacomp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbacomp
            
            #add-point:AFTER FIELD nmbacomp
            {<point name="construct.a.nmbacomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmbadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbadocno
            #add-point:ON ACTION controlp INFIELD nmbadocno
            {<point name="construct.c.nmbadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbadocno
            #add-point:BEFORE FIELD nmbadocno
            {<point name="construct.b.nmbadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbadocno
            
            #add-point:AFTER FIELD nmbadocno
            {<point name="construct.a.nmbadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbadocdt
            #add-point:BEFORE FIELD nmbadocdt
            {<point name="construct.b.nmbadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbadocdt
            
            #add-point:AFTER FIELD nmbadocdt
            {<point name="construct.a.nmbadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmbadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbadocdt
            #add-point:ON ACTION controlp INFIELD nmbadocdt
            {<point name="construct.c.nmbadocdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba007
            #add-point:BEFORE FIELD nmba007
            {<point name="construct.b.nmba007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba007
            
            #add-point:AFTER FIELD nmba007
            {<point name="construct.a.nmba007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba007
            #add-point:ON ACTION controlp INFIELD nmba007
            {<point name="construct.c.nmba007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba003
            #add-point:BEFORE FIELD nmba003
            {<point name="construct.b.nmba003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba003
            
            #add-point:AFTER FIELD nmba003
            {<point name="construct.a.nmba003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba003
            #add-point:ON ACTION controlp INFIELD nmba003
            {<point name="construct.c.nmba003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbastus
            #add-point:BEFORE FIELD nmbastus
            {<point name="construct.b.nmbastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbastus
            
            #add-point:AFTER FIELD nmbastus
            {<point name="construct.a.nmbastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmbastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbastus
            #add-point:ON ACTION controlp INFIELD nmbastus
            {<point name="construct.c.nmbastus" />}
            #END add-point
 
         #Ctrlp:construct.c.nmba001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba001
            #add-point:ON ACTION controlp INFIELD nmba001
            {<point name="construct.c.nmba001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba001
            #add-point:BEFORE FIELD nmba001
            {<point name="construct.b.nmba001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba001
            
            #add-point:AFTER FIELD nmba001
            {<point name="construct.a.nmba001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba004
            #add-point:ON ACTION controlp INFIELD nmba004
            {<point name="construct.c.nmba004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba004
            #add-point:BEFORE FIELD nmba004
            {<point name="construct.b.nmba004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba004
            
            #add-point:AFTER FIELD nmba004
            {<point name="construct.a.nmba004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba005
            #add-point:BEFORE FIELD nmba005
            {<point name="construct.b.nmba005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba005
            
            #add-point:AFTER FIELD nmba005
            {<point name="construct.a.nmba005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba005
            #add-point:ON ACTION controlp INFIELD nmba005
            {<point name="construct.c.nmba005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba006
            #add-point:BEFORE FIELD nmba006
            {<point name="construct.b.nmba006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba006
            
            #add-point:AFTER FIELD nmba006
            {<point name="construct.a.nmba006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba006
            #add-point:ON ACTION controlp INFIELD nmba006
            {<point name="construct.c.nmba006" />}
            #END add-point
 
         #Ctrlp:construct.c.nmba008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba008
            #add-point:ON ACTION controlp INFIELD nmba008
            {<point name="construct.c.nmba008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba008
            #add-point:BEFORE FIELD nmba008
            {<point name="construct.b.nmba008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba008
            
            #add-point:AFTER FIELD nmba008
            {<point name="construct.a.nmba008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba009
            #add-point:BEFORE FIELD nmba009
            {<point name="construct.b.nmba009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba009
            
            #add-point:AFTER FIELD nmba009
            {<point name="construct.a.nmba009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba009
            #add-point:ON ACTION controlp INFIELD nmba009
            {<point name="construct.c.nmba009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba010
            #add-point:BEFORE FIELD nmba010
            {<point name="construct.b.nmba010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba010
            
            #add-point:AFTER FIELD nmba010
            {<point name="construct.a.nmba010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba010
            #add-point:ON ACTION controlp INFIELD nmba010
            {<point name="construct.c.nmba010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba011
            #add-point:BEFORE FIELD nmba011
            {<point name="construct.b.nmba011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba011
            
            #add-point:AFTER FIELD nmba011
            {<point name="construct.a.nmba011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmba011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba011
            #add-point:ON ACTION controlp INFIELD nmba011
            {<point name="construct.c.nmba011" />}
            #END add-point
 
         #Ctrlp:construct.c.nmbaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbaownid
            #add-point:ON ACTION controlp INFIELD nmbaownid
            {<point name="construct.c.nmbaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbaownid
            #add-point:BEFORE FIELD nmbaownid
            {<point name="construct.b.nmbaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbaownid
            
            #add-point:AFTER FIELD nmbaownid
            {<point name="construct.a.nmbaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmbaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbaowndp
            #add-point:ON ACTION controlp INFIELD nmbaowndp
            {<point name="construct.c.nmbaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbaowndp
            #add-point:BEFORE FIELD nmbaowndp
            {<point name="construct.b.nmbaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbaowndp
            
            #add-point:AFTER FIELD nmbaowndp
            {<point name="construct.a.nmbaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmbacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbacrtid
            #add-point:ON ACTION controlp INFIELD nmbacrtid
            {<point name="construct.c.nmbacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbacrtid
            #add-point:BEFORE FIELD nmbacrtid
            {<point name="construct.b.nmbacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbacrtid
            
            #add-point:AFTER FIELD nmbacrtid
            {<point name="construct.a.nmbacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmbacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbacrtdp
            #add-point:ON ACTION controlp INFIELD nmbacrtdp
            {<point name="construct.c.nmbacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbacrtdp
            #add-point:BEFORE FIELD nmbacrtdp
            {<point name="construct.b.nmbacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbacrtdp
            
            #add-point:AFTER FIELD nmbacrtdp
            {<point name="construct.a.nmbacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbacrtdt
            #add-point:BEFORE FIELD nmbacrtdt
            {<point name="construct.b.nmbacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.nmbamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbamodid
            #add-point:ON ACTION controlp INFIELD nmbamodid
            {<point name="construct.c.nmbamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbamodid
            #add-point:BEFORE FIELD nmbamodid
            {<point name="construct.b.nmbamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbamodid
            
            #add-point:AFTER FIELD nmbamodid
            {<point name="construct.a.nmbamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbamoddt
            #add-point:BEFORE FIELD nmbamoddt
            {<point name="construct.b.nmbamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.nmbacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbacnfid
            #add-point:ON ACTION controlp INFIELD nmbacnfid
            {<point name="construct.c.nmbacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbacnfid
            #add-point:BEFORE FIELD nmbacnfid
            {<point name="construct.b.nmbacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbacnfid
            
            #add-point:AFTER FIELD nmbacnfid
            {<point name="construct.a.nmbacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbacnfdt
            #add-point:BEFORE FIELD nmbacnfdt
            {<point name="construct.b.nmbacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON nmeaseq,nmeasite,nmea002,nmea017,nmea003,nmea004,nmea001,nmea016,nmea007, 
          nmea008,nmea013,nmea006,nmea009,nmea012,nmea018,nmea019,nmea005,nmea010,nmea011,nmea014,nmea015 

           FROM s_detail1[1].nmeaseq,s_detail1[1].nmeasite,s_detail1[1].nmea002,s_detail1[1].nmea017, 
               s_detail1[1].nmea003,s_detail1[1].nmea004,s_detail1[1].nmea001,s_detail1[1].nmea016,s_detail1[1].nmea007, 
               s_detail1[1].nmea008,s_detail1[1].nmea013,s_detail1[1].nmea006,s_detail1[1].nmea009,s_detail1[1].nmea012, 
               s_detail1[1].nmea018,s_detail1[1].nmea019,s_detail2[1].nmea005,s_detail2[1].nmea010,s_detail2[1].nmea011, 
               s_detail2[1].nmea014,s_detail2[1].nmea015
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmeaseq
            #add-point:BEFORE FIELD nmeaseq
            {<point name="construct.b.page1.nmeaseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmeaseq
            
            #add-point:AFTER FIELD nmeaseq
            {<point name="construct.a.page1.nmeaseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmeaseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmeaseq
            #add-point:ON ACTION controlp INFIELD nmeaseq
            {<point name="construct.c.page1.nmeaseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmeasite
            #add-point:BEFORE FIELD nmeasite
            {<point name="construct.b.page1.nmeasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmeasite
            
            #add-point:AFTER FIELD nmeasite
            {<point name="construct.a.page1.nmeasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmeasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmeasite
            #add-point:ON ACTION controlp INFIELD nmeasite
            {<point name="construct.c.page1.nmeasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea002
            #add-point:BEFORE FIELD nmea002
            {<point name="construct.b.page1.nmea002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea002
            
            #add-point:AFTER FIELD nmea002
            {<point name="construct.a.page1.nmea002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea002
            #add-point:ON ACTION controlp INFIELD nmea002
            {<point name="construct.c.page1.nmea002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea017
            #add-point:BEFORE FIELD nmea017
            {<point name="construct.b.page1.nmea017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea017
            
            #add-point:AFTER FIELD nmea017
            {<point name="construct.a.page1.nmea017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea017
            #add-point:ON ACTION controlp INFIELD nmea017
            {<point name="construct.c.page1.nmea017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea003
            #add-point:BEFORE FIELD nmea003
            {<point name="construct.b.page1.nmea003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea003
            
            #add-point:AFTER FIELD nmea003
            {<point name="construct.a.page1.nmea003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea003
            #add-point:ON ACTION controlp INFIELD nmea003
            {<point name="construct.c.page1.nmea003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea004
            #add-point:BEFORE FIELD nmea004
            {<point name="construct.b.page1.nmea004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea004
            
            #add-point:AFTER FIELD nmea004
            {<point name="construct.a.page1.nmea004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea004
            #add-point:ON ACTION controlp INFIELD nmea004
            {<point name="construct.c.page1.nmea004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea001
            #add-point:BEFORE FIELD nmea001
            {<point name="construct.b.page1.nmea001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea001
            
            #add-point:AFTER FIELD nmea001
            {<point name="construct.a.page1.nmea001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea001
            #add-point:ON ACTION controlp INFIELD nmea001
            {<point name="construct.c.page1.nmea001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea016
            #add-point:BEFORE FIELD nmea016
            {<point name="construct.b.page1.nmea016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea016
            
            #add-point:AFTER FIELD nmea016
            {<point name="construct.a.page1.nmea016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea016
            #add-point:ON ACTION controlp INFIELD nmea016
            {<point name="construct.c.page1.nmea016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea007
            #add-point:BEFORE FIELD nmea007
            {<point name="construct.b.page1.nmea007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea007
            
            #add-point:AFTER FIELD nmea007
            {<point name="construct.a.page1.nmea007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea007
            #add-point:ON ACTION controlp INFIELD nmea007
            {<point name="construct.c.page1.nmea007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea008
            #add-point:BEFORE FIELD nmea008
            {<point name="construct.b.page1.nmea008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea008
            
            #add-point:AFTER FIELD nmea008
            {<point name="construct.a.page1.nmea008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea008
            #add-point:ON ACTION controlp INFIELD nmea008
            {<point name="construct.c.page1.nmea008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea013
            #add-point:BEFORE FIELD nmea013
            {<point name="construct.b.page1.nmea013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea013
            
            #add-point:AFTER FIELD nmea013
            {<point name="construct.a.page1.nmea013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea013
            #add-point:ON ACTION controlp INFIELD nmea013
            {<point name="construct.c.page1.nmea013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea006
            #add-point:BEFORE FIELD nmea006
            {<point name="construct.b.page1.nmea006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea006
            
            #add-point:AFTER FIELD nmea006
            {<point name="construct.a.page1.nmea006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea006
            #add-point:ON ACTION controlp INFIELD nmea006
            {<point name="construct.c.page1.nmea006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea009
            #add-point:BEFORE FIELD nmea009
            {<point name="construct.b.page1.nmea009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea009
            
            #add-point:AFTER FIELD nmea009
            {<point name="construct.a.page1.nmea009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea009
            #add-point:ON ACTION controlp INFIELD nmea009
            {<point name="construct.c.page1.nmea009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea012
            #add-point:BEFORE FIELD nmea012
            {<point name="construct.b.page1.nmea012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea012
            
            #add-point:AFTER FIELD nmea012
            {<point name="construct.a.page1.nmea012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea012
            #add-point:ON ACTION controlp INFIELD nmea012
            {<point name="construct.c.page1.nmea012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea018
            #add-point:BEFORE FIELD nmea018
            {<point name="construct.b.page1.nmea018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea018
            
            #add-point:AFTER FIELD nmea018
            {<point name="construct.a.page1.nmea018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea018
            #add-point:ON ACTION controlp INFIELD nmea018
            {<point name="construct.c.page1.nmea018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea019
            #add-point:BEFORE FIELD nmea019
            {<point name="construct.b.page1.nmea019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea019
            
            #add-point:AFTER FIELD nmea019
            {<point name="construct.a.page1.nmea019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmea019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea019
            #add-point:ON ACTION controlp INFIELD nmea019
            {<point name="construct.c.page1.nmea019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea005
            #add-point:BEFORE FIELD nmea005
            {<point name="construct.b.page2.nmea005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea005
            
            #add-point:AFTER FIELD nmea005
            {<point name="construct.a.page2.nmea005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.nmea005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea005
            #add-point:ON ACTION controlp INFIELD nmea005
            {<point name="construct.c.page2.nmea005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea010
            #add-point:BEFORE FIELD nmea010
            {<point name="construct.b.page2.nmea010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea010
            
            #add-point:AFTER FIELD nmea010
            {<point name="construct.a.page2.nmea010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.nmea010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea010
            #add-point:ON ACTION controlp INFIELD nmea010
            {<point name="construct.c.page2.nmea010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea011
            #add-point:BEFORE FIELD nmea011
            {<point name="construct.b.page2.nmea011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea011
            
            #add-point:AFTER FIELD nmea011
            {<point name="construct.a.page2.nmea011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.nmea011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea011
            #add-point:ON ACTION controlp INFIELD nmea011
            {<point name="construct.c.page2.nmea011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea014
            #add-point:BEFORE FIELD nmea014
            {<point name="construct.b.page2.nmea014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea014
            
            #add-point:AFTER FIELD nmea014
            {<point name="construct.a.page2.nmea014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.nmea014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea014
            #add-point:ON ACTION controlp INFIELD nmea014
            {<point name="construct.c.page2.nmea014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea015
            #add-point:BEFORE FIELD nmea015
            {<point name="construct.b.page2.nmea015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea015
            
            #add-point:AFTER FIELD nmea015
            {<point name="construct.a.page2.nmea015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.nmea015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea015
            #add-point:ON ACTION controlp INFIELD nmea015
            {<point name="construct.c.page2.nmea015" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "nmba_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "nmea_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.default_search" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION anmt560_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " nmbacomp = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " nmbadocno = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "nmba_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "nmea_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.delete" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION anmt560_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_nmba_m.nmbacomp IS NULL
   OR g_nmba_m.nmbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN anmt560_cl USING g_enterprise,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN anmt560_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE anmt560_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmt560_master_referesh USING g_nmba_m.nmbacomp,g_nmba_m.nmbadocno INTO g_nmba_m.nmbasite, 
       g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008, 
       g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
       g_nmba_m.nmbacnfdt,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp_desc,g_nmba_m.nmba001_desc, 
       g_nmba_m.nmba004_desc,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid_desc, 
       g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbacnfid_desc
   
   #檢查是否允許此動作
   IF NOT anmt560_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_nmba_m_mask_o.* =  g_nmba_m.*
   CALL anmt560_nmba_t_mask()
   LET g_nmba_m_mask_n.* =  g_nmba_m.*
   
   CALL anmt560_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL anmt560_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_nmbacomp_t = g_nmba_m.nmbacomp
      LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
 
      DELETE FROM nmba_t
       WHERE nmbaent = g_enterprise AND nmbacomp = g_nmba_m.nmbacomp
         AND nmbadocno = g_nmba_m.nmbadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_nmba_m.nmbacomp 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM nmea_t
       WHERE nmeaent = g_enterprise AND nmeacomp = g_nmba_m.nmbacomp
         AND nmeadocno = g_nmba_m.nmbadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "nmea_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE anmt560_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_nmea_d.clear() 
      CALL g_nmea2_d.clear()       
 
     
      CALL anmt560_ui_browser_refresh()  
      #CALL anmt560_ui_headershow()  
      #CALL anmt560_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL anmt560_browser_fill("")
         CALL anmt560_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE anmt560_cl
 
   #功能已完成,通報訊息中心
   CALL anmt560_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="anmt560.delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION anmt560_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM nmea_t
       WHERE nmeaent = g_enterprise AND
         nmeacomp = ps_keys_bak[1] AND nmeadocno = ps_keys_bak[2] AND nmeaseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_nmea_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_nmea2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000011
#+ 
#+ Filename...: anmt560
#+ Description: 第三方結算作業
#+ Creator....: 01727(2015-04-23 14:46:06)
#+ Modifier...: 01727(2015-06-30 17:15:39) -SD/PR-
]]>
  </section>
  <section id="anmt560.detail_reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION anmt560_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE nmea_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE anmt560_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE anmt560_detail AS ",
                "SELECT * FROM nmea_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO anmt560_detail SELECT * FROM nmea_t 
                                         WHERE nmeaent = g_enterprise AND nmeacomp = g_nmbacomp_t
                                         AND nmeadocno = g_nmbadocno_t
 
   
   #將key修正為調整後   
   UPDATE anmt560_detail 
      #更新key欄位
      SET nmeacomp = g_nmba_m.nmbacomp
          , nmeadocno = g_nmba_m.nmbadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO nmea_t SELECT * FROM anmt560_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE anmt560_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_nmbacomp_t = g_nmba_m.nmbacomp
   LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION anmt560_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.fetch" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION anmt560_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_nmba_m.nmbacomp = g_browser[g_current_idx].b_nmbacomp
   LET g_nmba_m.nmbadocno = g_browser[g_current_idx].b_nmbadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE anmt560_master_referesh USING g_nmba_m.nmbacomp,g_nmba_m.nmbadocno INTO g_nmba_m.nmbasite, 
       g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008, 
       g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
       g_nmba_m.nmbacnfdt,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp_desc,g_nmba_m.nmba001_desc, 
       g_nmba_m.nmba004_desc,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid_desc, 
       g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbacnfid_desc
   
   #遮罩相關處理
   LET g_nmba_m_mask_o.* =  g_nmba_m.*
   CALL anmt560_nmba_t_mask()
   LET g_nmba_m_mask_n.* =  g_nmba_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmt560_set_act_visible()   
   CALL anmt560_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_nmba_m_t.* = g_nmba_m.*
   LET g_nmba_m_o.* = g_nmba_m.*
   
   LET g_data_owner = g_nmba_m.nmbaownid      
   LET g_data_dept  = g_nmba_m.nmbaowndp
   
   #重新顯示   
   CALL anmt560_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION anmt560_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.global" ver="12" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:38)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_nmba_m        RECORD
       nmbasite LIKE nmba_t.nmbasite, 
   nmbasite_desc LIKE type_t.chr80, 
   nmba002 LIKE nmba_t.nmba002, 
   nmba002_desc LIKE type_t.chr80, 
   nmbacomp LIKE nmba_t.nmbacomp, 
   nmbacomp_desc LIKE type_t.chr80, 
   nmbadocno LIKE nmba_t.nmbadocno, 
   nmbadocdt LIKE nmba_t.nmbadocdt, 
   nmba007 LIKE nmba_t.nmba007, 
   nmba003 LIKE nmba_t.nmba003, 
   nmbastus LIKE nmba_t.nmbastus, 
   nmba001 LIKE nmba_t.nmba001, 
   nmba001_desc LIKE type_t.chr80, 
   nmba004 LIKE nmba_t.nmba004, 
   nmba004_desc LIKE type_t.chr80, 
   nmba005 LIKE nmba_t.nmba005, 
   nmba006 LIKE nmba_t.nmba006, 
   nmba008 LIKE nmba_t.nmba008, 
   nmba009 LIKE nmba_t.nmba009, 
   nmba010 LIKE nmba_t.nmba010, 
   nmba011 LIKE nmba_t.nmba011, 
   nmbaownid LIKE nmba_t.nmbaownid, 
   nmbaownid_desc LIKE type_t.chr80, 
   nmbaowndp LIKE nmba_t.nmbaowndp, 
   nmbaowndp_desc LIKE type_t.chr80, 
   nmbacrtid LIKE nmba_t.nmbacrtid, 
   nmbacrtid_desc LIKE type_t.chr80, 
   nmbacrtdp LIKE nmba_t.nmbacrtdp, 
   nmbacrtdp_desc LIKE type_t.chr80, 
   nmbacrtdt LIKE nmba_t.nmbacrtdt, 
   nmbamodid LIKE nmba_t.nmbamodid, 
   nmbamodid_desc LIKE type_t.chr80, 
   nmbamoddt LIKE nmba_t.nmbamoddt, 
   nmbacnfid LIKE nmba_t.nmbacnfid, 
   nmbacnfid_desc LIKE type_t.chr80, 
   nmbacnfdt LIKE nmba_t.nmbacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_nmea_d        RECORD
       nmeaseq LIKE nmea_t.nmeaseq, 
   nmeasite LIKE nmea_t.nmeasite, 
   nmeasite_desc LIKE type_t.chr500, 
   nmea002 LIKE nmea_t.nmea002, 
   nmea017 LIKE nmea_t.nmea017, 
   nmea003 LIKE nmea_t.nmea003, 
   nmea004 LIKE nmea_t.nmea004, 
   nmea001 LIKE nmea_t.nmea001, 
   nmea016 LIKE nmea_t.nmea016, 
   nmea007 LIKE nmea_t.nmea007, 
   nmea008 LIKE nmea_t.nmea008, 
   nmea013 LIKE nmea_t.nmea013, 
   nmea006 LIKE nmea_t.nmea006, 
   nmea009 LIKE nmea_t.nmea009, 
   nmea012 LIKE nmea_t.nmea012, 
   nmea018 LIKE nmea_t.nmea018, 
   nmea019 LIKE nmea_t.nmea019
       END RECORD
PRIVATE TYPE type_g_nmea2_d RECORD
       nmeaseq LIKE nmea_t.nmeaseq, 
   nmea005 LIKE nmea_t.nmea005, 
   nmea010 LIKE nmea_t.nmea010, 
   nmea011 LIKE nmea_t.nmea011, 
   nmea014 LIKE nmea_t.nmea014, 
   nmea015 LIKE nmea_t.nmea015
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_nmbacomp LIKE nmba_t.nmbacomp,
      b_nmbadocno LIKE nmba_t.nmbadocno
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_nmba_m          type_g_nmba_m
DEFINE g_nmba_m_t        type_g_nmba_m
DEFINE g_nmba_m_o        type_g_nmba_m
DEFINE g_nmba_m_mask_o   type_g_nmba_m #轉換遮罩前資料
DEFINE g_nmba_m_mask_n   type_g_nmba_m #轉換遮罩後資料
 
   DEFINE g_nmbacomp_t LIKE nmba_t.nmbacomp
DEFINE g_nmbadocno_t LIKE nmba_t.nmbadocno
 
 
DEFINE g_nmea_d          DYNAMIC ARRAY OF type_g_nmea_d
DEFINE g_nmea_d_t        type_g_nmea_d
DEFINE g_nmea_d_o        type_g_nmea_d
DEFINE g_nmea_d_mask_o   DYNAMIC ARRAY OF type_g_nmea_d #轉換遮罩前資料
DEFINE g_nmea_d_mask_n   DYNAMIC ARRAY OF type_g_nmea_d #轉換遮罩後資料
DEFINE g_nmea2_d          DYNAMIC ARRAY OF type_g_nmea2_d
DEFINE g_nmea2_d_t        type_g_nmea2_d
DEFINE g_nmea2_d_o        type_g_nmea2_d
DEFINE g_nmea2_d_mask_o   DYNAMIC ARRAY OF type_g_nmea2_d #轉換遮罩前資料
DEFINE g_nmea2_d_mask_n   DYNAMIC ARRAY OF type_g_nmea2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="anmt560.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION anmt560_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_nmea_d.getLength() THEN
         LET g_detail_idx = g_nmea_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_nmea_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_nmea_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_nmea2_d.getLength() THEN
         LET g_detail_idx = g_nmea2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_nmea2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_nmea2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION anmt560_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('nmbastus','13','N,Y,V,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL anmt560_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="anmt560.input" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION anmt560_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_nmba_m.nmbasite,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp, 
       g_nmba_m.nmbacomp_desc,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba001_desc,g_nmba_m.nmba004,g_nmba_m.nmba004_desc, 
       g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011, 
       g_nmba_m.nmbaownid,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtid_desc,g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid, 
       g_nmba_m.nmbamodid_desc,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid,g_nmba_m.nmbacnfid_desc,g_nmba_m.nmbacnfdt 

   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT nmeaseq,nmeasite,nmea002,nmea017,nmea003,nmea004,nmea001,nmea016,nmea007, 
       nmea008,nmea013,nmea006,nmea009,nmea012,nmea018,nmea019,nmeaseq,nmea005,nmea010,nmea011,nmea014, 
       nmea015 FROM nmea_t WHERE nmeaent=? AND nmeacomp=? AND nmeadocno=? AND nmeaseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmt560_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL anmt560_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL anmt560_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_nmba_m.nmbasite,g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt, 
       g_nmba_m.nmba007,g_nmba_m.nmba003,g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005, 
       g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="anmt560.input.body" ver="8" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_nmea_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_nmea_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL anmt560_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_nmea_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN anmt560_cl USING g_enterprise,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN anmt560_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE anmt560_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_nmea_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_nmea_d[l_ac].nmeaseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_nmea_d_t.* = g_nmea_d[l_ac].*  #BACKUP
               LET g_nmea_d_o.* = g_nmea_d[l_ac].*  #BACKUP
               CALL anmt560_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL anmt560_set_no_entry_b(l_cmd)
               IF NOT anmt560_lock_b("nmea_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH anmt560_bcl INTO g_nmea_d[l_ac].nmeaseq,g_nmea_d[l_ac].nmeasite,g_nmea_d[l_ac].nmea002, 
                      g_nmea_d[l_ac].nmea017,g_nmea_d[l_ac].nmea003,g_nmea_d[l_ac].nmea004,g_nmea_d[l_ac].nmea001, 
                      g_nmea_d[l_ac].nmea016,g_nmea_d[l_ac].nmea007,g_nmea_d[l_ac].nmea008,g_nmea_d[l_ac].nmea013, 
                      g_nmea_d[l_ac].nmea006,g_nmea_d[l_ac].nmea009,g_nmea_d[l_ac].nmea012,g_nmea_d[l_ac].nmea018, 
                      g_nmea_d[l_ac].nmea019,g_nmea2_d[l_ac].nmeaseq,g_nmea2_d[l_ac].nmea005,g_nmea2_d[l_ac].nmea010, 
                      g_nmea2_d[l_ac].nmea011,g_nmea2_d[l_ac].nmea014,g_nmea2_d[l_ac].nmea015
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_nmea_d_t.nmeaseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_nmea_d_mask_o[l_ac].* =  g_nmea_d[l_ac].*
                  CALL anmt560_nmea_t_mask()
                  LET g_nmea_d_mask_n[l_ac].* =  g_nmea_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL anmt560_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_nmea_d[l_ac].* TO NULL 
            INITIALIZE g_nmea_d_t.* TO NULL 
            INITIALIZE g_nmea_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_nmea_d[l_ac].nmea009 = "0"
      LET g_nmea_d[l_ac].nmea012 = "0"
      LET g_nmea_d[l_ac].nmea018 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_nmea_d_t.* = g_nmea_d[l_ac].*     #新輸入資料
            LET g_nmea_d_o.* = g_nmea_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL anmt560_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL anmt560_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_nmea_d[li_reproduce_target].* = g_nmea_d[li_reproduce].*
               LET g_nmea2_d[li_reproduce_target].* = g_nmea2_d[li_reproduce].*
 
               LET g_nmea_d[li_reproduce_target].nmeaseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM nmea_t 
             WHERE nmeaent = g_enterprise AND nmeacomp = g_nmba_m.nmbacomp
               AND nmeadocno = g_nmba_m.nmbadocno
 
               AND nmeaseq = g_nmea_d[l_ac].nmeaseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmba_m.nmbacomp
               LET gs_keys[2] = g_nmba_m.nmbadocno
               LET gs_keys[3] = g_nmea_d[g_detail_idx].nmeaseq
               CALL anmt560_insert_b('nmea_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_nmea_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "nmea_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL anmt560_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_nmba_m.nmbacomp
               LET gs_keys[gs_keys.getLength()+1] = g_nmba_m.nmbadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_nmea_d_t.nmeaseq
 
            
               #刪除同層單身
               IF NOT anmt560_delete_b('nmea_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmt560_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT anmt560_key_delete_b(gs_keys,'nmea_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmt560_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE anmt560_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_nmea_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_nmea_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmeaseq
            #add-point:BEFORE FIELD nmeaseq
            {<point name="input.b.page1.nmeaseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmeaseq
            
            #add-point:AFTER FIELD nmeaseq
            {<point name="input.a.page1.nmeaseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmeaseq
            #add-point:ON CHANGE nmeaseq
            {<point name="input.g.page1.nmeaseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmeasite
            
            #add-point:AFTER FIELD nmeasite
            {<point name="input.a.page1.nmeasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmeasite
            #add-point:BEFORE FIELD nmeasite
            {<point name="input.b.page1.nmeasite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmeasite
            #add-point:ON CHANGE nmeasite
            {<point name="input.g.page1.nmeasite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea002
            #add-point:BEFORE FIELD nmea002
            {<point name="input.b.page1.nmea002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea002
            
            #add-point:AFTER FIELD nmea002
            {<point name="input.a.page1.nmea002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea002
            #add-point:ON CHANGE nmea002
            {<point name="input.g.page1.nmea002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea017
            #add-point:BEFORE FIELD nmea017
            {<point name="input.b.page1.nmea017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea017
            
            #add-point:AFTER FIELD nmea017
            {<point name="input.a.page1.nmea017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea017
            #add-point:ON CHANGE nmea017
            {<point name="input.g.page1.nmea017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea003
            #add-point:BEFORE FIELD nmea003
            {<point name="input.b.page1.nmea003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea003
            
            #add-point:AFTER FIELD nmea003
            {<point name="input.a.page1.nmea003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea003
            #add-point:ON CHANGE nmea003
            {<point name="input.g.page1.nmea003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea004
            #add-point:BEFORE FIELD nmea004
            {<point name="input.b.page1.nmea004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea004
            
            #add-point:AFTER FIELD nmea004
            {<point name="input.a.page1.nmea004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea004
            #add-point:ON CHANGE nmea004
            {<point name="input.g.page1.nmea004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea001
            #add-point:BEFORE FIELD nmea001
            {<point name="input.b.page1.nmea001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea001
            
            #add-point:AFTER FIELD nmea001
            {<point name="input.a.page1.nmea001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea001
            #add-point:ON CHANGE nmea001
            {<point name="input.g.page1.nmea001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea016
            #add-point:BEFORE FIELD nmea016
            {<point name="input.b.page1.nmea016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea016
            
            #add-point:AFTER FIELD nmea016
            {<point name="input.a.page1.nmea016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea016
            #add-point:ON CHANGE nmea016
            {<point name="input.g.page1.nmea016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea007
            #add-point:BEFORE FIELD nmea007
            {<point name="input.b.page1.nmea007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea007
            
            #add-point:AFTER FIELD nmea007
            {<point name="input.a.page1.nmea007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea007
            #add-point:ON CHANGE nmea007
            {<point name="input.g.page1.nmea007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea008
            #add-point:BEFORE FIELD nmea008
            {<point name="input.b.page1.nmea008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea008
            
            #add-point:AFTER FIELD nmea008
            {<point name="input.a.page1.nmea008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea008
            #add-point:ON CHANGE nmea008
            {<point name="input.g.page1.nmea008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea013
            #add-point:BEFORE FIELD nmea013
            {<point name="input.b.page1.nmea013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea013
            
            #add-point:AFTER FIELD nmea013
            {<point name="input.a.page1.nmea013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea013
            #add-point:ON CHANGE nmea013
            {<point name="input.g.page1.nmea013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea006
            #add-point:BEFORE FIELD nmea006
            {<point name="input.b.page1.nmea006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea006
            
            #add-point:AFTER FIELD nmea006
            {<point name="input.a.page1.nmea006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea006
            #add-point:ON CHANGE nmea006
            {<point name="input.g.page1.nmea006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea009
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_nmea_d[l_ac].nmea009,"0","0","","","azz-00079",1) THEN
               NEXT FIELD nmea009
            END IF 
 
 
            #add-point:AFTER FIELD nmea009
            {<point name="input.a.page1.nmea009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea009
            #add-point:BEFORE FIELD nmea009
            {<point name="input.b.page1.nmea009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea009
            #add-point:ON CHANGE nmea009
            {<point name="input.g.page1.nmea009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea012
            #add-point:BEFORE FIELD nmea012
            {<point name="input.b.page1.nmea012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea012
            
            #add-point:AFTER FIELD nmea012
            {<point name="input.a.page1.nmea012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea012
            #add-point:ON CHANGE nmea012
            {<point name="input.g.page1.nmea012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea018
            #add-point:BEFORE FIELD nmea018
            {<point name="input.b.page1.nmea018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea018
            
            #add-point:AFTER FIELD nmea018
            {<point name="input.a.page1.nmea018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea018
            #add-point:ON CHANGE nmea018
            {<point name="input.g.page1.nmea018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea019
            #add-point:BEFORE FIELD nmea019
            {<point name="input.b.page1.nmea019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea019
            
            #add-point:AFTER FIELD nmea019
            {<point name="input.a.page1.nmea019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea019
            #add-point:ON CHANGE nmea019
            {<point name="input.g.page1.nmea019" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.nmeaseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmeaseq
            #add-point:ON ACTION controlp INFIELD nmeaseq
            {<point name="input.c.page1.nmeaseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmeasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmeasite
            #add-point:ON ACTION controlp INFIELD nmeasite
            {<point name="input.c.page1.nmeasite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea002
            #add-point:ON ACTION controlp INFIELD nmea002
            {<point name="input.c.page1.nmea002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea017
            #add-point:ON ACTION controlp INFIELD nmea017
            {<point name="input.c.page1.nmea017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea003
            #add-point:ON ACTION controlp INFIELD nmea003
            {<point name="input.c.page1.nmea003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea004
            #add-point:ON ACTION controlp INFIELD nmea004
            {<point name="input.c.page1.nmea004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea001
            #add-point:ON ACTION controlp INFIELD nmea001
            {<point name="input.c.page1.nmea001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea016
            #add-point:ON ACTION controlp INFIELD nmea016
            {<point name="input.c.page1.nmea016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea007
            #add-point:ON ACTION controlp INFIELD nmea007
            {<point name="input.c.page1.nmea007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea008
            #add-point:ON ACTION controlp INFIELD nmea008
            {<point name="input.c.page1.nmea008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea013
            #add-point:ON ACTION controlp INFIELD nmea013
            {<point name="input.c.page1.nmea013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea006
            #add-point:ON ACTION controlp INFIELD nmea006
            {<point name="input.c.page1.nmea006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea009
            #add-point:ON ACTION controlp INFIELD nmea009
            {<point name="input.c.page1.nmea009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea012
            #add-point:ON ACTION controlp INFIELD nmea012
            {<point name="input.c.page1.nmea012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea018
            #add-point:ON ACTION controlp INFIELD nmea018
            {<point name="input.c.page1.nmea018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmea019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea019
            #add-point:ON ACTION controlp INFIELD nmea019
            {<point name="input.c.page1.nmea019" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_nmea_d[l_ac].* = g_nmea_d_t.*
               CLOSE anmt560_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_nmea_d[l_ac].nmeaseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_nmea_d[l_ac].* = g_nmea_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL anmt560_nmea_t_mask_restore('restore_mask_o')
      
               UPDATE nmea_t SET (nmeacomp,nmeadocno,nmeaseq,nmeasite,nmea002,nmea017,nmea003,nmea004, 
                   nmea001,nmea016,nmea007,nmea008,nmea013,nmea006,nmea009,nmea012,nmea018,nmea019,nmea005, 
                   nmea010,nmea011,nmea014,nmea015) = (g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmea_d[l_ac].nmeaseq, 
                   g_nmea_d[l_ac].nmeasite,g_nmea_d[l_ac].nmea002,g_nmea_d[l_ac].nmea017,g_nmea_d[l_ac].nmea003, 
                   g_nmea_d[l_ac].nmea004,g_nmea_d[l_ac].nmea001,g_nmea_d[l_ac].nmea016,g_nmea_d[l_ac].nmea007, 
                   g_nmea_d[l_ac].nmea008,g_nmea_d[l_ac].nmea013,g_nmea_d[l_ac].nmea006,g_nmea_d[l_ac].nmea009, 
                   g_nmea_d[l_ac].nmea012,g_nmea_d[l_ac].nmea018,g_nmea_d[l_ac].nmea019,g_nmea2_d[l_ac].nmea005, 
                   g_nmea2_d[l_ac].nmea010,g_nmea2_d[l_ac].nmea011,g_nmea2_d[l_ac].nmea014,g_nmea2_d[l_ac].nmea015) 

                WHERE nmeaent = g_enterprise AND nmeacomp = g_nmba_m.nmbacomp 
                  AND nmeadocno = g_nmba_m.nmbadocno 
 
                  AND nmeaseq = g_nmea_d_t.nmeaseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "nmea_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_nmea_d[l_ac].* = g_nmea_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "nmea_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_nmea_d[l_ac].* = g_nmea_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmba_m.nmbacomp
               LET gs_keys_bak[1] = g_nmbacomp_t
               LET gs_keys[2] = g_nmba_m.nmbadocno
               LET gs_keys_bak[2] = g_nmbadocno_t
               LET gs_keys[3] = g_nmea_d[g_detail_idx].nmeaseq
               LET gs_keys_bak[3] = g_nmea_d_t.nmeaseq
               CALL anmt560_update_b('nmea_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL anmt560_nmea_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_nmea_d[g_detail_idx].nmeaseq = g_nmea_d_t.nmeaseq 
 
                  ) THEN
                  LET gs_keys[01] = g_nmba_m.nmbacomp
                  LET gs_keys[gs_keys.getLength()+1] = g_nmba_m.nmbadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_nmea_d_t.nmeaseq
 
                  CALL anmt560_key_update_b(gs_keys,'nmea_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_nmba_m),util.JSON.stringify(g_nmea_d_t)
               LET g_log2 = util.JSON.stringify(g_nmba_m),util.JSON.stringify(g_nmea_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL anmt560_unlock_b("nmea_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_nmea_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_nmea_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_nmea2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            
            CALL anmt560_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_nmea2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            LET g_insert = 'Y' 
            NEXT FIELD nmeaseq
 
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_nmea2_d[l_ac].* TO NULL 
            INITIALIZE g_nmea2_d_t.* TO NULL 
            INITIALIZE g_nmea2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_nmea2_d_t.* = g_nmea2_d[l_ac].*     #新輸入資料
            LET g_nmea2_d_o.* = g_nmea2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL anmt560_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL anmt560_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_nmea_d[li_reproduce_target].* = g_nmea_d[li_reproduce].*
               LET g_nmea2_d[li_reproduce_target].* = g_nmea2_d[li_reproduce].*
 
               LET g_nmea2_d[li_reproduce_target].nmeaseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN anmt560_cl USING g_enterprise,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN anmt560_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE anmt560_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_nmea2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_nmea2_d[l_ac].nmeaseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_nmea2_d_t.* = g_nmea2_d[l_ac].*  #BACKUP
               LET g_nmea2_d_o.* = g_nmea2_d[l_ac].*  #BACKUP
               CALL anmt560_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL anmt560_set_no_entry_b(l_cmd)
               IF NOT anmt560_lock_b("nmea_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH anmt560_bcl INTO g_nmea_d[l_ac].nmeaseq,g_nmea_d[l_ac].nmeasite,g_nmea_d[l_ac].nmea002, 
                      g_nmea_d[l_ac].nmea017,g_nmea_d[l_ac].nmea003,g_nmea_d[l_ac].nmea004,g_nmea_d[l_ac].nmea001, 
                      g_nmea_d[l_ac].nmea016,g_nmea_d[l_ac].nmea007,g_nmea_d[l_ac].nmea008,g_nmea_d[l_ac].nmea013, 
                      g_nmea_d[l_ac].nmea006,g_nmea_d[l_ac].nmea009,g_nmea_d[l_ac].nmea012,g_nmea_d[l_ac].nmea018, 
                      g_nmea_d[l_ac].nmea019,g_nmea2_d[l_ac].nmeaseq,g_nmea2_d[l_ac].nmea005,g_nmea2_d[l_ac].nmea010, 
                      g_nmea2_d[l_ac].nmea011,g_nmea2_d[l_ac].nmea014,g_nmea2_d[l_ac].nmea015
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_nmea2_d_mask_o[l_ac].* =  g_nmea2_d[l_ac].*
                  CALL anmt560_nmea_t_mask()
                  LET g_nmea2_d_mask_n[l_ac].* =  g_nmea2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL anmt560_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_nmba_m.nmbacomp
               LET gs_keys[gs_keys.getLength()+1] = g_nmba_m.nmbadocno
               LET gs_keys[gs_keys.getLength()+1] = g_nmea2_d_t.nmeaseq
            
               #刪除同層單身
               IF NOT anmt560_delete_b('nmea_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmt560_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT anmt560_key_delete_b(gs_keys,'nmea_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmt560_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE anmt560_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_nmea_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_nmea2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM nmea_t 
             WHERE nmeaent = g_enterprise AND nmeacomp = g_nmba_m.nmbacomp
               AND nmeadocno = g_nmba_m.nmbadocno
               AND nmeaseq = g_nmea2_d[l_ac].nmeaseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmba_m.nmbacomp
               LET gs_keys[2] = g_nmba_m.nmbadocno
               LET gs_keys[3] = g_nmea2_d[g_detail_idx].nmeaseq
               CALL anmt560_insert_b('nmea_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_nmea_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "nmea_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL anmt560_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_nmea2_d[l_ac].* = g_nmea2_d_t.*
               CLOSE anmt560_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_nmea2_d[l_ac].* = g_nmea2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL anmt560_nmea_t_mask_restore('restore_mask_o')
                              
               UPDATE nmea_t SET (nmeacomp,nmeadocno,nmeaseq,nmeasite,nmea002,nmea017,nmea003,nmea004, 
                   nmea001,nmea016,nmea007,nmea008,nmea013,nmea006,nmea009,nmea012,nmea018,nmea019,nmea005, 
                   nmea010,nmea011,nmea014,nmea015) = (g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmea_d[l_ac].nmeaseq, 
                   g_nmea_d[l_ac].nmeasite,g_nmea_d[l_ac].nmea002,g_nmea_d[l_ac].nmea017,g_nmea_d[l_ac].nmea003, 
                   g_nmea_d[l_ac].nmea004,g_nmea_d[l_ac].nmea001,g_nmea_d[l_ac].nmea016,g_nmea_d[l_ac].nmea007, 
                   g_nmea_d[l_ac].nmea008,g_nmea_d[l_ac].nmea013,g_nmea_d[l_ac].nmea006,g_nmea_d[l_ac].nmea009, 
                   g_nmea_d[l_ac].nmea012,g_nmea_d[l_ac].nmea018,g_nmea_d[l_ac].nmea019,g_nmea2_d[l_ac].nmea005, 
                   g_nmea2_d[l_ac].nmea010,g_nmea2_d[l_ac].nmea011,g_nmea2_d[l_ac].nmea014,g_nmea2_d[l_ac].nmea015)  
                   #自訂欄位頁簽
                WHERE nmeaent = g_enterprise AND nmeacomp = g_nmba_m.nmbacomp
                  AND nmeadocno = g_nmba_m.nmbadocno
                  AND nmeaseq = g_nmea2_d_t.nmeaseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "nmea_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_nmea2_d[l_ac].* = g_nmea2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "nmea_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_nmea2_d[l_ac].* = g_nmea2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmba_m.nmbacomp
               LET gs_keys_bak[1] = g_nmbacomp_t
               LET gs_keys[2] = g_nmba_m.nmbadocno
               LET gs_keys_bak[2] = g_nmbadocno_t
               LET gs_keys[3] = g_nmea2_d[g_detail_idx].nmeaseq
               LET gs_keys_bak[3] = g_nmea2_d_t.nmeaseq
               CALL anmt560_update_b('nmea_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL anmt560_nmea_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_nmea2_d[g_detail_idx].nmeaseq = g_nmea2_d_t.nmeaseq 
                  ) THEN
                  LET gs_keys[01] = g_nmba_m.nmbacomp
                  LET gs_keys[gs_keys.getLength()+1] = g_nmba_m.nmbadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_nmea2_d_t.nmeaseq
                  CALL anmt560_key_update_b(gs_keys,'nmea_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_nmba_m),util.JSON.stringify(g_nmea2_d_t)
               LET g_log2 = util.JSON.stringify(g_nmba_m),util.JSON.stringify(g_nmea2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea005
            #add-point:BEFORE FIELD nmea005
            {<point name="input.b.page2.nmea005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea005
            
            #add-point:AFTER FIELD nmea005
            {<point name="input.a.page2.nmea005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea005
            #add-point:ON CHANGE nmea005
            {<point name="input.g.page2.nmea005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea010
            #add-point:BEFORE FIELD nmea010
            {<point name="input.b.page2.nmea010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea010
            
            #add-point:AFTER FIELD nmea010
            {<point name="input.a.page2.nmea010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea010
            #add-point:ON CHANGE nmea010
            {<point name="input.g.page2.nmea010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea011
            #add-point:BEFORE FIELD nmea011
            {<point name="input.b.page2.nmea011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea011
            
            #add-point:AFTER FIELD nmea011
            {<point name="input.a.page2.nmea011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea011
            #add-point:ON CHANGE nmea011
            {<point name="input.g.page2.nmea011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea014
            #add-point:BEFORE FIELD nmea014
            {<point name="input.b.page2.nmea014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea014
            
            #add-point:AFTER FIELD nmea014
            {<point name="input.a.page2.nmea014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea014
            #add-point:ON CHANGE nmea014
            {<point name="input.g.page2.nmea014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmea015
            #add-point:BEFORE FIELD nmea015
            {<point name="input.b.page2.nmea015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmea015
            
            #add-point:AFTER FIELD nmea015
            {<point name="input.a.page2.nmea015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmea015
            #add-point:ON CHANGE nmea015
            {<point name="input.g.page2.nmea015" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.nmea005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea005
            #add-point:ON ACTION controlp INFIELD nmea005
            {<point name="input.c.page2.nmea005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.nmea010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea010
            #add-point:ON ACTION controlp INFIELD nmea010
            {<point name="input.c.page2.nmea010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.nmea011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea011
            #add-point:ON ACTION controlp INFIELD nmea011
            {<point name="input.c.page2.nmea011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.nmea014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea014
            #add-point:ON ACTION controlp INFIELD nmea014
            {<point name="input.c.page2.nmea014" />}
            #END add-point
 
         #Ctrlp:input.c.page2.nmea015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmea015
            #add-point:ON ACTION controlp INFIELD nmea015
            {<point name="input.c.page2.nmea015" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_nmea2_d[l_ac].* = g_nmea2_d_t.*
               END IF
               CLOSE anmt560_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL anmt560_unlock_b("nmea_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_nmea2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_nmea2_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="anmt560.input.head" ver="3" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_nmba_m.nmbasite,g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt, 
          g_nmba_m.nmba007,g_nmba_m.nmba003,g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005, 
          g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN anmt560_cl USING g_enterprise,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN anmt560_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE anmt560_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL anmt560_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL anmt560_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbasite
            
            #add-point:AFTER FIELD nmbasite
            {<point name="input.a.nmbasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbasite
            #add-point:BEFORE FIELD nmbasite
            {<point name="input.b.nmbasite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmbasite
            #add-point:ON CHANGE nmbasite
            {<point name="input.g.nmbasite" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba002
            
            #add-point:AFTER FIELD nmba002
            {<point name="input.a.nmba002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba002
            #add-point:BEFORE FIELD nmba002
            {<point name="input.b.nmba002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba002
            #add-point:ON CHANGE nmba002
            {<point name="input.g.nmba002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbacomp
            
            #add-point:AFTER FIELD nmbacomp
            {<point name="input.a.nmbacomp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbacomp
            #add-point:BEFORE FIELD nmbacomp
            {<point name="input.b.nmbacomp" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmbacomp
            #add-point:ON CHANGE nmbacomp
            {<point name="input.g.nmbacomp" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbadocno
            #add-point:BEFORE FIELD nmbadocno
            {<point name="input.b.nmbadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbadocno
            
            #add-point:AFTER FIELD nmbadocno
            {<point name="input.a.nmbadocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmbadocno
            #add-point:ON CHANGE nmbadocno
            {<point name="input.g.nmbadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbadocdt
            #add-point:BEFORE FIELD nmbadocdt
            {<point name="input.b.nmbadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbadocdt
            
            #add-point:AFTER FIELD nmbadocdt
            {<point name="input.a.nmbadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmbadocdt
            #add-point:ON CHANGE nmbadocdt
            {<point name="input.g.nmbadocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba007
            #add-point:BEFORE FIELD nmba007
            {<point name="input.b.nmba007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba007
            
            #add-point:AFTER FIELD nmba007
            {<point name="input.a.nmba007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba007
            #add-point:ON CHANGE nmba007
            {<point name="input.g.nmba007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba003
            #add-point:BEFORE FIELD nmba003
            {<point name="input.b.nmba003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba003
            
            #add-point:AFTER FIELD nmba003
            {<point name="input.a.nmba003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba003
            #add-point:ON CHANGE nmba003
            {<point name="input.g.nmba003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmbastus
            #add-point:BEFORE FIELD nmbastus
            {<point name="input.b.nmbastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmbastus
            
            #add-point:AFTER FIELD nmbastus
            {<point name="input.a.nmbastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmbastus
            #add-point:ON CHANGE nmbastus
            {<point name="input.g.nmbastus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba001
            
            #add-point:AFTER FIELD nmba001
            {<point name="input.a.nmba001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba001
            #add-point:BEFORE FIELD nmba001
            {<point name="input.b.nmba001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba001
            #add-point:ON CHANGE nmba001
            {<point name="input.g.nmba001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba004
            
            #add-point:AFTER FIELD nmba004
            {<point name="input.a.nmba004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba004
            #add-point:BEFORE FIELD nmba004
            {<point name="input.b.nmba004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba004
            #add-point:ON CHANGE nmba004
            {<point name="input.g.nmba004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba005
            #add-point:BEFORE FIELD nmba005
            {<point name="input.b.nmba005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba005
            
            #add-point:AFTER FIELD nmba005
            {<point name="input.a.nmba005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba005
            #add-point:ON CHANGE nmba005
            {<point name="input.g.nmba005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba006
            #add-point:BEFORE FIELD nmba006
            {<point name="input.b.nmba006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba006
            
            #add-point:AFTER FIELD nmba006
            {<point name="input.a.nmba006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba006
            #add-point:ON CHANGE nmba006
            {<point name="input.g.nmba006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba008
            #add-point:BEFORE FIELD nmba008
            {<point name="input.b.nmba008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba008
            
            #add-point:AFTER FIELD nmba008
            {<point name="input.a.nmba008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba008
            #add-point:ON CHANGE nmba008
            {<point name="input.g.nmba008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba009
            #add-point:BEFORE FIELD nmba009
            {<point name="input.b.nmba009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba009
            
            #add-point:AFTER FIELD nmba009
            {<point name="input.a.nmba009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba009
            #add-point:ON CHANGE nmba009
            {<point name="input.g.nmba009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba010
            #add-point:BEFORE FIELD nmba010
            {<point name="input.b.nmba010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba010
            
            #add-point:AFTER FIELD nmba010
            {<point name="input.a.nmba010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba010
            #add-point:ON CHANGE nmba010
            {<point name="input.g.nmba010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD nmba011
            #add-point:BEFORE FIELD nmba011
            {<point name="input.b.nmba011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD nmba011
            
            #add-point:AFTER FIELD nmba011
            {<point name="input.a.nmba011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE nmba011
            #add-point:ON CHANGE nmba011
            {<point name="input.g.nmba011" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.nmbasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbasite
            #add-point:ON ACTION controlp INFIELD nmbasite
            {<point name="input.c.nmbasite" />}
            #END add-point
 
         #Ctrlp:input.c.nmba002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba002
            #add-point:ON ACTION controlp INFIELD nmba002
            {<point name="input.c.nmba002" />}
            #END add-point
 
         #Ctrlp:input.c.nmbacomp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbacomp
            #add-point:ON ACTION controlp INFIELD nmbacomp
            {<point name="input.c.nmbacomp" />}
            #END add-point
 
         #Ctrlp:input.c.nmbadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbadocno
            #add-point:ON ACTION controlp INFIELD nmbadocno
            {<point name="input.c.nmbadocno" />}
            #END add-point
 
         #Ctrlp:input.c.nmbadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbadocdt
            #add-point:ON ACTION controlp INFIELD nmbadocdt
            {<point name="input.c.nmbadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.nmba007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba007
            #add-point:ON ACTION controlp INFIELD nmba007
            {<point name="input.c.nmba007" />}
            #END add-point
 
         #Ctrlp:input.c.nmba003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba003
            #add-point:ON ACTION controlp INFIELD nmba003
            {<point name="input.c.nmba003" />}
            #END add-point
 
         #Ctrlp:input.c.nmbastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmbastus
            #add-point:ON ACTION controlp INFIELD nmbastus
            {<point name="input.c.nmbastus" />}
            #END add-point
 
         #Ctrlp:input.c.nmba001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba001
            #add-point:ON ACTION controlp INFIELD nmba001
            {<point name="input.c.nmba001" />}
            #END add-point
 
         #Ctrlp:input.c.nmba004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba004
            #add-point:ON ACTION controlp INFIELD nmba004
            {<point name="input.c.nmba004" />}
            #END add-point
 
         #Ctrlp:input.c.nmba005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba005
            #add-point:ON ACTION controlp INFIELD nmba005
            {<point name="input.c.nmba005" />}
            #END add-point
 
         #Ctrlp:input.c.nmba006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba006
            #add-point:ON ACTION controlp INFIELD nmba006
            {<point name="input.c.nmba006" />}
            #END add-point
 
         #Ctrlp:input.c.nmba008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba008
            #add-point:ON ACTION controlp INFIELD nmba008
            {<point name="input.c.nmba008" />}
            #END add-point
 
         #Ctrlp:input.c.nmba009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba009
            #add-point:ON ACTION controlp INFIELD nmba009
            {<point name="input.c.nmba009" />}
            #END add-point
 
         #Ctrlp:input.c.nmba010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba010
            #add-point:ON ACTION controlp INFIELD nmba010
            {<point name="input.c.nmba010" />}
            #END add-point
 
         #Ctrlp:input.c.nmba011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD nmba011
            #add-point:ON ACTION controlp INFIELD nmba011
            {<point name="input.c.nmba011" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO nmba_t (nmbaent,nmbasite,nmba002,nmbacomp,nmbadocno,nmbadocdt,nmba007,nmba003, 
                   nmbastus,nmba001,nmba004,nmba005,nmba006,nmba008,nmba009,nmba010,nmba011,nmbaownid, 
                   nmbaowndp,nmbacrtid,nmbacrtdp,nmbacrtdt,nmbamodid,nmbamoddt,nmbacnfid,nmbacnfdt)
               VALUES (g_enterprise,g_nmba_m.nmbasite,g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno, 
                   g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003,g_nmba_m.nmbastus,g_nmba_m.nmba001, 
                   g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009, 
                   g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid, 
                   g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
                   g_nmba_m.nmbacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_nmba_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL anmt560_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL anmt560_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL anmt560_nmba_t_mask_restore('restore_mask_o')
               
               UPDATE nmba_t SET (nmbasite,nmba002,nmbacomp,nmbadocno,nmbadocdt,nmba007,nmba003,nmbastus, 
                   nmba001,nmba004,nmba005,nmba006,nmba008,nmba009,nmba010,nmba011,nmbaownid,nmbaowndp, 
                   nmbacrtid,nmbacrtdp,nmbacrtdt,nmbamodid,nmbamoddt,nmbacnfid,nmbacnfdt) = (g_nmba_m.nmbasite, 
                   g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007, 
                   g_nmba_m.nmba003,g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005, 
                   g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011, 
                   g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid,g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt, 
                   g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid,g_nmba_m.nmbacnfdt)
                WHERE nmbaent = g_enterprise AND nmbacomp = g_nmbacomp_t
                  AND nmbadocno = g_nmbadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "nmba_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL anmt560_nmba_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_nmba_m_t)
               LET g_log2 = util.JSON.stringify(g_nmba_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_nmbacomp_t = g_nmba_m.nmbacomp
            LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="anmt560.input.other" ver="2" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD nmbacomp
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD nmeaseq
               WHEN "s_detail2"
                  NEXT FIELD nmeaseq_2
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.insert" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION anmt560_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_nmea_d.clear()   
   CALL g_nmea2_d.clear()  
 
 
   INITIALIZE g_nmba_m.* LIKE nmba_t.*             #DEFAULT 設定
   
   LET g_nmbacomp_t = NULL
   LET g_nmbadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_nmba_m.nmbaownid = g_user
      LET g_nmba_m.nmbaowndp = g_dept
      LET g_nmba_m.nmbacrtid = g_user
      LET g_nmba_m.nmbacrtdp = g_dept 
      LET g_nmba_m.nmbacrtdt = cl_get_current()
      LET g_nmba_m.nmbamodid = g_user
      LET g_nmba_m.nmbamoddt = cl_get_current()
      LET g_nmba_m.nmbastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_nmba_m.nmbastus = "N"
      LET g_nmba_m.nmba004 = "MISC"
      LET g_nmba_m.nmba005 = "MISC"
      LET g_nmba_m.nmba006 = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_nmba_m_t.* = g_nmba_m.*
      LET g_nmba_m_o.* = g_nmba_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_nmba_m.nmbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "V"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/verify.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL anmt560_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_nmba_m.* TO NULL
         INITIALIZE g_nmea_d TO NULL
         INITIALIZE g_nmea2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL anmt560_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_nmea_d.clear()
      #CALL g_nmea2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmt560_set_act_visible()   
   CALL anmt560_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_nmbacomp_t = g_nmba_m.nmbacomp
   LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " nmbaent = '" ||g_enterprise|| "' AND",
                      " nmbacomp = '", g_nmba_m.nmbacomp, "' "
                      ," AND nmbadocno = '", g_nmba_m.nmbadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL anmt560_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE anmt560_cl
   
   CALL anmt560_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE anmt560_master_referesh USING g_nmba_m.nmbacomp,g_nmba_m.nmbadocno INTO g_nmba_m.nmbasite, 
       g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008, 
       g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
       g_nmba_m.nmbacnfdt,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp_desc,g_nmba_m.nmba001_desc, 
       g_nmba_m.nmba004_desc,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid_desc, 
       g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbacnfid_desc
   
   #遮罩相關處理
   LET g_nmba_m_mask_o.* =  g_nmba_m.*
   CALL anmt560_nmba_t_mask()
   LET g_nmba_m_mask_n.* =  g_nmba_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_nmba_m.nmbasite,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp, 
       g_nmba_m.nmbacomp_desc,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba001_desc,g_nmba_m.nmba004,g_nmba_m.nmba004_desc, 
       g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011, 
       g_nmba_m.nmbaownid,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtid_desc,g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid, 
       g_nmba_m.nmbamodid_desc,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid,g_nmba_m.nmbacnfid_desc,g_nmba_m.nmbacnfdt 

   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL anmt560_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.insert_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION anmt560_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO nmea_t
                  (nmeaent,
                   nmeacomp,nmeadocno,
                   nmeaseq
                   ,nmeasite,nmea002,nmea017,nmea003,nmea004,nmea001,nmea016,nmea007,nmea008,nmea013,nmea006,nmea009,nmea012,nmea018,nmea019,nmea005,nmea010,nmea011,nmea014,nmea015) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_nmea_d[g_detail_idx].nmeasite,g_nmea_d[g_detail_idx].nmea002,g_nmea_d[g_detail_idx].nmea017, 
                       g_nmea_d[g_detail_idx].nmea003,g_nmea_d[g_detail_idx].nmea004,g_nmea_d[g_detail_idx].nmea001, 
                       g_nmea_d[g_detail_idx].nmea016,g_nmea_d[g_detail_idx].nmea007,g_nmea_d[g_detail_idx].nmea008, 
                       g_nmea_d[g_detail_idx].nmea013,g_nmea_d[g_detail_idx].nmea006,g_nmea_d[g_detail_idx].nmea009, 
                       g_nmea_d[g_detail_idx].nmea012,g_nmea_d[g_detail_idx].nmea018,g_nmea_d[g_detail_idx].nmea019, 
                       g_nmea2_d[g_detail_idx].nmea005,g_nmea2_d[g_detail_idx].nmea010,g_nmea2_d[g_detail_idx].nmea011, 
                       g_nmea2_d[g_detail_idx].nmea014,g_nmea2_d[g_detail_idx].nmea015)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "nmea_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_nmea_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_nmea2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION anmt560_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.key_update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION anmt560_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.lock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION anmt560_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL anmt560_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "nmea_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN anmt560_bcl USING g_enterprise,
                                       g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmea_d[g_detail_idx].nmeaseq  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "anmt560_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.main" ver="3" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("anm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT nmbasite,'',nmba002,'',nmbacomp,'',nmbadocno,nmbadocdt,nmba007,nmba003, 
       nmbastus,nmba001,'',nmba004,'',nmba005,nmba006,nmba008,nmba009,nmba010,nmba011,nmbaownid,'',nmbaowndp, 
       '',nmbacrtid,'',nmbacrtdp,'',nmbacrtdt,nmbamodid,'',nmbamoddt,nmbacnfid,'',nmbacnfdt", 
                      " FROM nmba_t",
                      " WHERE nmbaent= ? AND nmbacomp=? AND nmbadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmt560_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.nmbasite,t0.nmba002,t0.nmbacomp,t0.nmbadocno,t0.nmbadocdt,t0.nmba007, 
       t0.nmba003,t0.nmbastus,t0.nmba001,t0.nmba004,t0.nmba005,t0.nmba006,t0.nmba008,t0.nmba009,t0.nmba010, 
       t0.nmba011,t0.nmbaownid,t0.nmbaowndp,t0.nmbacrtid,t0.nmbacrtdp,t0.nmbacrtdt,t0.nmbamodid,t0.nmbamoddt, 
       t0.nmbacnfid,t0.nmbacnfdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooefl003 ,t5.pmaal003 ,t6.ooag011 , 
       t7.ooefl003 ,t8.ooag011 ,t9.ooefl003 ,t10.ooag011 ,t11.ooag011",
               " FROM nmba_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.nmbasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.nmba002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.nmbacomp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.nmba001 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=t0.nmba004 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.nmbaownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.nmbaowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.nmbacrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=t0.nmbacrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.nmbamodid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=t0.nmbacnfid  ",
 
               " WHERE t0.nmbaent = '" ||g_enterprise|| "' AND t0.nmbacomp = ? AND t0.nmbadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE anmt560_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_anmt560 WITH FORM cl_ap_formpath("anm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL anmt560_init()   
 
      #進入選單 Menu (="N")
      CALL anmt560_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_anmt560
      
   END IF 
   
   CLOSE anmt560_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="anmt560.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/anm/anmt560_mask.4gl"
]]>
  </section>
  <section id="anmt560.modify" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION anmt560_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_nmba_m_t.* = g_nmba_m.*
   LET g_nmba_m_o.* = g_nmba_m.*
   
   IF g_nmba_m.nmbacomp IS NULL
   OR g_nmba_m.nmbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_nmbacomp_t = g_nmba_m.nmbacomp
   LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
   CALL s_transaction_begin()
   
   OPEN anmt560_cl USING g_enterprise,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN anmt560_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE anmt560_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmt560_master_referesh USING g_nmba_m.nmbacomp,g_nmba_m.nmbadocno INTO g_nmba_m.nmbasite, 
       g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008, 
       g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
       g_nmba_m.nmbacnfdt,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp_desc,g_nmba_m.nmba001_desc, 
       g_nmba_m.nmba004_desc,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid_desc, 
       g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbacnfid_desc
   
   #檢查是否允許此動作
   IF NOT anmt560_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_nmba_m_mask_o.* =  g_nmba_m.*
   CALL anmt560_nmba_t_mask()
   LET g_nmba_m_mask_n.* =  g_nmba_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL anmt560_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_nmbacomp_t = g_nmba_m.nmbacomp
      LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_nmba_m.nmbamodid = g_user 
LET g_nmba_m.nmbamoddt = cl_get_current()
LET g_nmba_m.nmbamodid_desc = cl_get_username(g_nmba_m.nmbamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL anmt560_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE nmba_t SET (nmbamodid,nmbamoddt) = (g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt)
          WHERE nmbaent = g_enterprise AND nmbacomp = g_nmbacomp_t
            AND nmbadocno = g_nmbadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_nmba_m.* = g_nmba_m_t.*
         CALL anmt560_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_nmba_m.nmbacomp != g_nmbacomp_t 
      OR g_nmba_m.nmbadocno != g_nmbadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE nmea_t SET nmeacomp = g_nmba_m.nmbacomp
                                       ,nmeadocno = g_nmba_m.nmbadocno
 
          WHERE nmeaent = g_enterprise AND nmeacomp = g_nmbacomp_t
            AND nmeadocno = g_nmbadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "nmea_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "nmea_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmt560_set_act_visible()   
   CALL anmt560_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " nmbaent = '" ||g_enterprise|| "' AND",
                      " nmbacomp = '", g_nmba_m.nmbacomp, "' "
                      ," AND nmbadocno = '", g_nmba_m.nmbadocno, "' "
 
   #填到對應位置
   CALL anmt560_browser_fill("")
 
   CLOSE anmt560_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL anmt560_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="anmt560.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION anmt560_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL anmt560_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_nmba_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="anmt560.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="anmt560.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="anmt560.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION anmt560_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_nmea_d.clear()
   CALL g_nmea2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL anmt560_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL anmt560_browser_fill("")
      CALL anmt560_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL anmt560_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL anmt560_fetch("F") 
      #顯示單身筆數
      CALL anmt560_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.reproduce" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION anmt560_reproduce()
   DEFINE l_newno     LIKE nmba_t.nmbacomp 
   DEFINE l_oldno     LIKE nmba_t.nmbacomp 
   DEFINE l_newno02     LIKE nmba_t.nmbadocno 
   DEFINE l_oldno02     LIKE nmba_t.nmbadocno 
 
   DEFINE l_master    RECORD LIKE nmba_t.*
   DEFINE l_detail    RECORD LIKE nmea_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_nmba_m.nmbacomp IS NULL
   OR g_nmba_m.nmbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_nmbacomp_t = g_nmba_m.nmbacomp
   LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
    
   LET g_nmba_m.nmbacomp = ""
   LET g_nmba_m.nmbadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_nmba_m.nmbaownid = g_user
      LET g_nmba_m.nmbaowndp = g_dept
      LET g_nmba_m.nmbacrtid = g_user
      LET g_nmba_m.nmbacrtdp = g_dept 
      LET g_nmba_m.nmbacrtdt = cl_get_current()
      LET g_nmba_m.nmbamodid = g_user
      LET g_nmba_m.nmbamoddt = cl_get_current()
      LET g_nmba_m.nmbastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_nmba_m.nmbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "V"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/verify.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_nmba_m.nmbacomp_desc = ''
   DISPLAY BY NAME g_nmba_m.nmbacomp_desc
 
   
   CALL anmt560_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_nmba_m.* TO NULL
      INITIALIZE g_nmea_d TO NULL
      INITIALIZE g_nmea2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL anmt560_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmt560_set_act_visible()   
   CALL anmt560_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_nmbacomp_t = g_nmba_m.nmbacomp
   LET g_nmbadocno_t = g_nmba_m.nmbadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " nmbaent = '" ||g_enterprise|| "' AND",
                      " nmbacomp = '", g_nmba_m.nmbacomp, "' "
                      ," AND nmbadocno = '", g_nmba_m.nmbadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL anmt560_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL anmt560_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL anmt560_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION anmt560_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION anmt560_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION anmt560_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION anmt560_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION anmt560_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("nmbadocno,nmbadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("nmbacomp,nmbadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION anmt560_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_no_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION anmt560_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("nmbacomp,nmbadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("nmbadocno,nmbadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION anmt560_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="anmt560.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION anmt560_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_nmba_m.nmbacomp
   LET g_pk_array[1].column = 'nmbacomp'
   LET g_pk_array[2].values = g_nmba_m.nmbadocno
   LET g_pk_array[2].column = 'nmbadocno'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="anmt560.show" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION anmt560_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL anmt560_b_fill() #單身填充
      CALL anmt560_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL anmt560_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_nmba_m_mask_o.* =  g_nmba_m.*
   CALL anmt560_nmba_t_mask()
   LET g_nmba_m_mask_n.* =  g_nmba_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_nmba_m.nmbasite,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp, 
       g_nmba_m.nmbacomp_desc,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba001_desc,g_nmba_m.nmba004,g_nmba_m.nmba004_desc, 
       g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011, 
       g_nmba_m.nmbaownid,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtid_desc,g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid, 
       g_nmba_m.nmbamodid_desc,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid,g_nmba_m.nmbacnfid_desc,g_nmba_m.nmbacnfdt 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_nmba_m.nmbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "V"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/verify.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_nmea_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_nmea2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL anmt560_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.signature" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION anmt560_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL anmt560_show()
   CALL anmt560_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_nmba_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_nmea_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_nmea2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL anmt560_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL anmt560_ui_headershow()
   CALL anmt560_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION anmt560_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL anmt560_ui_headershow()  
   CALL anmt560_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="anmt560.state_change" ver="6" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION anmt560_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_nmba_m.nmbacomp IS NULL
      OR g_nmba_m.nmbadocno IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN anmt560_cl USING g_enterprise,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN anmt560_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE anmt560_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE anmt560_master_referesh USING g_nmba_m.nmbacomp,g_nmba_m.nmbadocno INTO g_nmba_m.nmbasite, 
       g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008, 
       g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
       g_nmba_m.nmbacnfdt,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp_desc,g_nmba_m.nmba001_desc, 
       g_nmba_m.nmba004_desc,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid_desc, 
       g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbacnfid_desc
 
   #檢查是否允許此動作
   IF NOT anmt560_action_chk() THEN
      CLOSE anmt560_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_nmba_m.nmbasite,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp, 
       g_nmba_m.nmbacomp_desc,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba001_desc,g_nmba_m.nmba004,g_nmba_m.nmba004_desc, 
       g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011, 
       g_nmba_m.nmbaownid,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtid_desc,g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid, 
       g_nmba_m.nmbamodid_desc,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid,g_nmba_m.nmbacnfid_desc,g_nmba_m.nmbacnfdt 

 
   CASE g_nmba_m.nmbastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "V"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/verify.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_nmba_m.nmbastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "V"
               HIDE OPTION "verify"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT anmt560_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE anmt560_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT anmt560_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE anmt560_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION verify
         IF cl_auth_chk_act("verify") THEN
            LET lc_state = "V"
            #add-point:action控制
            {<point name="statechange.verify"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "V"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_nmba_m.nmbastus = lc_state OR cl_null(lc_state) THEN
      CLOSE anmt560_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_nmba_m.nmbamodid = g_user
   LET g_nmba_m.nmbamoddt = cl_get_current()
   LET g_nmba_m.nmbastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE nmba_t 
      SET (nmbastus,nmbamodid,nmbamoddt) 
        = (g_nmba_m.nmbastus,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt)     
    WHERE nmbaent = g_enterprise AND nmbacomp = g_nmba_m.nmbacomp
      AND nmbadocno = g_nmba_m.nmbadocno
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "V"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/verify.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE anmt560_master_referesh USING g_nmba_m.nmbacomp,g_nmba_m.nmbadocno INTO g_nmba_m.nmbasite, 
          g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007, 
          g_nmba_m.nmba003,g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006, 
          g_nmba_m.nmba008,g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp, 
          g_nmba_m.nmbacrtid,g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt, 
          g_nmba_m.nmbacnfid,g_nmba_m.nmbacnfdt,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp_desc, 
          g_nmba_m.nmba001_desc,g_nmba_m.nmba004_desc,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp_desc, 
          g_nmba_m.nmbacrtid_desc,g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbacnfid_desc 

      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_nmba_m.nmbasite,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002,g_nmba_m.nmba002_desc, 
          g_nmba_m.nmbacomp,g_nmba_m.nmbacomp_desc,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007, 
          g_nmba_m.nmba003,g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba001_desc,g_nmba_m.nmba004, 
          g_nmba_m.nmba004_desc,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008,g_nmba_m.nmba009, 
          g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp, 
          g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid,g_nmba_m.nmbacrtid_desc,g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdp_desc, 
          g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
          g_nmba_m.nmbacnfid_desc,g_nmba_m.nmbacnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE anmt560_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL anmt560_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="anmt560.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION anmt560_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="anmt560.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION anmt560_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_nmbacomp = g_nmba_m.nmbacomp 
         AND g_browser[l_i].b_nmbadocno = g_nmba_m.nmbadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION anmt560_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="anmt560.ui_dialog" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION anmt560_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL anmt560_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_nmba_m.* TO NULL
         CALL g_nmea_d.clear()
         CALL g_nmea2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL anmt560_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_nmea_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL anmt560_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL anmt560_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_nmea2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL anmt560_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL anmt560_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL anmt560_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL anmt560_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL anmt560_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL anmt560_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL anmt560_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL anmt560_set_act_visible()   
            CALL anmt560_set_act_no_visible()
            IF NOT (g_nmba_m.nmbacomp IS NULL
              OR g_nmba_m.nmbadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " nmbaent = '" ||g_enterprise|| "' AND",
                                  " nmbacomp = '", g_nmba_m.nmbacomp, "' "
                                  ," AND nmbadocno = '", g_nmba_m.nmbadocno, "' "
 
               #填到對應位置
               CALL anmt560_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "nmba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "nmea_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL anmt560_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "nmba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "nmea_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL anmt560_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL anmt560_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL anmt560_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt560_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL anmt560_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt560_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL anmt560_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt560_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL anmt560_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt560_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL anmt560_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt560_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_nmea_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_nmea2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL anmt560_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL anmt560_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL anmt560_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL anmt560_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/anm/anmt560_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL anmt560_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL anmt560_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL anmt560_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL anmt560_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL anmt560_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_nmba_m.nmbadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="anmt560.ui_headershow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION anmt560_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_nmba_m.nmbacomp = g_browser[g_current_idx].b_nmbacomp   
   LET g_nmba_m.nmbadocno = g_browser[g_current_idx].b_nmbadocno   
 
   EXECUTE anmt560_master_referesh USING g_nmba_m.nmbacomp,g_nmba_m.nmbadocno INTO g_nmba_m.nmbasite, 
       g_nmba_m.nmba002,g_nmba_m.nmbacomp,g_nmba_m.nmbadocno,g_nmba_m.nmbadocdt,g_nmba_m.nmba007,g_nmba_m.nmba003, 
       g_nmba_m.nmbastus,g_nmba_m.nmba001,g_nmba_m.nmba004,g_nmba_m.nmba005,g_nmba_m.nmba006,g_nmba_m.nmba008, 
       g_nmba_m.nmba009,g_nmba_m.nmba010,g_nmba_m.nmba011,g_nmba_m.nmbaownid,g_nmba_m.nmbaowndp,g_nmba_m.nmbacrtid, 
       g_nmba_m.nmbacrtdp,g_nmba_m.nmbacrtdt,g_nmba_m.nmbamodid,g_nmba_m.nmbamoddt,g_nmba_m.nmbacnfid, 
       g_nmba_m.nmbacnfdt,g_nmba_m.nmbasite_desc,g_nmba_m.nmba002_desc,g_nmba_m.nmbacomp_desc,g_nmba_m.nmba001_desc, 
       g_nmba_m.nmba004_desc,g_nmba_m.nmbaownid_desc,g_nmba_m.nmbaowndp_desc,g_nmba_m.nmbacrtid_desc, 
       g_nmba_m.nmbacrtdp_desc,g_nmba_m.nmbamodid_desc,g_nmba_m.nmbacnfid_desc
   CALL anmt560_nmba_t_mask()
   CALL anmt560_show()
      
END FUNCTION
]]>
  </section>
  <section id="anmt560.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION anmt560_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE anmt560_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="anmt560.update_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION anmt560_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "nmea_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL anmt560_nmea_t_mask_restore('restore_mask_o')
               
      UPDATE nmea_t 
         SET (nmeacomp,nmeadocno,
              nmeaseq
              ,nmeasite,nmea002,nmea017,nmea003,nmea004,nmea001,nmea016,nmea007,nmea008,nmea013,nmea006,nmea009,nmea012,nmea018,nmea019,nmea005,nmea010,nmea011,nmea014,nmea015) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_nmea_d[g_detail_idx].nmeasite,g_nmea_d[g_detail_idx].nmea002,g_nmea_d[g_detail_idx].nmea017, 
                  g_nmea_d[g_detail_idx].nmea003,g_nmea_d[g_detail_idx].nmea004,g_nmea_d[g_detail_idx].nmea001, 
                  g_nmea_d[g_detail_idx].nmea016,g_nmea_d[g_detail_idx].nmea007,g_nmea_d[g_detail_idx].nmea008, 
                  g_nmea_d[g_detail_idx].nmea013,g_nmea_d[g_detail_idx].nmea006,g_nmea_d[g_detail_idx].nmea009, 
                  g_nmea_d[g_detail_idx].nmea012,g_nmea_d[g_detail_idx].nmea018,g_nmea_d[g_detail_idx].nmea019, 
                  g_nmea2_d[g_detail_idx].nmea005,g_nmea2_d[g_detail_idx].nmea010,g_nmea2_d[g_detail_idx].nmea011, 
                  g_nmea2_d[g_detail_idx].nmea014,g_nmea2_d[g_detail_idx].nmea015) 
         WHERE nmeaent = g_enterprise AND nmeacomp = ps_keys_bak[1] AND nmeadocno = ps_keys_bak[2] AND nmeaseq = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "nmea_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "nmea_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL anmt560_nmea_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
