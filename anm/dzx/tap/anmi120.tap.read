<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="anmi120" std_prog="anmi120" erpver="1.0" module="ANM" ver="3" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.l_oofa011" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oofa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_oofa011  #顯示到畫面上

            NEXT FIELD l_oofa011                     #返回原欄位

]]>
  </point>
  <point name="function.anmi120_nmaa001_chk" order="1" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmaa001檢查重複性
PRIVATE FUNCTION anmi120_nmaa001_chk(p_nmaa001,p_nmaa001_t,p_cmd)
   DEFINE p_nmaa001 LIKE nmaa_t.nmaa001
   DEFINE p_nmaa001_t LIKE nmaa_t.nmaa001
   DEFINE p_cmd LIKE type_t.chr5
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa001) THEN 
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND 
         ( p_cmd = 'u' AND (p_nmaa001 != p_nmaa001_t ))) THEN 
         IF NOT ap_chk_notDup(p_nmaa001,"SELECT COUNT(*) FROM nmaa_t WHERE "
         ||"nmaaent = '" ||g_enterprise|| "' AND "||"nmaa001 = '"||p_nmaa001 ||"'",'std-00004',0) THEN 
            LET r_success = FALSE
         END IF
      END IF
   END IF
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa002_chk" order="2" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmaa002有效性檢查  ooef
PRIVATE FUNCTION anmi120_nmaa002_chk(p_nmaa002)
   DEFINE p_nmaa002 LIKE nmaa_t.nmaa002
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa002) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa002,"SELECT COUNT(*) FROM ooef_t WHERE ooefent = '"
            ||g_enterprise||"' AND ooef001 = ?  ","aoo-00094",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa002,"SELECT COUNT(*) FROM ooef_t WHERE ooefent = '"
            ||g_enterprise||"' AND ooef001 = ? AND ooefstus = 'Y' ","aoo-00095",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
   END IF 
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmas002_def" order="3" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmas002帶值
PRIVATE FUNCTION anmi120_nmas002_def(p_nmaa001,p_nmas002)
   DEFINE p_nmaa001 LIKE nmaa_t.nmaa001
   DEFINE p_nmas002 LIKE nmas_t.nmas002
   DEFINE l_count   LIKE type_t.num5
   DEFINE r_nmas002 LIKE nmas_t.nmas002

   LET r_nmas002 = p_nmas002
   IF NOT cl_null(p_nmaa001) AND cl_null(p_nmas002) THEN
      LET l_count = 0
      SELECT count(*) INTO l_count FROM nmas_t
       WHERE nmas001 = p_nmaa001 AND nmasent = g_enterprise AND nmas002 = p_nmaa001
      IF l_count = 0 THEN
         LET r_nmas002 = p_nmaa001
      END IF 
   END IF 
   RETURN r_nmas002
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmas002_chk" order="4" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmas002重複性檢查
PRIVATE FUNCTION anmi120_nmas002_chk(p_nmaa001,p_nmaa001_t,p_nmas002,p_nmas002_t,p_cmd)
   DEFINE p_nmaa001 LIKE nmaa_t.nmaa001
   DEFINE p_nmaa001_t LIKE nmaa_t.nmaa001
   DEFINE p_nmas002 LIKE nmas_t.nmas002
   DEFINE p_nmas002_t LIKE nmas_t.nmas002
   DEFINE p_cmd LIKE type_t.chr5
   DEFINE r_success LIKE type_t.num5

   LET r_success =TRUE
   IF NOT cl_null(p_nmaa001) AND NOT cl_null(p_nmas002) THEN 
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND 
      (p_nmas002 != p_nmas002_t))) THEN 
      #判斷nmas002是否重複，所有資料中nmas002不能重複
         IF NOT ap_chk_notDup(p_nmas002,"SELECT COUNT(*) FROM nmas_t WHERE "
            ||"nmasent = '" ||g_enterprise|| "' AND "|| "nmas002 = '"||p_nmas002 ||"'",'std-00004',0) THEN 
            LET r_success = false
         END IF
      END IF
   END IF
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmas003_chk" order="5" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmas003有效性檢查
PRIVATE FUNCTION anmi120_nmas003_chk(p_nmas003)
   DEFINE p_nmas003 LIKE nmas_t.nmas003
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmas003) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmas003,"SELECT COUNT(*) FROM ooai_t WHERE ooaient = '"
            ||g_enterprise||"' AND ooai001 = ?  ","aoo-00028",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmas003,"SELECT COUNT(*) FROM ooai_t WHERE ooaient = '"
            ||g_enterprise||"' AND ooai001 = ? AND ooaistus = 'Y' ","aoo-00011",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      
   END IF 
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa003_chk" order="6" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmaa003有效性檢查nmag
PRIVATE FUNCTION anmi120_nmaa003_chk(p_nmaa003)
   DEFINE p_nmaa003 LIKE nmaa_t.nmaa003
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa003) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa003,"SELECT COUNT(*) FROM nmag_t WHERE nmagent = '"
            ||g_enterprise||"' AND nmag001 = ?  ","anm-00009",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa003,"SELECT COUNT(*) FROM nmag_t WHERE nmagent = '"
            ||g_enterprise||"' AND nmag001 = ? AND nmagstus = 'Y' ","anm-00010",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
   END IF 
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa002_ref" order="7" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmaa002帶值ooefl
PRIVATE FUNCTION anmi120_nmaa002_ref(p_nmaa002)
   DEFINE p_nmaa002 LIKE nmaa_t.nmaa002
   DEFINE r_ooefl003 LIKE ooefl_t.ooefl003

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_nmaa002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"
      ||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") 
      RETURNING g_rtn_fields
   LET r_ooefl003 = g_rtn_fields[1]
   
   RETURN r_ooefl003
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa003_ref" order="8" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmaa003带值nmagl
PRIVATE FUNCTION anmi120_nmaa003_ref(p_nmaa003)
   DEFINE p_nmaa003 LIKE nmaa_t.nmaa003
   DEFINE r_nmagl003 LIKE nmagl_t.nmagl003

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_nmaa003
   CALL ap_ref_array2(g_ref_fields,"SELECT nmagl003 FROM nmagl_t WHERE nmaglent='"
      ||g_enterprise||"' AND nmagl001=? AND nmagl002='"||g_dlang||"'","") 
      RETURNING g_rtn_fields
   LET r_nmagl003 = g_rtn_fields[1]
   RETURN r_nmagl003
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa004_ref" order="9" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmaa004带值nmabl
#開戶銀行之銀行類型為0.內部銀行時則本欄帶帳戶編碼，
#不可異動(寫在set_entry段)
PRIVATE FUNCTION anmi120_nmaa004_ref(p_nmaa004,p_nmaa005)
   DEFINE p_nmaa004 LIKE nmaa_t.nmaa004
   DEFINE p_nmaa005 LIKE nmaa_t.nmaa005
   DEFINE l_nmab002 LIKE nmab_t.nmab002
   DEFINE r_nmabl003 LIKE nmabl_t.nmabl003
   DEFINE r_nmaa005 LIKE nmaa_t.nmaa005
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmaa_m.nmaa004
   CALL ap_ref_array2(g_ref_fields,"SELECT nmabl003 FROM nmabl_t WHERE nmablent='"
      ||g_enterprise||"' AND nmabl001=? AND nmabl002='"||g_dlang||"'","") 
      RETURNING g_rtn_fields
   LET r_nmabl003 = g_rtn_fields[1]

   LET l_nmab002 = ''
   SELECT nmab002 INTO l_nmab002 FROM nmab_t 
    WHERE nmabent = g_enterprise AND nmab001 = p_nmaa004
   IF l_nmab002 = '0' THEN
      LET r_nmaa005 = p_nmaa004
   ELSE
      LET r_nmaa005 = p_nmaa005
   END IF 
   RETURN r_nmabl003,r_nmaa005
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa004_chk" order="10" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#nmaa004有效性檢查nmab
PRIVATE FUNCTION anmi120_nmaa004_chk(p_nmaa004)
   DEFINE p_nmaa004 LIKE nmaa_t.nmaa004
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa004) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa004,"SELECT COUNT(*) FROM nmab_t WHERE nmabent = '"
            ||g_enterprise||"' AND nmab001 = ?  ","anm-00011",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa004,"SELECT COUNT(*) FROM nmab_t WHERE nmabent = '"
            ||g_enterprise||"' AND nmab001 = ? AND nmabstus = 'Y' ","anm-00012",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      
   END IF 
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa010_ref" order="11" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_nmaa010_ref(p_nmaa010)
   DEFINE p_nmaa010 LIKE nmaa_t.nmaa010
   DEFINE r_oofc012 LIKE oofc_t.oofc012
    
   LET r_oofc012 = ''
   SELECT oofc012 INTO r_oofc012 FROM oofc_t
    WHERE oofcent = g_enterprise AND oofc001 = p_nmaa010
   RETURN r_oofc012
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa008_ref" order="12" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#
PRIVATE FUNCTION anmi120_nmaa008_ref(p_nmaa008)
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE r_oofa011 LIKE oofa_t.oofa011
   
   LET r_oofa011 = ''
   SELECT oofa011 INTO r_oofa011 FROM oofa_t
    WHERE oofaent = g_enterprise AND oofa001 = p_nmaa008
    
   RETURN r_oofa011
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofb017_ref" order="13" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofb017_ref(p_oofb017,p_nmaa009)
   DEFINE p_oofb017 LIKE oofb_t.oofb017
   DEFINE p_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE r_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE l_sql     STRING
   
   LET r_nmaa009 = p_nmaa009
   IF cl_null(p_oofb017) THEN 
      LEt r_nmaa009 = ''
   ELSE
      LET l_sql = " SELECT oofb001 FROM oofb_t ",
                  "  WHERE oofbent = '",g_enterprise,"' AND oofb017 = '",p_oofb017,"' "
      IF NOT cl_null(g_nmaa_m.nmaa008) THEN
         LET l_sql = l_sql," AND oofb002 = '",g_nmaa_m.nmaa008,"'"
      END IF 
      PREPARE anmi120_oofb017_pre FROM l_sql
      DECLARE anmi120_oofb017_cs CURSOR FOR anmi120_oofb017_pre
      FOREACH anmi120_oofb017_cs INTO r_nmaa009
         IF NOT cl_null(r_nmaa009) THEN
           EXIT FOREACH
         END IF 
      END FOREACH   
   END IF 
   RETURN r_nmaa009   
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofa011_ref" order="14" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofa011_ref(p_oofa011,p_nmaa008)
   DEFINE p_oofa011 LIKE oofa_t.oofa011
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE r_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_sql     STRING
   LET r_nmaa008 = p_nmaa008
   IF cl_null(p_oofa011) THEN 
      LET r_nmaa008 = ''
   ELSE
      LET l_sql = " SELECT oofa001 FROM oofa_t ",
                  "  WHERE oofaent = '",g_enterprise,"' AND oofa011 = '",p_oofa011,"' AND oofa002 = '7' "
      PREPARE anmi120_oofa011_pre FROM l_sql
      DECLARE anmi120_oofa011_cs CURSOR FOR anmi120_oofa011_pre
      FOREACH anmi120_oofa011_cs INTO r_nmaa008 
        IF NOT cl_null(r_nmaa008) THEN
           EXIT FOREACH
        END IF  
      END FOREACH  
   END IF
   RETURN r_nmaa008 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofc012_ref" order="15" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofc012_ref(p_oofc012,p_nmaa010)
   DEFINE p_oofc012 LIKE oofc_t.oofc012
   DEFINE p_nmaa010 LIKE nmaa_t.nmaa010
   DEFINE r_nmaa010 LIKE nmaa_t.nmaa010
   DEFINE l_sql     STRING
   
   LET r_nmaa010 = p_nmaa010
   IF cl_null(p_oofc012) THEN
      LET r_nmaa010 = ''
   END IF 
   IF cl_null(p_nmaa010) AND NOT cl_null(p_oofc012) THEN
      LET l_sql = " SELECT oofc001 FROM oofc_t ",
                  "  WHERE oofcent = '",g_enterprise,"' AND oofc012 = '",p_oofc012,"' "
      IF NOT cl_null(g_nmaa_m.nmaa008) THEN
         LET l_sql = l_sql," AND oofc002 = '",g_nmaa_m.nmaa008,"'"
      END IF 
      PREPARE anmi120_oofc012_pre FROM l_sql
      DECLARE anmi120_oofc012_cs CURSOR FOR anmi120_oofc012_pre
      FOREACH anmi120_oofc012_cs INTO r_nmaa010
         IF NOT cl_null(r_nmaa010) THEN
           EXIT FOREACH
         END IF 
      END FOREACH   
   END IF 
   RETURN r_nmaa010
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofa011_chk" order="16" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofa011_chk(p_oofa011,p_nmaa008)
   DEFINE p_oofa011 LIKE oofa_t.oofa011
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_oofa001 LIKE oofa_t.oofa001
   DEFINE l_oofastus LIKE oofa_t.oofastus
   DEFINE l_sql     STRING
   DEFINE r_success LIKE type_t.num5
   
   LET l_oofa001 = ''
   LET l_oofastus = ''
   LET r_success = TRUE
   LET l_sql = " SELECT oofa001,oofastus FROM oofa_t ",
               "  WHERE oofaent = '",g_enterprise,"' AND oofa011 = '",p_oofa011,"' AND oofa002 = '7'"
   PREPARE anmi120_oofa011_chk_pre FROM l_sql
   DECLARE anmi120_oofa011_chk_cs CURSOR FOR anmi120_oofa011_chk_pre
   FOREACH anmi120_oofa011_chk_cs INTO l_oofa001,l_oofastus
      IF NOT cl_null(l_oofa001) THEN
         EXIT FOREACH
      END IF 
   END FOREACH
   IF cl_null(l_oofa001) THEN
      CALL anmi120_oofa_ins(p_oofa011)
   ELSE
      IF l_oofastus = 'N' THEN
         CALL cl_err(p_oofa011,'anm-00025',0)
         LET r_success = FALSE
      END IF 
   END IF 
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofa_ins" order="17" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofa_ins(p_oofa011)
   DEFINE p_oofa011 LIKE oofa_t.oofa011
   DEFINE l_success LIKE type_t.num5
   DEFINE l_wc      STRING
   DEFINE l_oofa       RECORD LIKE oofa_t.*
   
   IF cl_null(p_oofa011) THEN RETURN END IF 
   LET l_oofa.oofastus = 'Y'
   LET l_oofa.oofaent  = g_enterprise
   LET l_wc = " oofaent = ",g_enterprise
   CALL s_aooi350_get_idno('oofa001','oofa_t',l_wc)
      RETURNING l_success,l_oofa.oofa001
   LET l_oofa.oofa002  = "7"
   LET l_oofa.oofa011  = p_oofa011
   LET l_oofa.oofa017  = NULL
   LET l_oofa.oofaownid = g_user
   LET l_oofa.oofaowndp = g_dept
   LET l_oofa.oofacrtid = g_user
   LET l_oofa.oofacrtdp = g_dept
   LET l_oofa.oofacrtdt = cl_get_current()    #资料创建日
   LET l_oofa.oofamodid = NULL
   LET l_oofa.oofamoddt = NULL
   INSERT INTO oofa_t VALUES (l_oofa.*)
   IF SQLCA.sqlcode  THEN
      CALL cl_err("oofa_t",SQLCA.sqlcode,1)
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa009_ref" order="18" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_nmaa009_ref(p_nmaa009)
   DEFINE p_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE r_oofb017 LIKE oofb_t.oofb017
   
   LET r_oofb017 = ''  
   SELECT oofb017 INTO r_oofb017 FROM oofb_t
    WHERE oofbent = g_enterprise AND oofb001 = p_nmaa009
   RETURN r_oofb017
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofb_ins" order="19" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofb_ins(p_oofb017,p_nmaa008)
   DEFINE p_oofb017 LIKE oofb_t.oofb017
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_success LIKE type_t.num5
   DEFINE l_wc      STRING
   DEFINE l_oofb       RECORD LIKE oofb_t.*
   
   IF cl_null(p_oofb017) THEN RETURN END IF 
   LET l_oofb.oofbstus = 'Y'
   LET l_oofb.oofbent  = g_enterprise
   LET l_wc = " oofbent = ",g_enterprise
   CALL s_aooi350_get_idno('oofb001','oofb_t',l_wc)
      RETURNING l_success,l_oofb.oofb001
   LET l_oofb.oofb002  = p_nmaa008
   LET l_oofb.oofb008 = '2'
   LET l_oofb.oofb009 = 'B'
   LET l_oofb.oofb010 = 'N'
   LET l_oofb.oofb018 = '9999/12/30'
   LET l_oofb.oofb017  = p_oofb017
   LET l_oofb.oofbownid = g_user
   LET l_oofb.oofbowndp = g_dept
   LET l_oofb.oofbcrtid = g_user
   LET l_oofb.oofbcrtdp = g_dept
   LET l_oofb.oofbcrtdt = cl_get_current()    #资料创建日
   LET l_oofb.oofbmodid = NULL
   LET l_oofb.oofbmoddt = NULL
   INSERT INTO oofb_t VALUES (l_oofb.*)
   IF SQLCA.sqlcode  THEN
      CALL cl_err("oofb_t",SQLCA.sqlcode,1)
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofb017_chk" order="20" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofb017_chk(p_oofb017,p_nmaa008)
   DEFINE p_oofb017 LIKE oofb_t.oofb017
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_oofb001 LIKE oofb_t.oofb001
   DEFINE l_oofbstus LIKE oofb_t.oofbstus
   DEFINE l_sql     STRING
   DEFINE r_success LIKE type_t.num5
   
   LET l_oofb001 = ''
   LET l_oofbstus = ''
   LET r_success = TRUE
   LET l_sql = " SELECT oofb001,oofbstus FROM oofb_t ",
               "  WHERE oofbent = '",g_enterprise,"' AND oofb017 = '",p_oofb017,"'"
   IF NOT cl_null(p_nmaa008) THEN
      LET l_sql = l_sql ," AND oofb002 = '",p_nmaa008,"'"
   END IF 
   PREPARE anmi120_oofb017_chk_pre FROM l_sql
   DECLARE anmi120_oofb017_chk_cs CURSOR FOR anmi120_oofb017_chk_pre
   FOREACH anmi120_oofb017_chk_cs INTO l_oofb001,l_oofbstus
      IF NOT cl_null(l_oofb001) THEN
         EXIT FOREACH
      END IF 
   END FOREACH
   IF cl_null(l_oofb001) THEN
      CALL anmi120_oofb_ins(p_oofb017,p_nmaa008)
   ELSE
      IF l_oofbstus = 'N' THEN 
         CALL cl_err(p_oofb017,'anm-00025',0)
         LET r_success = FALSE
      END IF 
   END IF 
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofc012_chk" order="21" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofc012_chk(p_oofc012,p_nmaa008)
   DEFINE p_oofc012 LIKE oofc_t.oofc012
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_oofc001 LIKE oofc_t.oofc001
   DEFINE l_oofcstus LIKE oofc_t.oofcstus
   DEFINE l_sql     STRING
   DEFINE r_success LIKE type_t.num5
   
   LET l_oofc001 = ''
   LET l_oofcstus = ''
   LET r_success = TRUE
   LET l_sql = " SELECT oofc001 FROM oofc_t ",
               "  WHERE oofcent = '",g_enterprise,"' AND oofc012 = '",p_oofc012,"'"
   IF NOT cl_null(p_nmaa008) THEN
      LET l_sql = l_sql," AND oofc002 = '",p_nmaa008,"'"
   END IF 
   PREPARE anmi120_oofc012_chk_pre FROM l_sql
   DECLARE anmi120_oofc012_chk_cs CURSOR FOR anmi120_oofc012_chk_pre
   FOREACH anmi120_oofc012_chk_cs INTO l_oofc001,l_oofcstus
      IF NOT cl_null(l_oofc001) THEN
         EXIT FOREACH
      END IF 
   END FOREACH
   IF cl_null(l_oofc001) THEN
      CALL anmi120_oofc_ins(p_oofc012,p_nmaa008)
   ELSE
      IF l_oofcstus = 'N' THEN 
         CALL cl_err(p_oofc012,'anm-00025',0)
         LET r_success = FALSE
      END IF 
   END IF 
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_oofc_ins" order="22" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_oofc_ins(p_oofc012,p_nmaa008)
   DEFINE p_oofc012 LIKE oofc_t.oofc012
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_success LIKE type_t.num5
   DEFINE l_wc      STRING
   DEFINE l_oofc    RECORD LIKE oofc_t.*
   
   IF cl_null(p_oofc012) THEN RETURN END IF 
   LET l_oofc.oofcstus = 'Y'
   LET l_oofc.oofcent  = g_enterprise
   LET l_wc = " oofcent = ",g_enterprise
   CALL s_aooi350_get_idno('oofc001','oofc_t',l_wc)
      RETURNING l_success,l_oofc.oofc001
   LET l_oofc.oofc002  = p_nmaa008
   LET l_oofc.oofc008 = '1'
   LET l_oofc.oofc009 = 'A'
   LET l_oofc.oofc010 = 'N'
   LET l_oofc.oofc013 = '9999/12/30'
   LET l_oofc.oofc012  = p_oofc012
   LET l_oofc.oofcownid = g_user
   LET l_oofc.oofcowndp = g_dept
   LET l_oofc.oofccrtid = g_user
   LET l_oofc.oofccrtdp = g_dept
   LET l_oofc.oofccrtdt = cl_get_current()    #资料创建日
   LET l_oofc.oofcmodid = NULL
   LET l_oofc.oofcmoddt = NULL
   INSERT INTO oofc_t VALUES (l_oofc.*)
   IF SQLCA.sqlcode  THEN
      CALL cl_err("oofc_t",SQLCA.sqlcode,1)
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.anmi120_nmaa008_ref_nmaa009_nmaa010" order="23" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION anmi120_nmaa008_ref_nmaa009_nmaa010(p_nmaa008)
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008 
   DEFINE l_sql     STRING
   DEFINE r_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE r_nmaa010 LIKE nmaa_t.nmaa010
   
   LET r_nmaa009 = ''
   LET r_nmaa010 = ''
   IF NOT cl_null(p_nmaa008) THEN
      LET l_sql = " SELECT oofb001 FROM oofb_t ",
                  "  WHERE oofbent = '",g_enterprise,"' AND oofb002 = '",p_nmaa008,"'",
                  "    AND oofbstus = 'Y' "
      PREPARE anmi120_nmaa008_ref_nmaa009_pre FROM l_sql
      DECLARE anmi120_nmaa008_ref_nmaa009_cs CURSOR FOR anmi120_nmaa008_ref_nmaa009_pre
      FOREACH anmi120_nmaa008_ref_nmaa009_cs INTO r_nmaa009
         IF NOT cl_null(r_nmaa009) THEN
            EXIT FOREACH
         END IF 
      END FOREACH
      LET l_sql = " SELECT oofc001 FROM oofc_t ",
                  "  WHERE oofcent = '",g_enterprise,"' AND oofc002 = '",p_nmaa008,"'",
                  "    AND oofcstus = 'Y' "
      PREPARE anmi120_nmaa008_ref_nmaa010_pre FROM l_sql
      DECLARE anmi120_nmaa008_ref_nmaa010_cs CURSOR FOR anmi120_nmaa008_ref_nmaa010_pre
      FOREACH anmi120_nmaa008_ref_nmaa010_cs INTO r_nmaa010
         IF NOT cl_null(r_nmaa010) THEN
            EXIT FOREACH
         END IF 
      END FOREACH
   END IF 
   RETURN r_nmaa009,r_nmaa010
   
END FUNCTION]]>
  </point>
  <point name="construct.c.nmaa001" order="" ver="2" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaa001  #顯示到畫面上
            NEXT FIELD nmaa001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.nmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaa002  #顯示到畫面上

            NEXT FIELD nmaa002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.nmaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_nmag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaa003  #顯示到畫面上

            NEXT FIELD nmaa003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.nmaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_nmab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaa004  #顯示到畫面上

            NEXT FIELD nmaa004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.nmaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaacrtdp  #顯示到畫面上

            NEXT FIELD nmaacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.nmaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaacrtid  #顯示到畫面上

            NEXT FIELD nmaacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.nmaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaamodid  #顯示到畫面上

            NEXT FIELD nmaamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.nmaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaaowndp  #顯示到畫面上

            NEXT FIELD nmaaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.nmaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaaownid  #顯示到畫面上

            NEXT FIELD nmaaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.nmas003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmas003  #顯示到畫面上

            NEXT FIELD nmas003                     #返回原欄位

]]>
  </point>
  <point name="input.a.l_oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT anmi120_oofa011_chk(g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008) THEN
               LET g_nmaa_m.l_oofa011 = g_nmaa_m_t.l_oofa011
               LET g_nmaa_m.nmaa008 = g_nmaa_m_t.nmaa008
               NEXT FIELD l_oofa011
            END IF 
            CALL anmi120_oofa011_ref(g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008) 
              RETURNING g_nmaa_m.nmaa008
            ]]>
  </point>
  <point name="input.a.l_oofb017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT anmi120_oofb017_chk(g_nmaa_m.l_oofb017,g_nmaa_m.nmaa008) THEN
               LET g_nmaa_m.l_oofb017 = g_nmaa_m_t.l_oofb017
               LET g_nmaa_m.nmaa009 = g_nmaa_m_t.nmaa009
               NEXT FIELD nmaa009
            END IF 
            CALL anmi120_oofb017_ref(g_nmaa_m.l_oofb017,g_nmaa_m.nmaa009)
               RETURNING g_nmaa_m.nmaa009]]>
  </point>
  <point name="input.a.l_oofc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT anmi120_oofc012_chk(g_nmaa_m.l_oofc012,g_nmaa_m.nmaa008) THEN
               LET g_nmaa_m.l_oofc012 = g_nmaa_m_t.l_oofc012
               LET g_nmaa_m.nmaa010 = g_nmaa_m_t.nmaa010
               NEXT FIELD l_oofc012
            END IF
            CALL anmi120_oofc012_ref(g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010) 
               RETURNING g_nmaa_m.nmaa010]]>
  </point>
  <point name="input.a.nmaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT anmi120_nmaa001_chk(g_nmaa_m.nmaa001,g_nmaa_m_t.nmaa001,p_cmd) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa001 = ''
               ELSE
                  LET g_nmaa_m.nmaa001 = g_nmaa_m_t.nmaa001
               END IF 
               NEXT FIELD nmaa001
            END IF
]]>
  </point>
  <point name="input.a.nmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY ' ' TO g_nmaa_m.nmaa002_desc
            IF NOT anmi120_nmaa002_chk(g_nmaa_m.nmaa002) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa002 = ''
               ELSE
                  LET g_nmaa_m.nmaa002 = g_nmaa_m_t.nmaa002
               END IF 
               CALL anmi120_nmaa002_ref(g_nmaa_m.nmaa002) RETURNING g_nmaa_m.nmaa002_desc
               DISPLAY BY NAME g_nmaa_m.nmaa002_desc
               NEXT FIELD nmaa002
            END IF 
            CALL anmi120_nmaa002_ref(g_nmaa_m.nmaa002) RETURNING g_nmaa_m.nmaa002_desc
            DISPLAY BY NAME g_nmaa_m.nmaa002_desc
 ]]>
  </point>
  <point name="input.a.nmaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY ' ' TO g_nmaa_m.nmaa003_desc
            IF NOT anmi120_nmaa003_chk(g_nmaa_m.nmaa003) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa003 = ''
               ELSE
                  LET g_nmaa_m.nmaa003 = g_nmaa_m_t.nmaa003
               END IF 
               CALL anmi120_nmaa003_ref(g_nmaa_m.nmaa003) RETURNING g_nmaa_m.nmaa003_desc
               DISPLAY BY NAME g_nmaa_m.nmaa003_desc
               NEXT FIELD nmaa003
            END IF 
            CALL anmi120_nmaa003_ref(g_nmaa_m.nmaa003) RETURNING g_nmaa_m.nmaa003_desc
            DISPLAY BY NAME g_nmaa_m.nmaa003_desc
]]>
  </point>
  <point name="input.a.nmaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY ' ' TO g_nmaa_m.nmaa004_desc
            IF NOT anmi120_nmaa004_chk(g_nmaa_m.nmaa004) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa004 = ''
               ELSE
                  LET g_nmaa_m.nmaa004 = g_nmaa_m_t.nmaa004
               END IF
               CALL anmi120_nmaa004_ref(g_nmaa_m.nmaa004,g_nmaa_m.nmaa005) 
                  RETURNING g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005
               DISPLAY BY NAME g_nmaa_m.nmaa004_desc
               DISPLAY BY NAME g_nmaa_m.nmaa005
               NEXT FIELD nmaa004
            END IF
            CALL anmi120_nmaa004_ref(g_nmaa_m.nmaa004,g_nmaa_m.nmaa005) 
               RETURNING g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005
            DISPLAY BY NAME g_nmaa_m.nmaa004_desc
            DISPLAY BY NAME g_nmaa_m.nmaa005
            CALL anmi120_set_entry(p_cmd)
            CALL anmi120_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.a.nmaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaacrtdp_desc
]]>
  </point>
  <point name="input.a.nmaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaacrtid_desc
]]>
  </point>
  <point name="input.a.nmaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaamodid_desc
]]>
  </point>
  <point name="input.a.nmaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaaowndp_desc
]]>
  </point>
  <point name="input.a.nmaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaaownid_desc
]]>
  </point>
  <point name="input.a.page1.nmas002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT anmi120_nmas002_chk(g_nmaa_m.nmaa001,g_nmaa_m_t.nmaa001,g_nmas_d[l_ac].nmas002,g_nmas_d_t.nmas002,l_cmd) THEN
               IF l_cmd = 'a' THEN
                  LEt g_nmas_d[l_ac].nmas002 = ''
               ELSE
                  LET g_nmas_d[l_ac].nmas002 = g_nmas_d_t.nmas002
               END IF 
               NEXT FIELD nmas002
            END IF 
]]>
  </point>
  <point name="input.a.page1.nmas003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT anmi120_nmas003_chk(g_nmas_d[l_ac].nmas003) THEN
               IF l_cmd = 'a' THEN
                  LET g_nmas_d[l_ac].nmas003 = ''
               ELSE
                  LET g_nmas_d[l_ac].nmas003 = g_nmas_d_t.nmas003
               END IF 
               NEXT FIELD nmas003
            END IF ]]>
  </point>
  <point name="input.b.page1.nmas002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL anmi120_nmas002_def(g_nmaa_m.nmaa001,g_nmas_d[l_ac].nmas002) 
               RETURNING g_nmas_d[l_ac].nmas002]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.l_oofa011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmaa_m.nmaa008             #給予default值

            #給予arg

            CALL q_oofa001()                                #呼叫開窗

           # LET g_nmaa_m.l_oofa011 = g_qryparam.return1              #將開窗取得的值回傳到變數
            IF g_nmaa_m.nmaa008 != g_qryparam.return1 THEN
            CALL anmi120_nmaa008_ref_nmaa009_nmaa010(g_qryparam.return1) 
               RETURNING g_nmaa_m.nmaa009,g_nmaa_m.nmaa010
            END IF 
            LET g_nmaa_m.nmaa008 = g_qryparam.return1
            CALL anmi120_nmaa008_ref(g_nmaa_m.nmaa008) 
               RETURNING g_nmaa_m.l_oofa011
            DISPLAY g_nmaa_m.l_oofa011 TO l_oofa011              #顯示到畫面上
            CALL anmi120_nmaa008_ref_nmaa009_nmaa010(g_nmaa_m.nmaa008) 
               RETURNING g_nmaa_m.nmaa009,g_nmaa_m.nmaa010
            CALL anmi120_nmaa009_ref(g_nmaa_m.nmaa009) RETURNING g_nmaa_m.l_oofb017
            DISPLAY BY NAME g_nmaa_m.l_oofb017
            CALL anmi120_nmaa010_ref(g_nmaa_m.nmaa010) RETURNING g_nmaa_m.l_oofc012
            DISPLAY BY NAME g_nmaa_m.l_oofc012 
            NEXT FIELD l_oofa011                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmaa_m.nmaa002             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_nmaa_m.nmaa002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmaa_m.nmaa002 TO nmaa002              #顯示到畫面上
            CALL anmi120_nmaa002_ref(g_nmaa_m.nmaa002) RETURNING g_nmaa_m.nmaa002_desc
            DISPLAY BY NAME g_nmaa_m.nmaa002_desc
            NEXT FIELD nmaa002                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmaa_m.nmaa003             #給予default值

            #給予arg

            CALL q_nmag001()                                #呼叫開窗

            LET g_nmaa_m.nmaa003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmaa_m.nmaa003 TO nmaa003              #顯示到畫面上
            CALL anmi120_nmaa003_ref(g_nmaa_m.nmaa003) RETURNING g_nmaa_m.nmaa003_desc
            DISPLAY BY NAME g_nmaa_m.nmaa003_desc
            NEXT FIELD nmaa003                          #返回原欄位

]]>
  </point>
  <point name="input.c.nmaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmaa_m.nmaa004             #給予default值

            #給予arg

            CALL q_nmab001()                                #呼叫開窗

            LET g_nmaa_m.nmaa004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmaa_m.nmaa004 TO nmaa004              #顯示到畫面上
            CALL anmi120_nmaa004_ref(g_nmaa_m.nmaa004,g_nmaa_m.nmaa005) 
               RETURNING g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005
            DISPLAY BY NAME g_nmaa_m.nmaa004_desc
            DISPLAY BY NAME g_nmaa_m.nmaa005
            CALL anmi120_set_entry(p_cmd)
            CALL anmi120_set_no_entry(p_cmd)
            NEXT FIELD nmaa004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.nmas003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmas_d[l_ac].nmas003             #給予default值

            #給予arg

            CALL q_ooai001()                                #呼叫開窗

            LET g_nmas_d[l_ac].nmas003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmas_d[l_ac].nmas003 TO nmas003              #顯示到畫面上

            NEXT FIELD nmas003                          #返回原欄位

]]>
  </point>
  <point name="input.g.nmaa006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL anmi120_set_entry(p_cmd)
            CALL anmi120_set_no_entry(p_cmd)
            IF g_nmaa_m.nmaa006 = 'N' THEN
               LET g_nmaa_m.nmaa007 = ''
               CALL cl_set_comp_required('nmaa007',FALSE)
            ELSE
               CALL cl_set_comp_required('nmaa007',TRUE)
            END IF ]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_nmaa_m.nmaa001)  THEN
                  CALL n_nmaal(g_nmaa_m.nmaa001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_nmaa_m.nmaa001
                  CALL ap_ref_array2(g_ref_fields," SELECT nmaal003 FROM nmaal_t WHERE nmaalent = '"
                      ||g_enterprise||"' AND nmaal001 = ? AND nmaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_nmaa_m.nmaal003 = g_rtn_fields[1]

                  DISPLAY BY NAME g_nmaa_m.nmaal003
               END IF]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="menu.open_anmi121" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET la_param.prog = "anmi121"
               LET la_param.param[1] = g_nmaa_m.nmaa001
               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun(ls_js)
               #CALL cl_cmdrun("anmi121 "||g_nmaa_m.nmaa001)]]>
  </point>
  <point name="menu.open_aooi350" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_nmaa_m.nmaa008) THEN
                  CALL cl_cmdrun("aooi350 ")
               ELSE
                  CALL cl_cmdrun("aooi350 "||g_nmaa_m.nmaa008)
               END IF ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT nmab002 INTO l_nmab002 FROM nmab_t 
    WHERE nmabent = g_enterprise AND nmab001 = g_nmaa_m.nmaa004
   IF l_nmab002 != '0' THEN
      CALL cl_set_comp_entry('nmaa005',TRUE)
   END IF 
   IF g_nmaa_m.nmaa006 = 'Y' THEN
      CALL cl_set_comp_entry('nmaa007',TRUE)
   END IF ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_nmab002 LIKE nmab_t.nmab002]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT nmab002 INTO l_nmab002 FROM nmab_t 
    WHERE nmabent = g_enterprise AND nmab001 = g_nmaa_m.nmaa004
   IF l_nmab002 = '0' THEN
      CALL cl_set_comp_entry('nmaa005',FALSE)
   END IF 
   IF g_nmaa_m.nmaa006 = 'N' THEN
      CALL cl_set_comp_entry('nmaa007',FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_nmab002 LIKE nmab_t.nmab002]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmaa_m.nmaa001
   CALL ap_ref_array2(g_ref_fields," SELECT nmaal003 FROM nmaal_t WHERE nmaalent = '"||g_enterprise||"' AND nmaal001 = ? AND nmaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_nmaa_m.nmaal003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_nmaa_m.nmaal003
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaa002
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaa002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaa002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaa003
            CALL ap_ref_array2(g_ref_fields,"SELECT nmagl003 FROM nmagl_t WHERE nmaglent='"||g_enterprise||"' AND nmagl001=? AND nmagl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaa003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaa003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaa004
            CALL ap_ref_array2(g_ref_fields,"SELECT nmabl003 FROM nmabl_t WHERE nmablent='"||g_enterprise||"' AND nmabl001=? AND nmabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaa004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaa004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_nmaa_m.nmaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_nmaa_m.nmaamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_nmaa_m.nmaamodid_desc
   CALL anmi120_nmaa008_ref(g_nmaa_m.nmaa008) RETURNING g_nmaa_m.l_oofa011
   DISPLAY BY NAME g_nmaa_m.l_oofa011
   CALL anmi120_nmaa009_ref(g_nmaa_m.nmaa009) RETURNING g_nmaa_m.l_oofb017
   DISPLAY BY NAME g_nmaa_m.l_oofb017
   CALL anmi120_nmaa010_ref(g_nmaa_m.nmaa010) RETURNING g_nmaa_m.l_oofc012
   DISPLAY BY NAME g_nmaa_m.l_oofc012]]>
  </point>
  <section id="anmi120.b_fill" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION anmi120_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_nmas_d.clear()    #g_nmas_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF anmi120_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE nmas002,nmas003,nmas004,nmas005  FROM nmas_t",   
                  " INNER JOIN nmaa_t ON nmaa001 = nmas001 ",
 
                  #"",
                  
                  "",
                  
                  " WHERE nmasent=? AND nmas001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY nmas_t.nmas002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE anmi120_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR anmi120_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_nmaa_m.nmaa001
                                               
      FOREACH b_fill_cs INTO g_nmas_d[l_ac].nmas002,g_nmas_d[l_ac].nmas003,g_nmas_d[l_ac].nmas004,g_nmas_d[l_ac].nmas005 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_nmas_d.deleteElement(g_nmas_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE anmi120_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION anmi120_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL anmi120_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.browser_fill" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION anmi120_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_nmaa_m.* TO NULL
   CALL g_nmas_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "nmaa001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE nmaa001 ",
                      " FROM nmaa_t ",
                      " ",
                      " LEFT JOIN nmas_t ON nmasent = nmaaent AND nmaa001 = nmas001 ",
 
 
                      " LEFT JOIN nmaal_t ON nmaa001 = nmaal001 AND nmaal002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE nmaaent = '" ||g_enterprise|| "' AND nmasent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("nmaa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE nmaa001 ",
                      " FROM nmaa_t ", 
                      "  ",
                      "  LEFT JOIN nmaal_t ON nmaa001 = nmaal001 AND nmaal002 = '",g_lang,"' ",
                      " WHERE nmaaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("nmaa_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照nmaa001 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT nmaastus,nmaa001 ",
               " FROM nmaa_t ",
               "  ",
               "  LEFT JOIN nmas_t ON nmasent = nmaaent AND nmaa001 = nmas001 ",
 
 
               "  LEFT JOIN nmaal_t ON nmaa001 = nmaal001 AND nmaal002 = '",g_lang,"' ",
               "  ",
               
               " WHERE nmaaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("nmaa_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_nmaa001
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION anmi120_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY nmaa001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL anmi120_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.construct" ver="6" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION anmi120_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_nmaa_m.* TO NULL
   CALL g_nmas_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON nmaa001,nmaal003,nmaa002,nmaa003,nmaa004,nmaa005,nmaa006,nmaa007,l_oofa011, 
          nmaa008,l_oofc012,nmaa010,l_oofb017,nmaa009,nmaastus,nmaaownid,nmaaowndp,nmaacrtid,nmaacrtdp, 
          nmaacrtdt,nmaamodid,nmaamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<nmaacrtdt>>----
         AFTER FIELD nmaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmaamoddt>>----
         AFTER FIELD nmaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmaacnfdt>>----
         
         #----<<nmaapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.nmaa001
         ON ACTION controlp INFIELD nmaa001
            #add-point:ON ACTION controlp INFIELD nmaa001
            {<point name="construct.c.nmaa001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa001
            #add-point:BEFORE FIELD nmaa001
            {<point name="construct.b.nmaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa001
            
            #add-point:AFTER FIELD nmaa001
            {<point name="construct.a.nmaa001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaal003
            #add-point:BEFORE FIELD nmaal003
            {<point name="construct.b.nmaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaal003
            
            #add-point:AFTER FIELD nmaal003
            {<point name="construct.a.nmaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaal003
         ON ACTION controlp INFIELD nmaal003
            #add-point:ON ACTION controlp INFIELD nmaal003
            {<point name="construct.c.nmaal003" />}
            #END add-point
 
         #Ctrlp:construct.c.nmaa002
         ON ACTION controlp INFIELD nmaa002
            #add-point:ON ACTION controlp INFIELD nmaa002
            {<point name="construct.c.nmaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa002
            #add-point:BEFORE FIELD nmaa002
            {<point name="construct.b.nmaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa002
            
            #add-point:AFTER FIELD nmaa002
            {<point name="construct.a.nmaa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa003
         ON ACTION controlp INFIELD nmaa003
            #add-point:ON ACTION controlp INFIELD nmaa003
            {<point name="construct.c.nmaa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa003
            #add-point:BEFORE FIELD nmaa003
            {<point name="construct.b.nmaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa003
            
            #add-point:AFTER FIELD nmaa003
            {<point name="construct.a.nmaa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa004
         ON ACTION controlp INFIELD nmaa004
            #add-point:ON ACTION controlp INFIELD nmaa004
            {<point name="construct.c.nmaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa004
            #add-point:BEFORE FIELD nmaa004
            {<point name="construct.b.nmaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa004
            
            #add-point:AFTER FIELD nmaa004
            {<point name="construct.a.nmaa004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa005
            #add-point:BEFORE FIELD nmaa005
            {<point name="construct.b.nmaa005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa005
            
            #add-point:AFTER FIELD nmaa005
            {<point name="construct.a.nmaa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa005
         ON ACTION controlp INFIELD nmaa005
            #add-point:ON ACTION controlp INFIELD nmaa005
            {<point name="construct.c.nmaa005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa006
            #add-point:BEFORE FIELD nmaa006
            {<point name="construct.b.nmaa006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa006
            
            #add-point:AFTER FIELD nmaa006
            {<point name="construct.a.nmaa006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa006
         ON ACTION controlp INFIELD nmaa006
            #add-point:ON ACTION controlp INFIELD nmaa006
            {<point name="construct.c.nmaa006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa007
            #add-point:BEFORE FIELD nmaa007
            {<point name="construct.b.nmaa007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa007
            
            #add-point:AFTER FIELD nmaa007
            {<point name="construct.a.nmaa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa007
         ON ACTION controlp INFIELD nmaa007
            #add-point:ON ACTION controlp INFIELD nmaa007
            {<point name="construct.c.nmaa007" />}
            #END add-point
 
         #Ctrlp:construct.c.l_oofa011
         ON ACTION controlp INFIELD l_oofa011
            #add-point:ON ACTION controlp INFIELD l_oofa011
            {<point name="construct.c.l_oofa011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_oofa011
            #add-point:BEFORE FIELD l_oofa011
            {<point name="construct.b.l_oofa011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_oofa011
            
            #add-point:AFTER FIELD l_oofa011
            {<point name="construct.a.l_oofa011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa008
            #add-point:BEFORE FIELD nmaa008
            {<point name="construct.b.nmaa008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa008
            
            #add-point:AFTER FIELD nmaa008
            {<point name="construct.a.nmaa008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa008
         ON ACTION controlp INFIELD nmaa008
            #add-point:ON ACTION controlp INFIELD nmaa008
            {<point name="construct.c.nmaa008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_oofc012
            #add-point:BEFORE FIELD l_oofc012
            {<point name="construct.b.l_oofc012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_oofc012
            
            #add-point:AFTER FIELD l_oofc012
            {<point name="construct.a.l_oofc012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.l_oofc012
         ON ACTION controlp INFIELD l_oofc012
            #add-point:ON ACTION controlp INFIELD l_oofc012
            {<point name="construct.c.l_oofc012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa010
            #add-point:BEFORE FIELD nmaa010
            {<point name="construct.b.nmaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa010
            
            #add-point:AFTER FIELD nmaa010
            {<point name="construct.a.nmaa010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa010
         ON ACTION controlp INFIELD nmaa010
            #add-point:ON ACTION controlp INFIELD nmaa010
            {<point name="construct.c.nmaa010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_oofb017
            #add-point:BEFORE FIELD l_oofb017
            {<point name="construct.b.l_oofb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_oofb017
            
            #add-point:AFTER FIELD l_oofb017
            {<point name="construct.a.l_oofb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.l_oofb017
         ON ACTION controlp INFIELD l_oofb017
            #add-point:ON ACTION controlp INFIELD l_oofb017
            {<point name="construct.c.l_oofb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa009
            #add-point:BEFORE FIELD nmaa009
            {<point name="construct.b.nmaa009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa009
            
            #add-point:AFTER FIELD nmaa009
            {<point name="construct.a.nmaa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaa009
         ON ACTION controlp INFIELD nmaa009
            #add-point:ON ACTION controlp INFIELD nmaa009
            {<point name="construct.c.nmaa009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaastus
            #add-point:BEFORE FIELD nmaastus
            {<point name="construct.b.nmaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaastus
            
            #add-point:AFTER FIELD nmaastus
            {<point name="construct.a.nmaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaastus
         ON ACTION controlp INFIELD nmaastus
            #add-point:ON ACTION controlp INFIELD nmaastus
            {<point name="construct.c.nmaastus" />}
            #END add-point
 
         #Ctrlp:construct.c.nmaaownid
         ON ACTION controlp INFIELD nmaaownid
            #add-point:ON ACTION controlp INFIELD nmaaownid
            {<point name="construct.c.nmaaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaaownid
            #add-point:BEFORE FIELD nmaaownid
            {<point name="construct.b.nmaaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaaownid
            
            #add-point:AFTER FIELD nmaaownid
            {<point name="construct.a.nmaaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaaowndp
         ON ACTION controlp INFIELD nmaaowndp
            #add-point:ON ACTION controlp INFIELD nmaaowndp
            {<point name="construct.c.nmaaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaaowndp
            #add-point:BEFORE FIELD nmaaowndp
            {<point name="construct.b.nmaaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaaowndp
            
            #add-point:AFTER FIELD nmaaowndp
            {<point name="construct.a.nmaaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaacrtid
         ON ACTION controlp INFIELD nmaacrtid
            #add-point:ON ACTION controlp INFIELD nmaacrtid
            {<point name="construct.c.nmaacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaacrtid
            #add-point:BEFORE FIELD nmaacrtid
            {<point name="construct.b.nmaacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaacrtid
            
            #add-point:AFTER FIELD nmaacrtid
            {<point name="construct.a.nmaacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmaacrtdp
         ON ACTION controlp INFIELD nmaacrtdp
            #add-point:ON ACTION controlp INFIELD nmaacrtdp
            {<point name="construct.c.nmaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaacrtdp
            #add-point:BEFORE FIELD nmaacrtdp
            {<point name="construct.b.nmaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaacrtdp
            
            #add-point:AFTER FIELD nmaacrtdp
            {<point name="construct.a.nmaacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaacrtdt
            #add-point:BEFORE FIELD nmaacrtdt
            {<point name="construct.b.nmaacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.nmaamodid
         ON ACTION controlp INFIELD nmaamodid
            #add-point:ON ACTION controlp INFIELD nmaamodid
            {<point name="construct.c.nmaamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaamodid
            #add-point:BEFORE FIELD nmaamodid
            {<point name="construct.b.nmaamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaamodid
            
            #add-point:AFTER FIELD nmaamodid
            {<point name="construct.a.nmaamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaamoddt
            #add-point:BEFORE FIELD nmaamoddt
            {<point name="construct.b.nmaamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON nmas002,nmas003,nmas004,nmas005
           FROM s_detail1[1].nmas002,s_detail1[1].nmas003,s_detail1[1].nmas004,s_detail1[1].nmas005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION anmi120_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " nmaa001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.delete" ver="9" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION anmi120_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   
   LET g_master_multi_table_t.nmaal001 = g_nmaa_m.nmaa001
LET g_master_multi_table_t.nmaal003 = g_nmaa_m.nmaal003
 
 
   CALL anmi120_show()
   
   CALL s_transaction_begin()
 
   OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
   IF STATUS THEN
      CALL cl_err("OPEN anmi120_cl:", STATUS, 1)
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_nmaa_m.nmaa001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL anmi120_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_nmaa001_t = g_nmaa_m.nmaa001
 
 
      DELETE FROM nmaa_t
       WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa_m.nmaa001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_nmaa_m.nmaa001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM nmas_t
       WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m.nmaa001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("nmas_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_nmas_d.clear() 
 
     
      #CALL anmi120_ui_browser_refresh()  
      CALL anmi120_ui_headershow()  
      CALL anmi120_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL anmi120_browser_fill("")
         CALL anmi120_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL anmi120_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.nmaal001
   LET l_field_keys[01] = 'nmaal001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'nmaal002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'nmaal_t')
 
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE anmi120_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_nmaa_m.nmaa001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="anmi120.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION anmi120_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM nmas_t
       WHERE nmasent = g_enterprise AND
         nmas001 = ps_keys_bak[1] AND nmas002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.description" ver="11" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000247
#+ 
#+ Filename...: anmi120
#+ Description: 企業銀行帳戶資料維護作業
#+ Creator....: 02299(2013/08/20)
#+ Modifier...: 02114(2014/06/29)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="anmi120.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION anmi120_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE nmas_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE anmi120_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE anmi120_detail AS ",
                "SELECT * FROM nmas_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO anmi120_detail SELECT * FROM nmas_t 
                                         WHERE nmasent = g_enterprise AND nmas001 = g_nmaa001_t
 
   
   #將key修正為調整後   
   UPDATE anmi120_detail 
      #更新key欄位
      SET nmas001 = g_nmaa_m.nmaa001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO nmas_t SELECT * FROM anmi120_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE anmi120_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
   
   DROP TABLE anmi120_detail
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION anmi120_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION anmi120_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL anmi120_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_nmaa_m.nmaa001 = g_browser[g_current_idx].b_nmaa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("nmaa_t",SQLCA.sqlcode,1)
      INITIALIZE g_nmaa_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL anmi120_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION anmi120_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.filter" ver="1" status="" src="s">
    <![CDATA[PRIVATE FUNCTION anmi120_filter()
 
 
 
 
 
 
 
 
      
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
 
 
   
 
 
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION anmi120_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
]]>
  </section>
  <section id="anmi120.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_nmaa_m        RECORD
       nmaa001 LIKE nmaa_t.nmaa001, 
   nmaal003 LIKE nmaal_t.nmaal003, 
   nmaa002 LIKE nmaa_t.nmaa002, 
   nmaa002_desc LIKE type_t.chr80, 
   nmaa003 LIKE nmaa_t.nmaa003, 
   nmaa003_desc LIKE type_t.chr80, 
   nmaa004 LIKE nmaa_t.nmaa004, 
   nmaa004_desc LIKE type_t.chr80, 
   nmaa005 LIKE nmaa_t.nmaa005, 
   nmaa006 LIKE nmaa_t.nmaa006, 
   nmaa007 LIKE nmaa_t.nmaa007, 
   l_oofa011 LIKE type_t.chr80, 
   nmaa008 LIKE nmaa_t.nmaa008, 
   l_oofc012 LIKE type_t.chr80, 
   nmaa010 LIKE nmaa_t.nmaa010, 
   l_oofb017 LIKE type_t.chr80, 
   nmaa009 LIKE nmaa_t.nmaa009, 
   nmaastus LIKE nmaa_t.nmaastus, 
   nmaaownid LIKE nmaa_t.nmaaownid, 
   nmaaownid_desc LIKE type_t.chr80, 
   nmaaowndp LIKE nmaa_t.nmaaowndp, 
   nmaaowndp_desc LIKE type_t.chr80, 
   nmaacrtid LIKE nmaa_t.nmaacrtid, 
   nmaacrtid_desc LIKE type_t.chr80, 
   nmaacrtdp LIKE nmaa_t.nmaacrtdp, 
   nmaacrtdp_desc LIKE type_t.chr80, 
   nmaacrtdt DATETIME YEAR TO SECOND, 
   nmaamodid LIKE nmaa_t.nmaamodid, 
   nmaamodid_desc LIKE type_t.chr80, 
   nmaamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_nmas_d        RECORD
       nmas002 LIKE nmas_t.nmas002, 
   nmas003 LIKE nmas_t.nmas003, 
   nmas004 LIKE nmas_t.nmas004, 
   nmas005 LIKE nmas_t.nmas005
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_nmaa_m          type_g_nmaa_m
DEFINE g_nmaa_m_t        type_g_nmaa_m
 
   DEFINE g_nmaa001_t LIKE nmaa_t.nmaa001
 
 
DEFINE g_nmas_d          DYNAMIC ARRAY OF type_g_nmas_d
DEFINE g_nmas_d_t        type_g_nmas_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_nmaa001 LIKE nmaa_t.nmaa001
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_nmaa001 LIKE nmaa_t.nmaa001
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      nmaal001 LIKE nmaal_t.nmaal001,
      nmaal003 LIKE nmaal_t.nmaal003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="anmi120.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION anmi120_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_nmas_d.getLength() THEN
         LET g_detail_idx = g_nmas_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_nmas_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_nmas_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION anmi120_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('nmaastus','17','N,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL anmi120_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="anmi120.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION anmi120_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT nmas002,nmas003,nmas004,nmas005 FROM nmas_t WHERE nmasent=? AND nmas001=?  
       AND nmas002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmi120_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL anmi120_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL anmi120_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003,g_nmaa_m.nmaa004, 
       g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012, 
       g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017,g_nmaa_m.nmaa009,g_nmaa_m.nmaastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="anmi120.input.body" ver="3" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_nmas_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_nmas_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL anmi120_b_fill()
            LET g_rec_b = g_nmas_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
            IF STATUS THEN
               CALL cl_err("OPEN anmi120_cl:", STATUS, 1)
               CLOSE anmi120_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_nmas_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_nmas_d[l_ac].nmas002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_nmas_d_t.* = g_nmas_d[l_ac].*  #BACKUP
               CALL anmi120_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL anmi120_set_no_entry_b(l_cmd)
               IF NOT anmi120_lock_b("nmas_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH anmi120_bcl INTO g_nmas_d[l_ac].nmas002,g_nmas_d[l_ac].nmas003,g_nmas_d[l_ac].nmas004, 
                      g_nmas_d[l_ac].nmas005
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_nmas_d_t.nmas002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL anmi120_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_nmas_d[l_ac].* TO NULL 
                  LET g_nmas_d[l_ac].nmas004 = "N"
      LET g_nmas_d[l_ac].nmas005 = "N"
 
            LET g_nmas_d_t.* = g_nmas_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL anmi120_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL anmi120_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_nmas_d[li_reproduce_target].* = g_nmas_d[li_reproduce].*
 
               LET g_nmas_d[li_reproduce_target].nmas002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM nmas_t 
             WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m.nmaa001
 
               AND nmas002 = g_nmas_d[l_ac].nmas002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmaa_m.nmaa001
               LET gs_keys[2] = g_nmas_d[g_detail_idx].nmas002
               CALL anmi120_insert_b('nmas_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_nmas_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("nmas_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL anmi120_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_nmas_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_nmas_d.deleteElement(l_ac)
               NEXT FIELD nmas002
            END IF
         
            IF g_nmas_d[l_ac].nmas002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM nmas_t
                WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m.nmaa001 AND
 
                      nmas002 = g_nmas_d_t.nmas002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("nmas_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE anmi120_bcl
               LET l_count = g_nmas_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmaa_m.nmaa001
               LET gs_keys[2] = g_nmas_d[g_detail_idx].nmas002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL anmi120_delete_b('nmas_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD nmas002
            #add-point:BEFORE FIELD nmas002
            {<point name="input.b.page1.nmas002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmas002
            
            #add-point:AFTER FIELD nmas002
            {<point name="input.a.page1.nmas002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmas002
            #add-point:ON CHANGE nmas002
            {<point name="input.g.page1.nmas002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmas003
            #add-point:BEFORE FIELD nmas003
            {<point name="input.b.page1.nmas003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmas003
            
            #add-point:AFTER FIELD nmas003
            {<point name="input.a.page1.nmas003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmas003
            #add-point:ON CHANGE nmas003
            {<point name="input.g.page1.nmas003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmas004
            #add-point:BEFORE FIELD nmas004
            {<point name="input.b.page1.nmas004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmas004
            
            #add-point:AFTER FIELD nmas004
            {<point name="input.a.page1.nmas004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmas004
            #add-point:ON CHANGE nmas004
            {<point name="input.g.page1.nmas004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmas005
            #add-point:BEFORE FIELD nmas005
            {<point name="input.b.page1.nmas005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmas005
            
            #add-point:AFTER FIELD nmas005
            {<point name="input.a.page1.nmas005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmas005
            #add-point:ON CHANGE nmas005
            {<point name="input.g.page1.nmas005" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.nmas002
         ON ACTION controlp INFIELD nmas002
            #add-point:ON ACTION controlp INFIELD nmas002
            {<point name="input.c.page1.nmas002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmas003
         ON ACTION controlp INFIELD nmas003
            #add-point:ON ACTION controlp INFIELD nmas003
            {<point name="input.c.page1.nmas003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmas004
         ON ACTION controlp INFIELD nmas004
            #add-point:ON ACTION controlp INFIELD nmas004
            {<point name="input.c.page1.nmas004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmas005
         ON ACTION controlp INFIELD nmas005
            #add-point:ON ACTION controlp INFIELD nmas005
            {<point name="input.c.page1.nmas005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_nmas_d[l_ac].* = g_nmas_d_t.*
               CLOSE anmi120_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_nmas_d[l_ac].nmas002,-263,1)
               LET g_nmas_d[l_ac].* = g_nmas_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE nmas_t SET (nmas001,nmas002,nmas003,nmas004,nmas005) = (g_nmaa_m.nmaa001,g_nmas_d[l_ac].nmas002, 
                   g_nmas_d[l_ac].nmas003,g_nmas_d[l_ac].nmas004,g_nmas_d[l_ac].nmas005)
                WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m.nmaa001 
 
                  AND nmas002 = g_nmas_d_t.nmas002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("nmas_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_nmas_d[l_ac].* = g_nmas_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("nmas_t",SQLCA.sqlcode,1)
                     LET g_nmas_d[l_ac].* = g_nmas_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmaa_m.nmaa001
               LET gs_keys_bak[1] = g_nmaa001_t
               LET gs_keys[2] = g_nmas_d[g_detail_idx].nmas002
               LET gs_keys_bak[2] = g_nmas_d_t.nmas002
               CALL anmi120_update_b('nmas_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_nmaa_m),util.JSON.stringify(g_nmas_d_t)
               LET g_log2 = util.JSON.stringify(g_nmaa_m),util.JSON.stringify(g_nmas_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL anmi120_unlock_b("nmas_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_nmas_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_nmas_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="anmi120.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003,g_nmaa_m.nmaa004, 
          g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012, 
          g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017,g_nmaa_m.nmaa009,g_nmaa_m.nmaastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.nmaal001 = g_nmaa_m.nmaa001
LET g_master_multi_table_t.nmaal003 = g_nmaa_m.nmaal003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.nmaal001 = ''
LET g_master_multi_table_t.nmaal003 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD nmaa001
            #add-point:BEFORE FIELD nmaa001
            {<point name="input.b.nmaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa001
            
            #add-point:AFTER FIELD nmaa001
            {<point name="input.a.nmaa001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa001
            #add-point:ON CHANGE nmaa001
            {<point name="input.g.nmaa001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaal003
            #add-point:BEFORE FIELD nmaal003
            {<point name="input.b.nmaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaal003
            
            #add-point:AFTER FIELD nmaal003
            {<point name="input.a.nmaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaal003
            #add-point:ON CHANGE nmaal003
            {<point name="input.g.nmaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa002
            
            #add-point:AFTER FIELD nmaa002
            {<point name="input.a.nmaa002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa002
            #add-point:BEFORE FIELD nmaa002
            {<point name="input.b.nmaa002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa002
            #add-point:ON CHANGE nmaa002
            {<point name="input.g.nmaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa003
            
            #add-point:AFTER FIELD nmaa003
            {<point name="input.a.nmaa003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa003
            #add-point:BEFORE FIELD nmaa003
            {<point name="input.b.nmaa003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa003
            #add-point:ON CHANGE nmaa003
            {<point name="input.g.nmaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa004
            
            #add-point:AFTER FIELD nmaa004
            {<point name="input.a.nmaa004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa004
            #add-point:BEFORE FIELD nmaa004
            {<point name="input.b.nmaa004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa004
            #add-point:ON CHANGE nmaa004
            {<point name="input.g.nmaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa005
            #add-point:BEFORE FIELD nmaa005
            {<point name="input.b.nmaa005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa005
            
            #add-point:AFTER FIELD nmaa005
            {<point name="input.a.nmaa005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa005
            #add-point:ON CHANGE nmaa005
            {<point name="input.g.nmaa005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa006
            #add-point:BEFORE FIELD nmaa006
            {<point name="input.b.nmaa006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa006
            
            #add-point:AFTER FIELD nmaa006
            {<point name="input.a.nmaa006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa006
            #add-point:ON CHANGE nmaa006
            {<point name="input.g.nmaa006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa007
            #add-point:BEFORE FIELD nmaa007
            {<point name="input.b.nmaa007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa007
            
            #add-point:AFTER FIELD nmaa007
            {<point name="input.a.nmaa007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa007
            #add-point:ON CHANGE nmaa007
            {<point name="input.g.nmaa007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_oofa011
            #add-point:BEFORE FIELD l_oofa011
            {<point name="input.b.l_oofa011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_oofa011
            
            #add-point:AFTER FIELD l_oofa011
            {<point name="input.a.l_oofa011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE l_oofa011
            #add-point:ON CHANGE l_oofa011
            {<point name="input.g.l_oofa011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa008
            #add-point:BEFORE FIELD nmaa008
            {<point name="input.b.nmaa008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa008
            
            #add-point:AFTER FIELD nmaa008
            {<point name="input.a.nmaa008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa008
            #add-point:ON CHANGE nmaa008
            {<point name="input.g.nmaa008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_oofc012
            #add-point:BEFORE FIELD l_oofc012
            {<point name="input.b.l_oofc012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_oofc012
            
            #add-point:AFTER FIELD l_oofc012
            {<point name="input.a.l_oofc012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE l_oofc012
            #add-point:ON CHANGE l_oofc012
            {<point name="input.g.l_oofc012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa010
            #add-point:BEFORE FIELD nmaa010
            {<point name="input.b.nmaa010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa010
            
            #add-point:AFTER FIELD nmaa010
            {<point name="input.a.nmaa010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa010
            #add-point:ON CHANGE nmaa010
            {<point name="input.g.nmaa010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_oofb017
            #add-point:BEFORE FIELD l_oofb017
            {<point name="input.b.l_oofb017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_oofb017
            
            #add-point:AFTER FIELD l_oofb017
            {<point name="input.a.l_oofb017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE l_oofb017
            #add-point:ON CHANGE l_oofb017
            {<point name="input.g.l_oofb017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaa009
            #add-point:BEFORE FIELD nmaa009
            {<point name="input.b.nmaa009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaa009
            
            #add-point:AFTER FIELD nmaa009
            {<point name="input.a.nmaa009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaa009
            #add-point:ON CHANGE nmaa009
            {<point name="input.g.nmaa009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmaastus
            #add-point:BEFORE FIELD nmaastus
            {<point name="input.b.nmaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmaastus
            
            #add-point:AFTER FIELD nmaastus
            {<point name="input.a.nmaastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmaastus
            #add-point:ON CHANGE nmaastus
            {<point name="input.g.nmaastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.nmaa001
         ON ACTION controlp INFIELD nmaa001
            #add-point:ON ACTION controlp INFIELD nmaa001
            {<point name="input.c.nmaa001" />}
            #END add-point
 
         #Ctrlp:input.c.nmaal003
         ON ACTION controlp INFIELD nmaal003
            #add-point:ON ACTION controlp INFIELD nmaal003
            {<point name="input.c.nmaal003" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa002
         ON ACTION controlp INFIELD nmaa002
            #add-point:ON ACTION controlp INFIELD nmaa002
            {<point name="input.c.nmaa002" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa003
         ON ACTION controlp INFIELD nmaa003
            #add-point:ON ACTION controlp INFIELD nmaa003
            {<point name="input.c.nmaa003" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa004
         ON ACTION controlp INFIELD nmaa004
            #add-point:ON ACTION controlp INFIELD nmaa004
            {<point name="input.c.nmaa004" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa005
         ON ACTION controlp INFIELD nmaa005
            #add-point:ON ACTION controlp INFIELD nmaa005
            {<point name="input.c.nmaa005" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa006
         ON ACTION controlp INFIELD nmaa006
            #add-point:ON ACTION controlp INFIELD nmaa006
            {<point name="input.c.nmaa006" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa007
         ON ACTION controlp INFIELD nmaa007
            #add-point:ON ACTION controlp INFIELD nmaa007
            {<point name="input.c.nmaa007" />}
            #END add-point
 
         #Ctrlp:input.c.l_oofa011
         ON ACTION controlp INFIELD l_oofa011
            #add-point:ON ACTION controlp INFIELD l_oofa011
            {<point name="input.c.l_oofa011" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa008
         ON ACTION controlp INFIELD nmaa008
            #add-point:ON ACTION controlp INFIELD nmaa008
            {<point name="input.c.nmaa008" />}
            #END add-point
 
         #Ctrlp:input.c.l_oofc012
         ON ACTION controlp INFIELD l_oofc012
            #add-point:ON ACTION controlp INFIELD l_oofc012
            {<point name="input.c.l_oofc012" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa010
         ON ACTION controlp INFIELD nmaa010
            #add-point:ON ACTION controlp INFIELD nmaa010
            {<point name="input.c.nmaa010" />}
            #END add-point
 
         #Ctrlp:input.c.l_oofb017
         ON ACTION controlp INFIELD l_oofb017
            #add-point:ON ACTION controlp INFIELD l_oofb017
            {<point name="input.c.l_oofb017" />}
            #END add-point
 
         #Ctrlp:input.c.nmaa009
         ON ACTION controlp INFIELD nmaa009
            #add-point:ON ACTION controlp INFIELD nmaa009
            {<point name="input.c.nmaa009" />}
            #END add-point
 
         #Ctrlp:input.c.nmaastus
         ON ACTION controlp INFIELD nmaastus
            #add-point:ON ACTION controlp INFIELD nmaastus
            {<point name="input.c.nmaastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_nmaa_m.nmaa001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO nmaa_t (nmaaent,nmaa001,nmaa002,nmaa003,nmaa004,nmaa005,nmaa006,nmaa007,nmaa008, 
                   nmaa010,nmaa009,nmaastus,nmaaownid,nmaaowndp,nmaacrtid,nmaacrtdp,nmaacrtdt)
               VALUES (g_enterprise,g_nmaa_m.nmaa001,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003,g_nmaa_m.nmaa004, 
                   g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
                   g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid, 
                   g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_nmaa_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_nmaa_m.nmaa001 = g_master_multi_table_t.nmaal001 AND
         g_nmaa_m.nmaal003 = g_master_multi_table_t.nmaal003  THEN
         ELSE 
            LET l_var_keys[01] = g_nmaa_m.nmaa001
            LET l_field_keys[01] = 'nmaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.nmaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'nmaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_nmaa_m.nmaal003
            LET l_fields[01] = 'nmaal003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'nmaalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'nmaal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL anmi120_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE nmaa_t SET (nmaa001,nmaa002,nmaa003,nmaa004,nmaa005,nmaa006,nmaa007,nmaa008,nmaa010, 
                   nmaa009,nmaastus,nmaaownid,nmaaowndp,nmaacrtid,nmaacrtdp,nmaacrtdt) = (g_nmaa_m.nmaa001, 
                   g_nmaa_m.nmaa002,g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006, 
                   g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010,g_nmaa_m.nmaa009,g_nmaa_m.nmaastus, 
                   g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdt) 

                WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("nmaa_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_nmaa_m.nmaa001 = g_master_multi_table_t.nmaal001 AND
         g_nmaa_m.nmaal003 = g_master_multi_table_t.nmaal003  THEN
         ELSE 
            LET l_var_keys[01] = g_nmaa_m.nmaa001
            LET l_field_keys[01] = 'nmaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.nmaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'nmaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_nmaa_m.nmaal003
            LET l_fields[01] = 'nmaal003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'nmaalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'nmaal_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_nmaa_m_t)
               LET g_log2 = util.JSON.stringify(g_nmaa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_nmaa001_t = g_nmaa_m.nmaa001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="anmi120.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD nmaa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD nmas002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION anmi120_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_nmas_d.clear()   
 
 
   INITIALIZE g_nmaa_m.* LIKE nmaa_t.*             #DEFAULT 設定
   
   LET g_nmaa001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_nmaa_m.nmaaownid = g_user
      LET g_nmaa_m.nmaaowndp = g_dept
      LET g_nmaa_m.nmaacrtid = g_user
      LET g_nmaa_m.nmaacrtdp = g_dept 
      LET g_nmaa_m.nmaacrtdt = cl_get_current()
      LET g_nmaa_m.nmaamodid = ""
      LET g_nmaa_m.nmaamoddt = ""
      LET g_nmaa_m.nmaastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_nmaa_m.nmaa006 = "N"
      LET g_nmaa_m.nmaastus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL anmi120_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_nmaa_m.* = g_nmaa_m_t.*
         CALL anmi120_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_nmas_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
   
   LET g_wc = g_wc,  
              " OR ( nmaaent = '" ||g_enterprise|| "' AND",
              " nmaa001 = '", g_nmaa_m.nmaa001 CLIPPED, "' "
 
              , ") "
   
   CLOSE anmi120_cl
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION anmi120_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO nmas_t
                  (nmasent,
                   nmas001,
                   nmas002
                   ,nmas003,nmas004,nmas005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_nmas_d[g_detail_idx].nmas003,g_nmas_d[g_detail_idx].nmas004,g_nmas_d[g_detail_idx].nmas005) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("nmas_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION anmi120_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL anmi120_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "nmas_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN anmi120_bcl USING g_enterprise,
                                       g_nmaa_m.nmaa001,g_nmas_d[g_detail_idx].nmas002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("anmi120_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.main" ver="7" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("anm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT nmaa001,'',nmaa002,'',nmaa003,'',nmaa004,'',nmaa005,nmaa006,nmaa007,'', 
       nmaa008,'',nmaa010,'',nmaa009,nmaastus,nmaaownid,'',nmaaowndp,'',nmaacrtid,'',nmaacrtdp,'',nmaacrtdt, 
       nmaamodid,'',nmaamoddt", 
                      " FROM nmaa_t",
                      " WHERE nmaaent= ? AND nmaa001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmi120_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE nmaa001,nmaa002,nmaa003,nmaa004,nmaa005,nmaa006,nmaa007,nmaa008,nmaa010, 
       nmaa009,nmaastus,nmaaownid,nmaaowndp,nmaacrtid,nmaacrtdp,nmaacrtdt,nmaamodid,nmaamoddt,t1.ooefl003 , 
       t2.nmagl003 ,t3.nmabl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 ,t8.oofa011",
               " FROM nmaa_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=nmaa002 AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN nmagl_t t2 ON t2.nmaglent='"||g_enterprise||"' AND t2.nmagl001=nmaa003 AND t2.nmagl002='"||g_dlang||"' ",
               " LEFT JOIN nmabl_t t3 ON t3.nmablent='"||g_enterprise||"' AND t3.nmabl001=nmaa004 AND t3.nmabl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=nmaaownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=nmaaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=nmaacrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=nmaacrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=nmaamodid  ",
 
               " WHERE nmaaent = '" ||g_enterprise|| "' AND nmaa001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE anmi120_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_anmi120 WITH FORM cl_ap_formpath("anm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL anmi120_init()   
 
      #進入選單 Menu (="N")
      CALL anmi120_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_anmi120
      
   END IF 
   
   CLOSE anmi120_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="anmi120.modify" ver="7" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION anmi120_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
 
   ERROR ""
  
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
   CALL s_transaction_begin()
   
   OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
   IF STATUS THEN
      CALL cl_err("OPEN anmi120_cl:", STATUS, 1)
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_nmaa_m.nmaa001,SQLCA.sqlcode,0)
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL anmi120_show()
   WHILE TRUE
      LET g_nmaa001_t = g_nmaa_m.nmaa001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_nmaa_m.nmaamodid = g_user 
LET g_nmaa_m.nmaamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL anmi120_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_nmaa_m.* = g_nmaa_m_t.*
         CALL anmi120_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE nmaa_t SET (nmaamodid,nmaamoddt) = (g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt)
       WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa001_t
 
                  
      #若單頭key欄位有變更
      IF g_nmaa_m.nmaa001 != g_nmaa001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE nmas_t SET nmas001 = g_nmaa_m.nmaa001
 
          WHERE nmasent = g_enterprise AND nmas001 = g_nmaa001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("nmas_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("nmas_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_nmaa_m.nmaa001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE anmi120_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_nmaa_m.nmaa001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="anmi120.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="anmi120.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="anmi120.query" ver="4" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION anmi120_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_nmas_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL anmi120_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL anmi120_browser_fill("")
      CALL anmi120_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL anmi120_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL anmi120_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION anmi120_reproduce()
   DEFINE l_newno     LIKE nmaa_t.nmaa001 
   DEFINE l_oldno     LIKE nmaa_t.nmaa001 
 
   DEFINE l_master    RECORD LIKE nmaa_t.*
   DEFINE l_detail    RECORD LIKE nmas_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
    
   LET g_nmaa_m.nmaa001 = ""
 
    
   CALL anmi120_set_entry('a')
   CALL anmi120_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_nmaa_m.nmaaownid = g_user
      LET g_nmaa_m.nmaaowndp = g_dept
      LET g_nmaa_m.nmaacrtid = g_user
      LET g_nmaa_m.nmaacrtdp = g_dept 
      LET g_nmaa_m.nmaacrtdt = cl_get_current()
      LET g_nmaa_m.nmaamodid = ""
      LET g_nmaa_m.nmaamoddt = ""
      LET g_nmaa_m.nmaastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL anmi120_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " nmaa001 = '", g_nmaa_m.nmaa001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION anmi120_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("nmaa001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION anmi120_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="anmi120.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION anmi120_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("nmaa001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION anmi120_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="anmi120.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION anmi120_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_nmaa_m.nmaa001
   LET g_pk_array[1].column = 'nmaa001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="anmi120.show" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION anmi120_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_nmaa_m_t.* = g_nmaa_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL anmi120_b_fill() #單身填充
      CALL anmi120_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_nmaa_m.nmaaownid_desc = cl_get_username(g_nmaa_m.nmaaownid)
      #LET g_nmaa_m.nmaaowndp_desc = cl_get_deptname(g_nmaa_m.nmaaowndp)
      #LET g_nmaa_m.nmaacrtid_desc = cl_get_username(g_nmaa_m.nmaacrtid)
      #LET g_nmaa_m.nmaacrtdp_desc = cl_get_deptname(g_nmaa_m.nmaacrtdp)
      #LET g_nmaa_m.nmaamodid_desc = cl_get_username(g_nmaa_m.nmaamodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL anmi120_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa002,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa003_desc,g_nmaa_m.nmaa004,g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006, 
       g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp, 
       g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtid_desc,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdp_desc, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamodid_desc,g_nmaa_m.nmaamoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_nmaa_m.nmaastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_nmas_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL anmi120_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="anmi120.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION anmi120_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_nmaa_m.nmaastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE nmaa_t SET nmaastus = lc_state 
    WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa_m.nmaa001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_nmaa_m.nmaastus = lc_state
      DISPLAY BY NAME g_nmaa_m.nmaastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="anmi120.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION anmi120_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_nmaa001 = g_nmaa_m.nmaa001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION anmi120_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.ui_dialog" ver="8" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION anmi120_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL anmi120_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL anmi120_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_nmaa001 = g_nmaa001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_nmas_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL anmi120_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL anmi120_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL anmi120_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL anmi120_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL anmi120_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL anmi120_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL anmi120_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL anmi120_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL anmi120_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            CALL anmi120_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION previous
            CALL anmi120_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION jump
            CALL anmi120_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION next
            CALL anmi120_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION last
            CALL anmi120_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL anmi120_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL anmi120_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL anmi120_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL anmi120_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL anmi120_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_anmi121
            LET g_action_choice="open_anmi121"
            IF cl_auth_chk_act("open_anmi121") THEN
               
               #add-point:ON ACTION open_anmi121
               {<point name="menu.open_anmi121" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_aooi350
            LET g_action_choice="open_aooi350"
            IF cl_auth_chk_act("open_aooi350") THEN
               
               #add-point:ON ACTION open_aooi350
               {<point name="menu.open_aooi350" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL anmi120_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL anmi120_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL anmi120_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="anmi120.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION anmi120_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_nmaa_m.nmaa001 = g_browser[g_current_idx].b_nmaa001   
 
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa006,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   CALL anmi120_show()
   
END FUNCTION
]]>
  </section>
  <section id="anmi120.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION anmi120_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE anmi120_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="anmi120.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION anmi120_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "nmas_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE nmas_t 
         SET (nmas001,
              nmas002
              ,nmas003,nmas004,nmas005) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_nmas_d[g_detail_idx].nmas003,g_nmas_d[g_detail_idx].nmas004,g_nmas_d[g_detail_idx].nmas005)  

         WHERE nmasent = g_enterprise AND nmas001 = ps_keys_bak[1] AND nmas002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("nmas_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("nmas_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
