<add_points prog="anmt530_03" std_prog="anmt530_03" erpver="1.0" module="ANM" ver="1" env="s" zone="t10dev" booking="Y" type="S" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.anmt530_03_b_fill_1" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[# 單身陣列填充
PRIVATE FUNCTION anmt530_03_b_fill_1(p_wc2)
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   DEFINE l_glaa015        LIKE glaa_t.glaa015
   DEFINE l_glaa016        LIKE glaa_t.glaa016
   DEFINE l_glaa019        LIKE glaa_t.glaa019
   DEFINE l_glaa020        LIKE glaa_t.glaa020
   DEFINE l_str1           STRING
   DEFINE l_str2           STRING
   DEFINE l_str3           STRING
   DEFINE l_str4           STRING
   DEFINE l_msg1           STRING
   DEFINE l_msg2           STRING
   DEFINE l_msg3           STRING
   DEFINE l_msg4           STRING
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前

   SELECT glaa015,glaa016,glaa019,glaa020
     INTO l_glaa015,l_glaa016,l_glaa019,l_glaa020
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald  = g_nmbsld
   
   LET l_str1 = cl_getmsg("axr-00090",g_lang)     #借方金額(
   LET l_str2 = cl_getmsg("axr-00091",g_lang)     #貸方金額(
   LET l_str3 = cl_getmsg("axr-00092",g_lang)     #)(本位幣二)
   LET l_str4 = cl_getmsg("axr-00093",g_lang)     #)(本位幣三)
   
   LET l_msg1 = l_str1 CLIPPED,l_glaa016 CLIPPED,l_str3
   LET l_msg2 = l_str2 CLIPPED,l_glaa016 CLIPPED,l_str3
   LET l_msg3 = l_str1 CLIPPED,l_glaa020 CLIPPED,l_str4
   LET l_msg4 = l_str2 CLIPPED,l_glaa020 CLIPPED,l_str4
      
   IF l_glaa015 = 'Y' THEN 
      CALL cl_set_comp_visible('glaq040,glaq041',TRUE)
      CALL cl_set_comp_att_text('glaq040',l_msg1)
      CALL cl_set_comp_att_text('glaq041',l_msg2)
   ELSE
      CALL cl_set_comp_visible('glaq040,glaq041',FALSE)
   END IF
      
   IF l_glaa019 = 'Y' THEN 
      CALL cl_set_comp_visible('glaq043,glaq044',TRUE)
      CALL cl_set_comp_att_text('glaq043',l_msg3)
      CALL cl_set_comp_att_text('glaq044',l_msg4)
   ELSE
      CALL cl_set_comp_visible('glaq043,glaq044',FALSE)
   END IF
   #end add-point

   
   #add-point:b_fill段sql之後
   IF cl_null(g_nmbs003) THEN 
      LET g_sql= " SELECT DISTINCT glaqld,docno,glaqseq,glaq001,glaq002,'',d,c,glaq040,glaq041,glaq043,glaq044,'' FROM s_voucher_nm_tmp ",
                 "  WHERE docno = '",g_nmbsdocno,"'",
                 "  ORDER BY glaqseq,glaq002 "
   ELSE
      LET g_sql= " SELECT DISTINCT glaqld,'',glaqseq,glaq001,glaq002,'',glaq003,glaq004,glaq040,glaq041,glaq043,glaq044,'' FROM glaq_t ",
                 "  WHERE glaqent = '",g_enterprise,"'",
                 "    AND glaqld = '",g_nmbsld,"'",
                 "    AND glaqdocno = '",g_nmbs003,"'",
                 "  ORDER BY glaqseq,glaq002 "
   END IF
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE anmt530_03_pb1 FROM g_sql
   DECLARE b_fill_curs1 CURSOR FOR anmt530_03_pb1
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_nmbs_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs1 INTO g_nmbs_d[l_ac].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      IF cl_null(g_nmbs003) THEN 
         LET g_nmbs_d[l_ac].glaqseq = l_ac
      ELSE
         LET g_nmbs_d[l_ac].nmbsdocno = g_nmbsdocno
      END IF
      LET g_nmbs_d[l_ac].lc_subject =  g_nmbs_d[l_ac].glaq002,'\n',anmt530_03_glaq002_desc(g_nmbs_d[l_ac].nmbsld,g_nmbs_d[l_ac].glaq002)
      #end add-point
      
      CALL anmt530_03_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("nmbs_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
   
   CALL g_nmbs_d.deleteElement(g_nmbs_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_nmbs_d.getLength()
 
   END FOR
   
   IF g_cnt > g_nmbs_d.getLength() THEN
      LET l_ac = g_nmbs_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)

   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_nmbs_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs1
   FREE anmt530_03_pb1
   
END FUNCTION]]>
</point>
  <point name="function.anmt530_03_glaq002_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[# 科目欄位顯示
PRIVATE FUNCTION anmt530_03_glaq002_desc(p_glaqld,p_glaq002)
   DEFINE p_glaqld            LIKE glaq_t.glaqld
   DEFINE p_glaq002           LIKE glaq_t.glaq002
   DEFINE l_glaq002_desc      LIKE glacl_t.glacl004
   DEFINE r_glaq002           STRING
   DEFINE l_oogf002_desc      LIKE oofa_t.oofa011
   DEFINE l_glaq    RECORD 
          glaq017   LIKE glaq_t.glaq017,
          glaq018   LIKE glaq_t.glaq018,
          glaq019   LIKE glaq_t.glaq019,
          glaq020   LIKE glaq_t.glaq020,
          glaq021   LIKE glaq_t.glaq021,
          glaq022   LIKE glaq_t.glaq022,
          glaq023   LIKE glaq_t.glaq023,
          glaq024   LIKE glaq_t.glaq024,
          glaq025   LIKE glaq_t.glaq025,
          glaq026   LIKE glaq_t.glaq026,
          glaq027   LIKE glaq_t.glaq027,
          glaq028   LIKE glaq_t.glaq028        
                    END RECORD
   
   SELECT glaq017,glaq018,glaq019,glaq020,
          glaq021,glaq022,glaq023,glaq024,
          glaq025,glaq026,glaq027,glaq028
     INTO l_glaq.*     
     FROM s_voucher_nm_tmp
    WHERE glaqent = g_enterprise
      AND glaqld = p_glaqld
      AND glaq002 = p_glaq002      
   
   #抓取科目名称
   LET l_glaq002_desc = ''
   SELECT glacl004 INTO l_glaq002_desc FROM glacl_t,glaa_t
    WHERE glaaent = glaclent 
      AND glaa004 = glacl001
      AND glaclent = g_enterprise
      AND glaald = p_glaqld
      AND glacl002 = p_glaq002
      AND glacl003 = g_dlang  


   #组合名称以及核算项
   LET r_glaq002 = ''
   #部门
   IF NOT cl_null(l_glaq.glaq018) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = l_glaq.glaq018
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET r_glaq002 = g_rtn_fields[1]     
   END IF 
   #成本利润中心
   IF NOT cl_null(l_glaq.glaq019) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = l_glaq.glaq019
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',g_rtn_fields[1]
      ELSE
         LET r_glaq002 = g_rtn_fields[1]
      END IF      
   END IF 
   
   #区域
   IF NOT cl_null(l_glaq.glaq020) THEN 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = '287'
      LET g_ref_fields[2] = l_glaq.glaq020
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields  
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',g_rtn_fields[1]
      ELSE
         LET r_glaq002 = g_rtn_fields[1]
      END IF      
   END IF 
   #交易客商
   IF NOT cl_null(l_glaq.glaq021) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = l_glaq.glaq021
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',g_rtn_fields[1] 
      ELSE
         LET r_glaq002 = g_rtn_fields[1] 
      END IF      
   END IF 
   #帐款客商
   IF NOT cl_null(l_glaq.glaq022) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = l_glaq.glaq022
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',g_rtn_fields[1]
      ELSE
         LET r_glaq002 = g_rtn_fields[1]
      END IF      
   END IF 
   #客群
   IF NOT cl_null(l_glaq.glaq023) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = '281'
      LET g_ref_fields[2] = l_glaq.glaq023
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',g_rtn_fields[1]
      ELSE
         LET r_glaq002 = g_rtn_fields[1]
      END IF      
   END IF 
   
   #产品分类
   IF NOT cl_null(l_glaq.glaq024) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = l_glaq.glaq024
      CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',g_rtn_fields[1]
      ELSE
         LET r_glaq002 = g_rtn_fields[1]
      END IF      
   END IF 
   #人员
   IF NOT cl_null(l_glaq.glaq025) THEN
      LET  l_oogf002_desc = ''
      SELECT oofa011 INTO l_oogf002_desc FROM oofa_t
       WHERE oofaent = g_enterprise
         AND oofa001 IN (SELECT ooag002 FROM ooag_t
                          WHERE ooagent = g_enterprise
                            AND ooag001 = l_glaq.glaq025)
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',l_oogf002_desc
      ELSE
         LET r_glaq002 = l_oogf002_desc
      END IF      
   END IF 
   #预算编号
   IF NOT cl_null(l_glaq.glaq026) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = l_glaq.glaq026
      CALL ap_ref_array2(g_ref_fields,"SELECT bgaal003 FROM bgaal_t WHERE bgaalent='"||g_enterprise||"' AND bgaal001=? AND bgaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',g_rtn_fields[1]
      ELSE
         LET r_glaq002 = g_rtn_fields[1]
      END IF      
   END IF 
   #专案编号
   IF NOT cl_null(l_glaq.glaq027) THEN
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',l_glaq.glaq027
      ELSE
         LET r_glaq002 = l_glaq.glaq027
      END IF      
   END IF 
   #WBS
   IF NOT cl_null(l_glaq.glaq028) THEN
      IF NOT cl_null(r_glaq002) THEN
         LET r_glaq002 = r_glaq002 ,'-',l_glaq.glaq028
      ELSE
         LET r_glaq002 = l_glaq.glaq028
      END IF      
   END IF 
   #组合科目名称以及核算项
   LET r_glaq002 = l_glaq002_desc,'\n',
                   r_glaq002
                   
   RETURN r_glaq002 
END FUNCTION]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_n   LIKE type_t.num5
   DEFINE l_docno   LIKE nmbs_t.nmbsdocno]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_sql= " SELECT DISTINCT '',docno,glaqseq,glaq001,glaq002,d,c,glaq040,glaq041,glaq043,glaq044 FROM s_voucher_nm_tmp ",
                 "  WHERE docno = '",g_nmbsdocno,"'",
                 "  ORDER BY glaqseq,glaq002 "]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL anmt530_03_b_fill_1(p_wc2)
   RETURN
   ]]>
</point>
  <point name="construct.c.page1.nmbsld" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmbsld  #顯示到畫面上
            NEXT FIELD nmbsld                     #返回原欄位
    

]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_nmbsld         LIKE nmbs_t.nmbsld
DEFINE g_nmbsdocno      LIKE nmbs_t.nmbsdocno
DEFINE g_nmbs003        LIKE nmbs_t.nmbs003]]>
</point>
  <point name="input.a.page1.nmbsdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
]]>
</point>
  <point name="input.a.page1.nmbsld" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            ]]>
</point>
  <point name="input.c.page1.nmbsld" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
]]>
</point>
  <point name="main.define" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE p_nmbsld         LIKE nmbs_t.nmbsld
   DEFINE p_nmbsdocno      LIKE nmbs_t.nmbsdocno
   DEFINE p_nmbs003        LIKE nmbs_t.nmbs003]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_action_choice = '']]>
</point>
  <point name="main.get_var" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   p_nmbsld,p_nmbsdocno,p_nmbs003]]>
</point>
  <point name="main.init" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_nmbsdocno = p_nmbsdocno
   LET g_nmbs003   = p_nmbs003
   LET g_nmbsld    = p_nmbsld
   ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   ]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.nmbsld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.nmbsld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.nmbsdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.nmbsdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.nmbsdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaqseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaqseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaqseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.lc_subject" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.lc_subject" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.lc_subject" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq040" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq040" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq040" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq043" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq043" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq043" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.glaq044" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.glaq044" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.glaq044" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.text" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.text" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.text" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   IF NOT cl_null(g_nmbs003) THEN 
      CALL cl_err('','anm-00188',1)
      RETURN
   END IF]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmbsld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmbsld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmbsdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmbsdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaqseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaqseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaqseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.lc_subject" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.lc_subject" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.lc_subject" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq040" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq040" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq040" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq043" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq043" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq043" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.glaq044" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.glaq044" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.glaq044" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.text" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.text" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.text" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmbsdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaqseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.lc_subject" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq040" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq041" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq043" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.glaq044" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.text" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[               UPDATE s_voucher_nm_tmp SET glaq001 = g_nmbs_d[l_ac].glaq001
                WHERE glaqld = g_nmbs_d[l_ac].nmbsld
                  AND docno = g_nmbs_d[l_ac].nmbsdocno
                  AND glaq002 = g_nmbs_d[l_ac].glaq002]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.before_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="link_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="anmt530_03.b_fill" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION anmt530_03_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE nmbsld,nmbsdocno  FROM nmbs_t",
               "",
               
               " WHERE nmbsent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, cl_sql_add_filter("nmbs_t"),
                      " ORDER BY nmbs_t.nmbsld,nmbs_t.nmbsdocno"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE anmt530_03_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR anmt530_03_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_nmbs_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_nmbs_d[l_ac].nmbsld,g_nmbs_d[l_ac].nmbsdocno
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL anmt530_03_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("nmbs_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
   
   CALL g_nmbs_d.deleteElement(g_nmbs_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_nmbs_d.getLength()
 
   END FOR
   
   IF g_cnt > g_nmbs_d.getLength() THEN
      LET l_ac = g_nmbs_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_nmbs_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE anmt530_03_pb
   
END FUNCTION
]]>
</section>
  <section id="anmt530_03.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION anmt530_03_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " nmbsld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " nmbsdocno = ", g_argv[02], " AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="anmt530_03.delete" ver="2" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION anmt530_03_delete()
   DEFINE li_idx           LIKE type_t.num5
   DEFINE li_detail_tmp    LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_nmbs_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT anmt530_03_lock_b("nmbs_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_nmbs_d.getLength()
      IF g_nmbs_d[li_idx].nmbsld IS NOT NULL
         AND g_nmbs_d_t.nmbsdocno IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM nmbs_t
          WHERE nmbsent = g_enterprise AND 
                nmbsld = g_nmbs_d[li_idx].nmbsld
                AND nmbsdocno = g_nmbs_d[li_idx].nmbsdocno
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            CALL cl_err("nmbs_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmbs_d[g_detail_idx].nmbsld
               LET gs_keys[2] = g_nmbs_d[g_detail_idx].nmbsdocno
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL anmt530_03_delete_b('nmbs_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   #刷新資料
   CALL anmt530_03_b_fill(g_wc2)
            
END FUNCTION
]]>
</section>
  <section id="anmt530_03.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION anmt530_03_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "nmbs_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'nmbs_t' THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM nmbs_t
       WHERE nmbsent = g_enterprise AND
         nmbsld = ps_keys_bak[1] AND nmbsdocno = ps_keys_bak[2]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="anmt530_03.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000026
#+ 
#+ Filename...: anmt530_03
#+ Description: ...
#+ Creator....: 02114(2014/07/04)
#+ Modifier...: 02114(2014/07/07)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="anmt530_03.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION anmt530_03_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="anmt530_03.global" ver="3" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_nmbs_d RECORD
       nmbsld LIKE type_t.chr5, 
   nmbsdocno LIKE type_t.chr20, 
   glaqseq LIKE type_t.num10, 
   glaq001 LIKE type_t.chr500, 
   glaq002 LIKE type_t.chr500, 
   lc_subject LIKE type_t.chr80, 
   glaq003 LIKE type_t.num20_6, 
   glaq004 LIKE type_t.num20_6, 
   glaq040 LIKE type_t.num20_6, 
   glaq041 LIKE type_t.num20_6, 
   glaq043 LIKE type_t.num20_6, 
   glaq044 LIKE type_t.num20_6, 
   text LIKE type_t.chr80
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_nmbs_d          DYNAMIC ARRAY OF type_g_nmbs_d #單身變數
DEFINE g_nmbs_d_t        type_g_nmbs_d                  #單身備份
DEFINE g_nmbs_d_o        type_g_nmbs_d                  #單身備份
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="anmt530_03.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION anmt530_03_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL anmt530_03_default_search()
   
END FUNCTION
]]>
</section>
  <section id="anmt530_03.insert" ver="1" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION anmt530_03_insert()
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point                
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL anmt530_03_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="anmt530_03.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION anmt530_03_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "nmbs_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO nmbs_t
                  (nmbsent,
                   nmbsld,nmbsdocno
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("nmbs_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="anmt530_03.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION anmt530_03_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="anmt530_03.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION anmt530_03_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL anmt530_03_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "nmbs_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN anmt530_03_bcl USING g_enterprise,
                                       g_nmbs_d[g_detail_idx].nmbsld,g_nmbs_d[g_detail_idx].nmbsdocno 

                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("anmt530_03_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="anmt530_03.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a27產生
#+ 資料輸入
PUBLIC FUNCTION anmt530_03(--)
   #add-point:main段變數傳入
   {<point name="main.get_var"/>}
   #end add-point
   )
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
 
   
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT nmbsld,nmbsdocno FROM nmbs_t WHERE nmbsent=? AND nmbsld=? AND nmbsdocno=?  
       FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmt530_03_bcl CURSOR FROM g_forupd_sql
 
 
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_anmt530_03 WITH FORM cl_ap_formpath("anm","anmt530_03")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL anmt530_03_init()   
 
   #進入選單 Menu (="N")
   CALL anmt530_03_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_anmt530_03
 
   
   
 
   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point
 
END FUNCTION
 
 
]]>
</section>
  <section id="anmt530_03.modify" ver="3" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION anmt530_03_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_nmbs_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_nmbs_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL anmt530_03_b_fill(g_wc2)
            LET g_detail_cnt = g_nmbs_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_nmbs_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_nmbs_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_nmbs_d[l_ac].nmbsld IS NOT NULL
               AND g_nmbs_d[l_ac].nmbsdocno IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_nmbs_d_t.* = g_nmbs_d[l_ac].*  #BACKUP
               LET g_nmbs_d_o.* = g_nmbs_d[l_ac].*  #BACKUP
               IF NOT anmt530_03_lock_b("nmbs_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH anmt530_03_bcl INTO g_nmbs_d[l_ac].nmbsld,g_nmbs_d[l_ac].nmbsdocno
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_nmbs_d_t.nmbsld,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL anmt530_03_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_nmbs_d_t.* TO NULL
            INITIALIZE g_nmbs_d_o.* TO NULL
            INITIALIZE g_nmbs_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            
            
            LET g_nmbs_d_t.* = g_nmbs_d[l_ac].*     #新輸入資料
            LET g_nmbs_d_o.* = g_nmbs_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL anmt530_03_set_entry_b("a")
            CALL anmt530_03_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_nmbs_d[li_reproduce_target].* = g_nmbs_d[li_reproduce].*
 
               LET g_nmbs_d[g_nmbs_d.getLength()].nmbsld = NULL
               LET g_nmbs_d[g_nmbs_d.getLength()].nmbsdocno = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM nmbs_t 
             WHERE nmbsent = g_enterprise AND nmbsld = g_nmbs_d[l_ac].nmbsld
                                       AND nmbsdocno = g_nmbs_d[l_ac].nmbsdocno
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmbs_d[g_detail_idx].nmbsld
               LET gs_keys[2] = g_nmbs_d[g_detail_idx].nmbsdocno
               CALL anmt530_03_insert_b('nmbs_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_nmbs_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("nmbs_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL anmt530_03_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (nmbsld = '", g_nmbs_d[l_ac].nmbsld, "' "
                                  ," AND nmbsdocno = '", g_nmbs_d[l_ac].nmbsdocno, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_nmbs_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_nmbs_d.deleteElement(l_ac)
               NEXT FIELD nmbsld
            END IF
            IF g_nmbs_d[l_ac].nmbsld IS NOT NULL
               AND g_nmbs_d_t.nmbsdocno IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM nmbs_t
                WHERE nmbsent = g_enterprise AND 
                      nmbsld = g_nmbs_d_t.nmbsld
                      AND nmbsdocno = g_nmbs_d_t.nmbsdocno
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("nmbs_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE anmt530_03_bcl
               LET l_count = g_nmbs_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmbs_d[g_detail_idx].nmbsld
               LET gs_keys[2] = g_nmbs_d[g_detail_idx].nmbsdocno
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL anmt530_03_delete_b('nmbs_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD nmbsld
            
            #add-point:AFTER FIELD nmbsld
            {<point name="input.a.page1.nmbsld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmbsld
            #add-point:BEFORE FIELD nmbsld
            {<point name="input.b.page1.nmbsld" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmbsld
            #add-point:ON CHANGE nmbsld
            {<point name="input.g.page1.nmbsld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmbsdocno
            #add-point:BEFORE FIELD nmbsdocno
            {<point name="input.b.page1.nmbsdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmbsdocno
            
            #add-point:AFTER FIELD nmbsdocno
            {<point name="input.a.page1.nmbsdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmbsdocno
            #add-point:ON CHANGE nmbsdocno
            {<point name="input.g.page1.nmbsdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaqseq
            #add-point:BEFORE FIELD glaqseq
            {<point name="input.b.page1.glaqseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaqseq
            
            #add-point:AFTER FIELD glaqseq
            {<point name="input.a.page1.glaqseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaqseq
            #add-point:ON CHANGE glaqseq
            {<point name="input.g.page1.glaqseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq001
            #add-point:BEFORE FIELD glaq001
            {<point name="input.b.page1.glaq001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq001
            
            #add-point:AFTER FIELD glaq001
            {<point name="input.a.page1.glaq001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq001
            #add-point:ON CHANGE glaq001
            {<point name="input.g.page1.glaq001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq002
            #add-point:BEFORE FIELD glaq002
            {<point name="input.b.page1.glaq002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq002
            
            #add-point:AFTER FIELD glaq002
            {<point name="input.a.page1.glaq002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq002
            #add-point:ON CHANGE glaq002
            {<point name="input.g.page1.glaq002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD lc_subject
            #add-point:BEFORE FIELD lc_subject
            {<point name="input.b.page1.lc_subject" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD lc_subject
            
            #add-point:AFTER FIELD lc_subject
            {<point name="input.a.page1.lc_subject" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE lc_subject
            #add-point:ON CHANGE lc_subject
            {<point name="input.g.page1.lc_subject" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq003
            #add-point:BEFORE FIELD glaq003
            {<point name="input.b.page1.glaq003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq003
            
            #add-point:AFTER FIELD glaq003
            {<point name="input.a.page1.glaq003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq003
            #add-point:ON CHANGE glaq003
            {<point name="input.g.page1.glaq003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq004
            #add-point:BEFORE FIELD glaq004
            {<point name="input.b.page1.glaq004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq004
            
            #add-point:AFTER FIELD glaq004
            {<point name="input.a.page1.glaq004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq004
            #add-point:ON CHANGE glaq004
            {<point name="input.g.page1.glaq004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq040
            #add-point:BEFORE FIELD glaq040
            {<point name="input.b.page1.glaq040" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq040
            
            #add-point:AFTER FIELD glaq040
            {<point name="input.a.page1.glaq040" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq040
            #add-point:ON CHANGE glaq040
            {<point name="input.g.page1.glaq040" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq041
            #add-point:BEFORE FIELD glaq041
            {<point name="input.b.page1.glaq041" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq041
            
            #add-point:AFTER FIELD glaq041
            {<point name="input.a.page1.glaq041" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq041
            #add-point:ON CHANGE glaq041
            {<point name="input.g.page1.glaq041" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq043
            #add-point:BEFORE FIELD glaq043
            {<point name="input.b.page1.glaq043" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq043
            
            #add-point:AFTER FIELD glaq043
            {<point name="input.a.page1.glaq043" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq043
            #add-point:ON CHANGE glaq043
            {<point name="input.g.page1.glaq043" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq044
            #add-point:BEFORE FIELD glaq044
            {<point name="input.b.page1.glaq044" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq044
            
            #add-point:AFTER FIELD glaq044
            {<point name="input.a.page1.glaq044" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaq044
            #add-point:ON CHANGE glaq044
            {<point name="input.g.page1.glaq044" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD text
            #add-point:BEFORE FIELD text
            {<point name="input.b.page1.text" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD text
            
            #add-point:AFTER FIELD text
            {<point name="input.a.page1.text" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE text
            #add-point:ON CHANGE text
            {<point name="input.g.page1.text" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.nmbsld
         ON ACTION controlp INFIELD nmbsld
            #add-point:ON ACTION controlp INFIELD nmbsld
            {<point name="input.c.page1.nmbsld" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmbsdocno
         ON ACTION controlp INFIELD nmbsdocno
            #add-point:ON ACTION controlp INFIELD nmbsdocno
            {<point name="input.c.page1.nmbsdocno" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaqseq
         ON ACTION controlp INFIELD glaqseq
            #add-point:ON ACTION controlp INFIELD glaqseq
            {<point name="input.c.page1.glaqseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq001
         ON ACTION controlp INFIELD glaq001
            #add-point:ON ACTION controlp INFIELD glaq001
            {<point name="input.c.page1.glaq001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq002
         ON ACTION controlp INFIELD glaq002
            #add-point:ON ACTION controlp INFIELD glaq002
            {<point name="input.c.page1.glaq002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.lc_subject
         ON ACTION controlp INFIELD lc_subject
            #add-point:ON ACTION controlp INFIELD lc_subject
            {<point name="input.c.page1.lc_subject" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq003
         ON ACTION controlp INFIELD glaq003
            #add-point:ON ACTION controlp INFIELD glaq003
            {<point name="input.c.page1.glaq003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq004
         ON ACTION controlp INFIELD glaq004
            #add-point:ON ACTION controlp INFIELD glaq004
            {<point name="input.c.page1.glaq004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq040
         ON ACTION controlp INFIELD glaq040
            #add-point:ON ACTION controlp INFIELD glaq040
            {<point name="input.c.page1.glaq040" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq041
         ON ACTION controlp INFIELD glaq041
            #add-point:ON ACTION controlp INFIELD glaq041
            {<point name="input.c.page1.glaq041" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq043
         ON ACTION controlp INFIELD glaq043
            #add-point:ON ACTION controlp INFIELD glaq043
            {<point name="input.c.page1.glaq043" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glaq044
         ON ACTION controlp INFIELD glaq044
            #add-point:ON ACTION controlp INFIELD glaq044
            {<point name="input.c.page1.glaq044" />}
            #END add-point
 
         #Ctrlp:input.c.page1.text
         ON ACTION controlp INFIELD text
            #add-point:ON ACTION controlp INFIELD text
            {<point name="input.c.page1.text" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_nmbs_d[l_ac].* = g_nmbs_d_t.*
               CLOSE anmt530_03_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_nmbs_d[l_ac].nmbsld,-263,1)
               LET g_nmbs_d[l_ac].* = g_nmbs_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE nmbs_t SET (nmbsld,nmbsdocno) = (g_nmbs_d[l_ac].nmbsld,g_nmbs_d[l_ac].nmbsdocno) 

                WHERE nmbsent = g_enterprise AND
                  nmbsld = g_nmbs_d_t.nmbsld #項次   
                  AND nmbsdocno = g_nmbs_d_t.nmbsdocno  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("nmbs_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("nmbs_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmbs_d[g_detail_idx].nmbsld
               LET gs_keys_bak[1] = g_nmbs_d_t.nmbsld
               LET gs_keys[2] = g_nmbs_d[g_detail_idx].nmbsdocno
               LET gs_keys_bak[2] = g_nmbs_d_t.nmbsdocno
               CALL anmt530_03_update_b('nmbs_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_nmbs_d_t)
                     LET g_log2 = util.JSON.stringify(g_nmbs_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL anmt530_03_unlock_b("nmbs_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_nmbs_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_nmbs_d.getLength()+1
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD nmbsld
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE anmt530_03_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="anmt530_03.modify_detail_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION anmt530_03_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "nmbsld"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="anmt530_03.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="anmt530_03.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="anmt530_03.query" ver="2" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION anmt530_03_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_nmbs_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON nmbsld,nmbsdocno,glaqseq,glaq001,glaq002,lc_subject,glaq003,glaq004,glaq040, 
          glaq041,glaq043,glaq044,text 
 
         FROM s_detail1[1].nmbsld,s_detail1[1].nmbsdocno,s_detail1[1].glaqseq,s_detail1[1].glaq001,s_detail1[1].glaq002, 
             s_detail1[1].lc_subject,s_detail1[1].glaq003,s_detail1[1].glaq004,s_detail1[1].glaq040, 
             s_detail1[1].glaq041,s_detail1[1].glaq043,s_detail1[1].glaq044,s_detail1[1].text 
      
         
      
                  #Ctrlp:construct.c.page1.nmbsld
         ON ACTION controlp INFIELD nmbsld
            #add-point:ON ACTION controlp INFIELD nmbsld
            {<point name="construct.c.page1.nmbsld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmbsld
            #add-point:BEFORE FIELD nmbsld
            {<point name="query.b.page1.nmbsld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmbsld
            
            #add-point:AFTER FIELD nmbsld
            {<point name="query.a.page1.nmbsld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmbsdocno
            #add-point:BEFORE FIELD nmbsdocno
            {<point name="query.b.page1.nmbsdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmbsdocno
            
            #add-point:AFTER FIELD nmbsdocno
            {<point name="query.a.page1.nmbsdocno" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.nmbsdocno
         ON ACTION controlp INFIELD nmbsdocno
            #add-point:ON ACTION controlp INFIELD nmbsdocno
            {<point name="query.c.page1.nmbsdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaqseq
            #add-point:BEFORE FIELD glaqseq
            {<point name="query.b.page1.glaqseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaqseq
            
            #add-point:AFTER FIELD glaqseq
            {<point name="query.a.page1.glaqseq" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaqseq
         ON ACTION controlp INFIELD glaqseq
            #add-point:ON ACTION controlp INFIELD glaqseq
            {<point name="query.c.page1.glaqseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq001
            #add-point:BEFORE FIELD glaq001
            {<point name="query.b.page1.glaq001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq001
            
            #add-point:AFTER FIELD glaq001
            {<point name="query.a.page1.glaq001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq001
         ON ACTION controlp INFIELD glaq001
            #add-point:ON ACTION controlp INFIELD glaq001
            {<point name="query.c.page1.glaq001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq002
            #add-point:BEFORE FIELD glaq002
            {<point name="query.b.page1.glaq002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq002
            
            #add-point:AFTER FIELD glaq002
            {<point name="query.a.page1.glaq002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq002
         ON ACTION controlp INFIELD glaq002
            #add-point:ON ACTION controlp INFIELD glaq002
            {<point name="query.c.page1.glaq002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD lc_subject
            #add-point:BEFORE FIELD lc_subject
            {<point name="query.b.page1.lc_subject" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD lc_subject
            
            #add-point:AFTER FIELD lc_subject
            {<point name="query.a.page1.lc_subject" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.lc_subject
         ON ACTION controlp INFIELD lc_subject
            #add-point:ON ACTION controlp INFIELD lc_subject
            {<point name="query.c.page1.lc_subject" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq003
            #add-point:BEFORE FIELD glaq003
            {<point name="query.b.page1.glaq003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq003
            
            #add-point:AFTER FIELD glaq003
            {<point name="query.a.page1.glaq003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq003
         ON ACTION controlp INFIELD glaq003
            #add-point:ON ACTION controlp INFIELD glaq003
            {<point name="query.c.page1.glaq003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq004
            #add-point:BEFORE FIELD glaq004
            {<point name="query.b.page1.glaq004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq004
            
            #add-point:AFTER FIELD glaq004
            {<point name="query.a.page1.glaq004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq004
         ON ACTION controlp INFIELD glaq004
            #add-point:ON ACTION controlp INFIELD glaq004
            {<point name="query.c.page1.glaq004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq040
            #add-point:BEFORE FIELD glaq040
            {<point name="query.b.page1.glaq040" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq040
            
            #add-point:AFTER FIELD glaq040
            {<point name="query.a.page1.glaq040" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq040
         ON ACTION controlp INFIELD glaq040
            #add-point:ON ACTION controlp INFIELD glaq040
            {<point name="query.c.page1.glaq040" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq041
            #add-point:BEFORE FIELD glaq041
            {<point name="query.b.page1.glaq041" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq041
            
            #add-point:AFTER FIELD glaq041
            {<point name="query.a.page1.glaq041" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq041
         ON ACTION controlp INFIELD glaq041
            #add-point:ON ACTION controlp INFIELD glaq041
            {<point name="query.c.page1.glaq041" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq043
            #add-point:BEFORE FIELD glaq043
            {<point name="query.b.page1.glaq043" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq043
            
            #add-point:AFTER FIELD glaq043
            {<point name="query.a.page1.glaq043" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq043
         ON ACTION controlp INFIELD glaq043
            #add-point:ON ACTION controlp INFIELD glaq043
            {<point name="query.c.page1.glaq043" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaq044
            #add-point:BEFORE FIELD glaq044
            {<point name="query.b.page1.glaq044" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaq044
            
            #add-point:AFTER FIELD glaq044
            {<point name="query.a.page1.glaq044" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glaq044
         ON ACTION controlp INFIELD glaq044
            #add-point:ON ACTION controlp INFIELD glaq044
            {<point name="query.c.page1.glaq044" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD text
            #add-point:BEFORE FIELD text
            {<point name="query.b.page1.text" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD text
            
            #add-point:AFTER FIELD text
            {<point name="query.a.page1.text" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.text
         ON ACTION controlp INFIELD text
            #add-point:ON ACTION controlp INFIELD text
            {<point name="query.c.page1.text" />}
            #END add-point
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL anmt530_03_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="anmt530_03.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION anmt530_03_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="anmt530_03.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION anmt530_03_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="anmt530_03.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="anmt530_03.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION anmt530_03_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL anmt530_03_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_nmbs_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
			   #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL anmt530_03_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL anmt530_03_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL anmt530_03_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL anmt530_03_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL anmt530_03_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="anmt530_03.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION anmt530_03_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE anmt530_03_bcl
   #END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="anmt530_03.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION anmt530_03_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "nmbs_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "nmbs_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE nmbs_t 
         SET (nmbsld,nmbsdocno
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE nmbsld = ps_keys_bak[1] AND nmbsdocno = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("nmbs_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("nmbs_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>