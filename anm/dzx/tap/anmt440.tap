<add_points prog="anmt440" std_prog="anmt440" erpver="1.0" module="ANM" ver="3" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.anmt440_nmck005_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[# 付款對象
PRIVATE FUNCTION anmt440_nmck005_desc()
   DEFINE l_pmaa004      LIKE pmaa_t.pmaa004
      
   SELECT pmaa004 INTO l_pmaa004
     FROM pmaa_t
    WHERE pmaaent = g_enterprise
      AND pmaa001 = g_nmck_m.nmck005
 
   IF l_pmaa004 <> '2' THEN 
      LET g_nmck_m.nmck006 = ''
   END IF
   #非一次性交易對象
   IF cl_null(g_nmck_m.nmck006) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_nmck_m.nmck005
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_nmck_m.nmck005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_nmck_m.nmck005_desc
   ELSE  
      SELECT pmak003 INTO g_nmck_m.nmck005_desc
        FROM pmak_t
       WHERE pmakent = g_enterprise
         AND pmak001 = g_nmck_m.nmck006
      DISPLAY BY NAME g_nmck_m.nmck005_desc
   END IF 
END FUNCTION]]>
</point>
  <point name="function.anmt440_set_combo_scc" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 設置票據類別下拉框內容
# Memo...........:
# Usage..........: CALL anmt440_set_combo_scc(p_field,p_scc)
# Input parameter: p_field        欄位代號
#                : p_scc          scc碼
# Date & Author..: 2014/6/10 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt440_set_combo_scc(p_field,p_scc)
   DEFINE p_field        LIKE type_t.chr80
   DEFINE p_scc          LIKE type_t.num5
   DEFINE ps_values      STRING
   DEFINE ps_items       STRING
   DEFINE pc_ooia001     LIKE ooia_t.ooia001      
   DEFINE pc_ooial003    LIKE ooial_t.ooial003  
   DEFINE li_cnt         LIKE type_t.num5
   DEFINE ps_field_name  STRING
   DEFINE lcbo_target    ui.ComboBox
   DEFINE ls_temp        STRING
   DEFINE l_sql          STRING
   DEFINE pa_array DYNAMIC ARRAY OF RECORD
             value       STRING,
             label_tag   STRING,
             label       STRING
                   END RECORD

   LET l_sql = "SELECT ooia001,ooial003",
               "  FROM ooia_t LEFT JOIN ooial_t   ON ooial001 = ooia001",
               "                                 AND ooial002 = '",g_lang,"'",
               "                                 AND ooiaent = ooialent",
               "                                 AND ooiaent = ",g_enterprise,
               " WHERE ooia002 = ",p_scc
   PREPARE p_scc_itemp_pe FROM l_sql
   DECLARE p_scc_itemp_cs CURSOR FOR p_scc_itemp_pe

   LET ps_values = ''
   LET ps_items = ''

   #將選項填入陣列
   LET li_cnt = 1
   FOREACH p_scc_itemp_cs INTO pc_ooia001, pc_ooial003
      LET pa_array[li_cnt].value = pc_ooia001 CLIPPED
      LET pa_array[li_cnt].label_tag = pc_ooia001 CLIPPED
      LET pa_array[li_cnt].label = pc_ooial003 CLIPPED
      LET li_cnt = li_cnt + 1
   END FOREACH

   LET ps_field_name = p_field

   LET ps_field_name = ps_field_name.trim()

   LET lcbo_target = ui.ComboBox.forName(ps_field_name)

   #以下是Combobox的處理
   FOR li_cnt = 1 TO pa_array.getLength()
       IF cl_null(pa_array[li_cnt].label_tag) THEN
          LET ls_temp = pa_array[li_cnt].label
       ELSE
          LET ls_temp = pa_array[li_cnt].label_tag,":",pa_array[li_cnt].label
       END IF
      CALL lcbo_target.addItem(pa_array[li_cnt].value,ls_temp)
   END FOR
END FUNCTION]]>
</point>
  <point name="function.anmt440_get_exrate" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 獲取本位幣二三匯率和金額
# Memo...........:
# Usage..........: CALL anmt440_get_exrate()
# Date & Author..: 2014/6/11 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt440_get_exrate()
   DEFINE l_ooam003      LIKE ooam_t.ooam003
   
   #本位幣二
   IF g_glaa015 = 'Y' THEN 
      #來源幣別
      LET l_ooam003 = ''
      IF g_glaa017 = '1' THEN
         LET l_ooam003 = g_nmck_m.nmck100
      ELSE   #表示帳簿幣別 
         LET l_ooam003 = g_glaa001           #帳套使用幣別
      END IF
      
                               #     帳套;       日期;           來源幣別
      CALL s_aooi160_get_exrate('2',g_glaald,g_nmck_m.nmckdocdt,l_ooam003,
                                #目的幣別; 交易金額; 匯類類型
                                g_glaa016,0,g_glaa018)
      RETURNING g_nmck_m.nmck121 
      IF g_glaa017 = '1' THEN #原幣
         LET g_nmck_m.nmck123 = g_nmck_m.nmck103 * g_nmck_m.nmck121
      ELSE #本幣
         LET g_nmck_m.nmck123 = g_nmck_m.nmck113 * g_nmck_m.nmck121
      END IF
      DISPLAY g_nmck_m.nmck121 TO nmck121
      DISPLAY g_nmck_m.nmck123 TO nmck123
   END IF
   #本位幣三  
   IF g_glaa019 = 'Y' THEN 
      #來源幣別
      LET l_ooam003 = ''
      IF g_glaa021 = '1' THEN
         LET l_ooam003 = g_nmck_m.nmck100
      ELSE   #表示帳簿幣別 
         LET l_ooam003 = g_glaa001           #帳套使用幣別
      END IF
      
                               #     帳套;       日期;           來源幣別
      CALL s_aooi160_get_exrate('2',g_glaald,g_nmck_m.nmckdocdt,l_ooam003,
                                #目的幣別; 交易金額; 匯類類型
                                g_glaa020,0,g_glaa022)
      RETURNING g_nmck_m.nmck131 
      IF g_glaa021 = '1' THEN
         LET g_nmck_m.nmck133 = g_nmck_m.nmck103 * g_nmck_m.nmck131
      ELSE
         LET g_nmck_m.nmck133 = g_nmck_m.nmck113 * g_nmck_m.nmck131
      END IF
      DISPLAY g_nmck_m.nmck131 TO nmck131
      DISPLAY g_nmck_m.nmck133 TO nmck133
   END IF
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmck024_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL anmt440_nmck024_chk(p_nmck024)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt440_nmck024_chk(p_nmck024)
   DEFINE p_nmck024      LIKE nmck_t.nmck024
   DEFINE l_nmaf007      LIKE nmaf_t.nmaf007
   DEFINE l_nmaf010      LIKE nmaf_t.nmaf010
   DEFINE l_nmaf012      LIKE nmaf_t.nmaf012
   DEFINE l_nmaf011      LIKE nmaf_t.nmaf011
   
   LET g_errno=""
   SELECT nmaf010,nmaf007,nmaf012,nmaf011 INTO l_nmaf010,l_nmaf007,l_nmaf012,l_nmaf011
     FROM nmaf_t    
    WHERE nmafent = g_enterprise 
      AND nmaf001 = g_nmck_m.nmck004 #交易帳戶
      AND nmaf002 = g_nmck_m.nmck002 #票據類型
      AND nmaf004 = g_nmck_m.nmck024 #支票簿 
              
   CASE
      WHEN SQLCA.sqlcode=100     LET g_errno="anm-00150"
      WHEN l_nmaf010>=l_nmaf007  LET g_errno="anm-00151"
      WHEN l_nmaf012<>'Y'        LET g_errno="anm-00152"
   END CASE
   IF cl_null(g_errno) AND cl_null(g_nmck_m.nmck025) THEN
      LET g_nmck_m.nmck025=l_nmaf010
      DISPLAY BY NAME g_nmck_m.nmck025
      IF l_nmaf011='Y' THEN #套印否
         CALL cl_set_comp_required("nmck025",FALSE)
      ELSE
         CALL cl_set_comp_required("nmck025",TRUE)
      END IF
      IF cl_null(g_nmck_m.nmck026) THEN
         IF NOT cl_null(g_nmck_m.nmck025) THEN
            LET g_nmck_m.nmck026='1'
         ELSE
            LET g_nmck_m.nmck026='0'
         END IF
         DISPLAY BY NAME g_nmck_m.nmck026
      END IF      
   END IF
      
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmckcomp_desc" cite_std="N" status="" ver="3" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
#公司法人說明
PRIVATE FUNCTION anmt440_nmckcomp_desc()
   #公司法人
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmck_m.nmckcomp   
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmck_m.nmckcomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmck_m.nmckcomp_desc TO nmckcomp_desc
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmcksite_desc" cite_std="N" status="" ver="3" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
#資金中心說明
PRIVATE FUNCTION anmt440_nmcksite_desc()
   #資金中心
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmck_m.nmcksite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmck_m.nmcksite_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmck_m.nmcksite_desc TO nmcksite_desc
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmck003_desc" cite_std="N" status="" ver="3" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
#帳務人員
PRIVATE FUNCTION anmt440_nmck003_desc()
   #帳務人員
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmck_m.nmck003 
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_nmck_m.nmck003_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmck_m.nmck003_desc TO nmck003_desc
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmck004_desc" cite_std="N" status="" ver="3" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
#帳戶編碼
PRIVATE FUNCTION anmt440_nmck004_desc()
   DEFINE l_nmas001      LIKE nmas_t.nmas001
   
   #帳戶編碼
   SELECT nmas001 INTO l_nmas001 
     FROM nmas_t
    WHERE nmasent = g_enterprise
      AND nmas002 = g_nmck_m.nmck004
   #交易賬戶名稱 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_nmas001
   CALL ap_ref_array2(g_ref_fields,"SELECT nmaal003 FROM nmaal_t WHERE nmaalent='"||g_enterprise||"' AND nmaal001=? AND nmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmck_m.nmck004_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmck_m.nmck004_desc TO nmck004_desc
   #交易幣別
   LET g_nmck_m.nmas003 = ''
   SELECT nmas003 INTO g_nmck_m.nmas003 
     FROM nmaa_t,nmas_t
    WHERE nmaaent = g_enterprise
      AND nmaaent = nmasent
      AND nmaa001 = nmas001
      AND nmas002 = g_nmck_m.nmck004 
      AND nmaa002 IN (select ooef001 FROM ooef_t WHERE ooefent = g_enterprise
                                               AND ooef017 = g_nmck_m.nmckcomp)
   DISPLAY g_nmck_m.nmas003 TO nmas003
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmck009_desc" cite_std="N" status="" ver="3" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[
##存提碼
PRIVATE FUNCTION anmt440_nmck009_desc()
   #存提碼
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmck_m.nmck009
   CALL ap_ref_array2(g_ref_fields,"SELECT nmajl003 FROM nmajl_t WHERE nmajlent='"||g_enterprise||"' AND nmajl001=? AND nmajl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmck_m.nmck009_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmck_m.nmck009_desc TO nmck009_desc  
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmck010_desc" cite_std="N" status="" ver="3" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[
#現金變動碼
PRIVATE FUNCTION anmt440_nmck010_desc()
   #現金變動碼
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glaa005
   LET g_ref_fields[2] = g_nmck_m.nmck010
   CALL ap_ref_array2(g_ref_fields,"SELECT nmail004 FROM nmail_t WHERE nmailent='"||g_enterprise||"' AND nmail001=? AND nmail002 =? AND nmail003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmck_m.nmck010_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmck_m.nmck010_desc TO nmck010_desc
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmck032_desc" cite_std="N" status="" ver="3" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[
#承兌銀行
PRIVATE FUNCTION anmt440_nmck032_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmck_m.nmck032
   CALL ap_ref_array2(g_ref_fields,"SELECT nmabl003 FROM nmabl_t WHERE nmablent='"||g_enterprise||"' AND nmabl001=? AND nmabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmck_m.nmck032_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_nmck_m.nmck032_desc
END FUNCTION]]>
</point>
  <point name="function.anmt440_nmck026_scc" cite_std="N" status="" ver="3" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL anmt440_nmck026_scc(p_type)
# Input parameter: p_type         当前操作状态1：新增/修改；2：查询
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt440_nmck026_scc(p_type)
   DEFINE p_type       LIKE type_t.chr1
   DEFINE l_sql        STRING
   DEFINE l_str        STRING
   DEFINE l_gzcb002    LIKE gzcb_t.gzcb002
   
   #1:新增/修改;2:查詢
   IF p_type='1' THEN
      LET l_sql = "SELECT gzcb002 FROM gzcb_t WHERE gzcb001 = '8711' AND gzcb006 = 'anmt440' "
   ELSE
      LET l_sql = "SELECT gzcb002 FROM gzcb_t WHERE gzcb001 = '8711' AND gzcb006 IN ('anmt440','anmt450')"
   END IF
   PREPARE anmt440_nmck026_prep FROM l_sql
   DECLARE anmt440_nmck026_curs CURSOR FOR anmt440_nmck026_prep
   LET l_str = Null
   LET l_gzcb002 = Null
   FOREACH anmt440_nmck026_curs INTO l_gzcb002
      IF cl_null(l_str) THEN 
         LET l_str = l_gzcb002 
         CONTINUE FOREACH 
      END IF
      LET l_str = l_str,",",l_gzcb002
   END FOREACH
   CALL cl_set_combo_scc_part('nmck026','8711',l_str)
END FUNCTION]]>
</point>
  <point name="function.anmt440_extension" cite_std="N" status="" ver="3" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[
#+展期
#當票況=1：開立時，可修改‘到期日’，并更新票況=2：展期
PRIVATE FUNCTION anmt440_extension()
   DEFINE l_date    DATETIME YEAR TO SECOND
   
   IF g_nmck_m.nmckcomp IS NULL THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF  
   
   IF g_nmck_m.nmck026<>'1' OR cl_null(g_nmck_m.nmck025) THEN
      CALL cl_err('','anm-00163',0)
      RETURN
   END IF
   LET g_nmck_m.nmck026='2'
   DISPLAY BY NAME g_nmck_m.nmck026
   LET l_date=cl_get_current()
   INPUT BY NAME g_nmck_m.nmck011
      ATTRIBUTE(WITHOUT DEFAULTS)
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
      AFTER FIELD nmck011
            
      AFTER INPUT
         UPDATE nmck_t SET nmck011=g_nmck_m.nmck011,
                           nmck026=g_nmck_m.nmck026,
                           nmckmodid=g_user,
                           nmckmoddt=l_date
         WHERE nmckent=g_enterprise AND nmckcomp=g_nmck_m.nmckcomp 
           AND nmckdocno=g_nmck_m.nmckdocno
         IF SQLCA.sqlcode THEN
            CALL cl_err('',SQLCA.sqlcode,0)
            CALL s_transaction_end('N','0')
         END IF
         
       ON ACTION accept
         ACCEPT INPUT
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT INPUT
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT INPUT
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT INPUT
   END INPUT
   IF INT_FLAG THEN
      LET INT_FLAG = 0      
      CALL cl_err("",9001,0)
   END IF
   CALL anmt440_show()
END FUNCTION]]>
</point>
  <point name="function.anmt440_open_anmt470" cite_std="N" status="u" ver="3" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[
#+應付票據帳務資料
#當帳務資料存在時調用anmt470顯示帳務資料，反之，調用anmt470_01產生帳務資料
PRIVATE FUNCTION anmt440_open_anmt470()
   DEFINE l_nmck020     LIKE nmck_t.nmck020
   DEFINE l_nmck021     LIKE nmck_t.nmck021
   DEFINE la_param      RECORD
          prog          STRING,
          param         DYNAMIC ARRAY OF STRING
                        END RECORD
   DEFINE ls_js         STRING
   
   IF g_nmck_m.nmckcomp IS NULL THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   SELECT nmck020,nmck021 INTO l_nmck020,l_nmck021 FROM nmck_t
   WHERE nmckent=g_enterprise AND nmckcomp=g_nmck_m.nmckcomp AND nmckdocno=g_nmck_m.nmckdocno
   IF NOT cl_null(g_nmck_m.nmck019) OR NOT cl_null(l_nmck020) OR NOT cl_null(l_nmck021) THEN
      LET la_param.prog = 'anmt470'
      LET la_param.param[1] = NULL
      LET la_param.param[2] = g_nmck_m.nmck019       
      LET ls_js = util.JSON.stringify(la_param )
#      CALL cl_cmdrun(ls_js)
   ELSE
#      CALL anmt470_01()
   END IF
END FUNCTION]]>
</point>
  <point name="function.anmt440_glaa" cite_std="N" status="" ver="3" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[
#+抓取帳務資料
PRIVATE FUNCTION anmt440_glaa()
   CALL cl_get_para(g_enterprise,g_nmck_m.nmckcomp,'S-FIN-4007') RETURNING g_para_data   #資金系統關帳日
   CALL cl_get_para(g_enterprise,g_nmck_m.nmckcomp,'S-FIN-4004') RETURNING g_para_data1  #資金模組匯率來源
   SELECT glaa001,glaald,glaa004,glaa005,glaa015,glaa016,glaa017,glaa018,glaa019,glaa020,glaa021,glaa022 
     INTO g_glaa001,g_glaald,g_glaa004,g_glaa005,g_glaa015,g_glaa016,
          g_glaa017,g_glaa018,g_glaa019,g_glaa020,g_glaa021,g_glaa022 
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaacomp = g_nmck_m.nmckcomp
      AND glaa014 = 'Y'
   #所屬國家地區   
   SELECT ooef006 INTO g_ooef006 
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_nmck_m.nmckcomp
END FUNCTION]]>
</point>
  <point name="function.anmt440_ref_b" cite_std="N" status="" ver="3" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 抓取單身說明欄位
# Memo...........:
# Usage..........: CALL anmt440_ref_b()
# Date & Author..: 2014/5/12 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt440_ref_b()
   #組織說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmcl_d[l_ac].nmclorga 
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmcl_d[l_ac].nmclorga_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmcl_d[l_ac].nmclorga_desc TO nmclorga_desc
   #科目說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glaa004
   LET g_ref_fields[2] = g_nmcl_d[l_ac].nmcl003
   CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_nmcl_d[l_ac].nmcl003_desc = '', g_rtn_fields[1] , ''
   DISPLAY g_nmcl_d[l_ac].nmcl003_desc TO nmcl003_desc
END FUNCTION]]>
</point>
  <point name="function.anmt440_amt_get" cite_std="N" status="" ver="3" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 根據來源單號+項次帶出原幣、本幣金額
# Memo...........:
# Usage..........: CALL anmt440_amt_get()
# Date & Author..: 2014/6/12 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION anmt440_amt_get()
   IF g_nmck_m.nmck001 = 'AP' THEN 
      SELECT apce016,apce109,apce119,apce121,apce129,apce131,apce139
        INTO g_nmcl_d[l_ac].nmcl003,g_nmcl_d[l_ac].nmcl103,g_nmcl_d[l_ac].nmcl113,
             g_nmcl_d[l_ac].nmcl121,g_nmcl_d[l_ac].nmcl123,g_nmcl_d[l_ac].nmcl131,g_nmcl_d[l_ac].nmcl133
        FROM apce_t
       WHERE apceent = g_enterprise
         AND apcedocno = g_nmcl_d[l_ac].nmcl001
         AND apceseq = g_nmcl_d[l_ac].nmcl002
         
      DISPLAY BY NAME g_nmcl_d[l_ac].nmcl003,g_nmcl_d[l_ac].nmcl103,g_nmcl_d[l_ac].nmcl113,
             g_nmcl_d[l_ac].nmcl121,g_nmcl_d[l_ac].nmcl123,g_nmcl_d[l_ac].nmcl131,g_nmcl_d[l_ac].nmcl133
   END IF
END FUNCTION]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CALL anmt440_ref_b()]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照nmckcomp,nmckdocno Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT nmckstus,nmckcomp,nmckdocno,DENSE_RANK() OVER(ORDER BY nmckcomp, 
          nmckdocno ",g_order,") AS RANK ",
                        " FROM nmck_t ",
                              " ",
                              " LEFT JOIN nmcl_t ON nmclent = nmckent AND nmckcomp = nmclcomp AND nmckdocno = nmcldocno ",
 
 
                              " ",
                              " ",
                       " ",
                       " WHERE nmckent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("nmck_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT nmckstus,nmckcomp,nmckdocno,DENSE_RANK() OVER(ORDER BY nmckcomp, 
          nmckdocno ",g_order,") AS RANK ",
                       " FROM nmck_t ",
                            "  ",
                            "  ",
                       " WHERE nmckent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("nmck_t")
   END IF]]>
</point>
  <point name="browser_fill.cnt_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE nmckcomp ",
                                    ",nmckdocno ",
 
                        " FROM nmck_t ",
                              " ",
                              " LEFT JOIN nmcl_t ON nmclent = nmckent AND nmckcomp = nmclcomp AND nmckdocno = nmcldocno ",
 
 
                              " ", 
                              " ", 
                       " WHERE nmckent = '" ||g_enterprise|| "' AND nmclent = '" ||g_enterprise|| "' AND ",p_wc, " AND ", l_wc2, cl_sql_add_filter("nmck_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE nmckcomp ",
                                    ",nmckdocno ",
 
                        " FROM nmck_t ", 
                              " ",
                              " ",
                        "WHERE nmckent = '" ||g_enterprise|| "' AND ",p_wc CLIPPED, cl_sql_add_filter("nmck_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#   DEFINE l_sub_sql         STRING
#   DEFINE l_wc2             STRING
   
   IF cl_null(g_wc) THEN
      LET g_wc = " nmck002 IN (SELECT ooia001 FROM ooia_t WHERE ooia002 = '30') "
   ELSE
      LET g_wc = g_wc," AND nmck002 IN (SELECT ooia001 FROM ooia_t WHERE ooia002 = '30')"
   END IF]]>
</point>
  <point name="browser_fill.wc" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1 " 
   END IF
   LET g_wc=g_wc," AND nmck002 IN (SELECT ooia001 FROM ooia_t  WHERE ooia002 = '30') "
   LET p_wc=p_wc," AND nmck002 IN (SELECT ooia001 FROM ooia_t  WHERE ooia002 = '30') "
   LET l_wc2 = g_wc2.trim()]]>
</point>
  <point name="construct.c.nmas003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooaj002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmas003  #顯示到畫面上
            NEXT FIELD nmas003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck003  #顯示到畫面上
            NEXT FIELD nmck003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmas_01()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck004  #顯示到畫面上
            NEXT FIELD nmck004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_13()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck005  #顯示到畫面上
            NEXT FIELD nmck005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmad002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck009  #顯示到畫面上
            NEXT FIELD nmck009                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " nmai001='",g_glaa005,"'"
            CALL q_nmai002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck010  #顯示到畫面上
            NEXT FIELD nmck010                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck013  #顯示到畫面上
            NEXT FIELD nmck013                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck019" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " nmck002 IN (SELECT ooia001 FROM ooia_t  WHERE ooia002 = '30')"
            CALL q_nmck019()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck019  #顯示到畫面上
            NEXT FIELD nmck019                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck024" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmaf004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck024  #顯示到畫面上
            NEXT FIELD nmck024                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck032" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck032  #顯示到畫面上
            NEXT FIELD nmck032                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmck100" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmck100  #顯示到畫面上
            NEXT FIELD nmck100                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckcnfid  #顯示到畫面上
            NEXT FIELD nmckcnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckcomp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckcomp  #顯示到畫面上
            NEXT FIELD nmckcomp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckcrtdp  #顯示到畫面上
            NEXT FIELD nmckcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckcrtid  #顯示到畫面上
            NEXT FIELD nmckcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " nmck002 IN (SELECT ooia001 FROM ooia_t  WHERE ooia002 = '30')"
            CALL q_nmckdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckdocno  #顯示到畫面上
            NEXT FIELD nmckdocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckmodid  #顯示到畫面上
            NEXT FIELD nmckmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckowndp  #顯示到畫面上
            NEXT FIELD nmckowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmckownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmckownid  #顯示到畫面上
            NEXT FIELD nmckownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.nmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmcksite  #顯示到畫面上
            NEXT FIELD nmcksite                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.nmcl001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_apdadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmcl001  #顯示到畫面上
            NEXT FIELD nmcl001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.nmcl002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_apceseq()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmcl002  #顯示到畫面上
            NEXT FIELD nmcl002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.nmcl003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL aglt310_04()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmcl003  #顯示到畫面上
            NEXT FIELD nmcl003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.nmclorga" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmclorga  #顯示到畫面上
            NEXT FIELD nmclorga                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.nmclorga_desc" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmclorga_desc  #顯示到畫面上
            NEXT FIELD nmclorga_desc                     #返回原欄位
    

]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#   LET g_wc2=g_wc_source]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      SUBDIALOG anm_anmt440_01.anmt440_01_construct]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #當票況=0時才可異動
   IF g_nmck_m.nmck026 <> '0' THEN
      CALL cl_err('','anm-00162',0)
      RETURN
   END IF]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#      DELETE FROM nmcl_t
#       WHERE nmclent = g_enterprise AND nmclcomp = g_nmck_m.nmckcomp
#         AND nmcldocno = g_nmck_m.nmckdocno
#      IF SQLCA.sqlcode THEN
#         CALL cl_err("nmcl_t",SQLCA.sqlcode,0) 
#         CALL s_transaction_end('N','0')
#         RETURN
#      END IF ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#   LET g_nmckcomp=g_nmck_m.nmckcomp
#   LET g_nmckdocno=g_nmck_m.nmckdocno]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#IMPORT FGL anm_anmt440_01  #匯款來源]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_para_data           LIKE type_t.chr80     #資金系統關帳日
DEFINE g_para_data1          LIKE type_t.chr80     #資金模組匯率來源
DEFINE g_glaa001             LIKE glaa_t.glaa001
DEFINE g_glaald              LIKE glaa_t.glaald
DEFINE g_glaa004             LIKE glaa_t.glaa004
DEFINE g_glaa005             LIKE glaa_t.glaa005 
DEFINE g_ooef006             LIKE ooef_t.ooef006
DEFINE g_glaa015             LIKE glaa_t.glaa015
DEFINE g_glaa016             LIKE glaa_t.glaa016
DEFINE g_glaa017             LIKE glaa_t.glaa017
DEFINE g_glaa018             LIKE glaa_t.glaa018
DEFINE g_glaa019             LIKE glaa_t.glaa019
DEFINE g_glaa020             LIKE glaa_t.glaa020
DEFINE g_glaa021             LIKE glaa_t.glaa021
DEFINE g_glaa022             LIKE glaa_t.glaa022

#DEFINE g_wc2                 STRING
#GLOBALS
#   DEFINE g_wc_source        STRING
#   DEFINE g_nmckcomp         LIKE nmck_t.nmckcomp
#   DEFINE g_nmckdocno        LIKE nmck_t.nmckdocno
#   DEFINE g_nmckcomp_o       LIKE nmck_t.nmckcomp
#   DEFINE g_nmckdocno_o      LIKE nmck_t.nmckdocno
#   DEFINE g_detail_insert    LIKE type_t.num5   #單身的新增權限
#   DEFINE g_detail_delete    LIKE type_t.num5   #單身的刪除權限
#END GLOBALS]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[ ]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[   CALL anmt440_set_combo_scc('nmck002','30')
   CALL cl_set_combo_scc('nmck001','8722')
   CALL anmt440_nmck026_scc('2')
   CALL cl_set_combo_scc('nmck034','8712')
   CALL cl_set_combo_scc('nmck030','8715')
#   #子程式畫面取代主程式元件
#   CALL cl_ui_replace_sub_window(cl_ap_formpath("anm", "anmt440_01"), "grid_source", "Table", "s_detail1_anmt440_01")]]>
</point>
  <point name="input.a.nmck002" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck002) AND NOT cl_null(g_nmck_m.nmck004) AND cl_null(g_nmck_m.nmck024) THEN
               SELECT nmaf004,nmaf010,nmaf011 INTO g_nmck_m.nmck024,l_nmaf010,l_nmaf011 
               FROM nmaf_t
               WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004
                 AND nmaf002=g_nmck_m.nmck002 AND nmaf010<nmaf007
                 AND nmaf012='Y'
               ORDER BY nmaf004
               LET g_nmck_m.nmck025=l_nmaf010
               DISPLAY BY NAME g_nmck_m.nmck024,g_nmck_m.nmck025
               IF l_nmaf011='Y' THEN #套印否
                  CALL cl_set_comp_required("nmck025",FALSE)
               ELSE
                  CALL cl_set_comp_required("nmck025",TRUE)
               END IF
               IF cl_null(g_nmck_m.nmck026) THEN
                  IF NOT cl_null(g_nmck_m.nmck025) THEN
                     LET g_nmck_m.nmck026='1'
                  ELSE
                     LET g_nmck_m.nmck026='0'
                  END IF
                  DISPLAY BY NAME g_nmck_m.nmck026
               END IF
            END IF]]>
</point>
  <point name="input.a.nmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL anmt440_nmck003_desc()
            IF NOT cl_null(g_nmck_m.nmck003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmck003
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck003 = g_nmck_m_t.nmck003
                  CALL anmt440_nmck003_desc()
                  NEXT FIELD CURRENT
               END IF
            

            END IF ]]>
</point>
  <point name="input.a.nmck004" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[            CALL anmt440_nmck004_desc()
            IF NOT cl_null(g_nmck_m.nmck004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmck004
               LET g_chkparam.arg2 = g_nmck_m.nmckcomp

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_nmas002_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
#                  #賬戶幣別
#                  LET g_nmck_m.nmas003 = ''
#                  SELECT nmas003 INTO g_nmck_m.nmas003 
#                    FROM nmaa_t,nmas_t
#                   WHERE nmaaent = g_enterprise
#                     AND nmaaent = nmasent
#                     AND nmaa001 = nmas001
#                     AND nmas002 = g_nmck_m.nmck004 
#                     AND nmaa002 IN (select ooef001 FROM ooef_t WHERE ooefent = g_enterprise
#                                                              AND ooef017 = g_nmck_m.nmckcomp)
#                  DISPLAY g_nmck_m.nmas003 TO nmas003
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck004 = g_nmck_m_t.nmck004
                  CALL anmt440_nmck004_desc()
                  NEXT FIELD CURRENT
               END IF
            
               IF NOT cl_null(g_nmck_m.nmck002) AND cl_null(g_nmck_m.nmck024) THEN
                  SELECT nmaf004,nmaf010,nmaf011 INTO g_nmck_m.nmck024,l_nmaf010,l_nmaf011 
                  FROM nmaf_t
                  WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004
                    AND nmaf002=g_nmck_m.nmck002 AND nmaf010<nmaf007
                    AND nmaf012='Y'
                  ORDER BY nmaf004
                  LET g_nmck_m.nmck025=l_nmaf010
                  DISPLAY BY NAME g_nmck_m.nmck024,g_nmck_m.nmck025
                  IF l_nmaf011='Y' THEN #套印否
                     CALL cl_set_comp_required("nmck025",FALSE)
                  ELSE
                     CALL cl_set_comp_required("nmck025",TRUE)
                  END IF
                  IF cl_null(g_nmck_m.nmck026) THEN
                     IF NOT cl_null(g_nmck_m.nmck025) THEN
                        LET g_nmck_m.nmck026='1'
                     ELSE
                        LET g_nmck_m.nmck026='0'
                     END IF
                     DISPLAY BY NAME g_nmck_m.nmck026
                  END IF
               END IF
            END IF 
]]>
</point>
  <point name="input.a.nmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL anmt440_nmck005_desc()
            IF NOT cl_null(g_nmck_m.nmck005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmck005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_7") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                 #交易對象之匯款銀行戶號 
                 SELECT pmaf004 INTO g_nmck_m.nmck015
                   FROM pmaf_t
                 WHERE pmaf009 = 'Y'                  #主要付款帳戶
                   AND pmaf001 = g_nmck_m.nmck005     #付款對象
                 DISPLAY g_nmck_m.nmck015 TO nmck015
                 
                 SELECT pmaa027,pmaa004 INTO l_pmaa027,l_pmaa004
                   FROM pmaa_t
                  WHERE pmaaent = g_enterprise
                    AND pmaa001 = g_nmck_m.nmck005
                 
                 IF l_pmaa004 = '2' THEN 
                    INITIALIZE g_qryparam.* TO NULL
                    LET g_qryparam.state = 'i'
	                 LET g_qryparam.reqry = FALSE
                 
                    LET g_qryparam.arg1 = g_nmck_m.nmck005
                    #給予arg
                 
                    CALL q_pmak002()                                #呼叫開窗
                 
                    LET g_nmck_m.nmck006 = g_qryparam.return1   
                    CALL anmt440_nmck005_desc()
                 ELSE
                    LET g_nmck_m.nmck006 = ''
                 END IF 
                 
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck005 = g_nmck_m_t.nmck005
                  CALL anmt440_nmck005_desc()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.nmck007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck007) THEN 
            END IF 

]]>
</point>
  <point name="input.a.nmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL anmt440_nmck009_desc()
            IF NOT cl_null(g_nmck_m.nmck009) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_glaa005
               LET g_chkparam.arg2 = g_nmck_m.nmck009
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_nmad002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  IF cl_null(g_nmck_m.nmck010) THEN 
                     SELECT nmad003 INTO g_nmck_m.nmck010
                       FROM nmad_t
                      WHERE nmadent = g_enterprise
                        AND nmad001 = g_glaa005
                        AND nmad002 = g_nmck_m.nmck009    
                     DISPLAY g_nmck_m.nmck010 TO nmck010  
                     CALL anmt440_nmck010_desc()  
                   END IF                     
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck009 = g_nmck_m_t.nmck009
                  CALL anmt440_nmck009_desc()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.nmck010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL anmt440_nmck010_desc()
            IF NOT cl_null(g_nmck_m.nmck010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmck010
               LET g_chkparam.arg2 = g_glaa005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_nmai002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck010 = g_nmck_m_t.nmck010
                  CALL anmt440_nmck010_desc()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.nmck013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL anmt440_ref_show()
            IF NOT cl_null(g_nmck_m.nmck013) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmck013
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_nmab001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  IF g_nmck_m.nmck002 = '1' THEN 
                     SELECT COUNT(*) INTO l_n
                       FROM nmab_t
                      WHERE nmabent = g_enterprise
                        AND nmab001 = g_nmck_m.nmck013
                        AND nmab008 = g_ooef006
                     IF l_n = 0 THEN 
                        CALL cl_err(g_nmck_m.nmck013,'anm-00128',1)
                        LET g_nmck_m.nmck013 = g_nmck_m_t.nmck013
                        CALL anmt440_ref_show()
                        NEXT FIELD nmck013
                     END IF
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck013 = g_nmck_m_t.nmck013
                  CALL anmt440_ref_show()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.nmck024" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck024) THEN
               CALL anmt440_nmck024_chk(g_nmck_m.nmck024)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,0)
                  LET g_nmck_m.nmck024=g_nmck_m_t.nmck024
                  NEXT FIELD nmck024
               END IF
            ELSE
               CALL cl_set_comp_required("nmck025",FALSE)
            END IF]]>
</point>
  <point name="input.a.nmck025" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck025) THEN
               SELECT nmaf006,nmaf007 INTO l_nmaf006,l_nmaf007 FROM nmaf_t
               WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004 
               AND nmaf002=g_nmck_m.nmck002 AND nmaf004=g_nmck_m.nmck024 
               AND nmaf010<nmaf007 AND nmaf012='Y'
               IF SQLCA.sqlcode=0 AND (g_nmck_m.nmck025<l_nmaf006 OR g_nmck_m.nmck025>l_nmaf007) THEN
                  CALL cl_err('','anm-00153',0)
                  LET g_nmck_m.nmck025=g_nmck_m_t.nmck025
                  NEXT FIELD nmck025
               END IF
               SELECT COUNT(*) INTO l_cnt FROM nmck_t
               WHERE nmckent=g_enterprise AND nmck004=g_nmck_m.nmck004
               AND nmck002=g_nmck_m.nmck002 AND nmck025=g_nmck_m.nmck025
               IF l_cnt>0 THEN
                  CALL cl_err('','anm-00157',0)
                  LET g_nmck_m.nmck025=g_nmck_m_t.nmck025
                  NEXT FIELD nmck025
               END IF
            END IF]]>
</point>
  <point name="input.a.nmck028" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck028) THEN 
               LET g_nmck_m.nmck029=g_nmck_m.nmck113*g_nmck_m.nmck028
               DISPLAY BY NAME g_nmck_m.nmck029
            END IF 

]]>
</point>
  <point name="input.a.nmck029" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck029) THEN 
            END IF 

]]>
</point>
  <point name="input.a.nmck031" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck031) AND NOT cl_null(g_nmck_m.nmck030) THEN 
               IF g_nmck_m.nmck031=0 THEN
                  CALL cl_err('','anm-00149',0)
                  LET g_nmck_m.nmck031=g_nmck_m_t.nmck031
                  NEXT FIELD nmck031
               END IF
            END IF 

]]>
</point>
  <point name="input.a.nmck032" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck032) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmck032
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_nmab001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  SELECT COUNT(*) INTO l_n
                    FROM nmab_t
                   WHERE nmabent = g_enterprise
                     AND nmab001 = g_nmck_m.nmck032
                     AND nmab008 = g_ooef006
                  IF l_n = 0 THEN 
                     CALL cl_err(g_nmck_m.nmck032,'anm-00128',1)
                     LET g_nmck_m.nmck032 = g_nmck_m_t.nmck032
                     CALL anmt440_nmck032_desc()
                     NEXT FIELD nmck032
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck032 = g_nmck_m_t.nmck032
                  CALL anmt440_nmck032_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL anmt440_nmck032_desc()]]>
</point>
  <point name="input.a.nmck100" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck100) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmck100
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooai001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  IF p_cmd = 'a' OR (p_cmd = 'u' AND g_nmck_m.nmck100 <> g_nmck_m_t.nmck100) THEN 
                                              #匯率參照表;帳套;         日期;       來源幣別
                     CALL s_aooi160_get_exrate('1',g_nmck_m.nmckcomp,g_nmck_m.nmckdocdt,g_nmck_m.nmck100,
                                              #目的幣別;  交易金額;              匯類類型
                                               g_glaa001,0,g_para_data1)
                     RETURNING g_nmck_m.nmck101
                     DISPLAY g_nmck_m.nmck101 TO nmck101
                     LET g_nmck_m.nmck113 = g_nmck_m.nmck103 * g_nmck_m.nmck101
                     DISPLAY g_nmck_m.nmck113 TO nmck113
                     CALL anmt440_get_exrate()
                  END IF
                  
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmck100 = g_nmck_m_t.nmck100
                  NEXT FIELD CURRENT
               END IF
              
            END IF 

]]>
</point>
  <point name="input.a.nmck101" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck101) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND g_nmck_m.nmck101 <> g_nmck_m_t.nmck101) THEN 
                  LET g_nmck_m.nmck113 = g_nmck_m.nmck103 * g_nmck_m.nmck101
                  CALL anmt440_get_exrate()
                  DISPLAY g_nmck_m.nmck113 TO nmck113
               END IF
            END IF]]>
</point>
  <point name="input.a.nmck103" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck103) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND g_nmck_m.nmck103 <> g_nmck_m_t.nmck103) THEN 
                  LET g_nmck_m.nmck113 = g_nmck_m.nmck103 * g_nmck_m.nmck101
                  CALL anmt440_get_exrate()
                  DISPLAY g_nmck_m.nmck113 TO nmck113
               END IF
            END IF]]>
</point>
  <point name="input.a.nmck113" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck113) THEN
               CALL anmt440_get_exrate()
            END IF]]>
</point>
  <point name="input.a.nmckcomp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_nmck_m.nmckcomp) AND NOT cl_null(g_nmck_m.nmckdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_nmck_m.nmckcomp != g_nmckcomp_t  OR g_nmck_m.nmckdocno != g_nmckdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM nmck_t WHERE "||"nmckent = '" ||g_enterprise|| "' AND "||"nmckcomp = '"||g_nmck_m.nmckcomp ||"' AND "|| "nmckdocno = '"||g_nmck_m.nmckdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            CALL anmt440_nmckcomp_desc()
            IF NOT cl_null(g_nmck_m.nmckcomp) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmckcomp

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME
                  #抓取帳務資料                  
                  CALL anmt440_glaa()
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmckcomp = g_nmck_m_t.nmckcomp
                  CALL anmt440_nmckcomp_desc()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
</point>
  <point name="input.a.nmckdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmckdocdt) THEN 
               IF g_nmck_m.nmckdocdt < g_para_data THEN 
                  CALL cl_err(g_nmck_m.nmckdocdt,'anm-00124',1) 
                  LET g_nmck_m.nmckdocdt = g_nmck_m_t.nmckdocdt
                  NEXT FIELD nmckdocdt
               END IF
            END IF]]>
</point>
  <point name="input.a.nmckdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_nmck_m.nmckcomp) AND NOT cl_null(g_nmck_m.nmckdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_nmck_m.nmckcomp != g_nmckcomp_t  OR g_nmck_m.nmckdocno != g_nmckdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM nmck_t WHERE "||"nmckent = '" ||g_enterprise|| "' AND "||"nmckcomp = '"||g_nmck_m.nmckcomp ||"' AND "|| "nmckdocno = '"||g_nmck_m.nmckdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_nmck_m.nmckcomp 
            IF NOT cl_null(g_nmck_m.nmckdocno) THEN 
               CALL s_aooi200_chk_slip(g_nmck_m.nmckcomp,l_ooef004,g_nmck_m.nmckdocno,'anmt440') RETURNING l_success
               IF l_success = FALSE THEN 
                  LET g_nmck_m.nmckdocno = g_nmck_m_t.nmckdocno
                  NEXT FIELD nmckdocno
               END IF
            END IF
]]>
</point>
  <point name="input.a.nmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmcksite) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmck_m.nmcksite
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmck_m.nmcksite=g_nmck_m_t.nmcksite
                  NEXT FIELD CURRENT
               END IF
               CALL anmt440_nmcksite_desc()

            END IF 
            CALL anmt440_nmcksite_desc()]]>
</point>
  <point name="input.a.page1.nmcl001" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_nmck_m.nmck001 = 'AP' THEN 
                IF NOT cl_null(g_nmcl_d[l_ac].nmcl001) THEN 
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_nmcl_d[l_ac].nmcl001
                  LET g_chkparam.arg2 = g_glaald
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_apdadocno") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                     #請款單+項次是否已存在請款資料
                     LET l_n = 0
                     SELECT COUNT(*) INTO l_n
                       FROM nmck_t,nmcl_t
                      WHERE nmclent = g_enterprise
                        AND nmckent = nmclent
                        AND nmckcomp = nmclcomp
                        AND nmckdocno = nmcldocno
                        AND nmcl001 = g_nmcl_d[l_ac].nmcl001
                        AND nmcl002 = g_nmcl_d[l_ac].nmcl002
                        AND nmckstus <> 'X'
                        AND nmckdocno <> g_nmck_m.nmckdocno 
                        
                     IF l_n > 0 THEN 
                        CALL cl_err(g_nmcl_d[l_ac].nmcl001,'anm-00137',1)
                        LET g_nmcl_d[l_ac].nmcl001 = g_nmcl_d_t.nmcl001
                        NEXT FIELD CURRENT
                     END IF
                        
                     
                     LET l_n = 0
                     SELECT COUNT(*) INTO l_n
                       FROM apda_t
                       LEFT OUTER JOIN apce_t ON apdaent = apceent AND apdald = apceld AND apdadocno = apcedocno
                      WHERE apdaent = g_enterprise
                        AND apdadocno = g_nmcl_d[l_ac].nmcl001
                        AND apda001 = '40' 
                        AND apda005 = g_nmck_m.nmck005
                        AND apce006 = '20' 
                        AND apce100 = g_nmck_m.nmck100
                        AND apceorga = g_nmcl_d[l_ac].nmclorga
                        AND apce002 IN (select gzcb002 FROM gzcb_t where gzcb001 = '8506' AND gzcb004 = '2' )
                     
                     IF l_n = 0 THEN 
                        CALL cl_err(g_nmcl_d[l_ac].nmcl001,'anm-00131',1)
                        LET g_nmcl_d[l_ac].nmcl001 = g_nmcl_d_t.nmcl001
                        NEXT FIELD CURRENT
                     END IF
                        
                     IF NOT cl_null(g_nmcl_d[l_ac].nmcl001) AND NOT cl_null(g_nmcl_d[l_ac].nmcl002) THEN 
                        LET l_n = 0
                        SELECT COUNT(*) INTO l_n
                          FROM apda_t
                          LEFT OUTER JOIN apce_t ON apdaent = apceent AND apdald = apceld AND apdadocno = apcedocno
                         WHERE apdaent = g_enterprise
                           AND apdadocno = g_nmcl_d[l_ac].nmcl001
                           AND apda001 = '40' 
                           AND apda005 = g_nmck_m.nmck005
                           AND apce006 = '20' 
                           AND apce100 = g_nmck_m.nmck100
                           AND apceorga = g_nmcl_d[l_ac].nmclorga
                           AND apceseq = g_nmcl_d[l_ac].nmcl002
                           AND apce002 IN (select gzcb002 FROM gzcb_t where gzcb001 = '8506' AND gzcb004 = '2' )
                        IF l_n = 0 THEN 
                           CALL cl_err(g_nmcl_d[l_ac].nmcl001,'anm-00132',1)
                           LET g_nmcl_d[l_ac].nmcl001 = g_nmcl_d_t.nmcl001
                           LET g_nmcl_d[l_ac].nmcl002 = g_nmcl_d_t.nmcl002
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                     
                     CALL anmt440_amt_get()
                  ELSE
                     #檢查失敗時後續處理
                     LET g_nmcl_d[l_ac].nmcl001 = g_nmcl_d_t.nmcl001
                     NEXT FIELD CURRENT
                  END IF
               
               
               END IF 
            END IF]]>
</point>
  <point name="input.a.page1.nmcl002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_nmck_m.nmck001 = 'AP' THEN 
                IF NOT cl_null(g_nmcl_d[l_ac].nmcl002) THEN 
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_nmcl_d[l_ac].nmcl001
                  LET g_chkparam.arg2 = g_nmcl_d[l_ac].nmcl002
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_apceseq") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                     LET l_n = 0
                     SELECT COUNT(*) INTO l_n
                       FROM nmck_t,nmcl_t
                      WHERE nmclent = g_enterprise
                        AND nmckent = nmclent
                        AND nmckcomp = nmclcomp
                        AND nmckdocno = nmcldocno
                        AND nmcl001 = g_nmcl_d[l_ac].nmcl001
                        AND nmcl002 = g_nmcl_d[l_ac].nmcl002
                        AND nmckstus <> 'X'
                        AND nmckdocno <> g_nmck_m.nmckdocno
                        
                     IF l_n > 0 THEN 
                        CALL cl_err(g_nmcl_d[l_ac].nmcl001,'anm-00137',1)
                        LET g_nmcl_d[l_ac].nmcl002 = g_nmcl_d_t.nmcl002
                        NEXT FIELD CURRENT
                     END IF
                     
                     IF NOT cl_null(g_nmcl_d[l_ac].nmcl001) AND NOT cl_null(g_nmcl_d[l_ac].nmcl002) THEN 
                        LET l_n = 0
                        SELECT COUNT(*) INTO l_n
                          FROM apda_t
                          LEFT OUTER JOIN apce_t ON apdaent = apceent AND apdald = apceld AND apdadocno = apcedocno
                         WHERE apdaent = g_enterprise
                           AND apdadocno = g_nmcl_d[l_ac].nmcl001
                           AND apda001 = '40' 
                           AND apda005 = g_nmck_m.nmck005
                           AND apce006 = '20' 
                           AND apce100 = g_nmck_m.nmck100
                           AND apceorga = g_nmcl_d[l_ac].nmclorga
                           AND apceseq = g_nmcl_d[l_ac].nmcl002
                        IF l_n = 0 THEN 
                           CALL cl_err(g_nmcl_d[l_ac].nmcl001,'anm-00132',1)
                           LET g_nmcl_d[l_ac].nmcl002 = g_nmcl_d_t.nmcl002
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                     
                     CALL anmt440_amt_get()
                  ELSE
                     #檢查失敗時後續處理
                     LET g_nmcl_d[l_ac].nmcl002 = g_nmcl_d_t.nmcl002
                     NEXT FIELD CURRENT
                  END IF
               
               
               END IF 
            END IF]]>
</point>
  <point name="input.a.page1.nmcl003" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page1.nmclorga" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmcl_d[l_ac].nmclorga) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmcl_d[l_ac].nmclorga
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmcl_d[l_ac].nmclorga = g_nmcl_d_t.nmclorga
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.nmclorga_desc" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_nmcl_d[l_ac].nmclorga = g_nmcl_d[l_ac].nmclorga_desc

            IF NOT cl_null(g_nmcl_d[l_ac].nmclorga_desc) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_nmcl_d[l_ac].nmclorga
               DISPLAY g_nmcl_d[l_ac].nmclorga   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_nmcl_d[l_ac].nmclorga = g_nmcl_d_t.nmclorga
                  LET g_nmcl_d[l_ac].nmclorga_desc = g_nmcl_d_t.nmclorga_desc
                  CALL anmt440_ref_b()
                  NEXT FIELD CURRENT
               END IF

            END IF 
            CALL anmt440_ref_b()]]>
</point>
  <point name="input.a.page1.nmclseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_nmck_m.nmckcomp IS NOT NULL AND g_nmck_m.nmckdocno IS NOT NULL AND g_nmcl_d[g_detail_idx].nmclseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_nmck_m.nmckcomp != g_nmckcomp_t OR g_nmck_m.nmckdocno != g_nmckdocno_t OR g_nmcl_d[g_detail_idx].nmclseq != g_nmcl_d_t.nmclseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM nmcl_t WHERE "||"nmclent = '" ||g_enterprise|| "' AND "||"nmclcomp = '"||g_nmck_m.nmckcomp ||"' AND "|| "nmcldocno = '"||g_nmck_m.nmckdocno ||"' AND "|| "nmclseq = '"||g_nmcl_d[g_detail_idx].nmclseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET l_n = 0
   SELECT COUNT(*) INTO l_n 
     FROM nmcl_t
    WHERE nmclent = g_enterprise
      AND nmcldocno = g_nmck_m.nmckdocno
      AND nmclcomp = g_nmck_m.nmckcomp 
   IF l_n > 0 THEN    
      CALL s_transaction_begin()
      SELECT SUM(nmcl103) INTO l_nmcl103
        FROM nmcl_t
       WHERE nmclent = g_enterprise
         AND nmcldocno = g_nmck_m.nmckdocno
         AND nmclcomp = g_nmck_m.nmckcomp 
         
      UPDATE nmck_t SET nmck103 = l_nmcl103,
                        nmck113 = l_nmcl103 * g_nmck_m.nmck101
       WHERE nmckent = g_enterprise
         AND nmckdocno = g_nmck_m.nmckdocno
         AND nmckcomp = g_nmck_m.nmckcomp
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("nmck_t",SQLCA.sqlcode,1)  
         CALL s_transaction_end('N','0')
      ELSE
         CALL s_transaction_end('Y','0')
      END IF
   END IF]]>
</point>
  <point name="input.b.nmck024" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.b.nmck028" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.page1.nmclorga_desc" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_nmcl_d[l_ac].nmclorga_desc = g_nmcl_d[l_ac].nmclorga]]>
</point>
  <point name="input.b.page1.nmclseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_nmcl_d[g_detail_idx].nmclseq) THEN 
               SELECT MAX(nmclseq) INTO g_nmcl_d[g_detail_idx].nmclseq
                 FROM nmcl_t
                WHERE nmclent = g_enterprise
                  AND nmclcomp = g_nmck_m.nmckcomp
                  AND nmcldocno = g_nmck_m.nmckdocno
                  
               IF cl_null(g_nmcl_d[g_detail_idx].nmclseq) THEN 
                  LET g_nmcl_d[g_detail_idx].nmclseq = 1
               ELSE
                  LET g_nmcl_d[g_detail_idx].nmclseq = g_nmcl_d[g_detail_idx].nmclseq + 1
               END IF
            END IF]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_errshow = 1
#   LET g_detail_insert = cl_auth_detail_input("insert")
#   LET g_detail_delete = cl_auth_detail_input("delete")
   #抓取帳務資料 
   IF NOT cl_null(g_nmck_m.nmckcomp) THEN     
      CALL anmt440_glaa()
   END IF]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[            IF l_cmd = 'a' THEN 
               IF cl_null(g_nmcl_d[g_detail_idx].nmclseq) THEN 
                  SELECT MAX(nmclseq) INTO g_nmcl_d[g_detail_idx].nmclseq
                    FROM nmcl_t
                   WHERE nmclent = g_enterprise
                     AND nmclcomp = g_nmck_m.nmckcomp
                     AND nmcldocno = g_nmck_m.nmckdocno
                     
                  IF cl_null(g_nmcl_d[g_detail_idx].nmclseq) THEN 
                     LET g_nmcl_d[g_detail_idx].nmclseq = 1
                  ELSE
                     LET g_nmcl_d[g_detail_idx].nmclseq = g_nmcl_d[g_detail_idx].nmclseq + 1
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL anmt440_ref_b()]]>
</point>
  <point name="input.c.nmck003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_nmck_m.nmck003 = g_qryparam.return1              

            DISPLAY g_nmck_m.nmck003 TO nmck003              #

            NEXT FIELD nmck003                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck004             #給予default值
            LET g_qryparam.where = " nmaa002 IN (select ooef001 FROM ooef_t WHERE ooefent = '",g_enterprise,"'",
                                   "              AND ooef017 = '",g_nmck_m.nmckcomp,"')"
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_nmas_01()                                #呼叫開窗

            LET g_nmck_m.nmck004 = g_qryparam.return1              
            CALL anmt440_nmck004_desc()
            DISPLAY g_nmck_m.nmck004 TO nmck004              #

            NEXT FIELD nmck004                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck005             #給予default值
            LET g_qryparam.default2 = "" #g_nmck_m.pmaal004 #交易對象簡稱
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_10()                                #呼叫開窗

            LET g_nmck_m.nmck005 = g_qryparam.return1              
            #LET g_nmck_m.pmaal004 = g_qryparam.return2 
            CALL anmt440_nmck005_desc()
            DISPLAY g_nmck_m.nmck005 TO nmck005              #
            #DISPLAY g_nmck_m.pmaal004 TO pmaal004 #交易對象簡稱
            NEXT FIELD nmck005                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_glaa005

            
            CALL q_nmad002()                                #呼叫開窗

            LET g_nmck_m.nmck009 = g_qryparam.return1              
            CALL anmt440_nmck009_desc()
            DISPLAY g_nmck_m.nmck009 TO nmck009              #

            NEXT FIELD nmck009                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_nmai002()                                #呼叫開窗

            LET g_nmck_m.nmck010 = g_qryparam.return1              
            CALL anmt440_nmck010_desc()
            DISPLAY g_nmck_m.nmck010 TO nmck010              #

            NEXT FIELD nmck010                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck013             #給予default值
            IF g_nmck_m.nmck002 = '1' THEN 
               LET g_qryparam.where = " nmab008 = '",g_ooef006,"'"
            END IF
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_nmab001()                                #呼叫開窗

            LET g_nmck_m.nmck013 = g_qryparam.return1              
            CALL anmt440_ref_show()
            DISPLAY g_nmck_m.nmck013 TO nmck013              #

            NEXT FIELD nmck013                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck024" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck024             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_nmck_m.nmck004 #
            LET g_qryparam.arg2 = g_nmck_m.nmck002 #
            
            CALL q_nmaf004()                                #呼叫開窗

            LET g_nmck_m.nmck024 = g_qryparam.return1              

            DISPLAY g_nmck_m.nmck024 TO nmck024              #

            NEXT FIELD nmck024                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck032" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck032             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_nmab001()                                #呼叫開窗

            LET g_nmck_m.nmck032 = g_qryparam.return1              

            DISPLAY g_nmck_m.nmck032 TO nmck032              #

            NEXT FIELD nmck032                          #返回原欄位

]]>
</point>
  <point name="input.c.nmck100" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmck100             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_aooi001_1()                                #呼叫開窗

            LET g_nmck_m.nmck100 = g_qryparam.return1              

            DISPLAY g_nmck_m.nmck100 TO nmck100              #

            NEXT FIELD nmck100                          #返回原欄位

]]>
</point>
  <point name="input.c.nmckcomp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmckcomp             #給予default值
            LET g_qryparam.default2 = "" #g_nmck_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_nmck_m.nmckcomp = g_qryparam.return1              
            #LET g_nmck_m.ooefl003 = g_qryparam.return2 
            CALL anmt440_nmckcomp_desc()
            DISPLAY g_nmck_m.nmckcomp TO nmckcomp              #
            #DISPLAY g_nmck_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD nmckcomp                          #返回原欄位

]]>
</point>
  <point name="input.c.nmckdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmckdocno             #給予default值
            LET l_ooef004 = ''
            SELECT ooef004
              INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_nmck_m.nmckcomp 
            LET g_qryparam.where = " ooba001 = '",l_ooef004,"' AND oobx003 = 'anmt440'" 
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooba002()                                #呼叫開窗

            LET g_nmck_m.nmckdocno = g_qryparam.return1              

            DISPLAY g_nmck_m.nmckdocno TO nmckdocno              #

            NEXT FIELD nmckdocno                          #返回原欄位

]]>
</point>
  <point name="input.c.nmcksite" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmck_m.nmcksite             #給予default值
            LET g_qryparam.default2 = "" #g_nmck_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_nmck_m.nmcksite = g_qryparam.return1              
            #LET g_nmck_m.ooefl003 = g_qryparam.return2 
            CALL anmt440_nmcksite_desc()
            DISPLAY g_nmck_m.nmcksite TO nmcksite              #
            #DISPLAY g_nmck_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD nmcksite                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.nmcl001" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmcl_d[l_ac].nmcl001             #給予default值
            
            IF g_nmck_m.nmck001 = 'AP' THEN 
              LET g_qryparam.where = "     apda001 = '40' AND apda005 = '",g_nmck_m.nmck005,"'",
                                      " AND apce006 = '20' AND apceorga = '",g_nmcl_d[l_ac].nmclorga,"'",
                                      " AND apce100 = '",g_nmck_m.nmck100,"'",
                                      " AND apdald = '",g_glaald,"'",
                                      " AND (apdastus = 'Y' OR apdastus = 'V')",
                                      " AND apce002 IN (select gzcb002 FROM gzcb_t where gzcb001 = '8506' AND gzcb004 = '2' )",
                                      " AND apcedocno||apceseq NOT IN (",
                                      " SELECT nmcl001||nmcl002 FROM nmck_t,nmcl_t ",
                                      "  WHERE nmclent = '",g_enterprise,"'",
                                      "    AND nmckent = nmclent ",
                                      "    AND nmckcomp = nmclcomp ",
                                      "    AND nmckdocno = nmcldocno ",
                                      "    AND nmckstus <> 'X' )"
                                      
               CALL q_apceseq()                                #呼叫開窗
            END IF

            LET g_nmcl_d[l_ac].nmcl001 = g_qryparam.return1              

            DISPLAY g_nmcl_d[l_ac].nmcl001 TO nmcl001              #

            NEXT FIELD nmcl001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.nmcl002" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_nmcl_d[l_ac].nmcl002             #給予default值
#            IF g_nmck_m.nmck001 = 'AP' THEN
#               LET g_qryparam.where = "     apcedocno = '",g_nmcl_d[l_ac].nmcl001,"'",
#                                      " AND apda001 = '40' AND apda005 = '",g_nmck_m.nmck005,"'",
#                                      " AND apce006 = '20' AND apceorga = '",g_nmcl_d[l_ac].nmclorga,"'",
#                                      " AND apdald = '",g_glaald,"'",
#                                      " AND apceseq NOT IN (",
#                                      " SELECT nmcl002 FROM nmck_t,nmcl_t ",
#                                      "  WHERE nmclent = '",g_enterprise,"'",
#                                      "    AND nmckent = nmclent ",
#                                      "    AND nmckcomp = nmclcomp ",
#                                      "    AND nmckdocno = nmcldocno ",
#                                      "    AND nmckstus <> 'X' )"
#               
#               CALL q_apceseq()                                #呼叫開窗
#            END IF
#
#            LET g_nmcl_d[l_ac].nmcl002 = g_qryparam.return1              
#
#            DISPLAY g_nmcl_d[l_ac].nmcl002 TO nmcl002              #
#
#            NEXT FIELD nmcl002                          #返回原欄位
#
]]>
</point>
  <point name="input.c.page1.nmcl003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmcl_d[l_ac].nmcl003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL aglt310_04()                                #呼叫開窗

            LET g_nmcl_d[l_ac].nmcl003 = g_qryparam.return1              

            DISPLAY g_nmcl_d[l_ac].nmcl003 TO nmcl003              #

            NEXT FIELD nmcl003                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.nmclorga" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmcl_d[l_ac].nmclorga             #給予default值
            LET g_qryparam.default2 = "" #g_nmcl_d[l_ac].ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_nmcl_d[l_ac].nmclorga = g_qryparam.return1              
            #LET g_nmcl_d[l_ac].ooefl003 = g_qryparam.return2 
            DISPLAY g_nmcl_d[l_ac].nmclorga TO nmclorga              #
            #DISPLAY g_nmcl_d[l_ac].ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD nmclorga                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.nmclorga_desc" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmcl_d[l_ac].nmclorga            #給予default值
            LET g_qryparam.default2 = "" #g_nmcl_d[l_ac].ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_nmcl_d[l_ac].nmclorga = g_qryparam.return1              
            #LET g_nmcl_d[l_ac].ooefl003 = g_qryparam.return2 
            CALL anmt440_ref_b()
            DISPLAY g_nmcl_d[l_ac].nmclorga_desc TO nmclorga_desc              #
            #DISPLAY g_nmcl_d[l_ac].ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD nmclorga_desc                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_ooef004              LIKE ooef_t.ooef004
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_pmaa027              LIKE pmaa_t.pmaa027
   DEFINE l_pmaa004              LIKE pmaa_t.pmaa004
   DEFINE l_nmcl103              LIKE nmcl_t.nmcl103
   DEFINE l_nmaf006              LIKE nmaf_t.nmaf006
   DEFINE l_nmaf007              LIKE nmaf_t.nmaf007
   DEFINE l_nmaf010              LIKE nmaf_t.nmaf010
   DEFINE l_nmaf011              LIKE nmaf_t.nmaf011
#   DEFINE  l_cmd_t               LIKE type_t.chr1
   
   LET l_cmd_t = p_cmd]]>
</point>
  <point name="input.g.nmck002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.nmck025" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_nmck_m.nmck026) THEN
               IF NOT cl_null(g_nmck_m.nmck025) THEN
                  LET g_nmck_m.nmck026='1'
               ELSE
                  LET g_nmck_m.nmck026='0'
               END IF
               DISPLAY BY NAME g_nmck_m.nmck026
            END IF]]>
</point>
  <point name="input.g.nmck028" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck028) AND g_nmck_m.nmck028<>0 THEN 
               CALL cl_set_comp_required('nmck032',TRUE)
            END IF]]>
</point>
  <point name="input.g.nmck029" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck029) THEN 
               CALL cl_set_comp_required('nmck032',TRUE)
            END IF]]>
</point>
  <point name="input.g.nmck030" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_nmck_m.nmck030) THEN
               CALL cl_set_comp_required('nmck031,nmck032',TRUE)
               IF NOT cl_null(g_nmck_m.nmck031) THEN
                  IF g_nmck_m.nmck031<=0 THEN
                     CALL cl_err('','anm-00149',0)
                     NEXT FIELD nmck031
                  END IF                  
               END IF 
            ELSE
               CALL cl_set_comp_required('nmck031',FALSE)
            END IF]]>
</point>
  <point name="input.g.nmck031" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  CALL s_transaction_end('Y','0')
                  
                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                     CALL anmt440_detail_reproduce()
                  END IF]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF (cl_null(g_nmck_m.nmck028) OR g_nmck_m.nmck028=0) AND 
               (cl_null(g_nmck_m.nmck029) OR g_nmck_m.nmck029=0) AND 
               cl_null(g_nmck_m.nmck030) THEN
               CALL cl_set_comp_required("nmck032",FALSE)
            ELSE
               CALL cl_set_comp_required("nmck032",TRUE)
            END IF
            CALL anmt440_nmck024_chk(g_nmck_m.nmck024)
            IF NOT cl_null(g_errno) THEN
               CALL cl_err('',g_errno,0)
               NEXT FIELD nmck024
            END IF
            SELECT nmaf006,nmaf007 INTO l_nmaf006,l_nmaf007 FROM nmaf_t
             WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004 
               AND nmaf002=g_nmck_m.nmck002 AND nmaf004=g_nmck_m.nmck024 
               AND nmaf010<nmaf007 AND nmaf012='Y'
            IF g_nmck_m.nmck025<l_nmaf006 OR g_nmck_m.nmck025>l_nmaf007 THEN
               CALL cl_err('','anm-00153',0)
               NEXT FIELD nmck025
            END IF]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#               IF g_nmck_m.nmck002 = '2' AND cl_null(g_nmck_m.nmck017) AND cl_null(g_nmck_m.nmck018) THEN
#               IF g_nmck_m.nmck002 = '2' AND cl_null(g_nmck_m.nmck017) THEN 
#                  CALL cl_err('','anm-00135',1)
#                  NEXT FIELD nmck017
#               END IF
               
                  CALL s_aooi200_gen_docno(g_nmck_m.nmckcomp,g_nmck_m.nmckdocno,g_nmck_m.nmckdocdt,g_prog)
                  RETURNING l_success,g_nmck_m.nmckdocno
                  IF l_success  = 0  THEN
                     CALL cl_err(g_nmck_m.nmckdocno,'apm-00003',1)
                     NEXT FIELD nmckdocno
                  END IF 
                  
                  LET g_nmck_m.nmck114 =  g_nmck_m.nmck113
                  LET g_nmck_m.nmck124 =  g_nmck_m.nmck123
                  LET g_nmck_m.nmck134 =  g_nmck_m.nmck133   ]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#               IF g_nmck_m.nmck002 = '2' AND cl_null(g_nmck_m.nmck017) AND cl_null(g_nmck_m.nmck018) THEN
#               IF g_nmck_m.nmck002 = '2' AND cl_null(g_nmck_m.nmck017)  THEN 
#                  CALL cl_err('','anm-00135',1)
#                  NEXT FIELD nmck017
#               END IF]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF (cl_null(g_nmck_m.nmck028) OR g_nmck_m.nmck028=0) AND 
               (cl_null(g_nmck_m.nmck029) OR g_nmck_m.nmck029=0) AND 
               cl_null(g_nmck_m.nmck030) THEN
               CALL cl_set_comp_required("nmck032",FALSE)
            ELSE
               CALL cl_set_comp_required("nmck032",TRUE)
            END IF
            IF NOT cl_null(g_nmck_m.nmck002) AND NOT cl_null(g_nmck_m.nmck004) AND cl_null(g_nmck_m.nmck024) THEN
               SELECT nmaf004,nmaf010,nmaf011 INTO g_nmck_m.nmck024,l_nmaf010,l_nmaf011 
               FROM nmaf_t
               WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004
                 AND nmaf002=g_nmck_m.nmck002 AND nmaf010<nmaf007
                 AND nmaf012='Y'
               ORDER BY nmaf004
               LET g_nmck_m.nmck025=l_nmaf010
               DISPLAY BY NAME g_nmck_m.nmck024,g_nmck_m.nmck025
               IF l_nmaf011='Y' THEN #套印否
                  CALL cl_set_comp_required("nmck025",FALSE)
               ELSE
                  CALL cl_set_comp_required("nmck025",TRUE)
               END IF
               IF cl_null(g_nmck_m.nmck026) THEN
                  IF NOT cl_null(g_nmck_m.nmck025) THEN
                     LET g_nmck_m.nmck026='1'
                  ELSE
                     LET g_nmck_m.nmck026='0'
                  END IF
                  DISPLAY BY NAME g_nmck_m.nmck026
               END IF
            END IF]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#      SUBDIALOG anm_anmt440_01.anmt440_01_input
#      
#      BEFORE DIALOG 
#         
#         #新增時強制從單頭開始填
#         IF p_cmd = 'a' THEN
#            NEXT FIELD nmckcomp
#         ELSE
#            CASE g_aw
#               WHEN "s_detail1_anmt440_01"
#                  NEXT FIELD nmclorga_desc
#            END CASE
#         END IF]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL anmt440_nmck026_scc('2')]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_nmck_m_t.* = g_nmck_m.*
      #判斷g_SITE是否為"法人", 若為法人者可直接作為預設值，非法人者，依g_user判別。
      #為登入人員g_user之所屬營運據點 歸屬法人
      SELECT ooef003 INTO l_ooef003
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_site
      IF l_ooef003 = 'Y' THEN 
         LET g_nmck_m.nmckcomp = g_site
      ELSE
         SELECT ooag004 INTO l_ooag004
           FROM ooag_t
          WHERE ooagent = g_enterprise
            AND ooag001 = g_user
         SELECT ooef017 INTO g_nmck_m.nmckcomp
           FROM ooef_t
          WHERE ooefent = g_enterprise
            AND ooef001 = l_ooag004
      END IF
      LET g_nmck_m.nmck003 = g_user
      LET g_nmck_m.nmckdocdt = g_today
      CALL anmt440_nmckcomp_desc()
      CALL anmt440_nmck026_scc('1')
#      LET g_nmckcomp_o = NULL
#      LET g_nmckdocno_o = NULL]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_ooef003      LIKE ooef_t.ooef003
   DEFINE l_ooag004      LIKE ooag_t.ooag004]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="menu2.extension" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL anmt440_extension()]]>
</point>
  <point name="menu2.modify" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu2.modify_detail" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               LET g_aw = g_curr_diag.getCurrentItem()
               CALL anmt440_modify()]]>
</point>
  <point name="menu2.open_anmt470" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL anmt440_open_anmt470()]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF NOT INT_FLAG THEN
         #若單頭key欄位有變更
         IF g_nmck_m.nmckcomp != g_nmckcomp_t 
         OR g_nmck_m.nmckdocno != g_nmckdocno_t 
         
         THEN
            CALL s_transaction_begin()
            #更新單身key值
            UPDATE nmcl_t SET nmclcomp = g_nmck_m.nmckcomp,
                              nmcldocno = g_nmck_m.nmckdocno
         
             WHERE nmclent = g_enterprise AND nmclcomp = g_nmckcomp_t
               AND nmcldocno = g_nmckdocno_t
            CASE
               WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                  CALL cl_err("nmcl_t","std-00009",1)
                  CALL s_transaction_end('N','0')
                  CONTINUE WHILE
               WHEN SQLCA.sqlcode #其他錯誤
                  CALL cl_err("nmcl_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE WHILE
            END CASE
         END IF
      END IF]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[      #當票況=0時才可異動
      IF g_nmck_m.nmck026 <> '0' THEN
         CALL cl_err('','anm-00162',0)
         EXIT WHILE
      END IF
#      LET g_nmckcomp_o = g_nmckcomp_t
#      LET g_nmckdocno_o = g_nmckdocno_t]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL anmt440_nmck026_scc('2')]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#   LET g_nmckcomp_o = g_nmckcomp_t
#   LET g_nmckdocno_o = g_nmckdocno_t
   IF NOT cl_null(g_nmck_m.nmck025) THEN
      LET g_nmck_m.nmck026='1'
   ELSE
      LET g_nmck_m.nmck026='0'
   END IF
   DISPLAY BY NAME g_nmck_m.nmck026
   CALL anmt440_nmck026_scc('1')]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#   CALL anmt440_01_b_fill()]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_nmck_m.nmckstus <> 'N' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)   
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)  
   END IF]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[      CALL anmt440_ref_b()]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[   #現金變動碼說明
   CALL anmt440_nmck010_desc()]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_success = 'Y'
   IF lc_state = 'Y' THEN 
      LET l_today  = cl_get_current() 
      UPDATE nmck_t SET nmckcnfid = g_user,
                        nmckcnfdt = l_today
       WHERE nmckent = g_enterprise 
         AND nmckcomp =  g_nmck_m.nmckcomp
         AND nmckdocno = g_nmck_m.nmckdocno
         
      IF g_success = 'Y' THEN
         CALL s_transaction_end('Y','1')
      END IF
      IF g_success = 'N' THEN
         CALL s_transaction_end('N','1')
      END IF
   ELSE
      UPDATE nmck_t SET nmckcnfid = '',
                        nmckcnfdt = ''
       WHERE nmckent = g_enterprise 
         AND nmckcomp =  g_nmck_m.nmckcomp
         AND nmckdocno = g_nmck_m.nmckdocno

      IF g_success = 'Y' THEN
         CALL s_transaction_end('Y','1')
      END IF
      IF g_success = 'N' THEN
         CALL s_transaction_end('N','1')
      END IF
   END IF]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_showmsg_init()]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_nmcl113     LIKE nmcl_t.nmcl113
   DEFINE l_nmcl001     LIKE nmcl_t.nmcl001
   DEFINE l_nmcl002     LIKE nmcl_t.nmcl002
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_n           LIKE type_t.num5
   DEFINE l_today       DATETIME YEAR TO SECOND
   DEFINE l_nmaf007     LIKE nmaf_t.nmaf007
   DEFINE l_nmaf010     LIKE nmaf_t.nmaf010
   DEFINE l_nmaf009     LIKE nmaf_t.nmaf009
   DEFINE l_nmck025     LIKE type_t.chr20
   DEFINE l_str,l_str1  STRING
   DEFINE l_sql         STRING]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         IF g_nmck_m.nmckstus = 'X' THEN 
            LET l_success = TRUE
            LET g_sql = "SELECT nmcl001,nmcl002 FROM nmcl_t",
                        " WHERE nmclent = '",g_enterprise,"'",
                        "   AND nmclcomp = '",g_nmck_m.nmckcomp,"'",
                        "   AND nmcldocno = '",g_nmck_m.nmckdocno,"'" 
            PREPARE nmcl_pre FROM g_sql
            DECLARE nmcl_cur CURSOR FOR nmcl_pre  
            FOREACH nmcl_cur INTO l_nmcl001,l_nmcl002
               LET l_n = 0
               SELECT COUNT(*) INTO l_n
                 FROM nmck_t,nmcl_t
                WHERE nmclent = g_enterprise
                  AND nmckent = nmclent
                  AND nmckcomp = nmclcomp
                  AND nmckdocno = nmcldocno
                  AND nmcl001 = l_nmcl001
                  AND nmcl002 = l_nmcl002
                  AND nmckstus <> 'X'
                  AND nmckdocno <> g_nmck_m.nmckdocno
               IF l_n > 0 THEN    
                  CALL cl_errmsg('',l_nmcl001,'','anm-00137',1)
                  LET l_success = FALSE
               END IF
            END FOREACH 
            IF l_success = FALSE THEN 
               CALL cl_err_showmsg()
               RETURN
            END IF
         END IF
         #回寫nmaf_t支票下次列印號碼
         IF NOT cl_null(g_nmck_m.nmck025) THEN
            SELECT nmaf007,nmaf009,nmaf010 INTO l_nmaf007,l_nmaf009,l_nmaf010 FROM nmaf_t
            WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004 
              AND nmaf002=g_nmck_m.nmck002 AND nmaf004=g_nmck_m.nmck024
            LET l_str=l_nmaf010
            LET l_n=l_str.getLength()
            LET l_str1=l_str.subString(l_nmaf009+1,l_n)
            LET l_str=l_str.subString(1,l_nmaf009)
            
            LET l_sql="SELECT lpad((lpad(('",l_str1,"' - 1) ,",l_nmaf009,",'0')),",l_n,",'",l_str,"') FROM dual"
            PREPARE sel_nmck025_pr1 FROM l_sql
            EXECUTE sel_nmck025_pr1 INTO l_nmck025
            
            IF g_nmck_m.nmck025=l_nmck025 THEN
               UPDATE nmaf_t SET nmaf010=l_nmck025
                WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004 
                  AND nmaf002=g_nmck_m.nmck002 AND nmaf004=g_nmck_m.nmck024
               IF SQLCA.sqlcode THEN
                  CALL cl_err("",SQLCA.sqlcode,0)
               END IF
            END IF
         END IF        ]]>
</point>
  <point name="statechange.valid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         IF g_nmck_m.nmckstus = 'X' THEN 
            CALL cl_err(g_nmck_m.nmckstus,'anm-00133',1)
            RETURN 
         END IF
         
         SELECT SUM(nmcl113) INTO l_nmcl113
           FROM nmcl_t
          WHERE nmclent = g_enterprise
            AND nmcldocno = g_nmck_m.nmckdocno
            AND nmclcomp = g_nmck_m.nmckcomp 
         IF cl_null(l_nmcl113) THEN 
            LET l_nmcl113 = 0
         END IF
            
         UPDATE nmck_t SET nmck114 = g_nmck_m.nmck113 - l_nmcl113
          WHERE nmckent = g_enterprise
            AND nmckdocno = g_nmck_m.nmckdocno
            AND nmckcomp = g_nmck_m.nmckcomp  
         #回寫nmaf_t支票下次列印號碼
         IF NOT cl_null(g_nmck_m.nmck025) THEN
            SELECT nmaf007,nmaf009,nmaf010 INTO l_nmaf007,l_nmaf009,l_nmaf010 FROM nmaf_t
            WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004 
              AND nmaf002=g_nmck_m.nmck002 AND nmaf004=g_nmck_m.nmck024
            LET l_str=g_nmck_m.nmck025
            LET l_n=l_str.getLength()
            LET l_str1=l_str.subString(l_nmaf009+1,l_n)
            LET l_str=l_str.subString(1,l_nmaf009)
            
            LET l_sql="SELECT lpad((lpad(('",l_str1,"' + 1) ,",l_nmaf009,",'0')),",l_n,",'",l_str,"') FROM dual"
            PREPARE sel_nmck025_pr FROM l_sql
            EXECUTE sel_nmck025_pr INTO l_nmck025
            
            IF l_nmck025>l_nmaf010 AND l_nmck025<l_nmaf007 THEN
               UPDATE nmaf_t SET nmaf010=l_nmck025
                WHERE nmafent=g_enterprise AND nmaf001=g_nmck_m.nmck004 
                  AND nmaf002=g_nmck_m.nmck002 AND nmaf004=g_nmck_m.nmck024
               IF SQLCA.sqlcode THEN
                  CALL cl_err("",SQLCA.sqlcode,0)
               END IF
            END IF
         END IF            ]]>
</point>
  <point name="statechange.void" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         IF g_nmck_m.nmckstus = 'Y' THEN 
            CALL cl_err(g_nmck_m.nmckstus,'anm-00134',1)
            RETURN 
         END IF]]>
</point>
  <point name="ui_dialog.after_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[#            SUBDIALOG anm_anmt440_01.anmt440_01_display
#            SUBDIALOG lib_cl_dlg.cl_dlg_qryplan]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.open_anmt470" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[               CALL anmt440_open_anmt470()]]>
</point>
  <point name="menu.extension" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[               CALL anmt440_extension()]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_browser_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmas003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmas003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck032" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck032" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmckcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmckcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck034" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck034" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck034" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck035" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck035" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck035" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck101" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck101" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck101" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck010_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck114" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck114" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck114" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck124" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck124" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck124" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck134" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck134" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck134" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.nmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.nmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.nmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmclorga" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmclorga" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmclorga_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmclorga_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmcl003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmcl103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmcl113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmcl121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmcl123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmcl131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.nmcl133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.nmcl133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.nmcl133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmcksite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmckcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmckcomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmckdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmas003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmas003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmas003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck032" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck032" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck034" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck034" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck034" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck035" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck035" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck035" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck024" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck101" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck101" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck114" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck114" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck114" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck124" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck124" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck124" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck134" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck134" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck134" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.nmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.nmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.nmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmckdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmas003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck019" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmckstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck028" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck029" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck034" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck035" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck027" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck101" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck025" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck026" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck036" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck114" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck124" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck134" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.nmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmclorga" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmclorga" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmclorga_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.nmcl103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.nmcl113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.nmcl121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.nmcl123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.nmcl131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.nmcl133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.nmcl133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.nmcl133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmclseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmcl103" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmcl113" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmcl121" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmcl123" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmcl131" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.nmcl133" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.after_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="anmt440.b_fill" ver="4" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION anmt440_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_nmcl_d.clear()    #g_nmcl_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF anmt440_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE nmclseq,nmclorga,nmcl001,nmcl002,nmcl003,nmcl103,nmcl113,nmcl121,nmcl123, 
          nmcl131,nmcl133  FROM nmcl_t",   
                  " INNER JOIN nmck_t ON nmckcomp = nmclcomp ",
                  " AND nmckdocno = nmcldocno ",
 
                  #"",
                  
                  "",
                  
                  " WHERE nmclent=? AND nmclcomp=? AND nmcldocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY nmcl_t.nmclseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE anmt440_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR anmt440_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_nmck_m.nmckcomp,g_nmck_m.nmckdocno
                                               
      FOREACH b_fill_cs INTO g_nmcl_d[l_ac].nmclseq,g_nmcl_d[l_ac].nmclorga,g_nmcl_d[l_ac].nmcl001,g_nmcl_d[l_ac].nmcl002, 
          g_nmcl_d[l_ac].nmcl003,g_nmcl_d[l_ac].nmcl103,g_nmcl_d[l_ac].nmcl113,g_nmcl_d[l_ac].nmcl121, 
          g_nmcl_d[l_ac].nmcl123,g_nmcl_d[l_ac].nmcl131,g_nmcl_d[l_ac].nmcl133
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_nmcl_d.deleteElement(g_nmcl_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE anmt440_pb
 
   
END FUNCTION
]]>
</section>
  <section id="anmt440.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION anmt440_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL anmt440_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="anmt440.browser_fill" ver="7" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION anmt440_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_nmck_m.* TO NULL
   CALL g_nmcl_d.clear()        
 
   CALL g_browser.clear()
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "nmckcomp,nmckdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE nmckcomp,nmckdocno ",
                      " FROM nmck_t ",
                      " ",
                      " LEFT JOIN nmcl_t ON nmclent = nmckent AND nmckcomp = nmclcomp AND nmckdocno = nmcldocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE nmckent = '" ||g_enterprise|| "' AND nmclent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("nmck_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE nmckcomp,nmckdocno ",
                      " FROM nmck_t ", 
                      "  ",
                      "  ",
                      " WHERE nmckent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("nmck_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照nmckcomp,nmckdocno Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT nmckstus,nmckcomp,nmckdocno ",
               " FROM nmck_t ",
               "  ",
               "  LEFT JOIN nmcl_t ON nmclent = nmckent AND nmckcomp = nmclcomp AND nmckdocno = nmcldocno ",
 
 
               "  ",
               "  ",
               
               " WHERE nmckent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("nmck_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_nmckcomp,g_browser[g_cnt].b_nmckdocno 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="anmt440.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION anmt440_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY nmckcomp,nmckdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL anmt440_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="anmt440.construct" ver="35" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION anmt440_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_nmck_m.* TO NULL
   CALL g_nmcl_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON nmcksite,nmckcomp,nmck003,nmckdocno,nmck002,nmckdocdt,nmck004,nmas003, 
          nmck019,nmckstus,nmck028,nmck029,nmck030,nmck031,nmck032,nmckownid,nmckowndp,nmckcrtid,nmckcrtdp, 
          nmckcrtdt,nmckmodid,nmckmoddt,nmckcnfid,nmckcnfdt,nmck001,nmck011,nmck034,nmck100,nmck009, 
          nmck035,nmck103,nmck024,nmck027,nmck101,nmck025,nmck113,nmck026,nmck036,nmck121,nmck010,nmck010_desc, 
          nmck123,nmck114,nmck131,nmck124,nmck133,nmck134,nmck005,nmck015,nmck006
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<nmckcrtdt>>----
         AFTER FIELD nmckcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmckmoddt>>----
         AFTER FIELD nmckmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmckcnfdt>>----
         AFTER FIELD nmckcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmckpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.nmcksite
         ON ACTION controlp INFIELD nmcksite
            #add-point:ON ACTION controlp INFIELD nmcksite
            {<point name="construct.c.nmcksite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcksite
            #add-point:BEFORE FIELD nmcksite
            {<point name="construct.b.nmcksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcksite
            
            #add-point:AFTER FIELD nmcksite
            {<point name="construct.a.nmcksite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckcomp
         ON ACTION controlp INFIELD nmckcomp
            #add-point:ON ACTION controlp INFIELD nmckcomp
            {<point name="construct.c.nmckcomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckcomp
            #add-point:BEFORE FIELD nmckcomp
            {<point name="construct.b.nmckcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckcomp
            
            #add-point:AFTER FIELD nmckcomp
            {<point name="construct.a.nmckcomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck003
         ON ACTION controlp INFIELD nmck003
            #add-point:ON ACTION controlp INFIELD nmck003
            {<point name="construct.c.nmck003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck003
            #add-point:BEFORE FIELD nmck003
            {<point name="construct.b.nmck003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck003
            
            #add-point:AFTER FIELD nmck003
            {<point name="construct.a.nmck003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckdocno
         ON ACTION controlp INFIELD nmckdocno
            #add-point:ON ACTION controlp INFIELD nmckdocno
            {<point name="construct.c.nmckdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckdocno
            #add-point:BEFORE FIELD nmckdocno
            {<point name="construct.b.nmckdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckdocno
            
            #add-point:AFTER FIELD nmckdocno
            {<point name="construct.a.nmckdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck002
            #add-point:BEFORE FIELD nmck002
            {<point name="construct.b.nmck002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck002
            
            #add-point:AFTER FIELD nmck002
            {<point name="construct.a.nmck002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck002
         ON ACTION controlp INFIELD nmck002
            #add-point:ON ACTION controlp INFIELD nmck002
            {<point name="construct.c.nmck002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckdocdt
            #add-point:BEFORE FIELD nmckdocdt
            {<point name="construct.b.nmckdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckdocdt
            
            #add-point:AFTER FIELD nmckdocdt
            {<point name="construct.a.nmckdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckdocdt
         ON ACTION controlp INFIELD nmckdocdt
            #add-point:ON ACTION controlp INFIELD nmckdocdt
            {<point name="construct.c.nmckdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.nmck004
         ON ACTION controlp INFIELD nmck004
            #add-point:ON ACTION controlp INFIELD nmck004
            {<point name="construct.c.nmck004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck004
            #add-point:BEFORE FIELD nmck004
            {<point name="construct.b.nmck004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck004
            
            #add-point:AFTER FIELD nmck004
            {<point name="construct.a.nmck004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmas003
         ON ACTION controlp INFIELD nmas003
            #add-point:ON ACTION controlp INFIELD nmas003
            {<point name="construct.c.nmas003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmas003
            #add-point:BEFORE FIELD nmas003
            {<point name="construct.b.nmas003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmas003
            
            #add-point:AFTER FIELD nmas003
            {<point name="construct.a.nmas003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck019
         ON ACTION controlp INFIELD nmck019
            #add-point:ON ACTION controlp INFIELD nmck019
            {<point name="construct.c.nmck019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck019
            #add-point:BEFORE FIELD nmck019
            {<point name="construct.b.nmck019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck019
            
            #add-point:AFTER FIELD nmck019
            {<point name="construct.a.nmck019" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckstus
            #add-point:BEFORE FIELD nmckstus
            {<point name="construct.b.nmckstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckstus
            
            #add-point:AFTER FIELD nmckstus
            {<point name="construct.a.nmckstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckstus
         ON ACTION controlp INFIELD nmckstus
            #add-point:ON ACTION controlp INFIELD nmckstus
            {<point name="construct.c.nmckstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck028
            #add-point:BEFORE FIELD nmck028
            {<point name="construct.b.nmck028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck028
            
            #add-point:AFTER FIELD nmck028
            {<point name="construct.a.nmck028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck028
         ON ACTION controlp INFIELD nmck028
            #add-point:ON ACTION controlp INFIELD nmck028
            {<point name="construct.c.nmck028" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck029
            #add-point:BEFORE FIELD nmck029
            {<point name="construct.b.nmck029" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck029
            
            #add-point:AFTER FIELD nmck029
            {<point name="construct.a.nmck029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck029
         ON ACTION controlp INFIELD nmck029
            #add-point:ON ACTION controlp INFIELD nmck029
            {<point name="construct.c.nmck029" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck030
            #add-point:BEFORE FIELD nmck030
            {<point name="construct.b.nmck030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck030
            
            #add-point:AFTER FIELD nmck030
            {<point name="construct.a.nmck030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck030
         ON ACTION controlp INFIELD nmck030
            #add-point:ON ACTION controlp INFIELD nmck030
            {<point name="construct.c.nmck030" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck031
            #add-point:BEFORE FIELD nmck031
            {<point name="construct.b.nmck031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck031
            
            #add-point:AFTER FIELD nmck031
            {<point name="construct.a.nmck031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck031
         ON ACTION controlp INFIELD nmck031
            #add-point:ON ACTION controlp INFIELD nmck031
            {<point name="construct.c.nmck031" />}
            #END add-point
 
         #Ctrlp:construct.c.nmck032
         ON ACTION controlp INFIELD nmck032
            #add-point:ON ACTION controlp INFIELD nmck032
            {<point name="construct.c.nmck032" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck032
            #add-point:BEFORE FIELD nmck032
            {<point name="construct.b.nmck032" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck032
            
            #add-point:AFTER FIELD nmck032
            {<point name="construct.a.nmck032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckownid
         ON ACTION controlp INFIELD nmckownid
            #add-point:ON ACTION controlp INFIELD nmckownid
            {<point name="construct.c.nmckownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckownid
            #add-point:BEFORE FIELD nmckownid
            {<point name="construct.b.nmckownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckownid
            
            #add-point:AFTER FIELD nmckownid
            {<point name="construct.a.nmckownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckowndp
         ON ACTION controlp INFIELD nmckowndp
            #add-point:ON ACTION controlp INFIELD nmckowndp
            {<point name="construct.c.nmckowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckowndp
            #add-point:BEFORE FIELD nmckowndp
            {<point name="construct.b.nmckowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckowndp
            
            #add-point:AFTER FIELD nmckowndp
            {<point name="construct.a.nmckowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckcrtid
         ON ACTION controlp INFIELD nmckcrtid
            #add-point:ON ACTION controlp INFIELD nmckcrtid
            {<point name="construct.c.nmckcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckcrtid
            #add-point:BEFORE FIELD nmckcrtid
            {<point name="construct.b.nmckcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckcrtid
            
            #add-point:AFTER FIELD nmckcrtid
            {<point name="construct.a.nmckcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmckcrtdp
         ON ACTION controlp INFIELD nmckcrtdp
            #add-point:ON ACTION controlp INFIELD nmckcrtdp
            {<point name="construct.c.nmckcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckcrtdp
            #add-point:BEFORE FIELD nmckcrtdp
            {<point name="construct.b.nmckcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckcrtdp
            
            #add-point:AFTER FIELD nmckcrtdp
            {<point name="construct.a.nmckcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckcrtdt
            #add-point:BEFORE FIELD nmckcrtdt
            {<point name="construct.b.nmckcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.nmckmodid
         ON ACTION controlp INFIELD nmckmodid
            #add-point:ON ACTION controlp INFIELD nmckmodid
            {<point name="construct.c.nmckmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckmodid
            #add-point:BEFORE FIELD nmckmodid
            {<point name="construct.b.nmckmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckmodid
            
            #add-point:AFTER FIELD nmckmodid
            {<point name="construct.a.nmckmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckmoddt
            #add-point:BEFORE FIELD nmckmoddt
            {<point name="construct.b.nmckmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.nmckcnfid
         ON ACTION controlp INFIELD nmckcnfid
            #add-point:ON ACTION controlp INFIELD nmckcnfid
            {<point name="construct.c.nmckcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckcnfid
            #add-point:BEFORE FIELD nmckcnfid
            {<point name="construct.b.nmckcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckcnfid
            
            #add-point:AFTER FIELD nmckcnfid
            {<point name="construct.a.nmckcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckcnfdt
            #add-point:BEFORE FIELD nmckcnfdt
            {<point name="construct.b.nmckcnfdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck001
            #add-point:BEFORE FIELD nmck001
            {<point name="construct.b.nmck001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck001
            
            #add-point:AFTER FIELD nmck001
            {<point name="construct.a.nmck001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck001
         ON ACTION controlp INFIELD nmck001
            #add-point:ON ACTION controlp INFIELD nmck001
            {<point name="construct.c.nmck001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck011
            #add-point:BEFORE FIELD nmck011
            {<point name="construct.b.nmck011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck011
            
            #add-point:AFTER FIELD nmck011
            {<point name="construct.a.nmck011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck011
         ON ACTION controlp INFIELD nmck011
            #add-point:ON ACTION controlp INFIELD nmck011
            {<point name="construct.c.nmck011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck034
            #add-point:BEFORE FIELD nmck034
            {<point name="construct.b.nmck034" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck034
            
            #add-point:AFTER FIELD nmck034
            {<point name="construct.a.nmck034" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck034
         ON ACTION controlp INFIELD nmck034
            #add-point:ON ACTION controlp INFIELD nmck034
            {<point name="construct.c.nmck034" />}
            #END add-point
 
         #Ctrlp:construct.c.nmck100
         ON ACTION controlp INFIELD nmck100
            #add-point:ON ACTION controlp INFIELD nmck100
            {<point name="construct.c.nmck100" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck100
            #add-point:BEFORE FIELD nmck100
            {<point name="construct.b.nmck100" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck100
            
            #add-point:AFTER FIELD nmck100
            {<point name="construct.a.nmck100" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck009
         ON ACTION controlp INFIELD nmck009
            #add-point:ON ACTION controlp INFIELD nmck009
            {<point name="construct.c.nmck009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck009
            #add-point:BEFORE FIELD nmck009
            {<point name="construct.b.nmck009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck009
            
            #add-point:AFTER FIELD nmck009
            {<point name="construct.a.nmck009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck035
            #add-point:BEFORE FIELD nmck035
            {<point name="construct.b.nmck035" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck035
            
            #add-point:AFTER FIELD nmck035
            {<point name="construct.a.nmck035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck035
         ON ACTION controlp INFIELD nmck035
            #add-point:ON ACTION controlp INFIELD nmck035
            {<point name="construct.c.nmck035" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck103
            #add-point:BEFORE FIELD nmck103
            {<point name="construct.b.nmck103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck103
            
            #add-point:AFTER FIELD nmck103
            {<point name="construct.a.nmck103" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck103
         ON ACTION controlp INFIELD nmck103
            #add-point:ON ACTION controlp INFIELD nmck103
            {<point name="construct.c.nmck103" />}
            #END add-point
 
         #Ctrlp:construct.c.nmck024
         ON ACTION controlp INFIELD nmck024
            #add-point:ON ACTION controlp INFIELD nmck024
            {<point name="construct.c.nmck024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck024
            #add-point:BEFORE FIELD nmck024
            {<point name="construct.b.nmck024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck024
            
            #add-point:AFTER FIELD nmck024
            {<point name="construct.a.nmck024" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck027
            #add-point:BEFORE FIELD nmck027
            {<point name="construct.b.nmck027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck027
            
            #add-point:AFTER FIELD nmck027
            {<point name="construct.a.nmck027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck027
         ON ACTION controlp INFIELD nmck027
            #add-point:ON ACTION controlp INFIELD nmck027
            {<point name="construct.c.nmck027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck101
            #add-point:BEFORE FIELD nmck101
            {<point name="construct.b.nmck101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck101
            
            #add-point:AFTER FIELD nmck101
            {<point name="construct.a.nmck101" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck101
         ON ACTION controlp INFIELD nmck101
            #add-point:ON ACTION controlp INFIELD nmck101
            {<point name="construct.c.nmck101" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck025
            #add-point:BEFORE FIELD nmck025
            {<point name="construct.b.nmck025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck025
            
            #add-point:AFTER FIELD nmck025
            {<point name="construct.a.nmck025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck025
         ON ACTION controlp INFIELD nmck025
            #add-point:ON ACTION controlp INFIELD nmck025
            {<point name="construct.c.nmck025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck113
            #add-point:BEFORE FIELD nmck113
            {<point name="construct.b.nmck113" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck113
            
            #add-point:AFTER FIELD nmck113
            {<point name="construct.a.nmck113" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck113
         ON ACTION controlp INFIELD nmck113
            #add-point:ON ACTION controlp INFIELD nmck113
            {<point name="construct.c.nmck113" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck026
            #add-point:BEFORE FIELD nmck026
            {<point name="construct.b.nmck026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck026
            
            #add-point:AFTER FIELD nmck026
            {<point name="construct.a.nmck026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck026
         ON ACTION controlp INFIELD nmck026
            #add-point:ON ACTION controlp INFIELD nmck026
            {<point name="construct.c.nmck026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck036
            #add-point:BEFORE FIELD nmck036
            {<point name="construct.b.nmck036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck036
            
            #add-point:AFTER FIELD nmck036
            {<point name="construct.a.nmck036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck036
         ON ACTION controlp INFIELD nmck036
            #add-point:ON ACTION controlp INFIELD nmck036
            {<point name="construct.c.nmck036" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck121
            #add-point:BEFORE FIELD nmck121
            {<point name="construct.b.nmck121" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck121
            
            #add-point:AFTER FIELD nmck121
            {<point name="construct.a.nmck121" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck121
         ON ACTION controlp INFIELD nmck121
            #add-point:ON ACTION controlp INFIELD nmck121
            {<point name="construct.c.nmck121" />}
            #END add-point
 
         #Ctrlp:construct.c.nmck010
         ON ACTION controlp INFIELD nmck010
            #add-point:ON ACTION controlp INFIELD nmck010
            {<point name="construct.c.nmck010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck010
            #add-point:BEFORE FIELD nmck010
            {<point name="construct.b.nmck010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck010
            
            #add-point:AFTER FIELD nmck010
            {<point name="construct.a.nmck010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck010_desc
            #add-point:BEFORE FIELD nmck010_desc
            {<point name="construct.b.nmck010_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck010_desc
            
            #add-point:AFTER FIELD nmck010_desc
            {<point name="construct.a.nmck010_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck010_desc
         ON ACTION controlp INFIELD nmck010_desc
            #add-point:ON ACTION controlp INFIELD nmck010_desc
            {<point name="construct.c.nmck010_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck123
            #add-point:BEFORE FIELD nmck123
            {<point name="construct.b.nmck123" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck123
            
            #add-point:AFTER FIELD nmck123
            {<point name="construct.a.nmck123" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck123
         ON ACTION controlp INFIELD nmck123
            #add-point:ON ACTION controlp INFIELD nmck123
            {<point name="construct.c.nmck123" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck114
            #add-point:BEFORE FIELD nmck114
            {<point name="construct.b.nmck114" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck114
            
            #add-point:AFTER FIELD nmck114
            {<point name="construct.a.nmck114" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck114
         ON ACTION controlp INFIELD nmck114
            #add-point:ON ACTION controlp INFIELD nmck114
            {<point name="construct.c.nmck114" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck131
            #add-point:BEFORE FIELD nmck131
            {<point name="construct.b.nmck131" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck131
            
            #add-point:AFTER FIELD nmck131
            {<point name="construct.a.nmck131" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck131
         ON ACTION controlp INFIELD nmck131
            #add-point:ON ACTION controlp INFIELD nmck131
            {<point name="construct.c.nmck131" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck124
            #add-point:BEFORE FIELD nmck124
            {<point name="construct.b.nmck124" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck124
            
            #add-point:AFTER FIELD nmck124
            {<point name="construct.a.nmck124" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck124
         ON ACTION controlp INFIELD nmck124
            #add-point:ON ACTION controlp INFIELD nmck124
            {<point name="construct.c.nmck124" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck133
            #add-point:BEFORE FIELD nmck133
            {<point name="construct.b.nmck133" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck133
            
            #add-point:AFTER FIELD nmck133
            {<point name="construct.a.nmck133" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck133
         ON ACTION controlp INFIELD nmck133
            #add-point:ON ACTION controlp INFIELD nmck133
            {<point name="construct.c.nmck133" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck134
            #add-point:BEFORE FIELD nmck134
            {<point name="construct.b.nmck134" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck134
            
            #add-point:AFTER FIELD nmck134
            {<point name="construct.a.nmck134" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck134
         ON ACTION controlp INFIELD nmck134
            #add-point:ON ACTION controlp INFIELD nmck134
            {<point name="construct.c.nmck134" />}
            #END add-point
 
         #Ctrlp:construct.c.nmck005
         ON ACTION controlp INFIELD nmck005
            #add-point:ON ACTION controlp INFIELD nmck005
            {<point name="construct.c.nmck005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck005
            #add-point:BEFORE FIELD nmck005
            {<point name="construct.b.nmck005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck005
            
            #add-point:AFTER FIELD nmck005
            {<point name="construct.a.nmck005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck015
            #add-point:BEFORE FIELD nmck015
            {<point name="construct.b.nmck015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck015
            
            #add-point:AFTER FIELD nmck015
            {<point name="construct.a.nmck015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck015
         ON ACTION controlp INFIELD nmck015
            #add-point:ON ACTION controlp INFIELD nmck015
            {<point name="construct.c.nmck015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck006
            #add-point:BEFORE FIELD nmck006
            {<point name="construct.b.nmck006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck006
            
            #add-point:AFTER FIELD nmck006
            {<point name="construct.a.nmck006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.nmck006
         ON ACTION controlp INFIELD nmck006
            #add-point:ON ACTION controlp INFIELD nmck006
            {<point name="construct.c.nmck006" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON nmclseq,nmclorga,nmclorga_desc,nmcl001,nmcl002,nmcl003,nmcl003_desc, 
          nmcl103,nmcl113,nmcl121,nmcl123,nmcl131,nmcl133
           FROM s_detail1[1].nmclseq,s_detail1[1].nmclorga,s_detail1[1].nmclorga_desc,s_detail1[1].nmcl001, 
               s_detail1[1].nmcl002,s_detail1[1].nmcl003,s_detail1[1].nmcl003_desc,s_detail1[1].nmcl103, 
               s_detail1[1].nmcl113,s_detail1[1].nmcl121,s_detail1[1].nmcl123,s_detail1[1].nmcl131,s_detail1[1].nmcl133 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD nmclseq
            #add-point:BEFORE FIELD nmclseq
            {<point name="construct.b.page1.nmclseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmclseq
            
            #add-point:AFTER FIELD nmclseq
            {<point name="construct.a.page1.nmclseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmclseq
         ON ACTION controlp INFIELD nmclseq
            #add-point:ON ACTION controlp INFIELD nmclseq
            {<point name="construct.c.page1.nmclseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.nmclorga
         ON ACTION controlp INFIELD nmclorga
            #add-point:ON ACTION controlp INFIELD nmclorga
            {<point name="construct.c.page1.nmclorga" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmclorga
            #add-point:BEFORE FIELD nmclorga
            {<point name="construct.b.page1.nmclorga" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmclorga
            
            #add-point:AFTER FIELD nmclorga
            {<point name="construct.a.page1.nmclorga" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmclorga_desc
            #add-point:BEFORE FIELD nmclorga_desc
            {<point name="construct.b.page1.nmclorga_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmclorga_desc
            
            #add-point:AFTER FIELD nmclorga_desc
            {<point name="construct.a.page1.nmclorga_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmclorga_desc
         ON ACTION controlp INFIELD nmclorga_desc
            #add-point:ON ACTION controlp INFIELD nmclorga_desc
            {<point name="construct.c.page1.nmclorga_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.nmcl001
         ON ACTION controlp INFIELD nmcl001
            #add-point:ON ACTION controlp INFIELD nmcl001
            {<point name="construct.c.page1.nmcl001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl001
            #add-point:BEFORE FIELD nmcl001
            {<point name="construct.b.page1.nmcl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl001
            
            #add-point:AFTER FIELD nmcl001
            {<point name="construct.a.page1.nmcl001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl002
            #add-point:BEFORE FIELD nmcl002
            {<point name="construct.b.page1.nmcl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl002
            
            #add-point:AFTER FIELD nmcl002
            {<point name="construct.a.page1.nmcl002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl002
         ON ACTION controlp INFIELD nmcl002
            #add-point:ON ACTION controlp INFIELD nmcl002
            {<point name="construct.c.page1.nmcl002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.nmcl003
         ON ACTION controlp INFIELD nmcl003
            #add-point:ON ACTION controlp INFIELD nmcl003
            {<point name="construct.c.page1.nmcl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl003
            #add-point:BEFORE FIELD nmcl003
            {<point name="construct.b.page1.nmcl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl003
            
            #add-point:AFTER FIELD nmcl003
            {<point name="construct.a.page1.nmcl003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl003_desc
            #add-point:BEFORE FIELD nmcl003_desc
            {<point name="construct.b.page1.nmcl003_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl003_desc
            
            #add-point:AFTER FIELD nmcl003_desc
            {<point name="construct.a.page1.nmcl003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl003_desc
         ON ACTION controlp INFIELD nmcl003_desc
            #add-point:ON ACTION controlp INFIELD nmcl003_desc
            {<point name="construct.c.page1.nmcl003_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl103
            #add-point:BEFORE FIELD nmcl103
            {<point name="construct.b.page1.nmcl103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl103
            
            #add-point:AFTER FIELD nmcl103
            {<point name="construct.a.page1.nmcl103" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl103
         ON ACTION controlp INFIELD nmcl103
            #add-point:ON ACTION controlp INFIELD nmcl103
            {<point name="construct.c.page1.nmcl103" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl113
            #add-point:BEFORE FIELD nmcl113
            {<point name="construct.b.page1.nmcl113" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl113
            
            #add-point:AFTER FIELD nmcl113
            {<point name="construct.a.page1.nmcl113" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl113
         ON ACTION controlp INFIELD nmcl113
            #add-point:ON ACTION controlp INFIELD nmcl113
            {<point name="construct.c.page1.nmcl113" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl121
            #add-point:BEFORE FIELD nmcl121
            {<point name="construct.b.page1.nmcl121" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl121
            
            #add-point:AFTER FIELD nmcl121
            {<point name="construct.a.page1.nmcl121" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl121
         ON ACTION controlp INFIELD nmcl121
            #add-point:ON ACTION controlp INFIELD nmcl121
            {<point name="construct.c.page1.nmcl121" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl123
            #add-point:BEFORE FIELD nmcl123
            {<point name="construct.b.page1.nmcl123" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl123
            
            #add-point:AFTER FIELD nmcl123
            {<point name="construct.a.page1.nmcl123" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl123
         ON ACTION controlp INFIELD nmcl123
            #add-point:ON ACTION controlp INFIELD nmcl123
            {<point name="construct.c.page1.nmcl123" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl131
            #add-point:BEFORE FIELD nmcl131
            {<point name="construct.b.page1.nmcl131" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl131
            
            #add-point:AFTER FIELD nmcl131
            {<point name="construct.a.page1.nmcl131" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl131
         ON ACTION controlp INFIELD nmcl131
            #add-point:ON ACTION controlp INFIELD nmcl131
            {<point name="construct.c.page1.nmcl131" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl133
            #add-point:BEFORE FIELD nmcl133
            {<point name="construct.b.page1.nmcl133" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl133
            
            #add-point:AFTER FIELD nmcl133
            {<point name="construct.a.page1.nmcl133" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.nmcl133
         ON ACTION controlp INFIELD nmcl133
            #add-point:ON ACTION controlp INFIELD nmcl133
            {<point name="construct.c.page1.nmcl133" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="anmt440.default_search" ver="6" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION anmt440_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " nmckcomp = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " nmckdocno = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="anmt440.delete" ver="24" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION anmt440_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_nmck_m.nmckcomp IS NULL
   OR g_nmck_m.nmckdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL anmt440_show()
   
   CALL s_transaction_begin()
 
   OPEN anmt440_cl USING g_enterprise,g_nmck_m.nmckcomp,g_nmck_m.nmckdocno
   IF STATUS THEN
      CALL cl_err("OPEN anmt440_cl:", STATUS, 1)
      CLOSE anmt440_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmt440_master_referesh USING g_nmck_m.nmckcomp,g_nmck_m.nmckdocno INTO g_nmck_m.nmcksite, 
       g_nmck_m.nmckcomp,g_nmck_m.nmck003,g_nmck_m.nmckdocno,g_nmck_m.nmck002,g_nmck_m.nmckdocdt,g_nmck_m.nmck004, 
       g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028,g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031, 
       g_nmck_m.nmck032,g_nmck_m.nmckownid,g_nmck_m.nmckowndp,g_nmck_m.nmckcrtid,g_nmck_m.nmckcrtdp, 
       g_nmck_m.nmckcrtdt,g_nmck_m.nmckmodid,g_nmck_m.nmckmoddt,g_nmck_m.nmckcnfid,g_nmck_m.nmckcnfdt, 
       g_nmck_m.nmck001,g_nmck_m.nmck011,g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035, 
       g_nmck_m.nmck103,g_nmck_m.nmck024,g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113, 
       g_nmck_m.nmck026,g_nmck_m.nmck036,g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck123,g_nmck_m.nmck114, 
       g_nmck_m.nmck131,g_nmck_m.nmck124,g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005,g_nmck_m.nmck015, 
       g_nmck_m.nmck006,g_nmck_m.nmcksite_desc,g_nmck_m.nmckcomp_desc,g_nmck_m.nmck003_desc,g_nmck_m.nmck004_desc, 
       g_nmck_m.nmck032_desc,g_nmck_m.nmckownid_desc,g_nmck_m.nmckowndp_desc,g_nmck_m.nmckcrtid_desc, 
       g_nmck_m.nmckcrtdp_desc,g_nmck_m.nmckmodid_desc,g_nmck_m.nmckcnfid_desc,g_nmck_m.nmck009_desc, 
       g_nmck_m.nmck005_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_nmck_m.nmckcomp,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL anmt440_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_nmckcomp_t = g_nmck_m.nmckcomp
      LET g_nmckdocno_t = g_nmck_m.nmckdocno
 
 
      DELETE FROM nmck_t
       WHERE nmckent = g_enterprise AND nmckcomp = g_nmck_m.nmckcomp
         AND nmckdocno = g_nmck_m.nmckdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_nmck_m.nmckcomp,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM nmcl_t
       WHERE nmclent = g_enterprise AND nmclcomp = g_nmck_m.nmckcomp
         AND nmcldocno = g_nmck_m.nmckdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("nmcl_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_nmcl_d.clear() 
 
     
      #CALL anmt440_ui_browser_refresh()  
      CALL anmt440_ui_headershow()  
      CALL anmt440_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL anmt440_browser_fill("")
         CALL anmt440_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL anmt440_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE anmt440_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_nmck_m.nmckcomp,'D')
    
END FUNCTION
]]>
</section>
  <section id="anmt440.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION anmt440_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM nmcl_t
       WHERE nmclent = g_enterprise AND
         nmclcomp = ps_keys_bak[1] AND nmcldocno = ps_keys_bak[2] AND nmclseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="anmt440.description" ver="189" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000153
#+ 
#+ Filename...: anmt440
#+ Description: 應付票據開立作業
#+ Creator....: 02599(2014/06/06)
#+ Modifier...: 02599(2014/07/01)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="anmt440.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION anmt440_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE nmcl_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE anmt440_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE anmt440_detail AS ",
                "SELECT * FROM nmcl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO anmt440_detail SELECT * FROM nmcl_t 
                                         WHERE nmclent = g_enterprise AND nmclcomp = g_nmckcomp_t
                                         AND nmcldocno = g_nmckdocno_t
 
   
   #將key修正為調整後   
   UPDATE anmt440_detail 
      #更新key欄位
      SET nmclcomp = g_nmck_m.nmckcomp
          , nmcldocno = g_nmck_m.nmckdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO nmcl_t SELECT * FROM anmt440_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE anmt440_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_nmckcomp_t = g_nmck_m.nmckcomp
   LET g_nmckdocno_t = g_nmck_m.nmckdocno
 
   
   DROP TABLE anmt440_detail
   
END FUNCTION
]]>
</section>
  <section id="anmt440.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION anmt440_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="anmt440.fetch" ver="19" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION anmt440_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL anmt440_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_nmck_m.nmckcomp = g_browser[g_current_idx].b_nmckcomp
   LET g_nmck_m.nmckdocno = g_browser[g_current_idx].b_nmckdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE anmt440_master_referesh USING g_nmck_m.nmckcomp,g_nmck_m.nmckdocno INTO g_nmck_m.nmcksite, 
       g_nmck_m.nmckcomp,g_nmck_m.nmck003,g_nmck_m.nmckdocno,g_nmck_m.nmck002,g_nmck_m.nmckdocdt,g_nmck_m.nmck004, 
       g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028,g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031, 
       g_nmck_m.nmck032,g_nmck_m.nmckownid,g_nmck_m.nmckowndp,g_nmck_m.nmckcrtid,g_nmck_m.nmckcrtdp, 
       g_nmck_m.nmckcrtdt,g_nmck_m.nmckmodid,g_nmck_m.nmckmoddt,g_nmck_m.nmckcnfid,g_nmck_m.nmckcnfdt, 
       g_nmck_m.nmck001,g_nmck_m.nmck011,g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035, 
       g_nmck_m.nmck103,g_nmck_m.nmck024,g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113, 
       g_nmck_m.nmck026,g_nmck_m.nmck036,g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck123,g_nmck_m.nmck114, 
       g_nmck_m.nmck131,g_nmck_m.nmck124,g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005,g_nmck_m.nmck015, 
       g_nmck_m.nmck006,g_nmck_m.nmcksite_desc,g_nmck_m.nmckcomp_desc,g_nmck_m.nmck003_desc,g_nmck_m.nmck004_desc, 
       g_nmck_m.nmck032_desc,g_nmck_m.nmckownid_desc,g_nmck_m.nmckowndp_desc,g_nmck_m.nmckcrtid_desc, 
       g_nmck_m.nmckcrtdp_desc,g_nmck_m.nmckmodid_desc,g_nmck_m.nmckcnfid_desc,g_nmck_m.nmck009_desc, 
       g_nmck_m.nmck005_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("nmck_t",SQLCA.sqlcode,1)
      INITIALIZE g_nmck_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_nmck_m_t.* = g_nmck_m.*
   LET g_nmck_m_o.* = g_nmck_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL anmt440_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="anmt440.fill_chk" ver="4" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION anmt440_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
 
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="anmt440.global" ver="25" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_nmck_m        RECORD
       nmcksite LIKE nmck_t.nmcksite, 
   nmcksite_desc LIKE type_t.chr80, 
   nmckcomp LIKE nmck_t.nmckcomp, 
   nmckcomp_desc LIKE type_t.chr80, 
   nmck003 LIKE nmck_t.nmck003, 
   nmck003_desc LIKE type_t.chr80, 
   nmckdocno LIKE nmck_t.nmckdocno, 
   nmck002 LIKE nmck_t.nmck002, 
   nmckdocdt LIKE nmck_t.nmckdocdt, 
   nmck004 LIKE nmck_t.nmck004, 
   nmck004_desc LIKE type_t.chr80, 
   nmas003 LIKE nmas_t.nmas003, 
   nmck019 LIKE nmck_t.nmck019, 
   nmckstus LIKE nmck_t.nmckstus, 
   nmck028 LIKE nmck_t.nmck028, 
   nmck029 LIKE nmck_t.nmck029, 
   nmck030 LIKE nmck_t.nmck030, 
   nmck031 LIKE nmck_t.nmck031, 
   nmck032 LIKE nmck_t.nmck032, 
   nmck032_desc LIKE type_t.chr80, 
   nmckownid LIKE nmck_t.nmckownid, 
   nmckownid_desc LIKE type_t.chr80, 
   nmckowndp LIKE nmck_t.nmckowndp, 
   nmckowndp_desc LIKE type_t.chr80, 
   nmckcrtid LIKE nmck_t.nmckcrtid, 
   nmckcrtid_desc LIKE type_t.chr80, 
   nmckcrtdp LIKE nmck_t.nmckcrtdp, 
   nmckcrtdp_desc LIKE type_t.chr80, 
   nmckcrtdt DATETIME YEAR TO SECOND, 
   nmckmodid LIKE nmck_t.nmckmodid, 
   nmckmodid_desc LIKE type_t.chr80, 
   nmckmoddt DATETIME YEAR TO SECOND, 
   nmckcnfid LIKE nmck_t.nmckcnfid, 
   nmckcnfid_desc LIKE type_t.chr80, 
   nmckcnfdt DATETIME YEAR TO SECOND, 
   nmck001 LIKE nmck_t.nmck001, 
   nmck011 LIKE nmck_t.nmck011, 
   nmck034 LIKE nmck_t.nmck034, 
   nmck100 LIKE nmck_t.nmck100, 
   nmck009 LIKE nmck_t.nmck009, 
   nmck009_desc LIKE type_t.chr80, 
   nmck035 DATETIME YEAR TO SECOND, 
   nmck103 LIKE nmck_t.nmck103, 
   nmck024 LIKE nmck_t.nmck024, 
   nmck027 LIKE nmck_t.nmck027, 
   nmck101 LIKE nmck_t.nmck101, 
   nmck025 LIKE nmck_t.nmck025, 
   nmck113 LIKE nmck_t.nmck113, 
   nmck026 LIKE nmck_t.nmck026, 
   nmck036 LIKE nmck_t.nmck036, 
   nmck121 LIKE nmck_t.nmck121, 
   nmck010 LIKE nmck_t.nmck010, 
   nmck010_desc LIKE type_t.chr80, 
   nmck123 LIKE nmck_t.nmck123, 
   nmck114 LIKE nmck_t.nmck114, 
   nmck131 LIKE nmck_t.nmck131, 
   nmck124 LIKE nmck_t.nmck124, 
   nmck133 LIKE nmck_t.nmck133, 
   nmck134 LIKE nmck_t.nmck134, 
   nmck005 LIKE nmck_t.nmck005, 
   nmck005_desc LIKE type_t.chr80, 
   nmck015 LIKE nmck_t.nmck015, 
   nmck006 LIKE nmck_t.nmck006
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_nmcl_d        RECORD
       nmclseq LIKE nmcl_t.nmclseq, 
   nmclorga LIKE nmcl_t.nmclorga, 
   nmclorga_desc LIKE type_t.chr80, 
   nmcl001 LIKE nmcl_t.nmcl001, 
   nmcl002 LIKE nmcl_t.nmcl002, 
   nmcl003 LIKE nmcl_t.nmcl003, 
   nmcl003_desc LIKE type_t.chr80, 
   nmcl103 LIKE nmcl_t.nmcl103, 
   nmcl113 LIKE nmcl_t.nmcl113, 
   nmcl121 LIKE nmcl_t.nmcl121, 
   nmcl123 LIKE nmcl_t.nmcl123, 
   nmcl131 LIKE nmcl_t.nmcl131, 
   nmcl133 LIKE nmcl_t.nmcl133
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_nmck_m          type_g_nmck_m
DEFINE g_nmck_m_t        type_g_nmck_m
DEFINE g_nmck_m_o        type_g_nmck_m
 
   DEFINE g_nmckcomp_t LIKE nmck_t.nmckcomp
DEFINE g_nmckdocno_t LIKE nmck_t.nmckdocno
 
 
DEFINE g_nmcl_d          DYNAMIC ARRAY OF type_g_nmcl_d
DEFINE g_nmcl_d_t        type_g_nmcl_d
DEFINE g_nmcl_d_o        type_g_nmcl_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_nmckcomp LIKE nmck_t.nmckcomp,
      b_nmckdocno LIKE nmck_t.nmckdocno
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_nmckcomp LIKE nmck_t.nmckcomp,
      b_nmckdocno LIKE nmck_t.nmckdocno
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="anmt440.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION anmt440_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_nmcl_d.getLength() THEN
         LET g_detail_idx = g_nmcl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_nmcl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_nmcl_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="anmt440.init" ver="6" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION anmt440_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('nmckstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('nmck026','8711') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL anmt440_default_search()
    
END FUNCTION
]]>
</section>
  <section id="anmt440.input" ver="18" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION anmt440_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT nmclseq,nmclorga,nmcl001,nmcl002,nmcl003,nmcl103,nmcl113,nmcl121,nmcl123, 
       nmcl131,nmcl133 FROM nmcl_t WHERE nmclent=? AND nmclcomp=? AND nmcldocno=? AND nmclseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmt440_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL anmt440_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL anmt440_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_nmck_m.nmcksite,g_nmck_m.nmckcomp,g_nmck_m.nmck003,g_nmck_m.nmckdocno,g_nmck_m.nmck002, 
       g_nmck_m.nmckdocdt,g_nmck_m.nmck004,g_nmck_m.nmas003,g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028, 
       g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031,g_nmck_m.nmck032,g_nmck_m.nmck001,g_nmck_m.nmck011, 
       g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035,g_nmck_m.nmck103,g_nmck_m.nmck024, 
       g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113,g_nmck_m.nmck026,g_nmck_m.nmck036, 
       g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck123,g_nmck_m.nmck114,g_nmck_m.nmck131,g_nmck_m.nmck124, 
       g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005,g_nmck_m.nmck015,g_nmck_m.nmck006
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="anmt440.input.body" ver="11" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_nmcl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_nmcl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL anmt440_b_fill()
            LET g_rec_b = g_nmcl_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN anmt440_cl USING g_enterprise,g_nmck_m.nmckcomp,g_nmck_m.nmckdocno
            IF STATUS THEN
               CALL cl_err("OPEN anmt440_cl:", STATUS, 1)
               CLOSE anmt440_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_nmcl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_nmcl_d[l_ac].nmclseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_nmcl_d_t.* = g_nmcl_d[l_ac].*  #BACKUP
               LET g_nmcl_d_o.* = g_nmcl_d[l_ac].*  #BACKUP
               CALL anmt440_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL anmt440_set_no_entry_b(l_cmd)
               IF NOT anmt440_lock_b("nmcl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH anmt440_bcl INTO g_nmcl_d[l_ac].nmclseq,g_nmcl_d[l_ac].nmclorga,g_nmcl_d[l_ac].nmcl001, 
                      g_nmcl_d[l_ac].nmcl002,g_nmcl_d[l_ac].nmcl003,g_nmcl_d[l_ac].nmcl103,g_nmcl_d[l_ac].nmcl113, 
                      g_nmcl_d[l_ac].nmcl121,g_nmcl_d[l_ac].nmcl123,g_nmcl_d[l_ac].nmcl131,g_nmcl_d[l_ac].nmcl133 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_nmcl_d_t.nmclseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL anmt440_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_nmcl_d[l_ac].* TO NULL 
            INITIALIZE g_nmcl_d_t.* TO NULL 
            INITIALIZE g_nmcl_d_o.* TO NULL 
            
            LET g_nmcl_d_t.* = g_nmcl_d[l_ac].*     #新輸入資料
            LET g_nmcl_d_o.* = g_nmcl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL anmt440_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL anmt440_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_nmcl_d[li_reproduce_target].* = g_nmcl_d[li_reproduce].*
 
               LET g_nmcl_d[li_reproduce_target].nmclseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM nmcl_t 
             WHERE nmclent = g_enterprise AND nmclcomp = g_nmck_m.nmckcomp
               AND nmcldocno = g_nmck_m.nmckdocno
 
               AND nmclseq = g_nmcl_d[l_ac].nmclseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmck_m.nmckcomp
               LET gs_keys[2] = g_nmck_m.nmckdocno
               LET gs_keys[3] = g_nmcl_d[g_detail_idx].nmclseq
               CALL anmt440_insert_b('nmcl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_nmcl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("nmcl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL anmt440_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_nmcl_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_nmcl_d.deleteElement(l_ac)
               NEXT FIELD nmclseq
            END IF
         
            IF g_nmcl_d[l_ac].nmclseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM nmcl_t
                WHERE nmclent = g_enterprise AND nmclcomp = g_nmck_m.nmckcomp AND
                                          nmcldocno = g_nmck_m.nmckdocno AND
 
                      nmclseq = g_nmcl_d_t.nmclseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("nmcl_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE anmt440_bcl
               LET l_count = g_nmcl_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmck_m.nmckcomp
               LET gs_keys[2] = g_nmck_m.nmckdocno
               LET gs_keys[3] = g_nmcl_d[g_detail_idx].nmclseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL anmt440_delete_b('nmcl_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD nmclseq
            #add-point:BEFORE FIELD nmclseq
            {<point name="input.b.page1.nmclseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmclseq
            
            #add-point:AFTER FIELD nmclseq
            {<point name="input.a.page1.nmclseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmclseq
            #add-point:ON CHANGE nmclseq
            {<point name="input.g.page1.nmclseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmclorga
            
            #add-point:AFTER FIELD nmclorga
            {<point name="input.a.page1.nmclorga" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmclorga
            #add-point:BEFORE FIELD nmclorga
            {<point name="input.b.page1.nmclorga" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmclorga
            #add-point:ON CHANGE nmclorga
            {<point name="input.g.page1.nmclorga" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmclorga_desc
            #add-point:BEFORE FIELD nmclorga_desc
            {<point name="input.b.page1.nmclorga_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmclorga_desc
            
            #add-point:AFTER FIELD nmclorga_desc
            {<point name="input.a.page1.nmclorga_desc" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmclorga_desc
            #add-point:ON CHANGE nmclorga_desc
            {<point name="input.g.page1.nmclorga_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl001
            
            #add-point:AFTER FIELD nmcl001
            {<point name="input.a.page1.nmcl001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl001
            #add-point:BEFORE FIELD nmcl001
            {<point name="input.b.page1.nmcl001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl001
            #add-point:ON CHANGE nmcl001
            {<point name="input.g.page1.nmcl001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl002
            
            #add-point:AFTER FIELD nmcl002
            {<point name="input.a.page1.nmcl002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl002
            #add-point:BEFORE FIELD nmcl002
            {<point name="input.b.page1.nmcl002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl002
            #add-point:ON CHANGE nmcl002
            {<point name="input.g.page1.nmcl002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl003
            
            #add-point:AFTER FIELD nmcl003
            {<point name="input.a.page1.nmcl003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl003
            #add-point:BEFORE FIELD nmcl003
            {<point name="input.b.page1.nmcl003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl003
            #add-point:ON CHANGE nmcl003
            {<point name="input.g.page1.nmcl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl103
            #add-point:BEFORE FIELD nmcl103
            {<point name="input.b.page1.nmcl103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl103
            
            #add-point:AFTER FIELD nmcl103
            {<point name="input.a.page1.nmcl103" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl103
            #add-point:ON CHANGE nmcl103
            {<point name="input.g.page1.nmcl103" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl113
            #add-point:BEFORE FIELD nmcl113
            {<point name="input.b.page1.nmcl113" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl113
            
            #add-point:AFTER FIELD nmcl113
            {<point name="input.a.page1.nmcl113" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl113
            #add-point:ON CHANGE nmcl113
            {<point name="input.g.page1.nmcl113" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl121
            #add-point:BEFORE FIELD nmcl121
            {<point name="input.b.page1.nmcl121" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl121
            
            #add-point:AFTER FIELD nmcl121
            {<point name="input.a.page1.nmcl121" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl121
            #add-point:ON CHANGE nmcl121
            {<point name="input.g.page1.nmcl121" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl123
            #add-point:BEFORE FIELD nmcl123
            {<point name="input.b.page1.nmcl123" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl123
            
            #add-point:AFTER FIELD nmcl123
            {<point name="input.a.page1.nmcl123" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl123
            #add-point:ON CHANGE nmcl123
            {<point name="input.g.page1.nmcl123" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl131
            #add-point:BEFORE FIELD nmcl131
            {<point name="input.b.page1.nmcl131" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl131
            
            #add-point:AFTER FIELD nmcl131
            {<point name="input.a.page1.nmcl131" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl131
            #add-point:ON CHANGE nmcl131
            {<point name="input.g.page1.nmcl131" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcl133
            #add-point:BEFORE FIELD nmcl133
            {<point name="input.b.page1.nmcl133" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmcl133
            
            #add-point:AFTER FIELD nmcl133
            {<point name="input.a.page1.nmcl133" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmcl133
            #add-point:ON CHANGE nmcl133
            {<point name="input.g.page1.nmcl133" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.nmclseq
         ON ACTION controlp INFIELD nmclseq
            #add-point:ON ACTION controlp INFIELD nmclseq
            {<point name="input.c.page1.nmclseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmclorga
         ON ACTION controlp INFIELD nmclorga
            #add-point:ON ACTION controlp INFIELD nmclorga
            {<point name="input.c.page1.nmclorga" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmclorga_desc
         ON ACTION controlp INFIELD nmclorga_desc
            #add-point:ON ACTION controlp INFIELD nmclorga_desc
            {<point name="input.c.page1.nmclorga_desc" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl001
         ON ACTION controlp INFIELD nmcl001
            #add-point:ON ACTION controlp INFIELD nmcl001
            {<point name="input.c.page1.nmcl001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl002
         ON ACTION controlp INFIELD nmcl002
            #add-point:ON ACTION controlp INFIELD nmcl002
            {<point name="input.c.page1.nmcl002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl003
         ON ACTION controlp INFIELD nmcl003
            #add-point:ON ACTION controlp INFIELD nmcl003
            {<point name="input.c.page1.nmcl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl103
         ON ACTION controlp INFIELD nmcl103
            #add-point:ON ACTION controlp INFIELD nmcl103
            {<point name="input.c.page1.nmcl103" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl113
         ON ACTION controlp INFIELD nmcl113
            #add-point:ON ACTION controlp INFIELD nmcl113
            {<point name="input.c.page1.nmcl113" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl121
         ON ACTION controlp INFIELD nmcl121
            #add-point:ON ACTION controlp INFIELD nmcl121
            {<point name="input.c.page1.nmcl121" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl123
         ON ACTION controlp INFIELD nmcl123
            #add-point:ON ACTION controlp INFIELD nmcl123
            {<point name="input.c.page1.nmcl123" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl131
         ON ACTION controlp INFIELD nmcl131
            #add-point:ON ACTION controlp INFIELD nmcl131
            {<point name="input.c.page1.nmcl131" />}
            #END add-point
 
         #Ctrlp:input.c.page1.nmcl133
         ON ACTION controlp INFIELD nmcl133
            #add-point:ON ACTION controlp INFIELD nmcl133
            {<point name="input.c.page1.nmcl133" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_nmcl_d[l_ac].* = g_nmcl_d_t.*
               CLOSE anmt440_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_nmcl_d[l_ac].nmclseq,-263,1)
               LET g_nmcl_d[l_ac].* = g_nmcl_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE nmcl_t SET (nmclcomp,nmcldocno,nmclseq,nmclorga,nmcl001,nmcl002,nmcl003,nmcl103, 
                   nmcl113,nmcl121,nmcl123,nmcl131,nmcl133) = (g_nmck_m.nmckcomp,g_nmck_m.nmckdocno, 
                   g_nmcl_d[l_ac].nmclseq,g_nmcl_d[l_ac].nmclorga,g_nmcl_d[l_ac].nmcl001,g_nmcl_d[l_ac].nmcl002, 
                   g_nmcl_d[l_ac].nmcl003,g_nmcl_d[l_ac].nmcl103,g_nmcl_d[l_ac].nmcl113,g_nmcl_d[l_ac].nmcl121, 
                   g_nmcl_d[l_ac].nmcl123,g_nmcl_d[l_ac].nmcl131,g_nmcl_d[l_ac].nmcl133)
                WHERE nmclent = g_enterprise AND nmclcomp = g_nmck_m.nmckcomp 
                  AND nmcldocno = g_nmck_m.nmckdocno 
 
                  AND nmclseq = g_nmcl_d_t.nmclseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("nmcl_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_nmcl_d[l_ac].* = g_nmcl_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("nmcl_t",SQLCA.sqlcode,1)
                     LET g_nmcl_d[l_ac].* = g_nmcl_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmck_m.nmckcomp
               LET gs_keys_bak[1] = g_nmckcomp_t
               LET gs_keys[2] = g_nmck_m.nmckdocno
               LET gs_keys_bak[2] = g_nmckdocno_t
               LET gs_keys[3] = g_nmcl_d[g_detail_idx].nmclseq
               LET gs_keys_bak[3] = g_nmcl_d_t.nmclseq
               CALL anmt440_update_b('nmcl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_nmck_m),util.JSON.stringify(g_nmcl_d_t)
               LET g_log2 = util.JSON.stringify(g_nmck_m),util.JSON.stringify(g_nmcl_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL anmt440_unlock_b("nmcl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_nmcl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_nmcl_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="anmt440.input.head" ver="23" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_nmck_m.nmcksite,g_nmck_m.nmckcomp,g_nmck_m.nmck003,g_nmck_m.nmckdocno,g_nmck_m.nmck002, 
          g_nmck_m.nmckdocdt,g_nmck_m.nmck004,g_nmck_m.nmas003,g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028, 
          g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031,g_nmck_m.nmck032,g_nmck_m.nmck001,g_nmck_m.nmck011, 
          g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035,g_nmck_m.nmck103,g_nmck_m.nmck024, 
          g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113,g_nmck_m.nmck026,g_nmck_m.nmck036, 
          g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck123,g_nmck_m.nmck114,g_nmck_m.nmck131,g_nmck_m.nmck124, 
          g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005,g_nmck_m.nmck015,g_nmck_m.nmck006 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD nmcksite
            
            #add-point:AFTER FIELD nmcksite
            {<point name="input.a.nmcksite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmcksite
            #add-point:BEFORE FIELD nmcksite
            {<point name="input.b.nmcksite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmcksite
            #add-point:ON CHANGE nmcksite
            {<point name="input.g.nmcksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckcomp
            
            #add-point:AFTER FIELD nmckcomp
            {<point name="input.a.nmckcomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckcomp
            #add-point:BEFORE FIELD nmckcomp
            {<point name="input.b.nmckcomp" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmckcomp
            #add-point:ON CHANGE nmckcomp
            {<point name="input.g.nmckcomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck003
            
            #add-point:AFTER FIELD nmck003
            {<point name="input.a.nmck003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck003
            #add-point:BEFORE FIELD nmck003
            {<point name="input.b.nmck003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck003
            #add-point:ON CHANGE nmck003
            {<point name="input.g.nmck003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckdocno
            #add-point:BEFORE FIELD nmckdocno
            {<point name="input.b.nmckdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckdocno
            
            #add-point:AFTER FIELD nmckdocno
            {<point name="input.a.nmckdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmckdocno
            #add-point:ON CHANGE nmckdocno
            {<point name="input.g.nmckdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck002
            #add-point:BEFORE FIELD nmck002
            {<point name="input.b.nmck002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck002
            
            #add-point:AFTER FIELD nmck002
            {<point name="input.a.nmck002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck002
            #add-point:ON CHANGE nmck002
            {<point name="input.g.nmck002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckdocdt
            #add-point:BEFORE FIELD nmckdocdt
            {<point name="input.b.nmckdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckdocdt
            
            #add-point:AFTER FIELD nmckdocdt
            {<point name="input.a.nmckdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmckdocdt
            #add-point:ON CHANGE nmckdocdt
            {<point name="input.g.nmckdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck004
            
            #add-point:AFTER FIELD nmck004
            {<point name="input.a.nmck004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck004
            #add-point:BEFORE FIELD nmck004
            {<point name="input.b.nmck004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck004
            #add-point:ON CHANGE nmck004
            {<point name="input.g.nmck004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmas003
            #add-point:BEFORE FIELD nmas003
            {<point name="input.b.nmas003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmas003
            
            #add-point:AFTER FIELD nmas003
            {<point name="input.a.nmas003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmas003
            #add-point:ON CHANGE nmas003
            {<point name="input.g.nmas003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck019
            #add-point:BEFORE FIELD nmck019
            {<point name="input.b.nmck019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck019
            
            #add-point:AFTER FIELD nmck019
            {<point name="input.a.nmck019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck019
            #add-point:ON CHANGE nmck019
            {<point name="input.g.nmck019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmckstus
            #add-point:BEFORE FIELD nmckstus
            {<point name="input.b.nmckstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmckstus
            
            #add-point:AFTER FIELD nmckstus
            {<point name="input.a.nmckstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmckstus
            #add-point:ON CHANGE nmckstus
            {<point name="input.g.nmckstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck028
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_nmck_m.nmck028,"0","1","","","azz-00079",1) THEN
               NEXT FIELD nmck028
            END IF
 
 
            #add-point:AFTER FIELD nmck028
            {<point name="input.a.nmck028" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck028
            #add-point:BEFORE FIELD nmck028
            {<point name="input.b.nmck028" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck028
            #add-point:ON CHANGE nmck028
            {<point name="input.g.nmck028" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck029
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_nmck_m.nmck029,"0","1","","","azz-00079",1) THEN
               NEXT FIELD nmck029
            END IF
 
 
            #add-point:AFTER FIELD nmck029
            {<point name="input.a.nmck029" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck029
            #add-point:BEFORE FIELD nmck029
            {<point name="input.b.nmck029" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck029
            #add-point:ON CHANGE nmck029
            {<point name="input.g.nmck029" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck030
            #add-point:BEFORE FIELD nmck030
            {<point name="input.b.nmck030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck030
            
            #add-point:AFTER FIELD nmck030
            {<point name="input.a.nmck030" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck030
            #add-point:ON CHANGE nmck030
            {<point name="input.g.nmck030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck031
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_nmck_m.nmck031,"0","1","","","azz-00079",1) THEN
               NEXT FIELD nmck031
            END IF
 
 
            #add-point:AFTER FIELD nmck031
            {<point name="input.a.nmck031" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck031
            #add-point:BEFORE FIELD nmck031
            {<point name="input.b.nmck031" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck031
            #add-point:ON CHANGE nmck031
            {<point name="input.g.nmck031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck032
            
            #add-point:AFTER FIELD nmck032
            {<point name="input.a.nmck032" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck032
            #add-point:BEFORE FIELD nmck032
            {<point name="input.b.nmck032" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck032
            #add-point:ON CHANGE nmck032
            {<point name="input.g.nmck032" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck001
            #add-point:BEFORE FIELD nmck001
            {<point name="input.b.nmck001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck001
            
            #add-point:AFTER FIELD nmck001
            {<point name="input.a.nmck001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck001
            #add-point:ON CHANGE nmck001
            {<point name="input.g.nmck001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck011
            #add-point:BEFORE FIELD nmck011
            {<point name="input.b.nmck011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck011
            
            #add-point:AFTER FIELD nmck011
            {<point name="input.a.nmck011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck011
            #add-point:ON CHANGE nmck011
            {<point name="input.g.nmck011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck034
            #add-point:BEFORE FIELD nmck034
            {<point name="input.b.nmck034" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck034
            
            #add-point:AFTER FIELD nmck034
            {<point name="input.a.nmck034" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck034
            #add-point:ON CHANGE nmck034
            {<point name="input.g.nmck034" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck100
            
            #add-point:AFTER FIELD nmck100
            {<point name="input.a.nmck100" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck100
            #add-point:BEFORE FIELD nmck100
            {<point name="input.b.nmck100" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck100
            #add-point:ON CHANGE nmck100
            {<point name="input.g.nmck100" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck009
            
            #add-point:AFTER FIELD nmck009
            {<point name="input.a.nmck009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck009
            #add-point:BEFORE FIELD nmck009
            {<point name="input.b.nmck009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck009
            #add-point:ON CHANGE nmck009
            {<point name="input.g.nmck009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck035
            #add-point:BEFORE FIELD nmck035
            {<point name="input.b.nmck035" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck035
            
            #add-point:AFTER FIELD nmck035
            {<point name="input.a.nmck035" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck035
            #add-point:ON CHANGE nmck035
            {<point name="input.g.nmck035" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck103
            #add-point:BEFORE FIELD nmck103
            {<point name="input.b.nmck103" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck103
            
            #add-point:AFTER FIELD nmck103
            {<point name="input.a.nmck103" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck103
            #add-point:ON CHANGE nmck103
            {<point name="input.g.nmck103" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck024
            #add-point:BEFORE FIELD nmck024
            {<point name="input.b.nmck024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck024
            
            #add-point:AFTER FIELD nmck024
            {<point name="input.a.nmck024" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck024
            #add-point:ON CHANGE nmck024
            {<point name="input.g.nmck024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck027
            #add-point:BEFORE FIELD nmck027
            {<point name="input.b.nmck027" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck027
            
            #add-point:AFTER FIELD nmck027
            {<point name="input.a.nmck027" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck027
            #add-point:ON CHANGE nmck027
            {<point name="input.g.nmck027" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck101
            #add-point:BEFORE FIELD nmck101
            {<point name="input.b.nmck101" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck101
            
            #add-point:AFTER FIELD nmck101
            {<point name="input.a.nmck101" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck101
            #add-point:ON CHANGE nmck101
            {<point name="input.g.nmck101" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck025
            #add-point:BEFORE FIELD nmck025
            {<point name="input.b.nmck025" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck025
            
            #add-point:AFTER FIELD nmck025
            {<point name="input.a.nmck025" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck025
            #add-point:ON CHANGE nmck025
            {<point name="input.g.nmck025" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck113
            #add-point:BEFORE FIELD nmck113
            {<point name="input.b.nmck113" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck113
            
            #add-point:AFTER FIELD nmck113
            {<point name="input.a.nmck113" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck113
            #add-point:ON CHANGE nmck113
            {<point name="input.g.nmck113" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck026
            #add-point:BEFORE FIELD nmck026
            {<point name="input.b.nmck026" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck026
            
            #add-point:AFTER FIELD nmck026
            {<point name="input.a.nmck026" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck026
            #add-point:ON CHANGE nmck026
            {<point name="input.g.nmck026" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck036
            #add-point:BEFORE FIELD nmck036
            {<point name="input.b.nmck036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck036
            
            #add-point:AFTER FIELD nmck036
            {<point name="input.a.nmck036" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck036
            #add-point:ON CHANGE nmck036
            {<point name="input.g.nmck036" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck121
            #add-point:BEFORE FIELD nmck121
            {<point name="input.b.nmck121" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck121
            
            #add-point:AFTER FIELD nmck121
            {<point name="input.a.nmck121" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck121
            #add-point:ON CHANGE nmck121
            {<point name="input.g.nmck121" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck010
            
            #add-point:AFTER FIELD nmck010
            {<point name="input.a.nmck010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck010
            #add-point:BEFORE FIELD nmck010
            {<point name="input.b.nmck010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck010
            #add-point:ON CHANGE nmck010
            {<point name="input.g.nmck010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck123
            #add-point:BEFORE FIELD nmck123
            {<point name="input.b.nmck123" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck123
            
            #add-point:AFTER FIELD nmck123
            {<point name="input.a.nmck123" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck123
            #add-point:ON CHANGE nmck123
            {<point name="input.g.nmck123" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck114
            #add-point:BEFORE FIELD nmck114
            {<point name="input.b.nmck114" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck114
            
            #add-point:AFTER FIELD nmck114
            {<point name="input.a.nmck114" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck114
            #add-point:ON CHANGE nmck114
            {<point name="input.g.nmck114" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck131
            #add-point:BEFORE FIELD nmck131
            {<point name="input.b.nmck131" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck131
            
            #add-point:AFTER FIELD nmck131
            {<point name="input.a.nmck131" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck131
            #add-point:ON CHANGE nmck131
            {<point name="input.g.nmck131" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck124
            #add-point:BEFORE FIELD nmck124
            {<point name="input.b.nmck124" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck124
            
            #add-point:AFTER FIELD nmck124
            {<point name="input.a.nmck124" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck124
            #add-point:ON CHANGE nmck124
            {<point name="input.g.nmck124" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck133
            #add-point:BEFORE FIELD nmck133
            {<point name="input.b.nmck133" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck133
            
            #add-point:AFTER FIELD nmck133
            {<point name="input.a.nmck133" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck133
            #add-point:ON CHANGE nmck133
            {<point name="input.g.nmck133" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck134
            #add-point:BEFORE FIELD nmck134
            {<point name="input.b.nmck134" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck134
            
            #add-point:AFTER FIELD nmck134
            {<point name="input.a.nmck134" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck134
            #add-point:ON CHANGE nmck134
            {<point name="input.g.nmck134" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck005
            
            #add-point:AFTER FIELD nmck005
            {<point name="input.a.nmck005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck005
            #add-point:BEFORE FIELD nmck005
            {<point name="input.b.nmck005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE nmck005
            #add-point:ON CHANGE nmck005
            {<point name="input.g.nmck005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck015
            #add-point:BEFORE FIELD nmck015
            {<point name="input.b.nmck015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck015
            
            #add-point:AFTER FIELD nmck015
            {<point name="input.a.nmck015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck015
            #add-point:ON CHANGE nmck015
            {<point name="input.g.nmck015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD nmck006
            #add-point:BEFORE FIELD nmck006
            {<point name="input.b.nmck006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD nmck006
            
            #add-point:AFTER FIELD nmck006
            {<point name="input.a.nmck006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE nmck006
            #add-point:ON CHANGE nmck006
            {<point name="input.g.nmck006" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.nmcksite
         ON ACTION controlp INFIELD nmcksite
            #add-point:ON ACTION controlp INFIELD nmcksite
            {<point name="input.c.nmcksite" />}
            #END add-point
 
         #Ctrlp:input.c.nmckcomp
         ON ACTION controlp INFIELD nmckcomp
            #add-point:ON ACTION controlp INFIELD nmckcomp
            {<point name="input.c.nmckcomp" />}
            #END add-point
 
         #Ctrlp:input.c.nmck003
         ON ACTION controlp INFIELD nmck003
            #add-point:ON ACTION controlp INFIELD nmck003
            {<point name="input.c.nmck003" />}
            #END add-point
 
         #Ctrlp:input.c.nmckdocno
         ON ACTION controlp INFIELD nmckdocno
            #add-point:ON ACTION controlp INFIELD nmckdocno
            {<point name="input.c.nmckdocno" />}
            #END add-point
 
         #Ctrlp:input.c.nmck002
         ON ACTION controlp INFIELD nmck002
            #add-point:ON ACTION controlp INFIELD nmck002
            {<point name="input.c.nmck002" />}
            #END add-point
 
         #Ctrlp:input.c.nmckdocdt
         ON ACTION controlp INFIELD nmckdocdt
            #add-point:ON ACTION controlp INFIELD nmckdocdt
            {<point name="input.c.nmckdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.nmck004
         ON ACTION controlp INFIELD nmck004
            #add-point:ON ACTION controlp INFIELD nmck004
            {<point name="input.c.nmck004" />}
            #END add-point
 
         #Ctrlp:input.c.nmas003
         ON ACTION controlp INFIELD nmas003
            #add-point:ON ACTION controlp INFIELD nmas003
            {<point name="input.c.nmas003" />}
            #END add-point
 
         #Ctrlp:input.c.nmck019
         ON ACTION controlp INFIELD nmck019
            #add-point:ON ACTION controlp INFIELD nmck019
            {<point name="input.c.nmck019" />}
            #END add-point
 
         #Ctrlp:input.c.nmckstus
         ON ACTION controlp INFIELD nmckstus
            #add-point:ON ACTION controlp INFIELD nmckstus
            {<point name="input.c.nmckstus" />}
            #END add-point
 
         #Ctrlp:input.c.nmck028
         ON ACTION controlp INFIELD nmck028
            #add-point:ON ACTION controlp INFIELD nmck028
            {<point name="input.c.nmck028" />}
            #END add-point
 
         #Ctrlp:input.c.nmck029
         ON ACTION controlp INFIELD nmck029
            #add-point:ON ACTION controlp INFIELD nmck029
            {<point name="input.c.nmck029" />}
            #END add-point
 
         #Ctrlp:input.c.nmck030
         ON ACTION controlp INFIELD nmck030
            #add-point:ON ACTION controlp INFIELD nmck030
            {<point name="input.c.nmck030" />}
            #END add-point
 
         #Ctrlp:input.c.nmck031
         ON ACTION controlp INFIELD nmck031
            #add-point:ON ACTION controlp INFIELD nmck031
            {<point name="input.c.nmck031" />}
            #END add-point
 
         #Ctrlp:input.c.nmck032
         ON ACTION controlp INFIELD nmck032
            #add-point:ON ACTION controlp INFIELD nmck032
            {<point name="input.c.nmck032" />}
            #END add-point
 
         #Ctrlp:input.c.nmck001
         ON ACTION controlp INFIELD nmck001
            #add-point:ON ACTION controlp INFIELD nmck001
            {<point name="input.c.nmck001" />}
            #END add-point
 
         #Ctrlp:input.c.nmck011
         ON ACTION controlp INFIELD nmck011
            #add-point:ON ACTION controlp INFIELD nmck011
            {<point name="input.c.nmck011" />}
            #END add-point
 
         #Ctrlp:input.c.nmck034
         ON ACTION controlp INFIELD nmck034
            #add-point:ON ACTION controlp INFIELD nmck034
            {<point name="input.c.nmck034" />}
            #END add-point
 
         #Ctrlp:input.c.nmck100
         ON ACTION controlp INFIELD nmck100
            #add-point:ON ACTION controlp INFIELD nmck100
            {<point name="input.c.nmck100" />}
            #END add-point
 
         #Ctrlp:input.c.nmck009
         ON ACTION controlp INFIELD nmck009
            #add-point:ON ACTION controlp INFIELD nmck009
            {<point name="input.c.nmck009" />}
            #END add-point
 
         #Ctrlp:input.c.nmck035
         ON ACTION controlp INFIELD nmck035
            #add-point:ON ACTION controlp INFIELD nmck035
            {<point name="input.c.nmck035" />}
            #END add-point
 
         #Ctrlp:input.c.nmck103
         ON ACTION controlp INFIELD nmck103
            #add-point:ON ACTION controlp INFIELD nmck103
            {<point name="input.c.nmck103" />}
            #END add-point
 
         #Ctrlp:input.c.nmck024
         ON ACTION controlp INFIELD nmck024
            #add-point:ON ACTION controlp INFIELD nmck024
            {<point name="input.c.nmck024" />}
            #END add-point
 
         #Ctrlp:input.c.nmck027
         ON ACTION controlp INFIELD nmck027
            #add-point:ON ACTION controlp INFIELD nmck027
            {<point name="input.c.nmck027" />}
            #END add-point
 
         #Ctrlp:input.c.nmck101
         ON ACTION controlp INFIELD nmck101
            #add-point:ON ACTION controlp INFIELD nmck101
            {<point name="input.c.nmck101" />}
            #END add-point
 
         #Ctrlp:input.c.nmck025
         ON ACTION controlp INFIELD nmck025
            #add-point:ON ACTION controlp INFIELD nmck025
            {<point name="input.c.nmck025" />}
            #END add-point
 
         #Ctrlp:input.c.nmck113
         ON ACTION controlp INFIELD nmck113
            #add-point:ON ACTION controlp INFIELD nmck113
            {<point name="input.c.nmck113" />}
            #END add-point
 
         #Ctrlp:input.c.nmck026
         ON ACTION controlp INFIELD nmck026
            #add-point:ON ACTION controlp INFIELD nmck026
            {<point name="input.c.nmck026" />}
            #END add-point
 
         #Ctrlp:input.c.nmck036
         ON ACTION controlp INFIELD nmck036
            #add-point:ON ACTION controlp INFIELD nmck036
            {<point name="input.c.nmck036" />}
            #END add-point
 
         #Ctrlp:input.c.nmck121
         ON ACTION controlp INFIELD nmck121
            #add-point:ON ACTION controlp INFIELD nmck121
            {<point name="input.c.nmck121" />}
            #END add-point
 
         #Ctrlp:input.c.nmck010
         ON ACTION controlp INFIELD nmck010
            #add-point:ON ACTION controlp INFIELD nmck010
            {<point name="input.c.nmck010" />}
            #END add-point
 
         #Ctrlp:input.c.nmck123
         ON ACTION controlp INFIELD nmck123
            #add-point:ON ACTION controlp INFIELD nmck123
            {<point name="input.c.nmck123" />}
            #END add-point
 
         #Ctrlp:input.c.nmck114
         ON ACTION controlp INFIELD nmck114
            #add-point:ON ACTION controlp INFIELD nmck114
            {<point name="input.c.nmck114" />}
            #END add-point
 
         #Ctrlp:input.c.nmck131
         ON ACTION controlp INFIELD nmck131
            #add-point:ON ACTION controlp INFIELD nmck131
            {<point name="input.c.nmck131" />}
            #END add-point
 
         #Ctrlp:input.c.nmck124
         ON ACTION controlp INFIELD nmck124
            #add-point:ON ACTION controlp INFIELD nmck124
            {<point name="input.c.nmck124" />}
            #END add-point
 
         #Ctrlp:input.c.nmck133
         ON ACTION controlp INFIELD nmck133
            #add-point:ON ACTION controlp INFIELD nmck133
            {<point name="input.c.nmck133" />}
            #END add-point
 
         #Ctrlp:input.c.nmck134
         ON ACTION controlp INFIELD nmck134
            #add-point:ON ACTION controlp INFIELD nmck134
            {<point name="input.c.nmck134" />}
            #END add-point
 
         #Ctrlp:input.c.nmck005
         ON ACTION controlp INFIELD nmck005
            #add-point:ON ACTION controlp INFIELD nmck005
            {<point name="input.c.nmck005" />}
            #END add-point
 
         #Ctrlp:input.c.nmck015
         ON ACTION controlp INFIELD nmck015
            #add-point:ON ACTION controlp INFIELD nmck015
            {<point name="input.c.nmck015" />}
            #END add-point
 
         #Ctrlp:input.c.nmck006
         ON ACTION controlp INFIELD nmck006
            #add-point:ON ACTION controlp INFIELD nmck006
            {<point name="input.c.nmck006" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_nmck_m.nmckcomp,g_nmck_m.nmckdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO nmck_t (nmckent,nmcksite,nmckcomp,nmck003,nmckdocno,nmck002,nmckdocdt,nmck004, 
                   nmck019,nmckstus,nmck028,nmck029,nmck030,nmck031,nmck032,nmckownid,nmckowndp,nmckcrtid, 
                   nmckcrtdp,nmckcrtdt,nmckcnfid,nmckcnfdt,nmck001,nmck011,nmck034,nmck100,nmck009,nmck035, 
                   nmck103,nmck024,nmck027,nmck101,nmck025,nmck113,nmck026,nmck036,nmck121,nmck010,nmck123, 
                   nmck114,nmck131,nmck124,nmck133,nmck134,nmck005,nmck015,nmck006)
               VALUES (g_enterprise,g_nmck_m.nmcksite,g_nmck_m.nmckcomp,g_nmck_m.nmck003,g_nmck_m.nmckdocno, 
                   g_nmck_m.nmck002,g_nmck_m.nmckdocdt,g_nmck_m.nmck004,g_nmck_m.nmck019,g_nmck_m.nmckstus, 
                   g_nmck_m.nmck028,g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031,g_nmck_m.nmck032, 
                   g_nmck_m.nmckownid,g_nmck_m.nmckowndp,g_nmck_m.nmckcrtid,g_nmck_m.nmckcrtdp,g_nmck_m.nmckcrtdt, 
                   g_nmck_m.nmckcnfid,g_nmck_m.nmckcnfdt,g_nmck_m.nmck001,g_nmck_m.nmck011,g_nmck_m.nmck034, 
                   g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035,g_nmck_m.nmck103,g_nmck_m.nmck024, 
                   g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113,g_nmck_m.nmck026, 
                   g_nmck_m.nmck036,g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck123,g_nmck_m.nmck114, 
                   g_nmck_m.nmck131,g_nmck_m.nmck124,g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005, 
                   g_nmck_m.nmck015,g_nmck_m.nmck006) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_nmck_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL anmt440_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE nmck_t SET (nmcksite,nmckcomp,nmck003,nmckdocno,nmck002,nmckdocdt,nmck004,nmck019, 
                   nmckstus,nmck028,nmck029,nmck030,nmck031,nmck032,nmckownid,nmckowndp,nmckcrtid,nmckcrtdp, 
                   nmckcrtdt,nmckcnfid,nmckcnfdt,nmck001,nmck011,nmck034,nmck100,nmck009,nmck035,nmck103, 
                   nmck024,nmck027,nmck101,nmck025,nmck113,nmck026,nmck036,nmck121,nmck010,nmck123,nmck114, 
                   nmck131,nmck124,nmck133,nmck134,nmck005,nmck015,nmck006) = (g_nmck_m.nmcksite,g_nmck_m.nmckcomp, 
                   g_nmck_m.nmck003,g_nmck_m.nmckdocno,g_nmck_m.nmck002,g_nmck_m.nmckdocdt,g_nmck_m.nmck004, 
                   g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028,g_nmck_m.nmck029,g_nmck_m.nmck030, 
                   g_nmck_m.nmck031,g_nmck_m.nmck032,g_nmck_m.nmckownid,g_nmck_m.nmckowndp,g_nmck_m.nmckcrtid, 
                   g_nmck_m.nmckcrtdp,g_nmck_m.nmckcrtdt,g_nmck_m.nmckcnfid,g_nmck_m.nmckcnfdt,g_nmck_m.nmck001, 
                   g_nmck_m.nmck011,g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035, 
                   g_nmck_m.nmck103,g_nmck_m.nmck024,g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025, 
                   g_nmck_m.nmck113,g_nmck_m.nmck026,g_nmck_m.nmck036,g_nmck_m.nmck121,g_nmck_m.nmck010, 
                   g_nmck_m.nmck123,g_nmck_m.nmck114,g_nmck_m.nmck131,g_nmck_m.nmck124,g_nmck_m.nmck133, 
                   g_nmck_m.nmck134,g_nmck_m.nmck005,g_nmck_m.nmck015,g_nmck_m.nmck006)
                WHERE nmckent = g_enterprise AND nmckcomp = g_nmckcomp_t
                  AND nmckdocno = g_nmckdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("nmck_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_nmck_m_t)
               LET g_log2 = util.JSON.stringify(g_nmck_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_nmckcomp_t = g_nmck_m.nmckcomp
            LET g_nmckdocno_t = g_nmck_m.nmckdocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="anmt440.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD nmckcomp
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD nmclseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="anmt440.insert" ver="15" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION anmt440_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_nmcl_d.clear()   
 
 
   INITIALIZE g_nmck_m.* LIKE nmck_t.*             #DEFAULT 設定
   
   LET g_nmckcomp_t = NULL
   LET g_nmckdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_nmck_m.nmckownid = g_user
      LET g_nmck_m.nmckowndp = g_dept
      LET g_nmck_m.nmckcrtid = g_user
      LET g_nmck_m.nmckcrtdp = g_dept 
      LET g_nmck_m.nmckcrtdt = cl_get_current()
      LET g_nmck_m.nmckmodid = ""
      LET g_nmck_m.nmckmoddt = ""
      LET g_nmck_m.nmckstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_nmck_m.nmckstus = "N"
      LET g_nmck_m.nmck028 = "0"
      LET g_nmck_m.nmck029 = "0"
      LET g_nmck_m.nmck031 = "0"
      LET g_nmck_m.nmck001 = "AP"
      LET g_nmck_m.nmck034 = "1"
      LET g_nmck_m.nmck027 = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL anmt440_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_nmck_m.* = g_nmck_m_t.*
         CALL anmt440_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_nmcl_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_nmckcomp_t = g_nmck_m.nmckcomp
   LET g_nmckdocno_t = g_nmck_m.nmckdocno
 
   
   LET g_wc = "(",g_wc,  
              " OR ( nmckent = '" ||g_enterprise|| "' AND",
              " nmckcomp = '", g_nmck_m.nmckcomp CLIPPED, "' "
              ," AND nmckdocno = '", g_nmck_m.nmckdocno CLIPPED, "' "
 
              , ")) "
   
   CLOSE anmt440_cl
   
END FUNCTION
]]>
</section>
  <section id="anmt440.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION anmt440_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO nmcl_t
                  (nmclent,
                   nmclcomp,nmcldocno,
                   nmclseq
                   ,nmclorga,nmcl001,nmcl002,nmcl003,nmcl103,nmcl113,nmcl121,nmcl123,nmcl131,nmcl133) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_nmcl_d[g_detail_idx].nmclorga,g_nmcl_d[g_detail_idx].nmcl001,g_nmcl_d[g_detail_idx].nmcl002, 
                       g_nmcl_d[g_detail_idx].nmcl003,g_nmcl_d[g_detail_idx].nmcl103,g_nmcl_d[g_detail_idx].nmcl113, 
                       g_nmcl_d[g_detail_idx].nmcl121,g_nmcl_d[g_detail_idx].nmcl123,g_nmcl_d[g_detail_idx].nmcl131, 
                       g_nmcl_d[g_detail_idx].nmcl133)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("nmcl_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="anmt440.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION anmt440_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL anmt440_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "nmcl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN anmt440_bcl USING g_enterprise,
                                       g_nmck_m.nmckcomp,g_nmck_m.nmckdocno,g_nmcl_d[g_detail_idx].nmclseq  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("anmt440_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="anmt440.main" ver="21" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("anm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT nmcksite,'',nmckcomp,'',nmck003,'',nmckdocno,nmck002,nmckdocdt,nmck004, 
       '','',nmck019,nmckstus,nmck028,nmck029,nmck030,nmck031,nmck032,'',nmckownid,'',nmckowndp,'',nmckcrtid, 
       '',nmckcrtdp,'',nmckcrtdt,nmckmodid,'',nmckmoddt,nmckcnfid,'',nmckcnfdt,nmck001,nmck011,nmck034, 
       nmck100,nmck009,'',nmck035,nmck103,nmck024,nmck027,nmck101,nmck025,nmck113,nmck026,nmck036,nmck121, 
       nmck010,'',nmck123,nmck114,nmck131,nmck124,nmck133,nmck134,nmck005,'',nmck015,nmck006", 
                      " FROM nmck_t",
                      " WHERE nmckent= ? AND nmckcomp=? AND nmckdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmt440_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE nmcksite,nmckcomp,nmck003,nmckdocno,nmck002,nmckdocdt,nmck004,nmck019, 
       nmckstus,nmck028,nmck029,nmck030,nmck031,nmck032,nmckownid,nmckowndp,nmckcrtid,nmckcrtdp,nmckcrtdt, 
       nmckmodid,nmckmoddt,nmckcnfid,nmckcnfdt,nmck001,nmck011,nmck034,nmck100,nmck009,nmck035,nmck103, 
       nmck024,nmck027,nmck101,nmck025,nmck113,nmck026,nmck036,nmck121,nmck010,nmck123,nmck114,nmck131, 
       nmck124,nmck133,nmck134,nmck005,nmck015,nmck006,t1.ooefl003 ,t2.ooefl003 ,t3.ooag011 ,t4.nmaal003 , 
       t5.nmabl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooefl003 ,t10.ooag011 ,t11.ooag011 ,t12.nmajl003 , 
       t13.pmaal003",
               " FROM nmck_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=nmcksite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=nmckcomp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=nmck003  ",
               " LEFT JOIN nmaal_t t4 ON t4.nmaalent='"||g_enterprise||"' AND t4.nmaal001=nmck004 AND t4.nmaal002='"||g_dlang||"' ",
               " LEFT JOIN nmabl_t t5 ON t5.nmablent='"||g_enterprise||"' AND t5.nmabl001=nmck032 AND t5.nmabl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=nmckownid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=nmckowndp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=nmckcrtid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=nmckcrtdp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=nmckmodid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=nmckcnfid  ",
               " LEFT JOIN nmajl_t t12 ON t12.nmajlent='"||g_enterprise||"' AND t12.nmajl001=nmck009 AND t12.nmajl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t13 ON t13.pmaalent='"||g_enterprise||"' AND t13.pmaal001=nmck005 AND t13.pmaal002='"||g_dlang||"' ",
 
               " WHERE nmckent = '" ||g_enterprise|| "' AND nmckcomp = ? AND nmckdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE anmt440_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_anmt440 WITH FORM cl_ap_formpath("anm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL anmt440_init()   
 
      #進入選單 Menu (="N")
      CALL anmt440_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_anmt440
      
   END IF 
   
   CLOSE anmt440_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="anmt440.modify" ver="24" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION anmt440_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_nmck_m.nmckcomp IS NULL
   OR g_nmck_m.nmckdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_nmckcomp_t = g_nmck_m.nmckcomp
   LET g_nmckdocno_t = g_nmck_m.nmckdocno
 
   CALL s_transaction_begin()
   
   OPEN anmt440_cl USING g_enterprise,g_nmck_m.nmckcomp,g_nmck_m.nmckdocno
   IF STATUS THEN
      CALL cl_err("OPEN anmt440_cl:", STATUS, 1)
      CLOSE anmt440_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmt440_master_referesh USING g_nmck_m.nmckcomp,g_nmck_m.nmckdocno INTO g_nmck_m.nmcksite, 
       g_nmck_m.nmckcomp,g_nmck_m.nmck003,g_nmck_m.nmckdocno,g_nmck_m.nmck002,g_nmck_m.nmckdocdt,g_nmck_m.nmck004, 
       g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028,g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031, 
       g_nmck_m.nmck032,g_nmck_m.nmckownid,g_nmck_m.nmckowndp,g_nmck_m.nmckcrtid,g_nmck_m.nmckcrtdp, 
       g_nmck_m.nmckcrtdt,g_nmck_m.nmckmodid,g_nmck_m.nmckmoddt,g_nmck_m.nmckcnfid,g_nmck_m.nmckcnfdt, 
       g_nmck_m.nmck001,g_nmck_m.nmck011,g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035, 
       g_nmck_m.nmck103,g_nmck_m.nmck024,g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113, 
       g_nmck_m.nmck026,g_nmck_m.nmck036,g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck123,g_nmck_m.nmck114, 
       g_nmck_m.nmck131,g_nmck_m.nmck124,g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005,g_nmck_m.nmck015, 
       g_nmck_m.nmck006,g_nmck_m.nmcksite_desc,g_nmck_m.nmckcomp_desc,g_nmck_m.nmck003_desc,g_nmck_m.nmck004_desc, 
       g_nmck_m.nmck032_desc,g_nmck_m.nmckownid_desc,g_nmck_m.nmckowndp_desc,g_nmck_m.nmckcrtid_desc, 
       g_nmck_m.nmckcrtdp_desc,g_nmck_m.nmckmodid_desc,g_nmck_m.nmckcnfid_desc,g_nmck_m.nmck009_desc, 
       g_nmck_m.nmck005_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_nmck_m.nmckcomp,SQLCA.sqlcode,0)
      CLOSE anmt440_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL anmt440_show()
   WHILE TRUE
      LET g_nmckcomp_t = g_nmck_m.nmckcomp
      LET g_nmckdocno_t = g_nmck_m.nmckdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_nmck_m.nmckmodid = g_user 
LET g_nmck_m.nmckmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL anmt440_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_nmck_m.* = g_nmck_m_t.*
         CALL anmt440_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE nmck_t SET (nmckmodid,nmckmoddt) = (g_nmck_m.nmckmodid,g_nmck_m.nmckmoddt)
       WHERE nmckent = g_enterprise AND nmckcomp = g_nmckcomp_t
         AND nmckdocno = g_nmckdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_nmck_m.nmckcomp != g_nmckcomp_t 
      OR g_nmck_m.nmckdocno != g_nmckdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE nmcl_t SET nmclcomp = g_nmck_m.nmckcomp
                                       ,nmcldocno = g_nmck_m.nmckdocno
 
          WHERE nmclent = g_enterprise AND nmclcomp = g_nmckcomp_t
            AND nmcldocno = g_nmckdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("nmcl_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("nmcl_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_nmck_m.nmckcomp,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE anmt440_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_nmck_m.nmckcomp,'U')
 
END FUNCTION   
]]>
</section>
  <section id="anmt440.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="anmt440.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="anmt440.query" ver="5" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION anmt440_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_nmcl_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL anmt440_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL anmt440_browser_fill("")
      CALL anmt440_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL anmt440_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL anmt440_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="anmt440.reproduce" ver="11" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION anmt440_reproduce()
   DEFINE l_newno     LIKE nmck_t.nmckcomp 
   DEFINE l_oldno     LIKE nmck_t.nmckcomp 
   DEFINE l_newno02     LIKE nmck_t.nmckdocno 
   DEFINE l_oldno02     LIKE nmck_t.nmckdocno 
 
   DEFINE l_master    RECORD LIKE nmck_t.*
   DEFINE l_detail    RECORD LIKE nmcl_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_nmck_m.nmckcomp IS NULL
   OR g_nmck_m.nmckdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_nmckcomp_t = g_nmck_m.nmckcomp
   LET g_nmckdocno_t = g_nmck_m.nmckdocno
 
    
   LET g_nmck_m.nmckcomp = ""
   LET g_nmck_m.nmckdocno = ""
 
    
   CALL anmt440_set_entry('a')
   CALL anmt440_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_nmck_m.nmckownid = g_user
      LET g_nmck_m.nmckowndp = g_dept
      LET g_nmck_m.nmckcrtid = g_user
      LET g_nmck_m.nmckcrtdp = g_dept 
      LET g_nmck_m.nmckcrtdt = cl_get_current()
      LET g_nmck_m.nmckmodid = ""
      LET g_nmck_m.nmckmoddt = ""
      LET g_nmck_m.nmckstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL anmt440_input("r")
   
      LET g_nmck_m.nmckcomp_desc = ''
   DISPLAY BY NAME g_nmck_m.nmckcomp_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " nmckcomp = '", g_nmck_m.nmckcomp CLIPPED, "' "
              ," AND nmckdocno = '", g_nmck_m.nmckdocno CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="anmt440.set_entry" ver="5" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION anmt440_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("nmckcomp,nmckdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="anmt440.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION anmt440_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="anmt440.set_no_entry" ver="5" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION anmt440_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("nmckcomp,nmckdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="anmt440.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION anmt440_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="anmt440.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION anmt440_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_nmck_m.nmckcomp
   LET g_pk_array[1].column = 'nmckcomp'
   LET g_pk_array[2].values = g_nmck_m.nmckdocno
   LET g_pk_array[2].column = 'nmckdocno'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="anmt440.show" ver="22" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION anmt440_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL anmt440_b_fill() #單身填充
      CALL anmt440_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_nmck_m.nmckownid_desc = cl_get_username(g_nmck_m.nmckownid)
      #LET g_nmck_m.nmckowndp_desc = cl_get_deptname(g_nmck_m.nmckowndp)
      #LET g_nmck_m.nmckcrtid_desc = cl_get_username(g_nmck_m.nmckcrtid)
      #LET g_nmck_m.nmckcrtdp_desc = cl_get_deptname(g_nmck_m.nmckcrtdp)
      #LET g_nmck_m.nmckmodid_desc = cl_get_username(g_nmck_m.nmckmodid)
      #LET g_nmck_m.nmckcnfid_desc = cl_get_deptname(g_nmck_m.nmckcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL anmt440_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_nmck_m.nmcksite,g_nmck_m.nmcksite_desc,g_nmck_m.nmckcomp,g_nmck_m.nmckcomp_desc, 
       g_nmck_m.nmck003,g_nmck_m.nmck003_desc,g_nmck_m.nmckdocno,g_nmck_m.nmck002,g_nmck_m.nmckdocdt, 
       g_nmck_m.nmck004,g_nmck_m.nmck004_desc,g_nmck_m.nmas003,g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028, 
       g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031,g_nmck_m.nmck032,g_nmck_m.nmck032_desc,g_nmck_m.nmckownid, 
       g_nmck_m.nmckownid_desc,g_nmck_m.nmckowndp,g_nmck_m.nmckowndp_desc,g_nmck_m.nmckcrtid,g_nmck_m.nmckcrtid_desc, 
       g_nmck_m.nmckcrtdp,g_nmck_m.nmckcrtdp_desc,g_nmck_m.nmckcrtdt,g_nmck_m.nmckmodid,g_nmck_m.nmckmodid_desc, 
       g_nmck_m.nmckmoddt,g_nmck_m.nmckcnfid,g_nmck_m.nmckcnfid_desc,g_nmck_m.nmckcnfdt,g_nmck_m.nmck001, 
       g_nmck_m.nmck011,g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck009_desc,g_nmck_m.nmck035, 
       g_nmck_m.nmck103,g_nmck_m.nmck024,g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113, 
       g_nmck_m.nmck026,g_nmck_m.nmck036,g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck010_desc,g_nmck_m.nmck123, 
       g_nmck_m.nmck114,g_nmck_m.nmck131,g_nmck_m.nmck124,g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005, 
       g_nmck_m.nmck005_desc,g_nmck_m.nmck015,g_nmck_m.nmck006
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_nmck_m.nmckstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_nmcl_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL anmt440_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="anmt440.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="anmt440.state_change" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION anmt440_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_nmck_m.nmckcomp IS NULL
      OR g_nmck_m.nmckdocno IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_nmck_m.nmckstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE nmck_t SET nmckstus = lc_state 
    WHERE nmckent = g_enterprise AND nmckcomp = g_nmck_m.nmckcomp
      AND nmckdocno = g_nmck_m.nmckdocno
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_nmck_m.nmckstus = lc_state
      DISPLAY BY NAME g_nmck_m.nmckstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="anmt440.ui_browser_refresh" ver="6" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION anmt440_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_nmckcomp = g_nmck_m.nmckcomp 
         AND g_browser[l_i].b_nmckdocno = g_nmck_m.nmckdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="anmt440.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION anmt440_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="anmt440.ui_dialog" ver="27" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION anmt440_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL anmt440_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL anmt440_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_nmckcomp = g_nmckcomp_t
               AND g_browser[li_idx].b_nmckdocno = g_nmckdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_nmcl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL anmt440_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL anmt440_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL anmt440_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL anmt440_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL anmt440_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL anmt440_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL anmt440_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL anmt440_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL anmt440_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            CALL anmt440_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt440_idx_chk()
            
         ON ACTION previous
            CALL anmt440_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt440_idx_chk()
            
         ON ACTION jump
            CALL anmt440_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt440_idx_chk()
            
         ON ACTION next
            CALL anmt440_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt440_idx_chk()
            
         ON ACTION last
            CALL anmt440_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmt440_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL anmt440_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL anmt440_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_anmt470
            LET g_action_choice="open_anmt470"
            IF cl_auth_chk_act("open_anmt470") THEN
               
               #add-point:ON ACTION open_anmt470
               {<point name="menu.open_anmt470" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION extension
            LET g_action_choice="extension"
            IF cl_auth_chk_act("extension") THEN
               
               #add-point:ON ACTION extension
               {<point name="menu.extension" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL anmt440_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL anmt440_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL anmt440_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL anmt440_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL anmt440_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL anmt440_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_nmck_m.nmckdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="anmt440.ui_headershow" ver="10" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION anmt440_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_nmck_m.nmckcomp = g_browser[g_current_idx].b_nmckcomp   
   LET g_nmck_m.nmckdocno = g_browser[g_current_idx].b_nmckdocno   
 
   EXECUTE anmt440_master_referesh USING g_nmck_m.nmckcomp,g_nmck_m.nmckdocno INTO g_nmck_m.nmcksite, 
       g_nmck_m.nmckcomp,g_nmck_m.nmck003,g_nmck_m.nmckdocno,g_nmck_m.nmck002,g_nmck_m.nmckdocdt,g_nmck_m.nmck004, 
       g_nmck_m.nmck019,g_nmck_m.nmckstus,g_nmck_m.nmck028,g_nmck_m.nmck029,g_nmck_m.nmck030,g_nmck_m.nmck031, 
       g_nmck_m.nmck032,g_nmck_m.nmckownid,g_nmck_m.nmckowndp,g_nmck_m.nmckcrtid,g_nmck_m.nmckcrtdp, 
       g_nmck_m.nmckcrtdt,g_nmck_m.nmckmodid,g_nmck_m.nmckmoddt,g_nmck_m.nmckcnfid,g_nmck_m.nmckcnfdt, 
       g_nmck_m.nmck001,g_nmck_m.nmck011,g_nmck_m.nmck034,g_nmck_m.nmck100,g_nmck_m.nmck009,g_nmck_m.nmck035, 
       g_nmck_m.nmck103,g_nmck_m.nmck024,g_nmck_m.nmck027,g_nmck_m.nmck101,g_nmck_m.nmck025,g_nmck_m.nmck113, 
       g_nmck_m.nmck026,g_nmck_m.nmck036,g_nmck_m.nmck121,g_nmck_m.nmck010,g_nmck_m.nmck123,g_nmck_m.nmck114, 
       g_nmck_m.nmck131,g_nmck_m.nmck124,g_nmck_m.nmck133,g_nmck_m.nmck134,g_nmck_m.nmck005,g_nmck_m.nmck015, 
       g_nmck_m.nmck006,g_nmck_m.nmcksite_desc,g_nmck_m.nmckcomp_desc,g_nmck_m.nmck003_desc,g_nmck_m.nmck004_desc, 
       g_nmck_m.nmck032_desc,g_nmck_m.nmckownid_desc,g_nmck_m.nmckowndp_desc,g_nmck_m.nmckcrtid_desc, 
       g_nmck_m.nmckcrtdp_desc,g_nmck_m.nmckmodid_desc,g_nmck_m.nmckcnfid_desc,g_nmck_m.nmck009_desc, 
       g_nmck_m.nmck005_desc
   CALL anmt440_show()
   
END FUNCTION
]]>
</section>
  <section id="anmt440.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION anmt440_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE anmt440_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="anmt440.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION anmt440_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "nmcl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE nmcl_t 
         SET (nmclcomp,nmcldocno,
              nmclseq
              ,nmclorga,nmcl001,nmcl002,nmcl003,nmcl103,nmcl113,nmcl121,nmcl123,nmcl131,nmcl133) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_nmcl_d[g_detail_idx].nmclorga,g_nmcl_d[g_detail_idx].nmcl001,g_nmcl_d[g_detail_idx].nmcl002, 
                  g_nmcl_d[g_detail_idx].nmcl003,g_nmcl_d[g_detail_idx].nmcl103,g_nmcl_d[g_detail_idx].nmcl113, 
                  g_nmcl_d[g_detail_idx].nmcl121,g_nmcl_d[g_detail_idx].nmcl123,g_nmcl_d[g_detail_idx].nmcl131, 
                  g_nmcl_d[g_detail_idx].nmcl133) 
         WHERE nmclent = g_enterprise AND nmclcomp = ps_keys_bak[1] AND nmcldocno = ps_keys_bak[2] AND nmclseq = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("nmcl_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("nmcl_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>