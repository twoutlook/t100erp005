{<section id="anmq810.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:6(2015-07-22 16:39:40), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000076
#+ Filename...: anmq810
#+ Description: 調匯明細查詢作業
#+ Creator....: 02291(2014-08-11 09:25:49)
#+ Modifier...: 06821 -SD/PR-
{</section>}



{<section id="anmq810.global" >}
#應用 q02 樣板自動產生(Version:42)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_nmde_d RECORD
       #statepic       LIKE type_t.chr1,
       
       sel LIKE type_t.chr1, 
   nmde004 LIKE type_t.chr20, 
   nmdecomp LIKE nmde_t.nmdecomp, 
   nmde100 LIKE nmde_t.nmde100, 
   d LIKE type_t.num26_10, 
   nmde101 LIKE nmde_t.nmde101, 
   nmde102 LIKE nmde_t.nmde102, 
   nmde103 LIKE nmde_t.nmde103, 
   nmde104 LIKE nmde_t.nmde104, 
   nmde105 LIKE nmde_t.nmde105, 
   nmde106 LIKE nmde_t.nmde106 
       END RECORD
PRIVATE TYPE type_g_nmde2_d RECORD
       nmde004_desc2 LIKE type_t.chr200, 
   nmdecomp LIKE nmde_t.nmdecomp, 
   nmde100 LIKE nmde_t.nmde100, 
   d2 LIKE type_t.num26_10, 
   nmde111 LIKE nmde_t.nmde111, 
   nmde113 LIKE nmde_t.nmde113, 
   nmde114 LIKE nmde_t.nmde114, 
   nmde115 LIKE nmde_t.nmde115, 
   nmde116 LIKE nmde_t.nmde116
       END RECORD

PRIVATE TYPE type_g_nmde3_d RECORD
       nmde004_desc3 LIKE type_t.chr200, 
   nmdecomp LIKE nmde_t.nmdecomp, 
   nmde100 LIKE nmde_t.nmde100, 
   d3 LIKE type_t.num26_10, 
   nmde121 LIKE nmde_t.nmde121, 
   nmde123 LIKE nmde_t.nmde123, 
   nmde124 LIKE nmde_t.nmde124, 
   nmde125 LIKE nmde_t.nmde125, 
   nmde126 LIKE nmde_t.nmde126
       END RECORD


 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_nmde_d
DEFINE g_master_t                   type_g_nmde_d
DEFINE g_nmde_d          DYNAMIC ARRAY OF type_g_nmde_d
DEFINE g_nmde_d_t        type_g_nmde_d
DEFINE g_nmde2_d   DYNAMIC ARRAY OF type_g_nmde2_d
DEFINE g_nmde2_d_t type_g_nmde2_d

DEFINE g_nmde3_d   DYNAMIC ARRAY OF type_g_nmde3_d
DEFINE g_nmde3_d_t type_g_nmde3_d


      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
DEFINE g_detail_idx         LIKE type_t.num10
DEFINE g_detail_idx2        LIKE type_t.num10
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
DEFINE g_tot_cnt            LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page        LIKE type_t.num10             #每頁筆數
DEFINE g_current_row_tot    LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_act_list      STRING                        #分頁ACTION清單
DEFINE g_page_start_num     LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num       LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_wc_filter_table    STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10


 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
##end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="anmq810.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("anm","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmq810_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE anmq810_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmq810_bcl CURSOR FROM g_forupd_sql
    

   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_anmq810 WITH FORM cl_ap_formpath("anm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL anmq810_init()   
 
      #進入選單 Menu (="N")
      CALL anmq810_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_anmq810
      
   END IF 
   
   CLOSE anmq810_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN



{</section>}
 
{<section id="anmq810.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION anmq810_init()
   #add-point:init段define-客製 name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   {<point name="init.before_function" />}
   #end add-point
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init" />}
   #end add-point
 
   CALL anmq810_default_search()  
END FUNCTION
{</section>}
 
 
{<section id="anmq810.default_search" >}
PRIVATE FUNCTION anmq810_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
 
   #add-point:default_search段開始前 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " nmdeld = '", g_argv[01], "' AND "
   END IF
 
   IF NOT cl_null(g_argv[02]) THEN
      LET g_wc = g_wc, " nmde001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET g_wc = g_wc, " nmde002 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET g_wc = g_wc, " nmde004 = '", g_argv[04], "' AND "
   END IF

 



 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段開始後 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="anmq810.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION anmq810_ui_dialog()
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   DEFINE ls_wc      STRING
   DEFINE li_idx     LIKE type_t.num10
   DEFINE lc_action_choice_old     STRING
   DEFINE lc_current_row           LIKE type_t.num10
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
                     prog       STRING,
                     actionid   STRING,
                     background LIKE type_t.chr1,
                     param      DYNAMIC ARRAY OF STRING
                     END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   {<point name="ui_dialog.before_function" />}
   #end add-point
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
         
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   LET g_detail_page_action = "detail_first"
   LET g_pagestart = 1
   LET g_current_row_tot = 1
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   IF NOT cl_null(g_wc) AND g_wc != " 1=2" THEN
      LET g_detail_idx = 1
      LET g_detail_idx2 = 1
      CALL anmq810_b_fill()
   ELSE
      CALL anmq810_query()
   END IF
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_nmde_d.clear()
         CALL g_nmde2_d.clear()

         CALL g_nmde3_d.clear()


         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 1
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL anmq810_init()
      END IF
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_nmde_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
 
               #為避免按上下筆影響執行效能，所以有作一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL anmq810_fetch()
               LET g_action_choice = lc_action_choice_old
               LET g_master_idx = l_ac
               CALL anmq810_detail_action_trans()
               #add-point:input段before row name="input.body.before_row"
               {<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            {<point name="ui_dialog.body.page1.action"/>}
            #end add-point
 
         END DISPLAY
      
         DISPLAY ARRAY g_nmde2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               LET g_current_page = 2
            
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_nmde2_d.getLength() TO FORMONLY.h_count
               CALL anmq810_fetch()
               LET g_master_idx = l_ac
               #add-point:input段before row name="input.body2.before_row"
               {<point name="input.body2.before_row"/>}
               #end add-point  
 
            #自訂ACTION(detail_show,page_2)
            
 
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
 
         END DISPLAY

         DISPLAY ARRAY g_nmde3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               LET g_current_page = 3
            
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_nmde3_d.getLength() TO FORMONLY.h_count
               CALL anmq810_fetch()
               LET g_master_idx = l_ac
               #add-point:input段before row name="input.body3.before_row"
               {<point name="input.body3.before_row"/>}
               #end add-point  
 
            #自訂ACTION(detail_show,page_3)
            
 
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
 
         END DISPLAY


         

      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL anmq810_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               #該樣板不需此段落
               CALL anmq810_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               {<point name="menu.datainfo" mark="Y"/>}
               #END add-point
               
               
            END IF
 



      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL anmq810_filter()
            #add-point:ON ACTION filter name="menu.filter"
            {<point name="menu.filter" />}
            #END add-point
 
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
 
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL anmq810_b_fill()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_nmde_d)
               LET g_export_id[1]   = "s_detail1"
               LET g_export_node[2] = base.typeInfo.create(g_nmde2_d)
               LET g_export_id[2]   = "s_detail2"

               LET g_export_node[3] = base.typeInfo.create(g_nmde3_d)
               LET g_export_id[3]   = "s_detail3"


               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL anmq810_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL anmq810_b_fill()
 
         ON ACTION detail_next                #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL anmq810_b_fill()
 
         ON ACTION detail_last                #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL anmq810_b_fill()
 
         #應用 qs19 樣板自動產生(Version:3)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_nmde_d.getLength()
               LET g_nmde_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_nmde_d.getLength()
               LET g_nmde_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_nmde_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_nmde_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_nmde_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_nmde_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
 



         
 
         #add-point:ui_dialog段自定義action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         {<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         {<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
{</section>}
 
 
{<section id="anmq810.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION anmq810_query()
   #add-point:query段define-客製 name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_wc2     LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point 
   
   #add-point:FUNCTION前置處理 name="query.before_function"
   {<point name="query.before_function" />}
   #end add-point
 
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_nmde_d.clear()
   CALL g_nmde2_d.clear()

   CALL g_nmde3_d.clear()


   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_wc_filter = " 1=1"
   LET g_detail_page_action = ""
   LET g_pagestart = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET ls_wc2 = g_wc2
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON nmde100,nmde101,nmde102,nmde103,nmde104,nmde105,nmde106,nmde111,nmde113,nmde114,nmde115,nmde116,nmde121,nmde123,nmde124,nmde125,nmde126
           FROM s_detail1[1].b_nmde100,s_detail1[1].b_nmde101,s_detail1[1].b_nmde102,s_detail1[1].b_nmde103,s_detail1[1].b_nmde104,s_detail1[1].b_nmde105,s_detail1[1].b_nmde106,s_detail2[1].b_nmde111,s_detail2[1].b_nmde113,s_detail2[1].b_nmde114,s_detail2[1].b_nmde115,s_detail2[1].b_nmde116,s_detail3[1].b_nmde121,s_detail3[1].b_nmde123,s_detail3[1].b_nmde124,s_detail3[1].b_nmde125,s_detail3[1].b_nmde126
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<sel>>----
         #----<<b_nmde004>>----
         #----<<b_nmde100>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde100
            #add-point:BEFORE FIELD b_nmde100 name="construct.b.page1.b_nmde100"
            {<point name="construct.b.page1.b_nmde100" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde100
            
            #add-point:AFTER FIELD b_nmde100 name="construct.a.page1.b_nmde100"
            {<point name="construct.a.page1.b_nmde100" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_nmde100
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde100
            #add-point:ON ACTION controlp INFIELD b_nmde100 name="construct.c.page1.b_nmde100"
            {<point name="construct.c.page1.b_nmde100" />}
            #END add-point


         #----<<d>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD d
            #add-point:BEFORE FIELD d name="construct.b.page1.d"
            {<point name="construct.b.page1.d" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD d
            
            #add-point:AFTER FIELD d name="construct.a.page1.d"
            {<point name="construct.a.page1.d" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.d
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD d
            #add-point:ON ACTION controlp INFIELD d name="construct.c.page1.d"
            {<point name="construct.c.page1.d" />}
            #END add-point


         #----<<b_nmde101>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde101
            #add-point:BEFORE FIELD b_nmde101 name="construct.b.page1.b_nmde101"
            {<point name="construct.b.page1.b_nmde101" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde101
            
            #add-point:AFTER FIELD b_nmde101 name="construct.a.page1.b_nmde101"
            {<point name="construct.a.page1.b_nmde101" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_nmde101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde101
            #add-point:ON ACTION controlp INFIELD b_nmde101 name="construct.c.page1.b_nmde101"
            {<point name="construct.c.page1.b_nmde101" />}
            #END add-point


         #----<<b_nmde102>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde102
            #add-point:BEFORE FIELD b_nmde102 name="construct.b.page1.b_nmde102"
            {<point name="construct.b.page1.b_nmde102" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde102
            
            #add-point:AFTER FIELD b_nmde102 name="construct.a.page1.b_nmde102"
            {<point name="construct.a.page1.b_nmde102" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_nmde102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde102
            #add-point:ON ACTION controlp INFIELD b_nmde102 name="construct.c.page1.b_nmde102"
            {<point name="construct.c.page1.b_nmde102" />}
            #END add-point


         #----<<b_nmde103>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde103
            #add-point:BEFORE FIELD b_nmde103 name="construct.b.page1.b_nmde103"
            {<point name="construct.b.page1.b_nmde103" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde103
            
            #add-point:AFTER FIELD b_nmde103 name="construct.a.page1.b_nmde103"
            {<point name="construct.a.page1.b_nmde103" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_nmde103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde103
            #add-point:ON ACTION controlp INFIELD b_nmde103 name="construct.c.page1.b_nmde103"
            {<point name="construct.c.page1.b_nmde103" />}
            #END add-point


         #----<<b_nmde104>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde104
            #add-point:BEFORE FIELD b_nmde104 name="construct.b.page1.b_nmde104"
            {<point name="construct.b.page1.b_nmde104" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde104
            
            #add-point:AFTER FIELD b_nmde104 name="construct.a.page1.b_nmde104"
            {<point name="construct.a.page1.b_nmde104" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_nmde104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde104
            #add-point:ON ACTION controlp INFIELD b_nmde104 name="construct.c.page1.b_nmde104"
            {<point name="construct.c.page1.b_nmde104" />}
            #END add-point


         #----<<b_nmde105>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde105
            #add-point:BEFORE FIELD b_nmde105 name="construct.b.page1.b_nmde105"
            {<point name="construct.b.page1.b_nmde105" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde105
            
            #add-point:AFTER FIELD b_nmde105 name="construct.a.page1.b_nmde105"
            {<point name="construct.a.page1.b_nmde105" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_nmde105
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde105
            #add-point:ON ACTION controlp INFIELD b_nmde105 name="construct.c.page1.b_nmde105"
            {<point name="construct.c.page1.b_nmde105" />}
            #END add-point


         #----<<b_nmde106>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde106
            #add-point:BEFORE FIELD b_nmde106 name="construct.b.page1.b_nmde106"
            {<point name="construct.b.page1.b_nmde106" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde106
            
            #add-point:AFTER FIELD b_nmde106 name="construct.a.page1.b_nmde106"
            {<point name="construct.a.page1.b_nmde106" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_nmde106
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde106
            #add-point:ON ACTION controlp INFIELD b_nmde106 name="construct.c.page1.b_nmde106"
            {<point name="construct.c.page1.b_nmde106" />}
            #END add-point


         #----<<nmde004_desc2>>----
         #----<<d2>>----
         #----<<b_nmde111>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde111
            #add-point:BEFORE FIELD b_nmde111 name="construct.b.page2.b_nmde111"
            {<point name="construct.b.page2.b_nmde111" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde111
            
            #add-point:AFTER FIELD b_nmde111 name="construct.a.page2.b_nmde111"
            {<point name="construct.a.page2.b_nmde111" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.b_nmde111
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde111
            #add-point:ON ACTION controlp INFIELD b_nmde111 name="construct.c.page2.b_nmde111"
            {<point name="construct.c.page2.b_nmde111" />}
            #END add-point


         #----<<b_nmde113>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde113
            #add-point:BEFORE FIELD b_nmde113 name="construct.b.page2.b_nmde113"
            {<point name="construct.b.page2.b_nmde113" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde113
            
            #add-point:AFTER FIELD b_nmde113 name="construct.a.page2.b_nmde113"
            {<point name="construct.a.page2.b_nmde113" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.b_nmde113
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde113
            #add-point:ON ACTION controlp INFIELD b_nmde113 name="construct.c.page2.b_nmde113"
            {<point name="construct.c.page2.b_nmde113" />}
            #END add-point


         #----<<b_nmde114>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde114
            #add-point:BEFORE FIELD b_nmde114 name="construct.b.page2.b_nmde114"
            {<point name="construct.b.page2.b_nmde114" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde114
            
            #add-point:AFTER FIELD b_nmde114 name="construct.a.page2.b_nmde114"
            {<point name="construct.a.page2.b_nmde114" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.b_nmde114
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde114
            #add-point:ON ACTION controlp INFIELD b_nmde114 name="construct.c.page2.b_nmde114"
            {<point name="construct.c.page2.b_nmde114" />}
            #END add-point


         #----<<b_nmde115>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde115
            #add-point:BEFORE FIELD b_nmde115 name="construct.b.page2.b_nmde115"
            {<point name="construct.b.page2.b_nmde115" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde115
            
            #add-point:AFTER FIELD b_nmde115 name="construct.a.page2.b_nmde115"
            {<point name="construct.a.page2.b_nmde115" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.b_nmde115
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde115
            #add-point:ON ACTION controlp INFIELD b_nmde115 name="construct.c.page2.b_nmde115"
            {<point name="construct.c.page2.b_nmde115" />}
            #END add-point


         #----<<b_nmde116>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde116
            #add-point:BEFORE FIELD b_nmde116 name="construct.b.page2.b_nmde116"
            {<point name="construct.b.page2.b_nmde116" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde116
            
            #add-point:AFTER FIELD b_nmde116 name="construct.a.page2.b_nmde116"
            {<point name="construct.a.page2.b_nmde116" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.b_nmde116
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde116
            #add-point:ON ACTION controlp INFIELD b_nmde116 name="construct.c.page2.b_nmde116"
            {<point name="construct.c.page2.b_nmde116" />}
            #END add-point


         #----<<nmde004_desc3>>----
         #----<<d3>>----
         #----<<b_nmde121>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde121
            #add-point:BEFORE FIELD b_nmde121 name="construct.b.page3.b_nmde121"
            {<point name="construct.b.page3.b_nmde121" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde121
            
            #add-point:AFTER FIELD b_nmde121 name="construct.a.page3.b_nmde121"
            {<point name="construct.a.page3.b_nmde121" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.b_nmde121
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde121
            #add-point:ON ACTION controlp INFIELD b_nmde121 name="construct.c.page3.b_nmde121"
            {<point name="construct.c.page3.b_nmde121" />}
            #END add-point


         #----<<b_nmde123>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde123
            #add-point:BEFORE FIELD b_nmde123 name="construct.b.page3.b_nmde123"
            {<point name="construct.b.page3.b_nmde123" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde123
            
            #add-point:AFTER FIELD b_nmde123 name="construct.a.page3.b_nmde123"
            {<point name="construct.a.page3.b_nmde123" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.b_nmde123
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde123
            #add-point:ON ACTION controlp INFIELD b_nmde123 name="construct.c.page3.b_nmde123"
            {<point name="construct.c.page3.b_nmde123" />}
            #END add-point


         #----<<b_nmde124>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde124
            #add-point:BEFORE FIELD b_nmde124 name="construct.b.page3.b_nmde124"
            {<point name="construct.b.page3.b_nmde124" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde124
            
            #add-point:AFTER FIELD b_nmde124 name="construct.a.page3.b_nmde124"
            {<point name="construct.a.page3.b_nmde124" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.b_nmde124
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde124
            #add-point:ON ACTION controlp INFIELD b_nmde124 name="construct.c.page3.b_nmde124"
            {<point name="construct.c.page3.b_nmde124" />}
            #END add-point


         #----<<b_nmde125>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde125
            #add-point:BEFORE FIELD b_nmde125 name="construct.b.page3.b_nmde125"
            {<point name="construct.b.page3.b_nmde125" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde125
            
            #add-point:AFTER FIELD b_nmde125 name="construct.a.page3.b_nmde125"
            {<point name="construct.a.page3.b_nmde125" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.b_nmde125
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde125
            #add-point:ON ACTION controlp INFIELD b_nmde125 name="construct.c.page3.b_nmde125"
            {<point name="construct.c.page3.b_nmde125" />}
            #END add-point


         #----<<b_nmde126>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_nmde126
            #add-point:BEFORE FIELD b_nmde126 name="construct.b.page3.b_nmde126"
            {<point name="construct.b.page3.b_nmde126" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_nmde126
            
            #add-point:AFTER FIELD b_nmde126 name="construct.a.page3.b_nmde126"
            {<point name="construct.a.page3.b_nmde126" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.b_nmde126
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde126
            #add-point:ON ACTION controlp INFIELD b_nmde126 name="construct.c.page3.b_nmde126"
            {<point name="construct.c.page3.b_nmde126" />}
            #END add-point


   
       
      END CONSTRUCT
      

      

  
      #add-point:query段more_construct name="query.more_construct"
      {<point name="query.more_construct"/>}
      #end add-point 
 
      ON ACTION accept
         #add-point:ON ACTION accept name="query.accept"
         {<point name="query.accept"/>}
         #end add-point
 
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
 
      #add-point:query段查詢方案相關ACTION設定前 name="query.set_qbe_action_before"
      {<point name="query.set_qbe_action_before" mark="Y"/>}
      #end add-point 
 
      ON ACTION qbeclear   # 條件清除
         CLEAR FORM
         #add-point:條件清除後 name="query.qbeclear"
         {<point name="query.qbeclear"/>}
         #end add-point 
 
      #add-point:query段查詢方案相關ACTION設定後 name="query.set_qbe_action_after"
      {<point name="query.set_qbe_action_after"/>}
      #end add-point 
 
   END DIALOG
 
   
 
   LET g_wc = g_wc_table 


   
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 

 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = " 1=2"
      LET g_wc2 = " 1=1"
      LET g_wc_filter = g_wc_filter_t
      RETURN
   ELSE
      LET g_master_idx = 1
   END IF
        
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL anmq810_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = -100 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
{</section>}
 
{<section id="anmq810.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION anmq810_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE ls_wc2          STRING
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter, cl_sql_auth_filter()   #(ver:40) add cl_sql_auth_filter()
 
   LET ls_sql_rank = "SELECT  UNIQUE '','','',nmde100,'',nmde101,nmde102,nmde103,nmde104,nmde105,nmde106,'','','','',nmde111,nmde113,nmde114,nmde115,nmde116,'','','','',nmde121,nmde123,nmde124,nmde125,nmde126  ,DENSE_RANK() OVER( ORDER BY nmde_t.nmdeld,nmde_t.nmde001,nmde_t.nmde002,nmde_t.nmde004) AS RANK FROM nmde_t",


                     "",
                     " WHERE nmdeent= ? AND 1=1 AND ", ls_wc
    
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("nmde_t"),
                     " ORDER BY nmde_t.nmdeld,nmde_t.nmde001,nmde_t.nmde002,nmde_t.nmde004"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   {<point name="b_fill.rank_sql_after"/>}
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   {<point name="b_fill.rank_sql_after_count"/>}
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '','','',nmde100,'',nmde101,nmde102,nmde103,nmde104,nmde105,nmde106,'','','','',nmde111,nmde113,nmde114,nmde115,nmde116,'','','','',nmde121,nmde123,nmde124,nmde125,nmde126",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE anmq810_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR anmq810_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_nmde_d.clear()
   CALL g_nmde2_d.clear()   

   CALL g_nmde3_d.clear()   


   #add-point:陣列清空 name="b_fill.array_clear"
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1   
 
   FOREACH b_fill_curs INTO g_nmde_d[l_ac].sel,g_nmde_d[l_ac].nmde004,g_nmde_d[l_ac].nmdecomp,g_nmde_d[l_ac].nmde100,g_nmde_d[l_ac].d,g_nmde_d[l_ac].nmde101,g_nmde_d[l_ac].nmde102,g_nmde_d[l_ac].nmde103,g_nmde_d[l_ac].nmde104,g_nmde_d[l_ac].nmde105,g_nmde_d[l_ac].nmde106,g_nmde2_d[l_ac].nmde004_desc2,g_nmde2_d[l_ac].nmdecomp,g_nmde2_d[l_ac].nmde100,g_nmde2_d[l_ac].d2,g_nmde2_d[l_ac].nmde111,g_nmde2_d[l_ac].nmde113,g_nmde2_d[l_ac].nmde114,g_nmde2_d[l_ac].nmde115,g_nmde2_d[l_ac].nmde116,g_nmde3_d[l_ac].nmde004_desc3,g_nmde3_d[l_ac].nmdecomp,g_nmde3_d[l_ac].nmde100,g_nmde3_d[l_ac].d3,g_nmde3_d[l_ac].nmde121,g_nmde3_d[l_ac].nmde123,g_nmde3_d[l_ac].nmde124,g_nmde3_d[l_ac].nmde125,g_nmde3_d[l_ac].nmde126
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #LET g_nmde_d[l_ac].statepic = cl_get_actipic(g_nmde_d[l_ac].statepic)
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL anmq810_detail_show("'1'")      
 
      CALL anmq810_nmde_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
      
   END FOREACH
   LET g_error_show = 0
   

   
   CALL g_nmde_d.deleteElement(g_nmde_d.getLength())   
   CALL g_nmde2_d.deleteElement(g_nmde2_d.getLength())

   CALL g_nmde3_d.deleteElement(g_nmde3_d.getLength())


   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = g_nmde_d.getLength()
#  DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE anmq810_pb
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL anmq810_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL anmq810_detail_action_trans()
 
   IF g_nmde_d.getLength() > 0 THEN
      LET l_ac = 1
      CALL anmq810_fetch()
   END IF
   
      CALL anmq810_filter_show('nmde100','b_nmde100')
   CALL anmq810_filter_show('nmde101','b_nmde101')
   CALL anmq810_filter_show('nmde102','b_nmde102')
   CALL anmq810_filter_show('nmde103','b_nmde103')
   CALL anmq810_filter_show('nmde104','b_nmde104')
   CALL anmq810_filter_show('nmde105','b_nmde105')
   CALL anmq810_filter_show('nmde106','b_nmde106')
   CALL anmq810_filter_show('nmde111','b_nmde111')
   CALL anmq810_filter_show('nmde113','b_nmde113')
   CALL anmq810_filter_show('nmde114','b_nmde114')
   CALL anmq810_filter_show('nmde115','b_nmde115')
   CALL anmq810_filter_show('nmde116','b_nmde116')
   CALL anmq810_filter_show('nmde121','b_nmde121')
   CALL anmq810_filter_show('nmde123','b_nmde123')
   CALL anmq810_filter_show('nmde124','b_nmde124')
   CALL anmq810_filter_show('nmde125','b_nmde125')
   CALL anmq810_filter_show('nmde126','b_nmde126')

 
   #add-point:b_fill段結束前 name="b_fill.after"
   {<point name="b_fill.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="anmq810.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION anmq810_fetch()
   #add-point:fetch段define-客製 name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point
   
   #add-point:FUNCTION前置處理 name="fetch.before_function"
   {<point name="fetch.before_function" />}
   #end add-point
 

   #add-point:陣列清空 name="fetch.array_clear"
   {<point name="fetch.array_clear" />}
   #end add-point
   
   LET li_ac = l_ac 
   

   
   #add-point:單身填充後 name="fetch.after_fill"
   {<point name="fetch.after_fill" />}
   #end add-point 
   

   #add-point:陣列筆數調整 name="fetch.array_deleteElement"
   {<point name="fetch.array_deleteElement" />}
   #end add-point
 
   LET l_ac = li_ac
   
END FUNCTION
{</section>}
 
{<section id="anmq810.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION anmq810_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference name="detail_show.body.reference"
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
   
   IF ps_page.getIndexOf("'2'",1) > 0 THEN
      #帶出公用欄位reference值page2
      
 
      #add-point:show段單身reference name="detail_show.body2.reference"
      {<point name="detail_show.body2.reference"/>}
      #end add-point
   END IF

   IF ps_page.getIndexOf("'3'",1) > 0 THEN
      #帶出公用欄位reference值page3
      
 
      #add-point:show段單身reference name="detail_show.body3.reference"
      {<point name="detail_show.body3.reference"/>}
      #end add-point
   END IF


 
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="anmq810.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION anmq810_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point
   
   #add-point:FUNCTION前置處理 name="filter.before_function"
   {<point name="filter.before_function" />}
   #end add-point
 
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON nmde100,nmde101,nmde102,nmde103,nmde104,nmde105,nmde106,nmde111,nmde113,nmde114,nmde115,nmde116,nmde121,nmde123,nmde124,nmde125,nmde126
                          FROM s_detail1[1].b_nmde100,s_detail1[1].b_nmde101,s_detail1[1].b_nmde102,s_detail1[1].b_nmde103,s_detail1[1].b_nmde104,s_detail1[1].b_nmde105,s_detail1[1].b_nmde106,s_detail2[1].b_nmde111,s_detail2[1].b_nmde113,s_detail2[1].b_nmde114,s_detail2[1].b_nmde115,s_detail2[1].b_nmde116,s_detail3[1].b_nmde121,s_detail3[1].b_nmde123,s_detail3[1].b_nmde124,s_detail3[1].b_nmde125,s_detail3[1].b_nmde126
 
         BEFORE CONSTRUCT
                     DISPLAY anmq810_filter_parser('nmde100') TO s_detail1[1].b_nmde100
            DISPLAY anmq810_filter_parser('nmde101') TO s_detail1[1].b_nmde101
            DISPLAY anmq810_filter_parser('nmde102') TO s_detail1[1].b_nmde102
            DISPLAY anmq810_filter_parser('nmde103') TO s_detail1[1].b_nmde103
            DISPLAY anmq810_filter_parser('nmde104') TO s_detail1[1].b_nmde104
            DISPLAY anmq810_filter_parser('nmde105') TO s_detail1[1].b_nmde105
            DISPLAY anmq810_filter_parser('nmde106') TO s_detail1[1].b_nmde106
            DISPLAY anmq810_filter_parser('nmde111') TO s_detail2[1].b_nmde111
            DISPLAY anmq810_filter_parser('nmde113') TO s_detail2[1].b_nmde113
            DISPLAY anmq810_filter_parser('nmde114') TO s_detail2[1].b_nmde114
            DISPLAY anmq810_filter_parser('nmde115') TO s_detail2[1].b_nmde115
            DISPLAY anmq810_filter_parser('nmde116') TO s_detail2[1].b_nmde116
            DISPLAY anmq810_filter_parser('nmde121') TO s_detail3[1].b_nmde121
            DISPLAY anmq810_filter_parser('nmde123') TO s_detail3[1].b_nmde123
            DISPLAY anmq810_filter_parser('nmde124') TO s_detail3[1].b_nmde124
            DISPLAY anmq810_filter_parser('nmde125') TO s_detail3[1].b_nmde125
            DISPLAY anmq810_filter_parser('nmde126') TO s_detail3[1].b_nmde126

 
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #----<<sel>>----
         #----<<b_nmde004>>----
         #----<<b_nmde100>>----
         #Ctrlp:construct.c.filter.page1.b_nmde100
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde100
            #add-point:ON ACTION controlp INFIELD b_nmde100 name="construct.c.filter.page1.b_nmde100"
            {<point name="construct.c.filter.page1.b_nmde100" />}
            #END add-point


         #----<<d>>----
         #Ctrlp:construct.c.filter.page1.d
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD d
            #add-point:ON ACTION controlp INFIELD d name="construct.c.filter.page1.d"
            {<point name="construct.c.filter.page1.d" />}
            #END add-point


         #----<<b_nmde101>>----
         #Ctrlp:construct.c.filter.page1.b_nmde101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde101
            #add-point:ON ACTION controlp INFIELD b_nmde101 name="construct.c.filter.page1.b_nmde101"
            {<point name="construct.c.filter.page1.b_nmde101" />}
            #END add-point


         #----<<b_nmde102>>----
         #Ctrlp:construct.c.filter.page1.b_nmde102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde102
            #add-point:ON ACTION controlp INFIELD b_nmde102 name="construct.c.filter.page1.b_nmde102"
            {<point name="construct.c.filter.page1.b_nmde102" />}
            #END add-point


         #----<<b_nmde103>>----
         #Ctrlp:construct.c.filter.page1.b_nmde103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde103
            #add-point:ON ACTION controlp INFIELD b_nmde103 name="construct.c.filter.page1.b_nmde103"
            {<point name="construct.c.filter.page1.b_nmde103" />}
            #END add-point


         #----<<b_nmde104>>----
         #Ctrlp:construct.c.filter.page1.b_nmde104
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde104
            #add-point:ON ACTION controlp INFIELD b_nmde104 name="construct.c.filter.page1.b_nmde104"
            {<point name="construct.c.filter.page1.b_nmde104" />}
            #END add-point


         #----<<b_nmde105>>----
         #Ctrlp:construct.c.filter.page1.b_nmde105
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde105
            #add-point:ON ACTION controlp INFIELD b_nmde105 name="construct.c.filter.page1.b_nmde105"
            {<point name="construct.c.filter.page1.b_nmde105" />}
            #END add-point


         #----<<b_nmde106>>----
         #Ctrlp:construct.c.filter.page1.b_nmde106
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde106
            #add-point:ON ACTION controlp INFIELD b_nmde106 name="construct.c.filter.page1.b_nmde106"
            {<point name="construct.c.filter.page1.b_nmde106" />}
            #END add-point


         #----<<nmde004_desc2>>----
         #----<<d2>>----
         #----<<b_nmde111>>----
         #Ctrlp:construct.c.filter.page2.b_nmde111
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde111
            #add-point:ON ACTION controlp INFIELD b_nmde111 name="construct.c.filter.page2.b_nmde111"
            {<point name="construct.c.filter.page2.b_nmde111" />}
            #END add-point


         #----<<b_nmde113>>----
         #Ctrlp:construct.c.filter.page2.b_nmde113
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde113
            #add-point:ON ACTION controlp INFIELD b_nmde113 name="construct.c.filter.page2.b_nmde113"
            {<point name="construct.c.filter.page2.b_nmde113" />}
            #END add-point


         #----<<b_nmde114>>----
         #Ctrlp:construct.c.filter.page2.b_nmde114
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde114
            #add-point:ON ACTION controlp INFIELD b_nmde114 name="construct.c.filter.page2.b_nmde114"
            {<point name="construct.c.filter.page2.b_nmde114" />}
            #END add-point


         #----<<b_nmde115>>----
         #Ctrlp:construct.c.filter.page2.b_nmde115
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde115
            #add-point:ON ACTION controlp INFIELD b_nmde115 name="construct.c.filter.page2.b_nmde115"
            {<point name="construct.c.filter.page2.b_nmde115" />}
            #END add-point


         #----<<b_nmde116>>----
         #Ctrlp:construct.c.filter.page2.b_nmde116
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde116
            #add-point:ON ACTION controlp INFIELD b_nmde116 name="construct.c.filter.page2.b_nmde116"
            {<point name="construct.c.filter.page2.b_nmde116" />}
            #END add-point


         #----<<nmde004_desc3>>----
         #----<<d3>>----
         #----<<b_nmde121>>----
         #Ctrlp:construct.c.filter.page3.b_nmde121
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde121
            #add-point:ON ACTION controlp INFIELD b_nmde121 name="construct.c.filter.page3.b_nmde121"
            {<point name="construct.c.filter.page3.b_nmde121" />}
            #END add-point


         #----<<b_nmde123>>----
         #Ctrlp:construct.c.filter.page3.b_nmde123
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde123
            #add-point:ON ACTION controlp INFIELD b_nmde123 name="construct.c.filter.page3.b_nmde123"
            {<point name="construct.c.filter.page3.b_nmde123" />}
            #END add-point


         #----<<b_nmde124>>----
         #Ctrlp:construct.c.filter.page3.b_nmde124
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde124
            #add-point:ON ACTION controlp INFIELD b_nmde124 name="construct.c.filter.page3.b_nmde124"
            {<point name="construct.c.filter.page3.b_nmde124" />}
            #END add-point


         #----<<b_nmde125>>----
         #Ctrlp:construct.c.filter.page3.b_nmde125
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde125
            #add-point:ON ACTION controlp INFIELD b_nmde125 name="construct.c.filter.page3.b_nmde125"
            {<point name="construct.c.filter.page3.b_nmde125" />}
            #END add-point


         #----<<b_nmde126>>----
         #Ctrlp:construct.c.filter.page3.b_nmde126
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_nmde126
            #add-point:ON ACTION controlp INFIELD b_nmde126 name="construct.c.filter.page3.b_nmde126"
            {<point name="construct.c.filter.page3.b_nmde126" />}
            #END add-point


   
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
      LET g_wc_filter_t = g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL anmq810_filter_show('nmde100','b_nmde100')
   CALL anmq810_filter_show('nmde101','b_nmde101')
   CALL anmq810_filter_show('nmde102','b_nmde102')
   CALL anmq810_filter_show('nmde103','b_nmde103')
   CALL anmq810_filter_show('nmde104','b_nmde104')
   CALL anmq810_filter_show('nmde105','b_nmde105')
   CALL anmq810_filter_show('nmde106','b_nmde106')
   CALL anmq810_filter_show('nmde111','b_nmde111')
   CALL anmq810_filter_show('nmde113','b_nmde113')
   CALL anmq810_filter_show('nmde114','b_nmde114')
   CALL anmq810_filter_show('nmde115','b_nmde115')
   CALL anmq810_filter_show('nmde116','b_nmde116')
   CALL anmq810_filter_show('nmde121','b_nmde121')
   CALL anmq810_filter_show('nmde123','b_nmde123')
   CALL anmq810_filter_show('nmde124','b_nmde124')
   CALL anmq810_filter_show('nmde125','b_nmde125')
   CALL anmq810_filter_show('nmde126','b_nmde126')

    
   CALL anmq810_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
{</section>}
    
{<section id="anmq810.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION anmq810_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   {<point name="filter_parser.before_function" />}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
{</section>}
 
{<section id="anmq810.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION anmq810_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   {<point name="filter_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   {<point name="filter_show.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   {<point name="filter_show.before_function" />}
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = anmq810_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
{</section>}
 
{<section id="anmq810.insert" >}
#+ insert
PRIVATE FUNCTION anmq810_insert()
   #add-point:insert段define-客製 name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:insert段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control name="insert.control"
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="anmq810.modify" >}
#+ modify
PRIVATE FUNCTION anmq810_modify()
   #add-point:modify段define-客製 name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:modify段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control name="modify.control"
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
{<section id="anmq810.reproduce" >}
#+ reproduce
PRIVATE FUNCTION anmq810_reproduce()
   #add-point:reproduce段define-客製 name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:reproduce段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control name="reproduce.control"
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
{<section id="anmq810.delete" >}
#+ delete
PRIVATE FUNCTION anmq810_delete()
   #add-point:delete段define-客製 name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:delete段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control name="delete.control"
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
 
 
{<section id="anmq810.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION anmq810_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   {<point name="detail_action_trans.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   {<point name="detail_action_trans.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   {<point name="detail_action_trans.before_function" />}
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION
{</section>}
 
{<section id="anmq810.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION anmq810_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="deatil_index_setting.define_customerization"
   {<point name="deatil_index_setting.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   {<point name="detail_index_setting.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   {<point name="detail_index_setting.before_function" />}
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_nmde_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_nmde_d.getLength() AND g_nmde_d.getLength() > 0
            LET g_detail_idx = g_nmde_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_nmde_d.getLength() THEN
               LET g_detail_idx = g_nmde_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION
{</section>}
 
{<section id="anmq810.mask_functions" >}
 &include "erp/anm/anmq810_mask.4gl"
{</section>}
 
{<section id="anmq810.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 

