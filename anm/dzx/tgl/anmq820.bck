#該程式已解開Section, 不再透過樣板產出!
{<section id="anmq820.description" >}
#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000142
#+ 
#+ Filename...: anmq820
#+ Description: 銀行資金各期進出查詢
#+ Creator....: 04152(2014-08-06 10:36:54)
#+ Modifier...: 01251(2014-12-10 15:50:57) -SD/PR-

{</section>}

{<section id="anmq820.global" >}
#應用 q01 樣板自動產生(Version:12)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_nmaa_d RECORD
       
       sel LIKE type_t.chr1, 
   nmaa001 LIKE nmaa_t.nmaa001, 
   nmaa002 LIKE nmaa_t.nmaa002, 
   nmaa002_desc LIKE type_t.chr500, 
   nmaa003 LIKE nmaa_t.nmaa003, 
   nmaa003_desc LIKE type_t.chr500, 
   nmas002 LIKE nmas_t.nmas002, 
   nmas003 LIKE nmas_t.nmas003
       END RECORD
PRIVATE TYPE type_g_nmaa2_d RECORD
       nmbx002 LIKE nmbx_t.nmbx002, 
   l_ori_begin LIKE type_t.num20_6, 
   nmbx103 LIKE nmbx_t.nmbx103, 
   nmbx104 LIKE nmbx_t.nmbx104, 
   l_ori_end LIKE type_t.num20_6, 
   l_loc_begin LIKE type_t.num20_6, 
   nmbx113 LIKE nmbx_t.nmbx113, 
   nmbx114 LIKE nmbx_t.nmbx114, 
   nmde105 LIKE nmde_t.nmde105,   #fengmy160514    
   l_loc_end LIKE type_t.num20_6
       END RECORD
 
PRIVATE TYPE type_g_nmaa3_d RECORD
       l_nmbx0022 LIKE type_t.chr500, 
   l_loc_begin2 LIKE type_t.num20_6, 
   nmbx123 LIKE nmbx_t.nmbx123, 
   nmbx124 LIKE nmbx_t.nmbx124, 
   l_loc_end2 LIKE type_t.num20_6, 
   l_loc_begin3 LIKE type_t.num20_6, 
   nmbx133 LIKE nmbx_t.nmbx133, 
   nmbx134 LIKE nmbx_t.nmbx134, 
   l_loc_end3 LIKE type_t.num20_6, 
   l_nmbxcomp LIKE type_t.chr500
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_nmaa_d            DYNAMIC ARRAY OF type_g_nmaa_d
DEFINE g_nmaa_d_t          type_g_nmaa_d
DEFINE g_nmaa2_d     DYNAMIC ARRAY OF type_g_nmaa2_d
DEFINE g_nmaa2_d_t   type_g_nmaa2_d
 
DEFINE g_nmaa3_d     DYNAMIC ARRAY OF type_g_nmaa3_d
DEFINE g_nmaa3_d_t   type_g_nmaa3_d
 
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
 
#多table用wc
DEFINE g_wc_table           STRING
 
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
DEFINE g_wc2_filter_table2   STRING
 
 
 
#add-point:自定義模組變數-標準(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
#add-point:自定義模組變數-客製(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
##end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="anmq820.main" >}
#應用 a26 樣板自動產生(Version:3)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("anm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmq820_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE anmq820_master_referesh FROM g_sql
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmq820_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_anmq820 WITH FORM cl_ap_formpath("anm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL anmq820_init()   
 
      #進入選單 Menu (="N")
      CALL anmq820_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_anmq820
      
   END IF 
   
   CLOSE anmq820_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 

{</section>}

{<section id="anmq820.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION anmq820_init()
   #add-point:init段define-標準
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define-客製
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
#  LET g_selcolor    = "#D0E7FD"
   
     
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
 
   CALL anmq820_default_search()
END FUNCTION

{</section>}

{<section id="anmq820.default_search" >}
PRIVATE FUNCTION anmq820_default_search()
   #add-point:default_search段define-標準
   {<point name="default_search.define" edit="s"/>}
   #end add-point
   #add-point:default_search段define-客製
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point
 
 
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:2)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " nmaa001 = '", g_argv[01], "' AND "
   END IF
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="anmq820.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION anmq820_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old   STRING
   #add-point:ui_dialog段define-標準
{<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define-客製
{<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_row = 0
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL anmq820_b_fill()
  
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_nmaa_d.clear()
         CALL g_nmaa2_d.clear()
 
         CALL g_nmaa3_d.clear()
 
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
 
         CALL anmq820_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落
{<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落
{<point name="ui_dialog.construct" mark="Y"/>}
         #end add-point
     
         DISPLAY ARRAY g_nmaa_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_nmaa_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               #為避免按上下筆時影響執行效能，所以做一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL anmq820_b_fill2()
               LET g_action_choice = lc_action_choice_old
 
               #add-point:input段before row
{<point name="input.body.before_row" mark="Y"/>}
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
         END DISPLAY
 
         DISPLAY ARRAY g_nmaa2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 2
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
               #add-point:input段before row
{<point name="input.body2.before_row" mark="Y"/>}
               #end add-point
            #自訂ACTION(detail_show,page_2)
            
         END DISPLAY
 
         DISPLAY ARRAY g_nmaa3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 3
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
               #add-point:input段before row
{<point name="input.body3.before_row" mark="Y"/>}
               #end add-point
            #自訂ACTION(detail_show,page_3)
            
         END DISPLAY
 
 
 
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         BEFORE DIALOG
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before dialog
{<point name="ui_dialog.bef_dialog"/>}
            #end add-point
            NEXT FIELD nmbxcomp
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog
{<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) OR g_wc=" 1=2" THEN   #2015/03/23---add->g_wc=" 1=2"
               LET g_wc = " 1=1"
            END IF
 
            IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
               LET g_wc = g_wc, " AND ", g_wc2_table2
            END IF
 
 
         
            LET g_wc2 = " 1=1"
            IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
               LET g_wc2 = g_wc2, " AND ", g_wc2_table2
            END IF
 
 
            CALL anmq820_b_fill()
 
            IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = -100
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF
      
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
{<point name="ui_dialog.agendum"/>}
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_nmaa_d)
               LET g_export_id[1]   = "s_detail1"
               LET g_export_node[2] = base.typeInfo.create(g_nmaa2_d)
               LET g_export_id[2]   = "s_detail2"
 
               LET g_export_node[3] = base.typeInfo.create(g_nmaa3_d)
               LET g_export_id[3]   = "s_detail3"
 
 
               #add-point:ON ACTION exporttoexcel
{<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
         ON ACTION datarefresh   # 重新整理
            CALL anmq820_b_fill()
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         #應用 qs19 樣板自動產生(Version:2)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_nmaa_d.getLength()
               LET g_nmaa_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
{<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_nmaa_d.getLength()
               LET g_nmaa_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
{<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_nmaa_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_nmaa_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
{<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_nmaa_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_nmaa_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
{<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
 
 
 
         #應用 qs16 樣板自動產生(Version:2)
         ON ACTION filter
            LET g_action_choice="filter"
            CALL anmq820_filter()
            #add-point:ON ACTION filter
{<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
 
 
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               
               EXIT DIALOG
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               
               EXIT DIALOG
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
{<point name="menu.datainfo" />}
               #END add-point
               
               EXIT DIALOG
            END IF
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前
{<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後
{<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         #add-point:查詢方案相關ACTION設定後
{<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION

{</section>}

{<section id="anmq820.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION anmq820_b_fill()
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   #add-point:b_fill段define-標準
   {<point name="b_fill.define" edit="s"/>}
   #end add-point
   #add-point:b_fill段define-客製
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
 
   CALL g_nmaa_d.clear()
 
   #add-point:陣列清空
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs04 樣板自動產生(Version:2)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET g_sql = "SELECT  UNIQUE '',nmaa001,nmaa002,'',nmaa003,'','','' FROM nmaa_t",
 
#table2
               " LEFT JOIN nmbx_t ON nmbxent = nmaaent AND nmaa001 = nmbxcomp AND  = nmbx001 AND  = nmbx002 AND  = nmbx003",
 
               "",
               " WHERE nmaaent= ? AND 1=1 AND ", ls_wc
 
   LET g_sql = g_sql, cl_sql_add_filter("nmaa_t"),
                      " ORDER BY nmaa_t.nmaa001"
 
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE anmq820_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR anmq820_pb
 
   OPEN b_fill_curs USING g_enterprise
 
   FOREACH b_fill_curs INTO g_nmaa_d[l_ac].sel,g_nmaa_d[l_ac].nmaa001,g_nmaa_d[l_ac].nmaa002,g_nmaa_d[l_ac].nmaa002_desc, 
       g_nmaa_d[l_ac].nmaa003,g_nmaa_d[l_ac].nmaa003_desc,g_nmaa_d[l_ac].nmas002,g_nmaa_d[l_ac].nmas003 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL anmq820_detail_show("'1'")
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   CALL g_nmaa_d.deleteElement(g_nmaa_d.getLength())
 
   #add-point:陣列長度調整
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = g_nmaa_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET g_detail_idx = 1
   DISPLAY g_detail_idx TO FORMONLY.h_index
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #應用 qs06 樣板自動產生(Version:2)
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE anmq820_pb
 
 
 
 
 
   LET l_ac = 1
   CALL anmq820_b_fill2()
 
      CALL anmq820_filter_show('nmaa001','b_nmaa001')
   CALL anmq820_filter_show('nmaa002','b_nmaa002')
   CALL anmq820_filter_show('nmaa003','b_nmaa003')
   CALL anmq820_filter_show('nmas002','b_nmas002')
   CALL anmq820_filter_show('nmas003','b_nmas003')
   CALL anmq820_filter_show('nmbx002','b_nmbx002')
   CALL anmq820_filter_show('nmbx103','b_nmbx103')
   CALL anmq820_filter_show('nmbx104','b_nmbx104')
   CALL anmq820_filter_show('nmbx113','b_nmbx113')
   CALL anmq820_filter_show('nmbx114','b_nmbx114')
   CALL anmq820_filter_show('nmbx123','b_nmbx123')
   CALL anmq820_filter_show('nmbx124','b_nmbx124')
   CALL anmq820_filter_show('nmbx133','b_nmbx133')
   CALL anmq820_filter_show('nmbx134','b_nmbx134')
 
 
END FUNCTION

{</section>}

{<section id="anmq820.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION anmq820_b_fill2()
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準
{<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define-客製
{<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #應用 qs07 樣板自動產生(Version:2)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
#Page2
   CALL g_nmaa2_d.clear()
#Page3
   CALL g_nmaa3_d.clear()
 
   #add-point:陣列清空
{<point name="b_fill2.array_clear" />}
   #end add-point
 
#table2
   #為避免影響執行效能，若是按上下筆就不重組SQL
   #IF g_action_choice <> "fetch" OR cl_null(g_action_choice) THEN    #2015/03/23---mark---
      LET g_sql = "SELECT  UNIQUE nmbx002,'',nmbx103,nmbx104,'','',nmbx113,nmbx114,'','','',nmbx123, 
          nmbx124,'','',nmbx133,nmbx134,'','' FROM nmbx_t",
                  "",
                  " WHERE nmbxent=? AND nmbx003=?"
  
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
  
      LET g_sql = g_sql, " ORDER BY nmbx_t.nmbxcomp,nmbx_t.nmbx001,nmbx_t.nmbx002,nmbx_t.nmbx003"
  
      #add-point:單身填充前
{<point name="b_fill2.before_fill2" />}
      #end add-point
 
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE anmq820_pb2 FROM g_sql
      DECLARE b_fill_curs2 CURSOR FOR anmq820_pb2
   #END IF                       #2015/03/23---mark---
 
   OPEN b_fill_curs2 USING g_enterprise,g_nmaa_d[g_detail_idx].nmaa001
 
   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_nmaa2_d[l_ac].nmbx002,g_nmaa2_d[l_ac].l_ori_begin,g_nmaa2_d[l_ac].nmbx103, 
                             g_nmaa2_d[l_ac].nmbx104,g_nmaa2_d[l_ac].l_ori_end,  g_nmaa2_d[l_ac].l_loc_begin,g_nmaa2_d[l_ac].nmbx113, 
                             g_nmaa2_d[l_ac].nmbx114,g_nmaa2_d[l_ac].l_loc_end,  g_nmaa3_d[l_ac].l_nmbx0022, g_nmaa3_d[l_ac].l_loc_begin2, 
                             g_nmaa3_d[l_ac].nmbx123,g_nmaa3_d[l_ac].nmbx124,    g_nmaa3_d[l_ac].l_loc_end2, g_nmaa3_d[l_ac].l_loc_begin3, 
                             g_nmaa3_d[l_ac].nmbx133,g_nmaa3_d[l_ac].nmbx134,    g_nmaa3_d[l_ac].l_loc_end3, g_nmaa3_d[l_ac].l_nmbxcomp,
                             g_nmaa2_d[l_ac].nmde105 #161207-00018#1 add 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill2段資料填充
{<point name="b_fill2.fill2"/>}
      #end add-point
 
      CALL anmq820_detail_show("'2'")
 
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend =  "" 
         LET g_errparam.code   =  9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
#Page2
   CALL g_nmaa2_d.deleteElement(g_nmaa2_d.getLength())
#Page3
   CALL g_nmaa3_d.deleteElement(g_nmaa3_d.getLength())
 
   #add-point:陣列長度調整
{<point name="b_fill2.array_deleteElement" />}
   #end add-point
 
#Page2
   LET li_ac = g_nmaa2_d.getLength()
#Page3
   LET li_ac = g_nmaa3_d.getLength()
 
   DISPLAY li_ac TO FORMONLY.cnt
   LET g_detail_idx2 = 1
   DISPLAY g_detail_idx2 TO FORMONLY.idx
 
 
 
 
   #add-point:單身填充後
{<point name="b_fill2.after_fill" />}
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION

{</section>}

{<section id="anmq820.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION anmq820_detail_show(ps_page)
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準
   {<point name="detail_show.define" edit="s"/>}
   #end add-point
   #add-point:show段define-客製
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'2'",1) > 0 THEN
      #帶出公用欄位reference值page2
      
      #add-point:show段單身reference
      {<point name="detail_show.body2.reference"/>}
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'3'",1) > 0 THEN
      #帶出公用欄位reference值page3
      
      #add-point:show段單身reference
      {<point name="detail_show.body3.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="anmq820.filter" >}
#應用 qs13 樣板自動產生(Version:3)
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION anmq820_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define-標準
   {<point name="filter.define" edit="s"/>}
   #end add-point
   #add-point:filter段define-客製
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #應用 qs08 樣板自動產生(Version:4)
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON nmaa001,nmaa002,nmaa003,nmas002,nmas003
                          FROM s_detail1[1].b_nmaa001,s_detail1[1].b_nmaa002,s_detail1[1].b_nmaa003, 
                              s_detail1[1].b_nmas002,s_detail1[1].b_nmas003
 
         BEFORE CONSTRUCT
                     DISPLAY anmq820_filter_parser('nmaa001') TO s_detail1[1].b_nmaa001
            DISPLAY anmq820_filter_parser('nmaa002') TO s_detail1[1].b_nmaa002
            DISPLAY anmq820_filter_parser('nmaa003') TO s_detail1[1].b_nmaa003
            DISPLAY anmq820_filter_parser('nmas002') TO s_detail1[1].b_nmas002
            DISPLAY anmq820_filter_parser('nmas003') TO s_detail1[1].b_nmas003
 
 
         #單身公用欄位開窗相關處理
         
 
         #單身一般欄位開窗相關處理
                  #----<<sel>>----
         #----<<b_nmaa001>>----
         #Ctrlp:construct.c.filter.page1.b_nmaa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD b_nmaa001
            #add-point:ON ACTION controlp INFIELD b_nmaa001
            {<point name="construct.c.filter.page1.b_nmaa001" />}
            #END add-point
 
         #----<<b_nmaa002>>----
         #Ctrlp:construct.c.filter.page1.b_nmaa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD b_nmaa002
            #add-point:ON ACTION controlp INFIELD b_nmaa002
            {<point name="construct.c.filter.page1.b_nmaa002" />}
            #END add-point
 
         #----<<b_nmaa002_desc>>----
         #----<<b_nmaa003>>----
         #Ctrlp:construct.c.filter.page1.b_nmaa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD b_nmaa003
            #add-point:ON ACTION controlp INFIELD b_nmaa003
            {<point name="construct.c.filter.page1.b_nmaa003" />}
            #END add-point
 
         #----<<b_nmaa003_desc>>----
         #----<<b_nmas002>>----
         #Ctrlp:construct.c.filter.page1.b_nmas002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD b_nmas002
            #add-point:ON ACTION controlp INFIELD b_nmas002
            {<point name="construct.c.filter.page1.b_nmas002" />}
            #END add-point
 
         #----<<b_nmas003>>----
         #Ctrlp:construct.c.page1.b_nmas003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD b_nmas003
            #add-point:ON ACTION controlp INFIELD b_nmas003
            {<point name="construct.c.filter.page1.b_nmas003" />}
            #END add-point
 
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
 
   
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL anmq820_filter_show('nmaa001','b_nmaa001')
   CALL anmq820_filter_show('nmaa002','b_nmaa002')
   CALL anmq820_filter_show('nmaa003','b_nmaa003')
   CALL anmq820_filter_show('nmas002','b_nmas002')
   CALL anmq820_filter_show('nmas003','b_nmas003')
   CALL anmq820_filter_show('nmbx002','b_nmbx002')
   CALL anmq820_filter_show('nmbx103','b_nmbx103')
   CALL anmq820_filter_show('nmbx104','b_nmbx104')
   CALL anmq820_filter_show('nmbx113','b_nmbx113')
   CALL anmq820_filter_show('nmbx114','b_nmbx114')
   CALL anmq820_filter_show('nmbx123','b_nmbx123')
   CALL anmq820_filter_show('nmbx124','b_nmbx124')
   CALL anmq820_filter_show('nmbx133','b_nmbx133')
   CALL anmq820_filter_show('nmbx134','b_nmbx134')
 
 
   CALL anmq820_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION

{</section>}

{<section id="anmq820.filter_parser" >}
#應用 qs14 樣板自動產生(Version:3)
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION anmq820_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define-標準
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point
   #add-point:filter段define-客製
   {<point name="filter_parser.define_customerization" edit="c"/>}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 

{</section>}

{<section id="anmq820.filter_show" >}
#應用 qs15 樣板自動產生(Version:3)
#+ filter標題欄位顯示搜尋條件
PRIVATE FUNCTION anmq820_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準
   {<point name="filter_show.define" edit="s"/>}
   #end add-point
   #add-point:filter_show段define-客製
   {<point name="filter_show.define_customerization" edit="c"/>}
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = anmq820_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 

{</section>}

{<section id="anmq820.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

