#該程式未解開Section, 採用最新樣板產出!
{<section id="anmq440_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2016-07-11 11:23:05), PR版次:0001(2016-07-11 11:25:15)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000018
#+ Filename...: anmq440_x01
#+ Description: 應付已付未衝票據列印
#+ Creator....: 01727(2016-07-05 13:17:39)
#+ Modifier...: 01727 -SD/PR- 01727
 
{</section>}
 
{<section id="anmq440_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       table LIKE type_t.chr500,         #臨時表名稱 
       wc STRING,                  #查詢條件 
       a1 LIKE type_t.chr1,         #本位幣二顯示 
       a2 LIKE type_t.chr1          #本位幣三顯示
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
{</section>}
 
{<section id="anmq440_x01.main" readonly="Y" >}
PUBLIC FUNCTION anmq440_x01(p_arg1,p_arg2,p_arg3,p_arg4)
DEFINE  p_arg1 LIKE type_t.chr500         #tm.table  臨時表名稱 
DEFINE  p_arg2 STRING                  #tm.wc  查詢條件 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.a1  本位幣二顯示 
DEFINE  p_arg4 LIKE type_t.chr1         #tm.a2  本位幣三顯示
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.table = p_arg1
   LET tm.wc = p_arg2
   LET tm.a1 = p_arg3
   LET tm.a2 = p_arg4
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "anmq440_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL anmq440_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL anmq440_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL anmq440_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL anmq440_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL anmq440_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="anmq440_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION anmq440_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "nmckent.nmck_t.nmckent,nmckstus.nmck_t.nmckstus,l_nmckstus_desc.type_t.chr200,nmckcomp.nmck_t.nmckcomp,nmckdocno.nmck_t.nmckdocno,nmckdocdt.nmck_t.nmckdocdt,nmck002.nmck_t.nmck002,l_nmck002_desc.type_t.chr200,nmck003.nmck_t.nmck003,l_nmck003_desc.type_t.chr200,nmck004.nmck_t.nmck004,l_nmck004_desc.type_t.chr200,nmck005.nmck_t.nmck005,l_nmck005_desc.type_t.chr200,nmck006.nmck_t.nmck006,l_nmck006_desc.type_t.chr200,nmck100.nmck_t.nmck100,nmck103.nmck_t.nmck103,nmck101.nmck_t.nmck101,nmck113.nmck_t.nmck113,l_glaa016.type_t.chr200,nmck121.nmck_t.nmck121,nmck123.nmck_t.nmck123,l_glaa020.type_t.chr200,nmck131.nmck_t.nmck131,nmck133.nmck_t.nmck133,nmck011.nmck_t.nmck011,nmck025.nmck_t.nmck025,nmck013.nmck_t.nmck013,l_nmck013_desc.type_t.chr200,nmck014.nmck_t.nmck014,nmck015.nmck_t.nmck015" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="anmq440_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION anmq440_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="anmq440_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION anmq440_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   
   #end add-point
   LET g_select = " SELECT nmckent,nmckstus,NULL,nmckcomp,nmckdocno,nmckdocdt,nmck002,NULL,nmck003,NULL, 
       nmck004,NULL,nmck005,NULL,nmck006,NULL,nmck100,nmck103,nmck101,nmck113,NULL,nmck121,nmck123,NULL, 
       nmck131,nmck133,nmck011,nmck025,nmck013,NULL,nmck014,nmck015"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   LET g_select = " SELECT '',nmckstus,nmckstus_desc,'',nmckdocno,nmckdocdt,nmck002,nmck002_desc,nmck003,nmck003_desc,nmck004,nmck004_desc, 
       nmck005,nmck005_desc,nmck006,nmck006_desc,nmck100,nmck103,nmck101,nmck113,glaa016,nmck121,nmck123,glaa020,nmck131,nmck133, 
       nmck011,nmck025,nmck013,nmck013_desc,nmck014,nmck015"
   #end add-point
    LET g_from = " FROM nmck_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   LET g_from = " FROM ",tm.table CLIPPED
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("nmck_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE anmq440_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE anmq440_x01_curs CURSOR FOR anmq440_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="anmq440_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION anmq440_x01_ins_data()
DEFINE sr RECORD 
   nmckent LIKE nmck_t.nmckent, 
   nmckstus LIKE nmck_t.nmckstus, 
   l_nmckstus_desc LIKE type_t.chr200, 
   nmckcomp LIKE nmck_t.nmckcomp, 
   nmckdocno LIKE nmck_t.nmckdocno, 
   nmckdocdt LIKE nmck_t.nmckdocdt, 
   nmck002 LIKE nmck_t.nmck002, 
   l_nmck002_desc LIKE type_t.chr200, 
   nmck003 LIKE nmck_t.nmck003, 
   l_nmck003_desc LIKE type_t.chr200, 
   nmck004 LIKE nmck_t.nmck004, 
   l_nmck004_desc LIKE type_t.chr200, 
   nmck005 LIKE nmck_t.nmck005, 
   l_nmck005_desc LIKE type_t.chr200, 
   nmck006 LIKE nmck_t.nmck006, 
   l_nmck006_desc LIKE type_t.chr200, 
   nmck100 LIKE nmck_t.nmck100, 
   nmck103 LIKE nmck_t.nmck103, 
   nmck101 LIKE nmck_t.nmck101, 
   nmck113 LIKE nmck_t.nmck113, 
   l_glaa016 LIKE type_t.chr200, 
   nmck121 LIKE nmck_t.nmck121, 
   nmck123 LIKE nmck_t.nmck123, 
   l_glaa020 LIKE type_t.chr200, 
   nmck131 LIKE nmck_t.nmck131, 
   nmck133 LIKE nmck_t.nmck133, 
   nmck011 LIKE nmck_t.nmck011, 
   nmck025 LIKE nmck_t.nmck025, 
   nmck013 LIKE nmck_t.nmck013, 
   l_nmck013_desc LIKE type_t.chr200, 
   nmck014 LIKE nmck_t.nmck014, 
   nmck015 LIKE nmck_t.nmck015
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH anmq440_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.nmckent,sr.nmckstus,sr.l_nmckstus_desc,sr.nmckcomp,sr.nmckdocno,sr.nmckdocdt,sr.nmck002,sr.l_nmck002_desc,sr.nmck003,sr.l_nmck003_desc,sr.nmck004,sr.l_nmck004_desc,sr.nmck005,sr.l_nmck005_desc,sr.nmck006,sr.l_nmck006_desc,sr.nmck100,sr.nmck103,sr.nmck101,sr.nmck113,sr.l_glaa016,sr.nmck121,sr.nmck123,sr.l_glaa020,sr.nmck131,sr.nmck133,sr.nmck011,sr.nmck025,sr.nmck013,sr.l_nmck013_desc,sr.nmck014,sr.nmck015
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "anmq440_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    IF tm.a1 = 'N' THEN
       LET g_xgrid.visible_column="glaa016|nmck121|nmck123"
    END IF
    IF tm.a2 = 'N' THEN
       IF cl_null(g_xgrid.visible_column) THEN
          LET g_xgrid.visible_column="l_glaa020|nmck131|nmck133"
       ELSE
          LET g_xgrid.visible_column=g_xgrid.visible_column,"|l_glaa020|nmck131|nmck133"
       END IF
    END IF
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="anmq440_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION anmq440_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="anmq440_x01.other_function" readonly="Y" >}

 
{</section>}
 
