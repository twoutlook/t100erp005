#該程式未解開Section, 採用最新樣板產出!
{<section id="anmi120.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0014(2016-05-03 10:55:55), PR版次:0014(2016-10-31 10:58:25)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000341
#+ Filename...: anmi120
#+ Description: 企業銀行帳戶資料維護作業
#+ Creator....: 02299(2013-08-20 15:24:21)
#+ Modifier...: 07673 -SD/PR- 08732
 
{</section>}
 
{<section id="anmi120.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#150602-00040#1   2015/06/02 By apo       查詢時開戶人(組織)開窗應為ooef_t資料
#150715-00014#1   2015/07/15 By Jessy     anmi* bug修復
#150723-00012#2   2015/08/17 By Hans      戶名
#151201-00002#16  2016/01/21 By 01727     天河財務回收
#160122-00001#1   2016/01/26 By yangtt    新增用户设限功能
#151201-00002#64  2016/03/15 By 02599     增加部门权限设定
#151201-00002#60  2016/02/14 By lujh      账户数限制表示anmi120中该账户类型可以维护几笔资料，账户数限制为3，
#                                         则表示此账户类型在anmi120中只能维护3笔有效资料
#160321-00016#38  2016/03/30 By Jessy     將重複內容的錯誤訊息置換為公用錯誤訊息
#160318-00005#25  2016/03/30 by 07675     將重複內容的錯誤訊息置換為公用錯誤訊息
#160829-00031#1   2016/08/29 By 01727     单身开窗以及检核逻辑不同,目前单身的栏位检核没有判断法人条件
#160905-00007#7   2016/09/05 By 01727     调整系统中无ENT的SQL条件增加ent
#161021-00038#1   2016/10/24 By 06821     組織類型與職能開窗調整
#161028-00051#1   2016/10/31 By 08732     財務權限修改
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_nmaa_m        RECORD
       nmaa001 LIKE nmaa_t.nmaa001, 
   nmaal003 LIKE nmaal_t.nmaal003, 
   nmaa006 LIKE nmaa_t.nmaa006, 
   nmaa002 LIKE nmaa_t.nmaa002, 
   nmaa002_desc LIKE type_t.chr80, 
   nmaa003 LIKE nmaa_t.nmaa003, 
   nmaa003_desc LIKE type_t.chr80, 
   nmaa004 LIKE nmaa_t.nmaa004, 
   nmaa004_desc LIKE type_t.chr80, 
   nmaa005 LIKE nmaa_t.nmaa005, 
   nmaa007 LIKE nmaa_t.nmaa007, 
   l_oofa011 LIKE type_t.chr500, 
   nmaa008 LIKE nmaa_t.nmaa008, 
   l_oofc012 LIKE type_t.chr500, 
   nmaa010 LIKE nmaa_t.nmaa010, 
   l_oofb017 LIKE type_t.chr500, 
   nmaa009 LIKE nmaa_t.nmaa009, 
   nmaastus LIKE nmaa_t.nmaastus, 
   nmaaownid LIKE nmaa_t.nmaaownid, 
   nmaaownid_desc LIKE type_t.chr80, 
   nmaaowndp LIKE nmaa_t.nmaaowndp, 
   nmaaowndp_desc LIKE type_t.chr80, 
   nmaacrtid LIKE nmaa_t.nmaacrtid, 
   nmaacrtid_desc LIKE type_t.chr80, 
   nmaacrtdp LIKE nmaa_t.nmaacrtdp, 
   nmaacrtdp_desc LIKE type_t.chr80, 
   nmaacrtdt LIKE nmaa_t.nmaacrtdt, 
   nmaamodid LIKE nmaa_t.nmaamodid, 
   nmaamodid_desc LIKE type_t.chr80, 
   nmaamoddt LIKE nmaa_t.nmaamoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_nmas_d        RECORD
       nmas002 LIKE nmas_t.nmas002, 
   nmas003 LIKE nmas_t.nmas003, 
   nmas004 LIKE nmas_t.nmas004, 
   nmas005 LIKE nmas_t.nmas005
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_nmaa001 LIKE nmaa_t.nmaa001
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
#151201-00002#16 Add  ---(S)---
 TYPE type_g_nmas2_d RECORD
       glab003 LIKE type_t.chr10,
   nmas003 LIKE type_t.chr10,
   glabld LIKE type_t.chr5,
   glab005 LIKE type_t.chr500,
   glab005_desc LIKE type_t.chr500
       END RECORD

DEFINE g_nmas2_d          DYNAMIC ARRAY OF type_g_nmas2_d
DEFINE g_nmas2_d_t        type_g_nmas2_d
DEFINE g_nmas2_d_o        type_g_nmas2_d
DEFINE g_nmas2_d_mask_o   DYNAMIC ARRAY OF type_g_nmas2_d #轉換遮罩前資料
DEFINE g_nmas2_d_mask_n   DYNAMIC ARRAY OF type_g_nmas2_d #轉換遮罩後資料

DEFINE g_wc2_table2   STRING
DEFINE l_glaa004      LIKE glaa_t.glaa004
DEFINE g_forupd_sql2          STRING
#151201-00002#16 Add  ---(E)---
DEFINE g_wc_orga          STRING   #161028-00051#1   add
#end add-point
       
#模組變數(Module Variables)
DEFINE g_nmaa_m          type_g_nmaa_m
DEFINE g_nmaa_m_t        type_g_nmaa_m
DEFINE g_nmaa_m_o        type_g_nmaa_m
DEFINE g_nmaa_m_mask_o   type_g_nmaa_m #轉換遮罩前資料
DEFINE g_nmaa_m_mask_n   type_g_nmaa_m #轉換遮罩後資料
 
   DEFINE g_nmaa001_t LIKE nmaa_t.nmaa001
 
 
DEFINE g_nmas_d          DYNAMIC ARRAY OF type_g_nmas_d
DEFINE g_nmas_d_t        type_g_nmas_d
DEFINE g_nmas_d_o        type_g_nmas_d
DEFINE g_nmas_d_mask_o   DYNAMIC ARRAY OF type_g_nmas_d #轉換遮罩前資料
DEFINE g_nmas_d_mask_n   DYNAMIC ARRAY OF type_g_nmas_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      nmaal001 LIKE nmaal_t.nmaal001,
      nmaal003 LIKE nmaal_t.nmaal003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
 
#end add-point
 
{</section>}
 
{<section id="anmi120.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("anm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT nmaa001,'',nmaa006,nmaa002,'',nmaa003,'',nmaa004,'',nmaa005,nmaa007,'', 
       nmaa008,'',nmaa010,'',nmaa009,nmaastus,nmaaownid,'',nmaaowndp,'',nmaacrtid,'',nmaacrtdp,'',nmaacrtdt, 
       nmaamodid,'',nmaamoddt", 
                      " FROM nmaa_t",
                      " WHERE nmaaent= ? AND nmaa001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   #161028-00051#1  add ---s
   CALL s_fin_create_account_center_tmp()
   CALL s_fin_azzi800_sons_query(g_today)
   CALL s_fin_account_center_sons_str() RETURNING g_wc_orga
   CALL s_fin_get_wc_str(g_wc_orga) RETURNING g_wc_orga
   #161028-00051#1  add ---e
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmi120_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.nmaa001,t0.nmaa006,t0.nmaa002,t0.nmaa003,t0.nmaa004,t0.nmaa005,t0.nmaa007, 
       t0.nmaa008,t0.nmaa010,t0.nmaa009,t0.nmaastus,t0.nmaaownid,t0.nmaaowndp,t0.nmaacrtid,t0.nmaacrtdp, 
       t0.nmaacrtdt,t0.nmaamodid,t0.nmaamoddt,t1.ooefl003 ,t2.nmagl003 ,t3.nmabl003 ,t4.ooag011 ,t5.ooefl003 , 
       t6.ooag011 ,t7.ooefl003 ,t8.ooag011",
               " FROM nmaa_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.nmaa002 AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN nmagl_t t2 ON t2.nmaglent="||g_enterprise||" AND t2.nmagl001=t0.nmaa003 AND t2.nmagl002='"||g_dlang||"' ",
               " LEFT JOIN nmabl_t t3 ON t3.nmablent="||g_enterprise||" AND t3.nmabl001=t0.nmaa004 AND t3.nmabl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.nmaaownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.nmaaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.nmaacrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.nmaacrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.nmaamodid  ",
 
               " WHERE t0.nmaaent = " ||g_enterprise|| " AND t0.nmaa001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE anmi120_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_anmi120 WITH FORM cl_ap_formpath("anm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL anmi120_init()   
 
      #進入選單 Menu (="N")
      CALL anmi120_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_anmi120
      
   END IF 
   
   CLOSE anmi120_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="anmi120.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION anmi120_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('nmaastus','17','N,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   
   #end add-point
   
   #初始化搜尋條件
   CALL anmi120_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="anmi120.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION anmi120_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL anmi120_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_nmaa_m.* TO NULL
         CALL g_nmas_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL anmi120_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_nmas_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL anmi120_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL anmi120_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
        #151201-00002#16 Add  ---(S)---
         DISPLAY ARRAY g_nmas2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               #顯示單身筆數
               CALL anmi120_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac


            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL anmi120_idx_chk()

            #自訂ACTION(detail_show,page_2)


         END DISPLAY
        #151201-00002#16 Add  ---(E)---
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL anmi120_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL anmi120_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL anmi120_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL anmi120_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL anmi120_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL anmi120_set_act_visible()   
            CALL anmi120_set_act_no_visible()
            IF NOT (g_nmaa_m.nmaa001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " nmaaent = " ||g_enterprise|| " AND",
                                  " nmaa001 = '", g_nmaa_m.nmaa001, "' "
 
               #填到對應位置
               CALL anmi120_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "nmaa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "nmas_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL anmi120_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "nmaa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "nmas_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL anmi120_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL anmi120_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL anmi120_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL anmi120_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL anmi120_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL anmi120_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL anmi120_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL anmi120_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_nmas_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                 #151201-00002#16 Add  ---(S)---
                  LET g_export_node[2] = base.typeInfo.create(g_nmas2_d)
                  LET g_export_id[2]   = "s_detail2"
                 #151201-00002#16 Add  ---(E)---
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL anmi120_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL anmi120_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL anmi120_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL anmi120_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_anmi120_02
            LET g_action_choice="open_anmi120_02"
            IF cl_auth_chk_act("open_anmi120_02") THEN
               
               #add-point:ON ACTION open_anmi120_02 name="menu.open_anmi120_02"
               #151201-00002#64--add--str--
               IF l_ac > 0 THEN
                  IF NOT cl_null(g_nmas_d[l_ac].nmas002) THEN
                     CALL anmi120_02(g_nmas_d[l_ac].nmas002,g_nmaa_m.nmaa002)
                  END IF
               END IF
               #151201-00002#64--add--end
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL anmi120_query()
               #add-point:ON ACTION query name="menu.query"
               CALL g_curr_diag.setCurrentRow("s_detail2",1)   #151201-00002#16 Add
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_anmi120_01
            LET g_action_choice="open_anmi120_01"
            IF cl_auth_chk_act("open_anmi120_01") THEN
               
               #add-point:ON ACTION open_anmi120_01 name="menu.open_anmi120_01"
               #160122-00001#1---add---str
               IF l_ac = 0 THEN LET l_ac = 1 END IF
               IF NOT cl_null(g_nmas_d[l_ac].nmas002) THEN
                  CALL anmi120_01(g_nmas_d[l_ac].nmas002,g_nmaa_m.nmaa002,g_nmaa_m.nmaa001)
               END IF               
               #160122-00001#1---add---end
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_anmi121
            LET g_action_choice="open_anmi121"
            IF cl_auth_chk_act("open_anmi121") THEN
               
               #add-point:ON ACTION open_anmi121 name="menu.open_anmi121"
               LET la_param.prog = "anmi121"
               LET la_param.param[1] = g_nmaa_m.nmaa001
               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun(ls_js)
               #CALL cl_cmdrun("anmi121 "||g_nmaa_m.nmaa001)
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL anmi120_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL anmi120_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL anmi120_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="anmi120.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION anmi120_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT nmaa001 ",
                      " FROM nmaa_t ",
                      " ",
                      " LEFT JOIN nmas_t ON nmasent = nmaaent AND nmaa001 = nmas001 ", "  ",
                      #add-point:browser_fill段sql(nmas_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " LEFT JOIN nmaal_t ON nmaalent = "||g_enterprise||" AND nmaa001 = nmaal001 AND nmaal002 = '",g_dlang,"' ", 
                      " ", 
 
 
                      " WHERE nmaaent = " ||g_enterprise|| " AND nmasent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("nmaa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT nmaa001 ",
                      " FROM nmaa_t ", 
                      "  ",
                      "  LEFT JOIN nmaal_t ON nmaalent = "||g_enterprise||" AND nmaa001 = nmaal001 AND nmaal002 = '",g_dlang,"' ",
                      " WHERE nmaaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("nmaa_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_nmaa_m.* TO NULL
      CALL g_nmas_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      CALL g_nmas2_d.clear()   #151201-00002#16 Add
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.nmaa001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.nmaastus,t0.nmaa001 ",
                  " FROM nmaa_t t0",
                  "  ",
                  "  LEFT JOIN nmas_t ON nmasent = nmaaent AND nmaa001 = nmas001 ", "  ", 
                  #add-point:browser_fill段sql(nmas_t1) name="browser_fill.join.nmas_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
               " LEFT JOIN nmaal_t ON nmaalent = "||g_enterprise||" AND nmaa001 = nmaal001 AND nmaal002 = '",g_dlang,"' ",
                  " WHERE t0.nmaaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("nmaa_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.nmaastus,t0.nmaa001 ",
                  " FROM nmaa_t t0",
                  "  ",
                  
               " LEFT JOIN nmaal_t ON nmaalent = "||g_enterprise||" AND nmaa001 = nmaal001 AND nmaal002 = '",g_dlang,"' ",
                  " WHERE t0.nmaaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("nmaa_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY nmaa001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"nmaa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_nmaa001
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_nmaa001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION anmi120_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_nmaa_m.nmaa001 = g_browser[g_current_idx].b_nmaa001   
 
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   
   CALL anmi120_nmaa_t_mask()
   CALL anmi120_show()
      
END FUNCTION
 
{</section>}
 
{<section id="anmi120.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION anmi120_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
  #151201-00002#16 Add  ---(S)---
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
  #151201-00002#16 Add  ---(E)---
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION anmi120_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_nmaa001 = g_nmaa_m.nmaa001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION anmi120_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_nmaa_m.* TO NULL
   CALL g_nmas_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
  #151201-00002#16 Add  ---(S)---
   CALL g_nmas2_d.clear()
   INITIALIZE g_wc2_table2 TO NULL
  #151201-00002#16 Add  ---(E)---
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON nmaa001,nmaal003,nmaa006,nmaa002,nmaa003,nmaa004,nmaa005,nmaa007,l_oofa011, 
          nmaa008,l_oofc012,nmaa010,l_oofb017,nmaa009,nmaastus,nmaaownid,nmaaowndp,nmaacrtid,nmaacrtdp, 
          nmaacrtdt,nmaamodid,nmaamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<nmaacrtdt>>----
         AFTER FIELD nmaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<nmaamoddt>>----
         AFTER FIELD nmaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<nmaacnfdt>>----
         
         #----<<nmaapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.nmaa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa001
            #add-point:ON ACTION controlp INFIELD nmaa001 name="construct.c.nmaa001"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaa001  #顯示到畫面上
            NEXT FIELD nmaa001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa001
            #add-point:BEFORE FIELD nmaa001 name="construct.b.nmaa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa001
            
            #add-point:AFTER FIELD nmaa001 name="construct.a.nmaa001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaal003
            #add-point:BEFORE FIELD nmaal003 name="construct.b.nmaal003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaal003
            
            #add-point:AFTER FIELD nmaal003 name="construct.a.nmaal003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaal003
            #add-point:ON ACTION controlp INFIELD nmaal003 name="construct.c.nmaal003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa006
            #add-point:BEFORE FIELD nmaa006 name="construct.b.nmaa006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa006
            
            #add-point:AFTER FIELD nmaa006 name="construct.a.nmaa006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa006
            #add-point:ON ACTION controlp INFIELD nmaa006 name="construct.c.nmaa006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.nmaa002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa002
            #add-point:ON ACTION controlp INFIELD nmaa002 name="construct.c.nmaa002"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooef001 IN",g_wc_orga   #161028-00051#1   add
           #CALL q_ooea()                           #呼叫開窗   #150602-00040#1 mark
            #CALL q_ooef001()                                   #150602-00040#1    #161021-00038#1 mark
            CALL q_ooef001_33()                                                    #161021-00038#1 add
            DISPLAY g_qryparam.return1 TO nmaa002  #顯示到畫面上

            NEXT FIELD nmaa002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa002
            #add-point:BEFORE FIELD nmaa002 name="construct.b.nmaa002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa002
            
            #add-point:AFTER FIELD nmaa002 name="construct.a.nmaa002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa003
            #add-point:ON ACTION controlp INFIELD nmaa003 name="construct.c.nmaa003"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_nmag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaa003  #顯示到畫面上

            NEXT FIELD nmaa003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa003
            #add-point:BEFORE FIELD nmaa003 name="construct.b.nmaa003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa003
            
            #add-point:AFTER FIELD nmaa003 name="construct.a.nmaa003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa004
            #add-point:ON ACTION controlp INFIELD nmaa004 name="construct.c.nmaa004"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_nmab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaa004  #顯示到畫面上

            NEXT FIELD nmaa004                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa004
            #add-point:BEFORE FIELD nmaa004 name="construct.b.nmaa004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa004
            
            #add-point:AFTER FIELD nmaa004 name="construct.a.nmaa004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa005
            #add-point:BEFORE FIELD nmaa005 name="construct.b.nmaa005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa005
            
            #add-point:AFTER FIELD nmaa005 name="construct.a.nmaa005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa005
            #add-point:ON ACTION controlp INFIELD nmaa005 name="construct.c.nmaa005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa007
            #add-point:BEFORE FIELD nmaa007 name="construct.b.nmaa007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa007
            
            #add-point:AFTER FIELD nmaa007 name="construct.a.nmaa007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa007
            #add-point:ON ACTION controlp INFIELD nmaa007 name="construct.c.nmaa007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.l_oofa011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_oofa011
            #add-point:ON ACTION controlp INFIELD l_oofa011 name="construct.c.l_oofa011"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oofa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_oofa011  #顯示到畫面上

            NEXT FIELD l_oofa011                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_oofa011
            #add-point:BEFORE FIELD l_oofa011 name="construct.b.l_oofa011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_oofa011
            
            #add-point:AFTER FIELD l_oofa011 name="construct.a.l_oofa011"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa008
            #add-point:BEFORE FIELD nmaa008 name="construct.b.nmaa008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa008
            
            #add-point:AFTER FIELD nmaa008 name="construct.a.nmaa008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa008
            #add-point:ON ACTION controlp INFIELD nmaa008 name="construct.c.nmaa008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_oofc012
            #add-point:BEFORE FIELD l_oofc012 name="construct.b.l_oofc012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_oofc012
            
            #add-point:AFTER FIELD l_oofc012 name="construct.a.l_oofc012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_oofc012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_oofc012
            #add-point:ON ACTION controlp INFIELD l_oofc012 name="construct.c.l_oofc012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa010
            #add-point:BEFORE FIELD nmaa010 name="construct.b.nmaa010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa010
            
            #add-point:AFTER FIELD nmaa010 name="construct.a.nmaa010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa010
            #add-point:ON ACTION controlp INFIELD nmaa010 name="construct.c.nmaa010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_oofb017
            #add-point:BEFORE FIELD l_oofb017 name="construct.b.l_oofb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_oofb017
            
            #add-point:AFTER FIELD l_oofb017 name="construct.a.l_oofb017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_oofb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_oofb017
            #add-point:ON ACTION controlp INFIELD l_oofb017 name="construct.c.l_oofb017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa009
            #add-point:BEFORE FIELD nmaa009 name="construct.b.nmaa009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa009
            
            #add-point:AFTER FIELD nmaa009 name="construct.a.nmaa009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaa009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa009
            #add-point:ON ACTION controlp INFIELD nmaa009 name="construct.c.nmaa009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaastus
            #add-point:BEFORE FIELD nmaastus name="construct.b.nmaastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaastus
            
            #add-point:AFTER FIELD nmaastus name="construct.a.nmaastus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaastus
            #add-point:ON ACTION controlp INFIELD nmaastus name="construct.c.nmaastus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.nmaaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaaownid
            #add-point:ON ACTION controlp INFIELD nmaaownid name="construct.c.nmaaownid"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaaownid  #顯示到畫面上

            NEXT FIELD nmaaownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaaownid
            #add-point:BEFORE FIELD nmaaownid name="construct.b.nmaaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaaownid
            
            #add-point:AFTER FIELD nmaaownid name="construct.a.nmaaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaaowndp
            #add-point:ON ACTION controlp INFIELD nmaaowndp name="construct.c.nmaaowndp"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaaowndp  #顯示到畫面上

            NEXT FIELD nmaaowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaaowndp
            #add-point:BEFORE FIELD nmaaowndp name="construct.b.nmaaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaaowndp
            
            #add-point:AFTER FIELD nmaaowndp name="construct.a.nmaaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaacrtid
            #add-point:ON ACTION controlp INFIELD nmaacrtid name="construct.c.nmaacrtid"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaacrtid  #顯示到畫面上

            NEXT FIELD nmaacrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaacrtid
            #add-point:BEFORE FIELD nmaacrtid name="construct.b.nmaacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaacrtid
            
            #add-point:AFTER FIELD nmaacrtid name="construct.a.nmaacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.nmaacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaacrtdp
            #add-point:ON ACTION controlp INFIELD nmaacrtdp name="construct.c.nmaacrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaacrtdp  #顯示到畫面上

            NEXT FIELD nmaacrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaacrtdp
            #add-point:BEFORE FIELD nmaacrtdp name="construct.b.nmaacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaacrtdp
            
            #add-point:AFTER FIELD nmaacrtdp name="construct.a.nmaacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaacrtdt
            #add-point:BEFORE FIELD nmaacrtdt name="construct.b.nmaacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.nmaamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaamodid
            #add-point:ON ACTION controlp INFIELD nmaamodid name="construct.c.nmaamodid"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmaamodid  #顯示到畫面上

            NEXT FIELD nmaamodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaamodid
            #add-point:BEFORE FIELD nmaamodid name="construct.b.nmaamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaamodid
            
            #add-point:AFTER FIELD nmaamodid name="construct.a.nmaamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaamoddt
            #add-point:BEFORE FIELD nmaamoddt name="construct.b.nmaamoddt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON nmas002,nmas003,nmas004,nmas005
           FROM s_detail1[1].nmas002,s_detail1[1].nmas003,s_detail1[1].nmas004,s_detail1[1].nmas005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas002
            #add-point:BEFORE FIELD nmas002 name="construct.b.page1.nmas002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas002
            
            #add-point:AFTER FIELD nmas002 name="construct.a.page1.nmas002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.nmas002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas002
            #add-point:ON ACTION controlp INFIELD nmas002 name="construct.c.page1.nmas002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.nmas003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas003
            #add-point:ON ACTION controlp INFIELD nmas003 name="construct.c.page1.nmas003"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmas003  #顯示到畫面上

            NEXT FIELD nmas003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas003
            #add-point:BEFORE FIELD nmas003 name="construct.b.page1.nmas003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas003
            
            #add-point:AFTER FIELD nmas003 name="construct.a.page1.nmas003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas004
            #add-point:BEFORE FIELD nmas004 name="construct.b.page1.nmas004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas004
            
            #add-point:AFTER FIELD nmas004 name="construct.a.page1.nmas004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.nmas004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas004
            #add-point:ON ACTION controlp INFIELD nmas004 name="construct.c.page1.nmas004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas005
            #add-point:BEFORE FIELD nmas005 name="construct.b.page1.nmas005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas005
            
            #add-point:AFTER FIELD nmas005 name="construct.a.page1.nmas005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.nmas005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas005
            #add-point:ON ACTION controlp INFIELD nmas005 name="construct.c.page1.nmas005"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
     #151201-00002#16 Add  ---(S)---
      CONSTRUCT g_wc2_table2 ON glab003,nmas003,glabld,glab005
           FROM s_detail2[1].glab003,s_detail2[1].nmas003,s_detail2[1].glabld,s_detail2[1].glab005

         BEFORE CONSTRUCT

         ON ACTION controlp INFIELD glab003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_nmaj001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO glab003  #顯示到畫面上
            NEXT FIELD glab003                     #返回原欄位

         ON ACTION controlp INFIELD nmas003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO nmas003  #顯示到畫面上
            NEXT FIELD nmas003                     #返回原欄位

         ON ACTION controlp INFIELD glabld
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_glaald_03()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO glabld   #顯示到畫面上
            NEXT FIELD glabld                      #返回原欄位

         ON ACTION controlp INFIELD glab005
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_glac002()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO glab005  #顯示到畫面上
            NEXT FIELD glab005                     #返回原欄位

      END CONSTRUCT
     #151201-00002#16 Add  ---(E)---
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "nmaa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "nmas_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
  #151201-00002#16 Add  ---(S)---
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
  #151201-00002#16 Add  ---(E)---
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION anmi120_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_nmas_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL g_nmas2_d.clear()   #151201-00002#16 Add
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL anmi120_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL anmi120_browser_fill("")
      CALL anmi120_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL anmi120_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL anmi120_fetch("F") 
      #顯示單身筆數
      CALL anmi120_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION anmi120_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_nmaa_m.nmaa001 = g_browser[g_current_idx].b_nmaa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   
   #遮罩相關處理
   LET g_nmaa_m_mask_o.* =  g_nmaa_m.*
   CALL anmi120_nmaa_t_mask()
   LET g_nmaa_m_mask_n.* =  g_nmaa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmi120_set_act_visible()   
   CALL anmi120_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
 
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_nmaa_m_t.* = g_nmaa_m.*
   LET g_nmaa_m_o.* = g_nmaa_m.*
   
   LET g_data_owner = g_nmaa_m.nmaaownid      
   LET g_data_dept  = g_nmaa_m.nmaaowndp
   
   #重新顯示   
   CALL anmi120_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.insert" >}
#+ 資料新增
PRIVATE FUNCTION anmi120_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_nmas_d.clear()   
 
 
   INITIALIZE g_nmaa_m.* TO NULL             #DEFAULT 設定
   
   LET g_nmaa001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   CALL g_nmas2_d.clear()   #151201-00002#16 Add
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_nmaa_m.nmaaownid = g_user
      LET g_nmaa_m.nmaaowndp = g_dept
      LET g_nmaa_m.nmaacrtid = g_user
      LET g_nmaa_m.nmaacrtdp = g_dept 
      LET g_nmaa_m.nmaacrtdt = cl_get_current()
      LET g_nmaa_m.nmaamodid = g_user
      LET g_nmaa_m.nmaamoddt = cl_get_current()
      LET g_nmaa_m.nmaastus = 'Y'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_nmaa_m.nmaa006 = "N"
      LET g_nmaa_m.nmaastus = "Y"
 
  
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_nmaa_m_t.* = g_nmaa_m.*
      LET g_nmaa_m_o.* = g_nmaa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_nmaa_m.nmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
    
      CALL anmi120_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_nmaa_m.* TO NULL
         INITIALIZE g_nmas_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         INITIALIZE g_nmas2_d TO NULL   #151201-00002#16 Add
         #end add-point 
         CALL anmi120_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_nmas_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmi120_set_act_visible()   
   CALL anmi120_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " nmaaent = " ||g_enterprise|| " AND",
                      " nmaa001 = '", g_nmaa_m.nmaa001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL anmi120_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE anmi120_cl
   
   CALL anmi120_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   
   
   #遮罩相關處理
   LET g_nmaa_m_mask_o.* =  g_nmaa_m.*
   CALL anmi120_nmaa_t_mask()
   LET g_nmaa_m_mask_n.* =  g_nmaa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa002_desc, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa003_desc,g_nmaa_m.nmaa004,g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005, 
       g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp, 
       g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtid_desc,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdp_desc, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamodid_desc,g_nmaa_m.nmaamoddt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_nmaa_m.nmaaownid      
   LET g_data_dept  = g_nmaa_m.nmaaowndp
   
   #功能已完成,通報訊息中心
   CALL anmi120_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.modify" >}
#+ 資料修改
PRIVATE FUNCTION anmi120_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_nmaa_m_t.* = g_nmaa_m.*
   LET g_nmaa_m_o.* = g_nmaa_m.*
   
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
   CALL s_transaction_begin()
   
   OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN anmi120_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   
   #檢查是否允許此動作
   IF NOT anmi120_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_nmaa_m_mask_o.* =  g_nmaa_m.*
   CALL anmi120_nmaa_t_mask()
   LET g_nmaa_m_mask_n.* =  g_nmaa_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL anmi120_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_nmaa001_t = g_nmaa_m.nmaa001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_nmaa_m.nmaamodid = g_user 
LET g_nmaa_m.nmaamoddt = cl_get_current()
LET g_nmaa_m.nmaamodid_desc = cl_get_username(g_nmaa_m.nmaamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL anmi120_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE nmaa_t SET (nmaamodid,nmaamoddt) = (g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt)
          WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_nmaa_m.* = g_nmaa_m_t.*
            CALL anmi120_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_nmaa_m.nmaa001 != g_nmaa_m_t.nmaa001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE nmas_t SET nmas001 = g_nmaa_m.nmaa001
 
          WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m_t.nmaa001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "nmas_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "nmas_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmi120_set_act_visible()   
   CALL anmi120_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " nmaaent = " ||g_enterprise|| " AND",
                      " nmaa001 = '", g_nmaa_m.nmaa001, "' "
 
   #填到對應位置
   CALL anmi120_browser_fill("")
 
   CLOSE anmi120_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL anmi120_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="anmi120.input" >}
#+ 資料輸入
PRIVATE FUNCTION anmi120_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
  #151201-00002#16 Add  ---(S)---
   DEFINE  l_nmas001       LIKE nmas_t.nmas001
   DEFINE  l_nmaa002       LIKE nmaa_t.nmaa002
   DEFINE  l_ooef017       LIKE ooef_t.ooef017
   DEFINE  l_success       LIKE type_t.num5
  #151201-00002#16 Add  ---(E)---
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa002_desc, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa003_desc,g_nmaa_m.nmaa004,g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005, 
       g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp, 
       g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtid_desc,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdp_desc, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamodid_desc,g_nmaa_m.nmaamoddt
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT nmas002,nmas003,nmas004,nmas005 FROM nmas_t WHERE nmasent=? AND nmas001=?  
       AND nmas002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE anmi120_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
  #151201-00002#16 Add  ---(S)---
   LET g_forupd_sql2 = "SELECT glab003,glabld,glab005 FROM glab_t
                         WHERE glabent=?
                           AND glabld =?
                           AND glab003=?  FOR UPDATE"

   LET g_forupd_sql2 = cl_sql_forupd(g_forupd_sql2)
   LET g_forupd_sql2 = cl_sql_add_mask(g_forupd_sql2)              #遮蔽特定資料
   DECLARE anmi120_bcl2 CURSOR FROM g_forupd_sql2
  #151201-00002#16 Add  ---(E)---
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL anmi120_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL anmi120_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
       g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012, 
       g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017,g_nmaa_m.nmaa009,g_nmaa_m.nmaastus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="anmi120.input.head" >}
      #單頭段
      INPUT BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
          g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012, 
          g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017,g_nmaa_m.nmaa009,g_nmaa_m.nmaastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               IF NOT cl_null(g_nmaa_m.nmaa001)  THEN
                  CALL n_nmaal(g_nmaa_m.nmaa001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_nmaa_m.nmaa001
                  CALL ap_ref_array2(g_ref_fields," SELECT nmaal003 FROM nmaal_t WHERE nmaalent = '"
                      ||g_enterprise||"' AND nmaal001 = ? AND nmaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_nmaa_m.nmaal003 = g_rtn_fields[1]

                  DISPLAY BY NAME g_nmaa_m.nmaal003
               END IF
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN anmi120_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE anmi120_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.nmaal001 = g_nmaa_m.nmaa001
LET g_master_multi_table_t.nmaal003 = g_nmaa_m.nmaal003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.nmaal001 = ''
LET g_master_multi_table_t.nmaal003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL anmi120_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL anmi120_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa001
            #add-point:BEFORE FIELD nmaa001 name="input.b.nmaa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa001
            
            #add-point:AFTER FIELD nmaa001 name="input.a.nmaa001"
            #此段落由子樣板a05產生
            IF NOT anmi120_nmaa001_chk(g_nmaa_m.nmaa001,g_nmaa_m_t.nmaa001,p_cmd) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa001 = ''
               ELSE
                  LET g_nmaa_m.nmaa001 = g_nmaa_m_t.nmaa001
               END IF 
               NEXT FIELD nmaa001
            END IF

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa001
            #add-point:ON CHANGE nmaa001 name="input.g.nmaa001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaal003
            #add-point:BEFORE FIELD nmaal003 name="input.b.nmaal003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaal003
            
            #add-point:AFTER FIELD nmaal003 name="input.a.nmaal003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaal003
            #add-point:ON CHANGE nmaal003 name="input.g.nmaal003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa006
            #add-point:BEFORE FIELD nmaa006 name="input.b.nmaa006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa006
            
            #add-point:AFTER FIELD nmaa006 name="input.a.nmaa006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa006
            #add-point:ON CHANGE nmaa006 name="input.g.nmaa006"
            #150810 ---mark-- by Hans 網銀控卡拿掉
#            CALL anmi120_set_entry(p_cmd)
#            CALL anmi120_set_no_entry(p_cmd)
#            IF g_nmaa_m.nmaa006 = 'N' THEN
#               LET g_nmaa_m.nmaa007 = ''
#               CALL cl_set_comp_required('nmaa007',FALSE)
#            ELSE
#               CALL cl_set_comp_required('nmaa007',TRUE)
#            END IF 
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa002
            
            #add-point:AFTER FIELD nmaa002 name="input.a.nmaa002"
            DISPLAY ' ' TO g_nmaa_m.nmaa002_desc
            IF NOT anmi120_nmaa002_chk(g_nmaa_m.nmaa002) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa002 = ''
               ELSE
                  LET g_nmaa_m.nmaa002 = g_nmaa_m_t.nmaa002
               END IF 
               CALL anmi120_nmaa002_ref(g_nmaa_m.nmaa002) RETURNING g_nmaa_m.nmaa002_desc
               DISPLAY BY NAME g_nmaa_m.nmaa002_desc
               NEXT FIELD nmaa002
            END IF 
            CALL anmi120_nmaa002_ref(g_nmaa_m.nmaa002) RETURNING g_nmaa_m.nmaa002_desc
            DISPLAY BY NAME g_nmaa_m.nmaa002_desc
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa002
            #add-point:BEFORE FIELD nmaa002 name="input.b.nmaa002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa002
            #add-point:ON CHANGE nmaa002 name="input.g.nmaa002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa003
            
            #add-point:AFTER FIELD nmaa003 name="input.a.nmaa003"
            DISPLAY ' ' TO g_nmaa_m.nmaa003_desc
            IF NOT anmi120_nmaa003_chk(g_nmaa_m.nmaa003) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa003 = ''
               ELSE
                  LET g_nmaa_m.nmaa003 = g_nmaa_m_t.nmaa003
               END IF 
               CALL anmi120_nmaa003_ref(g_nmaa_m.nmaa003) RETURNING g_nmaa_m.nmaa003_desc
               DISPLAY BY NAME g_nmaa_m.nmaa003_desc
               NEXT FIELD nmaa003
            END IF 
            CALL anmi120_nmaa003_ref(g_nmaa_m.nmaa003) RETURNING g_nmaa_m.nmaa003_desc
            DISPLAY BY NAME g_nmaa_m.nmaa003_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa003
            #add-point:BEFORE FIELD nmaa003 name="input.b.nmaa003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa003
            #add-point:ON CHANGE nmaa003 name="input.g.nmaa003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa004
            
            #add-point:AFTER FIELD nmaa004 name="input.a.nmaa004"
            DISPLAY ' ' TO g_nmaa_m.nmaa004_desc
            IF NOT anmi120_nmaa004_chk(g_nmaa_m.nmaa004) THEN
               IF p_cmd = 'a' THEN
                  LET g_nmaa_m.nmaa004 = ''
               ELSE
                  LET g_nmaa_m.nmaa004 = g_nmaa_m_t.nmaa004
               END IF
               CALL anmi120_nmaa004_ref(g_nmaa_m.nmaa004,g_nmaa_m.nmaa005) 
                  RETURNING g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005
               DISPLAY BY NAME g_nmaa_m.nmaa004_desc
               DISPLAY BY NAME g_nmaa_m.nmaa005
               NEXT FIELD nmaa004
            END IF
            CALL anmi120_nmaa004_ref(g_nmaa_m.nmaa004,g_nmaa_m.nmaa005) 
               RETURNING g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005
            DISPLAY BY NAME g_nmaa_m.nmaa004_desc
            DISPLAY BY NAME g_nmaa_m.nmaa005
            CALL anmi120_set_entry(p_cmd)
            CALL anmi120_set_no_entry(p_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa004
            #add-point:BEFORE FIELD nmaa004 name="input.b.nmaa004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa004
            #add-point:ON CHANGE nmaa004 name="input.g.nmaa004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa005
            #add-point:BEFORE FIELD nmaa005 name="input.b.nmaa005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa005
            
            #add-point:AFTER FIELD nmaa005 name="input.a.nmaa005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa005
            #add-point:ON CHANGE nmaa005 name="input.g.nmaa005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa007
            #add-point:BEFORE FIELD nmaa007 name="input.b.nmaa007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa007
            
            #add-point:AFTER FIELD nmaa007 name="input.a.nmaa007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa007
            #add-point:ON CHANGE nmaa007 name="input.g.nmaa007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_oofa011
            #add-point:BEFORE FIELD l_oofa011 name="input.b.l_oofa011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_oofa011
            
            #add-point:AFTER FIELD l_oofa011 name="input.a.l_oofa011"
            IF NOT anmi120_oofa011_chk(g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008) THEN
               LET g_nmaa_m.l_oofa011 = g_nmaa_m_t.l_oofa011
               LET g_nmaa_m.nmaa008 = g_nmaa_m_t.nmaa008
               NEXT FIELD l_oofa011
            END IF 
            CALL anmi120_oofa011_ref(g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008) 
              RETURNING g_nmaa_m.nmaa008
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_oofa011
            #add-point:ON CHANGE l_oofa011 name="input.g.l_oofa011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa008
            #add-point:BEFORE FIELD nmaa008 name="input.b.nmaa008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa008
            
            #add-point:AFTER FIELD nmaa008 name="input.a.nmaa008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa008
            #add-point:ON CHANGE nmaa008 name="input.g.nmaa008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_oofc012
            #add-point:BEFORE FIELD l_oofc012 name="input.b.l_oofc012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_oofc012
            
            #add-point:AFTER FIELD l_oofc012 name="input.a.l_oofc012"
            IF NOT anmi120_oofc012_chk(g_nmaa_m.l_oofc012,g_nmaa_m.nmaa008) THEN
               LET g_nmaa_m.l_oofc012 = g_nmaa_m_t.l_oofc012
               LET g_nmaa_m.nmaa010 = g_nmaa_m_t.nmaa010
               NEXT FIELD l_oofc012
            END IF
            CALL anmi120_oofc012_ref(g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010) 
               RETURNING g_nmaa_m.nmaa010
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_oofc012
            #add-point:ON CHANGE l_oofc012 name="input.g.l_oofc012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa010
            #add-point:BEFORE FIELD nmaa010 name="input.b.nmaa010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa010
            
            #add-point:AFTER FIELD nmaa010 name="input.a.nmaa010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa010
            #add-point:ON CHANGE nmaa010 name="input.g.nmaa010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_oofb017
            #add-point:BEFORE FIELD l_oofb017 name="input.b.l_oofb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_oofb017
            
            #add-point:AFTER FIELD l_oofb017 name="input.a.l_oofb017"
            IF NOT anmi120_oofb017_chk(g_nmaa_m.l_oofb017,g_nmaa_m.nmaa008) THEN
               LET g_nmaa_m.l_oofb017 = g_nmaa_m_t.l_oofb017
               LET g_nmaa_m.nmaa009 = g_nmaa_m_t.nmaa009
               NEXT FIELD nmaa009
            END IF 
            CALL anmi120_oofb017_ref(g_nmaa_m.l_oofb017,g_nmaa_m.nmaa009)
               RETURNING g_nmaa_m.nmaa009
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_oofb017
            #add-point:ON CHANGE l_oofb017 name="input.g.l_oofb017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaa009
            #add-point:BEFORE FIELD nmaa009 name="input.b.nmaa009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaa009
            
            #add-point:AFTER FIELD nmaa009 name="input.a.nmaa009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaa009
            #add-point:ON CHANGE nmaa009 name="input.g.nmaa009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmaastus
            #add-point:BEFORE FIELD nmaastus name="input.b.nmaastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmaastus
            
            #add-point:AFTER FIELD nmaastus name="input.a.nmaastus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmaastus
            #add-point:ON CHANGE nmaastus name="input.g.nmaastus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.nmaa001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa001
            #add-point:ON ACTION controlp INFIELD nmaa001 name="input.c.nmaa001"
            
            #END add-point
 
 
         #Ctrlp:input.c.nmaal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaal003
            #add-point:ON ACTION controlp INFIELD nmaal003 name="input.c.nmaal003"
            
            #END add-point
 
 
         #Ctrlp:input.c.nmaa006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa006
            #add-point:ON ACTION controlp INFIELD nmaa006 name="input.c.nmaa006"
            
            #END add-point
 
 
         #Ctrlp:input.c.nmaa002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa002
            #add-point:ON ACTION controlp INFIELD nmaa002 name="input.c.nmaa002"
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE
            
            LET g_qryparam.default1 = g_nmaa_m.nmaa002             #給予default值
            LET g_qryparam.where = "ooef001 IN",g_wc_orga   #161028-00051#1   add
            #給予arg

            #CALL q_ooef001()                                #呼叫開窗     #161021-00038#1 mark
            CALL q_ooef001_33()                                            #161021-00038#1 add         

            LET g_nmaa_m.nmaa002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmaa_m.nmaa002 TO nmaa002              #顯示到畫面上
            CALL anmi120_nmaa002_ref(g_nmaa_m.nmaa002) RETURNING g_nmaa_m.nmaa002_desc
            DISPLAY BY NAME g_nmaa_m.nmaa002_desc
            NEXT FIELD nmaa002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.nmaa003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa003
            #add-point:ON ACTION controlp INFIELD nmaa003 name="input.c.nmaa003"
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmaa_m.nmaa003             #給予default值

            #給予arg

            CALL q_nmag001()                                #呼叫開窗

            LET g_nmaa_m.nmaa003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmaa_m.nmaa003 TO nmaa003              #顯示到畫面上
            CALL anmi120_nmaa003_ref(g_nmaa_m.nmaa003) RETURNING g_nmaa_m.nmaa003_desc
            DISPLAY BY NAME g_nmaa_m.nmaa003_desc
            NEXT FIELD nmaa003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.nmaa004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa004
            #add-point:ON ACTION controlp INFIELD nmaa004 name="input.c.nmaa004"
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmaa_m.nmaa004             #給予default值

            #給予arg

            CALL q_nmab001()                                #呼叫開窗

            LET g_nmaa_m.nmaa004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmaa_m.nmaa004 TO nmaa004              #顯示到畫面上
            CALL anmi120_nmaa004_ref(g_nmaa_m.nmaa004,g_nmaa_m.nmaa005) 
               RETURNING g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005
            DISPLAY BY NAME g_nmaa_m.nmaa004_desc
            DISPLAY BY NAME g_nmaa_m.nmaa005
            CALL anmi120_set_entry(p_cmd)
            CALL anmi120_set_no_entry(p_cmd)
            NEXT FIELD nmaa004                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.nmaa005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa005
            #add-point:ON ACTION controlp INFIELD nmaa005 name="input.c.nmaa005"
            
            #END add-point
 
 
         #Ctrlp:input.c.nmaa007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa007
            #add-point:ON ACTION controlp INFIELD nmaa007 name="input.c.nmaa007"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_oofa011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_oofa011
            #add-point:ON ACTION controlp INFIELD l_oofa011 name="input.c.l_oofa011"
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmaa_m.nmaa008             #給予default值

            #給予arg

            CALL q_oofa001()                                #呼叫開窗

           # LET g_nmaa_m.l_oofa011 = g_qryparam.return1              #將開窗取得的值回傳到變數
            IF g_nmaa_m.nmaa008 != g_qryparam.return1 THEN
            CALL anmi120_nmaa008_ref_nmaa009_nmaa010(g_qryparam.return1) 
               RETURNING g_nmaa_m.nmaa009,g_nmaa_m.nmaa010
            END IF 
            LET g_nmaa_m.nmaa008 = g_qryparam.return1
            CALL anmi120_nmaa008_ref(g_nmaa_m.nmaa008) 
               RETURNING g_nmaa_m.l_oofa011
            DISPLAY g_nmaa_m.l_oofa011 TO l_oofa011              #顯示到畫面上
            CALL anmi120_nmaa008_ref_nmaa009_nmaa010(g_nmaa_m.nmaa008) 
               RETURNING g_nmaa_m.nmaa009,g_nmaa_m.nmaa010
            CALL anmi120_nmaa009_ref(g_nmaa_m.nmaa009) RETURNING g_nmaa_m.l_oofb017
            DISPLAY BY NAME g_nmaa_m.l_oofb017
            CALL anmi120_nmaa010_ref(g_nmaa_m.nmaa010) RETURNING g_nmaa_m.l_oofc012
            DISPLAY BY NAME g_nmaa_m.l_oofc012 
            NEXT FIELD l_oofa011                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.nmaa008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa008
            #add-point:ON ACTION controlp INFIELD nmaa008 name="input.c.nmaa008"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_oofc012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_oofc012
            #add-point:ON ACTION controlp INFIELD l_oofc012 name="input.c.l_oofc012"
            
            #END add-point
 
 
         #Ctrlp:input.c.nmaa010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa010
            #add-point:ON ACTION controlp INFIELD nmaa010 name="input.c.nmaa010"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_oofb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_oofb017
            #add-point:ON ACTION controlp INFIELD l_oofb017 name="input.c.l_oofb017"
            
            #END add-point
 
 
         #Ctrlp:input.c.nmaa009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaa009
            #add-point:ON ACTION controlp INFIELD nmaa009 name="input.c.nmaa009"
            
            #END add-point
 
 
         #Ctrlp:input.c.nmaastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmaastus
            #add-point:ON ACTION controlp INFIELD nmaastus name="input.c.nmaastus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_nmaa_m.nmaa001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #end add-point
               
               INSERT INTO nmaa_t (nmaaent,nmaa001,nmaa006,nmaa002,nmaa003,nmaa004,nmaa005,nmaa007,nmaa008, 
                   nmaa010,nmaa009,nmaastus,nmaaownid,nmaaowndp,nmaacrtid,nmaacrtdp,nmaacrtdt,nmaamodid, 
                   nmaamoddt)
               VALUES (g_enterprise,g_nmaa_m.nmaa001,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003, 
                   g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
                   g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid, 
                   g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_nmaa_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_nmaa_m.nmaa001 = g_master_multi_table_t.nmaal001 AND
         g_nmaa_m.nmaal003 = g_master_multi_table_t.nmaal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'nmaalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_nmaa_m.nmaa001
            LET l_field_keys[02] = 'nmaal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.nmaal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'nmaal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_nmaa_m.nmaal003
            LET l_fields[01] = 'nmaal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'nmaal_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL anmi120_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL anmi120_b_fill()
                  CALL anmi120_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL anmi120_nmaa_t_mask_restore('restore_mask_o')
               
               UPDATE nmaa_t SET (nmaa001,nmaa006,nmaa002,nmaa003,nmaa004,nmaa005,nmaa007,nmaa008,nmaa010, 
                   nmaa009,nmaastus,nmaaownid,nmaaowndp,nmaacrtid,nmaacrtdp,nmaacrtdt,nmaamodid,nmaamoddt) = (g_nmaa_m.nmaa001, 
                   g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005, 
                   g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010,g_nmaa_m.nmaa009,g_nmaa_m.nmaastus, 
                   g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdt, 
                   g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt)
                WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "nmaa_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_nmaa_m.nmaa001 = g_master_multi_table_t.nmaal001 AND
         g_nmaa_m.nmaal003 = g_master_multi_table_t.nmaal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'nmaalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_nmaa_m.nmaa001
            LET l_field_keys[02] = 'nmaal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.nmaal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'nmaal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_nmaa_m.nmaal003
            LET l_fields[01] = 'nmaal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'nmaal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL anmi120_nmaa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_nmaa_m_t)
               LET g_log2 = util.JSON.stringify(g_nmaa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_nmaa001_t = g_nmaa_m.nmaa001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="anmi120.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_nmas_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_nmas_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL anmi120_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_nmas_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN anmi120_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE anmi120_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_nmas_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_nmas_d[l_ac].nmas002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_nmas_d_t.* = g_nmas_d[l_ac].*  #BACKUP
               LET g_nmas_d_o.* = g_nmas_d[l_ac].*  #BACKUP
               CALL anmi120_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL anmi120_set_no_entry_b(l_cmd)
               IF NOT anmi120_lock_b("nmas_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH anmi120_bcl INTO g_nmas_d[l_ac].nmas002,g_nmas_d[l_ac].nmas003,g_nmas_d[l_ac].nmas004, 
                      g_nmas_d[l_ac].nmas005
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_nmas_d_t.nmas002,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_nmas_d_mask_o[l_ac].* =  g_nmas_d[l_ac].*
                  CALL anmi120_nmas_t_mask()
                  LET g_nmas_d_mask_n[l_ac].* =  g_nmas_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL anmi120_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            LET g_nmas2_d[l_ac].glab003 = g_nmas_d[l_ac].nmas002   #151201-00002#16 Add
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_nmas_d[l_ac].* TO NULL 
            INITIALIZE g_nmas_d_t.* TO NULL 
            INITIALIZE g_nmas_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_nmas_d[l_ac].nmas004 = "N"
      LET g_nmas_d[l_ac].nmas005 = "N"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_nmas_d_t.* = g_nmas_d[l_ac].*     #新輸入資料
            LET g_nmas_d_o.* = g_nmas_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL anmi120_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL anmi120_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_nmas_d[li_reproduce_target].* = g_nmas_d[li_reproduce].*
 
               LET g_nmas_d[li_reproduce_target].nmas002 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            CALL anmi120_nmas002_def(g_nmaa_m.nmaa001,g_nmas_d[l_ac].nmas002) 
               RETURNING g_nmas_d[l_ac].nmas002
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM nmas_t 
             WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m.nmaa001
 
               AND nmas002 = g_nmas_d[l_ac].nmas002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmaa_m.nmaa001
               LET gs_keys[2] = g_nmas_d[g_detail_idx].nmas002
               CALL anmi120_insert_b('nmas_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_nmas_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "nmas_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL anmi120_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_nmaa_m.nmaa001
 
               LET gs_keys[gs_keys.getLength()+1] = g_nmas_d_t.nmas002
 
            
               #刪除同層單身
               IF NOT anmi120_delete_b('nmas_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmi120_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT anmi120_key_delete_b(gs_keys,'nmas_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmi120_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE anmi120_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_nmas_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_nmas_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas002
            #add-point:BEFORE FIELD nmas002 name="input.b.page1.nmas002"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas002
            
            #add-point:AFTER FIELD nmas002 name="input.a.page1.nmas002"
            #此段落由子樣板a05產生
            IF NOT anmi120_nmas002_chk(g_nmaa_m.nmaa001,g_nmaa_m_t.nmaa001,g_nmas_d[l_ac].nmas002,g_nmas_d_t.nmas002,l_cmd) THEN
               IF l_cmd = 'a' THEN
                  LEt g_nmas_d[l_ac].nmas002 = ''
               ELSE
                  LET g_nmas_d[l_ac].nmas002 = g_nmas_d_t.nmas002
               END IF 
               NEXT FIELD nmas002
            END IF 

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmas002
            #add-point:ON CHANGE nmas002 name="input.g.page1.nmas002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas003
            #add-point:BEFORE FIELD nmas003 name="input.b.page1.nmas003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas003
            
            #add-point:AFTER FIELD nmas003 name="input.a.page1.nmas003"
            IF NOT anmi120_nmas003_chk(g_nmas_d[l_ac].nmas003) THEN
               IF l_cmd = 'a' THEN
                  LET g_nmas_d[l_ac].nmas003 = ''
               ELSE
                  LET g_nmas_d[l_ac].nmas003 = g_nmas_d_t.nmas003
               END IF 
               NEXT FIELD nmas003
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmas003
            #add-point:ON CHANGE nmas003 name="input.g.page1.nmas003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas004
            #add-point:BEFORE FIELD nmas004 name="input.b.page1.nmas004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas004
            
            #add-point:AFTER FIELD nmas004 name="input.a.page1.nmas004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmas004
            #add-point:ON CHANGE nmas004 name="input.g.page1.nmas004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD nmas005
            #add-point:BEFORE FIELD nmas005 name="input.b.page1.nmas005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD nmas005
            
            #add-point:AFTER FIELD nmas005 name="input.a.page1.nmas005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE nmas005
            #add-point:ON CHANGE nmas005 name="input.g.page1.nmas005"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.nmas002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas002
            #add-point:ON ACTION controlp INFIELD nmas002 name="input.c.page1.nmas002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.nmas003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas003
            #add-point:ON ACTION controlp INFIELD nmas003 name="input.c.page1.nmas003"
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmas_d[l_ac].nmas003             #給予default值

            #給予arg

            CALL q_ooai001()                                #呼叫開窗

            LET g_nmas_d[l_ac].nmas003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_nmas_d[l_ac].nmas003 TO nmas003              #顯示到畫面上

            NEXT FIELD nmas003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.nmas004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas004
            #add-point:ON ACTION controlp INFIELD nmas004 name="input.c.page1.nmas004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.nmas005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD nmas005
            #add-point:ON ACTION controlp INFIELD nmas005 name="input.c.page1.nmas005"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_nmas_d[l_ac].* = g_nmas_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE anmi120_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_nmas_d[l_ac].nmas002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_nmas_d[l_ac].* = g_nmas_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL anmi120_nmas_t_mask_restore('restore_mask_o')
      
               UPDATE nmas_t SET (nmas001,nmas002,nmas003,nmas004,nmas005) = (g_nmaa_m.nmaa001,g_nmas_d[l_ac].nmas002, 
                   g_nmas_d[l_ac].nmas003,g_nmas_d[l_ac].nmas004,g_nmas_d[l_ac].nmas005)
                WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m.nmaa001 
 
                  AND nmas002 = g_nmas_d_t.nmas002 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_nmas_d[l_ac].* = g_nmas_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "nmas_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_nmas_d[l_ac].* = g_nmas_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "nmas_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_nmaa_m.nmaa001
               LET gs_keys_bak[1] = g_nmaa001_t
               LET gs_keys[2] = g_nmas_d[g_detail_idx].nmas002
               LET gs_keys_bak[2] = g_nmas_d_t.nmas002
               CALL anmi120_update_b('nmas_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL anmi120_nmas_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_nmas_d[g_detail_idx].nmas002 = g_nmas_d_t.nmas002 
 
                  ) THEN
                  LET gs_keys[01] = g_nmaa_m.nmaa001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_nmas_d_t.nmas002
 
                  CALL anmi120_key_update_b(gs_keys,'nmas_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_nmaa_m),util.JSON.stringify(g_nmas_d_t)
               LET g_log2 = util.JSON.stringify(g_nmaa_m),util.JSON.stringify(g_nmas_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL anmi120_unlock_b("nmas_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_nmas_d[li_reproduce_target].* = g_nmas_d[li_reproduce].*
 
               LET g_nmas_d[li_reproduce_target].nmas002 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_nmas_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_nmas_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="anmi120.input.other" >}
      
      #add-point:自定義input name="input.more_input"
     #151201-00002#16 Add  ---(S)---
      #Page2 預設值產生於此處
      INPUT ARRAY g_nmas2_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
               CALL FGL_SET_ARR_CURR(g_nmas2_d.getLength()+1)
               LET g_insert = 'N'
            END IF
            CALL anmi120_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_nmas2_d.getLength()

         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET g_current_page = 2
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            CALL s_transaction_begin()
            LET g_rec_b = g_nmas2_d.getLength()
            IF g_rec_b >= l_ac AND g_nmas2_d[l_ac].glab003 IS NOT NULL THEN
               LET l_cmd='u'
               LET g_nmas2_d_t.* = g_nmas2_d[l_ac].*  #BACKUP
               LET g_nmas2_d_o.* = g_nmas2_d[l_ac].*  #BACKUP
               CALL anmi120_set_entry_b(l_cmd)
               CALL anmi120_set_no_entry_b(l_cmd)
               IF NOT anmi120_lock_b("glab_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH anmi120_bcl2 INTO g_nmas2_d[l_ac].glab003,g_nmas2_d[l_ac].glabld
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_nmas2_d_t.glab003
                     LET g_errparam.code   = SQLCA.sqlcode
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  #遮罩相關處理
                  LET g_nmas2_d_mask_o[l_ac].* =  g_nmas2_d[l_ac].*
                  LET g_nmas2_d_mask_n[l_ac].* =  g_nmas2_d[l_ac].*
                  LET g_bfill = "N"
                  CALL anmi120_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF

         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_nmas2_d[l_ac].* TO NULL
            INITIALIZE g_nmas2_d_t.* TO NULL
            INITIALIZE g_nmas2_d_o.* TO NULL
            LET g_nmas2_d_t.* = g_nmas2_d[l_ac].*     #新輸入資料
            LET g_nmas2_d_o.* = g_nmas2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL anmi120_set_entry_b(l_cmd)
            CALL anmi120_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_nmas2_d[li_reproduce_target].* = g_nmas2_d[li_reproduce].*
               LET g_nmas2_d[li_reproduce_target].glab003 = NULL
            END IF

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 9001
               LET g_errparam.popup  = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM glab_t
             WHERE glabent = g_enterprise
               AND glabld  = g_nmas2_d[l_ac].glabld
               AND glab001 = '40'
               AND glab002 = '40'
               AND glab003 = g_nmas2_d[l_ac].glab003

            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               #同步新增到同層的table
               INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_nmas2_d[g_detail_idx].glab003
               LET gs_keys[2] = g_nmas2_d[g_detail_idx].glabld
               LET gs_keys[3] = g_nmas2_d[g_detail_idx].glab005
               CALL anmi120_insert_b('glab_t',gs_keys,"'2'")
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.code   = "std-00006"
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               INITIALIZE g_nmas2_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = "glab_t"
               LET g_errparam.code   = SQLCA.sqlcode
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ""
                  LET g_errparam.code   = -263
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  CANCEL DELETE
               END IF

               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_nmaa_m.nmaa001
               LET gs_keys[gs_keys.getLength()+1] = g_nmas2_d_t.glab003
               #刪除同層單身
               IF NOT anmi120_delete_b('glab_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmi120_bcl2
                  CANCEL DELETE
               END IF

               #刪除下層單身
               IF NOT anmi120_key_delete_b(gs_keys,'glac_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE anmi120_bcl2
                  CANCEL DELETE
               END IF

               #刪除多語言

               CALL s_transaction_end('Y','0')
               CLOSE anmi120_bcl2
               LET g_rec_b = g_rec_b-1
               LET l_count = g_nmas2_d.getLength()
            END IF

         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_nmas2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF

         AFTER FIELD glab003
            IF NOT cl_null(g_nmas2_d[l_ac].glab003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_nmas2_d[l_ac].glab003 != g_nmas2_d_t.glab003 OR g_nmas2_d_t.glab003 IS NULL )) THEN
                 #1.可維護的交易帳戶編碼,只能屬於單頭帳戶編碼下屬交易帳戶
                 #2.交易帳戶編碼+帳套不可重複
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt FROM nmas_t WHERE nmasent = g_enterprise
                     AND nmas001 = g_nmaa_m.nmaa001
                     AND nmas002 = g_nmas2_d[l_ac].glab003
                  IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                  IF l_cnt < 1 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_nmas2_d[l_ac].glab003
                     LET g_errparam.code   = 'anm-00571'
                     LET g_errparam.popup  = FALSE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_nmas2_d[l_ac].glabld) THEN
                     LET l_cnt = 0
                     SELECT COUNT(*) INTO l_cnt FROM glab_t WHERE glabent = g_enterprise
                        AND glab003 = g_nmas2_d[l_ac].glab003
                        AND glabld  = g_nmas2_d[l_ac].glabld
                        AND glab001 = '40'
                        AND glab002 = '40'
                     IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                     IF l_cnt > 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = g_nmas2_d[l_ac].glab003
                        LET g_errparam.code   = 'anm-00572'
                        LET g_errparam.popup  = FALSE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               SELECT nmas003 INTO g_nmas2_d[l_ac].nmas003 FROM nmas_t WHERE nmasent = g_enterprise
                  AND nmas001 = g_nmaa_m.nmaa001
                  AND nmas002 = g_nmas2_d[l_ac].glab003
               DISPLAY g_nmas2_d[l_ac].glab003,g_nmas2_d[l_ac].nmas003 TO glab003,nmas003
            END IF

         AFTER FIELD glabld
            IF NOT cl_null(g_nmas2_d[l_ac].glabld) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_nmas2_d[l_ac].glabld != g_nmas2_d_t.glabld OR g_nmas2_d_t.glabld IS NULL )) THEN
                 #1.檢查帳套可用性
                 CALL s_fin_ld_chk(g_nmas2_d[l_ac].glabld,g_user,'Y') RETURNING l_success,g_errno
                     IF NOT l_success THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = g_nmas2_d[l_ac].glab003
                        LET g_errparam.code   = g_errno
                        #160321-00016#38 --s add
                        LET g_errparam.replace[1] = 'agli010'
                        LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                        LET g_errparam.exeprog = 'agli010'
                        #160321-00016#38 --e add
                        LET g_errparam.popup  = FALSE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                 #160829-00031#1 Add  ---(S)---
                 LET l_count = 0
                 SELECT COUNT(*) INTO l_count FROM glaa_t WHERE glaaent = g_enterprise
                    AND glaald = g_nmas2_d[l_ac].glabld
                    AND glaacomp = g_nmaa_m.nmaa002
                 IF cl_null(l_count) THEN LET l_count = 0 END IF
                 IF l_count = 0 THEN
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.extend = g_nmas2_d[l_ac].glabld
                    LET g_errparam.code   = 'anm-00408'
                    LET g_errparam.popup  = TRUE
                    CALL cl_err()
                    NEXT FIELD CURRENT
                 END IF
                 #160829-00031#1 Add  ---(E)---
                 #2.交易帳戶編碼+帳套不可重複
                  IF NOT cl_null(g_nmas2_d[l_ac].glab003) THEN
                     LET l_cnt = 0
                     SELECT COUNT(*) INTO l_cnt FROM glab_t WHERE glabent = g_enterprise
                        AND glab003 = g_nmas2_d[l_ac].glab003
                        AND glabld  = g_nmas2_d[l_ac].glabld
                        AND glab001 = '40'
                        AND glab002 = '40'
                     IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                     IF l_cnt > 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = g_nmas2_d[l_ac].glab003
                        LET g_errparam.code   = 'anm-00572'
                        LET g_errparam.popup  = FALSE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF

         AFTER FIELD glab005
            DISPLAY '' TO s_detail2[l_ac].glab005_desc
            IF NOT cl_null(g_nmas2_d[l_ac].glabld) AND NOT cl_null(g_nmas2_d[l_ac].glab005) THEN
              # 开窗模糊查询
               IF s_aglt310_getlike_lc_subject(g_nmas2_d[l_ac].glabld,g_nmas2_d[l_ac].glab005,"")  THEN
                  SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise
                     AND glaald  = g_nmas2_d[l_ac].glabld

                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = 'FALSE'
                  LET g_qryparam.default1 = g_nmas2_d[l_ac].glab005

                  LET g_qryparam.arg1 = l_glaa004
                  LET g_qryparam.arg2 = g_nmas2_d[l_ac].glab005
                  LET g_qryparam.arg3 = g_nmas2_d[l_ac].glabld
                  LET g_qryparam.arg4 = " 1"
                  CALL q_glac002_6()
                  LET  g_nmas2_d[l_ac].glab005 = g_qryparam.return1
                  DISPLAY g_nmas2_d[l_ac].glab005 TO s_detail2[l_ac].glab005
                 CALL s_desc_get_account_desc(g_nmas2_d[l_ac].glabld,g_nmas2_d[l_ac].glab005)
                    RETURNING g_nmas2_d[l_ac].glab005_desc
                  DISPLAY g_nmas2_d[l_ac].glab005_desc TO s_detail2[l_ac].glab005_desc
               END IF
               #科目存在性，有效性，非统治科目，非子系统科目，账户科目属性检查
               IF NOT  s_aglt310_lc_subject(g_nmas2_d[l_ac].glabld,g_nmas2_d[l_ac].glab005,'N') THEN
                  LET g_nmas2_d[l_ac].glab005 = g_nmas2_d_t.glab005
                  CALL s_desc_get_account_desc(g_nmas2_d[l_ac].glabld,g_nmas2_d[l_ac].glab005)
                     RETURNING g_nmas2_d[l_ac].glab005_desc
                  DISPLAY g_nmas2_d[l_ac].glab005_desc TO s_detail2[l_ac].glab005_desc
                  NEXT FIELD glab005

               END IF
            END IF
            CALL s_desc_get_account_desc(g_nmas2_d[l_ac].glabld,g_nmas2_d[l_ac].glab005)
               RETURNING g_nmas2_d[l_ac].glab005_desc
            DISPLAY g_nmas2_d[l_ac].glab005_desc TO s_detail2[l_ac].glab005_desc

         ON ACTION controlp INFIELD glab003
            #開窗i段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_nmas2_d[l_ac].glab003            #給予default值
            LET g_qryparam.where = "nmas001 = '",g_nmaa_m.nmaa001,"'"
            CALL q_nmas002_5()                               #呼叫開窗
            LET g_nmas2_d[l_ac].glab003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            SELECT nmas003 INTO g_nmas2_d[l_ac].nmas003 FROM nmas_t WHERE nmasent = g_enterprise
               AND nmas001 = g_nmaa_m.nmaa001
               AND nmas002 = g_nmas2_d[l_ac].glab003
            DISPLAY g_nmas2_d[l_ac].glab003,g_nmas2_d[l_ac].nmas003 TO glab003,nmas003
            NEXT FIELD glab003

         ON ACTION controlp INFIELD glabld
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_nmas2_d[l_ac].glabld            #給予default值
            SELECT ooef017 INTO l_ooef017 FROM ooef_t WHERE ooefent = g_enterprise
               AND ooef001 = g_nmaa_m.nmaa002
            LET g_qryparam.where = " glaacomp = '",l_ooef017,"'"
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                                #呼叫開窗
            LET g_nmas2_d[l_ac].glabld = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_nmas2_d[l_ac].glabld TO glabld
            NEXT FIELD glabld

         ON ACTION controlp INFIELD glab005
            SELECT glaa004 INTO l_glaa004 FROM glaa_t WHERE glaaent = g_enterprise
               AND glaald  = g_nmas2_d[l_ac].glabld
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_nmas2_d[l_ac].glab005            #給予default值
            LET g_qryparam.where = "glac003 !='1' AND glac001 = '",l_glaa004,"' ",
                                   " AND glac002 IN (SELECT glad001 FROM glad_t,glac_t WHERE glad001= glac002 AND gladld='",g_nmas2_d[l_ac].glabld,"' AND gladent=",g_enterprise,
                                   " AND gladstus = 'Y' )" #150916-00015#1 add
            CALL aglt310_04()                               #呼叫開窗

            LET g_nmas2_d[l_ac].glab005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_qryparam.where = ""
            DISPLAY g_nmas2_d[l_ac].glab005 TO glab005
            NEXT FIELD glab005

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 9001
               LET g_errparam.popup  = FALSE
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_nmas2_d[l_ac].* = g_nmas2_d_t.*
               CLOSE anmi120_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = g_nmas2_d[l_ac].glab003
               LET g_errparam.code   = -263
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               LET g_nmas2_d[l_ac].* = g_nmas2_d_t.*
            ELSE
               #將遮罩欄位還原
               CALL anmi120_nmas_t_mask_restore('restore_mask_o')

               #如果修改了帳套,需要先把舊帳套的資料刪除,然後在根據新帳套新增一筆資料
               IF g_nmas2_d[l_ac].glabld = g_nmas2_d_t.glabld AND g_nmas2_d[l_ac].glab003 = g_nmas2_d_t.glab003 THEN
                  UPDATE glab_t SET glab005 = g_nmas2_d[l_ac].glab005
                   WHERE glabent = g_enterprise
                     AND glabld  = g_nmas2_d[l_ac].glabld
                     AND glab001 = '40'
                     AND glab002 = '40'
                     AND glab003 = g_nmas2_d[l_ac].glab003
                  CASE
                     WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "nmas_t" 
                        LET g_errparam.code   = "std-00009" 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        LET g_nmas_d[l_ac].* = g_nmas_d_t.*
                     WHEN SQLCA.sqlcode #其他錯誤
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "nmas_t" 
                        LET g_errparam.code   = SQLCA.sqlcode 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()                   
                        CALL s_transaction_end('N','0')
                        LET g_nmas_d[l_ac].* = g_nmas_d_t.*
                  END CASE
               ELSE
                  DELETE FROM glab_t
                   WHERE glabent = g_enterprise
                     AND glabld  = g_nmas2_d_t.glabld
                     AND glab001 = '40'
                     AND glab002 = '40'
                     AND glab003 = g_nmas2_d_t.glab003

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = "glab_t"
                     LET g_errparam.code   = SQLCA.sqlcode
                     LET g_errparam.popup  = FALSE
                     CALL cl_err()
                     RETURN FALSE
                  END IF

                  INSERT INTO glab_t
                              (glabent,
                               glabld,glab001,glab002,glab003,
                               glab005)
                        VALUES(g_enterprise,
                               g_nmas2_d[g_detail_idx].glabld,'40','40',g_nmas2_d[g_detail_idx].glab003,
                               g_nmas2_d[g_detail_idx].glab005)

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "glab_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = FALSE 
                     CALL cl_err()
                  END IF
               END IF

               #將遮罩欄位進行遮蔽
               CALL anmi120_nmas_t_mask_restore('restore_mask_n')

               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_nmas2_d[g_detail_idx].glab003 = g_nmas2_d_t.glab003) THEN
                  LET gs_keys[01] = g_nmaa_m.nmaa001

                  LET gs_keys[gs_keys.getLength()+1] = g_nmas2_d_t.glab003

                  CALL anmi120_key_update_b(gs_keys,'glab_t')
               END IF

               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_nmaa_m),util.JSON.stringify(g_nmas2_d_t)
               LET g_log2 = util.JSON.stringify(g_nmaa_m),util.JSON.stringify(g_nmas2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN
                  CALL s_transaction_end('N','0')
               END IF

            END IF

         AFTER ROW
            CALL anmi120_unlock_b("glab_t","'2'")
            CALL s_transaction_end('Y','0')

         AFTER INPUT

         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_nmas2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_nmas2_d.getLength()+1

      END INPUT
     #151201-00002#16 Add  ---(E)---
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD nmaa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD nmas002
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
              #151201-00002#16 Add  ---(S)---
               WHEN "s_detail2"
                  NEXT FIELD glab003
              #151201-00002#16 Add  ---(E)---
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION anmi120_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL anmi120_b_fill() #單身填充
      CALL anmi120_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL anmi120_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmaa_m.nmaa001
   CALL ap_ref_array2(g_ref_fields," SELECT nmaal003 FROM nmaal_t WHERE nmaalent = '"||g_enterprise||"' AND nmaal001 = ? AND nmaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_nmaa_m.nmaal003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_nmaa_m.nmaal003

   CALL anmi120_nmaa008_ref(g_nmaa_m.nmaa008) RETURNING g_nmaa_m.l_oofa011
   DISPLAY BY NAME g_nmaa_m.l_oofa011
   CALL anmi120_nmaa009_ref(g_nmaa_m.nmaa009) RETURNING g_nmaa_m.l_oofb017
   DISPLAY BY NAME g_nmaa_m.l_oofb017
   CALL anmi120_nmaa010_ref(g_nmaa_m.nmaa010) RETURNING g_nmaa_m.l_oofc012
   DISPLAY BY NAME g_nmaa_m.l_oofc012
   #end add-point
   
   #遮罩相關處理
   LET g_nmaa_m_mask_o.* =  g_nmaa_m.*
   CALL anmi120_nmaa_t_mask()
   LET g_nmaa_m_mask_n.* =  g_nmaa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa002_desc, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa003_desc,g_nmaa_m.nmaa004,g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005, 
       g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp, 
       g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtid_desc,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdp_desc, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamodid_desc,g_nmaa_m.nmaamoddt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_nmaa_m.nmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_nmas_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL anmi120_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION anmi120_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION anmi120_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE nmaa_t.nmaa001 
   DEFINE l_oldno     LIKE nmaa_t.nmaa001 
 
   DEFINE l_master    RECORD LIKE nmaa_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE nmas_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
    
   LET g_nmaa_m.nmaa001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_nmaa_m.nmaaownid = g_user
      LET g_nmaa_m.nmaaowndp = g_dept
      LET g_nmaa_m.nmaacrtid = g_user
      LET g_nmaa_m.nmaacrtdp = g_dept 
      LET g_nmaa_m.nmaacrtdt = cl_get_current()
      LET g_nmaa_m.nmaamodid = g_user
      LET g_nmaa_m.nmaamoddt = cl_get_current()
      LET g_nmaa_m.nmaastus = 'Y'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_nmaa_m.nmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL anmi120_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_nmaa_m.* TO NULL
      INITIALIZE g_nmas_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL anmi120_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL anmi120_set_act_visible()   
   CALL anmi120_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " nmaaent = " ||g_enterprise|| " AND",
                      " nmaa001 = '", g_nmaa_m.nmaa001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL anmi120_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL anmi120_idx_chk()
   
   LET g_data_owner = g_nmaa_m.nmaaownid      
   LET g_data_dept  = g_nmaa_m.nmaaowndp
   
   #功能已完成,通報訊息中心
   CALL anmi120_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION anmi120_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE nmas_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE anmi120_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM nmas_t
    WHERE nmasent = g_enterprise AND nmas001 = g_nmaa001_t
 
    INTO TEMP anmi120_detail
 
   #將key修正為調整後   
   UPDATE anmi120_detail 
      #更新key欄位
      SET nmas001 = g_nmaa_m.nmaa001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO nmas_t SELECT * FROM anmi120_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
  #151201-00002#16 Add  ---(S)---
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE anmi120_detail AS ",
                "SELECT * FROM glab_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO anmi120_detail SELECT * FROM glab_t
                                         WHERE glabent = g_enterprise AND  glab002= g_nmaa001_t

   #將key修正為調整後
   UPDATE anmi120_detail SET  glab002 = g_nmaa_m.nmaa001

   #將資料塞回原table
   INSERT INTO glab_t SELECT * FROM anmi120_detail

   #刪除TEMP TABLE
   DROP TABLE anmi120_detail
  #151201-00002#16 Add  ---(E)---
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE anmi120_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_nmaa001_t = g_nmaa_m.nmaa001
 
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.delete" >}
#+ 資料刪除
PRIVATE FUNCTION anmi120_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.nmaal001 = g_nmaa_m.nmaa001
LET g_master_multi_table_t.nmaal003 = g_nmaa_m.nmaal003
 
   
   CALL s_transaction_begin()
 
   OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN anmi120_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   
   
   #檢查是否允許此動作
   IF NOT anmi120_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_nmaa_m_mask_o.* =  g_nmaa_m.*
   CALL anmi120_nmaa_t_mask()
   LET g_nmaa_m_mask_n.* =  g_nmaa_m.*
   
   CALL anmi120_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL anmi120_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_nmaa001_t = g_nmaa_m.nmaa001
 
 
      DELETE FROM nmaa_t
       WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa_m.nmaa001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_nmaa_m.nmaa001,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
     #151201-00002#16 Add  ---(S)---
      DELETE FROM glab_t
       WHERE glabent = g_enterprise
         AND glab003 IN (SELECT nmas002 FROM nmas_t WHERE nmas001  = g_nmaa_m.nmaa001 AND nmasent = g_enterprise )   #160905-00007#7 Add ent
         AND glabld IN  (SELECT glaald  FROM glaa_t WHERE glaacomp = g_nmaa_m.nmaa002 AND glaaent = g_enterprise )   #160905-00007#7 Add ent
         AND glab001 = '40'
         AND glab002 = '40'

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "glab_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
     #151201-00002#16 Add  ---(E)---
      
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      #160122-00001#1---add---str-
      DELETE FROM nmll_t WHERE nmllent = g_enterprise 
       AND nmll001 IN(SELECT UNIQUE nmas002 FROM nmas_t WHERE nmas001 = g_nmaa_m.nmaa001 AND nmasent = g_enterprise)   #160905-00007#7 Add ent
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "nmll_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #160122-00001#1---add---end-
      #151201-00002#64--add--str--
      DELETE FROM nmlm_t WHERE nmlment = g_enterprise 
       AND nmlm001 IN(SELECT UNIQUE nmas002 FROM nmas_t WHERE nmas001 = g_nmaa_m.nmaa001 AND nmasent = g_enterprise)   #160905-00007#7 Add ent
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "nmlm_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #151201-00002#64--add--end
      #end add-point
      
      DELETE FROM nmas_t
       WHERE nmasent = g_enterprise AND nmas001 = g_nmaa_m.nmaa001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "nmas_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE anmi120_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_nmas_d.clear() 
 
     
      CALL anmi120_ui_browser_refresh()  
      #CALL anmi120_ui_headershow()  
      #CALL anmi120_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      CALL g_nmas2_d.clear()   #151201-00002#16 Add
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'nmaalent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.nmaal001
   LET l_field_keys[02] = 'nmaal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'nmaal_t')
 
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL anmi120_browser_fill("")
         CALL anmi120_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE anmi120_cl
 
   #功能已完成,通報訊息中心
   CALL anmi120_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="anmi120.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION anmi120_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_nmas_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL g_nmas2_d.clear()   #151201-00002#16 Add
   #end add-point
   
   #判斷是否填充
   IF anmi120_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT nmas002,nmas003,nmas004,nmas005  FROM nmas_t",   
                     " INNER JOIN nmaa_t ON nmaaent = " ||g_enterprise|| " AND nmaa001 = nmas001 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                     
                     " WHERE nmasent=? AND nmas001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY nmas_t.nmas002"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE anmi120_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR anmi120_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_nmaa_m.nmaa001
                                               
      FOREACH b_fill_cs INTO g_nmas_d[l_ac].nmas002,g_nmas_d[l_ac].nmas003,g_nmas_d[l_ac].nmas004,g_nmas_d[l_ac].nmas005 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
  #151201-00002#16 Add  ---(S)---
   IF anmi120_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE glab003,nmas003,glabld,glab005,''  FROM nmas_t,glab_t",
                     " WHERE   glabent=? AND glab003 =nmas002 AND nmas001 = ? AND glab001 = '40' AND glab002 = '40'  "
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料

         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF

         #子單身的WC


         LET g_sql = g_sql, " ORDER BY glab_t.glabld,glab_t.glab003,glab_t.glab005"

         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE anmi120_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR anmi120_pb2
      END IF

      LET l_ac = 1

      OPEN b_fill_cs2 USING g_enterprise,g_nmaa_m.nmaa001

      FOREACH b_fill_cs2 INTO g_nmas2_d[l_ac].glab003,g_nmas2_d[l_ac].nmas003,g_nmas2_d[l_ac].glabld,g_nmas2_d[l_ac].glab005,
          g_nmas2_d[l_ac].glab005_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.code   = SQLCA.sqlcode
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            EXIT FOREACH
         END IF

       SELECT glaa004 INTO l_glaa004
         FROM glaa_t,glab_t
        WHERE glaaent = g_enterprise
          AND glaald = glabld
          AND glabld = g_nmas2_d[l_ac].glabld

         SELECT glacl004 INTO  g_nmas2_d[l_ac].glab005_desc
           FROM glacl_t,glab_t
          WHERE glabent = glaclent
            AND glab005 = glacl002
            AND glacl003 = g_dlang
            AND glacl001 = l_glaa004
            AND glacl002 = g_nmas2_d[l_ac].glab005

         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            EXIT FOREACH
         END IF

      END FOREACH
   END IF

   CALL g_nmas2_d.deleteElement(g_nmas2_d.getLength())
   FREE anmi120_pb2

   LET g_nmas2_d_mask_o.* =  g_nmas2_d.*
   FOR l_ac = 1 TO g_nmas2_d.getLength()
      LET g_nmas2_d_mask_o[l_ac].* =  g_nmas2_d[l_ac].*
      LET g_nmas2_d_mask_n[l_ac].* =  g_nmas2_d[l_ac].*
   END FOR
  #151201-00002#16 Add  ---(E)---
   #end add-point
   
   CALL g_nmas_d.deleteElement(g_nmas_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE anmi120_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_nmas_d.getLength()
      LET g_nmas_d_mask_o[l_ac].* =  g_nmas_d[l_ac].*
      CALL anmi120_nmas_t_mask()
      LET g_nmas_d_mask_n[l_ac].* =  g_nmas_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION anmi120_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM nmas_t
       WHERE nmasent = g_enterprise AND
         nmas001 = ps_keys_bak[1] AND nmas002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      #151201-00002#64--add--str--
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "delete nmas_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      DELETE FROM nmlm_t WHERE nmlment=g_enterprise AND nmlm001=ps_keys_bak[2]
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "delete nmlm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      #151201-00002#64--add--end
      #160122-00001#1---add---str-
      DELETE FROM nmll_t WHERE nmllent = g_enterprise AND nmll001 = ps_keys_bak[2]
      #160122-00001#1---add---end-
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_nmas_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
  #151201-00002#16 Add  ---(S)---
  LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN

      DELETE FROM glab_t
       WHERE glabent = g_enterprise
         AND glab003 = ps_keys_bak[2]
         AND glabld =  ps_keys_bak[1]
         AND glab001 = '40'
         AND glab002 = '40'

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "glab_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         RETURN FALSE
      END IF

      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN
         CALL g_nmas2_d.deleteElement(li_idx)
      END IF

   END IF
  #151201-00002#16 Add  ---(E)---
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION anmi120_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   DEFINE l_glaald  LIKE glaa_t.glaald   #151201-00002#16 Add
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO nmas_t
                  (nmasent,
                   nmas001,
                   nmas002
                   ,nmas003,nmas004,nmas005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_nmas_d[g_detail_idx].nmas003,g_nmas_d[g_detail_idx].nmas004,g_nmas_d[g_detail_idx].nmas005) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "nmas_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_nmas_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
     #151201-00002#16 Add  ---(S)---

      CALL anmi120_b_fill()
     #151201-00002#16 Add  ---(S)---
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
  #151201-00002#16 Add  ---(S)---
  LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
       INSERT INTO glab_t
                   (glabent,
                    glabld,glab001,glab002,glab003,
                    glab005)
             VALUES(g_enterprise,
                    g_nmas2_d[g_detail_idx].glabld,'40','40',g_nmas2_d[g_detail_idx].glab003,
                    g_nmas2_d[g_detail_idx].glab005)

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "glab_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF

      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN
         CALL g_nmas2_d.insertElement(li_idx)
      END IF
   END IF
  #151201-00002#16 Add  ---(E)---
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION anmi120_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "nmas_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL anmi120_nmas_t_mask_restore('restore_mask_o')
               
      UPDATE nmas_t 
         SET (nmas001,
              nmas002
              ,nmas003,nmas004,nmas005) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_nmas_d[g_detail_idx].nmas003,g_nmas_d[g_detail_idx].nmas004,g_nmas_d[g_detail_idx].nmas005)  
 
         WHERE nmasent = g_enterprise AND nmas001 = ps_keys_bak[1] AND nmas002 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "nmas_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "nmas_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL anmi120_nmas_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      #160122-00001#1---add---str-
      UPDATE nmll_t SET nmll001 = ps_keys[2]
       WHERE nmllent = g_enterprise 
          AND nmll001 = ps_keys_bak[2]
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "update nmll_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #160122-00001#1---add---end-
      #151201-00002#64--add--str--
      UPDATE nmlm_t SET nmlm001 = ps_keys[2]
       WHERE nmlment = g_enterprise 
          AND nmlm001 = ps_keys_bak[2]
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "update nmlm_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = FALSE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #151201-00002#64--add--end
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
 
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION anmi120_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION anmi120_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION anmi120_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL anmi120_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "nmas_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN anmi120_bcl USING g_enterprise,
                                       g_nmaa_m.nmaa001,g_nmas_d[g_detail_idx].nmas002     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "anmi120_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
  #151201-00002#16 Add  ---(S)---
   LET ls_group = "glab_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN anmi120_bcl2 USING g_enterprise,
                              g_nmas2_d[g_detail_idx].glabld,
                              g_nmas2_d[g_detail_idx].glab003

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = "anmi120_bcl2"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
  #151201-00002#16 Add  ---(E)---
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION anmi120_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE anmi120_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
  #151201-00002#16 Add  ---(S)---
   LET ls_group = "'2',"
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE anmi120_bcl2
   END IF
  #151201-00002#16 Add  ---(E)---
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION anmi120_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   DEFINE l_nmab002 LIKE nmab_t.nmab002
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("nmaa001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   SELECT nmab002 INTO l_nmab002 FROM nmab_t 
    WHERE nmabent = g_enterprise AND nmab001 = g_nmaa_m.nmaa004
   IF l_nmab002 != '0' THEN
      CALL cl_set_comp_entry('nmaa005',TRUE)
   END IF
#150723-00012#18 --mark--   
#   IF g_nmaa_m.nmaa006 = 'Y' THEN
#      CALL cl_set_comp_entry('nmaa007',TRUE)
#   END IF 
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION anmi120_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_nmab002 LIKE nmab_t.nmab002
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("nmaa001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   SELECT nmab002 INTO l_nmab002 FROM nmab_t 
    WHERE nmabent = g_enterprise AND nmab001 = g_nmaa_m.nmaa004
   IF l_nmab002 = '0' THEN
      CALL cl_set_comp_entry('nmaa005',FALSE)
   END IF 
   #150723-00012#18 --mark--  
#   IF g_nmaa_m.nmaa006 = 'N' THEN
#      CALL cl_set_comp_entry('nmaa007',FALSE)
#   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION anmi120_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION anmi120_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION anmi120_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION anmi120_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION anmi120_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION anmi120_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION anmi120_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " nmaa001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "nmaa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "nmas_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION anmi120_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_nmaa_m.nmaa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN anmi120_cl USING g_enterprise,g_nmaa_m.nmaa001
   IF STATUS THEN
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN anmi120_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008,g_nmaa_m.nmaa010, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt,g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc, 
       g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc, 
       g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc
   
 
   #檢查是否允許此動作
   IF NOT anmi120_action_chk() THEN
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa002_desc, 
       g_nmaa_m.nmaa003,g_nmaa_m.nmaa003_desc,g_nmaa_m.nmaa004,g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005, 
       g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017, 
       g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp, 
       g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtid_desc,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdp_desc, 
       g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamodid_desc,g_nmaa_m.nmaamoddt
 
   CASE g_nmaa_m.nmaastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_nmaa_m.nmaastus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_nmaa_m.nmaastus = lc_state OR cl_null(lc_state) THEN
      CLOSE anmi120_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   
   #end add-point
   
   LET g_nmaa_m.nmaamodid = g_user
   LET g_nmaa_m.nmaamoddt = cl_get_current()
   LET g_nmaa_m.nmaastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE nmaa_t 
      SET (nmaastus,nmaamodid,nmaamoddt) 
        = (g_nmaa_m.nmaastus,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt)     
    WHERE nmaaent = g_enterprise AND nmaa001 = g_nmaa_m.nmaa001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE anmi120_master_referesh USING g_nmaa_m.nmaa001 INTO g_nmaa_m.nmaa001,g_nmaa_m.nmaa006, 
          g_nmaa_m.nmaa002,g_nmaa_m.nmaa003,g_nmaa_m.nmaa004,g_nmaa_m.nmaa005,g_nmaa_m.nmaa007,g_nmaa_m.nmaa008, 
          g_nmaa_m.nmaa010,g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaowndp, 
          g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamoddt, 
          g_nmaa_m.nmaa002_desc,g_nmaa_m.nmaa003_desc,g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaaownid_desc, 
          g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid_desc,g_nmaa_m.nmaacrtdp_desc,g_nmaa_m.nmaamodid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_nmaa_m.nmaa001,g_nmaa_m.nmaal003,g_nmaa_m.nmaa006,g_nmaa_m.nmaa002,g_nmaa_m.nmaa002_desc, 
          g_nmaa_m.nmaa003,g_nmaa_m.nmaa003_desc,g_nmaa_m.nmaa004,g_nmaa_m.nmaa004_desc,g_nmaa_m.nmaa005, 
          g_nmaa_m.nmaa007,g_nmaa_m.l_oofa011,g_nmaa_m.nmaa008,g_nmaa_m.l_oofc012,g_nmaa_m.nmaa010,g_nmaa_m.l_oofb017, 
          g_nmaa_m.nmaa009,g_nmaa_m.nmaastus,g_nmaa_m.nmaaownid,g_nmaa_m.nmaaownid_desc,g_nmaa_m.nmaaowndp, 
          g_nmaa_m.nmaaowndp_desc,g_nmaa_m.nmaacrtid,g_nmaa_m.nmaacrtid_desc,g_nmaa_m.nmaacrtdp,g_nmaa_m.nmaacrtdp_desc, 
          g_nmaa_m.nmaacrtdt,g_nmaa_m.nmaamodid,g_nmaa_m.nmaamodid_desc,g_nmaa_m.nmaamoddt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE anmi120_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL anmi120_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="anmi120.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION anmi120_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_nmas_d.getLength() THEN
         LET g_detail_idx = g_nmas_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_nmas_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_nmas_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
  #151201-00002#16 Add  ---(S)---
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_nmas2_d.getLength() THEN
         LET g_detail_idx = g_nmas2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_nmas2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_nmas2_d.getLength() TO FORMONLY.cnt
   END IF
  #151201-00002#16 Add  ---(E)---
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION anmi120_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL anmi120_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION anmi120_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="anmi120.status_show" >}
PRIVATE FUNCTION anmi120_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="anmi120.mask_functions" >}
&include "erp/anm/anmi120_mask.4gl"
 
{</section>}
 
{<section id="anmi120.signature" >}
   
 
{</section>}
 
{<section id="anmi120.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION anmi120_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_nmaa_m.nmaa001
   LET g_pk_array[1].column = 'nmaa001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="anmi120.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="anmi120.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION anmi120_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL anmi120_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_nmaa_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="anmi120.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION anmi120_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="anmi120.other_function" readonly="Y" >}
#nmaa001檢查重複性
PRIVATE FUNCTION anmi120_nmaa001_chk(p_nmaa001,p_nmaa001_t,p_cmd)
   DEFINE p_nmaa001 LIKE nmaa_t.nmaa001
   DEFINE p_nmaa001_t LIKE nmaa_t.nmaa001
   DEFINE p_cmd LIKE type_t.chr5
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa001) THEN 
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND 
         ( p_cmd = 'u' AND (p_nmaa001 != p_nmaa001_t ))) THEN 
         IF NOT ap_chk_notDup(p_nmaa001,"SELECT COUNT(*) FROM nmaa_t WHERE "
         ||"nmaaent = '" ||g_enterprise|| "' AND "||"nmaa001 = '"||p_nmaa001 ||"'",'std-00004',0) THEN 
            LET r_success = FALSE
         END IF
      END IF
   END IF
   RETURN r_success 
END FUNCTION
#nmaa002有效性檢查  ooef
PRIVATE FUNCTION anmi120_nmaa002_chk(p_nmaa002)
   DEFINE p_nmaa002 LIKE nmaa_t.nmaa002
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa002) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa002,"SELECT COUNT(*) FROM ooef_t WHERE ooefent = '"
            ||g_enterprise||"' AND ooef001 = ?  ","aoo-00094",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa002,"SELECT COUNT(*) FROM ooef_t WHERE ooefent = '"
            ||g_enterprise||"' AND ooef001 = ? AND ooefstus = 'Y' ","sub-01302",'aooi125') THEN #160318-00005#25 mod#"aoo-00095",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #161021-00038#1 --s add
      #檢查是否為資金中心下的組織
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa002,"SELECT COUNT(*) FROM ooef_t WHERE ooefent = '"
            ||g_enterprise||"' AND ooef001 = ? AND ooef206 = 'Y' AND ooefstus = 'Y' ","anm-02963",0 ) THEN 
            LET r_success = FALSE
         END IF
      END IF 
      #161021-00038#1 --e add
   END IF 
   RETURN r_success 
END FUNCTION
#nmas002帶值
PRIVATE FUNCTION anmi120_nmas002_def(p_nmaa001,p_nmas002)
   DEFINE p_nmaa001 LIKE nmaa_t.nmaa001
   DEFINE p_nmas002 LIKE nmas_t.nmas002
   DEFINE l_count   LIKE type_t.num5
   DEFINE r_nmas002 LIKE nmas_t.nmas002

   LET r_nmas002 = p_nmas002
   IF NOT cl_null(p_nmaa001) AND cl_null(p_nmas002) THEN
      LET l_count = 0
      SELECT count(*) INTO l_count FROM nmas_t
       WHERE nmas001 = p_nmaa001 AND nmasent = g_enterprise AND nmas002 = p_nmaa001
      IF l_count = 0 THEN
         LET r_nmas002 = p_nmaa001
      END IF 
   END IF 
   RETURN r_nmas002
END FUNCTION
#nmas002重複性檢查
PRIVATE FUNCTION anmi120_nmas002_chk(p_nmaa001,p_nmaa001_t,p_nmas002,p_nmas002_t,p_cmd)
   DEFINE p_nmaa001 LIKE nmaa_t.nmaa001
   DEFINE p_nmaa001_t LIKE nmaa_t.nmaa001
   DEFINE p_nmas002 LIKE nmas_t.nmas002
   DEFINE p_nmas002_t LIKE nmas_t.nmas002
   DEFINE p_cmd LIKE type_t.chr5
   DEFINE r_success LIKE type_t.num5

   LET r_success =TRUE
   IF NOT cl_null(p_nmaa001) AND NOT cl_null(p_nmas002) THEN 
      IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND 
      (p_nmas002 != p_nmas002_t))) THEN 
      #判斷nmas002是否重複，所有資料中nmas002不能重複
         IF NOT ap_chk_notDup(p_nmas002,"SELECT COUNT(*) FROM nmas_t WHERE "
            ||"nmasent = '" ||g_enterprise|| "' AND "|| "nmas002 = '"||p_nmas002 ||"'",'std-00004',0) THEN 
            LET r_success = false
         END IF
      END IF
   END IF
   RETURN r_success 
END FUNCTION
#nmas003有效性檢查
PRIVATE FUNCTION anmi120_nmas003_chk(p_nmas003)
   DEFINE p_nmas003 LIKE nmas_t.nmas003
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmas003) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmas003,"SELECT COUNT(*) FROM ooai_t WHERE ooaient = '"
            ||g_enterprise||"' AND ooai001 = ?  ","aoo-00028",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmas003,"SELECT COUNT(*) FROM ooai_t WHERE ooaient = '"
            ||g_enterprise||"' AND ooai001 = ? AND ooaistus = 'Y' ","sub-01302",'aooi140') THEN#160318-00005#25 mod#"aoo-00011",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      
   END IF 
   RETURN r_success
END FUNCTION
#nmaa003有效性檢查nmag
PRIVATE FUNCTION anmi120_nmaa003_chk(p_nmaa003)
   DEFINE p_nmaa003 LIKE nmaa_t.nmaa003
   DEFINE r_success LIKE type_t.num5
   #151201-00002#60--add--str--lujh
   DEFINE l_nmag003 LIKE nmag_t.nmag003
   DEFINE l_n       LIKE type_t.num5
   #151201-00002#60--add--end--lujh

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa003) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa003,"SELECT COUNT(*) FROM nmag_t WHERE nmagent = '"
            ||g_enterprise||"' AND nmag001 = ?  ","anm-00009",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa003,"SELECT COUNT(*) FROM nmag_t WHERE nmagent = '"
            ||g_enterprise||"' AND nmag001 = ? AND nmagstus = 'Y' ","sub-01302",'anmi140') THEN#160318-00005#25 mod  #"anm-00010",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      
      #151201-00002#60--add--str--lujh
      #检查账户数限制
      SELECT nmag003 INTO l_nmag003 
        FROM nmag_t
       WHERE nmagent = g_enterprise
         AND nmag001 = p_nmaa003
         AND nmagstus = 'Y'
         
      IF NOT cl_null(l_nmag003) THEN 
         SELECT COUNT(*) INTO l_n
           FROM nmaa_t
          WHERE nmaaent = g_enterprise
            AND nmaa002 = g_nmaa_m.nmaa002
            AND nmaa003 = p_nmaa003
            AND nmaastus = 'Y'
            
         IF l_n >= l_nmag003 THEN 
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code   = "anm-02973" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET r_success = FALSE
         END IF
      END IF
      #151201-00002#60--add--end--lujh
   END IF 
   
   RETURN r_success
END FUNCTION
#nmaa002帶值ooefl
PRIVATE FUNCTION anmi120_nmaa002_ref(p_nmaa002)
   DEFINE p_nmaa002 LIKE nmaa_t.nmaa002
   DEFINE r_ooefl003 LIKE ooefl_t.ooefl003

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_nmaa002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"
      ||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") 
      RETURNING g_rtn_fields
   LET r_ooefl003 = g_rtn_fields[1]
   
   RETURN r_ooefl003
END FUNCTION
#nmaa003带值nmagl
PRIVATE FUNCTION anmi120_nmaa003_ref(p_nmaa003)
   DEFINE p_nmaa003 LIKE nmaa_t.nmaa003
   DEFINE r_nmagl003 LIKE nmagl_t.nmagl003

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_nmaa003
   CALL ap_ref_array2(g_ref_fields,"SELECT nmagl003 FROM nmagl_t WHERE nmaglent='"
      ||g_enterprise||"' AND nmagl001=? AND nmagl002='"||g_dlang||"'","") 
      RETURNING g_rtn_fields
   LET r_nmagl003 = g_rtn_fields[1]
   RETURN r_nmagl003
END FUNCTION
#nmaa004带值nmabl
#開戶銀行之銀行類型為0.內部銀行時則本欄帶帳戶編碼，
#不可異動(寫在set_entry段)
PRIVATE FUNCTION anmi120_nmaa004_ref(p_nmaa004,p_nmaa005)
   DEFINE p_nmaa004 LIKE nmaa_t.nmaa004
   DEFINE p_nmaa005 LIKE nmaa_t.nmaa005
   DEFINE l_nmab002 LIKE nmab_t.nmab002
   DEFINE r_nmabl003 LIKE nmabl_t.nmabl003
   DEFINE r_nmaa005 LIKE nmaa_t.nmaa005
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_nmaa_m.nmaa004
   CALL ap_ref_array2(g_ref_fields,"SELECT nmabl003 FROM nmabl_t WHERE nmablent='"
      ||g_enterprise||"' AND nmabl001=? AND nmabl002='"||g_dlang||"'","") 
      RETURNING g_rtn_fields
   LET r_nmabl003 = g_rtn_fields[1]

   LET l_nmab002 = ''
   SELECT nmab002 INTO l_nmab002 FROM nmab_t 
    WHERE nmabent = g_enterprise AND nmab001 = p_nmaa004
   IF l_nmab002 = '0' THEN
      LET r_nmaa005 = p_nmaa004
   ELSE
      LET r_nmaa005 = p_nmaa005
   END IF 
   RETURN r_nmabl003,r_nmaa005
END FUNCTION
#nmaa004有效性檢查nmab
PRIVATE FUNCTION anmi120_nmaa004_chk(p_nmaa004)
   DEFINE p_nmaa004 LIKE nmaa_t.nmaa004
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(p_nmaa004) THEN
      #檢查是否存在
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa004,"SELECT COUNT(*) FROM nmab_t WHERE nmabent = '"
            ||g_enterprise||"' AND nmab001 = ?  ","anm-00011",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      #檢查是否有效
      IF r_success THEN
         IF NOT ap_chk_isExist(p_nmaa004,"SELECT COUNT(*) FROM nmab_t WHERE nmabent = '"
            ||g_enterprise||"' AND nmab001 = ? AND nmabstus = 'Y' ","sub-01302",'anmi100') THEN#160318-00005#25 mod # "anm-00012",0 ) THEN
            LET r_success = FALSE
         END IF
      END IF 
      
   END IF 
   RETURN r_success
END FUNCTION
#+
PRIVATE FUNCTION anmi120_nmaa010_ref(p_nmaa010)
   DEFINE p_nmaa010 LIKE nmaa_t.nmaa010
   DEFINE r_oofc012 LIKE oofc_t.oofc012
    
   LET r_oofc012 = ''
   SELECT oofc012 INTO r_oofc012 FROM oofc_t
    WHERE oofcent = g_enterprise AND oofc001 = p_nmaa010
   RETURN r_oofc012
END FUNCTION
#
PRIVATE FUNCTION anmi120_nmaa008_ref(p_nmaa008)
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE r_oofa011 LIKE oofa_t.oofa011
   
   LET r_oofa011 = ''
   SELECT oofa011 INTO r_oofa011 FROM oofa_t
    WHERE oofaent = g_enterprise AND oofa001 = p_nmaa008
    
   RETURN r_oofa011
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofb017_ref(p_oofb017,p_nmaa009)
   DEFINE p_oofb017 LIKE oofb_t.oofb017
   DEFINE p_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE r_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE l_sql     STRING
   
   LET r_nmaa009 = p_nmaa009
   IF cl_null(p_oofb017) THEN 
      LEt r_nmaa009 = ''
   ELSE
      LET l_sql = " SELECT oofb001 FROM oofb_t ",
                  "  WHERE oofbent = '",g_enterprise,"' AND oofb017 = '",p_oofb017,"' "
      IF NOT cl_null(g_nmaa_m.nmaa008) THEN
         LET l_sql = l_sql," AND oofb002 = '",g_nmaa_m.nmaa008,"'"
      END IF 
      PREPARE anmi120_oofb017_pre FROM l_sql
      DECLARE anmi120_oofb017_cs CURSOR FOR anmi120_oofb017_pre
      FOREACH anmi120_oofb017_cs INTO r_nmaa009
         IF NOT cl_null(r_nmaa009) THEN
           EXIT FOREACH
         END IF 
      END FOREACH   
   END IF 
   RETURN r_nmaa009   
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofa011_ref(p_oofa011,p_nmaa008)
   DEFINE p_oofa011 LIKE oofa_t.oofa011
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE r_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_sql     STRING
   LET r_nmaa008 = p_nmaa008
   IF cl_null(p_oofa011) THEN 
      LET r_nmaa008 = ''
   ELSE
      LET l_sql = " SELECT oofa001 FROM oofa_t ",
                  "  WHERE oofaent = '",g_enterprise,"' AND oofa011 = '",p_oofa011,"' AND oofa002 = '7' "
      PREPARE anmi120_oofa011_pre FROM l_sql
      DECLARE anmi120_oofa011_cs CURSOR FOR anmi120_oofa011_pre
      FOREACH anmi120_oofa011_cs INTO r_nmaa008 
        IF NOT cl_null(r_nmaa008) THEN
           EXIT FOREACH
        END IF  
      END FOREACH  
   END IF
   RETURN r_nmaa008 
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofc012_ref(p_oofc012,p_nmaa010)
   DEFINE p_oofc012 LIKE oofc_t.oofc012
   DEFINE p_nmaa010 LIKE nmaa_t.nmaa010
   DEFINE r_nmaa010 LIKE nmaa_t.nmaa010
   DEFINE l_sql     STRING
   
   LET r_nmaa010 = p_nmaa010
   IF cl_null(p_oofc012) THEN
      LET r_nmaa010 = ''
   END IF 
   IF cl_null(p_nmaa010) AND NOT cl_null(p_oofc012) THEN
      LET l_sql = " SELECT oofc001 FROM oofc_t ",
                  "  WHERE oofcent = '",g_enterprise,"' AND oofc012 = '",p_oofc012,"' "
      IF NOT cl_null(g_nmaa_m.nmaa008) THEN
         LET l_sql = l_sql," AND oofc002 = '",g_nmaa_m.nmaa008,"'"
      END IF 
      PREPARE anmi120_oofc012_pre FROM l_sql
      DECLARE anmi120_oofc012_cs CURSOR FOR anmi120_oofc012_pre
      FOREACH anmi120_oofc012_cs INTO r_nmaa010
         IF NOT cl_null(r_nmaa010) THEN
           EXIT FOREACH
         END IF 
      END FOREACH   
   END IF 
   RETURN r_nmaa010
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofa011_chk(p_oofa011,p_nmaa008)
   DEFINE p_oofa011 LIKE oofa_t.oofa011
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_oofa001 LIKE oofa_t.oofa001
   DEFINE l_oofastus LIKE oofa_t.oofastus
   DEFINE l_sql     STRING
   DEFINE r_success LIKE type_t.num5
   
   LET l_oofa001 = ''
   LET l_oofastus = ''
   LET r_success = TRUE
   LET l_sql = " SELECT oofa001,oofastus FROM oofa_t ",
               "  WHERE oofaent = '",g_enterprise,"' AND oofa011 = '",p_oofa011,"' AND oofa002 = '7'"
   PREPARE anmi120_oofa011_chk_pre FROM l_sql
   DECLARE anmi120_oofa011_chk_cs CURSOR FOR anmi120_oofa011_chk_pre
   FOREACH anmi120_oofa011_chk_cs INTO l_oofa001,l_oofastus
      IF NOT cl_null(l_oofa001) THEN
         EXIT FOREACH
      END IF 
   END FOREACH
   IF cl_null(l_oofa001) THEN
      CALL anmi120_oofa_ins(p_oofa011)
   ELSE
      IF l_oofastus = 'N' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-01302'  #160318-00005#25 mod'anm-00025'
         LET g_errparam.extend = p_oofa011
         #160318-00005#25  --add--str
         LET g_errparam.replace[1] ='aooi350'
         LET g_errparam.replace[2] = cl_get_progname('aooi350',g_lang,"2")
         LET g_errparam.exeprog    ='aooi350'
         #160318-00005#25 --add--end
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
      END IF 
   END IF 
   RETURN r_success 
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofa_ins(p_oofa011)
   DEFINE p_oofa011 LIKE oofa_t.oofa011
   DEFINE l_success LIKE type_t.num5
   DEFINE l_wc      STRING
   DEFINE l_oofa       RECORD LIKE oofa_t.*
   
   IF cl_null(p_oofa011) THEN RETURN END IF 
   LET l_oofa.oofastus = 'Y'
   LET l_oofa.oofaent  = g_enterprise
   LET l_wc = " oofaent = ",g_enterprise
   CALL s_aooi350_get_idno('oofa001','oofa_t',l_wc)
      RETURNING l_success,l_oofa.oofa001
   LET l_oofa.oofa002  = "7"
   LET l_oofa.oofa011  = p_oofa011
   LET l_oofa.oofa017  = NULL
   LET l_oofa.oofaownid = g_user
   LET l_oofa.oofaowndp = g_dept
   LET l_oofa.oofacrtid = g_user
   LET l_oofa.oofacrtdp = g_dept
   LET l_oofa.oofacrtdt = cl_get_current()    #资料创建日
   LET l_oofa.oofamodid = NULL
   LET l_oofa.oofamoddt = NULL
   INSERT INTO oofa_t VALUES (l_oofa.*)
   IF SQLCA.sqlcode  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "oofa_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF   
END FUNCTION
#+
PRIVATE FUNCTION anmi120_nmaa009_ref(p_nmaa009)
   DEFINE p_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE r_oofb017 LIKE oofb_t.oofb017
   
   LET r_oofb017 = ''  
   SELECT oofb017 INTO r_oofb017 FROM oofb_t
    WHERE oofbent = g_enterprise AND oofb001 = p_nmaa009
   RETURN r_oofb017
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofb_ins(p_oofb017,p_nmaa008)
   DEFINE p_oofb017 LIKE oofb_t.oofb017
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_success LIKE type_t.num5
   DEFINE l_wc      STRING
   DEFINE l_oofb       RECORD LIKE oofb_t.*
   
   IF cl_null(p_oofb017) THEN RETURN END IF 
   LET l_oofb.oofbstus = 'Y'
   LET l_oofb.oofbent  = g_enterprise
   LET l_wc = " oofbent = ",g_enterprise
   CALL s_aooi350_get_idno('oofb001','oofb_t',l_wc)
      RETURNING l_success,l_oofb.oofb001
   LET l_oofb.oofb002  = p_nmaa008
   LET l_oofb.oofb008 = '2'
   LET l_oofb.oofb009 = 'B'
   LET l_oofb.oofb010 = 'N'
   LET l_oofb.oofb018 = '9999/12/30'
   LET l_oofb.oofb017  = p_oofb017
   LET l_oofb.oofbownid = g_user
   LET l_oofb.oofbowndp = g_dept
   LET l_oofb.oofbcrtid = g_user
   LET l_oofb.oofbcrtdp = g_dept
   LET l_oofb.oofbcrtdt = cl_get_current()    #资料创建日
   LET l_oofb.oofbmodid = NULL
   LET l_oofb.oofbmoddt = NULL
   INSERT INTO oofb_t VALUES (l_oofb.*)
   IF SQLCA.sqlcode  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "oofb_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofb017_chk(p_oofb017,p_nmaa008)
   DEFINE p_oofb017 LIKE oofb_t.oofb017
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_oofb001 LIKE oofb_t.oofb001
   DEFINE l_oofbstus LIKE oofb_t.oofbstus
   DEFINE l_sql     STRING
   DEFINE r_success LIKE type_t.num5
   
   LET l_oofb001 = ''
   LET l_oofbstus = ''
   LET r_success = TRUE
   LET l_sql = " SELECT oofb001,oofbstus FROM oofb_t ",
               "  WHERE oofbent = '",g_enterprise,"' AND oofb017 = '",p_oofb017,"'"
   IF NOT cl_null(p_nmaa008) THEN
      LET l_sql = l_sql ," AND oofb002 = '",p_nmaa008,"'"
   END IF 
   PREPARE anmi120_oofb017_chk_pre FROM l_sql
   DECLARE anmi120_oofb017_chk_cs CURSOR FOR anmi120_oofb017_chk_pre
   FOREACH anmi120_oofb017_chk_cs INTO l_oofb001,l_oofbstus
      IF NOT cl_null(l_oofb001) THEN
         EXIT FOREACH
      END IF 
   END FOREACH
   IF cl_null(l_oofb001) THEN
      CALL anmi120_oofb_ins(p_oofb017,p_nmaa008)
   ELSE
      IF l_oofbstus = 'N' THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-01302'  #160318-00005#25 mod'anm-00025'
         LET g_errparam.extend = p_oofb017
         #160318-00005#25  --add--str
         LET g_errparam.replace[1] ='aooi350'
         LET g_errparam.replace[2] = cl_get_progname('aooi350',g_lang,"2")
         LET g_errparam.exeprog    ='aooi350'
         #160318-00005#25 --add--end
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
      END IF 
   END IF 
   RETURN r_success 
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofc012_chk(p_oofc012,p_nmaa008)
   DEFINE p_oofc012 LIKE oofc_t.oofc012
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_oofc001 LIKE oofc_t.oofc001
   DEFINE l_oofcstus LIKE oofc_t.oofcstus
   DEFINE l_sql     STRING
   DEFINE r_success LIKE type_t.num5
   
   LET l_oofc001 = ''
   LET l_oofcstus = ''
   LET r_success = TRUE
   LET l_sql = " SELECT oofc001 FROM oofc_t ",
               "  WHERE oofcent = '",g_enterprise,"' AND oofc012 = '",p_oofc012,"'"
   IF NOT cl_null(p_nmaa008) THEN
      LET l_sql = l_sql," AND oofc002 = '",p_nmaa008,"'"
   END IF 
   PREPARE anmi120_oofc012_chk_pre FROM l_sql
   DECLARE anmi120_oofc012_chk_cs CURSOR FOR anmi120_oofc012_chk_pre
   FOREACH anmi120_oofc012_chk_cs INTO l_oofc001,l_oofcstus
      IF NOT cl_null(l_oofc001) THEN
         EXIT FOREACH
      END IF 
   END FOREACH
   IF cl_null(l_oofc001) THEN
      CALL anmi120_oofc_ins(p_oofc012,p_nmaa008)
   ELSE
      IF l_oofcstus = 'N' THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-01302'  #160318-00005#25 mod'anm-00025'
         LET g_errparam.extend = p_oofc012
         #160318-00005#25  --add--str
         LET g_errparam.replace[1] ='aooi350'
         LET g_errparam.replace[2] = cl_get_progname('aooi350',g_lang,"2")
         LET g_errparam.exeprog    ='aooi350'
         #160318-00005#25 --add--end
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
      END IF 
   END IF 
   RETURN r_success 
END FUNCTION
#+
PRIVATE FUNCTION anmi120_oofc_ins(p_oofc012,p_nmaa008)
   DEFINE p_oofc012 LIKE oofc_t.oofc012
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008
   DEFINE l_success LIKE type_t.num5
   DEFINE l_wc      STRING
   DEFINE l_oofc    RECORD LIKE oofc_t.*
   
   IF cl_null(p_oofc012) THEN RETURN END IF 
   LET l_oofc.oofcstus = 'Y'
   LET l_oofc.oofcent  = g_enterprise
   LET l_wc = " oofcent = ",g_enterprise
   CALL s_aooi350_get_idno('oofc001','oofc_t',l_wc)
      RETURNING l_success,l_oofc.oofc001
   LET l_oofc.oofc002  = p_nmaa008
   LET l_oofc.oofc008 = '1'
   LET l_oofc.oofc009 = 'A'
   LET l_oofc.oofc010 = 'N'
   LET l_oofc.oofc013 = '9999/12/30'
   LET l_oofc.oofc012  = p_oofc012
   LET l_oofc.oofcownid = g_user
   LET l_oofc.oofcowndp = g_dept
   LET l_oofc.oofccrtid = g_user
   LET l_oofc.oofccrtdp = g_dept
   LET l_oofc.oofccrtdt = cl_get_current()    #资料创建日
   LET l_oofc.oofcmodid = NULL
   LET l_oofc.oofcmoddt = NULL
   INSERT INTO oofc_t VALUES (l_oofc.*)
   IF SQLCA.sqlcode  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "oofc_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
END FUNCTION
#+
PRIVATE FUNCTION anmi120_nmaa008_ref_nmaa009_nmaa010(p_nmaa008)
   DEFINE p_nmaa008 LIKE nmaa_t.nmaa008 
   DEFINE l_sql     STRING
   DEFINE r_nmaa009 LIKE nmaa_t.nmaa009
   DEFINE r_nmaa010 LIKE nmaa_t.nmaa010
   
   LET r_nmaa009 = ''
   LET r_nmaa010 = ''
   IF NOT cl_null(p_nmaa008) THEN
      LET l_sql = " SELECT oofb001 FROM oofb_t ",
                  "  WHERE oofbent = '",g_enterprise,"' AND oofb002 = '",p_nmaa008,"'",
                  "    AND oofbstus = 'Y' "
      PREPARE anmi120_nmaa008_ref_nmaa009_pre FROM l_sql
      DECLARE anmi120_nmaa008_ref_nmaa009_cs CURSOR FOR anmi120_nmaa008_ref_nmaa009_pre
      FOREACH anmi120_nmaa008_ref_nmaa009_cs INTO r_nmaa009
         IF NOT cl_null(r_nmaa009) THEN
            EXIT FOREACH
         END IF 
      END FOREACH
      LET l_sql = " SELECT oofc001 FROM oofc_t ",
                  "  WHERE oofcent = '",g_enterprise,"' AND oofc002 = '",p_nmaa008,"'",
                  "    AND oofcstus = 'Y' "
      PREPARE anmi120_nmaa008_ref_nmaa010_pre FROM l_sql
      DECLARE anmi120_nmaa008_ref_nmaa010_cs CURSOR FOR anmi120_nmaa008_ref_nmaa010_pre
      FOREACH anmi120_nmaa008_ref_nmaa010_cs INTO r_nmaa010
         IF NOT cl_null(r_nmaa010) THEN
            EXIT FOREACH
         END IF 
      END FOREACH
   END IF 
   RETURN r_nmaa009,r_nmaa010
   
END FUNCTION

 
{</section>}
 
