<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apci121" std_prog="apci121" erpver="1.0" module="APC" ver="1" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.apci121_chk_date" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 檢查參數值為日期類型
# Memo...........:
# Usage..........: CALL apci121_chk_date(p_pcaj002)
#                  RETURNING r_success
# Input parameter: p_pcaj002   參數值
# Return code....: r_success   成功否
# Date & Author..: 2014/02/28 By dongsz
# Modify.........:
################################################################################
PRIVATE FUNCTION apci121_chk_date(p_pcaj002)
DEFINE p_pcaj002     LIKE pcaj_t.pcaj002
DEFINE l_str         STRING
DEFINE l_date        LIKE type_t.chr10
DEFINE l_time        LIKE type_t.chr8
DEFINE l_days        LIKE type_t.num5

   LET l_str = p_pcaj002
   
   IF l_str.getindexof('-',1) > 0 THEN
      LET l_date = p_pcaj002
      IF l_str.getLength() !=10 THEN
         RETURN FALSE
      END IF
      IF l_date[1,1] MATCHES '[0123456789]' AND
         l_date[2,2] MATCHES '[0123456789]' AND
         l_date[3,3] MATCHES '[0123456789]' AND
         l_date[4,4] MATCHES '[0123456789]' AND
         l_date[5,5] = '-' AND
         l_date[6,6] MATCHES '[012]' AND
         l_date[7,7] MATCHES '[0123456789]' AND
         l_date[8,8] = '-' AND
         l_date[9,9] MATCHES '[0123]' AND
         l_date[10,10] MATCHES '[0123456789]' THEN
         IF l_date[1,4] <'0001' OR l_date[6,7] <'01' OR l_date[6,7] >'12' OR
            l_date[9,10] <'01' THEN
            RETURN FALSE
         ELSE
            LET l_days = apci121_get_days(l_date[1,4],l_date[6,7])
            IF l_date[9,10] > l_days THEN
               RETURN FALSE
            END IF
         END IF
      ELSE
         RETURN FALSE
      END IF
   ELSE
      IF l_str.getindexof(':',1) > 0 THEN
         LET l_time = p_pcaj002
         IF l_str.getLength() != 8 THEN
            RETURN FALSE
         END IF
         IF l_time[1,1] MATCHES '[012]' AND
            l_time[2,2] MATCHES '[0123456789]' AND
            l_time[3,3] =':' AND
            l_time[4,4] MATCHES '[012345]' AND
            l_time[5,5] MATCHES '[0123456789]' AND
            l_time[6,6] =':' AND
            l_time[7,7] MATCHES '[012345]' AND
            l_time[8,8] MATCHES '[0123456789]' THEN
            IF l_time[1,2]<'00' OR l_time[1,2]>='24' OR
               l_time[4,5]<'00' OR l_time[4,5]>='60' OR
               l_time[7,8]<'00' OR l_time[7,8]>='60' THEN
               RETURN FALSE
            END IF
         ELSE
            RETURN FALSE
         END IF
      ELSE
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.apci121_get_days" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 取得該年月的天數
# Memo...........:
# Usage..........: CALL apci121_get_days(p_year,p_month)
#                  RETURNING l_days
# Input parameter: p_year    年份
#                : p_month   月份
# Return code....: l_days    天數
# Date & Author..: 2014/02/28 By dongsz
# Modify.........:
################################################################################
PRIVATE FUNCTION apci121_get_days(p_year,p_month)
DEFINE
        p_year  LIKE type_t.num5,       
        p_month LIKE type_t.num5,       
        l_days  LIKE type_t.num5,    
        i,j     LIKE type_t.num5       

        WHENEVER ERROR CALL cl_err_msg_log

        #大小月口訣如下:
        #一月大, 二月小, 三月大, 四月小, 五月大 , 六月小, 七月大,
        #八月大, 九月小, 十月大, 十一月小, 十二月大

        LET l_days=0
        #大月有三十一天
        IF p_month=1 OR p_month=3 OR p_month=5
                OR p_month=7 OR p_month=8 OR p_month=10 OR p_month=12
        THEN
                LET l_days=31
        END IF

        #小月有三十天
        IF p_month=4 OR p_month=6 OR p_month=9 OR p_month=11
        THEN
                LET l_days=30
        END IF

        #二月雖然是小月, 但要判斷是否潤年
        IF p_month=2 THEN
           LET l_days=28
           IF p_year mod 100 = 0 THEN     
              IF p_year mod 400 = 0 THEN
                 LET l_days = 29
              END IF
           ELSE
              IF p_year mod 4 = 0 THEN
                 LET l_days = 29
              END IF
           END IF

        END IF

        RETURN l_days
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              LET g_pcai_d[l_ac].pcaipos = 'N'
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pcai_d[l_ac].pcai001                  
      CALL ap_ref_array2(g_ref_fields," SELECT pcail003 FROM pcail_t WHERE pcailent = '"||g_enterprise||"' AND pcail001 = ? AND pcail002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pcai_d[l_ac].pcail003 = g_rtn_fields[1]
      DISPLAY BY NAME g_pcai_d[l_ac].pcail003 ]]>
  </point>
  <point name="b_fill.others.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="construct.a.page1.pcai001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcai002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcai003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcai004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcail003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcaipos" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcaistamp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcaistus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pcaiunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page3.pcaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page3.pcaj003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page3.pcajl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page3.pcajstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page3.pcajunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcai001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcai002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcai003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcai004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcail003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcaipos" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcaistamp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcaistus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pcaiunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page3.pcaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page3.pcaj003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page3.pcajl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page3.pcajstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page3.pcajunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcai001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pcai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcai001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO pcail003 #參數說明 

            NEXT FIELD pcai001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pcai002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcai003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcai004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcail003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcaipos" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcaistamp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcaistus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pcaiunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page2.pcaicrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaicrtdp  #顯示到畫面上
            NEXT FIELD pcaicrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.pcaicrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaicrtid  #顯示到畫面上
            NEXT FIELD pcaicrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.pcaimodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaimodid  #顯示到畫面上
            NEXT FIELD pcaimodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.pcaiowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaiowndp  #顯示到畫面上
            NEXT FIELD pcaiowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.pcaiownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaiownid  #顯示到畫面上
            NEXT FIELD pcaiownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.pcaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pcaj002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaj002  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO pcajl004 #參數值說明 

            NEXT FIELD pcaj002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page3.pcaj003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page3.pcajl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page3.pcajstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page3.pcajunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.body2.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.after_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.before_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.before_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.after_body_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.after_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.before_body_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.before_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.before_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.m_body_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.m_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pcai_d[l_ac].pcai001                  
   CALL ap_ref_array2(g_ref_fields," SELECT pcail003 FROM pcail_t WHERE pcailent = '"||g_enterprise||"' AND pcail001 = ? AND pcail002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pcai_d[l_ac].pcail003 = g_rtn_fields[1]
   DISPLAY BY NAME g_pcai_d[l_ac].pcail003   
   
   LET g_pcai2_d[l_ac].pcaiownid_desc = cl_get_username(g_pcai2_d[l_ac].pcaiownid)
   LET g_pcai2_d[l_ac].pcaiowndp_desc = cl_get_deptname(g_pcai2_d[l_ac].pcaiowndp)
   LET g_pcai2_d[l_ac].pcaicrtid_desc = cl_get_username(g_pcai2_d[l_ac].pcaicrtid)
   LET g_pcai2_d[l_ac].pcaicrtdp_desc = cl_get_deptname(g_pcai2_d[l_ac].pcaicrtdp)
   LET g_pcai2_d[l_ac].pcaimodid_desc = cl_get_username(g_pcai2_d[l_ac].pcaimodid)]]>
  </point>
  <point name="detail_show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fetch.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         LET g_flag = 'N']]>
  </point>
  <point name="fetch.before_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_sql = "SELECT  UNIQUE pcajstus,pcaj002,'',pcaj003,pcajunit FROM pcaj_t",    
               " LEFT JOIN pcajl_t ON pcaj001 = pcajl001 AND pcaj002 = pcajl002 AND pcajl003 = '",g_lang,"'",
               " WHERE pcajent=? AND pcaj001=?"
 
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY pcaj_t.pcaj002" ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_flag = 'N' THEN   
      CALL cl_set_act_visible("insert,delete",FALSE)
   ELSE
      CALL cl_set_act_visible("insert,delete",TRUE)
   END IF
   CALL cl_set_act_visible("reproduce", FALSE) ]]>
  </point>
  <point name="fetch.fill2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pcai_d[g_detail_idx].pcai001 
      LET g_ref_fields[2] = g_pcai3_d[l_ac].pcaj002      
      CALL ap_ref_array2(g_ref_fields," SELECT pcajl004 FROM pcajl_t WHERE pcajlent = '"||g_enterprise||"' AND pcajl001 = ? AND pcajl002 = ? AND pcajl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pcai3_d[l_ac].pcajl004 = g_rtn_fields[1]
      DISPLAY BY NAME g_pcai3_d[l_ac].pcajl004 ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_flag      LIKE type_t.chr1]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
      LET g_detail_idx = 1
   END IF]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_flag = 'N']]>
  </point>
  <point name="input.a.page1.pcai001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a05產生
            IF  g_pcai_d[g_detail_idx].pcai001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pcai_d[g_detail_idx].pcai001 != g_pcai_d_t.pcai001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pcai_t WHERE "||"pcaient = '" ||g_enterprise|| "' AND "||"pcai001 = '"||g_pcai_d[g_detail_idx].pcai001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.pcai002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page1.pcai003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            IF NOT cl_null(g_pcai_d[l_ac].pcai003) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.pcai004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page1.pcail003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page1.pcaipos" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page1.pcaistamp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page1.pcaistus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        IF NOT cl_null(g_pcai_d[l_ac].pcaistus) AND g_pcai_d[l_ac].pcaistus = 'N' THEN
               LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM pcak_t
                WHERE pcakent = g_enterprise
                  AND pcak002 = g_pcai_d_t.pcai001
                  AND pcakstus = 'Y'
               IF l_n > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apc-00023'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_pcai_d[l_ac].pcaistus = g_pcai_d_t.pcaistus
                  DISPLAY BY NAME g_pcai_d[l_ac].pcaistus
                  NEXT FIELD pcaistus
               END IF                
            END IF               ]]>
  </point>
  <point name="input.a.page1.pcaiunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page2.pcai001_2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_pcai2_d[g_detail_idx].pcai001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pcai2_d[g_detail_idx].pcai001 != g_pcai2_d_t.pcai001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pcai_t WHERE "||"pcaient = '" ||g_enterprise|| "' AND "||"pcai001 = '"||g_pcai2_d[g_detail_idx].pcai001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.pcaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a05產生
            IF  g_pcai_d[g_detail_idx].pcai001 IS NOT NULL AND g_pcai3_d[g_detail_idx2].pcaj002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pcai_d[g_detail_idx].pcai001 != g_pcai_d[g_detail_idx].pcai001 OR g_pcai3_d[g_detail_idx2].pcaj002 != g_pcai3_d_t.pcaj002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pcaj_t WHERE "||"pcajent = '" ||g_enterprise|| "' AND "||"pcaj001 = '"||g_pcai_d[g_detail_idx].pcai001 ||"' AND "|| "pcaj002 = '"||g_pcai3_d[g_detail_idx2].pcaj002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               IF g_pcai_d[g_detail_idx].pcai002 = '3' THEN
                  IF NOT apci121_chk_date(g_pcai3_d[l_ac].pcaj002) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'apc-00018'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pcai3_d[l_ac].pcaj002 = g_pcai3_d_t.pcaj002
                     DISPLAY BY NAME g_pcai3_d[l_ac].pcaj002
                     NEXT FIELD pcaj002
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.pcaj003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page3.pcajl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page3.pcajstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        IF NOT cl_null(g_pcai3_d[l_ac].pcajstus) AND g_pcai3_d[l_ac].pcajstus = 'N' THEN
               LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM pcak_t
                WHERE pcakent = g_enterprise
                  AND pcak002 = g_pcai_d[g_detail_idx].pcai001
                  AND pcak003 = g_pcai3_d_t.pcaj002
                  AND pcakstus = 'Y'
               IF l_n > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apc-00024'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_pcai3_d[l_ac].pcajstus = g_pcai3_d_t.pcajstus
                  DISPLAY BY NAME g_pcai3_d[l_ac].pcajstus
                  NEXT FIELD pcajstus
               END IF                
            END IF                      ]]>
  </point>
  <point name="input.a.page3.pcajunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.after_define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.pcai001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.pcai002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.pcai003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.pcai004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.pcail003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.pcaipos" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.pcaistamp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.pcaistus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                CALL cl_set_act_visible("insert,delete",TRUE)]]>
  </point>
  <point name="input.b.page1.pcaiunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page3.pcaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page3.pcaj003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page3.pcajl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page3.pcajstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page3.pcajunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
      LET g_detail_idx = 1
   END IF
   LET g_master_t.* = g_pcai_d[g_detail_idx].*
   LET g_master.* = g_pcai_d[g_detail_idx].*]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM pcak_t
                WHERE pcakent = g_enterprise
                  AND pcak002 = g_pcai_d_t.pcai001
                  AND pcakstus = 'Y'
               IF l_n > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apc-00023'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF                       ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL g_pcai3_d.clear()
            LET g_pcai_d[l_ac].pcaiunit = g_site]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            LET g_pcai_d[l_ac].pcaipos = 'N'
            DISPLAY BY NAME g_pcai_d[l_ac].pcaipos 
            LET g_flag = 'Y']]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    CALL cl_set_act_visible("insert,delete",TRUE)]]>
  </point>
  <point name="input.body3.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        ]]>
  </point>
  <point name="input.body3.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body3.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body3.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body3.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body3.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body3.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM pcak_t
                WHERE pcakent = g_enterprise
                  AND pcak002 = g_pcai_d[g_detail_idx].pcai001
                  AND pcak003 = g_pcai3_d_t.pcaj002
                  AND pcakstus = 'Y'
               IF l_n > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apc-00024'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF                            ]]>
  </point>
  <point name="input.body3.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body3.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body3.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    LET g_master_t.* = g_pcai_d[g_detail_idx].*
            LET g_master.* = g_pcai_d[g_detail_idx].*       ]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            LET g_pcai3_d[l_ac].pcajunit = g_site]]>
  </point>
  <point name="input.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                IF l_cmd = 'u' THEN
               LET g_flag = 'Y'
               CALL apci121_fetch()
               CALL cl_set_act_visible("insert,delete",TRUE)
            END IF]]>
  </point>
  <point name="input.body3.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body3.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.c.page1.pcai001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcai002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcai003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcai004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcail003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcaipos" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcaistamp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcaistus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pcaiunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page3.pcaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page3.pcaj003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page3.pcajl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page3.pcajstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page3.pcajunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.define_sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            IF NOT cl_null(g_pcai_d[l_ac].pcai001) THEN
               CALL n_pcail(g_pcai_d[l_ac].pcai001)   
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_pcai_d[l_ac].pcai001                  
               CALL ap_ref_array2(g_ref_fields," SELECT pcail003 FROM pcail_t WHERE pcailent = '"||g_enterprise||"' AND pcail001 = ? AND pcail002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_pcai_d[l_ac].pcail003 = g_rtn_fields[1]
               DISPLAY BY NAME g_pcai_d[l_ac].pcail003 
            END IF ]]>
  </point>
  <point name="input.detail_input.page3.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            IF NOT cl_null(g_pcai3_d[l_ac].pcaj002) THEN
               CALL n_pcajl(g_pcai_d[g_detail_idx].pcai001,g_pcai3_d[l_ac].pcaj002)   
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_pcai_d[g_detail_idx].pcai001
               LET g_ref_fields[2] = g_pcai3_d[l_ac].pcaj002                  
               CALL ap_ref_array2(g_ref_fields," SELECT pcajl004 FROM pcajl_t WHERE pcajlent = '"||g_enterprise||"' AND pcajl001 = ? AND pcajl002 = ? AND pcajl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_pcai3_d[l_ac].pcajl004 = g_rtn_fields[1]
               DISPLAY BY NAME g_pcai3_d[l_ac].pcajl004 
            END IF ]]>
  </point>
  <point name="input.g.page1.pcai001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcai002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcai003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcai004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcail003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcaipos" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcaistamp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcaistus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pcaiunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page3.pcaj002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page3.pcaj003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            IF NOT cl_null(g_pcai3_d[l_ac].pcaj003) AND 
               (g_pcai3_d[l_ac].pcaj003 != g_pcai3_d_t.pcaj003 OR cl_null(g_pcai3_d_t.pcaj003)) THEN
               IF g_pcai3_d[l_ac].pcaj003 = 'Y' THEN
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n FROM pcaj_t
                   WHERE pcajent = g_enterprise AND pcaj001 = g_pcai_d[g_detail_idx].pcai001
                     AND pcaj003 = 'Y'
                  IF l_n > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'apc-00015'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pcai3_d[l_ac].pcaj003 = g_pcai3_d_t.pcaj003
                     DISPLAY BY NAME g_pcai3_d[l_ac].pcaj003
                     NEXT FIELD pcaj003
                  END IF
               END IF
            END IF               ]]>
  </point>
  <point name="input.g.page3.pcajl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page3.pcajstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page3.pcajunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.more_inputarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert_b.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              LET g_pcai_d[g_detail_idx].pcaistamp = cl_get_current()]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert_b.m_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="key_update_b.after_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="key_update_b.before_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="key_update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="key_update_b.m_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="modify.after_modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL cl_set_act_visible("insert,delete",FALSE)]]>
  </point>
  <point name="modify.before_modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_flag = 'Y' ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify_detail_chk.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify_detail_chk.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify_detail_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify_detail_chk.page_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="query.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pcai001,pcaj002",TRUE)
   END IF]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("pcai001,pcaj002",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_pcai3_d[l_ac].pcaj002
   CALL ap_ref_array2(g_ref_fields," SELECT pcail003 FROM pcail_t WHERE pcailent = '"||g_enterprise||"' AND pcail001 = ? AND pcail002 = ? ","") RETURNING g_rtn_fields 
   LET g_pcai_d[l_ac].pcail003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_pcai_d[l_ac].pcail003]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcai2_d[l_ac].pcaiownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_pcai2_d[l_ac].pcaiownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcai2_d[l_ac].pcaiownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcai2_d[l_ac].pcaiowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pcai2_d[l_ac].pcaiowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcai2_d[l_ac].pcaiowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcai2_d[l_ac].pcaicrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_pcai2_d[l_ac].pcaicrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcai2_d[l_ac].pcaicrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcai2_d[l_ac].pcaicrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pcai2_d[l_ac].pcaicrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcai2_d[l_ac].pcaicrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcai2_d[l_ac].pcaimodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_pcai2_d[l_ac].pcaimodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcai2_d[l_ac].pcaimodid_desc
]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_pcai3_d[g_detail_idx].pcaj002
   CALL ap_ref_array2(g_ref_fields," SELECT pcajl004 FROM pcajl_t WHERE pcajlent = '"||g_enterprise||"' AND pcajl001 = ? AND pcajl002 = ? AND pcajl003 = ? ","") RETURNING g_rtn_fields 
   LET g_pcai3_d[l_ac].pcajl004 = g_rtn_fields[1] 
   DISPLAY BY NAME g_pcai3_d[l_ac].pcajl004]]>
  </point>
  <point name="ui_dialog.after_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.after_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.before_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.m_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <section id="apci121.b_fill" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apci121_b_fill(p_wc2)
   DEFINE p_wc2           STRING
   DEFINE l_ac_t          LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE t0.pcaistus,t0.pcai001,t0.pcai002,t0.pcai003,t0.pcai004,t0.pcaistamp, 
       t0.pcaiunit,t0.pcai001,t0.pcaiownid,t0.pcaiowndp,t0.pcaicrtid,t0.pcaicrtdp,t0.pcaicrtdt,t0.pcaimodid, 
       t0.pcaimoddt ,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 FROM pcai_t t0",
 
               " LEFT JOIN pcaj_t ON pcajent = pcaient AND pcai001 = pcaj001",
 
 
               " LEFT JOIN pcail_t ON pcailent = '"||g_enterprise||"' AND pcai001 = pcail001 AND pcail002 = '",g_dlang,"'",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.pcaiownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.pcaiowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.pcaicrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.pcaicrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.pcaimodid  ",
 
               " WHERE t0.pcaient= ?  AND  1=1 AND (", p_wc2, ") "
   #add-point:b_fill段sql_wc
   {<point name="b_fill.sql_wc"/>}
   #end add-point
   LET g_sql = g_sql, cl_sql_add_filter("pcai_t"),
                      " ORDER BY t0.pcai001"
  
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   #LET g_sql = cl_sql_add_tabid(g_sql,"pcai_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料  
   PREPARE apci121_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apci121_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_pcai_d.clear()
   CALL g_pcai2_d.clear()   
   CALL g_pcai3_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_pcai_d[l_ac].pcaistus,g_pcai_d[l_ac].pcai001,g_pcai_d[l_ac].pcai002,g_pcai_d[l_ac].pcai003, 
       g_pcai_d[l_ac].pcai004,g_pcai_d[l_ac].pcaistamp,g_pcai_d[l_ac].pcaiunit,g_pcai2_d[l_ac].pcai001, 
       g_pcai2_d[l_ac].pcaiownid,g_pcai2_d[l_ac].pcaiowndp,g_pcai2_d[l_ac].pcaicrtid,g_pcai2_d[l_ac].pcaicrtdp, 
       g_pcai2_d[l_ac].pcaicrtdt,g_pcai2_d[l_ac].pcaimodid,g_pcai2_d[l_ac].pcaimoddt,g_pcai2_d[l_ac].pcaiownid_desc, 
       g_pcai2_d[l_ac].pcaiowndp_desc,g_pcai2_d[l_ac].pcaicrtid_desc,g_pcai2_d[l_ac].pcaicrtdp_desc, 
       g_pcai2_d[l_ac].pcaimodid_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
      
      LET l_ac = l_ac + 1
      
   END FOREACH
   LET g_error_show = 0
   
 
   CALL g_pcai_d.deleteElement(g_pcai_d.getLength())   
   CALL g_pcai2_d.deleteElement(g_pcai2_d.getLength())
   CALL g_pcai3_d.deleteElement(g_pcai3_d.getLength())
 
   
   #確定指標無超過上限, 超過則指到最後一筆
   IF g_detail_idx > g_pcai_d.getLength() THEN
      LET g_detail_idx = g_pcai_d.getLength()
   END IF
   
   #將key欄位填到每個page
   LET l_ac_t = g_detail_idx
   FOR g_detail_idx = 1 TO g_pcai_d.getLength()
      LET g_pcai2_d[g_detail_idx].pcai001 = g_pcai_d[g_detail_idx].pcai001 
      #LET g_pcai3_d[g_detail_idx2].pcaj002 = g_pcai_d[g_detail_idx].pcai001 
 
   END FOR
   LET g_detail_idx = l_ac_t
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1
   IF g_detail_cnt > 0 THEN
      DISPLAY g_detail_cnt TO FORMONLY.h_count
   END IF
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apci121_pb
   
   LET g_loc = 'm'
   CALL apci121_detail_show() 
   
   LET l_ac = 1
   IF g_pcai_d.getLength() > 0 THEN
      CALL apci121_fetch()
   END IF
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_pcai_d.getLength()
      LET g_pcai_d_mask_o[l_ac].* =  g_pcai_d[l_ac].*
      CALL apci121_pcai_t_mask()
      LET g_pcai_d_mask_n[l_ac].* =  g_pcai_d[l_ac].*
   END FOR
   
   LET g_pcai2_d_mask_o.* =  g_pcai2_d.*
   FOR l_ac = 1 TO g_pcai2_d.getLength()
      LET g_pcai2_d_mask_o[l_ac].* =  g_pcai2_d[l_ac].*
      CALL apci121_pcai_t_mask()
      LET g_pcai2_d_mask_n[l_ac].* =  g_pcai2_d[l_ac].*
   END FOR
   LET g_pcai3_d_mask_o.* =  g_pcai3_d.*
   FOR l_ac = 1 TO g_pcai3_d.getLength()
      LET g_pcai3_d_mask_o[l_ac].* =  g_pcai3_d[l_ac].*
      CALL apci121_pcaj_t_mask()
      LET g_pcai3_d_mask_n[l_ac].* =  g_pcai3_d[l_ac].*
   END FOR
 
   
   ERROR "" 
   
END FUNCTION
]]>
  </section>
  <section id="apci121.default_search" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apci121_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pcai001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      LET g_wc = " 1=2"
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apci121.delete" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION apci121_delete()
   DEFINE li_ac LIKE type_t.num10
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point 
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      #不刪除
      RETURN
   END IF
   
   LET li_ac = ARR_CURR()
   LET g_pcai_d_t.* = g_pcai_d[li_ac].*
   LET g_pcai_d_o.* = g_pcai_d[li_ac].*
   
   CALL s_transaction_begin()  
   
   #add-point:delete段刪除前
   {<point name="delete.before_delete" mark="Y"/>}
   #end add-point 
   
   #刪除單頭
   DELETE FROM pcai_t 
         WHERE pcai001 = g_pcai_d_t.pcai001
 
           
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
           
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "pcai_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段刪除後
   {<point name="delete.after_delete"/>}
   #end add-point 
   
   #刪除單頭
   #add-point:delete段刪除前
   {<point name="delete.before_delete2" mark="Y"/>}
   #end add-point 
   DELETE FROM pcaj_t 
         WHERE pcaj001 = g_pcai_d_t.pcai001
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete2"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "pcaj_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.after_delete2"/>}
   #end add-point 
 
 
   
END FUNCTION
]]>
  </section>
  <section id="apci121.delete_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apci121_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "pcai_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_delete" mark="Y"/>}
      #end add-point  
      DELETE FROM pcai_t
       WHERE pcaient = g_enterprise AND
         pcai001 = ps_keys_bak[1]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_delete"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "pcaj_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_delete2" mark="Y"/>}
      #end add-point  
      DELETE FROM pcaj_t
       WHERE pcajent = g_enterprise AND
         pcaj001 = ps_keys_bak[1] AND pcaj002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pcaj_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_delete2"/>}
      #end add-point  
      RETURN
   END IF
 
 
   
   #單頭刪除, 連帶刪除單身
   LET ls_group = "pcai_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_body_delete2" mark="Y"/>}
      #end add-point  
      DELETE FROM pcaj_t
       WHERE pcajent = g_enterprise AND
         pcaj001 = ps_keys_bak[1]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_body_delete2"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pcaj_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_body_delete2"/>}
      #end add-point  
      RETURN
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="apci121.description" ver="65" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000171
#+ 
#+ Filename...: apci121
#+ Description: POS參數基本資料維護作業
#+ Creator....: 03247(2014-02-27 09:49:55)
#+ Modifier...: 06189(2015-06-10 14:47:01) -SD/PR-
]]>
  </section>
  <section id="apci121.detail_show" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION apci121_detail_show()
   DEFINE l_ac_t LIKE type_t.num10
   #add-point:show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point
   #add-point:show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point
   
   LET l_ac_t = l_ac
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   #應用 a12 樣板自動產生(Version:3)
 
 
    
   #帶出公用欄位reference值page2
   #應用 a12 樣板自動產生(Version:3)
 
 
   #帶出公用欄位reference值page3
   
 
   
   IF g_loc = 'm' THEN
      #讀入ref值
      FOR l_ac = 1 TO g_pcai_d.getLength()
         #add-point:show段單頭reference
         {<point name="detail_show.body.reference"/>}
         #end add-point
         #add-point:show段單頭reference
         {<point name="detail_show.body2.reference"/>}
         #end add-point
 
      END FOR
   END IF
   
   IF g_loc = 'd' THEN
      FOR l_ac = 1 TO g_pcai3_d.getLength()
        #add-point:show段單身reference
        {<point name="detail_show.body3.reference"/>}
        #end add-point
      END FOR
 
      
      #add-point:detail_show段之後
      {<point name="detail_show.after"/>}
      #end add-point
   END IF
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="apci121.fetch" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apci121_fetch()
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point
   
   #判定單頭是否有資料
   IF g_detail_idx <= 0 OR g_pcai_d.getLength() = 0 THEN
      RETURN
   END IF
   
   #CALL g_pcai2_d.clear()
   CALL g_pcai3_d.clear()
 
   
   LET li_ac = l_ac 
    
   IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
      LET g_sql = "SELECT  UNIQUE t0.pcajstus,t0.pcaj002,t0.pcaj003,t0.pcajunit  FROM pcaj_t t0",    
           
                  " LEFT JOIN pcajl_t ON pcajlent = '"||g_enterprise||"' AND pcai001 = pcajl001 AND pcaj002 = pcajl002 AND pcajl003 = '",g_dlang,"'",
                  
                  " WHERE t0.pcajent=?  AND t0. pcaj001=?"
      #add-point:單身sql wc
      {<point name="fetch.sql_wc" />}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      LET g_sql = g_sql, " ORDER BY t0.pcaj002" 
                         
      #add-point:單身填充前
      {<point name="fetch.before_fill" />}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
      PREPARE apci121_pb2 FROM g_sql
      DECLARE b_fill_curs2 CURSOR FOR apci121_pb2
   END IF
   
   LET l_ac = g_detail_idx
   OPEN b_fill_curs2 USING g_enterprise,g_pcai_d[l_ac].pcai001
   
   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_pcai3_d[l_ac].pcajstus,g_pcai3_d[l_ac].pcaj002,g_pcai3_d[l_ac].pcaj003, 
       g_pcai3_d[l_ac].pcajunit
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      {<point name="fetch.fill2"/>}
      #end add-point
      
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
      LET l_ac = l_ac + 1
      
   END FOREACH
 
 
 
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point
   
   #CALL g_pcai2_d.deleteElement(g_pcai2_d.getLength())   
   CALL g_pcai3_d.deleteElement(g_pcai3_d.getLength())   
 
   
   LET g_pcai3_d_mask_o.* =  g_pcai3_d.*
   FOR l_ac = 1 TO g_pcai3_d.getLength()
      LET g_pcai3_d_mask_o[l_ac].* =  g_pcai3_d[l_ac].*
      CALL apci121_pcaj_t_mask()
      LET g_pcai3_d_mask_n[l_ac].* =  g_pcai3_d[l_ac].*
   END FOR
 
   
   DISPLAY g_pcai3_d.getLength() TO FORMONLY.cnt
   #LET g_loc = 'd'
   CALL apci121_detail_show()
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="apci121.func_signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="apci121.global" ver="16" status="" src="s" readonly="">
    <![CDATA[#應用 t02 樣板自動產生(Version:15)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
    
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_pcai_d RECORD
       pcaistus LIKE pcai_t.pcaistus, 
   pcai001 LIKE pcai_t.pcai001, 
   pcail003 LIKE pcail_t.pcail003, 
   pcai002 LIKE pcai_t.pcai002, 
   pcai003 LIKE pcai_t.pcai003, 
   pcai004 LIKE pcai_t.pcai004, 
   pcaistamp DATETIME YEAR TO FRACTION(5), 
   pcaipos LIKE type_t.chr500, 
   pcaiunit LIKE pcai_t.pcaiunit
       END RECORD
PRIVATE TYPE type_g_pcai2_d RECORD
       pcai001 LIKE pcai_t.pcai001, 
   pcaiownid LIKE pcai_t.pcaiownid, 
   pcaiownid_desc LIKE type_t.chr500, 
   pcaiowndp LIKE pcai_t.pcaiowndp, 
   pcaiowndp_desc LIKE type_t.chr500, 
   pcaicrtid LIKE pcai_t.pcaicrtid, 
   pcaicrtid_desc LIKE type_t.chr500, 
   pcaicrtdp LIKE pcai_t.pcaicrtdp, 
   pcaicrtdp_desc LIKE type_t.chr500, 
   pcaicrtdt DATETIME YEAR TO SECOND, 
   pcaimodid LIKE pcai_t.pcaimodid, 
   pcaimodid_desc LIKE type_t.chr500, 
   pcaimoddt DATETIME YEAR TO SECOND
       END RECORD
PRIVATE TYPE type_g_pcai3_d RECORD
       pcajstus LIKE pcaj_t.pcajstus, 
   pcaj002 LIKE pcaj_t.pcaj002, 
   pcajl004 LIKE pcajl_t.pcajl004, 
   pcaj003 LIKE pcaj_t.pcaj003, 
   pcajunit LIKE pcaj_t.pcajunit
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      pcail001 LIKE pcail_t.pcail001,
      pcail002 LIKE pcail_t.pcail002,
      pcail003 LIKE pcail_t.pcail003,
      pcajl001 LIKE pcajl_t.pcajl001,
      pcajl002 LIKE pcajl_t.pcajl002,
      pcajl003 LIKE pcajl_t.pcajl003,
      pcajl004 LIKE pcajl_t.pcajl004
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_pcai_d
DEFINE g_master_t                   type_g_pcai_d
DEFINE g_pcai_d          DYNAMIC ARRAY OF type_g_pcai_d
DEFINE g_pcai_d_t        type_g_pcai_d
DEFINE g_pcai_d_o        type_g_pcai_d
DEFINE g_pcai_d_mask_o   DYNAMIC ARRAY OF type_g_pcai_d #轉換遮罩前資料
DEFINE g_pcai_d_mask_n   DYNAMIC ARRAY OF type_g_pcai_d #轉換遮罩後資料
DEFINE g_pcai2_d          DYNAMIC ARRAY OF type_g_pcai2_d
DEFINE g_pcai2_d_t        type_g_pcai2_d
DEFINE g_pcai2_d_o        type_g_pcai2_d
DEFINE g_pcai2_d_mask_o   DYNAMIC ARRAY OF type_g_pcai2_d #轉換遮罩前資料
DEFINE g_pcai2_d_mask_n   DYNAMIC ARRAY OF type_g_pcai2_d #轉換遮罩後資料
DEFINE g_pcai3_d          DYNAMIC ARRAY OF type_g_pcai3_d
DEFINE g_pcai3_d_t        type_g_pcai3_d
DEFINE g_pcai3_d_o        type_g_pcai3_d
DEFINE g_pcai3_d_mask_o   DYNAMIC ARRAY OF type_g_pcai3_d #轉換遮罩前資料
DEFINE g_pcai3_d_mask_n   DYNAMIC ARRAY OF type_g_pcai3_d #轉換遮罩後資料
 
      
DEFINE g_wc                 STRING
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10             
DEFINE g_ac_last            LIKE type_t.num10             
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_detail_idx         LIKE type_t.num10             #單身所在筆數(第一階單身)
DEFINE g_detail_idx2        LIKE type_t.num10             #單身所在筆數(第二階單身)
DEFINE g_detail_cnt         LIKE type_t.num10             #單身總筆數 (第一階單身)
DEFINE g_detail_cnt2        LIKE type_t.num10             #單身總筆數 (第二階單身)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_current_page       LIKE type_t.num10             #判斷單身筆數用
DEFINE g_loc                LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
DEFINE g_wc2_table2   STRING
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="apci121.idx_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION apci121_idx_chk(ps_loc)
   DEFINE ps_loc   LIKE type_t.chr10
   DEFINE li_idx   LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pcai_d.getLength() THEN
         LET g_detail_idx = g_pcai_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pcai_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      LET li_idx = g_detail_idx
      LET li_cnt = g_pcai_d.getLength()
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_pcai2_d.getLength() THEN
         LET g_detail_idx = g_pcai2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pcai2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      LET li_idx = g_detail_idx
      LET li_cnt = g_pcai2_d.getLength()
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx2 > g_pcai3_d.getLength() THEN
         LET g_detail_idx2 = g_pcai3_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_pcai3_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      LET li_idx = g_detail_idx2
      LET li_cnt = g_pcai3_d.getLength()
   END IF
 
    
   IF ps_loc = 'm' THEN
      DISPLAY li_idx TO FORMONLY.h_index
      DISPLAY li_cnt TO FORMONLY.h_count
      IF g_pcai3_d.getLength() = 0 THEN
         DISPLAY '' TO FORMONLY.idx
         DISPLAY '' TO FORMONLY.cnt
      ELSE
         DISPLAY 1 TO FORMONLY.idx
         DISPLAY g_pcai3_d.getLength() TO FORMONLY.cnt
      END IF
 
   ELSE
      DISPLAY li_idx TO FORMONLY.idx
      DISPLAY li_cnt TO FORMONLY.cnt
   END IF
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apci121.init" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION apci121_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point   
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   
      CALL cl_set_combo_scc('pcai002','6022') 
   CALL cl_set_combo_scc('pcai004','6023') 
 
   LET l_ac = 1
   LET g_detail_multi_table_t.pcail001 = g_pcai_d[l_ac].pcai001
LET g_detail_multi_table_t.pcail002 = g_dlang
LET g_detail_multi_table_t.pcail003 = g_pcai_d[l_ac].pcail003
 
   
   LET g_detail_multi_table_t.pcajl001 = g_pcai_d[g_detail_idx].pcai001
LET g_detail_multi_table_t.pcajl002 = g_pcai3_d[l_ac].pcaj002
LET g_detail_multi_table_t.pcajl003 = g_dlang
LET g_detail_multi_table_t.pcajl004 = g_pcai3_d[l_ac].pcajl004
 
 
   #避免USER直接進入第二單身時無資料
   IF g_pcai_d.getLength() > 0 THEN
      LET g_master_t.* = g_pcai_d[1].*
      LET g_master.* = g_pcai_d[1].*
   END IF
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL apci121_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="apci121.input" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION apci121_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point 
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT pcaistus,pcai001,pcai002,pcai003,pcai004,pcaistamp,pcaiunit,pcai001,pcaiownid, 
       pcaiowndp,pcaicrtid,pcaicrtdp,pcaicrtdt,pcaimodid,pcaimoddt FROM pcai_t WHERE pcaient=? AND pcai001=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apci121_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT pcajstus,pcaj002,pcaj003,pcajunit FROM pcaj_t WHERE pcajent=? AND pcaj001=?  
       AND pcaj002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apci121_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:input段修改前
   {<point name="input.before_input"/>}
   #end add-point
 
   LET INT_FLAG = 0
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_pcai_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pcai_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_current_page = 1
            IF p_cmd = 'u' THEN
               CALL apci121_b_fill(g_wc)
            END IF
            LET g_loc = 'm'
            LET g_detail_cnt = g_pcai_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
            
         BEFORE ROW
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_ac_last = l_ac
            LET g_detail_idx = l_ac
            LET g_master_t.* = g_pcai_d[l_ac].*
            LET g_master.* = g_pcai_d[l_ac].*
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_detail_idx = l_ac
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_pcai_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_pcai_d[l_ac].pcai001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_pcai_d_t.* = g_pcai_d[l_ac].*  #BACKUP
               LET g_pcai_d_o.* = g_pcai_d[l_ac].*  #BACKUP
               IF NOT apci121_lock_b("pcai_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apci121_bcl INTO g_pcai_d[l_ac].pcaistus,g_pcai_d[l_ac].pcai001,g_pcai_d[l_ac].pcai002, 
                      g_pcai_d[l_ac].pcai003,g_pcai_d[l_ac].pcai004,g_pcai_d[l_ac].pcaistamp,g_pcai_d[l_ac].pcaiunit, 
                      g_pcai2_d[l_ac].pcai001,g_pcai2_d[l_ac].pcaiownid,g_pcai2_d[l_ac].pcaiowndp,g_pcai2_d[l_ac].pcaicrtid, 
                      g_pcai2_d[l_ac].pcaicrtdp,g_pcai2_d[l_ac].pcaicrtdt,g_pcai2_d[l_ac].pcaimodid, 
                      g_pcai2_d[l_ac].pcaimoddt
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_pcai_d_t.pcai001 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
 
                  #遮罩相關處理
                  LET g_pcai_d_mask_o[l_ac].* =  g_pcai_d[l_ac].*
                  CALL apci121_pcai_t_mask()
                  LET g_pcai_d_mask_n[l_ac].* =  g_pcai_d[l_ac].*
                  
                  CALL cl_show_fld_cont()
                  #CALL apci121_detail_show()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL apci121_set_entry_b(l_cmd)
            CALL apci121_set_no_entry_b(l_cmd)
            #add-point:input段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.pcail001 = g_pcai_d[l_ac].pcai001
LET g_detail_multi_table_t.pcail002 = g_dlang
LET g_detail_multi_table_t.pcail003 = g_pcai_d[l_ac].pcail003
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'pcailent'
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[02] = 'pcail001'
            LET l_var_keys[02] = g_pcai_d[l_ac].pcai001
            LET l_field_keys[03] = 'pcail002'
            LET l_var_keys[03] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'pcail_t') THEN
               RETURN 
            END IF 
 
            #讀取對應的單身資料
            LET g_action_choice = "fetch"
            CALL apci121_fetch()
            CALL apci121_idx_chk('m')
 
         BEFORE INSERT
            LET g_detail_multi_table_t.pcail001 = g_pcai_d[l_ac].pcai001
LET g_detail_multi_table_t.pcail002 = g_dlang
LET g_detail_multi_table_t.pcail003 = g_pcai_d[l_ac].pcail003
 
            #判斷能否在此頁面進行資料新增
            
            #清空下層單身
                        CALL g_pcai3_d.clear()
 
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pcai_d[l_ac].* TO NULL 
            INITIALIZE g_pcai_d_t.* TO NULL 
            INITIALIZE g_pcai_d_o.* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pcai2_d[l_ac].pcaiownid = g_user
      LET g_pcai2_d[l_ac].pcaiowndp = g_dept
      LET g_pcai2_d[l_ac].pcaicrtid = g_user
      LET g_pcai2_d[l_ac].pcaicrtdp = g_dept 
      LET g_pcai2_d[l_ac].pcaicrtdt = cl_get_current()
      LET g_pcai2_d[l_ac].pcaimodid = g_user
      LET g_pcai2_d[l_ac].pcaimoddt = cl_get_current()
      LET g_pcai_d[l_ac].pcaistus = ''
 
 
                  LET g_pcai_d[l_ac].pcaistus = "Y"
      LET g_pcai_d[l_ac].pcaipos = "N"
 
            #add-point:modify段before備份
            {<point name="input.body.before_bak"/>}
            #end add-point
            LET g_pcai_d_t.* = g_pcai_d[l_ac].*     #新輸入資料
            LET g_pcai_d_o.* = g_pcai_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apci121_set_entry_b("a")
            CALL apci121_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pcai_d[li_reproduce_target].* = g_pcai_d[li_reproduce].*
               LET g_pcai2_d[li_reproduce_target].* = g_pcai2_d[li_reproduce].*
 
               LET g_pcai_d[g_pcai_d.getLength()].pcai001 = NULL
 
            END IF
            #add-point:input段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
            
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pcai_t 
             WHERE pcaient = g_enterprise AND pcai001 = g_pcai_d[l_ac].pcai001 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcai_d[g_detail_idx].pcai001
               CALL apci121_insert_b('pcai_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pcai_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pcai_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apci121_b_fill(g_wc)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_pcai_d[l_ac].pcai001 = g_detail_multi_table_t.pcail001 AND
         g_pcai_d[l_ac].pcail003 = g_detail_multi_table_t.pcail003 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pcailent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pcai_d[l_ac].pcai001
            LET l_field_keys[02] = 'pcail001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.pcail001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pcail002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.pcail002
            LET l_vars[01] = g_pcai_d[l_ac].pcail003
            LET l_fields[01] = 'pcail003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pcail_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ##ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               LET g_master.* = g_pcai_d[l_ac].*
            END IF
              
         BEFORE DELETE  #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point
               
               DELETE FROM pcai_t
                WHERE pcaient = g_enterprise AND 
                      pcai001 = g_pcai_d_t.pcai001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point
                      
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "pcai_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'pcailent'
                  LET l_var_keys_bak[01] = g_enterprise
                  LET l_field_keys[02] = 'pcail001'
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.pcail001
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'pcail_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  #修改歷程記錄(刪除)
                  IF NOT cl_log_modified_record('','') THEN 
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF 
               CLOSE apci121_bcl
               LET l_count = g_pcai_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcai_d_t.pcai001
    
               #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL apci121_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
        
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2
               {<point name="input.body.after_delete"/>}
               #end add-point
                              CALL apci121_delete_b('pcai_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_pcai_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaistus
            #add-point:BEFORE FIELD pcaistus
            {<point name="input.b.page1.pcaistus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaistus
            
            #add-point:AFTER FIELD pcaistus
            {<point name="input.a.page1.pcaistus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcaistus
            #add-point:ON CHANGE pcaistus
            {<point name="input.g.page1.pcaistus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai001
            #add-point:BEFORE FIELD pcai001
            {<point name="input.b.page1.pcai001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai001
            
            #add-point:AFTER FIELD pcai001
            {<point name="input.a.page1.pcai001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcai001
            #add-point:ON CHANGE pcai001
            {<point name="input.g.page1.pcai001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcail003
            #add-point:BEFORE FIELD pcail003
            {<point name="input.b.page1.pcail003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcail003
            
            #add-point:AFTER FIELD pcail003
            {<point name="input.a.page1.pcail003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcail003
            #add-point:ON CHANGE pcail003
            {<point name="input.g.page1.pcail003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai002
            #add-point:BEFORE FIELD pcai002
            {<point name="input.b.page1.pcai002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai002
            
            #add-point:AFTER FIELD pcai002
            {<point name="input.a.page1.pcai002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcai002
            #add-point:ON CHANGE pcai002
            {<point name="input.g.page1.pcai002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pcai_d[l_ac].pcai003,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD pcai003
            END IF 
 
 
            #add-point:AFTER FIELD pcai003
            {<point name="input.a.page1.pcai003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai003
            #add-point:BEFORE FIELD pcai003
            {<point name="input.b.page1.pcai003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcai003
            #add-point:ON CHANGE pcai003
            {<point name="input.g.page1.pcai003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai004
            #add-point:BEFORE FIELD pcai004
            {<point name="input.b.page1.pcai004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai004
            
            #add-point:AFTER FIELD pcai004
            {<point name="input.a.page1.pcai004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcai004
            #add-point:ON CHANGE pcai004
            {<point name="input.g.page1.pcai004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaistamp
            #add-point:BEFORE FIELD pcaistamp
            {<point name="input.b.page1.pcaistamp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaistamp
            
            #add-point:AFTER FIELD pcaistamp
            {<point name="input.a.page1.pcaistamp" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcaistamp
            #add-point:ON CHANGE pcaistamp
            {<point name="input.g.page1.pcaistamp" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaipos
            #add-point:BEFORE FIELD pcaipos
            {<point name="input.b.page1.pcaipos" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaipos
            
            #add-point:AFTER FIELD pcaipos
            {<point name="input.a.page1.pcaipos" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcaipos
            #add-point:ON CHANGE pcaipos
            {<point name="input.g.page1.pcaipos" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaiunit
            #add-point:BEFORE FIELD pcaiunit
            {<point name="input.b.page1.pcaiunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaiunit
            
            #add-point:AFTER FIELD pcaiunit
            {<point name="input.a.page1.pcaiunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcaiunit
            #add-point:ON CHANGE pcaiunit
            {<point name="input.g.page1.pcaiunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.pcaistus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaistus
            #add-point:ON ACTION controlp INFIELD pcaistus
            {<point name="input.c.page1.pcaistus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcai001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai001
            #add-point:ON ACTION controlp INFIELD pcai001
            {<point name="input.c.page1.pcai001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcail003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcail003
            #add-point:ON ACTION controlp INFIELD pcail003
            {<point name="input.c.page1.pcail003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcai002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai002
            #add-point:ON ACTION controlp INFIELD pcai002
            {<point name="input.c.page1.pcai002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcai003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai003
            #add-point:ON ACTION controlp INFIELD pcai003
            {<point name="input.c.page1.pcai003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcai004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai004
            #add-point:ON ACTION controlp INFIELD pcai004
            {<point name="input.c.page1.pcai004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcaistamp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaistamp
            #add-point:ON ACTION controlp INFIELD pcaistamp
            {<point name="input.c.page1.pcaistamp" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcaipos
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaipos
            #add-point:ON ACTION controlp INFIELD pcaipos
            {<point name="input.c.page1.pcaipos" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pcaiunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaiunit
            #add-point:ON ACTION controlp INFIELD pcaiunit
            {<point name="input.c.page1.pcaiunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pcai_d[l_ac].* = g_pcai_d_t.*
               CLOSE apci121_bcl
               CALL s_transaction_end('N','0')
               CANCEL DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_pcai_d[l_ac].pcai001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pcai_d[l_ac].* = g_pcai_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_pcai2_d[l_ac].pcaimodid = g_user 
LET g_pcai2_d[l_ac].pcaimoddt = cl_get_current()
LET g_pcai2_d[l_ac].pcaimodid_desc = cl_get_username(g_pcai2_d[l_ac].pcaimodid)
               
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL apci121_pcai_t_mask_restore('restore_mask_o')
      
               UPDATE pcai_t SET (pcaistus,pcai001,pcai002,pcai003,pcai004,pcaistamp,pcaiunit,pcaiownid, 
                   pcaiowndp,pcaicrtid,pcaicrtdp,pcaicrtdt,pcaimodid,pcaimoddt) = (g_pcai_d[l_ac].pcaistus, 
                   g_pcai_d[l_ac].pcai001,g_pcai_d[l_ac].pcai002,g_pcai_d[l_ac].pcai003,g_pcai_d[l_ac].pcai004, 
                   g_pcai_d[l_ac].pcaistamp,g_pcai_d[l_ac].pcaiunit,g_pcai2_d[l_ac].pcaiownid,g_pcai2_d[l_ac].pcaiowndp, 
                   g_pcai2_d[l_ac].pcaicrtid,g_pcai2_d[l_ac].pcaicrtdp,g_pcai2_d[l_ac].pcaicrtdt,g_pcai2_d[l_ac].pcaimodid, 
                   g_pcai2_d[l_ac].pcaimoddt)
                WHERE pcaient = g_enterprise AND
                  pcai001 = g_pcai_d_t.pcai001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pcai_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pcai_d[l_ac].* = g_pcai_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pcai_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pcai_d[l_ac].* = g_pcai_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcai_d[g_detail_idx].pcai001
               LET gs_keys_bak[1] = g_pcai_d_t.pcai001
               CALL apci121_update_b('pcai_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_pcai_d[l_ac].pcai001 = g_detail_multi_table_t.pcail001 AND
         g_pcai_d[l_ac].pcail003 = g_detail_multi_table_t.pcail003 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pcailent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pcai_d[l_ac].pcai001
            LET l_field_keys[02] = 'pcail001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.pcail001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pcail002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.pcail002
            LET l_vars[01] = g_pcai_d[l_ac].pcail003
            LET l_fields[01] = 'pcail003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pcail_t')
         END IF 
 
                     
                     #將遮罩欄位進行遮蔽
                     CALL apci121_pcai_t_mask_restore('restore_mask_n')
                     #修改歷程記錄(修改)
                     LET g_log1 = util.JSON.stringify(g_pcai_d_t)
                     LET g_log2 = util.JSON.stringify(g_pcai_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #若Key欄位有變動
               LET g_master.* = g_pcai_d[l_ac].*
               CALL apci121_key_update_b()
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL apci121_unlock_b("pcai_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
            IF l_cmd = 'u' AND INT_FLAG THEN
               LET g_pcai_d[l_ac].* = g_pcai_d_t.*
            END IF
            LET l_cmd = ''
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()      
            #CALL cl_showmsg()            
    
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_pcai_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pcai_d.getLength()+1
        
      END INPUT
      
 
      
      #實際單身段落
      INPUT ARRAY g_pcai3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page3.update_item" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_pcai_d[g_detail_idx].pcai001) THEN
               NEXT FIELD pcaistus
            END IF
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pcai3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_loc = 'd'
            LET g_detail_cnt = g_pcai3_d.getLength()
            LET g_current_page = 3
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
 
         BEFORE INSERT
            IF g_pcai_d.getLength() = 0 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 'std-00013' 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               NEXT FIELD pcai001
            END IF 
            #判斷能否在此頁面進行資料新增
            
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pcai3_d[l_ac].* TO NULL 
            INITIALIZE g_pcai3_d_t.* TO NULL 
            INITIALIZE g_pcai3_d_o.* TO NULL 
                  LET g_pcai3_d[l_ac].pcajstus = "Y"
      LET g_pcai3_d[l_ac].pcaj003 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body3.before_bak"/>}
            #end add-point
            LET g_pcai3_d_t.* = g_pcai3_d[l_ac].*     #新輸入資料
            LET g_pcai3_d_o.* = g_pcai3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apci121_set_entry_b("a")
            CALL apci121_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pcai3_d[li_reproduce_target].* = g_pcai3_d[li_reproduce].*
 
               LET g_pcai3_d[li_reproduce_target].pcaj002 = NULL
            END IF
            #add-point:input段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW 
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            CALL s_transaction_begin()
            LET g_detail_cnt = g_pcai3_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_pcai3_d[l_ac].pcaj002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_pcai3_d_t.* = g_pcai3_d[l_ac].*  #BACKUP
               LET g_pcai3_d_o.* = g_pcai3_d[l_ac].*  #BACKUP
               IF NOT apci121_lock_b("pcaj_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apci121_bcl2 INTO g_pcai3_d[l_ac].pcajstus,g_pcai3_d[l_ac].pcaj002,g_pcai3_d[l_ac].pcaj003, 
                      g_pcai3_d[l_ac].pcajunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pcai3_d_mask_o[l_ac].* =  g_pcai3_d[l_ac].*
                  CALL apci121_pcaj_t_mask()
                  LET g_pcai3_d_mask_n[l_ac].* =  g_pcai3_d[l_ac].*
                  
                  CALL cl_show_fld_cont()
                  #CALL apci121_detail_show()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL apci121_set_entry_b(l_cmd)
            CALL apci121_set_no_entry_b(l_cmd)
            #add-point:input段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.pcajl001 = g_pcai_d[g_detail_idx].pcai001
LET g_detail_multi_table_t.pcajl002 = g_pcai3_d[l_ac].pcaj002
LET g_detail_multi_table_t.pcajl003 = g_dlang
LET g_detail_multi_table_t.pcajl004 = g_pcai3_d[l_ac].pcajl004
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'pcajlent'
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[02] = 'pcajl001'
            LET l_var_keys[02] = g_pcai_d[g_detail_idx].pcai001
            LET l_field_keys[03] = 'pcajl002'
            LET l_var_keys[03] = g_pcai3_d[l_ac].pcaj002
            LET l_field_keys[04] = 'pcajl003'
            LET l_var_keys[04] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'pcajl_t') THEN
               RETURN 
            END IF 
 
            CALL apci121_idx_chk('d')
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point  
               
               DELETE FROM pcaj_t
                WHERE pcajent = g_enterprise AND
                   pcaj001 = g_master.pcai001
                   AND pcaj002 = g_pcai3_d_t.pcaj002
                   
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point  
                   
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "pcaj_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'pcajlent'
                  LET l_var_keys_bak[01] = g_enterprise
                  LET l_field_keys[02] = 'pcajl001'
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.pcajl001
                  LET l_field_keys[03] = 'pcajl002'
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.pcajl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'pcajl_t')
 
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apci121_bcl
               LET l_count = g_pcai_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcai_d[g_detail_idx].pcai001
               LET gs_keys[2] = g_pcai3_d_t.pcaj002
 
            END IF 
            
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE 
               {<point name="input.body3.after_delete"/>}
               #end add-point
                              CALL apci121_delete_b('pcaj_t',gs_keys,"'3'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_pcai3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pcaj_t 
             WHERE pcajent = g_enterprise AND
                   pcaj001 = g_master.pcai001
                   AND pcaj002 = g_pcai3_d[g_detail_idx2].pcaj002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcai_d[g_detail_idx].pcai001
               LET gs_keys[2] = g_pcai3_d[g_detail_idx2].pcaj002
               CALL apci121_insert_b('pcaj_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pcai_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pcaj_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apci121_b_fill(g_wc)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_pcai_d[g_detail_idx].pcai001 = g_detail_multi_table_t.pcajl001 AND
         g_pcai3_d[l_ac].pcaj002 = g_detail_multi_table_t.pcajl002 AND
         g_pcai3_d[l_ac].pcajl004 = g_detail_multi_table_t.pcajl004 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pcajlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pcai_d[g_detail_idx].pcai001
            LET l_field_keys[02] = 'pcajl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.pcajl001
            LET l_var_keys[03] = g_pcai3_d[l_ac].pcaj002
            LET l_field_keys[03] = 'pcajl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.pcajl002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'pcajl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.pcajl003
            LET l_vars[01] = g_pcai3_d[l_ac].pcajl004
            LET l_fields[01] = 'pcajl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pcajl_t')
         END IF 
 
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ##ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pcai3_d[l_ac].* = g_pcai3_d_t.*
               CLOSE apci121_bcl2
               CALL s_transaction_end('N','0')
               CANCEL DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pcai3_d[l_ac].* = g_pcai3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身3)
               
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL apci121_pcaj_t_mask_restore('restore_mask_o')
               
               UPDATE pcaj_t SET (pcajstus,pcaj002,pcaj003,pcajunit) = (g_pcai3_d[l_ac].pcajstus,g_pcai3_d[l_ac].pcaj002, 
                   g_pcai3_d[l_ac].pcaj003,g_pcai3_d[l_ac].pcajunit) #自訂欄位頁簽
                WHERE pcajent = g_enterprise AND
                   pcaj001 = g_master.pcai001
                   AND pcaj002 = g_pcai3_d_t.pcaj002
                   
               #add-point:單身修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                   
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pcaj_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pcai3_d[l_ac].* = g_pcai3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pcaj_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pcai3_d[l_ac].* = g_pcai3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcai_d[g_detail_idx].pcai001
               LET gs_keys_bak[1] = g_pcai_d[g_detail_idx].pcai001
               LET gs_keys[2] = g_pcai3_d[g_detail_idx2].pcaj002
               LET gs_keys_bak[2] = g_pcai3_d_t.pcaj002
               CALL apci121_update_b('pcaj_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_pcai_d[g_detail_idx].pcai001 = g_detail_multi_table_t.pcajl001 AND
         g_pcai3_d[l_ac].pcaj002 = g_detail_multi_table_t.pcajl002 AND
         g_pcai3_d[l_ac].pcajl004 = g_detail_multi_table_t.pcajl004 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pcajlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pcai_d[g_detail_idx].pcai001
            LET l_field_keys[02] = 'pcajl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.pcajl001
            LET l_var_keys[03] = g_pcai3_d[l_ac].pcaj002
            LET l_field_keys[03] = 'pcajl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.pcajl002
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'pcajl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.pcajl003
            LET l_vars[01] = g_pcai3_d[l_ac].pcajl004
            LET l_fields[01] = 'pcajl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pcajl_t')
         END IF 
 
                     
                     #將遮罩欄位進行遮蔽
                     CALL apci121_pcaj_t_mask_restore('restore_mask_n')
                     #修改歷程記錄(下層修改)
                     LET g_log1 = util.JSON.stringify(g_pcai3_d_t)
                     LET g_log2 = util.JSON.stringify(g_pcai3_d[l_ac])
                     IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcajstus
            #add-point:BEFORE FIELD pcajstus
            {<point name="input.b.page3.pcajstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcajstus
            
            #add-point:AFTER FIELD pcajstus
            {<point name="input.a.page3.pcajstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcajstus
            #add-point:ON CHANGE pcajstus
            {<point name="input.g.page3.pcajstus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaj002
            #add-point:BEFORE FIELD pcaj002
            {<point name="input.b.page3.pcaj002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaj002
            
            #add-point:AFTER FIELD pcaj002
            {<point name="input.a.page3.pcaj002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcaj002
            #add-point:ON CHANGE pcaj002
            {<point name="input.g.page3.pcaj002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcajl004
            #add-point:BEFORE FIELD pcajl004
            {<point name="input.b.page3.pcajl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcajl004
            
            #add-point:AFTER FIELD pcajl004
            {<point name="input.a.page3.pcajl004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcajl004
            #add-point:ON CHANGE pcajl004
            {<point name="input.g.page3.pcajl004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaj003
            #add-point:BEFORE FIELD pcaj003
            {<point name="input.b.page3.pcaj003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaj003
            
            #add-point:AFTER FIELD pcaj003
            {<point name="input.a.page3.pcaj003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcaj003
            #add-point:ON CHANGE pcaj003
            {<point name="input.g.page3.pcaj003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcajunit
            #add-point:BEFORE FIELD pcajunit
            {<point name="input.b.page3.pcajunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcajunit
            
            #add-point:AFTER FIELD pcajunit
            {<point name="input.a.page3.pcajunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pcajunit
            #add-point:ON CHANGE pcajunit
            {<point name="input.g.page3.pcajunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.pcajstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcajstus
            #add-point:ON ACTION controlp INFIELD pcajstus
            {<point name="input.c.page3.pcajstus" />}
            #END add-point
 
         #Ctrlp:input.c.page3.pcaj002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaj002
            #add-point:ON ACTION controlp INFIELD pcaj002
            {<point name="input.c.page3.pcaj002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.pcajl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcajl004
            #add-point:ON ACTION controlp INFIELD pcajl004
            {<point name="input.c.page3.pcajl004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.pcaj003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaj003
            #add-point:ON ACTION controlp INFIELD pcaj003
            {<point name="input.c.page3.pcaj003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.pcajunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcajunit
            #add-point:ON ACTION controlp INFIELD pcajunit
            {<point name="input.c.page3.pcajunit" />}
            #END add-point
 
 
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pcai3_d[l_ac].* = g_pcai3_d_t.*
               END IF
               CLOSE apci121_bcl2
               CALL s_transaction_end('N','0')
               CANCEL DIALOG 
            END IF
            
            #其他table進行unlock
            CALL cl_multitable_unlock()
 
            CALL apci121_unlock_b("pcaj_t")
            CALL s_transaction_end('Y','0')
            LET l_cmd = ''
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
 
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_pcai3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pcai3_d.getLength()+1
 
      END INPUT
 
      
      DISPLAY ARRAY g_pcai2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            CALL apci121_b_fill(g_wc)
            LET g_current_page = 2
        
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            CALL cl_show_fld_cont() 
            LET g_action_choice = "fetch"
            CALL apci121_fetch()
            CALL apci121_idx_chk('m')
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
    
 
      
      #add-point:input段input_array"
      {<point name="input.more_inputarray"/>}
      #end add-point
      
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         LET g_curr_diag = ui.DIALOG.getCurrent()
         IF g_detail_idx > 0 THEN
            IF g_detail_idx > g_pcai_d.getLength() THEN
               LET g_detail_idx = g_pcai_d.getLength()
            END IF
            CALL DIALOG.setCurrentRow("s_detail1", g_detail_idx)
            LET l_ac = g_detail_idx
         END IF 
         LET g_detail_idx = l_ac
         #add-point:input段input_array"
         {<point name="input.before_dialog"/>}
         #end add-point
         #先確定單頭(第一單身)是否有資料
         IF g_pcai_d.getLength() > 0 THEN
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pcaistus
               WHEN "s_detail2"
                  NEXT FIELD pcai001_2
               WHEN "s_detail3"
                  NEXT FIELD pcajstus
 
            END CASE
         ELSE
            NEXT FIELD pcaistus
         END IF
            
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         CANCEL DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         CANCEL DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx2)
 
   
   #add-point:input段修改後
   {<point name="input.after_input"/>}
   #end add-point
 
   CLOSE apci121_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="apci121.insert" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION apci121_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point 
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point 
   
   #add-point:insert段新增前
   {<point name="insert.before_insert"/>}
   #end add-point 
   
   #進入資料輸入段落
   CALL g_pcai_d.clear() 
   CALL g_pcai2_d.clear() 
   CALL g_pcai3_d.clear() 
 
   CALL apci121_input('a')
   
   CALL apci121_b_fill(g_wc)
   
   #add-point:insert段新增後
   {<point name="insert.after_insert"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apci121.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apci121_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point
 
   #判斷是否是同一群組的table
   LET ls_group = "pcai_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point
      INSERT INTO pcai_t
                  (pcaient,
                   pcai001
                   ,pcaistus,pcai002,pcai003,pcai004,pcaistamp,pcaiunit,pcaiownid,pcaiowndp,pcaicrtid,pcaicrtdp,pcaicrtdt,pcaimodid,pcaimoddt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_pcai_d[g_detail_idx].pcaistus,g_pcai_d[g_detail_idx].pcai002,g_pcai_d[g_detail_idx].pcai003, 
                       g_pcai_d[g_detail_idx].pcai004,g_pcai_d[g_detail_idx].pcaistamp,g_pcai_d[g_detail_idx].pcaiunit, 
                       g_pcai2_d[g_detail_idx].pcaiownid,g_pcai2_d[g_detail_idx].pcaiowndp,g_pcai2_d[g_detail_idx].pcaicrtid, 
                       g_pcai2_d[g_detail_idx].pcaicrtdp,g_pcai2_d[g_detail_idx].pcaicrtdt,g_pcai2_d[g_detail_idx].pcaimodid, 
                       g_pcai2_d[g_detail_idx].pcaimoddt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pcai_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point
   END IF
   
 
   
   LET ls_group = "pcaj_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point
      INSERT INTO pcaj_t
                  (pcajent,
                   pcaj001,pcaj002
                   ,pcajstus,pcaj003,pcajunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_pcai3_d[g_detail_idx2].pcajstus,g_pcai3_d[g_detail_idx2].pcaj003,g_pcai3_d[g_detail_idx2].pcajunit) 

      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         RETURN
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="apci121.key_update_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單頭key欄位變動後, 連帶修正其他單身table
PRIVATE FUNCTION apci121_key_update_b()
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
 
   #判斷key是否有改變
   LET lb_chk = TRUE
   
   IF g_master.pcai001 <> g_master_t.pcai001 THEN
      LET lb_chk = FALSE
   END IF
 
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #add-point:update_b段修改前
   {<point name="key_update_b.before_update2" mark="Y"/>}
   #end add-point
   
   UPDATE pcaj_t 
      SET (pcaj001) 
           = 
          (g_master.pcai001) 
      WHERE 
           pcaj001 = g_master_t.pcai001
 
           
   #add-point:update_b段修改中
   {<point name="key_update_b.m_update2"/>}
   #end add-point
           
   CASE
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pcaj_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
      OTHERWISE
         #若有多語言table資料一同更新
         LET l_new_key[01] = g_pcai_d[l_ac].pcai001 
LET l_old_key[01] = g_detail_multi_table_t.pcajl001 
LET l_field_key[01] = 'pcajl001'
LET l_new_key[02] = g_dlang 
LET l_old_key[02] = g_dlang 
LET l_field_key[02] = 'pcajl003'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'pcajl_t')
   END CASE
   
   #add-point:update_b段修改後
   {<point name="key_update_b.after_update2"/>}
   #end add-point
 
 
   
END FUNCTION
]]>
  </section>
  <section id="apci121.lock_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apci121_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
   
   #先刷新資料
   #CALL apci121_b_fill(g_wc)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "pcai_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apci121_bcl USING g_enterprise,
                                       g_pcai_d[g_detail_idx].pcai001
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apci121_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "pcaj_t,"
   #僅鎖定自身table
   LET ls_group = "pcaj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apci121_bcl2 USING g_enterprise,
                                             g_master.pcai001,
                                             g_pcai3_d[g_detail_idx2].pcaj002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apci121_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apci121.main" ver="8" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apci121 WITH FORM cl_ap_formpath("apc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apci121_init()   
 
      #進入選單 Menu (="N")
      CALL apci121_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apci121
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="apci121.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/apc/apci121_mask.4gl"
]]>
  </section>
  <section id="apci121.modify" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION apci121_modify()
   DEFINE l_ac_t LIKE type_t.num10
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point 
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point 
   
   LET l_ac_t = g_detail_idx
 
   #add-point:modify段新增前
   {<point name="modify.before_modify"/>}
   #end add-point 
   
   #進入資料輸入段落
   CALL apci121_input('u')
    
   IF INT_FLAG AND g_pcai_d.getLength() > 0 THEN
      LET g_detail_idx = l_ac_t
      LET l_ac = l_ac_t
      CALL apci121_fetch()
   END IF
   
   #add-point:modify段新增後
   {<point name="modify.after_modify"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apci121.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[ 
]]>
  </section>
  <section id="apci121.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="apci121.query" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apci121_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point 
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_pcai_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc
   LET g_detail_idx = l_ac
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON pcaistus,pcai001,pcail003,pcai002,pcai003,pcai004,pcaistamp,pcaipos,pcaiunit, 
          pcaiownid,pcaiowndp,pcaicrtid,pcaicrtdp,pcaicrtdt,pcaimodid,pcaimoddt
           FROM s_detail1[1].pcaistus,s_detail1[1].pcai001,s_detail1[1].pcail003,s_detail1[1].pcai002, 
               s_detail1[1].pcai003,s_detail1[1].pcai004,s_detail1[1].pcaistamp,s_detail1[1].pcaipos, 
               s_detail1[1].pcaiunit,s_detail2[1].pcaiownid,s_detail2[1].pcaiowndp,s_detail2[1].pcaicrtid, 
               s_detail2[1].pcaicrtdp,s_detail2[1].pcaicrtdt,s_detail2[1].pcaimodid,s_detail2[1].pcaimoddt 

                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<pcaicrtdt>>----
         AFTER FIELD pcaicrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<pcaimoddt>>----
         AFTER FIELD pcaimoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pcaicnfdt>>----
         
         #----<<pcaipstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaistus
            #add-point:BEFORE FIELD pcaistus
            {<point name="construct.b.page1.pcaistus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaistus
            
            #add-point:AFTER FIELD pcaistus
            {<point name="construct.a.page1.pcaistus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcaistus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaistus
            #add-point:ON ACTION controlp INFIELD pcaistus
            {<point name="construct.c.page1.pcaistus" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.pcai001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai001
            #add-point:ON ACTION controlp INFIELD pcai001
            {<point name="construct.c.page1.pcai001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai001
            #add-point:BEFORE FIELD pcai001
            {<point name="construct.b.page1.pcai001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai001
            
            #add-point:AFTER FIELD pcai001
            {<point name="construct.a.page1.pcai001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcail003
            #add-point:BEFORE FIELD pcail003
            {<point name="construct.b.page1.pcail003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcail003
            
            #add-point:AFTER FIELD pcail003
            {<point name="construct.a.page1.pcail003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcail003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcail003
            #add-point:ON ACTION controlp INFIELD pcail003
            {<point name="construct.c.page1.pcail003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai002
            #add-point:BEFORE FIELD pcai002
            {<point name="construct.b.page1.pcai002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai002
            
            #add-point:AFTER FIELD pcai002
            {<point name="construct.a.page1.pcai002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcai002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai002
            #add-point:ON ACTION controlp INFIELD pcai002
            {<point name="construct.c.page1.pcai002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai003
            #add-point:BEFORE FIELD pcai003
            {<point name="construct.b.page1.pcai003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai003
            
            #add-point:AFTER FIELD pcai003
            {<point name="construct.a.page1.pcai003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcai003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai003
            #add-point:ON ACTION controlp INFIELD pcai003
            {<point name="construct.c.page1.pcai003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcai004
            #add-point:BEFORE FIELD pcai004
            {<point name="construct.b.page1.pcai004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcai004
            
            #add-point:AFTER FIELD pcai004
            {<point name="construct.a.page1.pcai004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcai004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcai004
            #add-point:ON ACTION controlp INFIELD pcai004
            {<point name="construct.c.page1.pcai004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaistamp
            #add-point:BEFORE FIELD pcaistamp
            {<point name="construct.b.page1.pcaistamp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaistamp
            
            #add-point:AFTER FIELD pcaistamp
            {<point name="construct.a.page1.pcaistamp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcaistamp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaistamp
            #add-point:ON ACTION controlp INFIELD pcaistamp
            {<point name="construct.c.page1.pcaistamp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaipos
            #add-point:BEFORE FIELD pcaipos
            {<point name="construct.b.page1.pcaipos" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaipos
            
            #add-point:AFTER FIELD pcaipos
            {<point name="construct.a.page1.pcaipos" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcaipos
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaipos
            #add-point:ON ACTION controlp INFIELD pcaipos
            {<point name="construct.c.page1.pcaipos" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaiunit
            #add-point:BEFORE FIELD pcaiunit
            {<point name="construct.b.page1.pcaiunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaiunit
            
            #add-point:AFTER FIELD pcaiunit
            {<point name="construct.a.page1.pcaiunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pcaiunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaiunit
            #add-point:ON ACTION controlp INFIELD pcaiunit
            {<point name="construct.c.page1.pcaiunit" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.pcaiownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaiownid
            #add-point:ON ACTION controlp INFIELD pcaiownid
            {<point name="construct.c.page2.pcaiownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaiownid
            #add-point:BEFORE FIELD pcaiownid
            {<point name="construct.b.page2.pcaiownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaiownid
            
            #add-point:AFTER FIELD pcaiownid
            {<point name="construct.a.page2.pcaiownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pcaiowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaiowndp
            #add-point:ON ACTION controlp INFIELD pcaiowndp
            {<point name="construct.c.page2.pcaiowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaiowndp
            #add-point:BEFORE FIELD pcaiowndp
            {<point name="construct.b.page2.pcaiowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaiowndp
            
            #add-point:AFTER FIELD pcaiowndp
            {<point name="construct.a.page2.pcaiowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pcaicrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaicrtid
            #add-point:ON ACTION controlp INFIELD pcaicrtid
            {<point name="construct.c.page2.pcaicrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaicrtid
            #add-point:BEFORE FIELD pcaicrtid
            {<point name="construct.b.page2.pcaicrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaicrtid
            
            #add-point:AFTER FIELD pcaicrtid
            {<point name="construct.a.page2.pcaicrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pcaicrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaicrtdp
            #add-point:ON ACTION controlp INFIELD pcaicrtdp
            {<point name="construct.c.page2.pcaicrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaicrtdp
            #add-point:BEFORE FIELD pcaicrtdp
            {<point name="construct.b.page2.pcaicrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaicrtdp
            
            #add-point:AFTER FIELD pcaicrtdp
            {<point name="construct.a.page2.pcaicrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaicrtdt
            #add-point:BEFORE FIELD pcaicrtdt
            {<point name="construct.b.page2.pcaicrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.pcaimodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaimodid
            #add-point:ON ACTION controlp INFIELD pcaimodid
            {<point name="construct.c.page2.pcaimodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaimodid
            #add-point:BEFORE FIELD pcaimodid
            {<point name="construct.b.page2.pcaimodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaimodid
            
            #add-point:AFTER FIELD pcaimodid
            {<point name="construct.a.page2.pcaimodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaimoddt
            #add-point:BEFORE FIELD pcaimoddt
            {<point name="construct.b.page2.pcaimoddt" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON pcajstus,pcaj002,pcajl004,pcaj003,pcajunit
           FROM s_detail3[1].pcajstus,s_detail3[1].pcaj002,s_detail3[1].pcajl004,s_detail3[1].pcaj003, 
               s_detail3[1].pcajunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<pcajcrtdt>>----
 
         #----<<pcajmoddt>>----
         
         #----<<pcajcnfdt>>----
         
         #----<<pcajpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcajstus
            #add-point:BEFORE FIELD pcajstus
            {<point name="construct.b.page3.pcajstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcajstus
            
            #add-point:AFTER FIELD pcajstus
            {<point name="construct.a.page3.pcajstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.pcajstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcajstus
            #add-point:ON ACTION controlp INFIELD pcajstus
            {<point name="construct.c.page3.pcajstus" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.pcaj002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaj002
            #add-point:ON ACTION controlp INFIELD pcaj002
            {<point name="construct.c.page3.pcaj002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaj002
            #add-point:BEFORE FIELD pcaj002
            {<point name="construct.b.page3.pcaj002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaj002
            
            #add-point:AFTER FIELD pcaj002
            {<point name="construct.a.page3.pcaj002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcajl004
            #add-point:BEFORE FIELD pcajl004
            {<point name="construct.b.page3.pcajl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcajl004
            
            #add-point:AFTER FIELD pcajl004
            {<point name="construct.a.page3.pcajl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.pcajl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcajl004
            #add-point:ON ACTION controlp INFIELD pcajl004
            {<point name="construct.c.page3.pcajl004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcaj003
            #add-point:BEFORE FIELD pcaj003
            {<point name="construct.b.page3.pcaj003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcaj003
            
            #add-point:AFTER FIELD pcaj003
            {<point name="construct.a.page3.pcaj003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.pcaj003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcaj003
            #add-point:ON ACTION controlp INFIELD pcaj003
            {<point name="construct.c.page3.pcaj003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pcajunit
            #add-point:BEFORE FIELD pcajunit
            {<point name="construct.b.page3.pcajunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pcajunit
            
            #add-point:AFTER FIELD pcajunit
            {<point name="construct.a.page3.pcajunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.pcajunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pcajunit
            #add-point:ON ACTION controlp INFIELD pcajunit
            {<point name="construct.c.page3.pcajunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="query.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         CANCEL DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      #資料導回第一筆
      LET g_detail_idx  = 1
      LET g_detail_idx2 = 1
   END IF
   
   LET g_wc = g_wc_table 
 
              , " AND ", g_wc2_table2
 
 
        
   LET g_wc2 = " 1=1"
               , " AND ", g_wc2_table2
 
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   LET g_error_show = 1
   CALL apci121_b_fill(g_wc)
   LET l_ac = g_detail_idx
   
   CALL apci121_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
 
   #資料導回第一筆(假設有資料)
   IF g_pcai_d.getLength() > 0 THEN
      DISPLAY g_detail_idx  TO FORMONLY.h_index
   ELSE
      DISPLAY ' ' TO FORMONLY.h_index
   END IF
   IF g_pcai3_d.getLength() > 0 THEN
      DISPLAY g_detail_idx2 TO FORMONLY.idx
   ELSE
      DISPLAY ' ' TO FORMONLY.idx
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="apci121.set_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apci121_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
                                                                     
END FUNCTION                                                                    
]]>
  </section>
  <section id="apci121.set_no_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apci121_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
                                                                          
END FUNCTION  
]]>
  </section>
  <section id="apci121.set_pk_array" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION apci121_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pcai_d[g_detail_idx].pcai001
   LET g_pk_array[1].column = 'pcai001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apci121.state_change" ver="1" status="" src="s" readonly="">
    <![CDATA[    
]]>
  </section>
  <section id="apci121.ui_dialog" ver="36" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION apci121_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point 
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point 
   
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_pcai_d.clear()
         CALL g_pcai2_d.clear()
         CALL g_pcai3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apci121_init()
      END IF
   
      #add-point:ui_dialog段before while
      {<point name="ui_dialog.before_while"/>}
      #end add-point
   
      CALL apci121_b_fill(g_wc)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_pcai_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET g_current_page = 1
      
            BEFORE ROW
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_master.* = g_pcai_d[g_detail_idx].*
               CALL cl_show_fld_cont()
               LET g_action_choice = "fetch"
               CALL apci121_fetch()
               CALL apci121_idx_chk('m')
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:2)
   CALL apci121_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_pcai2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET g_current_page = 2
               
            BEFORE ROW
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_master.* = g_pcai_d[g_detail_idx].*
               CALL cl_show_fld_cont() 
               LET g_action_choice = "fetch"
               CALL apci121_fetch()
               CALL apci121_idx_chk('m')
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:2)
   CALL apci121_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
         
         DISPLAY ARRAY g_pcai3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET g_current_page = 3
         
            BEFORE ROW
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx2
               CALL apci121_idx_chk('d')
               LET g_master.* = g_pcai_d[g_detail_idx].*
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_3)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            IF g_detail_idx > 0 THEN
               IF g_detail_idx > g_pcai_d.getLength() THEN
                  LET g_detail_idx = g_pcai_d.getLength()
               END IF
               CALL DIALOG.setCurrentRow("s_detail1", g_detail_idx)
               LET l_ac = g_detail_idx
            END IF 
            LET g_detail_idx = l_ac
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point  
            NEXT FIELD CURRENT
        
         AFTER DIALOG
            #add-point:ui_dialog段after dialog
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
         
      ON ACTION exporttoexcel
         LET g_action_choice="exporttoexcel"
         IF cl_auth_chk_act("exporttoexcel") THEN
            CALL g_export_node.clear()
            LET g_export_node[1] = base.typeInfo.create(g_pcai_d)
            LET g_export_id[1]   = "s_detail1"
            LET g_export_node[2] = base.typeInfo.create(g_pcai2_d)
            LET g_export_id[2]   = "s_detail2"
            LET g_export_node[3] = base.typeInfo.create(g_pcai3_d)
            LET g_export_id[3]   = "s_detail3"
 
            #add-point:ON ACTION exporttoexcel
            {<point name="menu.exporttoexcel" />}
            #END add-point
            CALL cl_export_to_excel_getpage()
            CALL cl_export_to_excel()
         END IF
         
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apci121_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apci121_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apci121_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
            END IF
 
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            CANCEL DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            CANCEL DIALOG
           
         
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL apci121_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apci121_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apci121_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="apci121.unlock_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apci121_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE apci121_bcl
   END IF
   
 
    
   LET ls_group = "pcaj_t,"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE apci121_bcl2
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="apci121.update_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apci121_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point     
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "pcai_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "pcai_t" THEN
   
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
   
      #將遮罩欄位還原
      CALL apci121_pcai_t_mask_restore('restore_mask_o')
               
      UPDATE pcai_t 
         SET (pcai001
              ,pcaistus,pcai002,pcai003,pcai004,pcaistamp,pcaiunit,pcaiownid,pcaiowndp,pcaicrtid,pcaicrtdp,pcaicrtdt,pcaimodid,pcaimoddt) 
              = 
             (ps_keys[1]
              ,g_pcai_d[g_detail_idx].pcaistus,g_pcai_d[g_detail_idx].pcai002,g_pcai_d[g_detail_idx].pcai003, 
                  g_pcai_d[g_detail_idx].pcai004,g_pcai_d[g_detail_idx].pcaistamp,g_pcai_d[g_detail_idx].pcaiunit, 
                  g_pcai2_d[g_detail_idx].pcaiownid,g_pcai2_d[g_detail_idx].pcaiowndp,g_pcai2_d[g_detail_idx].pcaicrtid, 
                  g_pcai2_d[g_detail_idx].pcaicrtdp,g_pcai2_d[g_detail_idx].pcaicrtdt,g_pcai2_d[g_detail_idx].pcaimodid, 
                  g_pcai2_d[g_detail_idx].pcaimoddt) 
         WHERE pcai001 = ps_keys_bak[1]
 
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
         
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pcai_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pcai_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            LET l_new_key[01] = ps_keys[01] 
LET l_old_key[01] = ps_keys_bak[01] 
LET l_field_key[01] = 'pcail001'
LET l_new_key[02] = g_dlang 
LET l_old_key[02] = g_dlang 
LET l_field_key[02] = 'pcail002'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'pcail_t')
      END CASE
 
      #將遮罩欄位進行遮蔽
      CALL apci121_pcai_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
   LET ls_group = "pcaj_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "pcaj_t" THEN
   
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point    
      
      #將遮罩欄位還原
      CALL apci121_pcaj_t_mask_restore('restore_mask_o')
      
      UPDATE pcaj_t 
         SET (pcaj001,pcaj002
              ,pcajstus,pcaj003,pcajunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pcai3_d[g_detail_idx2].pcajstus,g_pcai3_d[g_detail_idx2].pcaj003,g_pcai3_d[g_detail_idx2].pcajunit)  

         WHERE pcaj001 = ps_keys_bak[1] AND pcaj002 = ps_keys_bak[2]
 
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point 
         
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pcaj_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pcaj_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            LET l_new_key[01] = ps_keys[01] 
LET l_old_key[01] = ps_keys_bak[01] 
LET l_field_key[01] = 'pcajl001'
LET l_new_key[02] = ps_keys[02] 
LET l_old_key[02] = ps_keys_bak[02] 
LET l_field_key[02] = 'pcajl002'
LET l_new_key[03] = g_dlang 
LET l_old_key[03] = g_dlang 
LET l_field_key[03] = 'pcajl003'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'pcajl_t')
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apci121_pcaj_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point 
      
      RETURN
   END IF
 
 
   
END FUNCTION
]]>
  </section>
</add_points>
