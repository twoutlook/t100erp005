{<section id="apci210.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2016-07-12 22:01:53), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000021
#+ Filename...: apci210
#+ Description: 觸屏分類維護作業
#+ Creator....: 06137(2016-07-12 14:21:08)
#+ Modifier...: 06137 -SD/PR-
{</section>}



{<section id="apci210.global" >}
#應用 i05 樣板自動產生(Version:37)
#add-point:填寫註解說明
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用)
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
  
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_pcba_m RECORD
   pcba001 LIKE pcba_t.pcba001, 
   pcbal003 LIKE pcbal_t.pcbal003, 
   pcbal004 LIKE pcbal_t.pcbal004, 
   pcba002 LIKE pcba_t.pcba002, 
   pcba002_desc LIKE type_t.chr80, 
   pcba003 LIKE pcba_t.pcba003, 
   pcba004 LIKE pcba_t.pcba004, 
   pcba005 LIKE pcba_t.pcba005, 
   pcba005_desc LIKE type_t.chr80, 
   pcbaunit LIKE pcba_t.pcbaunit, 
   pcbaunit_desc LIKE type_t.chr80, 
   pcbastus LIKE pcba_t.pcbastus, 
   pcbaownid LIKE pcba_t.pcbaownid, 
   pcbaownid_desc LIKE type_t.chr80, 
   pcbaowndp LIKE pcba_t.pcbaowndp, 
   pcbaowndp_desc LIKE type_t.chr80, 
   pcbacrtid LIKE pcba_t.pcbacrtid, 
   pcbacrtid_desc LIKE type_t.chr80, 
   pcbacrtdt LIKE pcba_t.pcbacrtdt, 
   pcbacrtdp LIKE pcba_t.pcbacrtdp, 
   pcbacrtdp_desc LIKE type_t.chr80, 
   pcbamodid LIKE pcba_t.pcbamodid, 
   pcbamodid_desc LIKE type_t.chr80, 
   pcbamoddt LIKE pcba_t.pcbamoddt
                                  END RECORD
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
                                  
#模組變數(Module Variables)
DEFINE g_pcba_m          type_g_pcba_m
DEFINE g_pcba_m_t        type_g_pcba_m
DEFINE g_pcba_m_o        type_g_pcba_m
 
   DEFINE g_pcba001_t LIKE pcba_t.pcba001

 
#DEFINE g_pcba001_t        LIKE pcba_t.pcba001
DEFINE g_pcba002_t        LIKE pcba_t.pcba002
#該樣板不需此段落:DEFINE g__t      LIKE pcba_t.
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,    #外顯欄位
       b_pid           LIKE type_t.chr100,    #父節點id
       b_id            LIKE type_t.chr100,    #本身節點id
       b_exp           LIKE type_t.chr100,    #是否展開
       b_hasC          LIKE type_t.num5,      #是否有子節點
       b_isExp         LIKE type_t.num5,      #是否已展開
       b_expcode       LIKE type_t.num5,      #展開值
       #tree自定義欄位
          b_pcba003 LIKE pcba_t.pcba003,
      b_pcba004 LIKE pcba_t.pcba004,
      b_pcba005 LIKE pcba_t.pcba005,
   b_pcba005_desc LIKE type_t.chr80,
      b_pcba001 LIKE pcba_t.pcba001,
      b_pcba002 LIKE pcba_t.pcba002
                   END RECORD
 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER    #root資料所在
       
#多table用變數
DEFINE g_master_multi_table_t    RECORD
      pcbal001 LIKE pcbal_t.pcbal001,
      pcbal003 LIKE pcbal_t.pcbal003,
      pcbal004 LIKE pcbal_t.pcbal004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num10
DEFINE l_ac                  LIKE type_t.num10
DEFINE g_curr_diag           ui.Dialog                #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10         
DEFINE gwin_curr             ui.Window                #Current Window
DEFINE gfrm_curr             ui.Form                  #Current Form
DEFINE g_page_action         STRING                   #page action
DEFINE g_header_hidden       LIKE type_t.num5         #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5         #隱藏工作Panel
DEFINE g_browser_cnt         LIKE type_t.num10        #total count
DEFINE g_page                STRING                   #第幾頁
DEFINE g_current_row         LIKE type_t.num10        #Browser所在筆數
DEFINE g_current_sw          LIKE type_t.num10        #Browser所在筆數用開關
 
DEFINE g_searchcol           LIKE type_t.chr200
DEFINE g_searchstr           LIKE type_t.chr200
DEFINE g_searchtype          LIKE type_t.chr200
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_root_search         BOOLEAN
DEFINE g_first               LIKE type_t.num5  #標示是否要啟動s_browse重查
DEFINE g_aw                  STRING            #確定當下點擊的單身
DEFINE g_log1                STRING            #log用
DEFINE g_log2                STRING            #log用
DEFINE g_add_browse          STRING            #新增填充用WC
DEFINE g_add_idx             LIKE type_t.num5  #新增資料指標
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="apci210.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apc","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT pcba001,'','',pcba002,'',pcba003,pcba004,pcba005,'',pcbaunit,'',pcbastus,pcbaownid,'',pcbaowndp,'',pcbacrtid,'',pcbacrtdt,pcbacrtdp,'',pcbamodid,'',pcbamoddt", 
                      " FROM pcba_t",
                      " WHERE pcbaent= ? AND pcba001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apci210_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.pcba001,t0.pcba002,t0.pcba003,t0.pcba004,t0.pcba005,t0.pcbaunit,t0.pcbastus,t0.pcbaownid,t0.pcbaowndp,t0.pcbacrtid,t0.pcbacrtdt,t0.pcbacrtdp,t0.pcbamodid,t0.pcbamoddt,t1.pcbal003 ,t2.pcbal003 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011",
               " FROM pcba_t t0",
                              " LEFT JOIN pcbal_t t1 ON t1.pcbalent="||g_enterprise||" AND t1.pcbal001=pcba002 AND t1.pcbal002='"||g_dlang||"' ",
               " LEFT JOIN pcbal_t t2 ON t2.pcbalent="||g_enterprise||" AND t2.pcbal001=pcba005 AND t2.pcbal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=pcbaunit AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=pcbaownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=pcbaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=pcbacrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=pcbacrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=pcbamodid  ",

               " WHERE t0.pcbaent = " ||g_enterprise|| " AND t0.pcba001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apci210_master_referesh FROM g_sql
 
   #該樣板不需此段落#add-point:main段define_sql name="main.body.define_sql"
   #該樣板不需此段落{<point name="main.body.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = ""
   #該樣板不需此段落#add-point:main段define_sql name="main.body.after_define_sql"
   #該樣板不需此段落{<point name="main.body.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE apci210_bcl CURSOR FROM g_forupd_sql
    

   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apci210 WITH FORM cl_ap_formpath("apc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apci210_init()   
 
      #進入選單 Menu (="N")
      CALL apci210_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apci210
      
   END IF 
   
   CLOSE apci210_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN



{</section>}
 
{<section id="apci210.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apci210_init()
   #add-point:init段define name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
      CALL cl_set_combo_scc_part('pcbastus','17','N,Y')

   
   LET g_add_idx = 1
   LET g_current_idx = 1
    
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   CALL apci210_default_search()
    
END FUNCTION
{</section>}
 
{<section id="apci210.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apci210_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_exit      LIKE type_t.num5    #判別是否為離開作業
   DEFINE la_param  RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_pcba_m.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         LET g_first = 1
         CALL apci210_init()
      END IF
 
      #當瀏覽頁簽被設定關閉時,使用MENU (開啟時使用DIALOG)
      IF g_worksheet_hidden = 1 THEN
 
         LET g_current_sw = FALSE
 
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = g_current_row
         LET g_current_sw = TRUE
         CALL cl_show_fld_cont() 
         #該樣板不需此段落:IF g_current_idx > 0 THEN
         CALL apci210_fetch("")    #當每次點任一筆資料都會需要用到
         #該樣板不需此段落:END IF
 
         MENU
            #add-point:ui_dialog段其他頁簽的 display array(in menu) name="ui_dialog.more_displayarray_in_menu"
            {<point name="ui_dialog.more_displayarray_in_menu"/>}
            #end add-point
            
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL apci210_statechange()
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL apci210_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL apci210_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL apci210_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL apci210_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL apci210_fetch("") 
               LET g_current_row = g_current_idx
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
 
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
 
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION compute_pcbf
            LET g_action_choice="compute_pcbf"
            IF cl_auth_chk_act("compute_pcbf") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION compute_pcbf name="menu2.compute_pcbf"
               {<point name="menu2.compute_pcbf" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apci210_modify()
               #add-point:ON ACTION modify name="menu2.modify"
               {<point name="menu2.modify" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               #該樣板不需此段落
               CALL apci210_delete(DIALOG)
               #add-point:ON ACTION delete name="menu2.delete"
               {<point name="menu2.delete" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               #該樣板不需此段落
               CALL apci210_insert(DIALOG)
               #add-point:ON ACTION insert name="menu2.insert"
               {<point name="menu2.insert" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION output name="menu2.output"
               {<point name="menu2.output" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION quickprint name="menu2.quickprint"
               {<point name="menu2.quickprint" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               #該樣板不需此段落
               CALL apci210_reproduce(DIALOG)
               #add-point:ON ACTION reproduce name="menu2.reproduce"
               {<point name="menu2.reproduce" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               #該樣板不需此段落
               CALL apci210_query()
               #add-point:ON ACTION query name="menu2.query"
               {<point name="menu2.query" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



 
            
 
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL apci210_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.menu.related_document"
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apci210_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.menu.agendum"
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apci210_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.menu.followup"
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')



            
            &include "main_menu_exit_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
 
         END MENU
 
      ELSE
         #第一次進入程式, 或啟動重新查詢
         IF g_first = 0 THEN 
            CALL apci210_browser_fill(g_wc,g_searchtype)
            LET g_first = 1
         END IF
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
            INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype
               BEFORE INPUT
            END INPUT
            
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
 
               BEFORE DISPLAY
                  CALL DIALOG.setSelectionMode("s_browse",1) #設定為單選
 
               BEFORE ROW
                  #add-point:ui_dialog段before row1 name="ui_dialog.before_row1"
                  {<point name="ui_dialog.before_row1"/>}
                  #end add-point
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_row > 1 AND g_current_sw = FALSE THEN
                     CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                     LET g_current_idx = g_current_row
                  END IF
                  #add-point:ui_dialog段before row2 name="ui_dialog.before_row2"
                  {<point name="ui_dialog.before_row2"/>}
                  #end add-point
                  LET g_current_row = g_current_idx #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont() 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
 
                  CALL apci210_fetch("")  #當每次點任一筆資料都會需要用到
 
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL apci210_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
 
               ON COLLAPSE (g_row_index)
                  #樹關閉
                  
               #add-point:ui_dialog段action name="ui_dialog.tree_action"
               {<point name="ui_dialog.tree_action"/>}
               #end add-point
 
            END DISPLAY
 
            #add-point:ui_dialog段其他頁簽的 display array name="ui_dialog.more_displayarray"
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            BEFORE DIALOG
               #action default動作(判定是否要先執行特定動作)
               #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apci210_insert(DIALOG)
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF

      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE



               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_current_sw = FALSE
 
               #add-point:ui_dialog,before dialog1 name="ui_dialog.b_dialog1"
               {<point name="ui_dialog.b_dialog1"/>}
               #end add-point
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_sw = FALSE THEN
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               #add-point:ui_dialog,before dialog2 name="ui_dialog.b_dialog2"
               {<point name="ui_dialog.b_dialog2"/>}
               #end add-point
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               #該樣板不需此段落:IF g_current_idx > 0 THEN
               CALL apci210_fetch("")            #當每次點任一筆資料都會需要用到
               #該樣板不需此段落:END IF
               #add-point:ui_dialog,before dialog name="ui_dialog.b_dialog"
               {<point name="ui_dialog.b_dialog"/>}
               #end add-point
 
            AFTER DIALOG 
               #add-point:ui_dialog,after dialog name="ui_dialog.a_dialog"
               {<point name="ui_dialog.a_dialog"/>}
               #end add-point
 
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL apci210_statechange()
 
            #一般搜尋
            ON ACTION searchdata
               LET g_searchstr = GET_FLDBUF(searchstr)
               LET g_searchcol = GET_FLDBUF(cbo_searchcol)
               #若無輸入關鍵字則查找出所有資料
               IF g_searchcol="0" AND NOT cl_null(g_searchstr) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "searchcol:" 
                  LET g_errparam.code = "std-00001" 
                  LET g_errparam.popup = FALSE 
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF 
               IF NOT cl_null(g_searchstr) THEN
                  LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
                  LET g_wc = g_wc.toLowerCase()
               ELSE
                  LET g_wc = " 1=1 "
               END IF
               LET g_first = 0 #啟動重查
               EXIT DIALOG
 
            #進階搜尋
            #ON ACTION advancesearch
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/mainhidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION compute_pcbf
            LET g_action_choice="compute_pcbf"
            IF cl_auth_chk_act("compute_pcbf") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION compute_pcbf name="menu.compute_pcbf"
               {<point name="menu.compute_pcbf" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apci210_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               #該樣板不需此段落
               CALL apci210_delete(DIALOG)
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               #該樣板不需此段落
               CALL apci210_insert(DIALOG)
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               #該樣板不需此段落
               CALL apci210_reproduce(DIALOG)
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               #該樣板不需此段落
               CALL apci210_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



 
            
            
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL apci210_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apci210_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apci210_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')



            
            &include "main_menu_exit_dialog.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION 
{</section>}
 
{<section id="apci210.browser_fill" >}
#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION apci210_browser_fill(p_wc,p_type)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc       STRING 
   DEFINE p_type     LIKE type_t.chr10
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10   
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_fill"
   {<point name="browser_fill.before_fill"/>}
   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   LET l_cnt = 0
   LET l_cnt2 = 0
   
   DROP TABLE apci210_tmp
   
   #Create temp table
   CREATE TEMP TABLE apci210_tmp
   (
         pcba003 VARCHAR(500),
   pcba004 VARCHAR(500),
   pcba005 VARCHAR(500),
   pcba005_desc VARCHAR(500),
   pcba001 VARCHAR(500),
   pcba002 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   #先確定搜尋範圍(若無條件搜尋則只找root出來)
   SELECT COUNT(1) INTO l_cnt FROM pcba_t WHERE pcbaent = g_enterprise AND 1=1
   
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT COUNT(1)",
               " FROM pcba_t ",
               "  LEFT JOIN pcbal_t ON pcbalent = "||g_enterprise||" AND pcba001 = pcbal001 AND pcbal002 = '",g_dlang,"' ",
               " WHERE pcbaent = " ||g_enterprise|| " AND ",p_wc ,cl_sql_add_filter("pcba_t")
   #add-point:browser_fill段cnt wc name="browser_fill.cnt_wc"
   {<point name="browser_fill.cnt_wc"/>}
   #end add-point
              
   PREPARE master_cnt FROM g_sql
   DECLARE master_cntcur CURSOR FOR master_cnt
   OPEN master_cntcur
   IF SQLCA.SQLCODE THEN   #(ver:36)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN master_cntcur:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   FETCH master_cntcur INTO l_cnt2
   LET g_root_search = FALSE
   
   IF l_cnt2 = 0 THEN
      #INITIALIZE g_errparam TO NULL 
      #LET g_errparam.extend = "" 
      #LET g_errparam.code = "-100" 
      #LET g_errparam.popup = TRUE 
      #CALL cl_err()
      RETURN
   END IF
   
   IF l_cnt = l_cnt2 THEN
      #未輸入條件時則只查找root節點
      LET p_wc = " pcba001 = pcba002 "
      LET g_root_search = TRUE
   END IF
 
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT pcba003,pcba004,pcba005,'',pcba001,pcba002 ",
               " FROM pcba_t",
               "  LEFT JOIN pcbal_t ON pcbalent = "||g_enterprise||" AND pcba001 = pcbal001 AND pcbal002 = '",g_dlang,"' ",
               " WHERE pcbaent = " ||g_enterprise|| " AND ",p_wc ,cl_sql_add_filter("pcba_t")
   #add-point:browser_fill段sql wc name="browser_fill.sql_wc"
   {<point name="browser_fill.sql_wc"/>}
   #end add-point
   #LET g_sql = cl_sql_add_tabid(g_sql,"pcba_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
   
   #單筆update
   #LET g_sql = "SELECT '','','','','','','',pcba003,pcba004,pcba005,'',pcba001,pcba002 ",
   #            " FROM pcba_t",
   #            "  LEFT JOIN pcbal_t ON pcbalent = "||g_enterprise||" AND pcba001 = pcbal001 AND pcbal002 = '",g_dlang,"' ",
   #            " WHERE pcbaent = " ||g_enterprise|| " AND ",
   #            " pcba001 = ?"

                
   LET g_sql = " SELECT t0.pcba003,t0.pcba004,t0.pcba005,t0.pcba001,t0.pcba002,t1.pcbal003 ",
               " FROM pcba_t t0",
               "  ",
                              " LEFT JOIN pcbal_t t1 ON t1.pcbalent="||g_enterprise||" AND t1.pcbal001=pcba005 AND t1.pcbal002='"||g_dlang||"' ",

               " WHERE pcbaent = " ||g_enterprise|| " AND ",
               " pcba001 = ?"

 
               
   #add-point:browser_fill段sql wc name="browser_fill.refresh"
   {<point name="browser_fill.refresh"/>}
   #end add-point
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_refresh FROM g_sql
   DECLARE master_refreshcur CURSOR FOR master_refresh
 
   #搜尋建構樹所需的節點
   CASE p_type
      WHEN "1" #上推
         CALL apci210_match_node(p_wc,p_type) 
      WHEN "2" #下展
         #CALL apci210_find_speed_tbl(p_wc,p_type) 
         CALL apci210_match_node(p_wc,p_type) 
      WHEN "3" #全部
         CALL apci210_match_node(p_wc,p_type) 
   END CASE
 
   CALL apci210_browser_create(p_type)
     
END FUNCTION
{</section>}
 
{<section id="apci210.match_node" >}
PRIVATE FUNCTION apci210_match_node(p_wc,p_type)
   #add-point:match_node段define name="match_node.define_customerization"
   {<point name="match_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位
             pcba003 VARCHAR(500),
   pcba004 VARCHAR(500),
   pcba005 VARCHAR(500),
   pcba005_desc VARCHAR(500),
   pcba001 VARCHAR(500),
   pcba002 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
             pcba003 VARCHAR(500),
   pcba004 VARCHAR(500),
   pcba005 VARCHAR(500),
   pcba005_desc VARCHAR(500),
   pcba001 VARCHAR(500),
   pcba002 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD
   DEFINE li_cnt       LIKE type_t.num10   #(ver:35) add
   #add-point:match_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="match_node.define"
   {<point name="match_node.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="match_node.pre_function"
   {<point name="match_node.pre_function"/>}
   #end add-point
   
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0" #展開值0則無法展開
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null("pcba002") THEN
      LET ls_code = "0"
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO apci210_tmp (pcba003,pcba004,pcba005,pcba005_desc,pcba001,pcba002,exp_code) VALUES (?,?,?,?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end("Y","0")
      RETURN
   END IF
 
   #(ver:35) ---modify start---
   FOREACH master_extcur INTO l_bstmp.*
      #(ver:35) add pcba002
      IF apci210_tmp_tbl_chk(l_bstmp.pcba001,l_bstmp.pcba002,ls_code   #(ver:35) add pcba002
                  #該樣板不需此段落:,l_bstmp.
                  ) THEN
         EXECUTE master_tmp USING l_bstmp.*,ls_code
      END IF
 
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
   END FOREACH
 
   #找出符合條件的節點的所有祖先並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code2 = "1"
      WHEN 2
         LET ls_code2 = "-1"
      WHEN 3
         LET ls_code2 = "1"
   END CASE
 
   WHILE TRUE
      IF l_child_list.getLength() <= 0 THEN
         EXIT WHILE
      END IF
 
      #若pid欄位存在才進行後續處理
      #擷取該節點的所有父節點
      IF cl_null(l_child_list[1].pcba001) THEN
         IF l_child_list.getLength() = 1 THEN
            EXIT WHILE
         ELSE
            CALL l_child_list.deleteElement(1)
            CONTINUE WHILE
         END IF
      END IF
 
      #確認是否有父節點
      LET g_sql = " SELECT COUNT(1) ",
                  " FROM pcba_t t0",
                  " WHERE pcbaent = " ||g_enterprise|| " AND pcba001 = ? ",
                  #該樣板不需此段落:" AND  = ? ",
                  cl_sql_add_filter("gzwe_t")
      PREPARE master_getparent_cnt FROM g_sql
      EXECUTE master_getparent_cnt USING l_child_list[1].pcba002 INTO li_cnt
      IF li_cnt <= 0 THEN
         CALL l_child_list.deleteElement(1)
         CONTINUE WHILE
      END IF
 
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT pcba003,pcba004,pcba005,'',pcba001,pcba002 ",
                  " FROM pcba_t t0",
                  " WHERE pcbaent = " ||g_enterprise|| " AND pcba001 = ? ",
                  #該樣板不需此段落:" AND  = ? ",
                  cl_sql_add_filter("pcba_t")
      PREPARE master_getparent_up FROM g_sql
      DECLARE master_getparent_up_cur CURSOR FOR master_getparent_up
      
   #  EXECUTE master_getparent_up USING l_child_list[1].pcba002
   #                                    #該樣板不需此段落:,l_child_list[1].
   #                                    INTO l_bstmp.*
      FOREACH master_getparent_up_cur USING l_child_list[1].pcba002
                                        INTO l_bstmp.*
 
         IF SQLCA.SQLCODE THEN
            FREE master_getparent_up
            EXIT WHILE
         END IF
         #FREE master_getparent_up
      
         #確定該節點是否存在於temp table中
         IF STATUS = 0 AND apci210_tmp_tbl_chk(l_bstmp.pcba001,l_bstmp.pcba002,ls_code2
                     #該樣板不需此段落:,l_bstmp.
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
 
            #若已找到root，表示已到根結點
            IF l_bstmp.pcba001 = l_bstmp.pcba002 THEN
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
 
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
      END FOREACH
      CALL l_child_list.deleteElement(1)
   END WHILE
   #(ver:35) --- modify end ---
 
   CLOSE master_tmp
   
   CALL s_transaction_end("Y","0")
 
END FUNCTION
{</section>}
 
{<section id="apci210.tmp_tbl_chk" >}
#+ TEMP TABLE CHK
#PRIVATE FUNCTION apci210_tmp_tbl_chk(ps_id,pi_code)
PRIVATE FUNCTION apci210_tmp_tbl_chk(ps_id,ps_pid,pi_code)   #(ver:35) modify
   #add-point:tmp_tbl_chk段define name="tmp_tbl_chk.define_customerization"
   {<point name="tmp_tbl_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING   #(ver:35) add
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_pid      LIKE type_t.chr500   #(ver:35) add
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10   
   #add-point:tmp_tbl_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="tmp_tbl_chk.define"
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="tmp_tbl_chk.pre_function"
   {<point name="tmp_tbl_chk.pre_function"/>}
   #end add-point
   
   LET ls_id = ps_id
   LET ls_pid = ps_pid   #(ver:35) add
   #該樣板不需此段落:LET ls_type = ps_type
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(1) FROM apci210_tmp ", 
               " WHERE pcba001 = ? ",
                 " AND pcba002 = ? "   #(ver:35) add
               #該樣板不需此段落: ," AND  = ? "
 
   PREPARE apci210_get_cnt FROM g_sql
   EXECUTE apci210_get_cnt USING ls_id ,ls_pid   #(ver:35) add ls_pid
                                           #該樣板不需此段落:,ls_type
                                     INTO li_cnt
   FREE apci210_get_cnt
 
   IF li_cnt = 0 OR SQLCA.SQLCODE THEN
      RETURN TRUE
   ELSE
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM apci210_tmp ",
                  " WHERE pcba001 = ? ",
                    " AND pcba002 = ? "   #(ver:35) add
                  #該樣板不需此段落: ," AND  = ? "
 
      PREPARE apci210_chk_exp FROM g_sql
      EXECUTE apci210_chk_exp USING ls_id ,ls_pid   #(ver;35) add ls_pid
                                              #該樣板不需此段落:,ls_type
                                        INTO li_code
      FREE apci210_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE apci210_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE pcba001 = ? ",
                       " AND pcba002 = ? "   #(ver:35) add
                     #該樣板不需此段落: ," AND  = ? "
         PREPARE apci210_upd_exp FROM g_sql
         EXECUTE apci210_upd_exp USING ls_id ,ls_pid   #(ver:35) add ls_pid
                                                 #該樣板不需此段落:,ls_type
         FREE apci210_upd_exp
      END IF
      
      RETURN FALSE
   END IF
 
END FUNCTION
{</section>}
 
{<section id="apci210.browser_expand" >}
#+ Tree子節點展開
PRIVATE FUNCTION apci210_browser_expand(p_id)
   #add-point:browser_expand段define name="browser_expand.define_customerization"
   {<point name="browser_expand.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         STRING
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   DEFINE ls_ent_wc     LIKE type_t.chr500
   #add-point:browser_expand段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_expand.define"
   {<point name="browser_expand.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_expand.pre_function"
   {<point name="browser_expand.pre_function"/>}
   #end add-point
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_pcba001
   #該樣板不需此段落:LET l_typevalue = g_browser[p_id].b_
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "apci210_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "pcba_t"
         LET ls_exp_code = "'2'"
         LET ls_ent_wc = " pcbaent = " ||g_enterprise|| " AND "
   END CASE
    
   LET l_sql = " SELECT DISTINCT '','','','FALSE','','',",ls_exp_code,",pcba003,pcba004,pcba005,'',pcba001,pcba002,t1.pcbal003 ",
               " FROM ",ls_source,
                              " LEFT JOIN pcbal_t t1 ON t1.pcbalent="||g_enterprise||" AND t1.pcbal001=pcba005 AND t1.pcbal002='"||g_dlang||"' ",

               " WHERE ",ls_ent_wc,"pcba002 = '", l_keyvalue,
               "' AND pcba001 <> pcba002",
               #該樣板不需此段落:" AND  = '", l_typevalue,"'", 
               " ORDER BY pcba001"
   
   #add-point:browser_expand段before_pre name="browser_expand.before_pre"
   {<point name="browser_expand.before_pre"/>}
   #end add-point
   
   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].*,g_browser[g_cnt].b_pcba005_desc 
      #pid=父節點id
      LET g_browser[l_id].b_pid = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      CALL apci210_desc_show(l_id)
      LET g_browser[l_id].b_hasC = apci210_chk_hasC(l_id)
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
END FUNCTION
{</section>}
 
{<section id="apci210.browser_create" >}
PRIVATE FUNCTION apci210_browser_create(p_type)
   #add-point:browser_create name="browser_create.define_customerization"
   {<point name="browser_create.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_create.define"
   {<point name="browser_create.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_create.pre_function"
   {<point name="browser_create.pre_function"/>}
   #end add-point
   
   #先找出所有的帳別資料
   #該樣板不需此段落:LET g_sql = " SELECT DISTINCT  FROM apci210_tmp ORDER BY "
   #該樣板不需此段落:PREPARE master_type FROM g_sql
   #該樣板不需此段落:DECLARE master_typecur CURSOR FOR master_type
   #該樣板不需此段落:INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   #該樣板不需此段落:FOREACH master_typecur INTO g_browser[l_ac].b_
      #確定root節點所在
      #該樣板不需此段落:LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      #該樣板不需此段落:LET g_browser[l_ac].b_pcba001  = g_browser[l_ac].b_
      #該樣板不需此段落:LET g_browser[l_ac].b_ = g_browser[l_ac].b_
      #該樣板不需此段落:LET g_browser[l_ac].b_pid = "0" CLIPPED
      #該樣板不需此段落:LET g_browser[l_ac].b_id = l_ac USING "<<<"
      #該樣板不需此段落:LET g_browser[l_ac].b_exp = TRUE
      #該樣板不需此段落:LET g_browser[l_ac].b_hasC = TRUE
      #該樣板不需此段落:LET l_pid = g_browser[l_ac].b_id CLIPPED
      #該樣板不需此段落:LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      #LET g_sql = " SELECT DISTINCT t0.pcba003,t0.pcba004,t0.pcba005,t0.pcba001,t0.pcba002,exp_code FROM apci210_tmp a ",
      LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,pcba003,pcba004,pcba005,'',pcba001,pcba002,t1.pcbal003 FROM apci210_tmp a ",
                                 " LEFT JOIN pcbal_t t1 ON t1.pcbalent="||g_enterprise||" AND t1.pcbal001=pcba005 AND t1.pcbal002='"||g_dlang||"' ",

                  " WHERE ",
                  #該樣板不需此段落:"a. = ? ",
                  #該樣板不需此段落:" AND ",
                  " (( SELECT COUNT(1) FROM apci210_tmp b WHERE a.pcba002 = b.pcba001 ", 
                  #該樣板不需此段落:" AND a. = b.",
                  ") = 0 OR ", 
                  " a.pcba001 = a.pcba002 )", 
                  " ORDER BY a.pcba001"
      #add-point:browser_create.before_pre name="browser_create.before_pre"
      {<point name="browser_create.before_pre"/>}
      #end add-point
 
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      #該樣板不需此段落:#OPEN master_getLV2cur USING g_browser[l_ac-1].b_   #(ver:36)
 
      LET g_cnt = l_ac
      FOREACH master_getLV2cur   #(ver:36) #(ver:37)
         #該樣板不需此段落:USING g_browser[l_ac-1].b_   #(ver:36)
         INTO g_browser[g_cnt].*,g_browser[g_cnt].b_pcba005_desc    #(ver:36)
         #(ver:36) ---add start---
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "Browser Create FOREACH ERROR"
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.popup = TRUE
            CALL cl_err()
            RETURN
         END IF
         #(ver:36) --- add end ---
 
         #去除多餘空白
         #LET g_browser[g_cnt].b_pcba001 = g_browser[g_cnt].b_pcba001 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id  = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         #(ver:35) ---modify start---
         #LET g_browser[g_cnt].b_expcode = 2
         CASE g_browser[g_cnt].b_expcode
            WHEN 2
               LET g_browser[g_cnt].b_hasC = apci210_chk_hasC(g_cnt)
            WHEN 1
               LET g_browser[g_cnt].b_hasC = apci210_chk_hasC(g_cnt)
            WHEN 0
               LET g_browser[g_cnt].b_hasC = FALSE
            WHEN -1
               #向下查找到展開值不等於-1得節點(temp table中查找)
               LET g_cnt = apci210_find_node(g_cnt)
         END CASE
         #(ver:35) --- modify end ---
         IF cl_null("pcba002") THEN
            LET g_browser[g_cnt].b_hasC = FALSE
         ELSE
            LET g_browser[g_cnt].b_hasC = TRUE
         END IF
 
         LET g_cnt = g_cnt + 1
      END FOREACH
      LET l_ac = g_browser.getLength()
 
   #該樣板不需此段落:END FOREACH
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_pcba001) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL apci210_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
 
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
 
   FREE tree_expand
   FREE master_getLV2
   
END FUNCTION
{</section>}
 
{<section id="apci210.desc_show" >}
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION apci210_desc_show(pi_ac)
   #add-point:desc_show段define name="desc_show.define_customerization"
   {<point name="desc_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10   
   #add-point:desc_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="desc_show.define"
   {<point name="desc_show.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="desc_show.pre_function"
   {<point name="desc_show.pre_function"/>}
   #end add-point
   
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理 name="desc_show.show"
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
 
END FUNCTION
{</section>}
 
{<section id="apci210.find_node" >}
#+ 尋找符合條件的節點
PRIVATE FUNCTION apci210_find_node(pi_ac)
   #add-point:find_node段define name="find_node.define_customerization"
   {<point name="find_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   DEFINE ls_pid  STRING
   #add-point:find_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="find_node.define"
   {<point name="find_node.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="find_node.pre_function"
   {<point name="find_node.pre_function"/>}
   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,pcba003,pcba004,pcba005,'',pcba001,pcba002 ",
               " FROM apci210_tmp ",
               " WHERE pcba002 = ? AND pcba002 <> pcba001",
               " ORDER BY pcba001"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
      #  OPEN master_getNodecur USING g_browser[li_idx].b_pcba001   #(ver:36)
         FOREACH master_getNodecur USING g_browser[li_idx].b_pcba001 INTO g_browser[g_browser.getLength()+1].*   #(ver:36)
 
            #(ver:36) ---start---
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH ",SQLERRMESSAGE
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               RETURN
            END IF
            #(ver:36) --- end ---
            CALL apci210_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = apci210_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION
{</section>}
 
{<section id="apci210.chk_hasC" >}
#+ QBE資料查詢
PRIVATE FUNCTION apci210_chk_hasC(pi_id)
   #add-point:chk_hasC段define name="chk_hasC.define_customerization"
   {<point name="chk_hasC.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_id    LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:chk_hasC段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="chk_hasC.define"
   {<point name="chk_hasC.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="chk_hasC.pre_function"
   {<point name="chk_hasC.pre_function"/>}
   #end add-point
   
   LET g_sql = "SELECT COUNT(pcba002) FROM apci210_tmp ",
               " WHERE ",
                "pcba002 = ? AND ",
                "exp_code <> '-1' AND pcba001 <> pcba002 "
                #該樣板不需此段落: ," AND ",
                #該樣板不需此段落:" = ?"
 
   PREPARE apci210_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(1) FROM pcba_t ",
               " WHERE pcbaent = " ||g_enterprise|| " AND ", 
               "pcba001 <> pcba002 AND ",
               "pcba002 = ? ",
               #該樣板不需此段落: " AND ",
               #該樣板不需此段落:" = ?",
               cl_sql_add_filter("pcba_t")
   
   PREPARE apci210_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE apci210_temp_chk 
           USING g_browser[pi_id].b_pcba001
                 #該樣板不需此段落:,g_browser[pi_id].b_
            INTO li_cnt
         FREE apci210_temp_chk
      WHEN 2 
         EXECUTE apci210_master_chk 
           USING g_browser[pi_id].b_pcba001
                 #該樣板不需此段落:,g_browser[pi_id].b_
            INTO li_cnt
         FREE apci210_master_chk
   END CASE
    
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
{</section>}
 
{<section id="apci210.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION apci210_construct()
   #add-point:cs段define name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
   
   #清除畫面
   CLEAR FORM
   INITIALIZE g_pcba_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_qryparam.state = "c"
    
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      CONSTRUCT BY NAME g_wc ON pcba001,pcbal003,pcbal004,pcba002,pcba003,pcba004,pcba005,pcbaunit,pcbastus,pcbaownid,pcbaowndp,pcbacrtid,pcbacrtdt,pcbacrtdp,pcbamodid,pcbamoddt 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.before_construct"
            {<point name="cs.before_construct"/>}
            #end add-point 
            
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<pcbacrtdt>>----
         AFTER FIELD pcbacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<pcbamoddt>>----
         AFTER FIELD pcbamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pcbacnfdt>>----
         #該樣板不需此段落AFTER FIELD pcbacnfdt
         #該樣板不需此段落   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #該樣板不需此段落   IF NOT cl_null(ls_result) THEN
         #該樣板不需此段落      IF NOT cl_chk_date_symbol(ls_result) THEN
         #該樣板不需此段落         LET ls_result = cl_add_date_extra_cond(ls_result)
         #該樣板不需此段落      END IF
         #該樣板不需此段落   END IF
         #該樣板不需此段落   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pcbapstdt>>----
         #該樣板不需此段落AFTER FIELD pcbapstdt
         #該樣板不需此段落   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #該樣板不需此段落   IF NOT cl_null(ls_result) THEN
         #該樣板不需此段落      IF NOT cl_chk_date_symbol(ls_result) THEN
         #該樣板不需此段落         LET ls_result = cl_add_date_extra_cond(ls_result)
         #該樣板不需此段落      END IF
         #該樣板不需此段落   END IF
         #該樣板不需此段落   CALL FGL_DIALOG_SETBUFFER(ls_result)



 
                  #Ctrlp:construct.c.pcba001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba001
            #add-point:ON ACTION controlp INFIELD pcba001 name="construct.c.pcba001"
            {<point name="construct.c.pcba001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba001
            #add-point:BEFORE FIELD pcba001 name="construct.b.pcba001"
            {<point name="construct.b.pcba001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba001
            
            #add-point:AFTER FIELD pcba001 name="construct.a.pcba001"
            {<point name="construct.a.pcba001" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbal003
            #add-point:BEFORE FIELD pcbal003 name="construct.b.pcbal003"
            {<point name="construct.b.pcbal003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbal003
            
            #add-point:AFTER FIELD pcbal003 name="construct.a.pcbal003"
            {<point name="construct.a.pcbal003" />}
            #END add-point
            


         #Ctrlp:construct.c.pcbal003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbal003
            #add-point:ON ACTION controlp INFIELD pcbal003 name="construct.c.pcbal003"
            {<point name="construct.c.pcbal003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbal004
            #add-point:BEFORE FIELD pcbal004 name="construct.b.pcbal004"
            {<point name="construct.b.pcbal004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbal004
            
            #add-point:AFTER FIELD pcbal004 name="construct.a.pcbal004"
            {<point name="construct.a.pcbal004" />}
            #END add-point
            


         #Ctrlp:construct.c.pcbal004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbal004
            #add-point:ON ACTION controlp INFIELD pcbal004 name="construct.c.pcbal004"
            {<point name="construct.c.pcbal004" />}
            #END add-point


         #Ctrlp:construct.c.pcba002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba002
            #add-point:ON ACTION controlp INFIELD pcba002 name="construct.c.pcba002"
            {<point name="construct.c.pcba002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba002
            #add-point:BEFORE FIELD pcba002 name="construct.b.pcba002"
            {<point name="construct.b.pcba002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba002
            
            #add-point:AFTER FIELD pcba002 name="construct.a.pcba002"
            {<point name="construct.a.pcba002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba003
            #add-point:BEFORE FIELD pcba003 name="construct.b.pcba003"
            {<point name="construct.b.pcba003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba003
            
            #add-point:AFTER FIELD pcba003 name="construct.a.pcba003"
            {<point name="construct.a.pcba003" />}
            #END add-point
            


         #Ctrlp:construct.c.pcba003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba003
            #add-point:ON ACTION controlp INFIELD pcba003 name="construct.c.pcba003"
            {<point name="construct.c.pcba003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba004
            #add-point:BEFORE FIELD pcba004 name="construct.b.pcba004"
            {<point name="construct.b.pcba004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba004
            
            #add-point:AFTER FIELD pcba004 name="construct.a.pcba004"
            {<point name="construct.a.pcba004" />}
            #END add-point
            


         #Ctrlp:construct.c.pcba004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba004
            #add-point:ON ACTION controlp INFIELD pcba004 name="construct.c.pcba004"
            {<point name="construct.c.pcba004" />}
            #END add-point


         #Ctrlp:construct.c.pcba005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba005
            #add-point:ON ACTION controlp INFIELD pcba005 name="construct.c.pcba005"
            {<point name="construct.c.pcba005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba005
            #add-point:BEFORE FIELD pcba005 name="construct.b.pcba005"
            {<point name="construct.b.pcba005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba005
            
            #add-point:AFTER FIELD pcba005 name="construct.a.pcba005"
            {<point name="construct.a.pcba005" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbaunit
            #add-point:BEFORE FIELD pcbaunit name="construct.b.pcbaunit"
            {<point name="construct.b.pcbaunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbaunit
            
            #add-point:AFTER FIELD pcbaunit name="construct.a.pcbaunit"
            {<point name="construct.a.pcbaunit" />}
            #END add-point
            


         #Ctrlp:construct.c.pcbaunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbaunit
            #add-point:ON ACTION controlp INFIELD pcbaunit name="construct.c.pcbaunit"
            {<point name="construct.c.pcbaunit" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbastus
            #add-point:BEFORE FIELD pcbastus name="construct.b.pcbastus"
            {<point name="construct.b.pcbastus" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbastus
            
            #add-point:AFTER FIELD pcbastus name="construct.a.pcbastus"
            {<point name="construct.a.pcbastus" />}
            #END add-point
            


         #Ctrlp:construct.c.pcbastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbastus
            #add-point:ON ACTION controlp INFIELD pcbastus name="construct.c.pcbastus"
            {<point name="construct.c.pcbastus" />}
            #END add-point


         #Ctrlp:construct.c.pcbaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbaownid
            #add-point:ON ACTION controlp INFIELD pcbaownid name="construct.c.pcbaownid"
            {<point name="construct.c.pcbaownid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbaownid
            #add-point:BEFORE FIELD pcbaownid name="construct.b.pcbaownid"
            {<point name="construct.b.pcbaownid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbaownid
            
            #add-point:AFTER FIELD pcbaownid name="construct.a.pcbaownid"
            {<point name="construct.a.pcbaownid" />}
            #END add-point
            


         #Ctrlp:construct.c.pcbaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbaowndp
            #add-point:ON ACTION controlp INFIELD pcbaowndp name="construct.c.pcbaowndp"
            {<point name="construct.c.pcbaowndp" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbaowndp
            #add-point:BEFORE FIELD pcbaowndp name="construct.b.pcbaowndp"
            {<point name="construct.b.pcbaowndp" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbaowndp
            
            #add-point:AFTER FIELD pcbaowndp name="construct.a.pcbaowndp"
            {<point name="construct.a.pcbaowndp" />}
            #END add-point
            


         #Ctrlp:construct.c.pcbacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbacrtid
            #add-point:ON ACTION controlp INFIELD pcbacrtid name="construct.c.pcbacrtid"
            {<point name="construct.c.pcbacrtid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbacrtid
            #add-point:BEFORE FIELD pcbacrtid name="construct.b.pcbacrtid"
            {<point name="construct.b.pcbacrtid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbacrtid
            
            #add-point:AFTER FIELD pcbacrtid name="construct.a.pcbacrtid"
            {<point name="construct.a.pcbacrtid" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbacrtdt
            #add-point:BEFORE FIELD pcbacrtdt name="construct.b.pcbacrtdt"
            {<point name="construct.b.pcbacrtdt" />}
            #END add-point


         #Ctrlp:construct.c.pcbacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbacrtdp
            #add-point:ON ACTION controlp INFIELD pcbacrtdp name="construct.c.pcbacrtdp"
            {<point name="construct.c.pcbacrtdp" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbacrtdp
            #add-point:BEFORE FIELD pcbacrtdp name="construct.b.pcbacrtdp"
            {<point name="construct.b.pcbacrtdp" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbacrtdp
            
            #add-point:AFTER FIELD pcbacrtdp name="construct.a.pcbacrtdp"
            {<point name="construct.a.pcbacrtdp" />}
            #END add-point
            


         #Ctrlp:construct.c.pcbamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbamodid
            #add-point:ON ACTION controlp INFIELD pcbamodid name="construct.c.pcbamodid"
            {<point name="construct.c.pcbamodid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbamodid
            #add-point:BEFORE FIELD pcbamodid name="construct.b.pcbamodid"
            {<point name="construct.b.pcbamodid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbamodid
            
            #add-point:AFTER FIELD pcbamodid name="construct.a.pcbamodid"
            {<point name="construct.a.pcbamodid" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbamoddt
            #add-point:BEFORE FIELD pcbamoddt name="construct.b.pcbamoddt"
            {<point name="construct.b.pcbamoddt" />}
            #END add-point



       
      END CONSTRUCT
  
      #add-point:cs段more_construct name="cs.more_construct"
      {<point name="cs.more_construct"/>}
      #end add-point
         
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段before dialog name="cs.before_dialog"
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
      
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG
 
   END DIALOG
 
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
{</section>}
 
{<section id="apci210.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apci210_query()
   #add-point:query段define name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="query.before_query"
   {<point name="query.before_query"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
 
   #CLEAR FORM
   #CALL g_browser.clear()
 
   DISPLAY " " TO FORMONLY.h_count
 
   CALL apci210_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      #add-point:query段取消 name="query.cancel"
      {<point name="query.cancel"/>}
      #end add-point
      #CALL apci210_browser_fill(g_wc,g_searchtype)
      CALL apci210_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_browser_cnt = 0
      LET g_current_idx = 1
      CALL g_browser.clear()
      LET g_first = 0  #設定重新查詢資料後顯示
   END IF
 
   LET g_searchtype = "3"
   LET g_searchcol = "0"
   CALL apci210_browser_fill(g_wc,g_searchtype)
   
   IF g_browser_cnt > 0 THEN
      CALL apci210_fetch("")
   ELSE
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #第一層模糊搜尋
   #IF g_browser_cnt = 0 THEN
   #   LET g_wc = cl_wc_parser(g_wc)
   #   CALL apci210_browser_fill(g_wc,g_searchtype)
   #END IF
   
   #第二層速記碼搜尋
   #IF g_browser_cnt = 0 THEN
   #   INITIALIZE g_errparam TO NULL 
   #   LET g_errparam.extend = "" 
   #   LET g_errparam.code = "-100" 
   #   LET g_errparam.popup = TRUE 
   #   CALL cl_err()
   #END IF
 
END FUNCTION
{</section>}
 
{<section id="apci210.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apci210_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="fetch.befroe_fetch"
   {<point name="fetch.befroe_fetch"/>}
   #end add-point 
 
   #該樣板不需此段落:LET ls_chk = g_browser[g_current_idx].b_id 
   #該樣板不需此段落:IF ls_chk.getIndexOf(".",1) = 0 THEN
   #該樣板不需此段落:   INITIALIZE g_pcba_m.* TO NULL
   #該樣板不需此段落:   DISPLAY BY NAME g_pcba_m.*
   #該樣板不需此段落:   CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ##該樣板不需此段落:   DISPLAY "" TO FORMONLY.h_index
   #該樣板不需此段落:   RETURN
   #該樣板不需此段落:END IF
 
   #瀏覽頁筆數顯示
   LET li_idx = 1
   FOR li_idx = 1 TO g_browser_root.getLength()
      IF g_browser_root[li_idx] > g_current_idx THEN
       EXIT FOR
      END IF
   END FOR
   LET li_idx = g_current_idx - li_idx + 1
   #DISPLAY li_idx TO FORMONLY.h_index   #當下筆數
 
   IF p_flag = "/" THEN
      IF (NOT g_no_ask) THEN      
         CALL cl_getmsg("fetch",g_lang) RETURNING ls_msg
         LET INT_FLAG = 0
 
         PROMPT ls_msg CLIPPED,": " FOR g_jump
            #交談指令共用ACTION
            &include "common_action.4gl" 
         END PROMPT
 
         IF INT_FLAG THEN
            LET INT_FLAG = 0
         ELSE
            IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
               LET g_current_idx = g_jump
            END IF
            LET g_no_ask = FALSE  
         END IF           
      END IF
   END IF    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_pcba_m.pcba001 = g_browser[g_current_idx].b_pcba001
   LET g_pcba_m.pcba002 = g_browser[g_current_idx].b_pcba002
   #該樣板不需此段落:LET  = g_browser[g_current_idx].b_
    
   #add-point:fetch段refresh前 name="fetch.before_refresh"
   {<point name="fetch.before_refresh"/>}
   #end add-point
    
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apci210_master_referesh USING g_pcba_m.pcba001 INTO g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt,g_pcba_m.pcba002_desc,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid_desc 
   
   IF SQLCA.SQLCODE THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = "pcba_t:",SQLERRMESSAGE 
       LET g_errparam.code = SQLCA.SQLCODE 
       LET g_errparam.popup = TRUE 
       CALL cl_err()
       INITIALIZE g_pcba_m.* TO NULL
       RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser.getLength() = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段after_fetch name="fetch.after_fetch"
   {<point name="fetch.after_fetch"/>}
   #end add-point
 
   
   
   #保存單頭舊值
   LET g_pcba_m_t.* = g_pcba_m.*
   LET g_pcba_m_o.* = g_pcba_m.*
   
   #重新顯示
   CALL apci210_show()
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
   
   
END FUNCTION
{</section>}
 
{<section id="apci210.insert" >}
#+ 資料新增
PRIVATE FUNCTION apci210_insert(l_dialog)
   #add-point:insert段define name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_dialog   ui.DIALOG
   DEFINE li_addpos  LIKE type_t.num10 #新增節點時產出的畫面實際位置
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   LET g_pcba001_t = g_pcba_m.pcba001

   LET g_pcba001_t = g_pcba_m.pcba001
   #該樣板不需此段落:LET g__t = 
 
   #清畫面欄位內容
   CLEAR g_pcba_m.*
 
 
   #add-point:單頭預設值 name="insert.before_insert"
   {<point name="insert.before_insert"/>}
   #end add-point 
 
   INITIALIZE g_pcba_m.* LIKE pcba_t.*
   DISPLAY BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
   CALL s_transaction_begin()
 
   #其他table資料備份(確定是否更改用)
   LET g_master_multi_table_t.pcbal001 = g_pcba_m.pcba001
LET g_master_multi_table_t.pcbal003 = g_pcba_m.pcbal003
LET g_master_multi_table_t.pcbal004 = g_pcba_m.pcbal004

 
   WHILE TRUE
      #給予pid,type預設值
      LET g_pcba_m.pcba002 = g_pcba001_t
      #該樣板不需此段落:LET  = g__t
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_pcba_m.pcbaownid = g_user
      LET g_pcba_m.pcbaowndp = g_dept
      LET g_pcba_m.pcbacrtid = g_user
      LET g_pcba_m.pcbacrtdp = g_dept 
      LET g_pcba_m.pcbacrtdt = cl_get_current()
      LET g_pcba_m.pcbamodid = g_user
      LET g_pcba_m.pcbamoddt = cl_get_current()
      LET g_pcba_m.pcbastus = 'Y'



      
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
      
      #單頭預設值
            LET g_pcba_m.pcba004 = "0"
      LET g_pcba_m.pcbastus = "Y"

     
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL apci210_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pcba_m.* = g_pcba_m_t.*
         CALL apci210_show()
         INITIALIZE g_errparam TO NULL
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         EXIT WHILE
      ELSE
         #分兩種狀況-1.根節點, 2.非根節點
         IF g_pcba_m.pcba002 = g_pcba_m.pcba001 THEN
            #為根節點
            LET li_addpos = g_browser.getLength() + 1
            LET g_browser[li_addpos].b_pcba002 = g_pcba_m.pcba002
            LET g_browser[li_addpos].b_pcba001 = g_pcba_m.pcba001
            LET g_browser[li_addpos].b_exp  = FALSE
            LET g_browser[li_addpos].b_hasC = FALSE
            LET g_browser[li_addpos].b_id  = '0.add',g_add_idx USING "<<<"
            LET g_browser[li_addpos].b_pid = '0',g_add_idx USING "<<<"
            LET g_add_idx = g_add_idx + 1
            CALL apci210_desc_show(li_addpos)
            LET g_current_idx = li_addpos
         ELSE
            #非根節點, 開始搜尋其父節點(已展開才做處理)
            LET li_cnt = g_cnt
            IF g_browser.getLength() > 0 THEN
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_pcba001 = g_pcba_m.pcba002 THEN
                     LET li_addpos = l_dialog.appendNode("s_browse",li_idx)
                     LET g_cnt = li_addpos
                     LET g_browser[li_addpos].b_pcba002 = g_pcba_m.pcba002
                     LET g_browser[li_addpos].b_pcba001 = g_pcba_m.pcba001
                     EXECUTE master_refreshcur USING g_browser[li_addpos].b_pcba001

                                                INTO g_browser[g_cnt].b_pcba003,g_browser[g_cnt].b_pcba004,g_browser[g_cnt].b_pcba005,g_browser[g_cnt].b_pcba001,g_browser[g_cnt].b_pcba002,g_browser[g_cnt].b_pcba005_desc
                     LET g_browser[li_addpos].b_exp  = FALSE
                     LET g_browser[li_addpos].b_hasC = FALSE
                     LET g_browser[li_addpos].b_id  = g_browser[li_idx].b_id, '.add',g_add_idx USING "<<<"
                     LET g_browser[li_addpos].b_pid = g_browser[li_idx].b_id
                     LET g_add_idx = g_add_idx + 1
                     CALL apci210_desc_show(li_addpos)
                     #打開父節點
                     LET g_browser[li_idx].b_hasC = TRUE
                     LET g_browser[li_idx].b_exp = TRUE
                     LET g_current_idx = li_addpos
                     EXIT FOR
                  END IF
               END FOR
            END IF
            LET g_cnt = li_cnt
         END IF
      END IF
      
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE apci210_master_referesh USING g_pcba_m.pcba001 INTO g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt,g_pcba_m.pcba002_desc,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid_desc
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
   
   #功能已完成,通報訊息中心
   CALL apci210_msgcentre_notify('insert')
   
END FUNCTION
{</section>}
 
{<section id="apci210.modify" >}
#+ 資料修改
PRIVATE FUNCTION apci210_modify()
   #add-point:modify段define name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   IF g_pcba_m.pcba001 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF 
   
   EXECUTE apci210_master_referesh USING g_pcba_m.pcba001 INTO g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt,g_pcba_m.pcba002_desc,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid_desc
 
   #檢查是否允許此動作
   IF NOT apci210_action_chk() THEN
      RETURN
   END IF
  
   LET g_pcba001_t = g_pcba_m.pcba001

   
   CALL s_transaction_begin()
   
   OPEN apci210_cl USING g_enterprise,g_pcba_m.pcba001
   IF SQLCA.SQLCODE THEN   #(ver:36)
      CLOSE apci210_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apci210_cl:" 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH apci210_cl INTO g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.SQLCODE THEN
      CLOSE apci210_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_pcba_m.pcba001,":",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   #其他table資料備份(確定是否更改用)
   LET g_master_multi_table_t.pcbal001 = g_pcba_m.pcba001
LET g_master_multi_table_t.pcbal003 = g_pcba_m.pcbal003
LET g_master_multi_table_t.pcbal004 = g_pcba_m.pcbal004

 
   CALL apci210_show()
   WHILE TRUE
      LET g_pcba_m.pcba001 = g_pcba001_t

      
      #寫入修改者/修改日期資訊
      LET g_pcba_m.pcbamodid = g_user 
LET g_pcba_m.pcbamoddt = cl_get_current()
LET g_pcba_m.pcbamodid_desc = cl_get_username(g_pcba_m.pcbamodid)
 
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL apci210_input("u")     #欄位更改
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pcba_m.* = g_pcba_m_t.*
         CALL apci210_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE pcba_t SET (pcbamodid,pcbamoddt) = (g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt)
       WHERE pcbaent = g_enterprise AND pcba001 = g_pcba001_t

      
      EXIT WHILE
  
   END WHILE
 
   CLOSE apci210_cl
   CALL s_transaction_end("Y","0")
 
   #功能已完成,通報訊息中心
   CALL apci210_msgcentre_notify('modify')
   
END FUNCTION
{</section>}
 
{<section id="apci210.check" >}
#+ 避免資料錯誤
PRIVATE FUNCTION apci210_check(ps_id,ps_pid)
   #add-point:check段define name="check.define_customerization"
   {<point name="check.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING
   DEFINE ps_type     STRING
   DEFINE ls_pid      LIKE type_t.chr100
   DEFINE ls_id       LIKE type_t.chr100
   DEFINE ls_type     LIKE type_t.chr100
   DEFINE ls_return   LIKE type_t.num5
   DEFINE ls_sql      STRING
   DEFINE li_cnt      LIKE type_t.num10
   #add-point:check段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="check.define"
   {<point name="check.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="check.pre_function"
   {<point name="check.pre_function"/>}
   #end add-point
   
   #從該節點往上檢查, 若出現ID重複的狀況代表會導致無限迴圈
   LET ls_sql = " SELECT pcba001,pcba002 FROM ",
                " (SELECT pcba001,pcba002 FROM pcba_t WHERE pcbaent = " ||g_enterprise|| " AND pcba001<>pcba002)",
                " WHERE pcba001 = '",ps_id,"' OR pcba002 = '",ps_id,"'",
                " START WITH pcba001='",ps_pid,"'",
                " CONNECT BY PRIOR pcba002=pcba001 "
 
   PREPARE check_cnt FROM ls_sql
   DECLARE check_cntcur CURSOR FOR check_cnt
   OPEN check_cntcur
   IF SQLCA.SQLCODE THEN   #(ver:36)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN check_cntcur:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN FALSE
   END IF
 
   FETCH check_cntcur INTO li_cnt
 
   IF li_cnt > 0 THEN
      LET ls_return = TRUE
   ELSE
      LET ls_return = FALSE
   END IF
   
   RETURN ls_return 
   
END FUNCTION
{</section>}
 
{<section id="apci210.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION apci210_reproduce(l_dialog)
   #add-point:reproduce段define name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_dialog      ui.DIALOG
   DEFINE li_addpos     LIKE type_t.num10
   DEFINE l_newno           LIKE pcba_t.pcba001 
   DEFINE l_oldno           LIKE pcba_t.pcba001 

   DEFINE l_master          RECORD LIKE pcba_t.*
   DEFINE l_cnt             LIKE type_t.num10  
   DEFINE li_idx            LIKE type_t.num10  
   DEFINE li_cnt            LIKE type_t.num10  
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.before_reproduce"
   {<point name="reproduce.before_reproduce"/>}
   #end add-point
 
   #檢查PK欄位是否均有值,若全部為NULL時退出
   IF g_pcba_m.pcba001 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF 
 
   EXECUTE apci210_master_referesh USING g_pcba_m.pcba001 INTO g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt,g_pcba_m.pcba002_desc,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid_desc
 
   #檢查如果有子節點(hasC=1)則顯示錯誤訊息後退出
 
   ERROR ""
 
   CALL cl_set_head_visible("","YES")
 
   
 
   LET g_pcba_m.pcba001 = ""

   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_pcba_m.pcbaownid = g_user
      LET g_pcba_m.pcbaowndp = g_dept
      LET g_pcba_m.pcbacrtid = g_user
      LET g_pcba_m.pcbacrtdp = g_dept 
      LET g_pcba_m.pcbacrtdt = cl_get_current()
      LET g_pcba_m.pcbamodid = g_user
      LET g_pcba_m.pcbamoddt = cl_get_current()
      LET g_pcba_m.pcbastus = 'Y'



   
   CALL s_transaction_begin()
   
   #其他table資料備份(確定是否更改用)
   LET g_master_multi_table_t.pcbal001 = g_pcba_m.pcba001
LET g_master_multi_table_t.pcbal003 = g_pcba_m.pcbal003
LET g_master_multi_table_t.pcbal004 = g_pcba_m.pcbal004

 
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #直接呼叫輸入
   CALL apci210_input("r")
 
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
 
   IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pcba_m.* = g_pcba_m_t.*
         CALL apci210_show()
         INITIALIZE g_errparam TO NULL
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      ELSE
         #分兩種狀況-1.根節點, 2.非根節點
         IF g_pcba_m.pcba002 = g_pcba_m.pcba001 THEN
            #為根節點
            LET li_addpos = g_browser.getLength() + 1
            LET g_browser[li_addpos].b_pcba002 = g_pcba_m.pcba002
            LET g_browser[li_addpos].b_pcba001 = g_pcba_m.pcba001
            LET g_browser[li_addpos].b_exp  = FALSE
            LET g_browser[li_addpos].b_hasC = FALSE
            LET g_browser[li_addpos].b_id  = '0.add',g_add_idx USING "<<<"
            LET g_browser[li_addpos].b_pid = '0',g_add_idx USING "<<<"
            LET g_add_idx = g_add_idx + 1
            CALL apci210_desc_show(li_addpos)
            LET g_current_idx = li_addpos
         ELSE
            #非根節點, 開始搜尋其父節點(已展開才做處理)
            LET li_cnt = g_cnt
            IF g_browser.getLength() > 0 THEN
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_pcba001 = g_pcba_m.pcba002 THEN
                     LET li_addpos = l_dialog.appendNode("s_browse",li_idx)
                     LET g_cnt = li_addpos
                     LET g_browser[li_addpos].b_pcba002 = g_pcba_m.pcba002
                     LET g_browser[li_addpos].b_pcba001 = g_pcba_m.pcba001
                     EXECUTE master_refreshcur USING g_browser[li_addpos].b_pcba001

                                                INTO g_browser[g_cnt].b_pcba003,g_browser[g_cnt].b_pcba004,g_browser[g_cnt].b_pcba005,g_browser[g_cnt].b_pcba001,g_browser[g_cnt].b_pcba002,g_browser[g_cnt].b_pcba005_desc
                     LET g_browser[li_addpos].b_exp  = FALSE
                     LET g_browser[li_addpos].b_hasC = FALSE
                     LET g_browser[li_addpos].b_id  = g_browser[li_idx].b_id, '.add',g_add_idx USING "<<<"
                     LET g_browser[li_addpos].b_pid = g_browser[li_idx].b_id
                     LET g_add_idx = g_add_idx + 1
                     CALL apci210_desc_show(li_addpos)
                     #打開父節點
                     LET g_browser[li_idx].b_hasC = TRUE
                     LET g_browser[li_idx].b_exp = TRUE
                     LET g_current_idx = li_addpos
                     EXIT FOR
                  END IF
               END FOR
            END IF
            LET g_cnt = li_cnt 
         END IF
      END IF
 
   #功能已完成,通報訊息中心
   CALL apci210_msgcentre_notify('reproduce')
 
END FUNCTION
{</section>}
 
{<section id="apci210.input" >}
#+ 資料輸入
PRIVATE FUNCTION apci210_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_cmd_t         LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num10       #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num10       #檢查重複用
   DEFINE l_cnt           LIKE type_t.num10       #檢查重複用
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num10
   DEFINE l_i             LIKE type_t.num10
   DEFINE l_insert        LIKE type_t.num10
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r' 
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF  
   
   CALL cl_set_head_visible("","YES")
 
   LET l_insert = FALSE
   LET g_action_choice = ""
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL apci210_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apci210_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               {<point name="input.master_input.update_item" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               #該樣板不需此段落
            END IF
 



         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            #add-point:input段define name="input.action"
            {<point name="input.action"/>}
            #end add-point
          
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba001
            #add-point:BEFORE FIELD pcba001 name="input.b.pcba001"
            {<point name="input.b.pcba001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba001
            
            #add-point:AFTER FIELD pcba001 name="input.a.pcba001"
            {<point name="input.a.pcba001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcba001
            #add-point:ON CHANGE pcba001 name="input.g.pcba001"
            {<point name="input.g.pcba001" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbal003
            #add-point:BEFORE FIELD pcbal003 name="input.b.pcbal003"
            {<point name="input.b.pcbal003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbal003
            
            #add-point:AFTER FIELD pcbal003 name="input.a.pcbal003"
            {<point name="input.a.pcbal003" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcbal003
            #add-point:ON CHANGE pcbal003 name="input.g.pcbal003"
            {<point name="input.g.pcbal003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbal004
            #add-point:BEFORE FIELD pcbal004 name="input.b.pcbal004"
            {<point name="input.b.pcbal004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbal004
            
            #add-point:AFTER FIELD pcbal004 name="input.a.pcbal004"
            {<point name="input.a.pcbal004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcbal004
            #add-point:ON CHANGE pcbal004 name="input.g.pcbal004"
            {<point name="input.g.pcbal004" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba002
            
            #add-point:AFTER FIELD pcba002 name="input.a.pcba002"
            {<point name="input.a.pcba002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba002
            #add-point:BEFORE FIELD pcba002 name="input.b.pcba002"
            {<point name="input.b.pcba002" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcba002
            #add-point:ON CHANGE pcba002 name="input.g.pcba002"
            {<point name="input.g.pcba002" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba003
            #add-point:BEFORE FIELD pcba003 name="input.b.pcba003"
            {<point name="input.b.pcba003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba003
            
            #add-point:AFTER FIELD pcba003 name="input.a.pcba003"
            {<point name="input.a.pcba003" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcba003
            #add-point:ON CHANGE pcba003 name="input.g.pcba003"
            {<point name="input.g.pcba003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba004
            #add-point:BEFORE FIELD pcba004 name="input.b.pcba004"
            {<point name="input.b.pcba004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba004
            
            #add-point:AFTER FIELD pcba004 name="input.a.pcba004"
            {<point name="input.a.pcba004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcba004
            #add-point:ON CHANGE pcba004 name="input.g.pcba004"
            {<point name="input.g.pcba004" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcba005
            
            #add-point:AFTER FIELD pcba005 name="input.a.pcba005"
            {<point name="input.a.pcba005" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcba005
            #add-point:BEFORE FIELD pcba005 name="input.b.pcba005"
            {<point name="input.b.pcba005" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcba005
            #add-point:ON CHANGE pcba005 name="input.g.pcba005"
            {<point name="input.g.pcba005" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbaunit
            
            #add-point:AFTER FIELD pcbaunit name="input.a.pcbaunit"
            {<point name="input.a.pcbaunit" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbaunit
            #add-point:BEFORE FIELD pcbaunit name="input.b.pcbaunit"
            {<point name="input.b.pcbaunit" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcbaunit
            #add-point:ON CHANGE pcbaunit name="input.g.pcbaunit"
            {<point name="input.g.pcbaunit" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcbastus
            #add-point:BEFORE FIELD pcbastus name="input.b.pcbastus"
            {<point name="input.b.pcbastus" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcbastus
            
            #add-point:AFTER FIELD pcbastus name="input.a.pcbastus"
            {<point name="input.a.pcbastus" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcbastus
            #add-point:ON CHANGE pcbastus name="input.g.pcbastus"
            {<point name="input.g.pcbastus" />}
            #END add-point 


 #欄位檢查
                  #Ctrlp:input.c.pcba001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba001
            #add-point:ON ACTION controlp INFIELD pcba001 name="input.c.pcba001"
            {<point name="input.c.pcba001" />}
            #END add-point


         #Ctrlp:input.c.pcbal003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbal003
            #add-point:ON ACTION controlp INFIELD pcbal003 name="input.c.pcbal003"
            {<point name="input.c.pcbal003" />}
            #END add-point


         #Ctrlp:input.c.pcbal004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbal004
            #add-point:ON ACTION controlp INFIELD pcbal004 name="input.c.pcbal004"
            {<point name="input.c.pcbal004" />}
            #END add-point


         #Ctrlp:input.c.pcba002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba002
            #add-point:ON ACTION controlp INFIELD pcba002 name="input.c.pcba002"
            {<point name="input.c.pcba002" />}
            #END add-point


         #Ctrlp:input.c.pcba003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba003
            #add-point:ON ACTION controlp INFIELD pcba003 name="input.c.pcba003"
            {<point name="input.c.pcba003" />}
            #END add-point


         #Ctrlp:input.c.pcba004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba004
            #add-point:ON ACTION controlp INFIELD pcba004 name="input.c.pcba004"
            {<point name="input.c.pcba004" />}
            #END add-point


         #Ctrlp:input.c.pcba005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcba005
            #add-point:ON ACTION controlp INFIELD pcba005 name="input.c.pcba005"
            {<point name="input.c.pcba005" />}
            #END add-point


         #Ctrlp:input.c.pcbaunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbaunit
            #add-point:ON ACTION controlp INFIELD pcbaunit name="input.c.pcbaunit"
            {<point name="input.c.pcbaunit" />}
            #END add-point


         #Ctrlp:input.c.pcbastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcbastus
            #add-point:ON ACTION controlp INFIELD pcbastus name="input.c.pcbastus"
            {<point name="input.c.pcbastus" />}
            #END add-point


 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #避免資料錯誤的檢查
            IF apci210_check(g_pcba_m.pcba001,g_pcba_m.pcba002
               #該樣板不需此段落:,
               ) THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code = "std-00020" 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF
 
            #CALL cl_err_collect_show()   #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_pcba_m.pcba001
 
            #實體新增/修改/複製段落的處理
            CASE
               WHEN p_cmd = "a" OR p_cmd = "r"
                  LET l_count = 1
 
                  SELECT COUNT(1) INTO l_count FROM pcba_t
                   WHERE pcbaent = g_enterprise AND pcba001 = g_pcba_m.pcba001

                         #
                  IF l_count = 0 THEN
                     #add-point:單頭新增前 name="input.head.b_insert"
                     {<point name="input.head.b_insert" mark="Y"/>}
                     #end add-point
 
                     INSERT INTO pcba_t (pcbaent,pcba001,pcba002,pcba003,pcba004,pcba005,pcbaunit,pcbastus,pcbaownid,pcbaowndp,pcbacrtid,pcbacrtdt,pcbacrtdp,pcbamodid,pcbamoddt)
                     VALUES (g_enterprise,g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt) 
 
                     #add-point:單頭新增中 name="input.head.m_insert"
                     {<point name="input.head.m_insert"/>}
                     #end add-point
 
                     IF SQLCA.SQLCODE THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "g_pcba_m:",SQLERRMESSAGE 
                        LET g_errparam.code = SQLCA.SQLCODE 
                        LET g_errparam.popup = TRUE 
                        CALL cl_err()
                        CONTINUE DIALOG
                     END IF
                  
                     #提速檔資料建置
                     IF g_pcba_m.pcba001 <> g_pcba_m.pcba002 THEN
                        #CALL n_pcbas_generate_child(g_pcba_m.pcba001,g_pcba_m.pcba002)
                     END IF
                     
                     #add-point:單頭新增後 name="input.head.a_insert"
                     {<point name="input.head.a_insert"/>}
                     #end add-point
                     
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_pcba_m.pcba001 = g_master_multi_table_t.pcbal001 AND
         g_pcba_m.pcbal003 = g_master_multi_table_t.pcbal003 AND 
         g_pcba_m.pcbal004 = g_master_multi_table_t.pcbal004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pcbalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pcba_m.pcba001
            LET l_field_keys[02] = 'pcbal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.pcbal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pcbal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_pcba_m.pcbal003
            LET l_fields[01] = 'pcbal003'
            LET l_vars[02] = g_pcba_m.pcbal004
            LET l_fields[02] = 'pcbal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pcbal_t')
         END IF 

                     CALL s_transaction_end("Y","0")
                  ELSE
                     CALL s_transaction_end("N","0")
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend =  g_pcba_m.pcba001 
                     LET g_errparam.code =  "std-00006" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                  END IF 
 
               #修改段落
               WHEN p_cmd = "u"  
                  #add-point:單頭修改前 name="input.head.b_update"
                  {<point name="input.head.b_update" mark="Y"/>}
                  #end add-point
                  UPDATE pcba_t SET (pcba001,pcba002,pcba003,pcba004,pcba005,pcbaunit,pcbastus,pcbaownid,pcbaowndp,pcbacrtid,pcbacrtdt,pcbacrtdp,pcbamodid,pcbamoddt) = (g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt)
                   WHERE pcbaent = g_enterprise AND pcba001 = g_pcba001_t #

                  #add-point:單頭修改中 name="input.head.m_update"
                  {<point name="input.head.m_update"/>}
                  #end add-point
                  CASE
                     WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                        CALL s_transaction_end('N','0')
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "pcba_t" 
                        LET g_errparam.code = "std-00009" 
                        LET g_errparam.popup = TRUE 
                        CALL cl_err()
                        
                     WHEN SQLCA.SQLCODE #其他錯誤
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "pcba_t:",SQLERRMESSAGE 
                        LET g_errparam.code = SQLCA.SQLCODE 
                        LET g_errparam.popup = TRUE 
                        CALL s_transaction_end('N','0')
                        CALL cl_err()
                        
                     OTHERWISE
                        #add-point:單頭修改後 name="input.head.a_update"
                        {<point name="input.head.a_update"/>}
                        #end add-point
    
                        #資料多語言用-增/改
                                 INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_pcba_m.pcba001 = g_master_multi_table_t.pcbal001 AND
         g_pcba_m.pcbal003 = g_master_multi_table_t.pcbal003 AND 
         g_pcba_m.pcbal004 = g_master_multi_table_t.pcbal004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pcbalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pcba_m.pcba001
            LET l_field_keys[02] = 'pcbal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.pcbal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pcbal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_pcba_m.pcbal003
            LET l_fields[01] = 'pcbal003'
            LET l_vars[02] = g_pcba_m.pcbal004
            LET l_fields[02] = 'pcbal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pcbal_t')
         END IF 

                        LET g_log1 = util.JSON.stringify(g_pcba_m_t)
                        LET g_log2 = util.JSON.stringify(g_pcba_m)
                        IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                           CALL s_transaction_end('N','0')
                        ELSE
                           CALL s_transaction_end('Y','0')
                        END IF
                  END CASE
 
               OTHERWISE 
            END CASE
 
           #controlp
      END INPUT
      
      #add-point:input段more input  name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      #在dialog button (放棄)
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close       
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
           
   END DIALOG
   
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point
    
END FUNCTION
{</section>}
 
{<section id="apci210.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apci210_show()
   #add-point:show段define name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
       
   
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)



 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL apci210_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  



   
   #讀入ref值(單頭)
   #add-point:reference段之後 name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
 
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_pcba_m.pcbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE



 
   #顯示有特殊格式設定的欄位或說明
   CALL cl_show_fld_cont()   
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="apci210.delete" >}
#+ 資料刪除
PRIVATE FUNCTION apci210_delete(l_dialog)
   #add-point:delete段define name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_dialog        ui.DIALOG
   DEFINE li_status       LIKE type_t.num5  #SQL實體資料刪除狀態
   DEFINE li_cnt          LIKE type_t.num10 #查看本階是否有兄弟資料
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_pcba_m.pcba001 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:delete段before_delete name="delete.before_delete"
   {<point name="delete.before_delete"/>}
   #end add-point
 
   EXECUTE apci210_master_referesh USING g_pcba_m.pcba001 INTO g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt,g_pcba_m.pcba002_desc,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid_desc
    
   #檢查是否允許此動作
   IF NOT apci210_action_chk() THEN
      RETURN
   END IF
    
   CALL apci210_show()
   
   #Transaction開始
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.pcbal001 = g_pcba_m.pcba001
LET g_master_multi_table_t.pcbal003 = g_pcba_m.pcbal003
LET g_master_multi_table_t.pcbal004 = g_pcba_m.pcbal004

 
   OPEN apci210_cl USING g_enterprise,g_pcba_m.pcba001
   IF SQLCA.SQLCODE THEN   #(ver:36)
      CLOSE apci210_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apci210_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH apci210_cl INTO g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
   IF SQLCA.SQLCODE THEN
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_pcba_m.pcba001,":",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   #add-point:delete段before_delete name="delete.before_delete_ask"
   {<point name="delete.before_delete_ask"/>}
   #end add-point
 
   #(ver:35) ---modify start---
   #(ver:35) 為避免刪除全部子節點可能會對其他節點造成影響，現改為只刪除當下節點
   #先判斷是否有子節點(hasC) 詢問是否砍除全部
#  IF g_browser[g_current_idx].b_hasC THEN
#     IF cl_ask_delete_all_node() THEN
#        LET li_status = apci210_sql_delete(TRUE)
#     ELSE
#        LET li_status = FALSE
#     END IF
#  ELSE
      #如果沒有子節點,詢問是否刪除本筆資料
      IF cl_ask_delete() THEN
         LET li_status = apci210_sql_delete(FALSE)
      ELSE
         LET li_status = FALSE
      END IF
#  END IF
   #(ver:35) --- modify end ---
 
   #檢查實體砍除是否發生意外中止
   IF NOT li_status THEN
      CALL s_transaction_end("N","0")
      CLOSE apci210_cl
      RETURN
   END IF
 
   #刪除節點與資料內容
   CALL l_dialog.deleteNode("s_browse",g_current_idx)  #deleteNode會順便幫忙做deleteElement
 
   #確認這一階還有沒有兄弟 (有:不異動上階屬性/否:上階hasC及exp設定成0)
   #SELECT COUNT(1) INTO li_cnt
   #  FROM pcba_t
   # WHERE pcba002 = g_pcba_m.pcba002
   #IF g_current_idx > 1 THEN
   #   IF li_cnt = 0  THEN
   #      LET g_browser[g_current_idx - 1].b_hasC = 0
   #      LET g_browser[g_current_idx - 1].b_exp = 0
   #   END IF
   #END IF
 
   #add-point:單頭刪除後 name="delete.head.a_delete"
   {<point name="delete.head.a_delete"/>}
   #end add-point
   
   IF g_current_idx > 1 THEN
      LET g_current_idx = g_current_idx - 1
   END IF
   
   IF g_browser.getLength() > 0 THEN
      CALL apci210_fetch("")
   END IF
 
   LET g_log1 = util.JSON.stringify(g_pcba_m)   #(ver:36)
   IF NOT cl_log_modified_record(g_log1,'') THEN   #(ver:36)
      CLOSE apci210_cl
      CALL s_transaction_end('N','0')
   ELSE
      CLOSE apci210_cl
      CALL s_transaction_end('Y','0')
   END IF
 
   #功能已完成,通報訊息中心
   CALL apci210_msgcentre_notify('delete')
    
END FUNCTION
{</section>}
 
{<section id="apci210.sql_delete" >}
#+ 實體刪除FUNCTION 
PRIVATE FUNCTION apci210_sql_delete(li_node)
   #add-point:sql_delete段define name="sql_delet.define_customerization"
   {<point name="sql_delet.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_node         LIKE type_t.num5  #TRUE:砍除Node Tree/FALSE:砍除Single Node
   DEFINE li_return       LIKE type_t.num5
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE ls_sql          STRING
   DEFINE li_cnt          LIKE type_t.num10   #(ver:35) add
   #add-point:sql_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sql_delet.define"
   {<point name="sql_delet.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="sql_delet.pre_function"
   {<point name="sql_delet.pre_function"/>}
   #end add-point
   
   LET li_return = TRUE
 
   #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL apci210_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 


 
 
   #add-point:單頭刪除前 name="delete.head.b_delete"
   {<point name="delete.head.b_delete" mark="Y"/>}
   #end add-point
   
   IF li_node = TRUE THEN
      #砍除該節點以下所有節點
      LET ls_sql = " SELECT pcba001,pcba002 FROM ",
                   " (SELECT pcba001,pcba002 FROM pcba_t WHERE pcbaent = " ||g_enterprise|| " AND pcba001<>pcba002)",
                   " START WITH pcba002='",g_pcba_m.pcba002,"'",
                   " CONNECT BY PRIOR pcba001 = pcba002"
 
   ELSE 
   
   END IF
 
   #刪除當下節點
   DELETE FROM pcba_t
    WHERE pcbaent = g_enterprise AND pcba001 = g_pcba_m.pcba001

 
   #add-point:單頭刪除中 name="delete.head.m_delete"
   {<point name="delete.head.m_delete"/>}
   #end add-point
 
   IF SQLCA.SQLCODE THEN
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "pcba_t:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
   END IF
 
   #(ver:35) ---modify start---
   # 若此節點還有存在在其他節點下，則多語言資料不可刪除
   LET li_cnt = 0
   LET ls_sql = " SELECT COUNT(1) FROM pcba_t",
                 " WHERE pcbaent = " ||g_enterprise|| " AND pcba001 = '",g_pcba_m.pcba001,"'"
 
   PREPARE master_chk_node_exist FROM ls_sql
   EXECUTE master_chk_node_exist INTO li_cnt
   IF li_cnt <= 0 THEN
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'pcbalent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.pcbal001
   LET l_field_keys[02] = 'pcbal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'pcbal_t')

   END IF
   #(ver:35) --- modify end ---
 
   RETURN li_return
 
END FUNCTION
{</section>}
 
{<section id="apci210.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION apci210_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1 
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("pcba001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
   
END FUNCTION
{</section>}
 
{<section id="apci210.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION apci210_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pcba001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="apci210.default_search" >}
#+ 外部參數預設搜尋
PRIVATE FUNCTION apci210_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pcba001 = '", g_argv[01], "' AND "
   END IF
   

   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #CALL apci210_browser_fill(g_wc,g_searchtype)
 
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="apci210.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION apci210_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_pcba_m.pcba001 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN apci210_cl USING g_enterprise,g_pcba_m.pcba001
   IF STATUS THEN
      CLOSE apci210_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apci210_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE apci210_master_referesh USING g_pcba_m.pcba001 INTO g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt,g_pcba_m.pcba002_desc,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid_desc
   
 
   #檢查是否允許此動作
   IF NOT apci210_action_chk() THEN
      CLOSE apci210_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
 
   CASE g_pcba_m.pcbastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_pcba_m.pcbastus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_pcba_m.pcbastus = lc_state OR cl_null(lc_state) THEN
      CLOSE apci210_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_pcba_m.pcbamodid = g_user
   LET g_pcba_m.pcbamoddt = cl_get_current()
   LET g_pcba_m.pcbastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE pcba_t 
      SET (pcbastus,pcbamodid,pcbamoddt) 
        = (g_pcba_m.pcbastus,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt)     
    WHERE pcbaent = g_enterprise AND pcba001 = g_pcba_m.pcba001

    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE apci210_master_referesh USING g_pcba_m.pcba001 INTO g_pcba_m.pcba001,g_pcba_m.pcba002,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcbaunit,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaowndp,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbamodid,g_pcba_m.pcbamoddt,g_pcba_m.pcba002_desc,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_pcba_m.pcba001,g_pcba_m.pcbal003,g_pcba_m.pcbal004,g_pcba_m.pcba002,g_pcba_m.pcba002_desc,g_pcba_m.pcba003,g_pcba_m.pcba004,g_pcba_m.pcba005,g_pcba_m.pcba005_desc,g_pcba_m.pcbaunit,g_pcba_m.pcbaunit_desc,g_pcba_m.pcbastus,g_pcba_m.pcbaownid,g_pcba_m.pcbaownid_desc,g_pcba_m.pcbaowndp,g_pcba_m.pcbaowndp_desc,g_pcba_m.pcbacrtid,g_pcba_m.pcbacrtid_desc,g_pcba_m.pcbacrtdt,g_pcba_m.pcbacrtdp,g_pcba_m.pcbacrtdp_desc,g_pcba_m.pcbamodid,g_pcba_m.pcbamodid_desc,g_pcba_m.pcbamoddt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE apci210_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apci210_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION



{</section>}
 
{<section id="apci210.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION apci210_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pcba_m.pcba001
   LET g_pk_array[1].column = 'pcba001'

   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION



{</section>}
 
{<section id="apci210.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION apci210_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL apci210_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_pcba_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION



{</section>}
 
{<section id="apci210.action_chk" >}
PRIVATE FUNCTION apci210_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>}
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="apci210.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 

