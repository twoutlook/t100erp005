#該程式未解開Section, 採用最新樣板產出!
{<section id="apct500.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2016-05-16 13:48:09), PR版次:0007(2016-08-26 09:40:14)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000053
#+ Filename...: apct500
#+ Description: Service差異調整作業
#+ Creator....: 03247(2015-06-22 21:41:27)
#+ Modifier...: 03247 -SD/PR- 08734
 
{</section>}
 
{<section id="apct500.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#+ Modifier...:   No.160318-00025#31   2016/04/11  By pengxin  將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#160812-00017#1 16/08/15 By 06137    在satatchange( )的FUNCTION中，有RETURN指令但沒有加上transaction_end( ) 造成transaction沒有結束就直接RETURN
#160818-00017#25 2016-08-22 By 08734 删除修改未重新判断状态码
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_pcap_m        RECORD
       pcapsite LIKE pcap_t.pcapsite, 
   pcapsite_desc LIKE type_t.chr80, 
   pcapdocdt LIKE pcap_t.pcapdocdt, 
   pcapdocno LIKE pcap_t.pcapdocno, 
   pcap003 LIKE pcap_t.pcap003, 
   pcap001 LIKE pcap_t.pcap001, 
   pcap001_desc LIKE type_t.chr80, 
   pcap002 LIKE pcap_t.pcap002, 
   pcap002_desc LIKE type_t.chr80, 
   pcapunit LIKE pcap_t.pcapunit, 
   pcapstus LIKE pcap_t.pcapstus, 
   pcapownid LIKE pcap_t.pcapownid, 
   pcapownid_desc LIKE type_t.chr80, 
   pcapowndp LIKE pcap_t.pcapowndp, 
   pcapowndp_desc LIKE type_t.chr80, 
   pcapcrtid LIKE pcap_t.pcapcrtid, 
   pcapcrtid_desc LIKE type_t.chr80, 
   pcapcrtdp LIKE pcap_t.pcapcrtdp, 
   pcapcrtdp_desc LIKE type_t.chr80, 
   pcapcrtdt LIKE pcap_t.pcapcrtdt, 
   pcapmodid LIKE pcap_t.pcapmodid, 
   pcapmodid_desc LIKE type_t.chr80, 
   pcapmoddt LIKE pcap_t.pcapmoddt, 
   pcapcnfid LIKE pcap_t.pcapcnfid, 
   pcapcnfid_desc LIKE type_t.chr80, 
   pcapcnfdt LIKE pcap_t.pcapcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_pcaq_d        RECORD
       pcaqseq LIKE pcaq_t.pcaqseq, 
   pcaqsite LIKE pcaq_t.pcaqsite, 
   pcaqsite_desc LIKE type_t.chr500, 
   pcaqunit LIKE pcaq_t.pcaqunit, 
   pcaq001 LIKE pcaq_t.pcaq001, 
   pcaq015 LIKE pcaq_t.pcaq015, 
   pcaq012 LIKE pcaq_t.pcaq012, 
   pcaq012_desc LIKE type_t.chr500, 
   pcaq003 LIKE pcaq_t.pcaq003, 
   pcaq002 LIKE pcaq_t.pcaq002, 
   pcaq007 LIKE pcaq_t.pcaq007, 
   pcaq006 LIKE pcaq_t.pcaq006, 
   pcaq004 LIKE pcaq_t.pcaq004, 
   pcaq005 LIKE pcaq_t.pcaq005, 
   pcaq016 LIKE pcaq_t.pcaq016, 
   pcaq008 LIKE pcaq_t.pcaq008, 
   pcaq009 LIKE pcaq_t.pcaq009, 
   pcaq010 LIKE pcaq_t.pcaq010, 
   pcaq011 LIKE pcaq_t.pcaq011, 
   pcaq013 LIKE pcaq_t.pcaq013, 
   pcaq014 LIKE pcaq_t.pcaq014
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_pcapsite LIKE pcap_t.pcapsite,
      b_pcapdocdt LIKE pcap_t.pcapdocdt,
      b_pcapdocno LIKE pcap_t.pcapdocno,
      b_pcap001 LIKE pcap_t.pcap001,
      b_pcap002 LIKE pcap_t.pcap002,
      b_pcap003 LIKE pcap_t.pcap003
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_site_flag   LIKE type_t.num5
#end add-point
       
#模組變數(Module Variables)
DEFINE g_pcap_m          type_g_pcap_m
DEFINE g_pcap_m_t        type_g_pcap_m
DEFINE g_pcap_m_o        type_g_pcap_m
DEFINE g_pcap_m_mask_o   type_g_pcap_m #轉換遮罩前資料
DEFINE g_pcap_m_mask_n   type_g_pcap_m #轉換遮罩後資料
 
   DEFINE g_pcapdocno_t LIKE pcap_t.pcapdocno
 
 
DEFINE g_pcaq_d          DYNAMIC ARRAY OF type_g_pcaq_d
DEFINE g_pcaq_d_t        type_g_pcaq_d
DEFINE g_pcaq_d_o        type_g_pcaq_d
DEFINE g_pcaq_d_mask_o   DYNAMIC ARRAY OF type_g_pcaq_d #轉換遮罩前資料
DEFINE g_pcaq_d_mask_n   DYNAMIC ARRAY OF type_g_pcaq_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="apct500.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apc","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT pcapsite,'',pcapdocdt,pcapdocno,pcap003,pcap001,'',pcap002,'',pcapunit, 
       pcapstus,pcapownid,'',pcapowndp,'',pcapcrtid,'',pcapcrtdp,'',pcapcrtdt,pcapmodid,'',pcapmoddt, 
       pcapcnfid,'',pcapcnfdt", 
                      " FROM pcap_t",
                      " WHERE pcapent= ? AND pcapdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apct500_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.pcapsite,t0.pcapdocdt,t0.pcapdocno,t0.pcap003,t0.pcap001,t0.pcap002, 
       t0.pcapunit,t0.pcapstus,t0.pcapownid,t0.pcapowndp,t0.pcapcrtid,t0.pcapcrtdp,t0.pcapcrtdt,t0.pcapmodid, 
       t0.pcapmoddt,t0.pcapcnfid,t0.pcapcnfdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 , 
       t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooag011",
               " FROM pcap_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.pcapsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.pcap001  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.pcap002 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.pcapownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.pcapowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.pcapcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.pcapcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.pcapmodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.pcapcnfid  ",
 
               " WHERE t0.pcapent = " ||g_enterprise|| " AND t0.pcapdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE apct500_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apct500 WITH FORM cl_ap_formpath("apc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apct500_init()   
 
      #進入選單 Menu (="N")
      CALL apct500_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apct500
      
   END IF 
   
   CLOSE apct500_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="apct500.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apct500_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('pcapstus','13','N,Y,X')
 
      CALL cl_set_combo_scc('pcaq002','6827') 
   CALL cl_set_combo_scc('pcaq006','6828') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_aooi500_create_temp() RETURNING l_success
   CALL cl_set_combo_scc('pcaq016','6829')
   #end add-point
   
   #初始化搜尋條件
   CALL apct500_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="apct500.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION apct500_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apct500_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_pcap_m.* TO NULL
         CALL g_pcaq_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apct500_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL apct500_fetch('') # reload data
               LET l_ac = 1
               CALL apct500_ui_detailshow() #Setting the current row 
         
               CALL apct500_idx_chk()
               #NEXT FIELD pcaqseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_pcaq_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apct500_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL apct500_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL apct500_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apct500_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apct500_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apct500_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apct500_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL apct500_set_act_visible()   
            CALL apct500_set_act_no_visible()
            IF NOT (g_pcap_m.pcapdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " pcapent = " ||g_enterprise|| " AND",
                                  " pcapdocno = '", g_pcap_m.pcapdocno, "' "
 
               #填到對應位置
               CALL apct500_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "pcap_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "pcaq_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL apct500_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "pcap_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "pcaq_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL apct500_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL apct500_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL apct500_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL apct500_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apct500_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL apct500_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apct500_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL apct500_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apct500_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL apct500_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apct500_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL apct500_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apct500_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_pcaq_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD pcaqseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apct500_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apct500_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apct500_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apct500_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/apc/apct500_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apct500_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apct500_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION sel_data
            LET g_action_choice="sel_data"
            IF cl_auth_chk_act("sel_data") THEN
               
               #add-point:ON ACTION sel_data name="menu.sel_data"
               IF cl_null(g_pcap_m.pcapdocno) OR g_pcap_m.pcapstus = 'X' THEN
                  CONTINUE DIALOG
               END IF
               IF g_pcap_m.pcapstus = 'Y' THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend =  "" 
                  LET g_errparam.code   =  "apc-00034" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF
               CALL apct500_ins_pcaq()
               CALL apct500_b_fill()
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL apct500_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apct500_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apct500_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_pcap_m.pcapdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="apct500.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apct500_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   CALL s_aooi500_sql_where(g_prog,'pcapsite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim()
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT pcapdocno ",
                      " FROM pcap_t ",
                      " ",
                      " LEFT JOIN pcaq_t ON pcaqent = pcapent AND pcapdocno = pcaqdocno ", "  ",
                      #add-point:browser_fill段sql(pcaq_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE pcapent = " ||g_enterprise|| " AND pcaqent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("pcap_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT pcapdocno ",
                      " FROM pcap_t ", 
                      "  ",
                      "  ",
                      " WHERE pcapent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("pcap_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_pcap_m.* TO NULL
      CALL g_pcaq_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.pcapsite,t0.pcapdocdt,t0.pcapdocno,t0.pcap001,t0.pcap002,t0.pcap003 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.pcapstus,t0.pcapsite,t0.pcapdocdt,t0.pcapdocno,t0.pcap001,t0.pcap002, 
          t0.pcap003 ",
                  " FROM pcap_t t0",
                  "  ",
                  "  LEFT JOIN pcaq_t ON pcaqent = pcapent AND pcapdocno = pcaqdocno ", "  ", 
                  #add-point:browser_fill段sql(pcaq_t1) name="browser_fill.join.pcaq_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.pcapent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("pcap_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.pcapstus,t0.pcapsite,t0.pcapdocdt,t0.pcapdocno,t0.pcap001,t0.pcap002, 
          t0.pcap003 ",
                  " FROM pcap_t t0",
                  "  ",
                  
                  " WHERE t0.pcapent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("pcap_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY pcapdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"pcap_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_pcapsite,g_browser[g_cnt].b_pcapdocdt, 
          g_browser[g_cnt].b_pcapdocno,g_browser[g_cnt].b_pcap001,g_browser[g_cnt].b_pcap002,g_browser[g_cnt].b_pcap003 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL apct500_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_pcapdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION apct500_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_pcap_m.pcapdocno = g_browser[g_current_idx].b_pcapdocno   
 
   EXECUTE apct500_master_referesh USING g_pcap_m.pcapdocno INTO g_pcap_m.pcapsite,g_pcap_m.pcapdocdt, 
       g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus, 
       g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt,g_pcap_m.pcapsite_desc, 
       g_pcap_m.pcap001_desc,g_pcap_m.pcap002_desc,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp_desc,g_pcap_m.pcapcrtid_desc, 
       g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapcnfid_desc
   
   CALL apct500_pcap_t_mask()
   CALL apct500_show()
      
END FUNCTION
 
{</section>}
 
{<section id="apct500.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION apct500_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apct500_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pcapdocno = g_pcap_m.pcapdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION apct500_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_pcap_m.* TO NULL
   CALL g_pcaq_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON pcapsite,pcapdocdt,pcapdocno,pcap003,pcap001,pcap002,pcapunit,pcapstus, 
          pcapownid,pcapowndp,pcapcrtid,pcapcrtdp,pcapcrtdt,pcapmodid,pcapmoddt,pcapcnfid,pcapcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<pcapcrtdt>>----
         AFTER FIELD pcapcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<pcapmoddt>>----
         AFTER FIELD pcapmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pcapcnfdt>>----
         AFTER FIELD pcapcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pcappstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.pcapsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapsite
            #add-point:ON ACTION controlp INFIELD pcapsite name="construct.c.pcapsite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pcapsite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapsite  #顯示到畫面上
            NEXT FIELD pcapsite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapsite
            #add-point:BEFORE FIELD pcapsite name="construct.b.pcapsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapsite
            
            #add-point:AFTER FIELD pcapsite name="construct.a.pcapsite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapdocdt
            #add-point:BEFORE FIELD pcapdocdt name="construct.b.pcapdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapdocdt
            
            #add-point:AFTER FIELD pcapdocdt name="construct.a.pcapdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcapdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapdocdt
            #add-point:ON ACTION controlp INFIELD pcapdocdt name="construct.c.pcapdocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pcapdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapdocno
            #add-point:ON ACTION controlp INFIELD pcapdocno name="construct.c.pcapdocno"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pcapdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapdocno  #顯示到畫面上
            NEXT FIELD pcapdocno                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapdocno
            #add-point:BEFORE FIELD pcapdocno name="construct.b.pcapdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapdocno
            
            #add-point:AFTER FIELD pcapdocno name="construct.a.pcapdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcap003
            #add-point:BEFORE FIELD pcap003 name="construct.b.pcap003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcap003
            
            #add-point:AFTER FIELD pcap003 name="construct.a.pcap003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcap003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcap003
            #add-point:ON ACTION controlp INFIELD pcap003 name="construct.c.pcap003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pcap001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcap001
            #add-point:ON ACTION controlp INFIELD pcap001 name="construct.c.pcap001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcap001  #顯示到畫面上
            NEXT FIELD pcap001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcap001
            #add-point:BEFORE FIELD pcap001 name="construct.b.pcap001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcap001
            
            #add-point:AFTER FIELD pcap001 name="construct.a.pcap001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcap002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcap002
            #add-point:ON ACTION controlp INFIELD pcap002 name="construct.c.pcap002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcap002  #顯示到畫面上
            NEXT FIELD pcap002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcap002
            #add-point:BEFORE FIELD pcap002 name="construct.b.pcap002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcap002
            
            #add-point:AFTER FIELD pcap002 name="construct.a.pcap002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapunit
            #add-point:BEFORE FIELD pcapunit name="construct.b.pcapunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapunit
            
            #add-point:AFTER FIELD pcapunit name="construct.a.pcapunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcapunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapunit
            #add-point:ON ACTION controlp INFIELD pcapunit name="construct.c.pcapunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapstus
            #add-point:BEFORE FIELD pcapstus name="construct.b.pcapstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapstus
            
            #add-point:AFTER FIELD pcapstus name="construct.a.pcapstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcapstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapstus
            #add-point:ON ACTION controlp INFIELD pcapstus name="construct.c.pcapstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pcapownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapownid
            #add-point:ON ACTION controlp INFIELD pcapownid name="construct.c.pcapownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapownid  #顯示到畫面上
            NEXT FIELD pcapownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapownid
            #add-point:BEFORE FIELD pcapownid name="construct.b.pcapownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapownid
            
            #add-point:AFTER FIELD pcapownid name="construct.a.pcapownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcapowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapowndp
            #add-point:ON ACTION controlp INFIELD pcapowndp name="construct.c.pcapowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapowndp  #顯示到畫面上
            NEXT FIELD pcapowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapowndp
            #add-point:BEFORE FIELD pcapowndp name="construct.b.pcapowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapowndp
            
            #add-point:AFTER FIELD pcapowndp name="construct.a.pcapowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcapcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapcrtid
            #add-point:ON ACTION controlp INFIELD pcapcrtid name="construct.c.pcapcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapcrtid  #顯示到畫面上
            NEXT FIELD pcapcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapcrtid
            #add-point:BEFORE FIELD pcapcrtid name="construct.b.pcapcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapcrtid
            
            #add-point:AFTER FIELD pcapcrtid name="construct.a.pcapcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pcapcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapcrtdp
            #add-point:ON ACTION controlp INFIELD pcapcrtdp name="construct.c.pcapcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapcrtdp  #顯示到畫面上
            NEXT FIELD pcapcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapcrtdp
            #add-point:BEFORE FIELD pcapcrtdp name="construct.b.pcapcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapcrtdp
            
            #add-point:AFTER FIELD pcapcrtdp name="construct.a.pcapcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapcrtdt
            #add-point:BEFORE FIELD pcapcrtdt name="construct.b.pcapcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pcapmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapmodid
            #add-point:ON ACTION controlp INFIELD pcapmodid name="construct.c.pcapmodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapmodid  #顯示到畫面上
            NEXT FIELD pcapmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapmodid
            #add-point:BEFORE FIELD pcapmodid name="construct.b.pcapmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapmodid
            
            #add-point:AFTER FIELD pcapmodid name="construct.a.pcapmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapmoddt
            #add-point:BEFORE FIELD pcapmoddt name="construct.b.pcapmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pcapcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapcnfid
            #add-point:ON ACTION controlp INFIELD pcapcnfid name="construct.c.pcapcnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcapcnfid  #顯示到畫面上
            NEXT FIELD pcapcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapcnfid
            #add-point:BEFORE FIELD pcapcnfid name="construct.b.pcapcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapcnfid
            
            #add-point:AFTER FIELD pcapcnfid name="construct.a.pcapcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapcnfdt
            #add-point:BEFORE FIELD pcapcnfdt name="construct.b.pcapcnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON pcaqseq,pcaqsite,pcaqunit,pcaq001,pcaq015,pcaq012,pcaq003,pcaq002,pcaq007, 
          pcaq006,pcaq004,pcaq005,pcaq016,pcaq008,pcaq009,pcaq010,pcaq011,pcaq013,pcaq014
           FROM s_detail1[1].pcaqseq,s_detail1[1].pcaqsite,s_detail1[1].pcaqunit,s_detail1[1].pcaq001, 
               s_detail1[1].pcaq015,s_detail1[1].pcaq012,s_detail1[1].pcaq003,s_detail1[1].pcaq002,s_detail1[1].pcaq007, 
               s_detail1[1].pcaq006,s_detail1[1].pcaq004,s_detail1[1].pcaq005,s_detail1[1].pcaq016,s_detail1[1].pcaq008, 
               s_detail1[1].pcaq009,s_detail1[1].pcaq010,s_detail1[1].pcaq011,s_detail1[1].pcaq013,s_detail1[1].pcaq014 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaqseq
            #add-point:BEFORE FIELD pcaqseq name="construct.b.page1.pcaqseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaqseq
            
            #add-point:AFTER FIELD pcaqseq name="construct.a.page1.pcaqseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaqseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaqseq
            #add-point:ON ACTION controlp INFIELD pcaqseq name="construct.c.page1.pcaqseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.pcaqsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaqsite
            #add-point:ON ACTION controlp INFIELD pcaqsite name="construct.c.page1.pcaqsite"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaqsite  #顯示到畫面上
            NEXT FIELD pcaqsite                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaqsite
            #add-point:BEFORE FIELD pcaqsite name="construct.b.page1.pcaqsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaqsite
            
            #add-point:AFTER FIELD pcaqsite name="construct.a.page1.pcaqsite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaqunit
            #add-point:BEFORE FIELD pcaqunit name="construct.b.page1.pcaqunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaqunit
            
            #add-point:AFTER FIELD pcaqunit name="construct.a.page1.pcaqunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaqunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaqunit
            #add-point:ON ACTION controlp INFIELD pcaqunit name="construct.c.page1.pcaqunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq001
            #add-point:BEFORE FIELD pcaq001 name="construct.b.page1.pcaq001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq001
            
            #add-point:AFTER FIELD pcaq001 name="construct.a.page1.pcaq001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq001
            #add-point:ON ACTION controlp INFIELD pcaq001 name="construct.c.page1.pcaq001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq015
            #add-point:BEFORE FIELD pcaq015 name="construct.b.page1.pcaq015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq015
            
            #add-point:AFTER FIELD pcaq015 name="construct.a.page1.pcaq015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq015
            #add-point:ON ACTION controlp INFIELD pcaq015 name="construct.c.page1.pcaq015"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.pcaq012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq012
            #add-point:ON ACTION controlp INFIELD pcaq012 name="construct.c.page1.pcaq012"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pcaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pcaq012  #顯示到畫面上
            NEXT FIELD pcaq012                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq012
            #add-point:BEFORE FIELD pcaq012 name="construct.b.page1.pcaq012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq012
            
            #add-point:AFTER FIELD pcaq012 name="construct.a.page1.pcaq012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq003
            #add-point:BEFORE FIELD pcaq003 name="construct.b.page1.pcaq003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq003
            
            #add-point:AFTER FIELD pcaq003 name="construct.a.page1.pcaq003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq003
            #add-point:ON ACTION controlp INFIELD pcaq003 name="construct.c.page1.pcaq003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq002
            #add-point:BEFORE FIELD pcaq002 name="construct.b.page1.pcaq002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq002
            
            #add-point:AFTER FIELD pcaq002 name="construct.a.page1.pcaq002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq002
            #add-point:ON ACTION controlp INFIELD pcaq002 name="construct.c.page1.pcaq002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq007
            #add-point:BEFORE FIELD pcaq007 name="construct.b.page1.pcaq007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq007
            
            #add-point:AFTER FIELD pcaq007 name="construct.a.page1.pcaq007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq007
            #add-point:ON ACTION controlp INFIELD pcaq007 name="construct.c.page1.pcaq007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq006
            #add-point:BEFORE FIELD pcaq006 name="construct.b.page1.pcaq006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq006
            
            #add-point:AFTER FIELD pcaq006 name="construct.a.page1.pcaq006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq006
            #add-point:ON ACTION controlp INFIELD pcaq006 name="construct.c.page1.pcaq006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq004
            #add-point:BEFORE FIELD pcaq004 name="construct.b.page1.pcaq004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq004
            
            #add-point:AFTER FIELD pcaq004 name="construct.a.page1.pcaq004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq004
            #add-point:ON ACTION controlp INFIELD pcaq004 name="construct.c.page1.pcaq004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq005
            #add-point:BEFORE FIELD pcaq005 name="construct.b.page1.pcaq005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq005
            
            #add-point:AFTER FIELD pcaq005 name="construct.a.page1.pcaq005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq005
            #add-point:ON ACTION controlp INFIELD pcaq005 name="construct.c.page1.pcaq005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq016
            #add-point:BEFORE FIELD pcaq016 name="construct.b.page1.pcaq016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq016
            
            #add-point:AFTER FIELD pcaq016 name="construct.a.page1.pcaq016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq016
            #add-point:ON ACTION controlp INFIELD pcaq016 name="construct.c.page1.pcaq016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq008
            #add-point:BEFORE FIELD pcaq008 name="construct.b.page1.pcaq008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq008
            
            #add-point:AFTER FIELD pcaq008 name="construct.a.page1.pcaq008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq008
            #add-point:ON ACTION controlp INFIELD pcaq008 name="construct.c.page1.pcaq008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq009
            #add-point:BEFORE FIELD pcaq009 name="construct.b.page1.pcaq009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq009
            
            #add-point:AFTER FIELD pcaq009 name="construct.a.page1.pcaq009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq009
            #add-point:ON ACTION controlp INFIELD pcaq009 name="construct.c.page1.pcaq009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq010
            #add-point:BEFORE FIELD pcaq010 name="construct.b.page1.pcaq010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq010
            
            #add-point:AFTER FIELD pcaq010 name="construct.a.page1.pcaq010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq010
            #add-point:ON ACTION controlp INFIELD pcaq010 name="construct.c.page1.pcaq010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq011
            #add-point:BEFORE FIELD pcaq011 name="construct.b.page1.pcaq011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq011
            
            #add-point:AFTER FIELD pcaq011 name="construct.a.page1.pcaq011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq011
            #add-point:ON ACTION controlp INFIELD pcaq011 name="construct.c.page1.pcaq011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq013
            #add-point:BEFORE FIELD pcaq013 name="construct.b.page1.pcaq013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq013
            
            #add-point:AFTER FIELD pcaq013 name="construct.a.page1.pcaq013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq013
            #add-point:ON ACTION controlp INFIELD pcaq013 name="construct.c.page1.pcaq013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq014
            #add-point:BEFORE FIELD pcaq014 name="construct.b.page1.pcaq014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq014
            
            #add-point:AFTER FIELD pcaq014 name="construct.a.page1.pcaq014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pcaq014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq014
            #add-point:ON ACTION controlp INFIELD pcaq014 name="construct.c.page1.pcaq014"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "pcap_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "pcaq_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION apct500_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pcapsite,pcapdocdt,pcapdocno,pcap001,pcap002,pcap003
                          FROM s_browse[1].b_pcapsite,s_browse[1].b_pcapdocdt,s_browse[1].b_pcapdocno, 
                              s_browse[1].b_pcap001,s_browse[1].b_pcap002,s_browse[1].b_pcap003
 
         BEFORE CONSTRUCT
               DISPLAY apct500_filter_parser('pcapsite') TO s_browse[1].b_pcapsite
            DISPLAY apct500_filter_parser('pcapdocdt') TO s_browse[1].b_pcapdocdt
            DISPLAY apct500_filter_parser('pcapdocno') TO s_browse[1].b_pcapdocno
            DISPLAY apct500_filter_parser('pcap001') TO s_browse[1].b_pcap001
            DISPLAY apct500_filter_parser('pcap002') TO s_browse[1].b_pcap002
            DISPLAY apct500_filter_parser('pcap003') TO s_browse[1].b_pcap003
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL apct500_filter_show('pcapsite')
   CALL apct500_filter_show('pcapdocdt')
   CALL apct500_filter_show('pcapdocno')
   CALL apct500_filter_show('pcap001')
   CALL apct500_filter_show('pcap002')
   CALL apct500_filter_show('pcap003')
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION apct500_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION apct500_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apct500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apct500_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_pcaq_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL apct500_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL apct500_browser_fill("")
      CALL apct500_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL apct500_filter_show('pcapsite')
   CALL apct500_filter_show('pcapdocdt')
   CALL apct500_filter_show('pcapdocno')
   CALL apct500_filter_show('pcap001')
   CALL apct500_filter_show('pcap002')
   CALL apct500_filter_show('pcap003')
   CALL apct500_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL apct500_fetch("F") 
      #顯示單身筆數
      CALL apct500_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apct500_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_pcap_m.pcapdocno = g_browser[g_current_idx].b_pcapdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apct500_master_referesh USING g_pcap_m.pcapdocno INTO g_pcap_m.pcapsite,g_pcap_m.pcapdocdt, 
       g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus, 
       g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt,g_pcap_m.pcapsite_desc, 
       g_pcap_m.pcap001_desc,g_pcap_m.pcap002_desc,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp_desc,g_pcap_m.pcapcrtid_desc, 
       g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapcnfid_desc
   
   #遮罩相關處理
   LET g_pcap_m_mask_o.* =  g_pcap_m.*
   CALL apct500_pcap_t_mask()
   LET g_pcap_m_mask_n.* =  g_pcap_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apct500_set_act_visible()   
   CALL apct500_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_pcap_m_t.* = g_pcap_m.*
   LET g_pcap_m_o.* = g_pcap_m.*
   
   LET g_data_owner = g_pcap_m.pcapownid      
   LET g_data_dept  = g_pcap_m.pcapowndp
   
   #重新顯示   
   CALL apct500_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.insert" >}
#+ 資料新增
PRIVATE FUNCTION apct500_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_flag        LIKE type_t.chr1
   DEFINE r_success     LIKE type_t.num5
   DEFINE r_doctype     LIKE rtai_t.rtai004
   DEFINE l_insert      LIKE type_t.num5
   DEFINE l_n           LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_pcaq_d.clear()   
 
 
   INITIALIZE g_pcap_m.* TO NULL             #DEFAULT 設定
   
   LET g_pcapdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_pcap_m.pcapownid = g_user
      LET g_pcap_m.pcapowndp = g_dept
      LET g_pcap_m.pcapcrtid = g_user
      LET g_pcap_m.pcapcrtdp = g_dept 
      LET g_pcap_m.pcapcrtdt = cl_get_current()
      LET g_pcap_m.pcapmodid = g_user
      LET g_pcap_m.pcapmoddt = cl_get_current()
      LET g_pcap_m.pcapstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'pcapsite',g_pcap_m.pcapsite)
         RETURNING l_insert,g_pcap_m.pcapsite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_pcap_m.pcapunit = g_pcap_m.pcapsite
      LET g_pcap_m.pcapdocdt = g_today
      LET g_pcap_m.pcap001 = g_user
      LET g_pcap_m.pcap002 = g_dept
      
      #預設單據的單別
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(g_pcap_m.pcapsite,g_prog,'1')
           RETURNING r_success,r_doctype
      LET g_pcap_m.pcapdocno = r_doctype
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pcap_m.pcapsite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pcap_m.pcapsite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_pcap_m.pcapsite_desc

      LET g_pcap_m_t.* = g_pcap_m.*
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_pcap_m_t.* = g_pcap_m.*
      LET g_pcap_m_o.* = g_pcap_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_pcap_m.pcapstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL apct500_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_pcap_m.* TO NULL
         INITIALIZE g_pcaq_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL apct500_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_pcaq_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apct500_set_act_visible()   
   CALL apct500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " pcapent = " ||g_enterprise|| " AND",
                      " pcapdocno = '", g_pcap_m.pcapdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apct500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE apct500_cl
   
   CALL apct500_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE apct500_master_referesh USING g_pcap_m.pcapdocno INTO g_pcap_m.pcapsite,g_pcap_m.pcapdocdt, 
       g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus, 
       g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt,g_pcap_m.pcapsite_desc, 
       g_pcap_m.pcap001_desc,g_pcap_m.pcap002_desc,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp_desc,g_pcap_m.pcapcrtid_desc, 
       g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapcnfid_desc
   
   
   #遮罩相關處理
   LET g_pcap_m_mask_o.* =  g_pcap_m.*
   CALL apct500_pcap_t_mask()
   LET g_pcap_m_mask_n.* =  g_pcap_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapsite_desc,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003, 
       g_pcap_m.pcap001,g_pcap_m.pcap001_desc,g_pcap_m.pcap002,g_pcap_m.pcap002_desc,g_pcap_m.pcapunit, 
       g_pcap_m.pcapstus,g_pcap_m.pcapownid,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp,g_pcap_m.pcapowndp_desc, 
       g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtid_desc,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfid_desc, 
       g_pcap_m.pcapcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_pcap_m.pcapownid      
   LET g_data_dept  = g_pcap_m.pcapowndp
   
   #功能已完成,通報訊息中心
   CALL apct500_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.modify" >}
#+ 資料修改
PRIVATE FUNCTION apct500_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_pcap_m_t.* = g_pcap_m.*
   LET g_pcap_m_o.* = g_pcap_m.*
   
   IF g_pcap_m.pcapdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
   CALL s_transaction_begin()
   
   OPEN apct500_cl USING g_enterprise,g_pcap_m.pcapdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apct500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE apct500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apct500_master_referesh USING g_pcap_m.pcapdocno INTO g_pcap_m.pcapsite,g_pcap_m.pcapdocdt, 
       g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus, 
       g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt,g_pcap_m.pcapsite_desc, 
       g_pcap_m.pcap001_desc,g_pcap_m.pcap002_desc,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp_desc,g_pcap_m.pcapcrtid_desc, 
       g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapcnfid_desc
   
   #檢查是否允許此動作
   IF NOT apct500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pcap_m_mask_o.* =  g_pcap_m.*
   CALL apct500_pcap_t_mask()
   LET g_pcap_m_mask_n.* =  g_pcap_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL apct500_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_pcap_m.pcapmodid = g_user 
LET g_pcap_m.pcapmoddt = cl_get_current()
LET g_pcap_m.pcapmodid_desc = cl_get_username(g_pcap_m.pcapmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL apct500_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE pcap_t SET (pcapmodid,pcapmoddt) = (g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt)
          WHERE pcapent = g_enterprise AND pcapdocno = g_pcapdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_pcap_m.* = g_pcap_m_t.*
            CALL apct500_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_pcap_m.pcapdocno != g_pcap_m_t.pcapdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE pcaq_t SET pcaqdocno = g_pcap_m.pcapdocno
 
          WHERE pcaqent = g_enterprise AND pcaqdocno = g_pcap_m_t.pcapdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "pcaq_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pcaq_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apct500_set_act_visible()   
   CALL apct500_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " pcapent = " ||g_enterprise|| " AND",
                      " pcapdocno = '", g_pcap_m.pcapdocno, "' "
 
   #填到對應位置
   CALL apct500_browser_fill("")
 
   CLOSE apct500_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apct500_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="apct500.input" >}
#+ 資料輸入
PRIVATE FUNCTION apct500_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapsite_desc,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003, 
       g_pcap_m.pcap001,g_pcap_m.pcap001_desc,g_pcap_m.pcap002,g_pcap_m.pcap002_desc,g_pcap_m.pcapunit, 
       g_pcap_m.pcapstus,g_pcap_m.pcapownid,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp,g_pcap_m.pcapowndp_desc, 
       g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtid_desc,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfid_desc, 
       g_pcap_m.pcapcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT pcaqseq,pcaqsite,pcaqunit,pcaq001,pcaq015,pcaq012,pcaq003,pcaq002,pcaq007, 
       pcaq006,pcaq004,pcaq005,pcaq016,pcaq008,pcaq009,pcaq010,pcaq011,pcaq013,pcaq014 FROM pcaq_t WHERE  
       pcaqent=? AND pcaqdocno=? AND pcaqseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apct500_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apct500_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL apct500_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001, 
       g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="apct500.input.head" >}
      #單頭段
      INPUT BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001, 
          g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN apct500_cl USING g_enterprise,g_pcap_m.pcapdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apct500_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE apct500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL apct500_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL apct500_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapsite
            
            #add-point:AFTER FIELD pcapsite name="input.a.pcapsite"
            IF NOT cl_null(g_pcap_m.pcapsite) THEN
               CALL s_aooi500_chk(g_prog,'pcapsite',g_pcap_m.pcapsite,g_pcap_m.pcapsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_pcap_m.pcapsite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_pcap_m.pcapsite = g_pcap_m_t.pcapsite
                  CALL s_desc_get_department_desc(g_pcap_m.pcapsite) RETURNING g_pcap_m.pcapsite_desc
                  DISPLAY BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapsite_desc
                  NEXT FIELD CURRENT
               END IF

               LET g_site_flag = TRUE
               CALL apct500_set_entry(p_cmd)
               CALL apct500_set_no_entry(p_cmd)
            END IF
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcap_m.pcapsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pcap_m.pcapsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcap_m.pcapsite_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapsite
            #add-point:BEFORE FIELD pcapsite name="input.b.pcapsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcapsite
            #add-point:ON CHANGE pcapsite name="input.g.pcapsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapdocdt
            #add-point:BEFORE FIELD pcapdocdt name="input.b.pcapdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapdocdt
            
            #add-point:AFTER FIELD pcapdocdt name="input.a.pcapdocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcapdocdt
            #add-point:ON CHANGE pcapdocdt name="input.g.pcapdocdt"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapdocno
            
            #add-point:AFTER FIELD pcapdocno name="input.a.pcapdocno"
            IF NOT cl_null(g_pcap_m.pcapdocno) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               CALL s_aooi100_sel_ooef004(g_pcap_m.pcapsite)
                    RETURNING l_success,l_ooef004
               LET g_chkparam.arg1 = l_ooef004
               LET g_chkparam.arg2 = g_pcap_m.pcapdocno
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooba002") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_pcap_m.pcapdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pcap_m.pcapdocno != g_pcapdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pcap_t WHERE "||"pcapent = '" ||g_enterprise|| "' AND "||"pcapdocno = '"||g_pcap_m.pcapdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapdocno
            #add-point:BEFORE FIELD pcapdocno name="input.b.pcapdocno"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcapdocno
            #add-point:ON CHANGE pcapdocno name="input.g.pcapdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcap003
            #add-point:BEFORE FIELD pcap003 name="input.b.pcap003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcap003
            
            #add-point:AFTER FIELD pcap003 name="input.a.pcap003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcap003
            #add-point:ON CHANGE pcap003 name="input.g.pcap003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcap001
            
            #add-point:AFTER FIELD pcap001 name="input.a.pcap001"
            IF NOT cl_null(g_pcap_m.pcap001) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#31  add
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pcap_m.pcap001
               LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"#要執行的建議程式待補 #160318-00025#31  add
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcap001
            #add-point:BEFORE FIELD pcap001 name="input.b.pcap001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcap001
            #add-point:ON CHANGE pcap001 name="input.g.pcap001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcap002
            
            #add-point:AFTER FIELD pcap002 name="input.a.pcap002"
            IF NOT cl_null(g_pcap_m.pcap002) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#31  add
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pcap_m.pcap002
               LET g_chkparam.arg2 = g_today
               LET g_chkparam.err_str[1] = "aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"  #160318-00025#31  add
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcap002
            #add-point:BEFORE FIELD pcap002 name="input.b.pcap002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcap002
            #add-point:ON CHANGE pcap002 name="input.g.pcap002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapunit
            #add-point:BEFORE FIELD pcapunit name="input.b.pcapunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapunit
            
            #add-point:AFTER FIELD pcapunit name="input.a.pcapunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcapunit
            #add-point:ON CHANGE pcapunit name="input.g.pcapunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcapstus
            #add-point:BEFORE FIELD pcapstus name="input.b.pcapstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcapstus
            
            #add-point:AFTER FIELD pcapstus name="input.a.pcapstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcapstus
            #add-point:ON CHANGE pcapstus name="input.g.pcapstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.pcapsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapsite
            #add-point:ON ACTION controlp INFIELD pcapsite name="input.c.pcapsite"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pcap_m.pcapsite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pcapsite',g_pcap_m.pcapsite,'i')
            CALL q_ooef001_24()                                #呼叫開窗

            LET g_pcap_m.pcapsite = g_qryparam.return1              

            DISPLAY g_pcap_m.pcapsite TO pcapsite              #

            NEXT FIELD pcapsite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.pcapdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapdocdt
            #add-point:ON ACTION controlp INFIELD pcapdocdt name="input.c.pcapdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.pcapdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapdocno
            #add-point:ON ACTION controlp INFIELD pcapdocno name="input.c.pcapdocno"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pcap_m.pcapdocno             #給予default值

            #給予arg
            CALL s_aooi100_sel_ooef004(g_pcap_m.pcapsite)
               RETURNING l_success,l_ooef004
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_pcap_m.pcapdocno = g_qryparam.return1              

            DISPLAY g_pcap_m.pcapdocno TO pcapdocno              #

            NEXT FIELD pcapdocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.pcap003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcap003
            #add-point:ON ACTION controlp INFIELD pcap003 name="input.c.pcap003"
            
            #END add-point
 
 
         #Ctrlp:input.c.pcap001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcap001
            #add-point:ON ACTION controlp INFIELD pcap001 name="input.c.pcap001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pcap_m.pcap001             #給予default值
            LET g_qryparam.default2 = "" #g_pcap_m.ooag003 #归属部门
            LET g_qryparam.default3 = "" #g_pcap_m.ooefl003 #說明(簡稱)
            LET g_qryparam.default4 = "" #g_pcap_m.ooag011 #全名
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooag001_6()                                #呼叫開窗

            LET g_pcap_m.pcap001 = g_qryparam.return1              
            #LET g_pcap_m.ooag003 = g_qryparam.return2 
            #LET g_pcap_m.ooefl003 = g_qryparam.return3 
            #LET g_pcap_m.ooag011 = g_qryparam.return4 
            DISPLAY g_pcap_m.pcap001 TO pcap001              #
            #DISPLAY g_pcap_m.ooag003 TO ooag003 #归属部门
            #DISPLAY g_pcap_m.ooefl003 TO ooefl003 #說明(簡稱)
            #DISPLAY g_pcap_m.ooag011 TO ooag011 #全名
            NEXT FIELD pcap001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.pcap002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcap002
            #add-point:ON ACTION controlp INFIELD pcap002 name="input.c.pcap002"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pcap_m.pcap002             #給予default值
            LET g_qryparam.default2 = "" #g_pcap_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooeg001()                                #呼叫開窗

            LET g_pcap_m.pcap002 = g_qryparam.return1              
            #LET g_pcap_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_pcap_m.pcap002 TO pcap002              #
            #DISPLAY g_pcap_m.ooeg001 TO ooeg001 #部門編號
            NEXT FIELD pcap002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.pcapunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapunit
            #add-point:ON ACTION controlp INFIELD pcapunit name="input.c.pcapunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.pcapstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcapstus
            #add-point:ON ACTION controlp INFIELD pcapstus name="input.c.pcapstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_pcap_m.pcapdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_pcap_m.pcapsite,g_pcap_m.pcapdocno,g_pcap_m.pcapdocdt,g_prog) RETURNING l_flag,g_pcap_m.pcapdocno
               IF NOT l_flag THEN
                  NEXT FIELD pcapdocno
               END IF
               #end add-point
               
               INSERT INTO pcap_t (pcapent,pcapsite,pcapdocdt,pcapdocno,pcap003,pcap001,pcap002,pcapunit, 
                   pcapstus,pcapownid,pcapowndp,pcapcrtid,pcapcrtdp,pcapcrtdt,pcapmodid,pcapmoddt,pcapcnfid, 
                   pcapcnfdt)
               VALUES (g_enterprise,g_pcap_m.pcapsite,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003, 
                   g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus,g_pcap_m.pcapownid, 
                   g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt,g_pcap_m.pcapmodid, 
                   g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_pcap_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apct500_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL apct500_b_fill()
                  CALL apct500_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL apct500_pcap_t_mask_restore('restore_mask_o')
               
               UPDATE pcap_t SET (pcapsite,pcapdocdt,pcapdocno,pcap003,pcap001,pcap002,pcapunit,pcapstus, 
                   pcapownid,pcapowndp,pcapcrtid,pcapcrtdp,pcapcrtdt,pcapmodid,pcapmoddt,pcapcnfid,pcapcnfdt) = (g_pcap_m.pcapsite, 
                   g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002, 
                   g_pcap_m.pcapunit,g_pcap_m.pcapstus,g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid, 
                   g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt,g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid, 
                   g_pcap_m.pcapcnfdt)
                WHERE pcapent = g_enterprise AND pcapdocno = g_pcapdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "pcap_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL apct500_pcap_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_pcap_m_t)
               LET g_log2 = util.JSON.stringify(g_pcap_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="apct500.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_pcaq_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pcaq_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apct500_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_pcaq_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apct500_cl USING g_enterprise,g_pcap_m.pcapdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apct500_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE apct500_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_pcaq_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pcaq_d[l_ac].pcaqseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_pcaq_d_t.* = g_pcaq_d[l_ac].*  #BACKUP
               LET g_pcaq_d_o.* = g_pcaq_d[l_ac].*  #BACKUP
               CALL apct500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL apct500_set_no_entry_b(l_cmd)
               IF NOT apct500_lock_b("pcaq_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apct500_bcl INTO g_pcaq_d[l_ac].pcaqseq,g_pcaq_d[l_ac].pcaqsite,g_pcaq_d[l_ac].pcaqunit, 
                      g_pcaq_d[l_ac].pcaq001,g_pcaq_d[l_ac].pcaq015,g_pcaq_d[l_ac].pcaq012,g_pcaq_d[l_ac].pcaq003, 
                      g_pcaq_d[l_ac].pcaq002,g_pcaq_d[l_ac].pcaq007,g_pcaq_d[l_ac].pcaq006,g_pcaq_d[l_ac].pcaq004, 
                      g_pcaq_d[l_ac].pcaq005,g_pcaq_d[l_ac].pcaq016,g_pcaq_d[l_ac].pcaq008,g_pcaq_d[l_ac].pcaq009, 
                      g_pcaq_d[l_ac].pcaq010,g_pcaq_d[l_ac].pcaq011,g_pcaq_d[l_ac].pcaq013,g_pcaq_d[l_ac].pcaq014 
 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_pcaq_d_t.pcaqseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pcaq_d_mask_o[l_ac].* =  g_pcaq_d[l_ac].*
                  CALL apct500_pcaq_t_mask()
                  LET g_pcaq_d_mask_n[l_ac].* =  g_pcaq_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apct500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pcaq_d[l_ac].* TO NULL 
            INITIALIZE g_pcaq_d_t.* TO NULL 
            INITIALIZE g_pcaq_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_pcaq_d[l_ac].pcaqseq = "0"
      LET g_pcaq_d[l_ac].pcaq011 = "0"
      LET g_pcaq_d[l_ac].pcaq013 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_pcaq_d_t.* = g_pcaq_d[l_ac].*     #新輸入資料
            LET g_pcaq_d_o.* = g_pcaq_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apct500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL apct500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pcaq_d[li_reproduce_target].* = g_pcaq_d[li_reproduce].*
 
               LET g_pcaq_d[li_reproduce_target].pcaqseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM pcaq_t 
             WHERE pcaqent = g_enterprise AND pcaqdocno = g_pcap_m.pcapdocno
 
               AND pcaqseq = g_pcaq_d[l_ac].pcaqseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcap_m.pcapdocno
               LET gs_keys[2] = g_pcaq_d[g_detail_idx].pcaqseq
               CALL apct500_insert_b('pcaq_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_pcaq_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pcaq_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apct500_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pcap_m.pcapdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_pcaq_d_t.pcaqseq
 
            
               #刪除同層單身
               IF NOT apct500_delete_b('pcaq_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apct500_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apct500_key_delete_b(gs_keys,'pcaq_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apct500_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE apct500_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_pcaq_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pcaq_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaqseq
            #add-point:BEFORE FIELD pcaqseq name="input.b.page1.pcaqseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaqseq
            
            #add-point:AFTER FIELD pcaqseq name="input.a.page1.pcaqseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_pcap_m.pcapdocno IS NOT NULL AND g_pcaq_d[g_detail_idx].pcaqseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pcap_m.pcapdocno != g_pcapdocno_t OR g_pcaq_d[g_detail_idx].pcaqseq != g_pcaq_d_t.pcaqseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pcaq_t WHERE "||"pcaqent = '" ||g_enterprise|| "' AND "||"pcaqdocno = '"||g_pcap_m.pcapdocno ||"' AND "|| "pcaqseq = '"||g_pcaq_d[g_detail_idx].pcaqseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaqseq
            #add-point:ON CHANGE pcaqseq name="input.g.page1.pcaqseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaqsite
            
            #add-point:AFTER FIELD pcaqsite name="input.a.page1.pcaqsite"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcaq_d[l_ac].pcaqsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pcaq_d[l_ac].pcaqsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcaq_d[l_ac].pcaqsite_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaqsite
            #add-point:BEFORE FIELD pcaqsite name="input.b.page1.pcaqsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaqsite
            #add-point:ON CHANGE pcaqsite name="input.g.page1.pcaqsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaqunit
            #add-point:BEFORE FIELD pcaqunit name="input.b.page1.pcaqunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaqunit
            
            #add-point:AFTER FIELD pcaqunit name="input.a.page1.pcaqunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaqunit
            #add-point:ON CHANGE pcaqunit name="input.g.page1.pcaqunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq001
            #add-point:BEFORE FIELD pcaq001 name="input.b.page1.pcaq001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq001
            
            #add-point:AFTER FIELD pcaq001 name="input.a.page1.pcaq001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq001
            #add-point:ON CHANGE pcaq001 name="input.g.page1.pcaq001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq015
            #add-point:BEFORE FIELD pcaq015 name="input.b.page1.pcaq015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq015
            
            #add-point:AFTER FIELD pcaq015 name="input.a.page1.pcaq015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq015
            #add-point:ON CHANGE pcaq015 name="input.g.page1.pcaq015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq012
            
            #add-point:AFTER FIELD pcaq012 name="input.a.page1.pcaq012"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pcaq_d[l_ac].pcaq012
            CALL ap_ref_array2(g_ref_fields,"SELECT pcaal003 FROM pcaal_t WHERE pcaalent='"||g_enterprise||"' AND pcaal001=? AND pcaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pcaq_d[l_ac].pcaq012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pcaq_d[l_ac].pcaq012_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq012
            #add-point:BEFORE FIELD pcaq012 name="input.b.page1.pcaq012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq012
            #add-point:ON CHANGE pcaq012 name="input.g.page1.pcaq012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq003
            #add-point:BEFORE FIELD pcaq003 name="input.b.page1.pcaq003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq003
            
            #add-point:AFTER FIELD pcaq003 name="input.a.page1.pcaq003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq003
            #add-point:ON CHANGE pcaq003 name="input.g.page1.pcaq003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq002
            #add-point:BEFORE FIELD pcaq002 name="input.b.page1.pcaq002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq002
            
            #add-point:AFTER FIELD pcaq002 name="input.a.page1.pcaq002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq002
            #add-point:ON CHANGE pcaq002 name="input.g.page1.pcaq002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq007
            #add-point:BEFORE FIELD pcaq007 name="input.b.page1.pcaq007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq007
            
            #add-point:AFTER FIELD pcaq007 name="input.a.page1.pcaq007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq007
            #add-point:ON CHANGE pcaq007 name="input.g.page1.pcaq007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq006
            #add-point:BEFORE FIELD pcaq006 name="input.b.page1.pcaq006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq006
            
            #add-point:AFTER FIELD pcaq006 name="input.a.page1.pcaq006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq006
            #add-point:ON CHANGE pcaq006 name="input.g.page1.pcaq006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq004
            #add-point:BEFORE FIELD pcaq004 name="input.b.page1.pcaq004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq004
            
            #add-point:AFTER FIELD pcaq004 name="input.a.page1.pcaq004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq004
            #add-point:ON CHANGE pcaq004 name="input.g.page1.pcaq004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq005
            #add-point:BEFORE FIELD pcaq005 name="input.b.page1.pcaq005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq005
            
            #add-point:AFTER FIELD pcaq005 name="input.a.page1.pcaq005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq005
            #add-point:ON CHANGE pcaq005 name="input.g.page1.pcaq005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq016
            #add-point:BEFORE FIELD pcaq016 name="input.b.page1.pcaq016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq016
            
            #add-point:AFTER FIELD pcaq016 name="input.a.page1.pcaq016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq016
            #add-point:ON CHANGE pcaq016 name="input.g.page1.pcaq016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq008
            #add-point:BEFORE FIELD pcaq008 name="input.b.page1.pcaq008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq008
            
            #add-point:AFTER FIELD pcaq008 name="input.a.page1.pcaq008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq008
            #add-point:ON CHANGE pcaq008 name="input.g.page1.pcaq008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq009
            #add-point:BEFORE FIELD pcaq009 name="input.b.page1.pcaq009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq009
            
            #add-point:AFTER FIELD pcaq009 name="input.a.page1.pcaq009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq009
            #add-point:ON CHANGE pcaq009 name="input.g.page1.pcaq009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq010
            #add-point:BEFORE FIELD pcaq010 name="input.b.page1.pcaq010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq010
            
            #add-point:AFTER FIELD pcaq010 name="input.a.page1.pcaq010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq010
            #add-point:ON CHANGE pcaq010 name="input.g.page1.pcaq010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq011
            #add-point:BEFORE FIELD pcaq011 name="input.b.page1.pcaq011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq011
            
            #add-point:AFTER FIELD pcaq011 name="input.a.page1.pcaq011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq011
            #add-point:ON CHANGE pcaq011 name="input.g.page1.pcaq011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq013
            #add-point:BEFORE FIELD pcaq013 name="input.b.page1.pcaq013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq013
            
            #add-point:AFTER FIELD pcaq013 name="input.a.page1.pcaq013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq013
            #add-point:ON CHANGE pcaq013 name="input.g.page1.pcaq013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pcaq014
            #add-point:BEFORE FIELD pcaq014 name="input.b.page1.pcaq014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pcaq014
            
            #add-point:AFTER FIELD pcaq014 name="input.a.page1.pcaq014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pcaq014
            #add-point:ON CHANGE pcaq014 name="input.g.page1.pcaq014"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.pcaqseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaqseq
            #add-point:ON ACTION controlp INFIELD pcaqseq name="input.c.page1.pcaqseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaqsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaqsite
            #add-point:ON ACTION controlp INFIELD pcaqsite name="input.c.page1.pcaqsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaqunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaqunit
            #add-point:ON ACTION controlp INFIELD pcaqunit name="input.c.page1.pcaqunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq001
            #add-point:ON ACTION controlp INFIELD pcaq001 name="input.c.page1.pcaq001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq015
            #add-point:ON ACTION controlp INFIELD pcaq015 name="input.c.page1.pcaq015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq012
            #add-point:ON ACTION controlp INFIELD pcaq012 name="input.c.page1.pcaq012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq003
            #add-point:ON ACTION controlp INFIELD pcaq003 name="input.c.page1.pcaq003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq002
            #add-point:ON ACTION controlp INFIELD pcaq002 name="input.c.page1.pcaq002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq007
            #add-point:ON ACTION controlp INFIELD pcaq007 name="input.c.page1.pcaq007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq006
            #add-point:ON ACTION controlp INFIELD pcaq006 name="input.c.page1.pcaq006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq004
            #add-point:ON ACTION controlp INFIELD pcaq004 name="input.c.page1.pcaq004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq005
            #add-point:ON ACTION controlp INFIELD pcaq005 name="input.c.page1.pcaq005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq016
            #add-point:ON ACTION controlp INFIELD pcaq016 name="input.c.page1.pcaq016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq008
            #add-point:ON ACTION controlp INFIELD pcaq008 name="input.c.page1.pcaq008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq009
            #add-point:ON ACTION controlp INFIELD pcaq009 name="input.c.page1.pcaq009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq010
            #add-point:ON ACTION controlp INFIELD pcaq010 name="input.c.page1.pcaq010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq011
            #add-point:ON ACTION controlp INFIELD pcaq011 name="input.c.page1.pcaq011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq013
            #add-point:ON ACTION controlp INFIELD pcaq013 name="input.c.page1.pcaq013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pcaq014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pcaq014
            #add-point:ON ACTION controlp INFIELD pcaq014 name="input.c.page1.pcaq014"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_pcaq_d[l_ac].* = g_pcaq_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE apct500_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_pcaq_d[l_ac].pcaqseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pcaq_d[l_ac].* = g_pcaq_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL apct500_pcaq_t_mask_restore('restore_mask_o')
      
               UPDATE pcaq_t SET (pcaqdocno,pcaqseq,pcaqsite,pcaqunit,pcaq001,pcaq015,pcaq012,pcaq003, 
                   pcaq002,pcaq007,pcaq006,pcaq004,pcaq005,pcaq016,pcaq008,pcaq009,pcaq010,pcaq011,pcaq013, 
                   pcaq014) = (g_pcap_m.pcapdocno,g_pcaq_d[l_ac].pcaqseq,g_pcaq_d[l_ac].pcaqsite,g_pcaq_d[l_ac].pcaqunit, 
                   g_pcaq_d[l_ac].pcaq001,g_pcaq_d[l_ac].pcaq015,g_pcaq_d[l_ac].pcaq012,g_pcaq_d[l_ac].pcaq003, 
                   g_pcaq_d[l_ac].pcaq002,g_pcaq_d[l_ac].pcaq007,g_pcaq_d[l_ac].pcaq006,g_pcaq_d[l_ac].pcaq004, 
                   g_pcaq_d[l_ac].pcaq005,g_pcaq_d[l_ac].pcaq016,g_pcaq_d[l_ac].pcaq008,g_pcaq_d[l_ac].pcaq009, 
                   g_pcaq_d[l_ac].pcaq010,g_pcaq_d[l_ac].pcaq011,g_pcaq_d[l_ac].pcaq013,g_pcaq_d[l_ac].pcaq014) 
 
                WHERE pcaqent = g_enterprise AND pcaqdocno = g_pcap_m.pcapdocno 
 
                  AND pcaqseq = g_pcaq_d_t.pcaqseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_pcaq_d[l_ac].* = g_pcaq_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pcaq_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_pcaq_d[l_ac].* = g_pcaq_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pcaq_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pcap_m.pcapdocno
               LET gs_keys_bak[1] = g_pcapdocno_t
               LET gs_keys[2] = g_pcaq_d[g_detail_idx].pcaqseq
               LET gs_keys_bak[2] = g_pcaq_d_t.pcaqseq
               CALL apct500_update_b('pcaq_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL apct500_pcaq_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_pcaq_d[g_detail_idx].pcaqseq = g_pcaq_d_t.pcaqseq 
 
                  ) THEN
                  LET gs_keys[01] = g_pcap_m.pcapdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_pcaq_d_t.pcaqseq
 
                  CALL apct500_key_update_b(gs_keys,'pcaq_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pcap_m),util.JSON.stringify(g_pcaq_d_t)
               LET g_log2 = util.JSON.stringify(g_pcap_m),util.JSON.stringify(g_pcaq_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL apct500_unlock_b("pcaq_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_pcaq_d[li_reproduce_target].* = g_pcaq_d[li_reproduce].*
 
               LET g_pcaq_d[li_reproduce_target].pcaqseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_pcaq_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_pcaq_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="apct500.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD pcapdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pcaqseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apct500_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL apct500_b_fill() #單身填充
      CALL apct500_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL apct500_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   
   #end add-point
   
   #遮罩相關處理
   LET g_pcap_m_mask_o.* =  g_pcap_m.*
   CALL apct500_pcap_t_mask()
   LET g_pcap_m_mask_n.* =  g_pcap_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapsite_desc,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003, 
       g_pcap_m.pcap001,g_pcap_m.pcap001_desc,g_pcap_m.pcap002,g_pcap_m.pcap002_desc,g_pcap_m.pcapunit, 
       g_pcap_m.pcapstus,g_pcap_m.pcapownid,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp,g_pcap_m.pcapowndp_desc, 
       g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtid_desc,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfid_desc, 
       g_pcap_m.pcapcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_pcap_m.pcapstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_pcaq_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apct500_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION apct500_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION apct500_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE pcap_t.pcapdocno 
   DEFINE l_oldno     LIKE pcap_t.pcapdocno 
 
   DEFINE l_master    RECORD LIKE pcap_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE pcaq_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_pcap_m.pcapdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
    
   LET g_pcap_m.pcapdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_pcap_m.pcapownid = g_user
      LET g_pcap_m.pcapowndp = g_dept
      LET g_pcap_m.pcapcrtid = g_user
      LET g_pcap_m.pcapcrtdp = g_dept 
      LET g_pcap_m.pcapcrtdt = cl_get_current()
      LET g_pcap_m.pcapmodid = g_user
      LET g_pcap_m.pcapmoddt = cl_get_current()
      LET g_pcap_m.pcapstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_pcap_m.pcapstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL apct500_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_pcap_m.* TO NULL
      INITIALIZE g_pcaq_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL apct500_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apct500_set_act_visible()   
   CALL apct500_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " pcapent = " ||g_enterprise|| " AND",
                      " pcapdocno = '", g_pcap_m.pcapdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apct500_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL apct500_idx_chk()
   
   LET g_data_owner = g_pcap_m.pcapownid      
   LET g_data_dept  = g_pcap_m.pcapowndp
   
   #功能已完成,通報訊息中心
   CALL apct500_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION apct500_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pcaq_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apct500_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM pcaq_t
    WHERE pcaqent = g_enterprise AND pcaqdocno = g_pcapdocno_t
 
    INTO TEMP apct500_detail
 
   #將key修正為調整後   
   UPDATE apct500_detail 
      #更新key欄位
      SET pcaqdocno = g_pcap_m.pcapdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO pcaq_t SELECT * FROM apct500_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apct500_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.delete" >}
#+ 資料刪除
PRIVATE FUNCTION apct500_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_pcap_m.pcapdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN apct500_cl USING g_enterprise,g_pcap_m.pcapdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apct500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE apct500_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apct500_master_referesh USING g_pcap_m.pcapdocno INTO g_pcap_m.pcapsite,g_pcap_m.pcapdocdt, 
       g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus, 
       g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt,g_pcap_m.pcapsite_desc, 
       g_pcap_m.pcap001_desc,g_pcap_m.pcap002_desc,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp_desc,g_pcap_m.pcapcrtid_desc, 
       g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT apct500_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pcap_m_mask_o.* =  g_pcap_m.*
   CALL apct500_pcap_t_mask()
   LET g_pcap_m_mask_n.* =  g_pcap_m.*
   
   CALL apct500_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL apct500_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_pcapdocno_t = g_pcap_m.pcapdocno
 
 
      DELETE FROM pcap_t
       WHERE pcapent = g_enterprise AND pcapdocno = g_pcap_m.pcapdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_pcap_m.pcapdocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_del_docno(g_pcap_m.pcapdocno,g_pcap_m.pcapdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM pcaq_t
       WHERE pcaqent = g_enterprise AND pcaqdocno = g_pcap_m.pcapdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pcaq_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE apct500_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_pcaq_d.clear() 
 
     
      CALL apct500_ui_browser_refresh()  
      #CALL apct500_ui_headershow()  
      #CALL apct500_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL apct500_browser_fill("")
         CALL apct500_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE apct500_cl
 
   #功能已完成,通報訊息中心
   CALL apct500_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="apct500.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apct500_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE ls_sql     STRING
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_pcaq_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF apct500_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT pcaqseq,pcaqsite,pcaqunit,pcaq001,pcaq015,pcaq012,pcaq003,pcaq002, 
             pcaq007,pcaq006,pcaq004,pcaq005,pcaq016,pcaq008,pcaq009,pcaq010,pcaq011,pcaq013,pcaq014 , 
             t1.ooefl003 ,t2.pcaal003 FROM pcaq_t",   
                     " INNER JOIN pcap_t ON pcapent = " ||g_enterprise|| " AND pcapdocno = pcaqdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=pcaqsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pcaal_t t2 ON t2.pcaalent="||g_enterprise||" AND t2.pcaal001=pcaq012 AND t2.pcaal002='"||g_dlang||"' ",
 
                     " WHERE pcaqent=? AND pcaqdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pcaq_t.pcaqseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apct500_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR apct500_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_pcap_m.pcapdocno
                                               
      FOREACH b_fill_cs INTO g_pcaq_d[l_ac].pcaqseq,g_pcaq_d[l_ac].pcaqsite,g_pcaq_d[l_ac].pcaqunit, 
          g_pcaq_d[l_ac].pcaq001,g_pcaq_d[l_ac].pcaq015,g_pcaq_d[l_ac].pcaq012,g_pcaq_d[l_ac].pcaq003, 
          g_pcaq_d[l_ac].pcaq002,g_pcaq_d[l_ac].pcaq007,g_pcaq_d[l_ac].pcaq006,g_pcaq_d[l_ac].pcaq004, 
          g_pcaq_d[l_ac].pcaq005,g_pcaq_d[l_ac].pcaq016,g_pcaq_d[l_ac].pcaq008,g_pcaq_d[l_ac].pcaq009, 
          g_pcaq_d[l_ac].pcaq010,g_pcaq_d[l_ac].pcaq011,g_pcaq_d[l_ac].pcaq013,g_pcaq_d[l_ac].pcaq014, 
          g_pcaq_d[l_ac].pcaqsite_desc,g_pcaq_d[l_ac].pcaq012_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_pcaq_d[l_ac].pcaqsite
         CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_pcaq_d[l_ac].pcaqsite_desc = '', g_rtn_fields[1] , ''
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_pcaq_d[l_ac].pcaq012
         LET ls_sql = "SELECT pcaal003 FROM pcaal_t WHERE pcaalent='"||g_enterprise||"' AND pcaal001=? AND pcaal002='"||g_dlang||"'"
         LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
         CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
         LET g_pcaq_d[l_ac].pcaq012_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_pcaq_d[l_ac].pcaq012_desc
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_pcaq_d.deleteElement(g_pcaq_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apct500_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_pcaq_d.getLength()
      LET g_pcaq_d_mask_o[l_ac].* =  g_pcaq_d[l_ac].*
      CALL apct500_pcaq_t_mask()
      LET g_pcaq_d_mask_n[l_ac].* =  g_pcaq_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION apct500_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM pcaq_t
       WHERE pcaqent = g_enterprise AND
         pcaqdocno = ps_keys_bak[1] AND pcaqseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pcaq_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION apct500_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO pcaq_t
                  (pcaqent,
                   pcaqdocno,
                   pcaqseq
                   ,pcaqsite,pcaqunit,pcaq001,pcaq015,pcaq012,pcaq003,pcaq002,pcaq007,pcaq006,pcaq004,pcaq005,pcaq016,pcaq008,pcaq009,pcaq010,pcaq011,pcaq013,pcaq014) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_pcaq_d[g_detail_idx].pcaqsite,g_pcaq_d[g_detail_idx].pcaqunit,g_pcaq_d[g_detail_idx].pcaq001, 
                       g_pcaq_d[g_detail_idx].pcaq015,g_pcaq_d[g_detail_idx].pcaq012,g_pcaq_d[g_detail_idx].pcaq003, 
                       g_pcaq_d[g_detail_idx].pcaq002,g_pcaq_d[g_detail_idx].pcaq007,g_pcaq_d[g_detail_idx].pcaq006, 
                       g_pcaq_d[g_detail_idx].pcaq004,g_pcaq_d[g_detail_idx].pcaq005,g_pcaq_d[g_detail_idx].pcaq016, 
                       g_pcaq_d[g_detail_idx].pcaq008,g_pcaq_d[g_detail_idx].pcaq009,g_pcaq_d[g_detail_idx].pcaq010, 
                       g_pcaq_d[g_detail_idx].pcaq011,g_pcaq_d[g_detail_idx].pcaq013,g_pcaq_d[g_detail_idx].pcaq014) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pcaq_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pcaq_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION apct500_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pcaq_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL apct500_pcaq_t_mask_restore('restore_mask_o')
               
      UPDATE pcaq_t 
         SET (pcaqdocno,
              pcaqseq
              ,pcaqsite,pcaqunit,pcaq001,pcaq015,pcaq012,pcaq003,pcaq002,pcaq007,pcaq006,pcaq004,pcaq005,pcaq016,pcaq008,pcaq009,pcaq010,pcaq011,pcaq013,pcaq014) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pcaq_d[g_detail_idx].pcaqsite,g_pcaq_d[g_detail_idx].pcaqunit,g_pcaq_d[g_detail_idx].pcaq001, 
                  g_pcaq_d[g_detail_idx].pcaq015,g_pcaq_d[g_detail_idx].pcaq012,g_pcaq_d[g_detail_idx].pcaq003, 
                  g_pcaq_d[g_detail_idx].pcaq002,g_pcaq_d[g_detail_idx].pcaq007,g_pcaq_d[g_detail_idx].pcaq006, 
                  g_pcaq_d[g_detail_idx].pcaq004,g_pcaq_d[g_detail_idx].pcaq005,g_pcaq_d[g_detail_idx].pcaq016, 
                  g_pcaq_d[g_detail_idx].pcaq008,g_pcaq_d[g_detail_idx].pcaq009,g_pcaq_d[g_detail_idx].pcaq010, 
                  g_pcaq_d[g_detail_idx].pcaq011,g_pcaq_d[g_detail_idx].pcaq013,g_pcaq_d[g_detail_idx].pcaq014)  
 
         WHERE pcaqent = g_enterprise AND pcaqdocno = ps_keys_bak[1] AND pcaqseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pcaq_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pcaq_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apct500_pcaq_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION apct500_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION apct500_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION apct500_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL apct500_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pcaq_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apct500_bcl USING g_enterprise,
                                       g_pcap_m.pcapdocno,g_pcaq_d[g_detail_idx].pcaqseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apct500_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apct500_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apct500_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION apct500_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("pcapdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pcapdocno",TRUE)
      CALL cl_set_comp_entry("pcapdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("pcapsite",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION apct500_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pcapdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("pcapdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("pcapdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'pcapsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("pcapsite",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION apct500_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION apct500_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION apct500_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION apct500_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_pcap_m.pcapstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION apct500_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apct500.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION apct500_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apct500.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION apct500_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pcapdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "pcap_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "pcaq_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION apct500_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success   LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_pcap_m.pcapdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN apct500_cl USING g_enterprise,g_pcap_m.pcapdocno
   IF STATUS THEN
      CLOSE apct500_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apct500_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE apct500_master_referesh USING g_pcap_m.pcapdocno INTO g_pcap_m.pcapsite,g_pcap_m.pcapdocdt, 
       g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus, 
       g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt,g_pcap_m.pcapsite_desc, 
       g_pcap_m.pcap001_desc,g_pcap_m.pcap002_desc,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp_desc,g_pcap_m.pcapcrtid_desc, 
       g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT apct500_action_chk() THEN
      CLOSE apct500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapsite_desc,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno,g_pcap_m.pcap003, 
       g_pcap_m.pcap001,g_pcap_m.pcap001_desc,g_pcap_m.pcap002,g_pcap_m.pcap002_desc,g_pcap_m.pcapunit, 
       g_pcap_m.pcapstus,g_pcap_m.pcapownid,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp,g_pcap_m.pcapowndp_desc, 
       g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtid_desc,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapcrtdt, 
       g_pcap_m.pcapmodid,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfid_desc, 
       g_pcap_m.pcapcnfdt
 
   CASE g_pcap_m.pcapstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_pcap_m.pcapstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_pcap_m.pcapstus = lc_state OR cl_null(lc_state) THEN
      CLOSE apct500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   LET l_success = TRUE
   CASE
      WHEN lc_state = 'Y'
         CALL s_apct500_conf_chk(g_pcap_m.pcapdocno,g_pcap_m.pcapstus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_apct500_conf_upd(g_pcap_m.pcapdocno) RETURNING l_success#,g_errno
               IF NOT l_success THEN
                  #INITIALIZE g_errparam TO NULL
                  #LET g_errparam.code = g_errno
                  #LET g_errparam.extend = g_pcap_m.pcapdocno
                  #LET g_errparam.popup = TRUE
                  #CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160812-00017#1 Add By Ken 160812
               RETURN
            END IF
         ELSE
            CALL s_transaction_end('N','0')   #160812-00017#1 Add By Ken 160812
            RETURN
         END IF
      WHEN lc_state = 'X'
         CALL s_apct500_void_chk(g_pcap_m.pcapdocno,g_pcap_m.pcapstus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('art-00039') THEN
               CALL s_transaction_begin()
               CALL s_apct500_void_upd(g_pcap_m.pcapdocno) RETURNING l_success#,g_errno
               IF NOT l_success THEN
                  #INITIALIZE g_errparam TO NULL
                  #LET g_errparam.code = g_errno
                  #LET g_errparam.extend = g_pcap_m.pcapdocno
                  #LET g_errparam.popup = TRUE
                  #CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160812-00017#1 Add By Ken 160812
               RETURN
            END IF
         ELSE
            CALL s_transaction_end('N','0')   #160812-00017#1 Add By Ken 160812
            RETURN
         END IF
      WHEN lc_state = 'N'
         CALL s_apct500_unconf_chk(g_pcap_m.pcapdocno,g_pcap_m.pcapstus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('aim-00110') THEN
               CALL s_transaction_begin()
               CALL s_apct500_unconf_upd(g_pcap_m.pcapdocno) RETURNING l_success#,g_errno
               IF NOT l_success THEN
                  #INITIALIZE g_errparam TO NULL
                  #LET g_errparam.code = g_errno
                  #LET g_errparam.extend = g_pcap_m.pcapdocno
                  #LET g_errparam.popup = TRUE
                  #CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')   #160812-00017#1 Add By Ken 160812
               RETURN
            END IF
         ELSE
            CALL s_transaction_end('N','0')   #160812-00017#1 Add By Ken 160812
            RETURN
         END IF
      OTHERWISE
         CALL s_transaction_end('N','0')   #160812-00017#1 Add By Ken 160812
         RETURN
   END CASE
   #end add-point
   
   LET g_pcap_m.pcapmodid = g_user
   LET g_pcap_m.pcapmoddt = cl_get_current()
   LET g_pcap_m.pcapstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE pcap_t 
      SET (pcapstus,pcapmodid,pcapmoddt) 
        = (g_pcap_m.pcapstus,g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt)     
    WHERE pcapent = g_enterprise AND pcapdocno = g_pcap_m.pcapdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE apct500_master_referesh USING g_pcap_m.pcapdocno INTO g_pcap_m.pcapsite,g_pcap_m.pcapdocdt, 
          g_pcap_m.pcapdocno,g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap002,g_pcap_m.pcapunit,g_pcap_m.pcapstus, 
          g_pcap_m.pcapownid,g_pcap_m.pcapowndp,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdt, 
          g_pcap_m.pcapmodid,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid,g_pcap_m.pcapcnfdt,g_pcap_m.pcapsite_desc, 
          g_pcap_m.pcap001_desc,g_pcap_m.pcap002_desc,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp_desc, 
          g_pcap_m.pcapcrtid_desc,g_pcap_m.pcapcrtdp_desc,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapcnfid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_pcap_m.pcapsite,g_pcap_m.pcapsite_desc,g_pcap_m.pcapdocdt,g_pcap_m.pcapdocno, 
          g_pcap_m.pcap003,g_pcap_m.pcap001,g_pcap_m.pcap001_desc,g_pcap_m.pcap002,g_pcap_m.pcap002_desc, 
          g_pcap_m.pcapunit,g_pcap_m.pcapstus,g_pcap_m.pcapownid,g_pcap_m.pcapownid_desc,g_pcap_m.pcapowndp, 
          g_pcap_m.pcapowndp_desc,g_pcap_m.pcapcrtid,g_pcap_m.pcapcrtid_desc,g_pcap_m.pcapcrtdp,g_pcap_m.pcapcrtdp_desc, 
          g_pcap_m.pcapcrtdt,g_pcap_m.pcapmodid,g_pcap_m.pcapmodid_desc,g_pcap_m.pcapmoddt,g_pcap_m.pcapcnfid, 
          g_pcap_m.pcapcnfid_desc,g_pcap_m.pcapcnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE apct500_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apct500_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="apct500.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION apct500_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pcaq_d.getLength() THEN
         LET g_detail_idx = g_pcaq_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pcaq_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pcaq_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apct500_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apct500_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION apct500_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="apct500.status_show" >}
PRIVATE FUNCTION apct500_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="apct500.mask_functions" >}
&include "erp/apc/apct500_mask.4gl"
 
{</section>}
 
{<section id="apct500.signature" >}
   
 
{</section>}
 
{<section id="apct500.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION apct500_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pcap_m.pcapdocno
   LET g_pk_array[1].column = 'pcapdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="apct500.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="apct500.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION apct500_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL apct500_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_pcap_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="apct500.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION apct500_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#25 add-S
   SELECT pcapstus  INTO g_pcap_m.pcapstus
     FROM pcap_t
    WHERE pcapent = g_enterprise
      AND pcapdocno = g_pcap_m.pcapdocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_pcap_m.pcapstus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_pcap_m.pcapdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL apct500_set_act_visible()
        CALL apct500_set_act_no_visible()
        CALL apct500_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#25 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="apct500.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 產生單身資料
# Memo...........:
# Usage..........: CALL apct500_ins_pcaq()
# Date & Author..: 20150623 By dongsz
# Modify.........:
################################################################################
PRIVATE FUNCTION apct500_ins_pcaq()
DEFINE l_wc      STRING
DEFINE r_success LIKE type_t.num5
DEFINE l_flag    LIKE type_t.num5

   OPEN WINDOW w_apct500_s01 WITH FORM cl_ap_formpath("apc",'apct500_s01')
   
   CALL cl_ui_init()
   
   CALL cl_set_act_visible("accept_01,cancel_01",TRUE)
   
   LET INT_FLAG = TRUE
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      CONSTRUCT l_wc ON pcamsite,pcam012,pcam004
         FROM pcamsite,pcam012,pcam004
         
         BEFORE CONSTRUCT
         
         ON ACTION controlp INFIELD pcamsite
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state  = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pcamsite',g_site,'c')
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO pcamsite 
            NEXT FIELD pcamsite
            
         ON ACTION controlp INFIELD pcam012
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state  = "c"
            LET g_qryparam.reqry = FALSE
            CALL q_pcaa001()
            DISPLAY g_qryparam.return1 TO pcam012 
            NEXT FIELD pcam012
            
      END CONSTRUCT
   
      ON ACTION accept_01
         IF cl_null(l_wc) THEN
            LET l_wc = " 1=1"
         END IF
         EXIT DIALOG
         
      ON ACTION cancel_01
         LET INT_FLAG=FALSE
         EXIT DIALOG
         
      #ON ACTION exit
      #   LET g_action_choice="exit"
      #   LET INT_FLAG = FALSE
      #   EXIT DIALOG 
     
      ON ACTION close
         LET INT_FLAG=FALSE
         EXIT DIALOG

   END DIALOG
   
   IF cl_null(l_wc) THEN
      LET l_wc = " 1=1"
   END IF
   
   IF INT_FLAG THEN
      CALL s_transaction_begin()
      CALL s_apcq500_seldata(g_pcap_m.pcapdocno,l_wc) RETURNING r_success
      IF NOT r_success THEN
         CALL s_transaction_end('N','0')
      END IF
      CALL s_transaction_end('Y','0')
   END IF
   
   LET g_action_choice=""
   LET INT_FLAG=TRUE
   #畫面關閉
   CLOSE WINDOW w_apct500_s01
   
   CALL cl_set_act_visible("accept_01,cancel_01",FALSE)
END FUNCTION

 
{</section>}
 
