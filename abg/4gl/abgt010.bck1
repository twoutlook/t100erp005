#該程式未解開Section, 採用最新樣板產出!
{<section id="abgt010.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0006(2014-07-11 15:56:20), PR版次:0006(2017-01-22 16:25:42)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000230
#+ Filename...: abgt010
#+ Description: 預算目標維護
#+ Creator....: 02299(2014-01-28 14:21:23)
#+ Modifier...: 02114 -SD/PR- 01531
 
{</section>}
 
{<section id="abgt010.global" >}
#應用 i00 樣板自動產生(Version:10)
#add-point:填寫註解說明 name="global.memo"
#160318-00005#4  160321 By Jessy 修正azzi920重複定義之錯誤訊息
#160318-00025#1  160406 By 07675 將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#160920-00019#3  160920 By 08732 交易對象開窗調整為q_pmaa001_25
#161108-00025#1  161108 By 06821 g_browser_cnt 因筆數可能大於 3萬筆，請協助更新為 num10
#170122-00008#1  170122 By 01531 SQL语句补ENT条件
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:free_style模組變數(Module Variable) name="free_style.variable"
#單頭 type 宣告
 type type_g_bgax_m        RECORD
   bgax001 LIKE bgax_t.bgax001, 
   bgax001_desc LIKE bgaal_t.bgaal003,
   bgax002 LIKE bgax_t.bgax002,
   bgaa002 LIKE bgaa_t.bgaa002,
   bgaa002_desc LIKE bgacl_t.bgacl003,
   bgaa003 LIKE bgaa_t.bgaa003,
   bgaa003_desc LIKE ooail_t.ooail003,
   bgai004 LIKE bgai_t.bgai004
       END RECORD
 
#第一單身 type 宣告
 TYPE type_g_bgax_d        RECORD
   bgax003 LIKE bgax_t.bgax003, 
   bgax004 LIKE bgax_t.bgax004, 
   bgax005 LIKE bgax_t.bgax005, 
   bgax005_desc LIKE type_t.chr500,
   bgax008 LIKE bgax_t.bgax008, 
   bgax009 LIKE bgax_t.bgax009, 
   bgax010 LIKE bgax_t.bgax010, 
   bgax011 LIKE bgax_t.bgax011, 
   bgax012 LIKE bgax_t.bgax012, 
   bgax013 LIKE bgax_t.bgax013, 
   bgax014 LIKE bgax_t.bgax014
       END RECORD

#第二單身 type 宣告
 TYPE type_g_bgax2_d        RECORD
   bgax003 LIKE bgax_t.bgax003, 
   bgax004 LIKE bgax_t.bgax004, 
   bgax005 LIKE bgax_t.bgax005,
   bgax005_desc LIKE type_t.chr500,
   bgax015 LIKE bgax_t.bgax015, 
   bgax016 LIKE bgax_t.bgax016, 
   bgax017 LIKE bgax_t.bgax017, 
   bgax018 LIKE bgax_t.bgax018, 
   bgax019 LIKE bgax_t.bgax019, 
   bgax020 LIKE bgax_t.bgax020, 
   bgax021 LIKE bgax_t.bgax021, 
   bgax022 LIKE bgax_t.bgax022, 
   bgax023 LIKE bgax_t.bgax023, 
   bgax024 LIKE bgax_t.bgax024, 
   bgax025 LIKE bgax_t.bgax025, 
   bgax026 LIKE bgax_t.bgax026, 
   bgax027 LIKE bgax_t.bgax027, 
   bgax028 LIKE bgax_t.bgax028, 
   bgax029 LIKE bgax_t.bgax029, 
   bgax030 LIKE bgax_t.bgax030, 
   bgax031 LIKE bgax_t.bgax031, 
   bgax032 LIKE bgax_t.bgax032, 
   bgax033 LIKE bgax_t.bgax033, 
   bgax034 LIKE bgax_t.bgax034, 
   bgax035 LIKE bgax_t.bgax035, 
   bgax036 LIKE bgax_t.bgax036,
   bgax008 LIKE bgax_t.bgax008, 
   bgax009 LIKE bgax_t.bgax009, 
   bgax010 LIKE bgax_t.bgax010, 
   bgax011 LIKE bgax_t.bgax011, 
   bgax012 LIKE bgax_t.bgax012, 
   bgax013 LIKE bgax_t.bgax013, 
   bgax014 LIKE bgax_t.bgax014
       END RECORD

#状态單身 type 宣告
 TYPE type_g_bgax3_d        RECORD
   bgax003 LIKE bgax_t.bgax003, 
   bgax004 LIKE bgax_t.bgax004, 
   bgax005 LIKE bgax_t.bgax005,
   bgax005_desc LIKE type_t.chr500,
   bgaxownid LIKE bgax_t.bgaxownid,
   bgaxownid_desc LIKE type_t.chr500,
   bgaxowndp LIKE bgax_t.bgaxowndp,
   bgaxowndp_desc LIKE type_t.chr500,
   bgaxcrtid LIKE bgax_t.bgaxcrtid,
   bgaxcrtid_desc LIKE type_t.chr500,
   bgaxcrtdp LIKE bgax_t.bgaxcrtdp,
   bgaxcrtdp_desc LIKE type_t.chr500,
   bgaxcrtdt DATETIME YEAR TO SECOND,
   bgaxmodid LIKE bgax_t.bgaxmodid,
   bgaxmodid_desc LIKE type_t.chr500,
   bgaxmoddt DATETIME YEAR TO SECOND
       END RECORD

#模組變數(Module Variables)
DEFINE g_bgax_m          type_g_bgax_m
DEFINE g_bgax_m_t        type_g_bgax_m
DEFINE g_bgax_d          DYNAMIC ARRAY OF type_g_bgax_d
DEFINE g_bgax_d_t        type_g_bgax_d
DEFINE g_bgax_info_d     DYNAMIC ARRAY OF type_g_bgax3_d
DEFINE g_bgax2_d         DYNAMIC ARRAY OF type_g_bgax2_d
DEFINE g_bgax2_info_d     DYNAMIC ARRAY OF type_g_bgax3_d
DEFINE g_bgax2_d_t        type_g_bgax2_d
 
DEFINE g_bgax001_t LIKE bgax_t.bgax001
DEFINE g_bgax002_t LIKE bgax_t.bgax002
DEFINE g_bgax006 LIKE bgax_t.bgax006
DEFINE g_bgaxstus LIKE bgax_t.bgaxstus
DEFINE g_ooefl003 LIKE ooefl_t.ooefl003
 
DEFINE g_bgax003    LIKE bgax_t.bgax003
DEFINE g_bgax005    LIKE bgax_t.bgax005
DEFINE g_bgai004    LIKE bgai_t.bgai004
DEFINE g_sum_type   LIKE type_t.chr1
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
       b_ooed001       LIKE ooed_t.ooed001,
       b_ooed002       LIKE ooed_t.ooed002,
       b_ooed003       LIKE ooed_t.ooed003,
       b_ooed004       LIKE ooed_t.ooed004,
       b_ooed005       LIKE ooed_t.ooed005,
       b_bgaxstus      LIKE bgax_t.bgaxstus
       END RECORD

DEFINE g_browser2    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_bgax001       LIKE bgax_t.bgax001,
       b_bgax002       LIKE bgax_t.bgax002
       END RECORD 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc3                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc3_table1          STRING
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10   
DEFINE g_current_idx_tree        LIKE type_t.num10    
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5   
#161108-00025#1 --s mark
#DEFINE g_rec_b               LIKE type_t.num5  
#DEFINE g_rec_b2              LIKE type_t.num5 
#DEFINE g_rec_b_tree          LIKE type_t.num5  
#DEFINE l_ac                  LIKE type_t.num5  
#DEFINE l_ac2                 LIKE type_t.num5    
#DEFINE g_pagestart           LIKE type_t.num5   
#161108-00025#1 --e mark
#161108-00025#1 --s add
DEFINE g_rec_b               LIKE type_t.num10  
DEFINE g_rec_b2              LIKE type_t.num10 
DEFINE g_rec_b_tree          LIKE type_t.num10  
DEFINE l_ac                  LIKE type_t.num10
DEFINE l_ac2                 LIKE type_t.num10
DEFINE g_pagestart           LIKE type_t.num10
#161108-00025#1 --e add
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
DEFINE g_first               LIKE type_t.num5
 
        
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
#161108-00025#1 --s mark
#DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
#DEFINE g_detail_cnt2         LIKE type_t.num5              #單身總筆數
#DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
#DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
#DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
#DEFINE g_browser_cnt_tree    LIKE type_t.num5              #Browser總筆數
#DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
#DEFINE g_browser_idx_tree    LIKE type_t.num5              #Browser目前所在筆數
#DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
#161108-00025#1 --e mark
#161108-00025#1 --s add
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_cnt2         LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_cnt_tree    LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_browser_idx_tree    LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
#161108-00025#1 --e add
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page    
#161108-00025#1 --s mark
#DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
#DEFINE g_current_row_tree         LIKE type_t.num5              #Browser所在筆數
#161108-00025#1 --e mark
#161108-00025#1 --s add
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_row_tree    LIKE type_t.num10              #Browser所在筆數
#161108-00025#1 --e add
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_browser_root        DYNAMIC ARRAY OF INTEGER

#end add-point
 
#add-point:自定義模組變數(Module Variable) name="global.variable"

#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
{</section>}
 
{<section id="abgt010.main" >}
#+ 作業開始
MAIN
   #add-point:main段define name="main.define"
   
   #end add-point    
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point
 
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abg","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
 
   #add-point:SQL_define name="main.define_sql"
      LET g_forupd_sql = "SELECT bgax001,'',bgax002,'','','','' FROM bgax_t WHERE bgaxent= ? AND bgax001=? AND bgax002=?  
       FOR UPDATE "
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE abgt010_cl CURSOR FROM g_forupd_sql 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abgt010 WITH FORM cl_ap_formpath("abg",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL abgt010_init()
 
      #進入選單 Menu (='N')
      CALL abgt010_ui_dialog()
   
      #畫面關閉
      CLOSE WINDOW w_abgt010
   END IF
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
 
END MAIN
 
{</section>}
 
{<section id="abgt010.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"
#+ 功能選單
PRIVATE FUNCTION abgt010_ui_dialog()
DEFINE li_idx   LIKE type_t.num5
   WHILE TRUE
      IF g_first = 0 THEN
         CALL abgt010_browser_fill("")
         LET g_first = 1
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b_tree)
            BEFORE ROW
               LET g_current_idx_tree = DIALOG.getCurrentRow("s_browse")
               IF g_current_row_tree > 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row_tree)
                  LET g_current_idx_tree = g_current_row_tree
               END IF
               LET g_current_row_tree = g_current_idx_tree #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont()
               CALL DIALOG.setCurrentRow("s_browse",g_current_row_tree)
               LET g_bgax003 = g_browser[g_current_idx_tree].b_ooed004 
               IF cl_null(g_bgax003) THEN
                  LET g_bgax003 = g_browser[g_current_idx_tree].b_ooed002
               END IF 
               CALL abgt010_b_fill(g_wc2)
               IF g_bgax_d.getLength() > 0 THEN 
                  #LET g_detail_idx = 1
               ELSE
                  LET g_detail_idx = 0
               END IF 
               CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)
               IF g_detail_idx >=1 THEN 
                  LET g_bgax005 = g_bgax_d[g_detail_idx].bgax005
               END IF 
               CALL abgt010_b_fill2(g_wc3)
               IF g_bgax2_d.getLength() > 0 THEN 
                  #LET g_detail_idx2 = 1
               ELSE
                  LET g_detail_idx2 = 0
               END IF
            BEFORE DISPLAY
               LET l_ac = DIALOG.getCurrentRow("s_browse")
               
         END DISPLAY
      
         DISPLAY ARRAY g_bgax_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               LET g_bgax005 = g_bgax_d[g_detail_idx].bgax005
               CALL abgt010_b_fill2(g_wc3)
               
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")  
               
         END DISPLAY
         
         DISPLAY ARRAY g_bgax_info_d TO s_detail1_info.* ATTRIBUTES(COUNT=g_rec_b)
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail1_info")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL abgt010_ui_detailshow()
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               
         END DISPLAY

         DISPLAY ARRAY g_bgax2_info_d TO s_detail2_info.* ATTRIBUTES(COUNT=g_rec_b2)
            BEFORE ROW
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2_info")
               LET g_detail_idx2 = l_ac2
               DISPLAY g_detail_idx2 TO FORMONLY.idx2
               CALL abgt010_ui_detailshow()
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
               
         END DISPLAY
         
         DISPLAY ARRAY g_bgax2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b2) 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac2 = g_detail_idx2
               DISPLAY g_detail_idx2 TO FORMONLY.idx2
               CALL abgt010_ui_detailshow()

            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
         END DISPLAY

         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser2.getLength() THEN
               LET g_current_idx = g_browser2.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser2.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abgt010_fetch('') # reload data
            END IF
            LET g_detail_idx = 1
            CALL abgt010_ui_detailshow() #Setting the current row 

         #ACTION表單列
          ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("s_browse",0)
                  CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("s_browse",1)
                  CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
                  LET g_main_hidden = 1
               END IF

         ON ACTION first
            CALL abgt010_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL abgt010_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL abgt010_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL abgt010_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL abgt010_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
            
         ON ACTION sh
            LET g_action_choice="sh"#审核
            IF cl_auth_chk_act("sh") THEN 
               CALL abgt010_statechange("audit")
            END IF

         ON ACTION qxsh
            LET g_action_choice="qxsh"#取消审核
            IF cl_auth_chk_act("qxsh") THEN 
               CALL abgt010_statechange("unaudit")
            END IF

         ON ACTION xf
            LET g_action_choice="xf"#下发
            IF cl_auth_chk_act("xf") THEN 
               CALL abgt010_statechange("issued")
            END IF

         ON ACTION shh
            LET g_action_choice="shh"#收回
            IF cl_auth_chk_act("shh") THEN 
               CALL abgt010_statechange("unissued")
            END IF

         ON ACTION zs
            LET g_action_choice="zs"#终审
            IF cl_auth_chk_act("zs") THEN 
               CALL abgt010_statechange("final")
            END IF

         ON ACTION qrsf
            LET g_action_choice="qrsf"#身份确认
            IF cl_auth_chk_act("qrsf") THEN 
               CALL abgt010_statechange("qrsf")
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF

         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL abgt010_insert()
               EXIT DIALOG
            END IF
 
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               EXIT DIALOG
            END IF
 
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL abgt010_modify()
               EXIT DIALOG
            END IF
 
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL abgt010_modify()
               EXIT DIALOG
            END IF
 
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL abgt010_query()
            END IF

         ON ACTION related_document
            CALL g_pk_array.clear()
            LET g_pk_array[1].column = "bgax001"
            LET g_pk_array[1].values = g_bgax_m.bgax001
            LET g_pk_array[1].column = "bgax002"      
            LET g_pk_array[2].values = g_bgax_m.bgax002 
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document

               #END add-point
               CALL cl_doc()
            END IF

         ON ACTION agendum
            CALL g_pk_array.clear()
            LET g_pk_array[1].column = "bgax001"
            LET g_pk_array[1].values = g_bgax_m.bgax001
            LET g_pk_array[2].column = "bgax002"      
            LET g_pk_array[2].values = g_bgax_m.bgax002 
            CALL cl_user_overview() 
         
         ON ACTION followup
            CALL g_pk_array.clear()
            LET g_pk_array[1].column = "bgax001"
            LET g_pk_array[1].values = g_bgax_m.bgax001
            LET g_pk_array[2].column = "bgax002"      
            LET g_pk_array[2].values = g_bgax_m.bgax002 
            CALL cl_user_overview_follow(cl_get_today())
            CALL cl_user_overview_set_follow_pic()
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
END FUNCTION
#瀏覽頁簽資料初始化
PRIVATE FUNCTION abgt010_init()
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
  
   CALL cl_set_combo_scc('bgaxstus','9422')
  
   CALL abgt010_default_search()
END FUNCTION
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION abgt010_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
  
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00005"
      LET g_errparam.extend = "searchcol"
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
      LET g_wc2 = " 1=1"
      LET g_wc3 = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY bgax001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL abgt010_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
END FUNCTION
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abgt010_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_wc3             STRING 
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING  
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "bgax001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   LET l_wc3 = g_wc3.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
                      
   LET l_sub_sql = " SELECT UNIQUE bgax001,bgax002 FROM bgax_t ",
                   "  WHERE bgaxent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2 ," AND ",l_wc3
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示

   IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   

   #依照bgax001,bgax002 Browser欄位定義(取代原本bs_sql功能)
   LET l_sub_sql  = "SELECT DISTINCT bgax001,bgax002 FROM bgax_t ",
                    " WHERE bgaxent = '" ||g_enterprise|| "' AND ", g_wc," AND ",g_wc2," AND ",g_wc3
   
   LET l_sql_rank = "SELECT bgax001,bgax002,DENSE_RANK() OVER(ORDER BY bgax001 ",g_order,") AS RANK ", 
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT bgax001,bgax002 FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK<",g_pagestart+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser2.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser2[g_cnt].b_bgax001,g_browser2[g_cnt].b_bgax002    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser2.deleteElement(g_cnt)
   IF g_browser2.getLength() = 0 AND g_wc THEN
      INITIALIZE g_bgax_m.* TO NULL
      CALL g_browser2.clear()
      CLEAR FORM
   END IF
  
   LET g_header_cnt = g_browser2.getLength()
   LET g_cnt = 0
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify", TRUE)
   END IF
END FUNCTION
#+ 單身資料重新顯示
PRIVATE FUNCTION abgt010_ui_detailshow()
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail1_info",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx2)      
      CALL g_curr_diag.setCurrentRow("s_detail2_info",g_detail_idx2)
   END IF
END FUNCTION
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abgt010_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10

   FOR l_i =1 TO g_browser2.getLength()
      IF g_browser2[l_i].b_bgax001 = g_bgax_m.bgax001 AND g_browser2[l_i].b_bgax002 = g_bgax_m.bgax002 THEN
         CALL g_browser2.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
   
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
END FUNCTION
#+ QBE資料查詢
PRIVATE FUNCTION abgt010_construct()
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
   
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_bgax_m.* TO NULL
   CALL g_bgax_d.clear()
   CALL g_bgax2_d.clear()
   CALL g_browser.clear()
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   INITIALIZE g_wc3 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bgax001,bgax002
 
         BEFORE CONSTRUCT

         #Ctrlp:construct.c.bgax001
         ON ACTION controlp INFIELD bgax001
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bgaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax001  #顯示到畫面上
            NEXT FIELD bgax001 
            
         #Ctrlp:construct.c.bgax002
         ON ACTION controlp INFIELD bgax002
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bgax002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax002  #顯示到畫面上
            NEXT FIELD bgax002
 
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON bgax005,bgax008,bgax009,bgax010,bgax011,bgax012,bgax013, 
                                bgax014,bgaxownid,bgaxowndp,bgaxcrtid,bgaxcrtdp,
                                bgaxcrtdt,bgaxmodid,bgaxmoddt
           FROM s_detail1[1].bgax005_2,s_detail1[1].bgax008_2,s_detail1[1].bgax009_2,
                s_detail1[1].bgax010_2,s_detail1[1].bgax011_2,s_detail1[1].bgax012_2,
                s_detail1[1].bgax013_2,s_detail1[1].bgax014_2,
                s_detail1_info[1].bgaxownid_2,s_detail1_info[1].bgaxowndp_2,s_detail1_info[1].bgaxcrtid_2,s_detail1_info[1].bgaxcrtdp_2,
                s_detail1_info[1].bgaxcrtdt_2,s_detail1_info[1].bgaxmodid_2,s_detail1_info[1].bgaxmoddt_2
                      
         BEFORE CONSTRUCT 
            
         #單身公用欄位開窗相關處理

         #單身一般欄位開窗相關處理
         #---------------------<  Detail: page1  >---------------------
         #Ctrlp:construct.c.page1.bgax005
         ON ACTION controlp INFIELD bgax005_2
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bgae002()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax005_2  #顯示到畫面上
            NEXT FIELD bgax005_2
         
         ON ACTION controlp INFIELD bgaxownid_2
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxownid_2  #顯示到畫面上
            NEXT FIELD bgaxownid_2                     #返回原欄位

         ON ACTION controlp INFIELD bgaxowndp_2
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxowndp_2  #顯示到畫面上
            NEXT FIELD bgaxowndp_2                     #返回原欄位

         ON ACTION controlp INFIELD bgaxcrtid_2
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxcrtid_2  #顯示到畫面上
            NEXT FIELD bgaxcrtid_2                     #返回原欄位

         ON ACTION controlp INFIELD bgaxcrtdp_2
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxcrtdp_2  #顯示到畫面上
            NEXT FIELD bgaxcrtdp_2                     #返回原欄位

         ON ACTION controlp INFIELD bgaxmodid_2
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxmodid_2  #顯示到畫面上
            NEXT FIELD bgaxmodid_2                     #返回原欄位
   
      END CONSTRUCT

      CONSTRUCT g_wc3_table1 ON bgax005,bgax015,bgax016,bgax017,bgax018,bgax019,bgax020,
                                bgax021,bgax022,bgax023,bgax024,bgax025,bgax026,bgax027,
                                bgax028,bgax029,bgax030,bgax031,bgax032,bgax033,bgax034,
                                bgax035,bgax036,bgax008,bgax009,bgax010,bgax011,bgax012,
                                bgax013,bgax014,bgaxownid,bgaxowndp,bgaxcrtid,bgaxcrtdp,
                                bgaxcrtdt,bgaxmodid,bgaxmoddt
           FROM s_detail2[1].bgax005,s_detail2[1].bgax015,s_detail2[1].bgax016,
                s_detail2[1].bgax017,s_detail2[1].bgax018,s_detail2[1].bgax019,s_detail2[1].bgax020,
                s_detail2[1].bgax021,s_detail2[1].bgax022,s_detail2[1].bgax023,
                s_detail2[1].bgax024,s_detail2[1].bgax025,s_detail2[1].bgax026,s_detail2[1].bgax027,
                s_detail2[1].bgax028,s_detail2[1].bgax029,s_detail2[1].bgax030,
                s_detail2[1].bgax031,s_detail2[1].bgax032,s_detail2[1].bgax033,s_detail2[1].bgax034,
                s_detail2[1].bgax035,s_detail2[1].bgax036,s_detail2[1].bgax008,s_detail2[1].bgax009,
                s_detail2[1].bgax010,s_detail2[1].bgax011,s_detail2[1].bgax012,
                s_detail2[1].bgax013,s_detail2[1].bgax014,
                s_detail2_info[1].bgaxownid,s_detail2_info[1].bgaxowndp,s_detail2_info[1].bgaxcrtid,s_detail2_info[1].bgaxcrtdp,
                s_detail2_info[1].bgaxcrtdt,s_detail2_info[1].bgaxmodid,s_detail2_info[1].bgaxmoddt
                      
         BEFORE CONSTRUCT 
            
         #單身公用欄位開窗相關處理

         #單身一般欄位開窗相關處理
         ON ACTION controlp INFIELD bgax005
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bgae002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax005  #顯示到畫面上
            NEXT FIELD bgax005
         #期別
         ON ACTION controlp INFIELD bgax015
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bgac004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax015  #顯示到畫面上
            NEXT FIELD bgax015
         #固定核算項
         #部门
         ON ACTION controlp INFIELD bgax016
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooed004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax016  #顯示到畫面上
            NEXT FIELD bgax016

         #利润中心
         ON ACTION controlp INFIELD bgax017
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooed004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax017  #顯示到畫面上
            NEXT FIELD bgax017
            
         #区域
         ON ACTION controlp INFIELD bgax018
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '287'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax018  #顯示到畫面上
            NEXT FIELD bgax018

         #交易客商
         ON ACTION controlp INFIELD bgax019
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #CALL q_pmaa001()    #160920-00019#3--mark
            CALL q_pmaa001_25()  #160920-00019#3--add                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax019  #顯示到畫面上
            NEXT FIELD bgax019

         #收款客商
         ON ACTION controlp INFIELD bgax020
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #CALL q_pmaa001()    #160920-00019#3--mark
            CALL q_pmaa001_25()  #160920-00019#3--add                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax020  #顯示到畫面上
            NEXT FIELD bgax020
            
         #客群
         ON ACTION controlp INFIELD bgax021
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '281'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax021  #顯示到畫面上
            NEXT FIELD bgax021
            
         #產品類別
         ON ACTION controlp INFIELD bgax022
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax022  #顯示到畫面上
            NEXT FIELD bgax022

         #人員
         ON ACTION controlp INFIELD bgax023
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgax023  #顯示到畫面上
            NEXT FIELD bgax023
            
         #SA為規劃，暫時沒有開窗
         #ON ACTION controlp INFIELD bgax024
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax024  #顯示到畫面上
         #   NEXT FIELD bgax024
         #ON ACTION controlp INFIELD bgax025
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax025  #顯示到畫面上
         #   NEXT FIELD bgax025
         #ON ACTION controlp INFIELD bgax026
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax026  #顯示到畫面上
         #   NEXT FIELD bgax026
         #SA為規劃，暫時沒有開窗
         #自由核算項
         #ON ACTION controlp INFIELD bgax027
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax027  #顯示到畫面上
         #   NEXT FIELD bgax027
         #ON ACTION controlp INFIELD bgax028
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax028  #顯示到畫面上
         #   NEXT FIELD bgax028
         #ON ACTION controlp INFIELD bgax029
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax029  #顯示到畫面上
         #   NEXT FIELD bgax029
         #ON ACTION controlp INFIELD bgax030
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax030  #顯示到畫面上
         #   NEXT FIELD bgax030
         #ON ACTION controlp INFIELD bgax031
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax031  #顯示到畫面上
         #   NEXT FIELD bgax031
         #ON ACTION controlp INFIELD bgax032
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax032  #顯示到畫面上
         #   NEXT FIELD bgax032
         #ON ACTION controlp INFIELD bgax033
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax033  #顯示到畫面上
         #   NEXT FIELD bgax033
         #ON ACTION controlp INFIELD bgax034
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax034  #顯示到畫面上
         #   NEXT FIELD bgax034
         #ON ACTION controlp INFIELD bgax035
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax035  #顯示到畫面上
         #   NEXT FIELD bgax035
         #ON ACTION controlp INFIELD bgax036
         #   INITIALIZE g_qryparam.* TO NULL
         #   LET g_qryparam.state = 'c'
         #   LET g_qryparam.reqry = FALSE
         #   CALL ()                           #呼叫開窗
         #   DISPLAY g_qryparam.return1 TO bgax036  #顯示到畫面上
         #   NEXT FIELD bgax036
         
         ON ACTION controlp INFIELD bgaxownid
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxownid  #顯示到畫面上
            NEXT FIELD bgaxownid                     #返回原欄位

         ON ACTION controlp INFIELD bgaxowndp
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxowndp  #顯示到畫面上
            NEXT FIELD bgaxowndp                     #返回原欄位

         ON ACTION controlp INFIELD bgaxcrtid
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxcrtid  #顯示到畫面上
            NEXT FIELD bgaxcrtid                     #返回原欄位

         ON ACTION controlp INFIELD bgaxcrtdp
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxcrtdp  #顯示到畫面上
            NEXT FIELD bgaxcrtdp                     #返回原欄位

         ON ACTION controlp INFIELD bgaxmodid
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgaxmodid  #顯示到畫面上
            NEXT FIELD bgaxmodid                     #返回原欄位

      END CONSTRUCT
 
  
      #add-point:cs段more_construct
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:ui_dialog段b_dialog
         
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
#saki         CALL cl_qbe_list() RETURNING lc_qbe_sn
#saki         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
#saki         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   #組合g_wc3
   LET g_wc3 = g_wc3_table1
 
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
END FUNCTION
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abgt010_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
   
   #end add-point   
 
   #add-point:query開始前
   
   #end add-point 
   
   #切換畫面   
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   LET g_first = 0
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bgax_d.clear()
   CALL g_bgax2_d.clear()
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL abgt010_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      #CALL abgt010_browser_fill(g_wc)
      #CALL abgt010_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL abgt010_browser_fill("F")
   
   #備份搜尋條件
   LET ls_wc = g_wc
     
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "-100"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLEAR FORM
   ELSE
      CALL abgt010_fetch("F") 
   END IF
END FUNCTION
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abgt010_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING 
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser2.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL abgt010_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser2.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser2.getLength() THEN
      LET g_current_idx = g_browser2.getLength()
   END IF
   
   LET g_bgax_m.bgax001 = g_browser2[g_current_idx].b_bgax001
   LET g_bgax_m.bgax002 = g_browser2[g_current_idx].b_bgax002
 
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE bgax001,bgax002
 INTO g_bgax_m.bgax001,g_bgax_m.bgax002
 FROM bgax_t
 WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "bgax_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_bgax_m.* TO NULL
      RETURN
   END IF

   #重新顯示   
   CALL abgt010_show()
END FUNCTION
#+ 資料新增
PRIVATE FUNCTION abgt010_insert()
   DEFINE ls_cnt LIKE type_t.num10
   #清除相關資料
   CLEAR FORM                    
   CALL g_bgax_d.clear()
   CALL g_bgax2_d.clear()
   CALL g_browser.clear()
 
   INITIALIZE g_bgax_m.* LIKE bgax_t.*             #DEFAULT 設定
   LET g_bgax001_t = NULL
   LET g_bgax002_t = NULL
   LET g_bgai004 = ''
   CALL s_transaction_begin()
   WHILE TRUE 
      CALL abgt010_input("a")
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bgax_m.* = g_bgax_m_t.*
         CALL abgt010_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      ELSE
         SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise
            AND bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
         IF ls_cnt = 0 THEN 
            CONTINUE WHILE 
         END IF 
      END IF
      
      CALL g_bgax_d.clear()
      CALL g_bgax2_d.clear()
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   LET g_state = "Y"
   
   LET g_bgax001_t = g_bgax_m.bgax001
   LET g_bgax002_t = g_bgax_m.bgax002

   LET g_wc = g_wc,  
              " OR ( bgaxent = '" ||g_enterprise|| "' AND ",
              " bgax001 = '", g_bgax_m.bgax001 CLIPPED, "' "
              ," AND bgax002 = '", g_bgax_m.bgax002 CLIPPED, "' "
              , ") "
              
END FUNCTION
#+ 資料修改
PRIVATE FUNCTION abgt010_modify()
   #add-point:modify段define
   
   #end add-point    
   
   IF g_bgax_m.bgax001 IS NULL
   OR g_bgax_m.bgax002 IS NULL
 
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
    SELECT UNIQUE bgax001,bgax002
 INTO g_bgax_m.bgax001,g_bgax_m.bgax002
 FROM bgax_t
 WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
 
   ERROR ""
  
   LET g_bgax001_t = g_bgax_m.bgax001
   LET g_bgax002_t = g_bgax_m.bgax002
 
 
   CALL s_transaction_begin()
   
   OPEN abgt010_cl USING g_enterprise,g_bgax_m.bgax001
                                                       ,g_bgax_m.bgax002
 
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN abgt010_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abgt010_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH abgt010_cl INTO g_bgax_m.bgax001,g_bgax_m.bgax001_desc,g_bgax_m.bgax002,
                         g_bgax_m.bgaa002,g_bgax_m.bgaa002_desc,g_bgax_m.bgaa003,g_bgax_m.bgaa003_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bgax_m.bgax001
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE abgt010_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL abgt010_show()
   WHILE TRUE
      LET g_bgax001_t = g_bgax_m.bgax001
      LET g_bgax002_t = g_bgax_m.bgax002
 
 
 
      #add-point:modify段修改前
      
      IF cl_null(g_bgai004) THEN 
         CALL abgt010_s01(g_bgax_m.bgax001,g_user)
      END IF 
      DISPLAY g_bgai004 TO bgai004
      DISPLAY g_ooefl003 TO bgai004_desc
      IF cl_null(g_bgai004) THEN 
         RETURN 
      END IF 
      #end add-point
      
      CALL abgt010_input("u")     #欄位更改
      
      #add-point:modify段修改後
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bgax_m.* = g_bgax_m_t.*
         CALL abgt010_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_bgax_m.bgax001 != g_bgax001_t 
      OR g_bgax_m.bgax002 != g_bgax002_t 
 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         
         #end add-point
         
         #更新單頭key值
         UPDATE bgax_t SET bgax001 = g_bgax_m.bgax001
                                       , bgax002 = g_bgax_m.bgax002
 
 
          WHERE bgaxent = g_enterprise AND bgax001 = g_bgax001_t
            AND bgax002 = g_bgax002_t
 
 
         #add-point:單頭(偽)修改中
         
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "bgax_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bgax_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_bgax_m.bgax001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE abgt010_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_bgax_m.bgax001,'U')
 
   CALL abgt010_b_fill("1=1")
END FUNCTION
#+ 資料輸入
PRIVATE FUNCTION abgt010_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   DEFINE  l_ref_field           LIKE type_t.chr80
   DEFINE  l_errno               LIKE type_t.chr80
   DEFINE  l_bgax006             LIKE bgax_t.bgax006
   DEFINE  ls_ac                 LIKE type_t.num5
   DEFINE  l_bgaa002             LIKE bgaa_t.bgaa002
   DEFINE  l_flag_detail2        LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
   DEFINE  l_bgaa008             LIKE bgaa_t.bgaa008
   DEFINE  l_date                LIKE ooed_t.ooed006   #接受s_get_orga返回值
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("s_browse",0)
      CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_forupd_sql = "SELECT bgax003,bgax004,bgax005,'',bgax008,bgax009,bgax010,bgax011,bgax012,bgax013, 
       bgax014 FROM bgax_t WHERE bgaxent=? AND bgax001=? AND bgax002=? AND bgax003=? AND bgax004=? FOR  
       UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abgt010_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
   LET g_forupd_sql = "SELECT bgax003,bgax004,bgax005,'',bgax015,bgax016,bgax017,bgax018,bgax019,bgax020,
       bgax021,bgax022,bgax023,bgax024,bgax025,bgax026,bgax027,bgax028,bgax029,bgax030,
       bgax031,bgax032,bgax033,bgax034,bgax035,bgax036,
       bgax008,bgax009,bgax010,bgax011,bgax012,bgax013, 
       bgax014 FROM bgax_t WHERE bgaxent=? AND bgax001=? AND bgax002=? AND bgax003=? AND bgax004=? FOR  
       UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abgt010_bcl2 CURSOR FROM g_forupd_sql      # LOCK CURSOR
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abgt010_set_entry(p_cmd)
   CALL abgt010_set_no_entry(p_cmd)

   DISPLAY BY NAME g_bgax_m.bgax001,g_bgax_m.bgax002
   
   LET lb_reproduce = FALSE
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭段
      INPUT BY NAME g_bgax_m.bgax001,g_bgax_m.bgax002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
          
         #---------------------------<  Master  >---------------------------
         #----<<bgax001>>----
         #預算編號
         AFTER FIELD bgax001
            DISPLAY '' TO bgax001_desc
            DISPLAY '' TO bgaa002
            DISPLAY '' TO bgaa002_desc
            DISPLAY '' TO bgaa003
            DISPLAY '' TO bgaa003_desc
            IF NOT abgt010_head_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax001_t,g_bgax002_t,p_cmd) THEN
               IF p_cmd = 'a' THEN
                  LET g_bgax_m.bgax001 = ''
               ELSE 
                  LET g_bgax_m.bgax001 = g_bgax_m_t.bgax001
               END IF 
               NEXT FIELD bgax001
            ELSE
               IF NOT abgt010_bgax001_chk(g_bgax_m.bgax001) THEN
                  IF p_cmd = 'a' THEN
                     LET g_bgax_m.bgax001 = ''
                  ELSE 
                     LET g_bgax_m.bgax001 = g_bgax_m_t.bgax001
                  END IF
                  CALL abgt010_bgax001_ref(g_bgax_m.bgax001) 
                     RETURNING g_bgax_m.bgax001_desc,g_bgax_m.bgaa002,g_bgax_m.bgaa002_desc,g_bgax_m.bgaa003,g_bgax_m.bgaa003_desc
                     DISPLAY g_bgax_m.bgax001_desc TO bgax001_desc
                     DISPLAY g_bgax_m.bgaa002 TO bgaa002
                     DISPLAY g_bgax_m.bgaa002_desc TO bgaa002_desc
                     DISPLAY g_bgax_m.bgaa003 TO bgaa003
                     DISPLAY g_bgax_m.bgaa003_desc TO bgaa003_desc
                  NEXT FIELD bgax001
               END IF 
            END IF 
            CALL abgt010_bgax001_ref(g_bgax_m.bgax001) 
            RETURNING g_bgax_m.bgax001_desc,g_bgax_m.bgaa002,g_bgax_m.bgaa002_desc,g_bgax_m.bgaa003,g_bgax_m.bgaa003_desc
            DISPLAY g_bgax_m.bgax001_desc TO bgax001_desc
            DISPLAY g_bgax_m.bgaa002 TO bgaa002
            DISPLAY g_bgax_m.bgaa002_desc TO bgaa002_desc
            DISPLAY g_bgax_m.bgaa003 TO bgaa003
            DISPLAY g_bgax_m.bgaa003_desc TO bgaa003_desc
            
         #----<<bgax002>>----
         #預算版本
         BEFORE FIELD bgax002
            #SA暫時不需要，但是後期可能需要，預埋處理段
            #CALL abgt010_bgax002_bef(g_bgax_m.bgax001) RETURNING ls_success,g_bgax_m.bgax002
            #IF NOT ls_success THEN
            #   NEXT FIELD bgax001
            #END IF 

         AFTER FIELD bgax002
            IF NOT abgt010_head_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax001_t,g_bgax002_t,p_cmd) THEN
               IF p_cmd = 'a' THEN
                  LET g_bgax_m.bgax002 = ''
               ELSE 
                  LET g_bgax_m.bgax002 = g_bgax_m_t.bgax002
               END IF 
               NEXT FIELD bgax002
            END IF 

         #Ctrlp:input.bgax001
         ON ACTION controlp INFIELD bgax001
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgax_m.bgax001      #給予default值
            CALL q_bgaa001()                                #呼叫開窗
            LET g_bgax_m.bgax001 = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_bgax_m.bgax001 TO bgax001             #顯示到畫面上
            CALL abgt010_bgax001_ref(g_bgax_m.bgax001) 
            RETURNING g_bgax_m.bgax001_desc,g_bgax_m.bgaa002,g_bgax_m.bgaa002_desc,g_bgax_m.bgaa003,g_bgax_m.bgaa003_desc
            DISPLAY g_bgax_m.bgax001_desc TO bgax001_desc
            DISPLAY g_bgax_m.bgaa002 TO bgaa002
            DISPLAY g_bgax_m.bgaa002_desc TO bgaa002_desc
            DISPLAY g_bgax_m.bgaa003 TO bgaa003
            DISPLAY g_bgax_m.bgaa003_desc TO bgaa003_desc
            NEXT FIELD bgax001
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            CALL cl_showmsg()
            DISPLAY BY NAME g_bgax_m.bgax001             
                            ,g_bgax_m.bgax002   

            IF p_cmd = 'u' THEN
               UPDATE bgax_t SET (bgax001,bgax002) = (g_bgax_m.bgax001,g_bgax_m.bgax002)
                WHERE bgaxent = g_enterprise AND bgax001 = g_bgax001_t
                  AND bgax002 = g_bgax002_t

               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     CALL s_transaction_end('Y','0')
               END CASE
            
            ELSE                
               #IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  #CALL abgt010_detail_reproduce()
               #END IF
               IF p_cmd = 'a' AND cl_null(g_bgai004) THEN
                  CALL abgt010_s01(g_bgax_m.bgax001,g_user)
                  DISPLAY g_bgai004 TO bgai004
                  DISPLAY g_ooefl003 TO bgai004_desc
                  IF cl_null(g_bgai004) THEN 
                     EXIT DIALOG 
                  END IF
               END IF 
            END IF
                     
           LET g_bgax001_t = g_bgax_m.bgax001
           LET g_bgax002_t = g_bgax_m.bgax002
 
      END INPUT
      DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
      
         BEFORE ROW
            LET g_current_idx_tree = DIALOG.getCurrentRow("s_browse")
            IF g_current_row_tree > 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row_tree)
               LET g_current_idx_tree = g_current_row_tree
            END IF
            LET g_current_row_tree = g_current_idx_tree #目前指標
            LET g_current_sw = TRUE
            CALL cl_show_fld_cont()
            CALL DIALOG.setCurrentRow("s_browse",g_current_row_tree)
            #CALL DIALOG.setCurrentRow("s_detail1",1)
            #CALL DIALOG.setCurrentRow("s_detail2",1)
            LET g_bgax003 = g_browser[g_current_idx_tree].b_ooed004 
            CALL abgt010_b_fill(g_wc2)
            CALL abgt010_b_fill2(g_wc3)
            #NEXT FIELD bgax005_2
         #BEFORE DISPLAY
            #LET l_ac = DIALOG.getCurrentRow("s_browse")
               
      END DISPLAY
      #Page1 預設值產生於此處
      INPUT ARRAY g_bgax_d FROM s_detail1.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         BEFORE INPUT
            IF cl_null(g_bgax003) THEN
               NEXT FIELD name
            ELSE
               IF NOT abgt010_permission_chk(g_bgax_m.bgax001,g_bgax003) THEN
                  NEXT FIELD NAME
               ELSE
                  IF NOT abgt010_entering_authority(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax003) THEN
                     NEXT FIELD name 
                  END IF 
               END IF 
            END IF 
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bgax_d.getLength()+1) 
              LET g_insert = 'N' 
            END IF 
            
            CALL abgt010_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = ARR_CURR()
               CALL fgl_set_arr_curr(l_ac)
            END IF
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            IF g_bgai004 = g_bgax003 THEN
               LET g_bgax006 = '1'
               LET g_bgaxstus = '1'
            ELSE
               LET g_bgax006 = '2'
               LET g_bgaxstus = '2'
            END IF
            LET ls_ac = l_ac
            WHILE TRUE 
            LET l_bgax006 = ''
            SELECT bgax006 INTO l_bgax006 FROM  bgax_t WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001
               AND bgax002 = g_bgax_m.bgax002 AND bgax003 = g_bgax_d[ls_ac].bgax003 
               AND bgax004 = g_bgax_d[ls_ac].bgax004
            IF l_bgax006 = '2' AND g_bgai004 = g_bgax003 THEN 
               IF ls_ac = g_bgax_d.getLength() THEN
                  LET ls_ac = ls_ac +1
                  EXIT WHILE 
               END IF 
               LET ls_ac = ls_ac +1
            ELSE
               EXIT WHILE 
            END IF 
            END WHILE 
            IF ls_ac <> l_ac THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abg-00057'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF 
            CALL fgl_set_arr_curr(ls_ac)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET g_bgax005 = g_bgax_d[l_ac].bgax005
            CALL abgt010_b_fill2(g_wc3)
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            CALL s_transaction_begin()

            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN abgt010_cl USING g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002                          
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abgt010_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE abgt010_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac AND g_bgax_d[l_ac].bgax003 IS NOT NULL
               AND g_bgax_d[l_ac].bgax004 IS NOT NULL THEN
               LET l_cmd='u'
               LET g_bgax_d_t.* = g_bgax_d[l_ac].*  #BACKUP
               LET g_bgax005 = g_bgax_d[l_ac].bgax005
               CALL abgt010_set_entry_b(l_cmd)
               CALL abgt010_set_no_entry_b(l_cmd)
               OPEN abgt010_bcl USING g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002,
                                      g_bgax_d_t.bgax003,g_bgax_d_t.bgax004
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abgt010_bcl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH abgt010_bcl INTO g_bgax_d[l_ac].bgax003,g_bgax_d[l_ac].bgax004,g_bgax_d[l_ac].bgax005,
                                         g_bgax_d[l_ac].bgax005_desc,g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,
                                         g_bgax_d[l_ac].bgax010,g_bgax_d[l_ac].bgax011,g_bgax_d[l_ac].bgax012,
                                         g_bgax_d[l_ac].bgax013,g_bgax_d[l_ac].bgax014
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = SQLCA.sqlcode
                      LET g_errparam.extend = g_bgax_d_t.bgax003
                      LET g_errparam.popup = TRUE
                      CALL cl_err()

                      LET l_lock_sw = "Y"
                  END IF
                  CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax005) 
                     RETURNING g_bgax_d[l_ac].bgax005_desc
                  DISPLAY g_bgax_d[l_ac].bgax005_desc TO s_detail1[l_ac].bgax005_2_desc
 
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF            
        
         BEFORE INSERT
            INITIALIZE g_bgax_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bgax_d[l_ac].* TO NULL
            
            #公用欄位預設值
            CALL abgt010_common_def() 
               RETURNING g_bgax_info_d[l_ac].bgaxownid,g_bgax_info_d[l_ac].bgaxowndp,g_bgax_info_d[l_ac].bgaxcrtid,
                         g_bgax_info_d[l_ac].bgaxcrtdp,g_bgax_info_d[l_ac].bgaxcrtdt,g_bgax_info_d[l_ac].bgaxmodid,
                         g_bgax_info_d[l_ac].bgaxmoddt
            #一般欄位預設值
            LET g_bgax_d[l_ac].bgax003 = g_bgax003
            CALL abgt010_bgax004_def(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax_d[l_ac].bgax003)
               RETURNING g_bgax_d[l_ac].bgax004
            LET g_bgax_d_t.* = g_bgax_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abgt010_set_entry_b(l_cmd)
            CALL abgt010_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bgax_d[li_reproduce_target].* = g_bgax_d[li_reproduce].*
 
               LET g_bgax_d[g_bgax_d.getLength()].bgax003 = g_bgax003
               CALL abgt010_bgax004_def(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax_d[l_ac].bgax003)
                   RETURNING g_bgax_d[g_bgax_d.getLength()].bgax004
               LET g_bgax_d[g_bgax_d.getLength()].bgax005 = NULL 
            END IF
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bgax_t 
             WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001
               AND bgax002 = g_bgax_m.bgax002
               AND bgax003 = g_bgax_d[l_ac].bgax003
               AND bgax005 = g_bgax_d[l_ac].bgax005
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               
                
               #end add-point
               INSERT INTO bgax_t
                  (bgaxent,bgax001,bgax002,bgax003,bgax004,bgax005,bgax008,bgax009,
                   bgax010,bgax011,bgax012,bgax013,bgax014,bgax006,bgaxstus,
                   bgaxownid,bgaxowndp,bgaxcrtid,bgaxcrtdp,bgaxcrtdt,
                   bgaxmodid,bgaxmoddt) 
                     VALUES(g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax_d[l_ac].bgax003,
                            g_bgax_d[l_ac].bgax004,g_bgax_d[l_ac].bgax005,g_bgax_d[l_ac].bgax008,
                            g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010,g_bgax_d[l_ac].bgax011,
                            g_bgax_d[l_ac].bgax012,g_bgax_d[l_ac].bgax013,g_bgax_d[l_ac].bgax014,
                            g_bgax006,g_bgaxstus,g_bgax_info_d[l_ac].bgaxownid,g_bgax_info_d[l_ac].bgaxowndp,g_bgax_info_d[l_ac].bgaxcrtid,
                            g_bgax_info_d[l_ac].bgaxcrtdp,g_bgax_info_d[l_ac].bgaxcrtdt,g_bgax_info_d[l_ac].bgaxmodid,
                            g_bgax_info_d[l_ac].bgaxmoddt
                            )
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_bgax_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
               UPDATE bgax_t SET bgaxstus = g_bgaxstus 
                WHERE bgaxent = g_enterprise AND bgax001 =g_bgax_m.bgax001
                  AND bgax002 = g_bgax_m.bgax002 AND bgax003 = g_bgax_d[l_ac].bgax003
               CALL abgt010_detail2_insert(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax_d[l_ac].bgax003,
                               g_bgax_d[l_ac].bgax005,g_bgax_d[l_ac].bgax013,g_bgax_d[l_ac].bgax014,
                               g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010)
               CALL abgt010_b_fill2(" 1=1")                
            END IF
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bgax_d.deleteElement(l_ac)
               NEXT FIELD bgax005_2
            END IF
            IF g_bgax_d_t.bgax003 IS NOT NULL AND g_bgax_d_t.bgax004 IS NOT NULL THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               IF abgt010_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE abgt010_bcl
               LET l_count = g_bgax_d.getLength()
            END IF 
              
         AFTER DELETE 
            
         AFTER FIELD bgax005_2
            CALL abgt010_bgax005_ref(g_bgax_m.bgax001,'') RETURNING g_bgax_d[l_ac].bgax005_desc
            DISPLAY g_bgax_d[l_ac].bgax005_desc TO s_detail1[l_ac].bgax005_desc
            IF NOT abgt010_first_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax_d[l_ac].bgax003,g_bgax_d[l_ac].bgax005,g_bgax_d_t.bgax005,l_cmd) THEN 
               IF l_cmd = 'a' THEN 
                  LET g_bgax_d[l_ac].bgax005 = ''
               ELSE
                  LET g_bgax_d[l_ac].bgax005 = g_bgax_d_t.bgax005 
               END IF 
               CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax005) RETURNING g_bgax_d[l_ac].bgax005_desc
               DISPLAY g_bgax_d[l_ac].bgax005_desc TO s_detail1[l_ac].bgax005_2_desc
               NEXT FIELD bgax005_2
            END IF 
            IF NOT abgt010_bgax005_chk(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax005) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax_d[l_ac].bgax005 = ''
               ELSE
                  LET g_bgax_d[l_ac].bgax005 = g_bgax_d_t.bgax005 
               END IF 
               CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax005) RETURNING g_bgax_d[l_ac].bgax005_desc
               DISPLAY g_bgax_d[l_ac].bgax005_desc TO s_detail1[l_ac].bgax005_2_desc
               NEXT FIELD bgax005_2
            END IF 
            CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax005) RETURNING g_bgax_d[l_ac].bgax005_desc
            IF g_bgax_d[l_ac].bgax005 != g_bgax_d_t.bgax005 OR l_cmd = 'a' THEN 
            CALL abgt010_bgax008_bgax009_bgax010_def(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax003,g_bgax_d[l_ac].bgax005)
               RETURNING g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010
            END IF 
            DISPLAY g_bgax_d[l_ac].bgax005_desc TO s_detail1[l_ac].bgax005_2_desc
            LET g_bgax005 = g_bgax_d[l_ac].bgax005
            CALL abgt010_bgax011_bgax012_ref(g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010)
               RETURNING g_bgax_d[l_ac].bgax011,g_bgax_d[l_ac].bgax012
         #此段落由子樣板a02產生
         AFTER FIELD bgax008_2
            CALL abgt010_bgax011_bgax012_ref(g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010)
               RETURNING g_bgax_d[l_ac].bgax011,g_bgax_d[l_ac].bgax012
            
         AFTER FIELD bgax009_2
            CALL abgt010_bgax011_bgax012_ref(g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010)
               RETURNING g_bgax_d[l_ac].bgax011,g_bgax_d[l_ac].bgax012
        
         AFTER FIELD bgax010_2
            CALL abgt010_bgax011_bgax012_ref(g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010)
               RETURNING g_bgax_d[l_ac].bgax011,g_bgax_d[l_ac].bgax012


         #預算目標：q_bgae002傳入預算組別（根據bgax001到bgaa_t中抓取bgaa0008）
         ON ACTION controlp INFIELD bgax005_2
            SELECT bgaa008 INTO l_bgaa008 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = g_bgax_m.bgax001
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgax_d[l_ac].bgax005  #給予default值
            LET g_qryparam.arg1 = l_bgaa008                   #給予arg
            CALL q_bgae002()                                  #呼叫開窗
            INITIALIZE g_qryparam.where TO NULL
            LET g_bgax_d[l_ac].bgax005 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_bgax_d[l_ac].bgax005 TO bgax005_2       #顯示到畫面上
            CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax005) RETURNING g_bgax_d[l_ac].bgax005_desc
            NEXT FIELD bgax005_2 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_bgax_d[l_ac].* = g_bgax_d_t.*
               CLOSE abgt010_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_bgax_d[l_ac].bgax003
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bgax_d[l_ac].* = g_bgax_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_bgax_info_d[l_ac].bgaxmodid = g_user
               LET g_bgax_info_d[l_ac].bgaxmoddt = cl_get_current()
            
               UPDATE bgax_t SET (bgax001,bgax002,bgax003,bgax004,bgax005,bgax008,bgax009,bgax010,bgax011, 
                   bgax012,bgax013,bgax014,bgaxmodid,bgaxmoddt) = (g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax_d[l_ac].bgax003, 
                   g_bgax_d[l_ac].bgax004,g_bgax_d[l_ac].bgax005,g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009, 
                   g_bgax_d[l_ac].bgax010,g_bgax_d[l_ac].bgax011,g_bgax_d[l_ac].bgax012,g_bgax_d[l_ac].bgax013, 
                   g_bgax_d[l_ac].bgax014,g_bgax_info_d[l_ac].bgaxmodid,g_bgax_info_d[l_ac].bgaxmoddt)
                WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                 AND bgax002 = g_bgax_m.bgax002 
                 AND bgax003 = g_bgax_d_t.bgax003 #項次   
                 AND bgax004 = g_bgax_d_t.bgax004  
 
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                  OTHERWISE         
                     IF g_bgax_d_t.bgax005 != g_bgax_d[l_ac].bgax005 THEN 
                     DELETE FROM bgax_t WHERE bgaxent = g_enterprise
                        AND bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
                        AND bgax003 = g_bgax_d_t.bgax003 AND bgax005 = g_bgax_d_t.bgax005
                        AND bgax004 != g_bgax_d_t.bgax004
                     END IF 
                     IF g_bgax006 = '2' THEN 
                        UPDATE bgax_t SET bgax006 = g_bgax006
                         WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                           AND bgax002 = g_bgax_m.bgax002 
                           AND bgax003 = g_bgax_d_t.bgax003 
                           AND bgax004 = g_bgax_d_t.bgax004
                     END IF 
                     UPDATE bgax_t SET bgaxstus = g_bgaxstus
                      WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                        AND bgax002 = g_bgax_m.bgax002 
                        AND bgax003 = g_bgax_d_t.bgax003 
                     CALL abgt010_detail2_insert(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax_d[l_ac].bgax003,
                               g_bgax_d[l_ac].bgax005,g_bgax_d[l_ac].bgax013,g_bgax_d[l_ac].bgax014,
                               g_bgax_d[l_ac].bgax008,g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010)
               END CASE
            END IF
 
         AFTER INPUT
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_bgax_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bgax_d.getLength()+1
            
      END INPUT
      
      INPUT ARRAY g_bgax2_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b2,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         BEFORE INPUT
            LET l_flag_detail2 = TRUE 
            IF cl_null(g_bgax003) THEN
               LET l_flag_detail2 = FALSE 
               NEXT FIELD NAME
            ELSE
               IF NOT abgt010_permission_chk(g_bgax_m.bgax001,g_bgax003) THEN
                  LET l_flag_detail2 = FALSE
                  NEXT FIELD name
               END IF                
            END IF 
            LET l_bgax006 = ''
            SELECT bgax006 INTO l_bgax006 FROM bgax_t WHERE bgaxent = g_enterprise
               AND bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002 AND bgax003 = g_bgax003
               AND bgax005 = g_bgax005
            IF l_bgax006 = '2' AND g_bgai004 = g_bgax003 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abg-00057'
               LET g_errparam.extend = g_bgax_d[l_ac].bgax005
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET l_flag_detail2 = FALSE
               NEXT FIELD name
            END IF 
            IF cl_null(g_bgax005) THEN
               LET l_flag_detail2 = FALSE
               NEXT FIELD bgax005_2
            END IF
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bgax2_d.getLength()+1) 
              LET g_insert = 'N' 
            END IF 
            
            CALL abgt010_b_fill2(g_wc3) 
            IF g_rec_b2 != 0 THEN
               CALL fgl_set_arr_curr(l_ac2)
            END IF
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac2 = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac2 TO FORMONLY.idx2
            CALL s_transaction_begin()

            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN abgt010_cl USING g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002                          
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abgt010_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE abgt010_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b2 >= l_ac2 AND g_bgax2_d[l_ac2].bgax003 IS NOT NULL
               AND g_bgax2_d[l_ac2].bgax004 IS NOT NULL THEN
               LET l_cmd='u'
               LET g_bgax2_d_t.* = g_bgax2_d[l_ac2].*  #BACKUP
               CALL abgt010_set_entry_b(l_cmd)
               CALL abgt010_set_no_entry_b(l_cmd)
               OPEN abgt010_bcl2 USING g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002,
                                      g_bgax2_d_t.bgax003,g_bgax2_d_t.bgax004
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abgt010_bcl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH abgt010_bcl2 INTO g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax004,g_bgax2_d[l_ac2].bgax005,
                                         g_bgax2_d[l_ac2].bgax005_desc,g_bgax2_d[l_ac2].bgax015,g_bgax2_d[l_ac2].bgax016,g_bgax2_d[l_ac2].bgax017,
                                         g_bgax2_d[l_ac2].bgax018,g_bgax2_d[l_ac2].bgax019,g_bgax2_d[l_ac2].bgax020,g_bgax2_d[l_ac2].bgax021,g_bgax2_d[l_ac2].bgax022,
                                         g_bgax2_d[l_ac2].bgax023,g_bgax2_d[l_ac2].bgax024,g_bgax2_d[l_ac2].bgax025,g_bgax2_d[l_ac2].bgax026,
                                         g_bgax2_d[l_ac2].bgax027,g_bgax2_d[l_ac2].bgax028,g_bgax2_d[l_ac2].bgax029,g_bgax2_d[l_ac2].bgax030,
                                         g_bgax2_d[l_ac2].bgax031,g_bgax2_d[l_ac2].bgax032,g_bgax2_d[l_ac2].bgax033,g_bgax2_d[l_ac2].bgax034,
                                         g_bgax2_d[l_ac2].bgax035,g_bgax2_d[l_ac2].bgax036,g_bgax2_d[l_ac2].bgax008,g_bgax2_d[l_ac2].bgax009,
                                         g_bgax2_d[l_ac2].bgax010,g_bgax2_d[l_ac2].bgax011,g_bgax2_d[l_ac2].bgax012,g_bgax2_d[l_ac2].bgax013,g_bgax2_d[l_ac2].bgax014
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = SQLCA.sqlcode
                      LET g_errparam.extend = g_bgax2_d_t.bgax003
                      LET g_errparam.popup = TRUE
                      CALL cl_err()

                      LET l_lock_sw = "Y"
                  END IF
                  CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax2_d[l_ac2].bgax005) 
                     RETURNING g_bgax2_d[l_ac2].bgax005_desc
                  DISPLAY g_bgax2_d[l_ac2].bgax005_desc TO s_detail2[l_ac2].bgax005_desc
            
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF            
        
         BEFORE INSERT
            INITIALIZE g_bgax2_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bgax2_d[l_ac2].* TO NULL
            LET g_bgax2_d[l_ac2].bgax003 = g_bgax_d[l_ac].bgax003
            CALL abgt010_bgax004_def(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003)
               RETURNING g_bgax2_d[l_ac2].bgax004
            LET g_bgax2_d[l_ac2].bgax005 = g_bgax_d[l_ac].bgax005
            CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax2_d[l_ac2].bgax005) 
               RETURNING g_bgax2_d[l_ac2].bgax005_desc
            DISPLAY g_bgax2_d[l_ac2].bgax005_desc TO s_detail2[l_ac2].bgax005_desc
               
            #公用欄位預設值
            CALL abgt010_common_def() 
               RETURNING g_bgax2_info_d[l_ac].bgaxownid,g_bgax2_info_d[l_ac].bgaxowndp,g_bgax2_info_d[l_ac].bgaxcrtid,
                         g_bgax2_info_d[l_ac].bgaxcrtdp,g_bgax2_info_d[l_ac].bgaxcrtdt,g_bgax2_info_d[l_ac].bgaxmodid,
                         g_bgax2_info_d[l_ac].bgaxmoddt
            #一般欄位預設值
            LET g_bgax2_d[l_ac2].bgax016 = ' '
            LET g_bgax2_d[l_ac2].bgax017 = ' '
            LET g_bgax2_d[l_ac2].bgax018 = ' '
            LET g_bgax2_d[l_ac2].bgax019 = ' '
            LET g_bgax2_d[l_ac2].bgax020 = ' '
            LET g_bgax2_d[l_ac2].bgax021 = ' '
            LET g_bgax2_d[l_ac2].bgax022 = ' '
            LET g_bgax2_d[l_ac2].bgax023 = ' '
            LET g_bgax2_d[l_ac2].bgax024 = ' ' 
            LET g_bgax2_d[l_ac2].bgax025 = ' '
            LET g_bgax2_d[l_ac2].bgax026 = ' '
            LET g_bgax2_d[l_ac2].bgax027 = ' '
            LET g_bgax2_d[l_ac2].bgax028 = ' '
            LET g_bgax2_d[l_ac2].bgax029 = ' '
            LET g_bgax2_d[l_ac2].bgax030 = ' '
            LET g_bgax2_d[l_ac2].bgax031 = ' '
            LET g_bgax2_d[l_ac2].bgax032 = ' '
            LET g_bgax2_d[l_ac2].bgax033 = ' '
            LET g_bgax2_d[l_ac2].bgax034 = ' '
            LET g_bgax2_d[l_ac2].bgax035 = ' '
            LET g_bgax2_d[l_ac2].bgax036 = ' '
            
            LET g_bgax2_d_t.* = g_bgax2_d[l_ac2].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abgt010_set_entry_b(l_cmd)
            CALL abgt010_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bgax2_d[li_reproduce_target].* = g_bgax2_d[li_reproduce].*
 
               LET g_bgax2_d[g_bgax2_d.getLength()].bgax003 = NULL
               LET g_bgax2_d[g_bgax2_d.getLength()].bgax004 = NULL
            END IF
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bgax_t 
             WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001
               AND bgax002 = g_bgax_m.bgax002
               AND bgax003 = g_bgax2_d[l_ac2].bgax003
               AND bgax004 = g_bgax2_d[l_ac2].bgax004
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               
               #end add-point
               INSERT INTO bgax_t
                  (bgaxent,bgax001,bgax002,bgax003,bgax004,bgax005,bgax008,bgax009,
                   bgax010,bgax011,bgax012,bgax013,bgax014,
                   bgax015,bgax016,bgax017,bgax018,bgax019,bgax020,bgax021,bgax022,bgax023,bgax024,
                   bgax025,bgax026,bgax027,bgax028,bgax029,bgax030,bgax031,bgax032,bgax033,bgax034,
                   bgax035,bgax036,bgax006,bgaxstus,
                   bgaxownid,bgaxowndp,bgaxcrtid,bgaxcrtdp,bgaxcrtdt,
                   bgaxmodid,bgaxmoddt) 
                     VALUES(g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,
                            g_bgax2_d[l_ac2].bgax004,g_bgax2_d[l_ac2].bgax005,g_bgax2_d[l_ac2].bgax008,
                            g_bgax2_d[l_ac2].bgax009,g_bgax2_d[l_ac2].bgax010,g_bgax2_d[l_ac2].bgax011,
                            g_bgax2_d[l_ac2].bgax012,g_bgax2_d[l_ac2].bgax013,g_bgax2_d[l_ac2].bgax014,
                            g_bgax2_d[l_ac2].bgax015,g_bgax2_d[l_ac2].bgax016,g_bgax2_d[l_ac2].bgax017,
                            g_bgax2_d[l_ac2].bgax018,g_bgax2_d[l_ac2].bgax019,g_bgax2_d[l_ac2].bgax020,g_bgax2_d[l_ac2].bgax021,g_bgax2_d[l_ac2].bgax022,
                            g_bgax2_d[l_ac2].bgax023,g_bgax2_d[l_ac2].bgax024,g_bgax2_d[l_ac2].bgax025,g_bgax2_d[l_ac2].bgax026,
                            g_bgax2_d[l_ac2].bgax027,g_bgax2_d[l_ac2].bgax028,g_bgax2_d[l_ac2].bgax029,g_bgax2_d[l_ac2].bgax030,
                            g_bgax2_d[l_ac2].bgax031,g_bgax2_d[l_ac2].bgax032,g_bgax2_d[l_ac2].bgax033,g_bgax2_d[l_ac2].bgax034,
                            g_bgax2_d[l_ac2].bgax035,g_bgax2_d[l_ac2].bgax036,g_bgax006,g_bgaxstus,
                            g_bgax2_info_d[l_ac].bgaxownid,g_bgax2_info_d[l_ac].bgaxowndp,g_bgax2_info_d[l_ac].bgaxcrtid,
                            g_bgax2_info_d[l_ac].bgaxcrtdp,g_bgax2_info_d[l_ac].bgaxcrtdt,g_bgax2_info_d[l_ac].bgaxmodid,
                            g_bgax2_info_d[l_ac].bgaxmoddt)
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_bgax2_d[l_ac2].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               UPDATE bgax_t SET bgaxstus = g_bgaxstus
                WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                  AND bgax002 = g_bgax_m.bgax002 
                  AND bgax003 = g_bgax2_d_t.bgax003
               IF g_bgax006 = '2' THEN 
                  UPDATE bgax_t SET bgax006 = g_bgax006
                   WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                     AND bgax002 = g_bgax_m.bgax002 
                     AND bgax003 = g_bgax2_d_t.bgax003 
                     AND bgax005 = g_bgax2_d_t.bgax005
               END IF
               LET g_rec_b2=g_rec_b2+1
               DISPLAY g_rec_b2 TO FORMONLY.cnt2
            END IF
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bgax2_d.deleteElement(l_ac2)
               NEXT FIELD bgax005
            END IF
            IF g_bgax2_d_t.bgax003 IS NOT NULL AND g_bgax2_d_t.bgax004 IS NOT NULL THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               IF abgt010_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE abgt010_bcl2
               LET l_count = g_bgax2_d.getLength()
            END IF 
              
         AFTER DELETE 
            
         AFTER FIELD bgax005
            CALL abgt010_bgax005_ref(g_bgax_m.bgax001,'') RETURNING g_bgax2_d[l_ac2].bgax005_desc
            DISPLAY g_bgax2_d[l_ac2].bgax005_desc TO s_detail2[l_ac2].bgax005_desc
            IF NOT abgt010_bgax005_chk(g_bgax_m.bgax001,g_bgax2_d[l_ac2].bgax005) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax005 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax005 = g_bgax2_d_t.bgax005 
               END IF 
               CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax2_d[l_ac2].bgax005) 
                  RETURNING g_bgax2_d[l_ac2].bgax005_desc
               DISPLAY g_bgax2_d[l_ac2].bgax005_desc TO s_detail2[l_ac2].bgax005_desc
               NEXT FIELD bgax005
            END IF 
            CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax2_d[l_ac2].bgax005) 
               RETURNING g_bgax2_d[l_ac2].bgax005_desc
            DISPLAY g_bgax2_d[l_ac2].bgax005_desc TO s_detail2[l_ac2].bgax005_desc
               
         AFTER FIELD bgax015   
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax015 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax015 = g_bgax2_d_t.bgax015
               END IF 
               NEXT FIELD bgax015  
            END IF 
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax015) THEN
              INITIALIZE g_chkparam.* TO NULL
              SELECT DISTINCT bgaa002 INTO  l_bgaa002 FROM bgaa_t
               WHERE bgaaent = g_enterprise AND bgaa001 = g_bgax_m.bgax001
              LET g_chkparam.arg1 = l_bgaa002
              LET g_chkparam.arg2 = g_bgax2_d[l_ac2].bgax015
              #160318-00025#1--add--str
              LET g_errshow = TRUE 
              LET g_chkparam.err_str[1] = "abg-00068:sub-01302|abgi030|",cl_get_progname("abgi030",g_lang,"2"),"|:EXEPROGabgi030"
              #160318-00025#1--add--end              
              IF NOT cl_chk_exist("v_bgac004") THEN
                 IF l_cmd = 'a' THEN 
                    LET g_bgax2_d[l_ac2].bgax015 = ''
                 ELSE
                    LET g_bgax2_d[l_ac2].bgax015 = g_bgax2_d_t.bgax015
                 END IF 
                 NEXT FIELD bgax015  
              END IF
           END IF
         ON ACTION controlp INFIELD bgax015
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax015             
            CALL q_bgac004()                                #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax015 = g_qryparam.return1
            DISPLAY g_bgax2_d[l_ac2].bgax015 TO bgax015
            NEXT FIELD bgax015
            
         AFTER FIELD bgax016
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax016 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax016 = g_bgax2_d_t.bgax016
               END IF 
               NEXT FIELD bgax016  
            END IF 
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax016) THEN
               CALL s_get_orga('6',g_bgax2_d[l_ac2].bgax016,'',g_today) 
               RETURNING l_success,g_bgax2_d[l_ac2].bgax016,l_ref_field,l_ref_field,l_date,l_date,l_errno
               IF l_success = FALSE THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = l_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax016
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax016 = g_bgax2_d_t.bgax016
                  NEXT FIELD bgax016
               END IF
            END IF
            
         ON ACTION controlp INFIELD bgax016
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax016             
            LET g_qryparam.where ="ooed001 = '6' AND ooed006<='",g_today,"' AND (ooed007 IS NULL OR ooed007 >='",g_today,"')"
            CALL q_ooed004_1()                                #呼叫開窗
            LET g_qryparam.where =''
            LET g_bgax2_d[l_ac2].bgax016 = g_qryparam.return1
            DISPLAY g_bgax2_d[l_ac2].bgax016 TO bgax016
            NEXT FIELD bgax016
            
         AFTER FIELD bgax017
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax017 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax017 = g_bgax2_d_t.bgax017
               END IF 
               NEXT FIELD bgax017  
            END IF
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax017) THEN
               CALL s_get_orga('6',g_bgax2_d[l_ac2].bgax017,'',g_today) 
               RETURNING l_success,g_bgax2_d[l_ac2].bgax017,l_ref_field,l_ref_field,l_date,l_date,l_errno
               IF l_success = FALSE THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = l_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax017
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax017 = g_bgax2_d_t.bgax017
                  NEXT FIELD bgax017
               END IF
            END IF 
            
         ON ACTION controlp INFIELD bgax017
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax017             #給予default值
            LET g_qryparam.where ="ooed001 = '6' AND ooed006<='",g_today,"' AND (ooed007 IS NULL OR ooed007 >='",g_today,"')"
            CALL q_ooed004_1()                                 #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax017 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bgax2_d[l_ac2].bgax017 TO bgax017              #顯示到畫面上
            LET g_qryparam.where = ""
            NEXT FIELD bgax017
            
         AFTER FIELD bgax018
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax018 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax018 = g_bgax2_d_t.bgax018
               END IF 
               NEXT FIELD bgax018  
            END IF
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax018) THEN
                CALL abgt010_acc_chk('287',g_bgax2_d[l_ac2].bgax018) 
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax018
                  #160318-00005#4 --s add
                  LET g_errparam.replace[1] = 'axmi021'
                  LET g_errparam.replace[2] = cl_get_progname('axmi021',g_lang,"2")
                  LET g_errparam.exeprog = 'axmi021'
                  #160318-00005#4 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax018 = g_bgax2_d_t.bgax018
                  NEXT FIELD bgax018
               END IF 
            END IF 
            
         ON ACTION controlp INFIELD bgax018
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax018             #給予default值
            LET g_qryparam.arg1 = '287'
            CALL q_oocq002()                                #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax018 = g_qryparam.return1              #將開窗取得的值回傳到變
            DISPLAY g_bgax2_d[l_ac2].bgax018 TO bgax018              #顯示到畫面上
            NEXT FIELD bgax018
 
         
         AFTER FIELD bgax019
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax019 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax019 = g_bgax2_d_t.bgax019
               END IF 
               NEXT FIELD bgax019  
            END IF
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax019) THEN
               CALL abgt010_businessman_chk(g_bgax2_d[l_ac2].bgax019) 
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax019
                  #160318-00005#4 --s add
                  LET g_errparam.replace[1] = 'apmm100'
                  LET g_errparam.replace[2] = cl_get_progname('apmm100',g_lang,"2")
                  LET g_errparam.exeprog = 'apmm100'
                  #160318-00005#4 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax019 = g_bgax2_d_t.bgax019
                  NEXT FIELD bgax019
               END IF 
            END IF 
            
         ON ACTION controlp INFIELD bgax019
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax019             #給予default值
            #CALL q_pmaa001()    #160920-00019#3--mark
            CALL q_pmaa001_25()  #160920-00019#3--add                            #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax019 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bgax2_d[l_ac2].bgax019 TO bgax019              #顯示到畫面上
            NEXT FIELD bgax019
            
         AFTER FIELD bgax020
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax020 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax020 = g_bgax2_d_t.bgax020
               END IF 
               NEXT FIELD bgax020  
            END IF
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax020) THEN
               CALL abgt010_businessman_chk(g_bgax2_d[l_ac2].bgax020) 
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax020
                  #160318-00005#4 --s add
                  LET g_errparam.replace[1] = 'apmm100'
                  LET g_errparam.replace[2] = cl_get_progname('apmm100',g_lang,"2")
                  LET g_errparam.exeprog = 'apmm100'
                  #160318-00005#4 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax020 = g_bgax2_d_t.bgax020
                  NEXT FIELD bgax020
               END IF 
            END IF 
            
         ON ACTION controlp INFIELD bgax020
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax020             #給予default值
            #CALL q_pmaa001()    #160920-00019#3--mark
            CALL q_pmaa001_25()  #160920-00019#3--add                             #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax020 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bgax2_d[l_ac2].bgax020 TO bgax020              #顯示到畫面上
            NEXT FIELD bgax020
            
         AFTER FIELD bgax021
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax021 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax021 = g_bgax2_d_t.bgax021
               END IF 
               NEXT FIELD bgax021  
            END IF
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax021) THEN
                CALL abgt010_acc_chk('281',g_bgax2_d[l_ac2].bgax021) 
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax021
                  #160318-00005#4 --s add
                  LET g_errparam.replace[1] = 'axmi027'
                  LET g_errparam.replace[2] = cl_get_progname('axmi027',g_lang,"2")
                  LET g_errparam.exeprog = 'axmi027'
                  #160318-00005#4 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax021 = g_bgax2_d_t.bgax021
                  NEXT FIELD glaq021
               END IF 
            END IF 
            
         ON ACTION controlp INFIELD bgax021
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax021             #給予default值
            LET g_qryparam.arg1 = '281'
            CALL q_oocq002()                                #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax021 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bgax2_d[l_ac2].bgax021 TO bgax021              #顯示到畫面上
            NEXT FIELD bgax021 
            
         AFTER FIELD bgax022
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax022 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax022 = g_bgax2_d_t.bgax022
               END IF 
               NEXT FIELD bgax022  
            END IF
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax022) THEN
               CALL abgt010_bgax022_chk(g_bgax2_d[l_ac2].bgax022) 
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax022
                  #160318-00005#4 --s add
                  LET g_errparam.replace[1] = 'arti202'
                  LET g_errparam.replace[2] = cl_get_progname('arti202',g_lang,"2")
                  LET g_errparam.exeprog = 'arti202'
                  #160318-00005#4 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax022 = g_bgax2_d_t.bgax022
                  NEXT FIELD bgax022
               END IF 
            END IF
            
         ON ACTION controlp INFIELD bgax022
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax022             #給予default值
            CALL q_rtax001_1()                                #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax022 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bgax2_d[l_ac2].bgax022 TO bgax022              #顯示到畫面上
            NEXT FIELD bgax022  
            
         AFTER FIELD bgax023
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax023 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax023 = g_bgax2_d_t.bgax023
               END IF 
               NEXT FIELD bgax023  
            END IF
            IF NOT cl_null(g_bgax2_d[l_ac2].bgax023) THEN
               CALL abgt010_bgax023_chk(g_bgax2_d[l_ac2].bgax023) 
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bgax2_d[l_ac2].bgax023
                  #160318-00005#4 --s add
                  LET g_errparam.replace[1] = 'aooi130'
                  LET g_errparam.replace[2] = cl_get_progname('aooi130',g_lang,"2")
                  LET g_errparam.exeprog = 'aooi130'
                  #160318-00005#4 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bgax2_d[l_ac2].bgax023 = g_bgax2_d_t.bgax023
                  NEXT FIELD bgax023
               END IF 
            END IF 
         
         ON ACTION controlp INFIELD bgax023
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax023             #給予default值
            CALL q_ooag001_2()                                #呼叫開窗
            LET g_bgax2_d[l_ac2].bgax023 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bgax2_d[l_ac2].bgax023 TO bgax023              #顯示到畫面上
            NEXT FIELD bgax023
            
         #SA沒有規劃完成，暫缺
         AFTER FIELD bgax024
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax024 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax024 = g_bgax2_d_t.bgax024
               END IF 
               NEXT FIELD bgax024  
            END IF
         #ON ACTION controlp INFIELD bgax024
         AFTER FIELD bgax025
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax025 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax025 = g_bgax2_d_t.bgax025
               END IF 
               NEXT FIELD bgax025  
            END IF
         #ON ACTION controlp INFIELD bgax025
         AFTER FIELD bgax026
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax026 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax026 = g_bgax2_d_t.bgax026
               END IF 
               NEXT FIELD bgax026  
            END IF
         #ON ACTION controlp INFIELD bgax026
         AFTER FIELD bgax027
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax027 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax027 = g_bgax2_d_t.bgax027
               END IF 
               NEXT FIELD bgax027  
            END IF
         #ON ACTION controlp INFIELD bgax027
         AFTER FIELD bgax028
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax028 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax028 = g_bgax2_d_t.bgax028
               END IF 
               NEXT FIELD bgax028  
            END IF
         #ON ACTION controlp INFIELD bgax028
         AFTER FIELD bgax029
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax029 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax029 = g_bgax2_d_t.bgax029
               END IF 
               NEXT FIELD bgax029  
            END IF
         #ON ACTION controlp INFIELD bgax029
         AFTER FIELD bgax030
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax030 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax030 = g_bgax2_d_t.bgax030
               END IF 
               NEXT FIELD bgax030  
            END IF
         #ON ACTION controlp INFIELD bgax030
         AFTER FIELD bgax031
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax031 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax031 = g_bgax2_d_t.bgax031
               END IF 
               NEXT FIELD bgax031  
            END IF
         #ON ACTION controlp INFIELD bgax031
         AFTER FIELD bgax032
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax032 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax032 = g_bgax2_d_t.bgax032
               END IF 
               NEXT FIELD bgax032  
            END IF
         #ON ACTION controlp INFIELD bgax032
         AFTER FIELD bgax033
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax033 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax033 = g_bgax2_d_t.bgax033
               END IF 
               NEXT FIELD bgax033  
            END IF
         #ON ACTION controlp INFIELD bgax033
         AFTER FIELD bgax034
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax034 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax034 = g_bgax2_d_t.bgax034
               END IF 
               NEXT FIELD bgax034  
            END IF
         #ON ACTION controlp INFIELD bgax034
         AFTER FIELD bgax035
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax035 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax035 = g_bgax2_d_t.bgax035
               END IF 
               NEXT FIELD bgax035  
            END IF
         #ON ACTION controlp INFIELD bgax035
         AFTER FIELD bgax036
            IF NOT abgt010_second_body_key_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax005,l_cmd) THEN
               IF l_cmd = 'a' THEN 
                  LET g_bgax2_d[l_ac2].bgax036 = ''
               ELSE
                  LET g_bgax2_d[l_ac2].bgax036 = g_bgax2_d_t.bgax036
               END IF 
               NEXT FIELD bgax036  
            END IF
         #ON ACTION controlp INFIELD bgax036
         
         AFTER FIELD bgax008
            CALL abgt010_bgax011_bgax012_ref(g_bgax2_d[l_ac2].bgax008,g_bgax2_d[l_ac2].bgax009,g_bgax2_d[l_ac2].bgax010)
               RETURNING g_bgax2_d[l_ac2].bgax011,g_bgax2_d[l_ac2].bgax012
            
         AFTER FIELD bgax009
            CALL abgt010_bgax011_bgax012_ref(g_bgax2_d[l_ac2].bgax008,g_bgax2_d[l_ac2].bgax009,g_bgax2_d[l_ac2].bgax010)
               RETURNING g_bgax2_d[l_ac2].bgax011,g_bgax2_d[l_ac2].bgax012
        
         AFTER FIELD bgax010
            CALL abgt010_bgax011_bgax012_ref(g_bgax2_d[l_ac2].bgax008,g_bgax2_d[l_ac2].bgax009,g_bgax2_d[l_ac2].bgax010)
               RETURNING g_bgax2_d[l_ac2].bgax011,g_bgax2_d[l_ac2].bgax012
         

         #預算目標：q_bgae002摻入預算組別（根據bgax001到bgaa_t中抓取bgaa0008）
         ON ACTION controlp INFIELD bgax005
            SELECT bgaa008 INTO l_bgaa008 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = g_bgax_m.bgax001
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgax2_d[l_ac2].bgax005  #給予default值
            LET g_qryparam.arg1 = l_bgaa008                   #給予arg
            CALL q_bgae002()                                  #呼叫開窗
            INITIALIZE g_qryparam.where TO NULL
            LET g_bgax2_d[l_ac2].bgax005 = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_bgax2_d[l_ac2].bgax005 TO bgax005       #顯示到畫面上
            CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax2_d[l_ac2].bgax005) RETURNING g_bgax2_d[l_ac2].bgax005_desc
            NEXT FIELD bgax005 
         
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_bgax2_d[l_ac2].* = g_bgax2_d_t.*
               CLOSE abgt010_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_bgax2_d[l_ac2].bgax003
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bgax2_d[l_ac2].* = g_bgax2_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_bgax2_info_d[l_ac].bgaxmodid = g_user
               LET g_bgax2_info_d[l_ac].bgaxmoddt = cl_get_current()
            
               UPDATE bgax_t SET (bgax001,bgax002,bgax003,bgax004,bgax005,bgax008,bgax009,bgax010,bgax011, 
                   bgax012,bgax013,bgax014,
                   bgax015,bgax016,bgax017,bgax018,bgax019,bgax020,bgax021,bgax022,bgax023,bgax024,
                   bgax025,bgax026,bgax027,bgax028,bgax029,bgax030,bgax031,bgax032,bgax033,bgax034,
                   bgax035,bgax036,bgaxmodid,bgaxmoddt) = (g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax2_d[l_ac2].bgax003, 
                   g_bgax2_d[l_ac2].bgax004,g_bgax2_d[l_ac2].bgax005,g_bgax2_d[l_ac2].bgax008,g_bgax2_d[l_ac2].bgax009, 
                   g_bgax2_d[l_ac2].bgax010,g_bgax2_d[l_ac2].bgax011,g_bgax2_d[l_ac2].bgax012,g_bgax2_d[l_ac2].bgax013, 
                   g_bgax2_d[l_ac2].bgax014,
                   g_bgax2_d[l_ac2].bgax015,g_bgax2_d[l_ac2].bgax016,g_bgax2_d[l_ac2].bgax017,
                   g_bgax2_d[l_ac2].bgax018,g_bgax2_d[l_ac2].bgax019,g_bgax2_d[l_ac2].bgax020,g_bgax2_d[l_ac2].bgax021,g_bgax2_d[l_ac2].bgax022,
                   g_bgax2_d[l_ac2].bgax023,g_bgax2_d[l_ac2].bgax024,g_bgax2_d[l_ac2].bgax025,g_bgax2_d[l_ac2].bgax026,
                   g_bgax2_d[l_ac2].bgax027,g_bgax2_d[l_ac2].bgax028,g_bgax2_d[l_ac2].bgax029,g_bgax2_d[l_ac2].bgax030,
                   g_bgax2_d[l_ac2].bgax031,g_bgax2_d[l_ac2].bgax032,g_bgax2_d[l_ac2].bgax033,g_bgax2_d[l_ac2].bgax034,
                   g_bgax2_d[l_ac2].bgax035,g_bgax2_d[l_ac2].bgax036,
                   g_bgax2_info_d[l_ac].bgaxmodid,g_bgax2_info_d[l_ac].bgaxmoddt)
                WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                 AND bgax002 = g_bgax_m.bgax002 
                 AND bgax003 = g_bgax2_d_t.bgax003 #項次   
                 AND bgax004 = g_bgax2_d_t.bgax004  
 
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bgax_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                    UPDATE bgax_t SET bgaxstus = g_bgaxstus
                     WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                       AND bgax002 = g_bgax_m.bgax002 
                       AND bgax003 = g_bgax2_d_t.bgax003  
                    IF g_bgax006 = '2' THEN 
                        UPDATE bgax_t SET bgax006 = g_bgax006
                         WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
                           AND bgax002 = g_bgax_m.bgax002 
                           AND bgax003 = g_bgax2_d_t.bgax003 
                           AND bgax005 = g_bgax2_d_t.bgax005
                    END IF
               END CASE
            END IF
 
         AFTER INPUT
            #判断单身资料金额是否和单头一致
            IF NOT l_flag_detail2 THEN 
               IF NOT abgt010_detail2_chk(g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax003,g_bgax005)  THEN 
                  NEXT FIELD bgax015
               END IF 
            END IF 
            
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_bgax2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac2
            LET li_reproduce_target = g_bgax2_d.getLength()+1
            
      END INPUT
      
      BEFORE DIALOG
         LET g_current_sw = FALSE
         
      ON ACTION mainhidden       #主頁摺疊
         IF g_main_hidden THEN
            CALL gfrm_curr.setElementHidden("s_browse",0)
            CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
            LET g_main_hidden = 0
         ELSE
            CALL gfrm_curr.setElementHidden("s_browse",1)
            CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
            LET g_main_hidden = 1
         END IF
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
END FUNCTION
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abgt010_show()
   IF g_bfill = "Y" THEN
      CALL abgt010_b_fill(g_wc2) #單身填充
      CALL abgt010_b_fill2('0') #單身填充
   END IF
   LET g_bgax_m_t.* = g_bgax_m.*      #保存單頭舊值
   DISPLAY BY NAME g_bgax_m.bgax001,g_bgax_m.bgax002
   CALL abgt010_b_fill(g_wc2_table1)                 #單身
   CALL abgt010_b_fill2(g_wc3_table1) #單身填充

   CALL abgt010_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
END FUNCTION
#+ 帶出reference資料
PRIVATE FUNCTION abgt010_ref_show()
   CALL abgt010_bgax001_ref(g_bgax_m.bgax001) 
      RETURNING g_bgax_m.bgax001_desc,g_bgax_m.bgaa002,g_bgax_m.bgaa002_desc,g_bgax_m.bgaa003,
                g_bgax_m.bgaa003_desc
   DISPLAY g_bgax_m.bgax001_desc TO bgax001_desc
   DISPLAY g_bgax_m.bgaa002 TO bgaa002
   DISPLAY g_bgax_m.bgaa002_desc TO bgaa002_desc
   DISPLAY g_bgax_m.bgaa003 TO bgaa003
   DISPLAY g_bgax_m.bgaa003_desc TO bgaa003_desc
END FUNCTION
#+ 資料刪除
PRIVATE FUNCTION abgt010_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   
   IF g_bgax_m.bgax001 IS NULL OR g_bgax_m.bgax002 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
 
   SELECT UNIQUE bgax001,bgax002
     INTO g_bgax_m.bgax001,g_bgax_m.bgax002
     FROM bgax_t
    WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
   CALL s_transaction_begin()
   OPEN abgt010_cl USING g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002
   
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN abgt010_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abgt010_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #鎖住將被更改或取消的資料
   FETCH abgt010_cl INTO g_bgax_m.bgax001,g_bgax_m.bgax001_desc,g_bgax_m.bgax002,
                         g_bgax_m.bgaa002,g_bgax_m.bgaa002_desc,g_bgax_m.bgaa003,g_bgax_m.bgaa003_desc
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bgax_m.bgax001
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   CALL abgt010_show()

   IF cl_ask_del_master() THEN              #確認一下
      CALL g_pk_array.clear()         
      LET g_pk_array[1].column = "bgax001"
      LET g_pk_array[1].values = g_bgax_m.bgax001
      LET g_pk_array[2].column = "bgax002"      
      LET g_pk_array[2].values = g_bgax_m.bgax002   
      CALL cl_doc_remove()    
 
      DELETE FROM bgax_t WHERE bgaxent = g_enterprise 
         AND bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "bgax_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      END IF
 
      CLEAR FORM
      CALL g_bgax_d.clear() 
      CALL g_bgax2_d.clear() 
      CALL g_browser.clear() 

      CALL abgt010_ui_browser_refresh()  
       
      IF g_browser_cnt > 0 THEN 
         CALL abgt010_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL abgt010_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE abgt010_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_bgax_m.bgax001,'D')
END FUNCTION
#+ 單身陣列填充
PRIVATE FUNCTION abgt010_b_fill(p_wc2)
   DEFINE p_wc2      STRING   
 
   #先清空單身變數內容
   CALL g_bgax_d.clear()
   CALL g_bgax_info_d.clear()
   LET g_sql = "SELECT  UNIQUE bgax003,bgax004,bgax005,'',bgax008,bgax009,bgax010,bgax011,bgax012,bgax013,bgax014, ",
               " bgax003,bgax004,bgax005,'',bgaxmodid,'',bgaxmoddt,bgaxownid,'',bgaxowndp,'',bgaxcrtid,'',bgaxcrtdp,'',bgaxcrtdt FROM bgax_t",   
               " WHERE bgaxent= ? AND bgax001=? AND bgax002=? AND bgax015 is null "  
   IF NOT cl_null(g_bgax003) THEN
      LET g_sql = g_sql," AND bgax003 = '",g_bgax003,"'"
   ELSE
      SELECT bgaa011 INTO g_bgax003 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = g_bgax_m.bgax001
      LET g_sql = g_sql," AND bgax003 = '",g_bgax003,"'"
   END IF 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED
   END IF

   #判斷是否填充
   IF abgt010_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY bgax_t.bgax003,bgax_t.bgax004"
      PREPARE abgt010_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR abgt010_pb
      LET g_cnt = l_ac
      LET l_ac = 1
      OPEN b_fill_cs USING g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002         
      FOREACH b_fill_cs INTO g_bgax_d[l_ac].bgax003,g_bgax_d[l_ac].bgax004,g_bgax_d[l_ac].bgax005,g_bgax_d[l_ac].bgax005_desc,g_bgax_d[l_ac].bgax008, 
                             g_bgax_d[l_ac].bgax009,g_bgax_d[l_ac].bgax010,g_bgax_d[l_ac].bgax011,g_bgax_d[l_ac].bgax012, 
                             g_bgax_d[l_ac].bgax013,g_bgax_d[l_ac].bgax014,g_bgax_info_d[l_ac].bgax003,g_bgax_info_d[l_ac].bgax004,  
                             g_bgax_info_d[l_ac].bgax005,g_bgax_info_d[l_ac].bgax005_desc,
                             g_bgax_info_d[l_ac].bgaxmodid,g_bgax_info_d[l_ac].bgaxmodid_desc,g_bgax_info_d[l_ac].bgaxmoddt,
                             g_bgax_info_d[l_ac].bgaxownid,g_bgax_info_d[l_ac].bgaxownid_desc,g_bgax_info_d[l_ac].bgaxowndp,g_bgax_info_d[l_ac].bgaxowndp_desc,
                             g_bgax_info_d[l_ac].bgaxcrtid,g_bgax_info_d[l_ac].bgaxcrtid_desc,g_bgax_info_d[l_ac].bgaxcrtdp,g_bgax_info_d[l_ac].bgaxcrtdp_desc,
                             g_bgax_info_d[l_ac].bgaxcrtdt             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax_d[l_ac].bgax005) RETURNING g_bgax_d[l_ac].bgax005_desc
         CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax_info_d[l_ac].bgax005) RETURNING g_bgax_info_d[l_ac].bgax005_desc
         CALL abgt010_common_ref(g_bgax_info_d[l_ac].bgaxmodid,g_bgax_info_d[l_ac].bgaxownid,
                   g_bgax_info_d[l_ac].bgaxowndp,g_bgax_info_d[l_ac].bgaxcrtid,g_bgax_info_d[l_ac].bgaxcrtdp)
            RETURNING g_bgax_info_d[l_ac].bgaxmodid_desc,g_bgax_info_d[l_ac].bgaxownid_desc,
                   g_bgax_info_d[l_ac].bgaxowndp_desc,g_bgax_info_d[l_ac].bgaxcrtid_desc,g_bgax_info_d[l_ac].bgaxcrtdp_desc
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
      END FOREACH
      CALL g_bgax_d.deleteElement(g_bgax_d.getLength())
      CALL g_bgax_info_d.deleteElement(g_bgax_info_d.getLength())
   END IF
   
   LET g_rec_b=g_bgax_d.getLength()
   DISPLAY g_rec_b TO FORMONLY.cnt  
   IF g_rec_b > 0 THEN 
      DISPLAY 1 TO FORMONLY.idx
   ELSE
      DISPLAY 0 TO FORMONLY.idx
   END IF 
   
   LET l_ac = g_cnt
   LET g_cnt = 0 
   FREE abgt010_pb   
END FUNCTION
#+ 單身陣列填充2
PRIVATE FUNCTION abgt010_b_fill2(p_wc2)
   DEFINE p_wc2      STRING   
   DEFINE p_ac       LIKE type_t.num5
   #先清空單身變數內容
   CALL g_bgax2_d.clear()
   CALL g_bgax2_info_d.clear()
   LET g_sql = "SELECT  UNIQUE bgax003,bgax004,bgax005,'',bgax015,bgax016,bgax017,bgax018,",
               " bgax019,bgax020,bgax021,bgax022,bgax023,bgax024,bgax025,bgax026,bgax027,bgax028,",
               " bgax029,bgax030,bgax031,bgax032,bgax033,bgax034,bgax035,bgax036,bgax008,bgax009,",
               " bgax010,bgax011,bgax012,bgax013,bgax014, ",
               " bgax003,bgax004,bgax005,'',bgaxmodid,'',bgaxmoddt,bgaxownid,'',bgaxowndp,'',bgaxcrtid,'',bgaxcrtdp,'',bgaxcrtdt FROM bgax_t",   
               " WHERE bgaxent= ? AND bgax001=? AND bgax002=? AND bgax015 is not null "
   IF NOT cl_null(g_bgax003) THEN
      LET g_sql = g_sql," AND bgax003 = '",g_bgax003,"'"
   ELSE
      SELECT bgaa011 INTO g_bgax003 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = g_bgax_m.bgax001
      LET g_sql = g_sql," AND bgax003 = '",g_bgax003,"'"
   END IF
   IF NOT cl_null(g_bgax005) THEN
      LET g_sql = g_sql ," AND bgax005 = '",g_bgax005,"'"
   ELSE
      IF l_ac >= 1 THEN 
         LET g_sql = g_sql ," AND bgax005 = '",g_bgax_d[l_ac].bgax005,"'"
      END IF 
   END IF 
   IF NOT cl_null(g_wc3_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc3_table1 CLIPPED
   END IF

   #判斷是否填充
   IF abgt010_fill2_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY bgax_t.bgax003,bgax_t.bgax004"
      PREPARE abgt010_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR abgt010_pb2
      LET g_cnt = l_ac2
      LET l_ac2 = 1
      OPEN b_fill_cs2 USING g_enterprise,g_bgax_m.bgax001,g_bgax_m.bgax002                    
      FOREACH b_fill_cs2 INTO g_bgax2_d[l_ac2].bgax003,g_bgax2_d[l_ac2].bgax004,g_bgax2_d[l_ac2].bgax005,g_bgax2_d[l_ac2].bgax005_desc,
                              g_bgax2_d[l_ac2].bgax015,g_bgax2_d[l_ac2].bgax016,g_bgax2_d[l_ac2].bgax017,
                              g_bgax2_d[l_ac2].bgax018,g_bgax2_d[l_ac2].bgax019,g_bgax2_d[l_ac2].bgax020,g_bgax2_d[l_ac2].bgax021,g_bgax2_d[l_ac2].bgax022,
                              g_bgax2_d[l_ac2].bgax023,g_bgax2_d[l_ac2].bgax024,g_bgax2_d[l_ac2].bgax025,g_bgax2_d[l_ac2].bgax026,
                              g_bgax2_d[l_ac2].bgax027,g_bgax2_d[l_ac2].bgax028,g_bgax2_d[l_ac2].bgax029,g_bgax2_d[l_ac2].bgax030,
                              g_bgax2_d[l_ac2].bgax031,g_bgax2_d[l_ac2].bgax032,g_bgax2_d[l_ac2].bgax033,g_bgax2_d[l_ac2].bgax034,
                              g_bgax2_d[l_ac2].bgax035,g_bgax2_d[l_ac2].bgax036,g_bgax2_d[l_ac2].bgax008, 
                              g_bgax2_d[l_ac2].bgax009,g_bgax2_d[l_ac2].bgax010,g_bgax2_d[l_ac2].bgax011,g_bgax2_d[l_ac2].bgax012, 
                              g_bgax2_d[l_ac2].bgax013,g_bgax2_d[l_ac2].bgax014,g_bgax2_info_d[l_ac2].bgax003,g_bgax2_info_d[l_ac2].bgax004,  
                              g_bgax2_info_d[l_ac2].bgax005,g_bgax2_info_d[l_ac2].bgax005_desc,
                              g_bgax2_info_d[l_ac2].bgaxmodid,g_bgax2_info_d[l_ac2].bgaxmodid_desc,g_bgax2_info_d[l_ac2].bgaxmoddt,
                              g_bgax2_info_d[l_ac2].bgaxownid,g_bgax2_info_d[l_ac2].bgaxownid_desc,g_bgax2_info_d[l_ac2].bgaxowndp,g_bgax2_info_d[l_ac2].bgaxowndp_desc,
                              g_bgax2_info_d[l_ac2].bgaxcrtid,g_bgax2_info_d[l_ac2].bgaxcrtid_desc,g_bgax2_info_d[l_ac2].bgaxcrtdp,g_bgax2_info_d[l_ac2].bgaxcrtdp_desc,
                              g_bgax2_info_d[l_ac2].bgaxcrtdt             
                                                 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax2_d[l_ac2].bgax005) RETURNING g_bgax2_d[l_ac2].bgax005_desc
         CALL abgt010_bgax005_ref(g_bgax_m.bgax001,g_bgax2_info_d[l_ac2].bgax005) RETURNING g_bgax2_info_d[l_ac2].bgax005_desc
         
         CALL abgt010_common_ref(g_bgax2_info_d[l_ac2].bgaxmodid,g_bgax2_info_d[l_ac2].bgaxownid,
                   g_bgax2_info_d[l_ac2].bgaxowndp,g_bgax2_info_d[l_ac2].bgaxcrtid,g_bgax2_info_d[l_ac2].bgaxcrtdp)
            RETURNING g_bgax2_info_d[l_ac2].bgaxmodid_desc,g_bgax2_info_d[l_ac2].bgaxownid_desc,
                   g_bgax2_info_d[l_ac2].bgaxowndp_desc,g_bgax2_info_d[l_ac2].bgaxcrtid_desc,g_bgax2_info_d[l_ac2].bgaxcrtdp_desc
         LET l_ac2 = l_ac2 + 1
         IF l_ac2 > g_max_rec THEN
            EXIT FOREACH
         END IF
      END FOREACH
      CALL g_bgax2_d.deleteElement(g_bgax2_d.getLength())
      CALL g_bgax2_info_d.deleteElement(g_bgax2_info_d.getLength())
   END IF
   
   LET g_rec_b2=g_bgax2_d.getLength()
   DISPLAY g_rec_b2 TO FORMONLY.cnt2  
   IF g_rec_b2 > 0 THEN 
      DISPLAY 1 TO FORMONLY.idx2
   ELSE
      DISPLAY 0 TO FORMONLY.idx2
   END IF 
   LET l_ac2 = g_cnt
   LET g_cnt = 0 
   FREE abgt010_pb   
END FUNCTION
#+ 單身db資料刪除
PRIVATE FUNCTION abgt010_before_delete()
   DELETE FROM bgax_t
    WHERE bgaxent = g_enterprise AND bgax001 = g_bgax_m.bgax001 
    AND bgax002 = g_bgax_m.bgax002 AND bgax003 = g_bgax_d_t.bgax003
    AND bgax005 = g_bgax_d_t.bgax005
  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "bgax_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE 
   END IF

   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
END FUNCTION
#+ 單頭欄位開啟設定
PRIVATE FUNCTION abgt010_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bgax001,bgax002",TRUE)
   END IF
END FUNCTION
#+ 單頭欄位關閉設定
PRIVATE FUNCTION abgt010_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("bgax001,bgax002",FALSE)
   END IF
END FUNCTION
#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION abgt010_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING 
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " bgax001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bgax002 = '", g_argv[02], "' AND "
   END IF
 
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   LET g_wc2 = " 1=1"
   LET g_wc3 = " 1=1"
END FUNCTION
#+ 單身填充確認
PRIVATE FUNCTION abgt010_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   RETURN FALSE
END FUNCTION
#+ 單身填充確認
PRIVATE FUNCTION abgt010_fill2_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc3_table1) OR g_wc3_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc3_table1) AND g_wc3_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   RETURN FALSE
END FUNCTION
 #對單頭key值欄位進行重新性檢查
PRIVATE FUNCTION abgt010_head_key_chk(p_bgax001,p_bgax002,p_bgax001_t,p_bgax002_t,ps_cmd)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax001_t LIKE bgax_t.bgax001
   DEFINE p_bgax002_t LIKE bgax_t.bgax002
   DEFINE ps_cmd     LIKE type_t.chr5
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE

   IF NOT cl_null(p_bgax001) AND NOT cl_null(p_bgax002) THEN 
      IF ps_cmd = 'a' OR ( ps_cmd = 'u' AND (p_bgax001 != p_bgax001_t  OR p_bgax002 != p_bgax002_t )) THEN 
         IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bgax_t WHERE "||"bgaxent = '" ||g_enterprise||
                              "' AND "||"bgax001 = '"||p_bgax001 ||"' AND "|| "bgax002 = '"||p_bgax002 ||"'",'std-00004',0) THEN 
            LET r_success = FALSE
         END IF
      END IF
   END IF 
   
   RETURN r_success
END FUNCTION
#對單頭預算編號（bgax001）進行有效性檢查
PRIVATE FUNCTION abgt010_bgax001_chk(p_bgax001)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE

   IF NOT cl_null(p_bgax001) THEN
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = p_bgax001
      #160318-00025#1--add--str
      LET g_errshow = TRUE 
      LET g_chkparam.err_str[1] = "abg-00008:sub-01302|abgi010|",cl_get_progname("abgi010",g_lang,"2"),"|:EXEPROGabgi010"
      #160318-00025#1--add--end
      IF NOT cl_chk_exist("v_bgaa001") THEN
         LET r_success = FALSE  
      END IF
   END IF
   
   RETURN r_success 
END FUNCTION
#检查第一单身bgax005的有效性
PRIVATE FUNCTION abgt010_bgax005_chk(p_bgax001,p_bgax005)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE l_bgaa008 LIKE bgaa_t.bgaa008
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   LET l_bgaa008 = ''

   SELECT bgaa008 INTO l_bgaa008 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = p_bgax001
   
   IF NOT cl_null(p_bgax005) THEN
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = l_bgaa008
      LET g_chkparam.arg2 = p_bgax005
      #160318-00025#1--add--str
      LET g_errshow = TRUE 
      LET g_chkparam.err_str[1] = "abg-00068:sub-01302|abgi030|",cl_get_progname("abgi030",g_lang,"2"),"|:EXEPROGabgi030"
      #160318-00025#1--add--end
      IF NOT cl_chk_exist("v_bgae001") THEN
         LET r_success = FALSE  
      END IF
   END IF
   
   RETURN r_success 
END FUNCTION
#根據前二期實際，前一期實際，當前期實際，計算出三期平均值，三期增長率
#三期平均值 = （前二期實際+前一期實際+當前期實際）/3
#三期增長率 = (當前期實際-前二期實際)/前二期實際:如果前二期實際為0那麼三期增長率給0
PRIVATE FUNCTION abgt010_bgax011_bgax012_ref(p_bgax008,p_bgax009,p_bgax010)
   DEFINE p_bgax008 LIKE bgax_t.bgax008
   DEFINE p_bgax009 LIKE bgax_t.bgax009
   DEFINE p_bgax010 LIKE bgax_t.bgax010
   DEFINE r_bgax011 LIKE bgax_t.bgax011
   DEFINE r_bgax012 LIKE bgax_t.bgax012

   LET r_bgax011 = 0
   LET r_bgax012 = 0
   
   IF cl_null(p_bgax008) THEN LET p_bgax008 = 0 END IF 
   IF cl_null(p_bgax009) THEN LET p_bgax009 = 0 END IF 
   IF cl_null(p_bgax010) THEN LET p_bgax010 = 0 END IF 
   LET r_bgax011 = (p_bgax008+p_bgax009+p_bgax010) / 3
   IF p_bgax010 = 0 THEN 
      LET r_bgax012 = 0
   ELSE 
      LET r_bgax012 = (p_bgax010-p_bgax008) / p_bgax008
   END IF 
   LET r_bgax012 = r_bgax012 * 100
   RETURN r_bgax011,r_bgax012
END FUNCTION

PRIVATE FUNCTION abgt010_detail2_chk(p_bgax001,p_bgax002,p_bgax003,p_bgax005)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE l_bgax013_null LIKE bgax_t.bgax013
   DEFINE l_bgax014_null LIKE bgax_t.bgax014
   DEFINE l_bgax013_sum  LIKE bgax_t.bgax013
   DEFINE l_bgax014_sum  LIKE bgax_t.bgax014
   DEFINE r_success LIKE type_t.num5

   LET r_success = FALSE
   LET l_bgax013_null = 0
   LET l_bgax014_null = 0 
   LET l_bgax013_sum  = 0 
   LET l_bgax014_sum  = 0
   
   SELECT SUM(bgax013) INTO l_bgax013_null FROM bgax_t WHERE bgaxent = g_enterprise 
      AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003 AND bgax015 IS NULL 
      AND bgax005 = p_bgax005
   SELECT SUM(bgax014) INTO l_bgax014_null FROM bgax_t WHERE bgaxent = g_enterprise 
      AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003 AND bgax015 IS NULL 
      AND bgax005 = p_bgax005
   SELECT SUM(bgax013) INTO l_bgax013_sum FROM bgax_t WHERE bgaxent = g_enterprise 
      AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003 AND bgax015 IS NOT NULL
     AND bgax005 = p_bgax005 
   SELECT SUM(bgax014) INTO l_bgax014_sum FROM bgax_t WHERE bgaxent = g_enterprise 
      AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003 AND bgax015 IS NOT NULL 
      AND bgax005 = p_bgax005

   IF cl_null(l_bgax013_null) THEN LET l_bgax013_null = 0 END IF 
   IF cl_null(l_bgax014_null) THEN LET l_bgax014_null = 0 END IF 
   IF cl_null(l_bgax013_sum)  THEN LET l_bgax013_sum  = 0 END IF 
   IF cl_null(l_bgax014_sum)  THEN LET l_bgax014_sum  = 0 END IF 

   IF l_bgax013_null = l_bgax013_sum AND l_bgax014_null = l_bgax014_sum THEN 
      LET r_success = TRUE 
   ELSE
      IF cl_ask_confirm('abg-00066') THEN 
         UPDATE bgax_t SET bgax013 = l_bgax013_sum ,bgax014 = l_bgax014_sum 
          WHERE bgaxent = g_enterprise AND bgax001 = p_bgax001 
             AND bgax002 = p_bgax002 AND bgax003 = p_bgax003 AND bgax015 IS NULL
             AND bgax005 = p_bgax005
         LET r_success = TRUE 
      END IF 
   END IF 
   
   RETURN r_success 
END FUNCTION
 #對第二單身key值欄位進行重新性檢查
PRIVATE FUNCTION abgt010_second_body_key_chk(p_bgax001,p_bgax002,p_bgax003,p_bgax005,ps_cmd)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE ps_cmd    LIKE type_t.chr5
   DEFINE ls_sql    STRING 
   DEFINE ls_cnt    LIKE type_t.num5
   DEFINE r_success LIKE type_t.num5

   IF cl_null(g_bgax2_d[l_ac2].bgax015) THEN LET g_bgax2_d[l_ac2].bgax015 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax016) THEN LET g_bgax2_d[l_ac2].bgax016 = ' ' END IF 
   IF cl_null(g_bgax2_d[l_ac2].bgax017) THEN LET g_bgax2_d[l_ac2].bgax017 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax018) THEN LET g_bgax2_d[l_ac2].bgax018 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax019) THEN LET g_bgax2_d[l_ac2].bgax019 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax020) THEN LET g_bgax2_d[l_ac2].bgax020 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax021) THEN LET g_bgax2_d[l_ac2].bgax021 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax022) THEN LET g_bgax2_d[l_ac2].bgax022 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax023) THEN LET g_bgax2_d[l_ac2].bgax023 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax024) THEN LET g_bgax2_d[l_ac2].bgax024 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax025) THEN LET g_bgax2_d[l_ac2].bgax025 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax026) THEN LET g_bgax2_d[l_ac2].bgax026 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax027) THEN LET g_bgax2_d[l_ac2].bgax027 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax028) THEN LET g_bgax2_d[l_ac2].bgax028 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax029) THEN LET g_bgax2_d[l_ac2].bgax029 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax030) THEN LET g_bgax2_d[l_ac2].bgax030 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax031) THEN LET g_bgax2_d[l_ac2].bgax031 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax032) THEN LET g_bgax2_d[l_ac2].bgax032 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax033) THEN LET g_bgax2_d[l_ac2].bgax033 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax034) THEN LET g_bgax2_d[l_ac2].bgax034 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax035) THEN LET g_bgax2_d[l_ac2].bgax035 = ' ' END IF
   IF cl_null(g_bgax2_d[l_ac2].bgax036) THEN LET g_bgax2_d[l_ac2].bgax036 = ' ' END IF
   
   IF cl_null(g_bgax2_d_t.bgax015) THEN LET g_bgax2_d_t.bgax015 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax016) THEN LET g_bgax2_d_t.bgax016 = ' ' END IF 
   IF cl_null(g_bgax2_d_t.bgax017) THEN LET g_bgax2_d_t.bgax017 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax018) THEN LET g_bgax2_d_t.bgax018 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax019) THEN LET g_bgax2_d_t.bgax019 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax020) THEN LET g_bgax2_d_t.bgax020 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax021) THEN LET g_bgax2_d_t.bgax021 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax022) THEN LET g_bgax2_d_t.bgax022 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax023) THEN LET g_bgax2_d_t.bgax023 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax024) THEN LET g_bgax2_d_t.bgax024 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax025) THEN LET g_bgax2_d_t.bgax025 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax026) THEN LET g_bgax2_d_t.bgax026 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax027) THEN LET g_bgax2_d_t.bgax027 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax028) THEN LET g_bgax2_d_t.bgax028 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax029) THEN LET g_bgax2_d_t.bgax029 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax030) THEN LET g_bgax2_d_t.bgax030 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax031) THEN LET g_bgax2_d_t.bgax031 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax032) THEN LET g_bgax2_d_t.bgax032 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax033) THEN LET g_bgax2_d_t.bgax033 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax034) THEN LET g_bgax2_d_t.bgax034 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax035) THEN LET g_bgax2_d_t.bgax035 = ' ' END IF
   IF cl_null(g_bgax2_d_t.bgax036) THEN LET g_bgax2_d_t.bgax036 = ' ' END IF
   
   LET r_success = TRUE
   IF ps_cmd = 'a' OR ( ps_cmd = 'u' AND 
      (g_bgax2_d[l_ac2].bgax015 != g_bgax2_d_t.bgax015 OR g_bgax2_d[l_ac2].bgax016 != g_bgax2_d_t.bgax016 OR g_bgax2_d[l_ac2].bgax017 != g_bgax2_d_t.bgax017 OR 
       g_bgax2_d[l_ac2].bgax018 != g_bgax2_d_t.bgax018 OR g_bgax2_d[l_ac2].bgax019 != g_bgax2_d_t.bgax019 OR g_bgax2_d[l_ac2].bgax020 != g_bgax2_d_t.bgax020 OR 
       g_bgax2_d[l_ac2].bgax021 != g_bgax2_d_t.bgax021 OR g_bgax2_d[l_ac2].bgax022 != g_bgax2_d_t.bgax022 OR g_bgax2_d[l_ac2].bgax023 != g_bgax2_d_t.bgax023 OR 
       g_bgax2_d[l_ac2].bgax024 != g_bgax2_d_t.bgax024 OR g_bgax2_d[l_ac2].bgax025 != g_bgax2_d_t.bgax025 OR g_bgax2_d[l_ac2].bgax026 != g_bgax2_d_t.bgax026 OR 
       g_bgax2_d[l_ac2].bgax027 != g_bgax2_d_t.bgax027 OR g_bgax2_d[l_ac2].bgax028 != g_bgax2_d_t.bgax028 OR g_bgax2_d[l_ac2].bgax029 != g_bgax2_d_t.bgax029 OR 
       g_bgax2_d[l_ac2].bgax030 != g_bgax2_d_t.bgax030 OR g_bgax2_d[l_ac2].bgax031 != g_bgax2_d_t.bgax031 OR g_bgax2_d[l_ac2].bgax032 != g_bgax2_d_t.bgax032 OR 
       g_bgax2_d[l_ac2].bgax033 != g_bgax2_d_t.bgax033 OR g_bgax2_d[l_ac2].bgax034 != g_bgax2_d_t.bgax034 OR g_bgax2_d[l_ac2].bgax035 != g_bgax2_d_t.bgax035 OR 
       g_bgax2_d[l_ac2].bgax036 != g_bgax2_d_t.bgax036 )) THEN
       
      LET ls_sql = "SELECT COUNT(*) FROM bgax_t WHERE bgaxent = '",g_enterprise,"'",
                   "   AND bgax001 = '",p_bgax001,"' AND bgax002 = '",p_bgax002,"' AND bgax003 = '",p_bgax003,"'",
                   "   AND bgax005 = '",p_bgax005,"' AND bgax015 = '",g_bgax2_d[l_ac2].bgax015,"' AND bgax016 = '",g_bgax2_d[l_ac2].bgax016,"'",
                   "   AND bgax017 = '",g_bgax2_d[l_ac2].bgax017,"' AND bgax018 = '",g_bgax2_d[l_ac2].bgax018,"' AND bgax019 = '",g_bgax2_d[l_ac2].bgax019,"'",
                   "   AND bgax020 = '",g_bgax2_d[l_ac2].bgax020,"' AND bgax021 = '",g_bgax2_d[l_ac2].bgax021,"' AND bgax022 = '",g_bgax2_d[l_ac2].bgax022,"'",
                   "   AND bgax023 = '",g_bgax2_d[l_ac2].bgax023,"' AND bgax024 = '",g_bgax2_d[l_ac2].bgax024,"' AND bgax025 = '",g_bgax2_d[l_ac2].bgax025,"'",
                   "   AND bgax026 = '",g_bgax2_d[l_ac2].bgax026,"' AND bgax027 = '",g_bgax2_d[l_ac2].bgax027,"' AND bgax028 = '",g_bgax2_d[l_ac2].bgax028,"'",
                   "   AND bgax029 = '",g_bgax2_d[l_ac2].bgax029,"' AND bgax030 = '",g_bgax2_d[l_ac2].bgax030,"' AND bgax031 = '",g_bgax2_d[l_ac2].bgax031,"'",
                   "   AND bgax032 = '",g_bgax2_d[l_ac2].bgax032,"' AND bgax033 = '",g_bgax2_d[l_ac2].bgax033,"' AND bgax034 = '",g_bgax2_d[l_ac2].bgax034,"'",
                   "   AND bgax035 = '",g_bgax2_d[l_ac2].bgax035,"' AND bgax036 = '",g_bgax2_d[l_ac2].bgax036,"' "

      PREPARE abgt010_detail2_chk_pre FROM ls_sql
      EXECUTE abgt010_detail2_chk_pre INTO ls_cnt
      IF ls_cnt > 0 THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'std-00004'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE 
      END IF 
   END IF 
   
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION abgt010_rate(p_bgax001,p_glaald,p_amount)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_glaald LIKE glaa_t.glaald
   DEFINE p_amount        LIKE ooan_t.ooan005
   DEFINE l_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE l_bgaa004 LIKE bgaa_t.bgaa004
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_bgav004 LIKE bgav_t.bgav004
   DEFINE l_bgav006 LIKE bgav_t.bgav006
   DEFINE r_rate    LIKE ooan_t.ooan005
   #bgaa003 币别，bgaa004 编制汇率
   SELECT bgaa003,bgaa004 INTO l_bgaa003,l_bgaa004 FROM bgaa_t WHERE bgaaent = g_enterprise
      AND bgaa001 = p_bgax001
   #glaa001 账套币别
   SELECT glaa001 INTO l_glaa001 FROM glaa_t WHERE glaaent = g_enterprise
      AND glaald = p_glaald
   LET r_rate = 1 
   IF p_amount != 0 THEN 
      IF l_bgaa004 != '99' THEN 
         CALL s_aooi160_get_exrate('2',p_glaald,g_today,l_glaa001,l_bgaa003,p_amount,l_bgaa004)
            RETURNING r_rate
      ELSE
         SELECT bgav004,gav006 INTO l_bgav004,l_bgav006 FROM bgav_t WHERE bgavent = g_enterprise AND bgav001 = p_bgav001
            AND ((bgav002 = l_bgaa003 AND bgav005 = l_glaa001) OR (bgav005 = l_bgaa003 AND bgav003 = l_glaa001))
            AND bgav003 IN (SELECT MAX(bgav003) FROM bgav_t WHERE bgavent = g_enterprise AND bgav001 = p_bgav001
            AND bgav003 <= g_today AND 
            ((bgav002 = l_bgaa003 AND bgav005 = l_glaa001) OR (bgav005 = l_bgaa003 AND bgav003 = l_glaa001)))
         IF l_bgav006 = 1 THEN
            LET r_rate =  p_amount * l_bgav004
         ELSE
            LET r_rate = p_amount / l_bgav004
         END IF 
      END IF 
   ELSE 
      LET r_rate = 0
   END IF 
   RETURN r_rate
END FUNCTION

PRIVATE FUNCTION abgt010_s01(p_bgax001,p_user)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_user    LIKE bgai_t.bgai004
   
   OPEN WINDOW w_abgt010_s01 WITH FORM cl_ap_formpath("abg","abgt010_s01")
   CALL cl_ui_init()
   CALL cl_set_combo_scc('lbl_select','9421')
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT g_bgai004,g_sum_type FROM bgai004,lbl_select
         BEFORE INPUT
            IF cl_null(g_sum_type) THEN 
               LET g_sum_type = 1
            END IF 
            
         AFTER FIELD bgai004
            IF NOT cl_null(g_bgai004) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = p_bgax001
               LET g_chkparam.arg2 = g_user
               LET g_chkparam.arg3 = g_bgai004
               #160318-00025#1--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "abg-00049:sub-01302|abgi090|",cl_get_progname("abgi090",g_lang,"2"),"|:EXEPROGabgi090"
               #160318-00025#1--add--end
               IF NOT cl_chk_exist("v_bgai004") THEN 
                  LET g_bgai004 = ''
                  DISPLAY '' TO bgai004_desc
                  NEXT FIELD bgai004
               END IF
            END IF
            CALL abgt010_ooefl001_ref(g_bgai004) RETURNING g_ooefl003
            DISPLAY g_ooefl003 TO bgai004_desc
            
         ON ACTION controlp INFIELD bgai004
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.arg1 = g_bgax_m.bgax001
            LET g_qryparam.arg2 = g_user
            LET g_qryparam.default1 = g_bgai004             
            CALL q_bgai004()                                
            LET g_bgai004 = g_qryparam.return1
            DISPLAY g_bgai004 TO bgai004
            CALL abgt010_ooefl001_ref(g_bgai004) RETURNING g_ooefl003
            DISPLAY g_ooefl003 TO bgai004_desc
            NEXT FIELD bgai004
         AFTER INPUT

      END INPUT

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG

   END DIALOG

   #畫面關閉
   CLOSE WINDOW w_abgt010_s01
   LET INT_FLAG = FALSE
END FUNCTION

PRIVATE FUNCTION abgt010_browser_tree_fill(p_bgaa010,p_bgaa011)
   DEFINE p_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE p_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_n        LIKE type_t.num5
   DEFINE l_pid      LIKE type_t.chr50   #用於樹的第一層
   DEFINE ls_sql      STRING
   DEFINE l_n2       LIKE type_t.num5
   
   CALL g_browser.clear()
   LET g_cnt = 1
   LET l_n = 1
   #第一層的資料
   LET ls_sql = " SELECT UNIQUE ooed002,ooed003 FROM ooed_t ",
               "  WHERE ooedent = '",g_enterprise,"'",
               "    AND ooed001 = '4' ",
               "    AND ooed002 = '",p_bgaa011,"'",
               "    AND ooed003 = '",p_bgaa010,"'",
               #"    AND ooed006 <= '",g_ooed006,"' ",
               #"    AND (ooed007 IS NULL OR ooed007 >= '",g_ooed006,"' ) ",
               "  ORDER BY ooed002 "
   PREPARE master_type_0 FROM ls_sql
   DECLARE master_typecur_0 CURSOR FOR master_type_0
   #第二層的資料
   LET ls_sql = " SELECT UNIQUE ooed004,ooed003 FROM ooed_t ",
               "  WHERE ooedent = '",g_enterprise,"'",
               "    AND ooed001 = '4' ",
               "    AND ooed002 = ?",
               "    AND ooed003 = ?",
               #"    AND ooed006 <= '",g_ooed006,"' ",
               #"    AND (ooed007 IS NULL OR ooed007 >= '",g_ooed006,"' ) ",
               "    AND ooed002 = ooed005 ",
               "    AND ooed004 <> ooed005 ",
               "  ORDER BY ooed004 "
   PREPARE master_type_1 FROM ls_sql
   DECLARE master_typecur_1 CURSOR FOR master_type_1

   INITIALIZE g_browser_root TO NULL
   #初始化l_ac
   LET l_ac = 1
   FOREACH master_typecur_0 INTO g_browser[l_ac].b_ooed002,g_browser[l_ac].b_ooed003
      #確定第一层root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處(LV-1)
      LET g_browser[l_ac].b_ooed002 = g_browser[l_ac].b_ooed002
      LET g_browser[l_ac].b_pid = '0' CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET g_browser[l_ac].b_isExp = TRUE
      #第一層節點編號
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      LET g_cnt = l_ac
      FOREACH master_typecur_1 USING g_browser[l_ac-1].b_ooed002,g_browser[l_ac-1].b_ooed003 INTO g_browser[g_cnt].b_ooed004,g_browser[g_cnt].b_ooed003
         LET g_browser[g_cnt].b_ooed002 = g_browser[l_ac-1].b_ooed002
         LET g_browser[g_cnt].b_ooed004 = g_browser[g_cnt].b_ooed004
         LET g_browser[g_cnt].b_ooed005 = g_browser[l_ac-1].b_ooed004
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = TRUE
         LET g_browser[g_cnt].b_hasC = abgt010_chk_hasC(g_cnt)
         IF g_browser[g_cnt].b_hasC = 1 THEN
            CALL abgt010_browser_expand(g_cnt)
            LET g_cnt = g_browser.getLength()
         END IF
         LET g_cnt = g_cnt +1
      END FOREACH
      LET l_ac = g_browser.getLength()
   END FOREACH
   LET l_ac = l_ac - 1
   CALL g_browser.deleteElement(l_ac+1)
   FOR l_ac = 1 TO g_browser.getLength()
       CALL abgt010_desc_show(l_ac)
   END FOR

   LET g_browser_cnt_tree = g_browser.getLength() - g_browser_root.getLength()
   
   FREE master_type_0
   FREE master_type_1
   
   FOR l_n2 = 1 TO g_browser.getLength()
       IF g_browser[l_n2].b_isExp is null THEN
         CALL abgt010_browser_expand(l_n2)
      END IF
   END FOR
   LET l_ac = 1
END FUNCTION

PRIVATE FUNCTION abgt010_chk_hasC(pi_id)
   DEFINE pi_id    INTEGER
DEFINE li_cnt   INTEGER


   LET g_sql = "SELECT COUNT(*) FROM ooed_t ",
               " WHERE ooedent = '" ||g_enterprise|| "'",
               "   AND ooed004 <> ooed005 ",
               "   AND ooed001 = '4' ",
               #"   AND ooed006 <= '",g_ooed006,"' ",
               #"   AND (ooed007 IS NULL OR ooed007 >= '",g_ooed006,"' ) ", 
               "   AND ooed005 = ? ",
               "   AND ooed002 = ? ",
               "   AND ooed003 = ? "
   PREPARE abgt010_master_chk1 FROM g_sql 
   EXECUTE abgt010_master_chk1 USING g_browser[pi_id].b_ooed004,g_browser[pi_id].b_ooed002,g_browser[pi_id].b_ooed003 INTO li_cnt
   FREE abgt010_master_chk1
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
END FUNCTION

PRIVATE FUNCTION abgt010_browser_expand(p_id)
   DEFINE p_id          LIKE type_t.num10
DEFINE l_id          LIKE type_t.num10
DEFINE l_cnt         LIKE type_t.num10
DEFINE l_keyvalue    LIKE type_t.chr50
DEFINE l_typevalue   LIKE type_t.chr50
DEFINE l_type        LIKE type_t.chr50
DEFINE l_sql         LIKE type_t.chr500
DEFINE ls_source     LIKE type_t.chr500
DEFINE ls_exp_code   LIKE type_t.chr500
DEFINE l_return      LIKE type_t.num5

   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET g_browser[p_id].b_isExp = 1 
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_ooed004
   
         
   LET l_sql = "SELECT UNIQUE ooed004,ooed003 ",
               "  FROM ooed_t ",
               " WHERE ooedent = '",g_enterprise,"' ",
               "   AND ooed005 = '",l_keyvalue,"' ",
               "   AND ooed004 <> ooed005",
               "   AND ooed001 = '4'", 
               #"   AND ooed006 <= '",g_ooed006,"' ",
               "   AND ooed002 = '",g_browser[p_id].b_ooed002,"' ",
               "   AND ooed003 = '",g_browser[p_id].b_ooed003,"' ",
               #"   AND (ooed007 IS NULL OR ooed007 >= '",g_ooed006,"' ) ",
               " ORDER BY ooed004"
   
   PREPARE tree_expand1 FROM l_sql
   DECLARE tree_ex_cur1 CURSOR FOR tree_expand1
  
   LET l_id = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur1 INTO g_browser[l_id].b_ooed004,g_browser[l_id].b_ooed003
      IF cl_null(g_browser[l_id].b_ooed004) THEN
         EXIT FOREACH
      END IF
      #pid=父節點id
      LET g_browser[l_id].b_pid  = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id  = g_browser[p_id].b_id||"."||l_cnt
      LET g_browser[l_id].b_exp = TRUE
      LET g_browser[l_id].b_ooed005 = g_browser[p_id].b_ooed004
      LET g_browser[l_id].b_ooed002 = g_browser[p_id].b_ooed002
      #hasC=確認該節點是否有子孫
      CALL abgt010_desc_show(l_id)
      LET g_browser[l_id].b_hasC = abgt010_chk_hasC(l_id)
      LET l_id = l_id + 1
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      LET l_return = TRUE
   END FOREACH
   LET l_cnt = l_cnt -1
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
END FUNCTION

PRIVATE FUNCTION abgt010_desc_show(pi_ac)
   DEFINE pi_ac          LIKE type_t.num5
DEFINE li_tmp         LIKE type_t.num5
DEFINE l_ooed004_desc LIKE type_t.chr80 
DEFINE ls_msg         STRING

   LET li_tmp = l_ac
   LET l_ac = pi_ac
   IF cl_null(l_ac) OR l_ac = 0 THEN
      LET l_ac = 1
   END IF
   
   IF cl_null(g_browser[l_ac].b_ooed004) AND cl_null(g_browser[l_ac].b_ooed005) THEN
      CALL abgt010_ooefl001_ref(g_browser[l_ac].b_ooed002) RETURNING l_ooed004_desc
      LET ls_msg = cl_getmsg("aoo-00232",g_lang)
      LET g_browser[l_ac].b_show = g_browser[l_ac].b_ooed002,' (',l_ooed004_desc,')','(',ls_msg,g_browser[l_ac].b_ooed003,')'
      SELECT DISTINCT bgaxstus INTO g_browser[l_ac].b_bgaxstus FROM bgax_t WHERE bgax001 = g_bgax_m.bgax001
      AND bgax002 = g_bgax_m.bgax002 AND bgaxent = g_enterprise AND bgax003 = g_browser[l_ac].b_ooed002
   
   ELSE
      CALL abgt010_ooefl001_ref(g_browser[l_ac].b_ooed004) RETURNING l_ooed004_desc
      LET g_browser[l_ac].b_show = g_browser[l_ac].b_ooed004,' (',l_ooed004_desc,')'
      SELECT DISTINCT bgaxstus INTO g_browser[l_ac].b_bgaxstus FROM bgax_t WHERE bgax001 = g_bgax_m.bgax001
      AND bgax002 = g_bgax_m.bgax002 AND bgaxent = g_enterprise AND bgax003 = g_browser[l_ac].b_ooed004
   END IF
   
END FUNCTION

PRIVATE FUNCTION abgt010_bgax008_bgax009_bgax010_def(p_bgax001,p_bgax003,p_bgax005)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE ls_sql    STRING 
   DEFINE l_bgax003 LIKE bgax_t.bgax003
   DEFINE l_bgax008 LIKE bgax_t.bgax008
   DEFINE l_bgax009 LIKE bgax_t.bgax009
   DEFINE l_bgax010 LIKE bgax_t.bgax010
   DEFINE r_bgax008 LIKE bgax_t.bgax008
   DEFINE r_bgax009 LIKE bgax_t.bgax009
   DEFINE r_bgax010 LIKE bgax_t.bgax010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010

   LET r_bgax008 = 0
   LET r_bgax009 = 0
   LET r_bgax010 = 0

   SELECT bgaa011,bgaa010 INTO l_bgaa011,l_bgaa010 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = p_bgax001
   LET ls_sql = "SELECT DISTINCT a.ooed004 FROM ",
                      " (SELECT ooed004,ooed005 FROM ooed_t WHERE ooed002 = '",l_bgaa011,"' ",
                      "     AND ooed003 = '",l_bgaa010,"' AND ooedent = '",g_enterprise,"' ",
                      "     AND ooed001 = '4' AND ooed004 != ooed005) a ",
                      " START WITH a.ooed005 = '",p_bgax003,"' ",
                      " CONNECT BY PRIOR a.ooed004 = a.ooed005 ",
                      " ORDER BY ooed004 "
   PREPARE abgt010_def_pre FROM ls_sql
   DECLARE abgt010_def_cs CURSOR FOR abgt010_def_pre
       
   FOREACH abgt010_def_cs INTO l_bgax003
      CALL abgt010_money_sum(p_bgax001,l_bgax003,p_bgax005)
         RETURNING l_bgax008,l_bgax009,l_bgax010
      LET r_bgax008 = r_bgax008 + l_bgax008
      LET r_bgax009 = r_bgax009 + l_bgax009
      LET r_bgax010 = r_bgax010 + l_bgax010
   END FOREACH 
   CALL abgt010_money_sum(p_bgax001,p_bgax003,p_bgax005)
         RETURNING l_bgax008,l_bgax009,l_bgax010
      LET r_bgax008 = r_bgax008 + l_bgax008
      LET r_bgax009 = r_bgax009 + l_bgax009
      LET r_bgax010 = r_bgax010 + l_bgax010
   RETURN r_bgax008,r_bgax009,r_bgax010
END FUNCTION

PRIVATE FUNCTION abgt010_money_sum(p_bgax001,p_bgax003,p_bgax005)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE ls_sql    STRING 
   DEFINE l_glaald  LIKE glaa_t.glaald
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_glaa002 LIKE glaa_t.glaa002
   DEFINE l_glaa003 LIKE glaa_t.glaa003
   DEFINE l_glaa004 LIKE glaa_t.glaa004
   DEFINE l_glaa010 LIKE glaa_t.glaa010
   DEFINE l_glaa011 LIKE glaa_t.glaa011
   DEFINE l_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE l_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE l_bgaa004 LIKE bgaa_t.bgaa004
   DEFINE l_bgaa008 LIKE bgaa_t.bgaa008
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgae007 LIKE bgae_t.bgae007
   DEFINE l_bgae002 LIKE bgae_t.bgae002
   DEFINE l_bgae003 LIKE bgae_t.bgae003
   DEFINE l_bgae009 LIKE bgae_t.bgae009
   DEFINE l_bgae010 LIKE bgae_t.bgae010
   DEFINE l_bgae012 LIKE bgae_t.bgae012
   DEFINE l_bgae013 LIKE bgae_t.bgae013
   DEFINE l_bgax008_d LIKE bgax_t.bgax008
   DEFINE l_bgax008_c LIKE bgax_t.bgax008
   DEFINE l_bgax009_d LIKE bgax_t.bgax009
   DEFINE l_bgax009_c LIKE bgax_t.bgax009
   DEFINE l_bgax010_d LIKE bgax_t.bgax010
   DEFINE l_bgax010_c LIKE bgax_t.bgax010
   DEFINE l_bgae001   LIKE bgae_t.bgae001
   DEFINE l_bgax008 LIKE bgax_t.bgax008
   DEFINE l_bgax009 LIKE bgax_t.bgax009
   DEFINE l_bgax010 LIKE bgax_t.bgax010
   DEFINE r_bgax008 LIKE bgax_t.bgax008
   DEFINE r_bgax009 LIKE bgax_t.bgax009
   DEFINE r_bgax010 LIKE bgax_t.bgax010
   DEFINE i         LIKE type_t.num5
   DEFINE ls_str    STRING 
   DEFINE ls_return STRING 
   DEFINE ls_return2 STRING
   DEFINE ls_return3 STRING
   DEFINE ls_type LIKE type_t.chr1
   DEFINE ls_chr LIKE type_t.chr1
   DEFINE ls_bgae013 STRING 
   LET r_bgax008 = 0
   LET r_bgax009 = 0
   LET r_bgax010 = 0
   
   LET ls_sql = ''
   CALL abgt010_sum_need_value(p_bgax001,p_bgax003,p_bgax005)
      RETURNING l_glaald,l_glaa001,l_glaa002,l_glaa003,l_glaa004,l_glaa010,l_glaa011,
                l_bgaa002,l_bgaa003,l_bgaa004,l_bgaa008,
                l_bgae007,l_bgae002,l_bgae003,l_bgae009,l_bgae010,l_bgae012,l_bgae013

   #根据l_bgae007的值判断
   IF l_bgae007 = '1' THEN #abgi040
      CALL abgt010_040_sum(p_bgax001,p_bgax003,p_bgax005)
         RETURNING l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
      IF l_bgae002 = '1' THEN
         LET r_bgax008 = l_bgax008_d - l_bgax008_c
         LET r_bgax009 = l_bgax009_d - l_bgax009_c
         LET r_bgax010 = l_bgax010_d - l_bgax010_c
      ELSE
         LET r_bgax008 = l_bgax008_c - l_bgax008_d
         LET r_bgax009 = l_bgax009_c - l_bgax009_d
         LET r_bgax010 = l_bgax010_c - l_bgax010_d
      END IF 
   END IF 
   IF l_bgae007 = '2' THEN #abgi060
      LET ls_sql = "SELECT bgae001 FROM bgae_t WHERE bgaeent = '",g_enterprise,"' ",
                   "   AND bgae006 = '",l_bgaa008,"' AND bgae001 BETWEEN '",l_bgae009,"' AND '",l_bgae010,"'"
      PREPARE abgt010_060_pre FROM ls_sql
      DECLARE abgt010_060_cs CURSOR FOR abgt010_060_pre
      IF l_bgae012 = '1' OR l_bgae012 = '2' OR l_bgae012 = '3' OR l_bgae012 = '4' THEN
         FOREACH abgt010_060_cs INTO l_bgae001
            CALL abgt010_040_sum(p_bgax001,p_bgax003,l_bgae001)
               RETURNING l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
            IF l_bgae012 = '1' OR l_bgae012 = '3' THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_d - l_bgax008_c
               LET r_bgax009 = r_bgax009 + l_bgax009_d - l_bgax009_c
               LET r_bgax010 = r_bgax010 + l_bgax010_d - l_bgax010_c
            END IF 
            IF l_bgae012 = '2' OR l_bgae012 = '4' THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_c - l_bgax008_d
               LET r_bgax009 = r_bgax009 + l_bgax009_c - l_bgax009_d
               LET r_bgax010 = r_bgax010 + l_bgax010_c - l_bgax010_d
            END IF
         END FOREACH 
      END IF 
         
      IF l_bgae012 = '5' OR l_bgae012 = '6' THEN
         FOREACH abgt010_060_cs INTO l_bgae001
            CALL abgt010_060_sum(p_bgax001,p_bgax003,l_bgae001)
               RETURNING l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
            IF l_bgae012 = '5' THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_d - l_bgax008_c
               LET r_bgax009 = r_bgax009 + l_bgax009_d - l_bgax009_c
               LET r_bgax010 = r_bgax010 + l_bgax010_d - l_bgax010_c
            END IF 
                  
            IF l_bgae012 = '6'THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_c - l_bgax008_d
               LET r_bgax009 = r_bgax009 + l_bgax009_c - l_bgax009_d
               LET r_bgax010 = r_bgax010 + l_bgax010_c - l_bgax010_d
            END IF
         END FOREACH
      END IF 
   END IF 
      
   IF l_bgae007 = '3' THEN #abgi080
      LET ls_bgae013 = l_bgae013,"="
      LET ls_return = ''
      LET ls_return2 = ''
      LET ls_return3 = ''
      FOR i = 1 TO ls_bgae013.getLength()
         LET ls_chr = ls_bgae013.subString(i,i+1)
         IF ls_chr = "+" OR ls_chr = "-" OR ls_chr = "/" OR ls_chr = "(" OR ls_chr = ")"  OR ls_chr = '*' THEN 
            IF ls_type = 'N' THEN
               CALL abgt010_money_sum(p_bgax001,p_bgax003,ls_str)
                  RETURNING l_bgax008,l_bgax009,l_bgax010
               LET r_bgax008 = l_bgax008 
               LET r_bgax009 = l_bgax009 
               LET r_bgax010 = l_bgax010 
               LET ls_return = ls_return,r_bgax008
               LET ls_return2 = ls_return2,r_bgax009
               LET ls_return3 = ls_return3,r_bgax010
            END IF 
            IF ls_type = 'Y' THEN 
               LET ls_return = ls_return,ls_str
               LET ls_return2 = ls_return2,ls_str
               LET ls_return3 = ls_return3,ls_str
            END IF 
            LET ls_return = ls_return,ls_chr
            LET ls_return2 = ls_return2,ls_chr
            LET ls_return3 = ls_return3,ls_chr
            LET ls_type = ''
            LET ls_str = ''
         ELSE
            IF ls_chr != "=" THEN 
               IF (ls_chr = 'Y' OR ls_chr = 'N') AND cl_null(ls_type) THEN 
                  LET ls_type = ls_chr
               ELSE
                  IF ls_type = 'Y' OR ls_type = 'N' THEN
                     LET ls_str = ls_str,ls_chr
                  END IF 
               END IF 
            END IF 
         END IF 
      END FOR
      IF ls_type = 'N' THEN
         CALL abgt010_money_sum(p_bgax001,p_bgax003,ls_str)
              RETURNING l_bgax008,l_bgax009,l_bgax010
         LET r_bgax008 = l_bgax008 
         LET r_bgax009 = l_bgax009 
         LET r_bgax010 = l_bgax010 
         LET ls_return = ls_return,r_bgax008
         LET ls_return2 = ls_return2,r_bgax009
         LET ls_return3 = ls_return3,r_bgax010
      END IF 
      IF ls_type = 'Y' THEN 
         LET ls_return = ls_return,ls_str
         LET ls_return2 = ls_return2,ls_str
         LET ls_return3 = ls_return3,ls_str
      END IF 

      LET ls_sql = "SELECT ROUND(",ls_return,",6) FROM dual"
      PREPARE ROUND_pre FROM ls_sql
      EXECUTE ROUND_pre INTO r_bgax008
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00004'
         LET g_errparam.extend = ls_return
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_bgax008 = 0
      END IF
      LET ls_sql = "SELECT ROUND(",ls_return2,",6) FROM dual"
      PREPARE ROUND_pre2 FROM ls_sql
      EXECUTE ROUND_pre2 INTO r_bgax009
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00004'
         LET g_errparam.extend = ls_return2
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_bgax009 = 0
      END IF
      LET ls_sql = "SELECT ROUND(",ls_return3,",6) FROM dual"
      PREPARE ROUND_pre3 FROM ls_sql
      EXECUTE ROUND_pre3 INTO r_bgax010
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00004'
         LET g_errparam.extend = ls_return3
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_bgax010 = 0
      END IF
   END IF 
   RETURN r_bgax008,r_bgax009,r_bgax010
END FUNCTION

PRIVATE FUNCTION abgt010_040_sum(p_bgax001,p_bgax003,p_bgax005)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE l_glaald  LIKE glaa_t.glaald
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_glaa002 LIKE glaa_t.glaa002
   DEFINE l_glaa003 LIKE glaa_t.glaa003
   DEFINE l_glaa004 LIKE glaa_t.glaa004
   DEFINE l_glaa010 LIKE glaa_t.glaa010
   DEFINE l_glaa011 LIKE glaa_t.glaa011
   DEFINE l_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE l_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE l_bgaa004 LIKE bgaa_t.bgaa004
   DEFINE l_bgaa008 LIKE bgaa_t.bgaa008
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgae007 LIKE bgae_t.bgae007
   DEFINE l_bgae002 LIKE bgae_t.bgae002
   DEFINE l_bgae003 LIKE bgae_t.bgae003
   DEFINE l_bgae009 LIKE bgae_t.bgae009
   DEFINE l_bgae010 LIKE bgae_t.bgae010
   DEFINE l_bgae012 LIKE bgae_t.bgae012
   DEFINE l_bgae013 LIKE bgae_t.bgae013
   DEFINE l_bgax008_d LIKE bgax_t.bgax008
   DEFINE l_bgax008_c LIKE bgax_t.bgax008
   DEFINE l_bgax009_d LIKE bgax_t.bgax009
   DEFINE l_bgax009_c LIKE bgax_t.bgax009
   DEFINE l_bgax010_d LIKE bgax_t.bgax010
   DEFINE l_bgax010_c LIKE bgax_t.bgax010
   DEFINE l_bgax008_d_2 LIKE bgax_t.bgax008
   DEFINE l_bgax008_c_2 LIKE bgax_t.bgax008
   DEFINE l_bgax009_d_2 LIKE bgax_t.bgax009
   DEFINE l_bgax009_c_2 LIKE bgax_t.bgax009
   DEFINE l_bgax010_d_2 LIKE bgax_t.bgax010
   DEFINE l_bgax010_c_2 LIKE bgax_t.bgax010
   DEFINE l_bgax008_d_2_ce LIKE bgax_t.bgax008
   DEFINE l_bgax008_c_2_ce LIKE bgax_t.bgax008
   DEFINE l_bgax009_d_2_ce LIKE bgax_t.bgax009
   DEFINE l_bgax009_c_2_ce LIKE bgax_t.bgax009
   DEFINE l_bgax010_d_2_ce LIKE bgax_t.bgax010
   DEFINE l_bgax010_c_2_ce LIKE bgax_t.bgax010
   DEFINE l_budget_year_max LIKE type_t.num5
   DEFINE l_budget_month_max LIKE type_t.num5
   DEFINE l_budget_year_min LIKE type_t.num5
   DEFINE l_budget_month_min LIKE type_t.num5
   DEFINE l_budget_span LIKE type_t.num5
   DEFINE ls_subject_sql STRING
   DEFINE ls_glar005_sql STRING
   DEFINE ls_glar006_sql STRING
   DEFINE ls_glaq003_sql STRING
   DEFINE ls_glaq004_sql STRING
   DEFINE l_bgax010_d_now LIKE bgax_t.bgax010
   DEFINE l_bgax010_c_now LIKE bgax_t.bgax010
   DEFINE l_bgax010_d_now_ce LIKE bgax_t.bgax010
   DEFINE l_bgax010_c_now_ce LIKE bgax_t.bgax010
   DEFINE l_span_now LIKE type_t.num5
   DEFINE l_year_span LIKE type_t.num5
   DEFINE l_cycle_year_max LIKE type_t.num5
   DEFINE l_cycle_month_max LIKE type_t.num5
   DEFINE l_cycle_year_min LIKE type_t.num5
   DEFINE l_cycle_month_min LIKE type_t.num5
   DEFINE l_year LIKE type_t.num5
   DEFINE l_month LIKE type_t.num5
   DEFINE l_bgae001   LIKE bgae_t.bgae001
   DEFINE l_stage  LIKE type_t.num5
   
   CALL abgt010_sum_need_value(p_bgax001,p_bgax003,p_bgax005)
      RETURNING l_glaald,l_glaa001,l_glaa002,l_glaa003,l_glaa004,l_glaa010,l_glaa011,
                l_bgaa002,l_bgaa003,l_bgaa004,l_bgaa008,
                l_bgae007,l_bgae002,l_bgae003,l_bgae009,l_bgae010,l_bgae012,l_bgae013

   #初始化
   LET l_bgax008_d = 0
   LET l_bgax008_c = 0
   LET l_bgax009_d = 0
   LET l_bgax009_c = 0
   LET l_bgax010_d = 0
   LET l_bgax010_c = 0
   
   #无法抓取到账别时候返回0,0,0,0,0,0
   IF cl_null(l_glaald) THEN
      RETURN l_bgax008_d,l_bgax008_c,l_bgax009_d,l_bgax009_c,l_bgax010_d,l_bgax010_c
   END IF 
   #获取预算周期
   CALL abgt010_span_calculate(l_bgaa002,l_glaa003)
      RETURNING l_budget_year_max,l_budget_month_max,l_budget_year_min,l_budget_month_min,l_budget_span 

   #glar_t借方
   LET ls_glar005_sql = "SELECT SUM(glar005) FROM glar_t WHERE glarent = '",g_enterprise,"' AND glarld = '",l_glaald,"' ",
                        "AND glar002 = ? AND glar012 = '",p_bgax003,"'",
                        "   AND (glar003 BETWEEN ? AND ?) AND glar001 IN "
   #glar_t贷方
   LET ls_glar006_sql = "SELECT SUM(glar006) FROM glar_t WHERE glarent = '",g_enterprise,"' AND glarld = '",l_glaald,"' ",
                        "   AND glar002 = ? AND glar012 = '",p_bgax003,"'",
                        "   AND (glar003 BETWEEN ? AND ?) AND glar001 IN "
   #glap_t,glaq_t借方
   LET ls_glaq003_sql = "SELECT SUM(glaq003) FROM glap_t,glaq_t WHERE glapent = '",g_enterprise,"' AND glapent = glaqent",
                        "   AND glapld = glaqld AND glapdocno = glaqdocno AND glapld = '",l_glaald,"' ",
                        "   AND glap002 = ? AND (glap004 BETWEEN ? AND ? ) AND glap007 = 'CE' AND glaq017 =  '",p_bgax003,"'",
                        "   AND glaq002 IN "
   LET ls_glaq004_sql = "SELECT SUM(glaq004) FROM glap_t,glaq_t WHERE glapent = '",g_enterprise,"' AND glapent = glaqent",
                        "   AND glapld = glaqld AND glapdocno = glaqdocno AND glapld = '",l_glaald,"' ",
                        "   AND glap002 = ? AND (glap004 BETWEEN ? AND ? ) AND glap007 = 'CE' AND glaq017 =  '",p_bgax003,"'",
                        "   AND glaq002 IN "
                
   #获取科目
   CALL abgt010_get_subject(l_bgaa008,l_glaa004,p_bgax005) 
      RETURNING ls_subject_sql
   LET ls_glar005_sql = ls_glar005_sql,ls_subject_sql
   PREPARE abgt010_040_pre_d FROM ls_glar005_sql  # 年度，起始期别，截止期别
   LET ls_glar006_sql = ls_glar006_sql,ls_subject_sql
   PREPARE abgt010_040_pre_c FROM ls_glar006_sql  # 年度，起始期别，截止期别
   LET ls_glaq003_sql = ls_glaq003_sql,ls_subject_sql
   PREPARE abgt010_040_pre_d_ce FROM ls_glaq003_sql  # 年度，起始期别，截止期别
   LET ls_glaq004_sql = ls_glaq004_sql,ls_subject_sql
   PREPARE abgt010_040_pre_c_ce FROM ls_glaq004_sql  # 年度，起始期别，截止期别

   #当前会计年度和期别
   EXECUTE abgt010_040_pre_d USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now
   EXECUTE abgt010_040_pre_c USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now
   EXECUTE abgt010_040_pre_d_ce USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now_ce
   EXECUTE abgt010_040_pre_c_ce USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now_ce
   IF cl_null(l_bgax010_d_now) THEN LET l_bgax010_d_now = 0 END IF 
   IF cl_null(l_bgax010_c_now) THEN LET l_bgax010_c_now = 0 END IF
   IF cl_null(l_bgax010_d_now_ce) THEN LET l_bgax010_d_now_ce = 0 END IF
   IF cl_null(l_bgax010_c_now_ce) THEN LET l_bgax010_c_now_ce = 0 END IF
   CALL abgt010_current(l_glaa010,l_glaa011,l_budget_year_max,l_budget_month_max,l_glaa003)
      RETURNING l_span_now
   
   #根据资产损益别（l_bgae003）
   #资产类取计算区间year = MAX（l_cycle_year_max），month（0，l_cycle_year_max）
   IF l_bgae003 = '1' THEN 
      #当前
      CALL abgt010_year_month_calculate(l_budget_year_min,l_budget_month_min,l_budget_span,l_glaa003)
         RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
      EXECUTE abgt010_040_pre_d USING l_cycle_year_max,'1',l_cycle_month_max INTO l_bgax010_d
      IF cl_null(l_bgax010_d) THEN LET l_bgax010_d = 0 END IF 
      EXECUTE abgt010_040_pre_c USING l_cycle_year_max,'1',l_cycle_month_max INTO l_bgax010_c
      IF cl_null(l_bgax010_c) THEN LET l_bgax010_c = 0 END IF 
      LET l_bgax010_d = l_bgax010_d - l_bgax010_d_now
      LET l_bgax010_c = l_bgax010_c - l_bgax010_c_now
      IF l_span_now > 0 THEN 
         IF g_sum_type = '1' THEN
            LET l_glaa010 = l_glaa010 - 1
            WHILE (l_span_now > 0 )
               EXECUTE abgt010_040_pre_d USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now
               EXECUTE abgt010_040_pre_c USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now
               IF cl_null(l_bgax010_d_now) THEN LET l_bgax010_d_now = 0 END IF 
               IF cl_null(l_bgax010_c_now) THEN LET l_bgax010_c_now = 0 END IF
               LET l_bgax010_d = l_bgax010_d + l_bgax010_d_now
               LET l_bgax010_c = l_bgax010_c + l_bgax010_d_now
               SELECT MAX(glav006) INTO l_year_span FROM glav_t WHERE glavent = g_enterprise AND glav001 = p_glaa003 AND glav002 = l_glaa010 
               LET l_glaa011 = l_glaa011 + 1
               IF l_glaa011 > l_year_span THEN
                  LET l_glaa010 = l_glaa010 + 1
                  LET l_glaa011 = 1
               END IF 
               LET l_span_now = l_span_now - 1
            END WHILE 
         ELSE
            IF l_glaa011 - 1 = 0 THEN
               LET l_glaa010 = l_glaa010 - 1
               SELECT MAX(glav006) INTO l_glaa011 FROM glav_t WHERE glavent = g_enterprise AND glav001 = l_glaa003 AND glav002 = l_glaa010   
            ELSE
               LET l_glaa011 = l_glaa011 - 1
            END IF 
            EXECUTE abgt010_040_pre_d USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now
            EXECUTE abgt010_040_pre_c USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now
            IF cl_null(l_bgax010_d_now) THEN LET l_bgax010_d_now = 0 END IF 
            IF cl_null(l_bgax010_c_now) THEN LET l_bgax010_c_now = 0 END IF
            LET l_bgax010_d = l_bgax010_d + l_bgax010_d_now * l_span_now
            LET l_bgax010_c = l_bgax010_c + l_bgax010_c_now * l_span_now
         END IF 
      END IF 
      #前一
      CALL abgt010_year_month_calculate(l_cycle_year_min,l_cycle_month_min,l_budget_span,l_glaa003)
         RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
      EXECUTE abgt010_040_pre_d USING l_cycle_year_max,'1',l_cycle_month_max INTO l_bgax009_d
      EXECUTE abgt010_040_pre_c USING l_cycle_year_max,'1',l_cycle_month_max INTO l_bgax009_c
      IF cl_null(l_bgax009_d) THEN LET l_bgax009_d = 0 END IF 
      IF cl_null(l_bgax009_c) THEN LET l_bgax009_c = 0 END IF
      #前二
      CALL abgt010_year_month_calculate(l_cycle_year_min,l_cycle_month_min,l_budget_span,l_glaa003)
         RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
      EXECUTE abgt010_040_pre_d USING l_cycle_year_max,'1',l_cycle_month_max INTO l_bgax008_d
      EXECUTE abgt010_040_pre_c USING l_cycle_year_max,'1',l_cycle_month_max INTO l_bgax008_c
      IF cl_null(l_bgax008_d) THEN LET l_bgax008_d = 0 END IF 
      IF cl_null(l_bgax008_c) THEN LET l_bgax008_c = 0 END IF
   END IF 
   IF l_bgae003 = '2' THEN 
      #当前
      CALL abgt010_year_month_calculate(l_budget_year_min,l_budget_month_min,l_budget_span,l_glaa003)
         RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
      LET l_year = l_cycle_year_min
      LET l_month = l_cycle_month_min
      WHILE (l_cycle_year_max >= l_year)
         IF l_cycle_year_max = l_year THEN
            EXECUTE abgt010_040_pre_d USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax010_d_2
            EXECUTE abgt010_040_pre_c USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax010_c_2
            EXECUTE abgt010_040_pre_d_ce USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax010_d_2_ce
            EXECUTE abgt010_040_pre_c_ce USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax010_c_2_ce
            LET l_year = l_year + 1
         ELSE
            SELECT MAX(glav006) INTO l_stage FROM glav_t WHERE glavent = g_enterprise AND glav001 = l_glaa003 AND glav002 = l_month   
            EXECUTE abgt010_040_pre_d USING l_year,l_month,l_stage INTO l_bgax010_d_2
            EXECUTE abgt010_040_pre_c USING l_year,l_month,l_stage INTO l_bgax010_c_2
            EXECUTE abgt010_040_pre_d_ce USING l_year,l_month,l_stage INTO l_bgax010_d_2_ce
            EXECUTE abgt010_040_pre_c_ce USING l_year,l_month,l_stage INTO l_bgax010_c_2_ce
            LET l_month = 1
            LET l_year = l_year + 1
         END IF 
         IF cl_null(l_bgax010_d_2) THEN LET l_bgax010_d_2 = 0 END IF 
         IF cl_null(l_bgax010_c_2) THEN LET l_bgax010_c_2 = 0 END IF 
         IF cl_null(l_bgax010_d_2_ce) THEN LET l_bgax010_d_2_ce = 0 END IF 
         IF cl_null(l_bgax010_c_2_ce) THEN LET l_bgax010_c_2_ce = 0 END IF 
         LET l_bgax010_d = l_bgax010_d + l_bgax010_d_2 - l_bgax010_d_2_ce
         LET l_bgax010_c = l_bgax010_c + l_bgax010_c_2 - l_bgax010_c_2_ce
      END WHILE 
      LET l_bgax010_d = l_bgax010_d - l_bgax010_d_now - l_bgax010_d_now_ce
      LET l_bgax010_c = l_bgax010_c - l_bgax010_c_now - l_bgax010_d_now_ce
      IF l_span_now > 0 THEN 
         IF g_sum_type = '1' THEN
            LET l_glaa010 = l_glaa010 - 1
            WHILE (l_span_now > 0 )
               EXECUTE abgt010_040_pre_d USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now
               EXECUTE abgt010_040_pre_c USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now
               EXECUTE abgt010_040_pre_d_ce USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now_ce
               EXECUTE abgt010_040_pre_c_ce USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now_ce
               IF cl_null(l_bgax010_d_now) THEN LET l_bgax010_d_now = 0 END IF 
               IF cl_null(l_bgax010_c_now) THEN LET l_bgax010_c_now = 0 END IF 
               IF cl_null(l_bgax010_d_now_ce) THEN LET l_bgax010_d_now_ce = 0 END IF 
               IF cl_null(l_bgax010_c_now_ce) THEN LET l_bgax010_c_now_ce = 0 END IF 
               LET l_bgax010_d = l_bgax010_d + l_bgax010_d_now - l_bgax010_d_now_ce
               LET l_bgax010_c = l_bgax010_c + l_bgax010_d_now - l_bgax010_c_now_ce
               SELECT MAX(glav006) INTO l_year_span FROM glav_t WHERE glavent = g_enterprise AND glav001 = l_glaa003 AND glav002 = l_glaa010 
               LET l_glaa011 = l_glaa011 + 1
               IF l_glaa011 > l_year_span THEN
                  LET l_glaa010 = l_glaa010 + 1
                  LET l_glaa011 = 1
               END IF 
               LET l_span_now = l_span_now - 1
            END WHILE 
         ELSE
            IF l_glaa011 - 1 = 0 THEN
               LET l_glaa010 = l_glaa010 - 1
               SELECT MAX(glav006) INTO l_glaa011 FROM glav_t WHERE glavent = g_enterprise AND glav001 = l_glaa003 AND glav002 = l_month   
            ELSE
               LET l_glaa011 = l_glaa011 - 1
            END IF 
            EXECUTE abgt010_040_pre_d USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now
            EXECUTE abgt010_040_pre_c USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now
            EXECUTE abgt010_040_pre_d_ce USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_d_now_ce
            EXECUTE abgt010_040_pre_c_ce USING l_glaa010,l_glaa011,l_glaa011 INTO l_bgax010_c_now_ce
            IF cl_null(l_bgax010_d_now) THEN LET l_bgax010_d_now= 0 END IF 
            IF cl_null(l_bgax010_c_now) THEN LET l_bgax010_c_now = 0 END IF 
            IF cl_null(l_bgax010_d_now_ce) THEN LET l_bgax010_d_now_ce = 0 END IF 
            IF cl_null(l_bgax010_c_now_ce) THEN LET l_bgax010_c_now_ce = 0 END IF
            LET l_bgax010_d = l_bgax010_d + (l_bgax010_d_now - l_bgax010_d_now_ce) * l_span_now
            LET l_bgax010_c = l_bgax010_c + (l_bgax010_c_now - l_bgax010_c_now_ce) * l_span_now
         END IF
      END IF 
      IF cl_null(l_bgax010_d) THEN LET l_bgax010_d = 0 END IF 
      IF cl_null(l_bgax010_c) THEN LET l_bgax010_c = 0 END IF 
      #前一
      CALL abgt010_year_month_calculate(l_cycle_year_min,l_cycle_month_min,l_budget_span,l_glaa003)
         RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
      LET l_year = l_cycle_year_min
      LET l_month = l_cycle_month_min
      WHILE (l_cycle_year_max >= l_year)
         IF l_cycle_year_max = l_year THEN
            EXECUTE abgt010_040_pre_d USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax009_d_2
            EXECUTE abgt010_040_pre_c USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax009_c_2
            EXECUTE abgt010_040_pre_d_ce USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax009_d_2_ce
            EXECUTE abgt010_040_pre_c_ce USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax009_c_2_ce
            LET l_year = l_year + 1
         ELSE
            SELECT MAX(glav006) INTO l_stage FROM glav_t WHERE glavent = g_enterprise AND glav001 = l_glaa003 AND glav002 = l_month   
            EXECUTE abgt010_040_pre_d USING l_year,l_month,l_stage INTO l_bgax009_d_2
            EXECUTE abgt010_040_pre_c USING l_year,l_month,l_stage INTO l_bgax009_c_2
            EXECUTE abgt010_040_pre_d_ce USING l_year,l_month,l_stage INTO l_bgax009_d_2_ce
            EXECUTE abgt010_040_pre_c_ce USING l_year,l_month,l_stage INTO l_bgax009_c_2_ce
            LET l_month = 1
            LET l_year = l_year + 1
         END IF 
         IF cl_null(l_bgax009_d_2) THEN LET l_bgax009_d_2 = 0 END IF 
         IF cl_null(l_bgax009_c_2) THEN LET l_bgax009_c_2 = 0 END IF 
         IF cl_null(l_bgax009_d_2_ce) THEN LET l_bgax009_d_2_ce = 0 END IF 
         IF cl_null(l_bgax009_c_2_ce) THEN LET l_bgax009_c_2_ce = 0 END IF 
         LET l_bgax009_d = l_bgax009_d + l_bgax009_d_2 - l_bgax009_d_2_ce
         LET l_bgax009_c = l_bgax009_c + l_bgax009_c_2 - l_bgax009_c_2_ce
      END WHILE
      #前二
      CALL abgt010_year_month_calculate(l_cycle_year_min,l_cycle_month_min,l_budget_span,l_glaa003)
         RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
      LET l_year = l_cycle_year_min
      LET l_month = l_cycle_month_min
      WHILE (l_cycle_year_max >= l_year)
         IF l_cycle_year_max = l_year THEN
            EXECUTE abgt010_040_pre_d USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax008_d_2
            EXECUTE abgt010_040_pre_c USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax008_c_2
            EXECUTE abgt010_040_pre_d_ce USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax008_d_2_ce
            EXECUTE abgt010_040_pre_c_ce USING l_cycle_year_max,l_month,l_cycle_month_max INTO l_bgax008_c_2_ce
            LET l_year = l_year + 1
         ELSE
            SELECT MAX(glav006) INTO l_stage FROM glav_t WHERE glavent = g_enterprise AND glav001 = l_glaa003 AND glav002 = l_year   
            EXECUTE abgt010_040_pre_d USING l_year,l_month,l_stage INTO l_bgax008_d_2
            EXECUTE abgt010_040_pre_c USING l_year,l_month,l_stage INTO l_bgax008_c_2
            EXECUTE abgt010_040_pre_d_ce USING l_year,l_month,l_stage INTO l_bgax008_d_2_ce
            EXECUTE abgt010_040_pre_c_ce USING l_year,l_month,l_stage INTO l_bgax008_c_2_ce
            LET l_month = 1
            LET l_year = l_year + 1
         END IF 
         IF cl_null(l_bgax008_d_2) THEN LET l_bgax008_d_2 = 0 END IF 
         IF cl_null(l_bgax008_c_2) THEN LET l_bgax008_c_2 = 0 END IF 
         IF cl_null(l_bgax008_d_2_ce) THEN LET l_bgax008_d_2_ce = 0 END IF 
         IF cl_null(l_bgax008_c_2_ce) THEN LET l_bgax008_c_2_ce = 0 END IF 
         LET l_bgax008_d = l_bgax008_d + l_bgax008_d_2 - l_bgax008_d_2_ce
         LET l_bgax008_c = l_bgax008_c + l_bgax008_c_2 - l_bgax008_c_2_ce
      END WHILE
   END IF 
   RETURN l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
END FUNCTION

PRIVATE FUNCTION abgt010_060_sum(p_bgax001,p_bgax003,p_bgax005)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE l_glaald  LIKE glaa_t.glaald
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_glaa002 LIKE glaa_t.glaa002
   DEFINE l_glaa003 LIKE glaa_t.glaa003
   DEFINE l_glaa004 LIKE glaa_t.glaa004
   DEFINE l_glaa010 LIKE glaa_t.glaa010
   DEFINE l_glaa011 LIKE glaa_t.glaa011
   DEFINE l_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE l_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE l_bgaa004 LIKE bgaa_t.bgaa004
   DEFINE l_bgaa008 LIKE bgaa_t.bgaa008
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgae007 LIKE bgae_t.bgae007
   DEFINE l_bgae002 LIKE bgae_t.bgae002
   DEFINE l_bgae003 LIKE bgae_t.bgae003
   DEFINE l_bgae009 LIKE bgae_t.bgae009
   DEFINE l_bgae010 LIKE bgae_t.bgae010
   DEFINE l_bgae012 LIKE bgae_t.bgae012
   DEFINE l_bgae013 LIKE bgae_t.bgae013
   DEFINE l_bgax008_d LIKE bgax_t.bgax008
   DEFINE l_bgax008_c LIKE bgax_t.bgax008
   DEFINE l_bgax009_d LIKE bgax_t.bgax009
   DEFINE l_bgax009_c LIKE bgax_t.bgax009
   DEFINE l_bgax010_d LIKE bgax_t.bgax010
   DEFINE l_bgax010_c LIKE bgax_t.bgax010
   DEFINE ls_glar005_sql STRING
   DEFINE ls_glar006_sql STRING 
   DEFINE l_budget_year_max LIKE type_t.num5
   DEFINE l_budget_month_max LIKE type_t.num5
   DEFINE l_budget_year_min LIKE type_t.num5
   DEFINE l_budget_month_min LIKE type_t.num5
   DEFINE l_budget_span LIKE type_t.num5
   DEFINE l_cycle_year_max LIKE type_t.num5
   DEFINE l_cycle_month_max LIKE type_t.num5
   DEFINE l_cycle_year_min LIKE type_t.num5
   DEFINE l_cycle_month_min LIKE type_t.num5
   DEFINE l_bgae001 LIKE bgae_t.bgae001
   DEFINE ls_subject_sql STRING
   DEFINE l_month_use LIKE type_t.num5
   
   CALL abgt010_sum_need_value(p_bgax001,p_bgax003,p_bgax005)
      RETURNING l_glaald,l_glaa001,l_glaa002,l_glaa003,l_glaa004,l_glaa010,l_glaa010,
                l_bgaa002,l_bgaa003,l_bgaa004,l_bgaa008,
                l_bgae007,l_bgae002,l_bgae003,l_bgae009,l_bgae010,l_bgae012,l_bgae013
   #获取预算周期
   CALL abgt010_span_calculate(l_bgaa002,l_glaa003)
      RETURNING l_budget_year_max,l_budget_month_max,l_budget_year_min,l_budget_month_min,l_budget_span    
   #glar_t借方
   LET ls_glar005_sql = "SELECT SUM(glar005) FROM glar_t WHERE glarent = '",g_enterprise,"' AND glarld = '",l_glaald,"' ",
                        "AND glar002 = ? AND glar012 = '",p_bgax003,"'",
                        "   AND (glar003 BETWEEN ? AND ?) AND glar001 IN "
   #glar_t贷方
   LET ls_glar006_sql = "SELECT SUM(glar006) FROM glar_t WHERE glarent = '",g_enterprise,"' AND glarld = '",l_glaald,"' ",
                        "   AND glar002 = ? AND glar012 = '",p_bgax003,"'",
                        "   AND (glar003 BETWEEN ? AND ?) AND glar001 IN "
   #获取科目
   CALL abgt010_get_subject(l_bgaa008,l_glaa004,p_bgax005) 
      RETURNING ls_subject_sql
   LET ls_glar005_sql = ls_glar006_sql,ls_subject_sql
   PREPARE abgt010_060_pre_d FROM ls_glar005_sql  # 年度，起始期别，截止期别
   LET ls_glar006_sql = ls_glar006_sql,ls_subject_sql
   PREPARE abgt010_060_pre_c FROM ls_glar006_sql  # 年度，起始期别，截止期别

   #根据资产损益别（l_bgae003）
   #资产类取计算区间year = MAX（l_cycle_year_max），month（0，l_cycle_year_max）
   #当前
   CALL abgt010_year_month_calculate(l_budget_year_min,l_budget_month_min,l_budget_span,l_glaa003)
      RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
   LET l_month_use = l_cycle_month_min-1
   EXECUTE abgt010_060_pre_d USING l_cycle_year_min,'0',l_month_use INTO l_bgax010_d
   EXECUTE abgt010_060_pre_c USING l_cycle_year_min,'0',l_month_use INTO l_bgax010_c
   #前一
   CALL abgt010_year_month_calculate(l_cycle_year_min,l_cycle_month_min,l_budget_span,l_glaa003)
      RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
   EXECUTE abgt010_060_pre_d USING l_cycle_year_min,'0',l_month_use INTO l_bgax009_d
   EXECUTE abgt010_060_pre_c USING l_cycle_year_min,'0',l_month_use INTO l_bgax009_c
   #前二
   CALL abgt010_year_month_calculate(l_cycle_year_min,l_cycle_month_min,l_budget_span,l_glaa003)
      RETURNING l_cycle_year_max,l_cycle_month_max,l_cycle_year_min,l_cycle_month_min
   EXECUTE abgt010_060_pre_d USING l_cycle_year_min,'0',l_month_use INTO l_bgax008_d
   EXECUTE abgt010_060_pre_c USING l_cycle_year_min,'0',l_month_use INTO l_bgax008_c
      CALL abgt010_rate(p_bgax001,l_glaald,l_bgax008_d) RETURNING l_bgax008_d
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax008_c) RETURNING l_bgax008_c
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax009_d) RETURNING l_bgax009_d
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax009_c) RETURNING l_bgax009_c
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax010_d) RETURNING l_bgax010_d
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax010_c) RETURNING l_bgax010_c
   RETURN l_bgax008_d,l_bgax008_c,l_bgax009_d,l_bgax009_c,l_bgax010_d,l_bgax010_c
END FUNCTION

PRIVATE FUNCTION abgt010_sum_need_value(p_bgax001,p_bgax003,p_bgax005)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE l_ooef017 LIKE ooef_t.ooef017
   DEFINE l_glaald  LIKE glaa_t.glaald
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_glaa002 LIKE glaa_t.glaa002
   DEFINE l_glaa003 LIKE glaa_t.glaa003
   DEFINE l_glaa004 LIKE glaa_t.glaa004
   DEFINE l_glaa010 LIKE glaa_t.glaa010
   DEFINE l_glaa011 LIKE glaa_t.glaa011
   DEFINE l_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE l_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE l_bgaa004 LIKE bgaa_t.bgaa004
   DEFINE l_bgaa008 LIKE bgaa_t.bgaa008
   DEFINE l_bgae007 LIKE bgae_t.bgae007
   DEFINE l_bgae002 LIKE bgae_t.bgae002
   DEFINE l_bgae003 LIKE bgae_t.bgae003
   DEFINE l_bgae009 LIKE bgae_t.bgae009
   DEFINE l_bgae010 LIKE bgae_t.bgae010
   DEFINE l_bgae012 LIKE bgae_t.bgae012
   DEFINE l_bgae013 LIKE bgae_t.bgae013
   
   #根據組織（p_bgax003）獲取 對應的法人編號(ooef017)
   SELECT ooef017 
     INTO l_ooef017 
     FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = p_bgax003
   
   #帳別glaa表抓取的值
   #這個法人編號在帳別基本資料檔裡主帳套否(glaa014)='Y'的帳別, 即為該法人的主帳別（glaald）
   #根據帳套(l_glaald)來抓取使用幣別（glaa001），匯率參照表號（glaa002），會計週期參照表號（glaa003），會計科目參照表號（glaa004）
   #   当前年度（glaa010），当前期别（glaa011）
   SELECT glaald,glaa001,glaa002,glaa003,glaa004,glaa010,glaa011
     INTO l_glaald,l_glaa001,l_glaa002,l_glaa003,l_glaa004,l_glaa010,l_glaa011
     FROM glaa_t WHERE glaaent = g_enterprise AND glaacomp = l_ooef017 AND glaa014 = 'Y' AND glaastus ='Y'
     
   #預算週期(bgaa002),預算幣別(bgaa003),編制匯率(bgaa004),使用預算項目組別(bgaa008)
   SELECT bgaa002,bgaa003,bgaa004,bgaa008 
     INTO l_bgaa002,l_bgaa003,l_bgaa004,l_bgaa008
     FROM bgaa_t
    WHERE bgaaent = g_enterprise AND bgaa001 = p_bgax001
   
   #预算项目组别(bgae006),预算项目编码(bgae001)
   #类别（bgae007）：
   #1.abgi040使用 借贷方向（bgae002），资产损益别（bgae003）
   #2.abgi060使用 起始预算项目（bgae009）,截止预算项目（bgae010）,金额来源（bgae012）
   #3.abgi080使用 计算公式（bgae013）
   SELECT bgae007,bgae002,bgae003,bgae009,bgae010,bgae012,bgae013 
     INTO l_bgae007,l_bgae002,l_bgae003,l_bgae009,l_bgae010,l_bgae012,l_bgae013
     FROM bgae_t
    WHERE bgaeent = g_enterprise AND bgae006 = l_bgaa008 AND bgae001 = p_bgax005

   RETURN l_glaald,l_glaa001,l_glaa002,l_glaa003,l_glaa004,l_glaa010,l_glaa011,
          l_bgaa002,l_bgaa003,l_bgaa004,l_bgaa008,
          l_bgae007,l_bgae002,l_bgae003,l_bgae009,l_bgae010,l_bgae012,l_bgae013
END FUNCTION

PRIVATE FUNCTION abgt010_year_month_calculate(p_year_min,p_month_min,p_span,p_glaa003)
   DEFINE p_year_min  LIKE bgam_t.bgam004
   DEFINE p_month_min LIKE bgam_t.bgam006
   DEFINE p_span      LIKE type_t.num5
   DEFINE p_glaa003   LIKE glaa_t.glaa003
   DEFINE l_stage     LIKE type_t.num5
   DEFINE r_year_max  LIKE bgam_t.bgam004
   DEFINE r_month_max LIKE bgam_t.bgam006
   DEFINE r_year_min  LIKE bgam_t.bgam004
   DEFINE r_month_min LIKE bgam_t.bgam006
   #根据当前区间的第一期来得到前一的最后一期
   IF p_month_min - 1 > 0 THEN
      LET r_year_max = p_year_min
      LET r_month_max = p_month_min -1
   ELSE
      LET r_year_max = p_year_min - 1
      SELECT MAX(glav006) INTO l_stage FROM glav_t WHERE glavent = g_enterprise AND glav001 = p_glaa003 AND glav002 = r_year_max       
      LET r_month_max  = l_stage
   END IF 
   
   LET r_year_min = r_year_max
   LET r_month_min = r_month_max
   LET p_span = p_span -1
   #计算前一区间的最小年度和期别
   WHILE(p_span > 0)
      IF r_month_min - 1 > 0 THEN
         LET r_year_min = r_year_min
         LET r_month_min = r_month_min -1
      ELSE
         LET r_year_min = r_year_min -1
         SELECT MAX(glav006) INTO l_stage FROM glav_t WHERE glavent = g_enterprise AND glav001 = p_glaa003 AND glav002 = r_year_min 
         LET r_month_min = l_stage
      END IF
      LET p_span = p_span - 1 
   END WHILE 
   
   RETURN r_year_max,r_month_max,r_year_min,r_month_min
END FUNCTION

PRIVATE FUNCTION abgt010_get_subject(p_bgao001,p_bgao002,p_bgao004)
   DEFINE p_bgao001 LIKE bgao_t.bgao001
   DEFINE p_bgao002 LIKE bgao_t.bgao002
   DEFINE p_bgao004 LIKE bgao_t.bgao004
   DEFINE r_sql     STRING 
   LET r_sql = ''
   LET r_sql = " (SELECT bgao003 FROM bgao_t WHERE bgaoent = '",g_enterprise,"' ",
               "   AND bgao001 = '",p_bgao001,"' AND bgao002 = '",p_bgao002,"'",
               "   AND bgao004 = '",p_bgao004,"') "
   RETURN r_sql
END FUNCTION

PRIVATE FUNCTION abgt010_current(p_glaa010,p_glaa011,p_cycle_year_max,p_cycle_month_max,p_glaa003)
   DEFINE l_month LIKE type_t.num5
   DEFINE p_glaa003 LIKE glaa_t.glaa003
   DEFINE p_glaa010 LIKE glaa_t.glaa010
   DEFINE p_glaa011 LIKE glaa_t.glaa011
   DEFINE p_cycle_year_max LIKE type_t.num5
   DEFINE p_cycle_month_max LIKE type_t.num5
   DEFINE r_span_now       LIKE type_t.num5

   LET r_span_now = 0
   IF NOT cl_null(p_glaa010) AND NOT cl_null(p_glaa011) AND p_glaa010 != 0 AND p_glaa011 != 0 THEN 
      IF p_cycle_year_max = p_glaa010 THEN
         LET r_span_now = p_cycle_month_max - p_glaa011 +1
      ELSE
         WHILE(p_glaa010 < p_cycle_year_max)
            SELECT MAX(glav006) INTO l_month FROM glav_t WHERE glavent = g_enterprise AND glav001 = p_glaa003 AND glav002 = p_glaa010 
            LET r_span_now = r_span_now+l_month - p_glaa011 +1
            LET p_glaa010 = p_glaa010 + 1
            LET p_glaa011 = 1
         END WHILE
         LET r_span_now = r_span_now + p_cycle_month_max
      END IF 
   END IF 
   RETURN r_span_now
END FUNCTION

PRIVATE FUNCTION abgt010_span_calculate(p_bgaa002,p_glaa003)
   DEFINE p_bgaa002     LIKE bgaa_t.bgaa002  #預算週期         bgam001
   DEFINE p_glaa003     LIKE glaa_t.glaa003  #會計週期參照表號   bgam002
   DEFINE l_bgac002_max LIKE bgac_t.bgac002  #abgi030 預算週期維護中對應預算週期的最大日期
   DEFINE l_bgac002_min LIKE bgac_t.bgac002  #abgi030 預算週期維護中對應預算週期的最小日期
   DEFINE l_bgam004_max LIKE bgam_t.bgam004  #abgi120 預算週期對應表中對應年度的最大值
   DEFINE l_bgam004_min LIKE bgam_t.bgam004  #abgi120 預算週期對應表中對應年度的最小值
   DEFINE l_bgam006_max LIKE bgam_t.bgam006  #abgi120 預算週期對應表中對應期別的最小值
   DEFINE l_bgam006_min LIKE bgam_t.bgam006  #abgi120 預算週期對應表中對應期別的最小值
   DEFINE l_span        LIKE type_t.num5     #跨度
   DEFINE l_stage       LIKE type_t.num5     #所在年度的期別12 or 13
   DEFINE r_bgam004_max LIKE bgam_t.bgam004  
   DEFINE r_bgam004_min LIKE bgam_t.bgam004  
   DEFINE r_bgam006_max LIKE bgam_t.bgam006  
   DEFINE r_bgam006_min LIKE bgam_t.bgam006  
   DEFINE r_span        LIKE type_t.num5     
   DEFINE l_bgac001     LIKE bgac_t.bgac001

   LET l_bgac001 = p_bgaa002
   #根據預算週期編號（p_bgaa002）獲取該週期最大（l_bgac002_max）和最小（l_bgac002_min）日期
   SELECT MAX(bgac002),MIN(bgac002) INTO l_bgac002_max,l_bgac002_min FROM bgac_t 
    WHERE bgacent = g_enterprise AND bgac001 = l_bgac001

   #根據預算週期編號（p_bgaa002），會計週期參照表號（p_glaa003），日期區間（最大（l_bgac002_max）和最小（l_bgac002_min）日期）
   #獲取對應會計週期中最大（l_bgam004_max，l_bgam006_max）和最小（l_bgam004_min,l_bgam006_min）的期別和跨度
   SELECT MAX(bgam004),MIN(bgam004) INTO l_bgam004_max,l_bgam004_min FROM bgam_t 
   WHERE bgament = g_enterprise 
      AND bgam001 = l_bgac001 AND bgam002 = p_glaa003 AND bgam003 BETWEEN l_bgac002_min AND l_bgac002_max
   #不存在跨年
   IF l_bgam004_max = l_bgam004_min THEN
      SELECT MAX(bgam006),MIN(bgam006) INTO l_bgam006_max,l_bgam006_min FROM bgam_t WHERE bgament = g_enterprise 
         AND bgam001 = l_bgac001 AND bgam002 = p_glaa003 AND bgam003 BETWEEN l_bgac002_min AND l_bgac002_max
      LET l_span = l_bgam006_max - l_bgam006_min + 1
   ELSE
   #存在跨年
      SELECT MAX(bgam006) INTO l_bgam006_max FROM bgam_t WHERE bgament = g_enterprise AND bgam004 = l_bgam004_max
         AND bgam001 = l_bgac001 AND bgam002 = p_glaa003 AND bgam003 BETWEEN l_bgac002_min AND l_bgac002_max
         
      SELECT MIN(bgam006) INTO l_bgam006_min FROM bgam_t WHERE bgament = g_enterprise AND bgam004 = l_bgam004_min
         AND bgam001 = l_bgac001 AND bgam002 = p_glaa003 AND bgam003 BETWEEN l_bgac002_min AND l_bgac002_max
      #根據會計週期參照表（l_glaa003），最小年度（l_bgam004_min）獲取該年度期別個數
      #如果期別不是12 or 13，那後面的邏輯或出錯
      SELECT MAX(glav006) INTO l_stage FROM glav_t WHERE glavent = g_enterprise AND glav001 = p_glaa003 AND glav002 = l_bgam004_min
      LET l_span = l_stage - l_bgam006_min + l_bgam006_max
   END IF
   #回传
   LET r_span = l_span
   IF cl_null(r_span) THEN LET r_span = 0 END if
   LET r_bgam004_max = l_bgam004_max
   IF cl_null(r_bgam004_max) THEN LET r_bgam004_max = 0 END if
   LET r_bgam006_max = l_bgam006_max
   IF cl_null(r_bgam006_max) THEN LET r_bgam006_max = 0 END if
   LET r_bgam004_min = l_bgam004_min
   IF cl_null(r_bgam004_min) THEN LET r_bgam004_min = 0 END if
   LET r_bgam006_min = l_bgam006_min
   IF cl_null(r_bgam006_min) THEN LET r_bgam006_min = 0 END if
   RETURN r_bgam004_max,r_bgam006_max,r_bgam004_min,r_bgam006_min,r_span
END FUNCTION

PRIVATE FUNCTION abgt010_detail2_insert(p_bgax001,p_bgax002,p_bgax003,p_bgax005,p_bgax013,p_bgax014,p_bgax008,p_bgax009,p_bgax010)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE p_bgax008 LIKE bgax_t.bgax008
   DEFINE p_bgax009 LIKE bgax_t.bgax009
   DEFINE p_bgax010 LIKE bgax_t.bgax010
   DEFINE p_bgax013 LIKE bgax_t.bgax013
   DEFINE p_bgax014 LIKE bgax_t.bgax014
   DEFINE l_cycle   LIKE type_t.num5
   DEFINE l_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE ls_cnt    LIKE type_t.num5
   DEFINE l_bgax004 LIKE bgax_t.bgax004
   DEFINE l_bgax008 LIKE bgax_t.bgax008
   DEFINE l_bgax009 LIKE bgax_t.bgax009
   DEFINE l_bgax010 LIKE bgax_t.bgax010
   DEFINE l_bgax011 LIKE bgax_t.bgax011
   DEFINE l_bgax012 LIKE bgax_t.bgax012
   DEFINE l_bgax013 LIKE bgax_t.bgax013
   DEFINE l_bgax014 LIKE bgax_t.bgax014
   DEFINE l_bgax015 LIKE bgax_t.bgax015
   DEFINE l_bgac001 LIKE bgac_t.bgac001
   DEFINE l_bgaxownid LIKE bgax_t.bgaxownid
   DEFINE l_bgaxowndp LIKE bgax_t.bgaxowndp
   DEFINE l_bgaxcrtid LIKE bgax_t.bgaxcrtid
   DEFINE l_bgaxcrtdp LIKE bgax_t.bgaxcrtdp
   DEFINE l_bgaxcrtdt LIKE bgax_t.bgaxcrtdt
   DEFINE l_bgaxmodid LIKE bgax_t.bgaxmodid
   DEFINE l_bgaxmoddt LIKE bgax_t.bgaxmoddt
   DEFINE ls_sql    STRING 


   SELECT bgaa002 INTO l_bgaa002 FROM bgaa_t WHERE bgaaent = g_enterprise
      AND bgaa001 = p_bgax001
   LET l_bgac001 = l_bgaa002
   SELECT COUNT(DISTINCT bgac004) INTO ls_cnt FROM bgac_t WHERE bgacent = g_enterprise
     AND bgac001 = l_bgac001
   LET l_bgax013 = p_bgax013 / ls_cnt
   LET l_bgax014 = p_bgax014 / ls_cnt

   LET ls_sql = "SELECT DISTINCT bgac004 FROM bgac_t WHERE bgacent = '",g_enterprise,"' ",
                "   AND bgac001 = '",l_bgac001,"' ORDER BY bgac004"
   PREPARE abgt010_detail2_pre FROM ls_sql
   DECLARE abgt010_detail2_cs CURSOR FOR abgt010_detail2_pre
   LET l_cycle = 0 
   CALL abgt010_common_def() 
      RETURNING l_bgaxownid,l_bgaxowndp,l_bgaxcrtid,l_bgaxcrtdp,l_bgaxcrtdt,l_bgaxmodid,l_bgaxmoddt
   FOREACH abgt010_detail2_cs INTO l_bgax015
      SELECT MAX(bgax004) + 1 INTO l_bgax004 FROM bgax_t WHERE bgaxent = g_enterprise
         AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003
      IF cl_null(l_bgax004) THEN
         LET l_bgax004 = 1
      END IF 
      LET l_cycle = l_cycle + 1
      CALL abgt010_detail_calculate(p_bgax001,p_bgax003,p_bgax005,l_cycle)
         RETURNING l_bgax008,l_bgax009,l_bgax010
      CALL abgt010_bgax011_bgax012_ref(l_bgax008,l_bgax009,l_bgax010)
          RETURNING l_bgax011,l_bgax012
      INSERT INTO bgax_t(bgaxent,bgax001,bgax002,bgax003,bgax004,bgax005,bgax008,
                         bgax009,bgax010,bgax011,bgax012,bgax013,bgax014,bgax015,bgaxstus,bgax006,
                         bgax016,bgax017,bgax018,bgax019,bgax020,bgax021,bgax022,bgax023,bgax024,bgax025,
                         bgax026,bgax027,bgax028,bgax029,bgax030,bgax031,bgax032,bgax033,bgax034,bgax035,
                         bgax036,
                         bgaxownid,bgaxowndp,bgaxcrtid,bgaxcrtdp,bgaxcrtdt,bgaxmodid,bgaxmoddt)
      VALUES (g_enterprise,p_bgax001,p_bgax002,p_bgax003,l_bgax004,p_bgax005,l_bgax008,l_bgax009,l_bgax010
              ,l_bgax011,l_bgax012,l_bgax013,l_bgax014,l_bgax015,g_bgaxstus,g_bgax006,
              ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
              l_bgaxownid,l_bgaxowndp,l_bgaxcrtid,l_bgaxcrtdp,l_bgaxcrtdt,l_bgaxmodid,l_bgaxmoddt)
   END FOREACH 
END FUNCTION

PRIVATE FUNCTION abgt010_detail_calculate(p_bgax001,p_bgax003,p_bgax005,p_cycle)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE p_cycle   LIKE type_t.num5
   DEFINE l_bgax008 LIKE bgax_t.bgax008
   DEFINE l_bgax009 LIKE bgax_t.bgax009
   DEFINE l_bgax010 LIKE bgax_t.bgax010
   DEFINE r_bgax008 LIKE bgax_t.bgax008
   DEFINE r_bgax009 LIKE bgax_t.bgax009
   DEFINE r_bgax010 LIKE bgax_t.bgax010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgax003 LIKE bgax_t.bgax003
   DEFINE ls_sql    STRING 

   LET r_bgax008 = 0
   LET r_bgax009 = 0
   LET r_bgax010 = 0
   SELECT bgaa011,bgaa010 INTO l_bgaa011,l_bgaa010 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = p_bgax001
   LET ls_sql = "SELECT DISTINCT a.ooed004 FROM ",
                      " (SELECT ooed004,ooed005 FROM ooed_t WHERE ooed002 = '",l_bgaa011,"' ",
                      "     AND ooed003 = '",l_bgaa010,"' AND ooedent = '",g_enterprise,"' ",
                      "     AND ooed001 = '4' AND ooed004 != ooed005) a ",
                      " START WITH a.ooed005 = '",p_bgax003,"' ",
                      " CONNECT BY PRIOR a.ooed004 = a.ooed005 ",
                      " ORDER BY ooed004 "
   PREPARE abgt010_detail2_cal_pre FROM ls_sql
   DECLARE abgt010_detail2_cal_cs CURSOR FOR abgt010_detail2_cal_pre
       
   FOREACH abgt010_detail2_cal_cs INTO l_bgax003
      CALL abgt010_detail2_money_sum(p_bgax001,l_bgax003,p_bgax005,p_cycle)
      RETURNING l_bgax008,l_bgax009,l_bgax010
      LET r_bgax008 = r_bgax008 + l_bgax008
      LET r_bgax009 = r_bgax009 + l_bgax009
      LET r_bgax010 = r_bgax010 + l_bgax010
   END FOREACH 
   CALL abgt010_detail2_money_sum(p_bgax001,p_bgax003,p_bgax005,p_cycle)
   RETURNING l_bgax008,l_bgax009,l_bgax010
   LET r_bgax008 = r_bgax008 + l_bgax008
   LET r_bgax009 = r_bgax009 + l_bgax009
   LET r_bgax010 = r_bgax010 + l_bgax010
   RETURN r_bgax008,r_bgax009,r_bgax010
END FUNCTION

PRIVATE FUNCTION abgt010_detail2_money_sum(p_bgax001,p_bgax003,p_bgax005,p_cycle)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE p_cycle   LIKE type_t.num5
   DEFINE l_glaald  LIKE glaa_t.glaald
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_glaa002 LIKE glaa_t.glaa002
   DEFINE l_glaa003 LIKE glaa_t.glaa003
   DEFINE l_glaa004 LIKE glaa_t.glaa004
   DEFINE l_glaa010 LIKE glaa_t.glaa010
   DEFINE l_glaa011 LIKE glaa_t.glaa011
   DEFINE l_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE l_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE l_bgaa004 LIKE bgaa_t.bgaa004
   DEFINE l_bgaa008 LIKE bgaa_t.bgaa008
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgae007 LIKE bgae_t.bgae007
   DEFINE l_bgae002 LIKE bgae_t.bgae002
   DEFINE l_bgae003 LIKE bgae_t.bgae003
   DEFINE l_bgae009 LIKE bgae_t.bgae009
   DEFINE l_bgae010 LIKE bgae_t.bgae010
   DEFINE l_bgae012 LIKE bgae_t.bgae012
   DEFINE l_bgae013 LIKE bgae_t.bgae013
   DEFINE l_bgax008_d LIKE bgax_t.bgax008
   DEFINE l_bgax008_c LIKE bgax_t.bgax008
   DEFINE l_bgax009_d LIKE bgax_t.bgax009
   DEFINE l_bgax009_c LIKE bgax_t.bgax009
   DEFINE l_bgax010_d LIKE bgax_t.bgax010
   DEFINE l_bgax010_c LIKE bgax_t.bgax010
   DEFINE l_bgae001   LIKE bgae_t.bgae001
   DEFINE l_bgax008 LIKE bgax_t.bgax008
   DEFINE l_bgax009 LIKE bgax_t.bgax009
   DEFINE l_bgax010 LIKE bgax_t.bgax010
   DEFINE r_bgax008 LIKE bgax_t.bgax008
   DEFINE r_bgax009 LIKE bgax_t.bgax009
   DEFINE r_bgax010 LIKE bgax_t.bgax010
   DEFINE i         LIKE type_t.num5
   DEFINE ls_str    STRING 
   DEFINE ls_return STRING 
   DEFINE ls_return2 STRING
   DEFINE ls_return3 STRING
   DEFINE ls_type LIKE type_t.chr1
   DEFINE ls_chr LIKE type_t.chr1
   DEFINE ls_bgae013 STRING 
   DEFINE ls_sql STRING 
   LET ls_sql = ''
   LET r_bgax008 = 0
   LET r_bgax009 = 0
   LET r_bgax010 = 0

   CALL abgt010_sum_need_value(p_bgax001,p_bgax003,p_bgax005)
      RETURNING l_glaald,l_glaa001,l_glaa002,l_glaa003,l_glaa004,l_glaa010,l_glaa010,
                l_bgaa002,l_bgaa003,l_bgaa004,l_bgaa008,
                l_bgae007,l_bgae002,l_bgae003,l_bgae009,l_bgae010,l_bgae012,l_bgae013
   #根据l_bgae007的值判断
   IF l_bgae007 = '1' THEN #abgi040
      CALL abgt010_detail2_040_sum(p_bgax001,p_bgax003,p_bgax005,p_cycle)
         RETURNING l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
      IF l_bgae002 = '1' THEN
         LET r_bgax008 = l_bgax008_d - l_bgax008_c
         LET r_bgax009 = l_bgax009_d - l_bgax009_c
         LET r_bgax010 = l_bgax010_d - l_bgax010_c
      ELSE
         LET r_bgax008 = l_bgax008_c - l_bgax008_d
         LET r_bgax009 = l_bgax009_c - l_bgax009_d
         LET r_bgax010 = l_bgax010_c - l_bgax010_d
      END IF 
   END IF 
   IF l_bgae007 = '2' THEN #abgi060
      LET ls_sql = "SELECT bgae001 FROM bgae_t WHERE bgaeent = g_enterprise ",
                   "   AND bgae006 = '",l_bgaa008,"' AND bgae001 = '",p_bgax005,"'"
      PREPARE abgt010_detail2_060_pre FROM ls_sql
      DECLARE abgt010_detail2_060_cs CURSOR FOR abgt010_detail2_060_pre
      IF l_bgae012 = '1' OR l_bgae012 = '2' OR l_bgae012 = '3' OR l_bgae012 = '4' THEN
         FOREACH abgt010_060_cs INTO l_bgae001
            CALL abgt010_detail2_040_sum(p_bgax001,p_bgax003,l_bgae001,p_cycle)
               RETURNING l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
            IF l_bgae012 = '1' OR l_bgae012 = '3' THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_d - l_bgax008_c
               LET r_bgax009 = r_bgax009 + l_bgax009_d - l_bgax009_c
               LET r_bgax010 = r_bgax010 + l_bgax010_d - l_bgax010_c
            END IF 
            IF l_bgae012 = '2' OR l_bgae012 = '4' THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_c - l_bgax008_d
               LET r_bgax009 = r_bgax009 + l_bgax009_c - l_bgax009_d
               LET r_bgax010 = r_bgax010 + l_bgax010_c - l_bgax010_d
            END IF
         END FOREACH 
      END IF 
         
      IF l_bgae012 = '5' OR l_bgae012 = '6' THEN
         FOREACH abgt010_detail2_060_cs INTO l_bgae001
            CALL abgt010_detail2_040_sum(p_bgax001,p_bgax003,l_bgae001,p_cycle)
               RETURNING l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
            IF l_bgae012 = '5' THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_d - l_bgax008_c
               LET r_bgax009 = r_bgax009 + l_bgax009_d - l_bgax009_c
               LET r_bgax010 = r_bgax010 + l_bgax010_d - l_bgax010_c
            END IF 
                  
            IF l_bgae012 = '6'THEN
               LET r_bgax008 = r_bgax008 + l_bgax008_c - l_bgax008_d
               LET r_bgax009 = r_bgax009 + l_bgax009_c - l_bgax009_d
               LET r_bgax010 = r_bgax010 + l_bgax010_c - l_bgax010_d
            END IF
         END FOREACH
      END IF 
   END IF 
      
   IF l_bgae007 = '3' THEN #abgi080
      LET ls_bgae013 = l_bgae013,"="
      FOR i = 1 TO ls_bgae013.getLength()
         LET ls_chr = ls_bgae013.subString(i,i+1)
         IF ls_chr = "+" OR ls_chr = "-" OR ls_chr = "/" OR ls_chr = "=" OR ls_chr = "(" OR ls_chr = ")"  OR ls_chr = '*' THEN 
            IF ls_type = 'Y' THEN
               CALL abgt010_detail2_money_sum(p_bgax001,p_bgax003,ls_chr,p_cycle)
                  RETURNING l_bgax008,l_bgax009,l_bgax010
               LET r_bgax008 = l_bgax008 
               LET r_bgax009 = l_bgax009 
               LET r_bgax010 = l_bgax010 
            END IF 
            LET ls_return = ls_return||r_bgax008||ls_chr
            LET ls_return2 = ls_return2||r_bgax009||ls_chr
            LET ls_return3 = ls_return3||r_bgax010||ls_chr
            LET ls_type = ''
            LET ls_str = ''
         ELSE
            IF (ls_chr = 'Y' OR ls_chr = 'N') AND ls_type = '' THEN 
               LET ls_type = ls_chr
            ELSE
               IF ls_type = 'Y' OR ls_type = 'N' THEN
                  LET ls_str = ls_str||ls_chr
               END IF 
            END IF 
         END IF 
      END FOR
      IF ls_type = 'N' THEN
         CALL abgt010_money_sum(p_bgax001,p_bgax003,ls_str)
              RETURNING l_bgax008,l_bgax009,l_bgax010
         LET r_bgax008 = l_bgax008 
         LET r_bgax009 = l_bgax009 
         LET r_bgax010 = l_bgax010 
         LET ls_return = ls_return,r_bgax008
         LET ls_return2 = ls_return2,r_bgax009
         LET ls_return3 = ls_return3,r_bgax010
      END IF 
      IF ls_type = 'Y' THEN 
         LET ls_return = ls_return,ls_str
         LET ls_return2 = ls_return2,ls_str
         LET ls_return3 = ls_return3,ls_str
      END IF
      LET ls_sql = "SELECT ROUND(",ls_return,",6) FROM dual"
      PREPARE bgax_pre FROM ls_sql
      EXECUTE bgax_pre INTO r_bgax008
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00004'
         LET g_errparam.extend = ls_return
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_bgax008 = 0
      END IF
      LET ls_sql = "SELECT ROUND(",ls_return2,",6) FROM dual"
      PREPARE bgax_pre2 FROM ls_sql
      EXECUTE bgax_pre2 INTO r_bgax009
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00004'
         LET g_errparam.extend = ls_return2
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_bgax009 = 0
      END IF
      LET ls_sql = "SELECT ROUND(",ls_return3,",6) FROM dual"
      PREPARE bgax_pre3 FROM ls_sql
      EXECUTE bgax_pre3 INTO r_bgax010
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00004'
         LET g_errparam.extend = ls_return3
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_bgax010 = 0
      END IF
   END IF 
   RETURN r_bgax008,r_bgax009,r_bgax010
END FUNCTION

PRIVATE FUNCTION abgt010_detail2_040_sum(p_bgax001,p_bgax003,p_bgae001,p_cycle)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgae001 LIKE bgae_t.bgae001
   DEFINE p_cycle   LIKE type_t.num5
   DEFINE l_glaald  LIKE glaa_t.glaald
   DEFINE l_glaa001 LIKE glaa_t.glaa001
   DEFINE l_glaa002 LIKE glaa_t.glaa002
   DEFINE l_glaa003 LIKE glaa_t.glaa003
   DEFINE l_glaa004 LIKE glaa_t.glaa004
   DEFINE l_glaa010 LIKE glaa_t.glaa010
   DEFINE l_glaa011 LIKE glaa_t.glaa011
   DEFINE l_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE l_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE l_bgaa004 LIKE bgaa_t.bgaa004
   DEFINE l_bgaa008 LIKE bgaa_t.bgaa008
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgae007 LIKE bgae_t.bgae007
   DEFINE l_bgae002 LIKE bgae_t.bgae002
   DEFINE l_bgae003 LIKE bgae_t.bgae003
   DEFINE l_bgae009 LIKE bgae_t.bgae009
   DEFINE l_bgae010 LIKE bgae_t.bgae010
   DEFINE l_bgae012 LIKE bgae_t.bgae012
   DEFINE l_bgae013 LIKE bgae_t.bgae013
   DEFINE l_bgax008_d LIKE bgax_t.bgax008
   DEFINE l_bgax008_c LIKE bgax_t.bgax008
   DEFINE l_bgax009_d LIKE bgax_t.bgax009
   DEFINE l_bgax009_c LIKE bgax_t.bgax009
   DEFINE l_bgax010_d LIKE bgax_t.bgax010
   DEFINE l_bgax010_c LIKE bgax_t.bgax010
   DEFINE l_bgax008_d_2 LIKE bgax_t.bgax008
   DEFINE l_bgax008_c_2 LIKE bgax_t.bgax008
   DEFINE l_bgax009_d_2 LIKE bgax_t.bgax009
   DEFINE l_bgax009_c_2 LIKE bgax_t.bgax009
   DEFINE l_bgax010_d_2 LIKE bgax_t.bgax010
   DEFINE l_bgax010_c_2 LIKE bgax_t.bgax010
   DEFINE l_bgax008_d_2_ce LIKE bgax_t.bgax008
   DEFINE l_bgax008_c_2_ce LIKE bgax_t.bgax008
   DEFINE l_bgax009_d_2_ce LIKE bgax_t.bgax009
   DEFINE l_bgax009_c_2_ce LIKE bgax_t.bgax009
   DEFINE l_bgax010_d_2_ce LIKE bgax_t.bgax010
   DEFINE l_bgax010_c_2_ce LIKE bgax_t.bgax010
   DEFINE l_budget_year_max LIKE type_t.num5
   DEFINE l_budget_month_max LIKE type_t.num5
   DEFINE l_budget_year_min LIKE type_t.num5
   DEFINE l_budget_month_min LIKE type_t.num5
   DEFINE l_budget_span LIKE type_t.num5
   DEFINE ls_subject_sql STRING
   DEFINE ls_glar005_sql STRING
   DEFINE ls_glar006_sql STRING
   DEFINE ls_glaq003_sql STRING
   DEFINE ls_glaq004_sql STRING
   DEFINE l_year_max LIKE type_t.num5
   DEFINE l_month_max LIKE type_t.num5
   DEFINE l_year_min LIKE type_t.num5
   DEFINE l_month_min LIKE type_t.num5
   DEFINE l_year_max2 LIKE type_t.num5
   DEFINE l_month_max2 LIKE type_t.num5
   DEFINE l_year_min2 LIKE type_t.num5
   DEFINE l_month_min2 LIKE type_t.num5
   DEFINE l_year_max3 LIKE type_t.num5
   DEFINE l_month_max3 LIKE type_t.num5
   DEFINE l_year_min3 LIKE type_t.num5
   DEFINE l_month_min3 LIKE type_t.num5
   DEFINE l_bgae001   LIKE bgae_t.bgae001
   DEFINE l_bgax008 LIKE bgax_t.bgax008
   DEFINE l_bgax009 LIKE bgax_t.bgax009
   DEFINE l_bgax010 LIKE bgax_t.bgax010
   DEFINE r_bgax008 LIKE bgax_t.bgax008
   DEFINE r_bgax009 LIKE bgax_t.bgax009
   DEFINE r_bgax010 LIKE bgax_t.bgax010

   
   CALL abgt010_sum_need_value(p_bgax001,p_bgax003,p_bgae001)
      RETURNING l_glaald,l_glaa001,l_glaa002,l_glaa003,l_glaa004,l_glaa010,l_glaa011,
                l_bgaa002,l_bgaa003,l_bgaa004,l_bgaa008,
                l_bgae007,l_bgae002,l_bgae003,l_bgae009,l_bgae010,l_bgae012,l_bgae013
   #获取预算周期
   CALL abgt010_span_calculate(l_bgaa002,l_glaa003)
      RETURNING l_budget_year_max,l_budget_month_max,l_budget_year_min,l_budget_month_min,l_budget_span 
   CALL abgt010_year_month_calculate(l_budget_year_min,l_budget_month_min,l_budget_span,l_glaa003)
         RETURNING l_year_max,l_month_max,l_year_min,l_month_min
   CALL abgt010_year_month_calculate(l_year_min,l_month_min,l_budget_span,l_glaa003)
         RETURNING l_year_max2,l_month_max2,l_year_min2,l_month_min2
   CALL abgt010_year_month_calculate(l_year_min2,l_month_min2,l_budget_span,l_glaa003)
         RETURNING l_year_max3,l_month_max3,l_year_min3,l_month_min3
   LET p_cycle = p_cycle - 1
   CALL abgt010_cycle_only(l_year_min,l_month_min,p_cycle,l_glaa003) RETURNING l_year_min,l_month_min
   CALL abgt010_cycle_only(l_year_min2,l_month_min2,p_cycle,l_glaa003) RETURNING l_year_min2,l_month_min2
   CALL abgt010_cycle_only(l_year_min3,l_month_min3,p_cycle,l_glaa003) RETURNING l_year_min3,l_month_min3
   #glar_t借方
   LET ls_glar005_sql = "SELECT SUM(glar005) FROM glar_t WHERE glarent = '",g_enterprise,"' AND glarld = '",l_glaald,"' ",
                        "AND glar002 = ? AND glar012 = '",p_bgax003,"'",
                        "   AND glar003 = ? AND glar001 IN "
   #glar_t贷方
   LET ls_glar006_sql = "SELECT SUM(glar006) FROM glar_t WHERE glarent = '",g_enterprise,"' AND glarld = '",l_glaald,"' ",
                        "   AND glar002 = ? AND glar012 = '",p_bgax003,"'",
                        "   AND glar003 = ? AND glar001 IN "
   #glap_t,glaq_t借方
      LET ls_glaq003_sql = "SELECT SUM(glaq003) FROM glap_t,glaq_t WHERE glapent = '",g_enterprise,"' AND glapent = glaqent",
                        "   AND glapld = glaqld AND glapdocno = glaqdocno AND glapld = '",l_glaald,"' ",
                        "   AND glap002 = ? AND glap004 =?  AND glap007 = 'CE' AND glaq017 =  '",p_bgax003,"'",
                        "   AND glaq002 IN "
   LET ls_glaq004_sql = "SELECT SUM(glaq004) FROM glap_t,glaq_t WHERE glapent = '",g_enterprise,"' AND glapent = glaqent",
                        "   AND glapld = glaqld AND glapdocno = glaqdocno AND glapld = '",l_glaald,"' ",
                        "   AND glap002 = ? AND glap004 = ?  AND glap007 = 'CE' AND glaq017 =  '",p_bgax003,"'",
                        "   AND glaq002 IN "
                
   #获取科目
   CALL abgt010_get_subject(l_bgaa008,l_glaa004,p_bgae001) 
      RETURNING ls_subject_sql
   LET ls_glar005_sql = ls_glar005_sql,ls_subject_sql
   PREPARE abgt010_040_pre_d2 FROM ls_glar005_sql  # 年度，期别
   LET ls_glar006_sql = ls_glar006_sql,ls_subject_sql
   PREPARE abgt010_040_pre_c2 FROM ls_glar006_sql  # 年度，期别
   LET ls_glaq003_sql = ls_glaq003_sql,ls_subject_sql
   PREPARE abgt010_040_pre_d_ce2 FROM ls_glaq003_sql  # 年度，期别
   LET ls_glaq004_sql = ls_glaq004_sql,ls_subject_sql
   PREPARE abgt010_040_pre_c_ce2 FROM ls_glaq004_sql  # 年度，期别

   #根据资产损益别（l_bgae003）
   EXECUTE abgt010_040_pre_d2 USING l_year_min,l_month_min INTO l_bgax010_d
   EXECUTE abgt010_040_pre_c2 USING l_year_min,l_month_min INTO l_bgax010_c
   #前一
   EXECUTE abgt010_040_pre_d2 USING l_year_min2,l_month_min2 INTO l_bgax009_d
   EXECUTE abgt010_040_pre_c2 USING l_year_min2,l_month_min2 INTO l_bgax009_c
   #前二
   EXECUTE abgt010_040_pre_d2 USING l_year_min3,l_month_min3 INTO l_bgax008_d
   EXECUTE abgt010_040_pre_c2 USING l_year_min3,l_month_min3 INTO l_bgax008_c
   IF l_bgae003 = '2' THEN 
      #当前
      EXECUTE abgt010_040_pre_d_ce2 USING l_year_min,l_month_min INTO l_bgax010_d_2_ce
      EXECUTE abgt010_040_pre_c_ce2 USING l_year_min,l_month_min INTO l_bgax010_c_2_ce
      LET l_bgax010_d = l_bgax010_d - l_bgax010_d_2_ce
      LET l_bgax010_c = l_bgax010_c - l_bgax010_d_2_ce
      #前一
      EXECUTE abgt010_040_pre_d_ce2 USING l_year_min2,l_month_min2 INTO l_bgax010_d_2_ce
      EXECUTE abgt010_040_pre_c_ce2 USING l_year_min2,l_month_min2 INTO l_bgax010_c_2_ce
      LET l_bgax010_d = l_bgax010_d - l_bgax010_d_2_ce
      LET l_bgax010_c = l_bgax010_c - l_bgax010_d_2_ce
      #前二
      EXECUTE abgt010_040_pre_d_ce2 USING l_year_min3,l_month_min3 INTO l_bgax010_d_2_ce
      EXECUTE abgt010_040_pre_c_ce2 USING l_year_min3,l_month_min3 INTO l_bgax010_c_2_ce
      LET l_bgax010_d = l_bgax010_d - l_bgax010_d_2_ce
      LET l_bgax010_c = l_bgax010_c - l_bgax010_d_2_ce
   END IF 
   IF cl_null(l_bgax008_d) THEN LET l_bgax008_d = 0 END IF 
   IF cl_null(l_bgax008_c) THEN LET l_bgax008_c = 0 END IF 
   IF cl_null(l_bgax009_d) THEN LET l_bgax009_d = 0 END IF 
   IF cl_null(l_bgax009_c) THEN LET l_bgax009_c = 0 END IF 
   IF cl_null(l_bgax010_d) THEN LET l_bgax010_d = 0 END IF 
   IF cl_null(l_bgax010_c) THEN LET l_bgax010_c = 0 END IF 
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax008_d) RETURNING l_bgax008_d
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax008_c) RETURNING l_bgax008_c
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax009_d) RETURNING l_bgax009_d
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax009_c) RETURNING l_bgax009_c
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax010_d) RETURNING l_bgax010_d
   CALL abgt010_rate(p_bgax001,l_glaald,l_bgax010_c) RETURNING l_bgax010_c
   RETURN l_bgax008_d,l_bgax009_d,l_bgax010_d,l_bgax008_c,l_bgax009_c,l_bgax010_c
END FUNCTION

PRIVATE FUNCTION abgt010_cycle_only(p_year_min,p_month_min,p_cycle,p_glaa003)
   DEFINE p_year_min LIKE type_t.num5
   DEFINE p_month_min LIKE type_t.num5
   DEFINE p_cycle    LIKE type_t.num5
   DEFINE p_glaa003  LIKE glaa_t.glaa003
   DEFINE l_month_span LIKE type_t.num5
   DEFINE r_year     LIKE type_t.num5
   DEFINE r_month    LIKE type_t.num5

   LET r_year = p_year_min
   LET r_month = p_month_min
   WHILE(p_cycle > 0 )
      SELECT MAX(glav006) INTO l_month_span FROM glav_t WHERE glavent = g_enterprise AND glav001 = p_glaa003 AND glav002 = p_year_min 
      IF r_month + 1 > l_month_span THEN
         LET r_year = r_year + 1
         LET r_month = 1
      ELSE
         LET r_month = r_month + 1
      END IF
      LET p_cycle = p_cycle - 1
   END WHILE 
   RETURN r_year,r_month
END FUNCTION

PRIVATE FUNCTION abgt010_statechange(p_str)
   DEFINE p_str  STRING 
   DEFINE l_stus LIKE bgax_t.bgaxstus 
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011

   IF cl_null(g_bgai004) AND p_str !='qrsf' THEN 
      CALL abgt010_s01(g_bgax_m.bgax001,g_user)
   END IF
   DISPLAY g_bgai004 TO bgai004
   DISPLAY g_ooefl003 TO bgai004_desc
   IF p_str !='qrsf' THEN 
      IF NOT abgt010_permission_chk(g_bgax_m.bgax001,g_bgax003) THEN 
         RETURN 
      END IF 
      IF NOT abgt010_action_authority(g_bgai004,g_bgax_m.bgax001,g_bgax_m.bgax002,g_bgax003,p_str) THEN
         RETURN  
      END IF 
      IF p_str = 'audit' THEN 
         LET l_stus = '3'
      END IF 
      IF p_str = 'unaudit' THEN 
         LET l_stus = '1'
      END IF 
      IF p_str = 'issued' THEN 
         LET l_stus = '4'
      END IF 
      IF p_str = 'unissued' THEN 
         LET l_stus = '3'
      END IF 
      SELECT bgaa010,bgaa011 INTO l_bgaa010,l_bgaa011 FROM bgaa_t
       WHERE bgaaent = g_enterprise AND bgaa001 = g_bgax_m.bgax001
      IF p_str = 'final' THEN
         LET l_stus = '5'
         UPDATE bgax_t SET bgaxstus = l_stus
          WHERE bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
            AND bgaxent = g_enterprise #170122-00008#1 add
      ELSE
         UPDATE bgax_t SET bgaxstus = l_stus
          WHERE bgax001 = g_bgax_m.bgax001 AND bgax002 = g_bgax_m.bgax002
            AND bgax003 = g_bgax003
            AND bgaxent = g_enterprise #170122-00008#1 add
      END IF 
      CALL abgt010_browser_tree_fill(l_bgaa010,l_bgaa011)
   END IF 
   IF p_str = 'qrsf' THEN
      CALL abgt010_s01(g_bgax_m.bgax001,g_user)
      DISPLAY g_bgai004 TO bgai004
      DISPLAY g_ooefl003 TO bgai004_desc
   END IF 
END FUNCTION

PRIVATE FUNCTION abgt010_permission_chk(p_bgai001,p_bgai004)
   DEFINE p_bgai001 LIKE bgai_t.bgai001  #单头预算组织编号
   DEFINE p_bgai004 LIKE bgai_t.bgai004  #樹上面點選的組織
   DEFINE ls_cnt    LIKE type_t.num5
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE r_success LIKE type_t.num5
   DEFINE ls_sql    STRING 
   DEFINE l_ooed004 LIKE ooed_t.ooed004
   #初始化
   LET r_success = FALSE  
   #檢查：檢查是否有bgai007 = 'Y' and bgaistus = 'Y'的存在，有就返回true
   #預算編號（bgai001）--p_bgai001，組織成員（bgai003）--g_user，可操作組織（bgai004）--p_bgai004
    
   IF p_bgai004 = g_bgai004 THEN 
      LET r_success = TRUE 
   ELSE
      LET ls_cnt = 0
      SELECT COUNT(*) INTO ls_cnt FROM bgai_t
       WHERE bgaient = g_enterprise AND bgai001 = p_bgai001 AND bgai003 = g_user
         AND bgai004 = g_bgai004 AND bgai007 = 'Y' AND bgaistus = 'Y'
      IF ls_cnt > 0 THEN
         SELECT bgaa011,bgaa010 INTO l_bgaa011,l_bgaa010 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = p_bgai001
         
         LET ls_sql = "SELECT DISTINCT a.ooed004 FROM ",
                      " (SELECT ooed004,ooed005 FROM ooed_t WHERE ooed002 = '",l_bgaa011,"' ",
                      "     AND ooed003 = '",l_bgaa010,"' AND ooedent = '",g_enterprise,"' ",
                      "     AND ooed001 = '4' AND ooed004 != ooed005) a ",
                      " START WITH a.ooed005 = '",g_bgai004,"' ",
                      " CONNECT BY PRIOR a.ooed004 = a.ooed005 ",
                      " ORDER BY ooed004 "
         PREPARE abgt010_permission_pre FROM ls_sql
         DECLARE abgt010_permission_cs CURSOR FOR abgt010_permission_pre
         
         FOREACH abgt010_permission_cs INTO l_ooed004
            IF l_ooed004 = p_bgai004 THEN
               LET r_success = TRUE
               EXIT FOREACH
            END IF 
         END FOREACH 
         #報錯提示
         IF NOT r_success THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'abg-00054'
            LET g_errparam.extend = p_bgai004
            LET g_errparam.popup = TRUE
            CALL cl_err()

         END IF
      ELSE
         LET r_success = FALSE
         INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'abg-00054'
            LET g_errparam.extend = p_bgai004
            LET g_errparam.popup = TRUE
            CALL cl_err()

      END IF 
   END IF 
   
    
   #返回檢查結果
   RETURN r_success
END FUNCTION

PRIVATE FUNCTION abgt010_entering_authority(p_bgax001,p_bgax002,p_bgax003)
   DEFINE p_bgai004 LIKE bgai_t.bgai004
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE l_ooed005 LIKE ooed_t.ooed005
   DEFINE l_ooed004 LIKE ooed_t.ooed004
   DEFINE l_bgaxstus LIKE bgax_t.bgaxstus
   DEFINE ls_sql    STRING 
   DEFINE r_success LIKE type_t.num5

   LET r_success = FALSE
   LET l_bgaxstus = ''
   #獲取當前預算編號對應的最上層預算組織和版本
   SELECT bgaa010,bgaa011 INTO l_bgaa010,l_bgaa011 FROM bgaa_t WHERE bgaaent = g_enterprise 
      AND bgaa001 = p_bgax001

   #判断是否為最上一层组织编号
   IF p_bgax003 = l_bgaa011 THEN
      #如果为最上层，检查进度状况是否为1.录入，同时需要检查是否存在资料
      SELECT DISTINCT bgaxstus INTO l_bgaxstus FROM bgax_t
       WHERE bgaxent = g_enterprise AND bgax001 = p_bgax001 AND bgax002 = p_bgax002
         AND bgax003 = p_bgax003
      IF l_bgaxstus = '1' OR cl_null(l_bgaxstus) THEN 
         LET r_success = TRUE 
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00056'
         LET g_errparam.extend = p_bgax003
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF 
   ELSE
      #不为最上层组织，则找出对应组织的上层组织
      SELECT ooed005 INTO l_ooed005 FROM ooed_t WHERE ooedent = g_enterprise
         AND ooed001 = '4' AND ooed002 = l_bgaa011 AND ooed003 = l_bgaa010 AND ooed004 = g_bgai004
      
      #检查是否为使用者当前组织的下层组织
      LET ls_sql = "SELECT DISTINCT a.ooed004 FROM ",
                      " (SELECT ooed004,ooed005 FROM ooed_t WHERE ooed002 = '",l_bgaa011,"' ",
                      "     AND ooed003 = '",l_bgaa010,"' AND ooedent = '",g_enterprise,"' ",
                      "     AND ooed001 = '4' AND ooed004 != ooed005) a ",
                      " WHERE ooed004 = '",p_bgax003,"' ",
                      " START WITH a.ooed005 = '",g_bgai004,"' ",
                      " CONNECT BY PRIOR a.ooed004 = a.ooed005 ",
                      " ORDER BY ooed004 "
      PREPARE abgt010_entering_pre FROM ls_sql
      EXECUTE abgt010_entering_pre INTO l_ooed004
      IF NOT cl_null(l_ooed004) OR p_bgax003 = g_bgai004 THEN
         #检查用户身份所在层的上一层是否下发，只有上层为下发后，下层才能进行资料的录入
         IF NOT cl_null(l_ooed005) AND g_bgai004 != l_bgaa011 THEN
            SELECT DISTINCT bgaxstus INTO l_bgaxstus FROM bgax_t
             WHERE bgaxent = g_enterprise AND bgax001 = p_bgax001 AND bgax002 = p_bgax002
               AND bgax003 = l_ooed005
            IF l_bgaxstus = '4' THEN 
               LET l_bgaxstus = ''
               SELECT DISTINCT bgaxstus INTO l_bgaxstus FROM bgax_t
                WHERE bgaxent = g_enterprise AND bgax001 = p_bgax001 AND bgax002 = p_bgax002
                  AND bgax003 = p_bgax003
               IF cl_null(l_bgaxstus) OR l_bgaxstus = '1' OR l_bgaxstus = '2' THEN 
                  LET r_success = TRUE 
               ELSE
                  INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00056'
         LET g_errparam.extend = p_bgax003
         LET g_errparam.popup = TRUE
         CALL cl_err()

               END IF 
            ELSE 
               INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00056'
         LET g_errparam.extend = p_bgax003
         LET g_errparam.popup = TRUE
         CALL cl_err()

            END IF
         ELSE
            IF g_bgai004 = l_bgaa011 THEN 
               LET r_success = TRUE 
            ELSE
               INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00056'
         LET g_errparam.extend = p_bgax003
         LET g_errparam.popup = TRUE
         CALL cl_err()

            END IF 
         END IF
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00054'
         LET g_errparam.extend = l_ooed004
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF 
   END IF 
   
   RETURN r_success 
END FUNCTION

PRIVATE FUNCTION abgt010_action_authority(p_bgai004,p_bgax001,p_bgax002,p_bgax003,p_str)
   DEFINE p_bgai004 LIKE bgai_t.bgai004
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_str     STRING 
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE ls_cnt    LIKE type_t.num5
   DEFINE r_success LIKE type_t.num5
   DEFINE ls_sql    STRING 

   LET r_success = FALSE
   LET l_bgaa010 = NULL 
   LET l_bgaa011 = NULL 
   #獲取當前預算編號對應的最上層預算組織和版本
   SELECT bgaa011,bgaa010 INTO l_bgaa011,l_bgaa010 FROM bgaa_t 
    WHERE bgaaent = g_enterprise AND bgaa001 = p_bgax001
    
   #审核：本层对本层审核，不跨层；下发：本层对本层进行下发，不跨层
   IF p_str = 'audit' OR p_str = 'issued' THEN 
      #檢查是否為本層
      IF p_bgai004 = p_bgax003 THEN 
         LET ls_cnt = 0  
         #審核操作
         IF p_str = 'audit' THEN 
            SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise
               AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003
               AND (bgaxstus ='5' OR bgaxstus = '4' OR bgaxstus = '3' )
            IF ls_cnt = 0 THEN
               LET r_success = TRUE 
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abg-00058'
               LET g_errparam.extend = p_bgax003
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF 
         END IF 
         #下發操作
         IF p_str = 'issued' THEN 
            SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise
               AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003
               AND (bgaxstus ='5' OR bgaxstus = '4' OR bgaxstus = '2' OR bgaxstus = '1' )
            IF ls_cnt = 0 THEN
               SELECT COUNT(*) INTO ls_cnt FROM ooed_t WHERE ooedent = g_enterprise
                  AND ooed001 = '4' AND ooed002 = l_bgaa011 AND ooed003 = l_bgaa010
                  AND ooed005 = p_bgax003
               IF ls_cnt > 0 THEN 
                  LET r_success = TRUE 
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abg-00065'
                  LET g_errparam.extend = p_bgax003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               END IF 
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abg-00059'
               LET g_errparam.extend = p_bgax003
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF 
         END IF 
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00064'
         LET g_errparam.extend = p_bgax003
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF 
   END IF 
   
   #取消审核unaudit，取消下发unissued
   IF p_str = 'unaudit' OR p_str = 'unissued' THEN 
      #檢查是否為本層
      IF p_bgai004 = p_bgax003 THEN 
         LET ls_cnt = 0  
         #取消審核操作
         IF p_str = 'unaudit' THEN 
            SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise
               AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003
               AND (bgaxstus ='5' OR bgaxstus = '4' )
            IF ls_cnt = 0 THEN
               LET r_success = TRUE 
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abg-00060'
               LET g_errparam.extend = p_bgax003
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF 
         END IF 
         #取消下發操作
         IF p_str = 'unissued' THEN 
            SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise
               AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgax003 = p_bgax003
               AND bgaxstus ='5'
            IF ls_cnt = 0 THEN
               LET ls_sql = "SELECT count(*) FROM bgax_t WHERE bgaxent = '",g_enterprise,"' ",
                  " AND bgax001 = '",p_bgax001,"' AND bgax002 = '",p_bgax002,"' AND (bgaxstus = '3' OR bgaxstus = '4') ",
                  " AND bgax003 IN (SELECT DISTINCT a.ooed004 FROM (SELECT ooed004,ooed005 FROM ooed_t ",
                  "  WHERE ooed002 = '",l_bgaa011,"' AND ooed003 = '",l_bgaa010,"' ",
                  "    AND ooedent = '",g_enterprise,"'  AND ooed001 = '4' AND ooed004 != ooed005) a ",  
                  "  START WITH a.ooed005 = '",p_bgax003  ,"' ",
                  "  CONNECT BY PRIOR a.ooed004 = a.ooed005 ) "
               PREPARE abgt010_action_pre FROM ls_sql
               EXECUTE abgt010_action_pre INTO ls_cnt
               IF ls_cnt = 0 THEN 
                  SELECT COUNT(*) INTO ls_cnt FROM ooed_t WHERE ooedent = g_enterprise
                     AND ooed001 = '4' AND ooed002 = l_bgaa011 AND ooed003 = l_bgaa010
                     AND ooed005 = p_bgax003
                  IF ls_cnt > 0 THEN 
                     LET r_success = TRUE 
                  ELSE
                     INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abg-00065'
                  LET g_errparam.extend = p_bgax003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  END IF  
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abg-00061'
                  LET g_errparam.extend = p_bgax003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
 
               END IF 
            ELSE
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abg-00061'
                  LET g_errparam.extend = p_bgax003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

            END IF 
         END IF
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00064'
         LET g_errparam.extend = p_bgax003
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF 
   END IF 
   #终审：只能是有最上层权限的人可以进行这个操作，且必须所有节点都录入完成
   IF p_str = 'final' THEN
      IF l_bgaa011 = p_bgai004 THEN 
         #檢查各節點（不包括最後一層節點）是否已經均下發完成
         LET ls_cnt = 0 
         SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise 
            AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgaxstus != '4' AND bgax003 IN 
            (SELECT ooed004 FROM ooed_t WHERE ooedent = g_enterprise AND ooed001 = '4'
                AND ooed002 = l_bgaa011 AND ooed003 = l_bgaa010 AND ooed004 IN 
                (SELECT ooed005 FROM ooed_t WHERE ooedent = g_enterprise AND ooed001 = '4'
                    AND ooed002 = l_bgaa011 AND ooed003 = l_bgaa010 )   )
         IF ls_cnt = 0 THEN 
            #檢查最後一層節點是否已經都審核完成
            SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise 
               AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgaxstus != '3' AND bgax003 IN 
               (SELECT ooed004 FROM ooed_t WHERE ooedent = g_enterprise AND ooed001 = '4'
                   AND ooed002 = l_bgaa011 AND ooed003 = l_bgaa010 AND ooed004 NOT IN 
                   (SELECT ooed005 FROM ooed_t WHERE ooedent = g_enterprise AND ooed001 = '4'
                       AND ooed002 = l_bgaa011 AND ooed003 = l_bgaa010 )   )    
            IF ls_cnt = 0 THEN 
               #檢查最上層組織是否已經下發
               SELECT COUNT(*) INTO ls_cnt FROM bgax_t WHERE bgaxent = g_enterprise
                  AND bgax001 = p_bgax001 AND bgax002 = p_bgax002 AND bgaxstus != '4' 
                  AND bgax003 = l_bgaa011
               LET r_success = TRUE 
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abg-00063'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF 
         ELSE
            INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abg-00063'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

         END IF
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abg-00062'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

      END IF
   END IF 
   RETURN r_success 
END FUNCTION

PRIVATE FUNCTION abgt010_common_ref(p_modid,p_ownid,p_owndp,p_crtid,p_crtdp)
   DEFINE p_modid LIKE bgax_t.bgaxmodid
   DEFINE p_ownid LIKE bgax_t.bgaxownid
   DEFINE p_owndp LIKE bgax_t.bgaxowndp
   DEFINE p_crtid LIKE bgax_t.bgaxcrtid
   DEFINE p_crtdp LIKE bgax_t.bgaxcrtdp
   DEFINE r_modid LIKE type_t.chr500
   DEFINE r_ownid LIKE type_t.chr500
   DEFINE r_owndp LIKE type_t.chr500
   DEFINE r_crtid LIKE type_t.chr500
   DEFINE r_crtdp LIKE type_t.chr500

   #ownid
   CALL abgt010_oofa003_ref(p_ownid) RETURNING r_ownid
   #owndp
   CALL abgt010_ooefl001_ref(p_owndp) RETURNING r_owndp
   #crtid
   CALL abgt010_oofa003_ref(p_crtid) RETURNING r_crtid
   #crtdp
   CALL abgt010_ooefl001_ref(p_crtdp) RETURNING r_crtdp
   #modid
   CALL abgt010_oofa003_ref(p_modid) RETURNING r_modid
   
   #返回值
   RETURN r_modid,r_ownid,r_owndp,r_crtid,r_crtdp
END FUNCTION

PRIVATE FUNCTION abgt010_acc_chk(p_oocq001,p_oocq002)
   DEFINE p_oocq001     LIKE oocq_t.oocq001
   DEFINE p_oocq002     LIKE oocq_t.oocq002
   DEFINE l_oocqstus     LIKE oocq_t.oocqstus
   
   LET g_errno = ''
   SELECT oocqstus INTO l_oocqstus FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = p_oocq001
      AND oocq002 = p_oocq002
   CASE
     WHEN SQLCA.SQLCODE = 100 
        IF p_oocq001 = '287' THEN      
           #LET g_errno = 'apm-00092' #160318-00005#4 mark
           LET g_errno = 'sub-01303'  #160318-00005#4 add
        ELSE
           LET g_errno = 'axm-00003'  
        END IF 
     
     WHEN l_oocqstus = 'N'
        LET g_errno = 'sub-01302'     #160318-00005#4 add
        #160318-00005#4 --s mark
        #IF p_oocq001 = '287' THEN    
        #   LET g_errno = 'apm-00093'  
        #ELSE
        #   LET g_errno = 'axm-00004'
        #END IF
        #160318-00005#4 --e mark        
   END CASE
END FUNCTION

PRIVATE FUNCTION abgt010_businessman_chk(p_pmaa001)
   DEFINE p_pmaa002     LIKE pmaa_t.pmaa002
   DEFINE p_pmaa001     LIKE pmaa_t.pmaa001
   DEFINE l_pmaastus    LIKE pmaa_t.pmaastus

   LET g_errno = ''
   SELECT pmaastus INTO l_pmaastus FROM pmaa_t
    WHERE pmaaent = g_enterprise
      AND pmaa001 = p_pmaa001

   CASE
      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'apm-00028'
      #WHEN l_pmaastus = 'N'      LET g_errno = 'apm-00029' #160318-00005#4 mark
      WHEN l_pmaastus = 'N'      LET g_errno = 'sub-01302'  #160318-00005#4 add
   END CASE
END FUNCTION

PRIVATE FUNCTION abgt010_bgax005_ref(p_bgax001,p_bgax005)
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE r_bgael003 LIKE bgael_t.bgael003

   LET r_bgael003 = ''

   SELECT bgael003 INTO r_bgael003 FROM bgael_t,bgaa_t
    WHERE bgaelent = g_enterprise AND bgael006 = bgaa008 AND bgael002 = g_dlang 
      AND bgaa001 = p_bgax001 AND bgaelent = bgaaent AND bgael001 = p_bgax005
    
   RETURN r_bgael003
END FUNCTION

PRIVATE FUNCTION abgt010_bgax002_bef(p_bgax001)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE r_success LIKE type_t.num5
   DEFINE r_bgax002 LIKE bgax_t.bgax002

   LET r_success = TRUE 
   LET r_bgax002 = '' 
   
   IF cl_null(p_bgax001) THEN
      LET r_success = FALSE
   ELSE 
      #SA暫時不需要，故mark,後期可能需要
      #对版本给默认值
      #SELECT MAX(bgax002)+1 INTO r_bgax002 FROM bgax_t 
      # WHERE bgaxent = g_enterprise AND bgax001 = p_bgax001
      #IF cl_null(r_bgax002) THEN
      #   LET r_bgax002 = 1
      #END IF 
   END IF 

   RETURN r_success,r_bgax002
END FUNCTION

PRIVATE FUNCTION abgt010_bgax001_ref(p_bgax001)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE l_bgaa010 LIKE bgaa_t.bgaa010
   DEFINE l_bgaa011 LIKE bgaa_t.bgaa011
   DEFINE r_bgaal003 LIKE bgaal_t.bgaal003
   DEFINE r_bgaa002 LIKE bgaa_t.bgaa002
   DEFINE r_bgaa003 LIKE bgaa_t.bgaa003
   DEFINE r_bgaa002_desc LIKE bgacl_t.bgacl003
   DEFINE r_bgaa003_desc LIKE ooail_t.ooail003

   LET r_bgaal003 = ''
   LET r_bgaa002 = ''
   LET r_bgaa003 = ''
   LET r_bgaa002_desc = ''
   LET r_bgaa003_desc = ''

   SELECT bgaal003,bgaa002,bgacl003,bgaa003,ooail003,bgaa010,bgaa011
     INTO r_bgaal003,r_bgaa002,r_bgaa002_desc,r_bgaa003,r_bgaa003_desc,l_bgaa010,l_bgaa011
     FROM bgaa_t LEFT OUTER JOIN bgaal_t ON bgaaent = bgaalent AND bgaa001 = bgaal001 AND bgaal002 = g_dlang
                 LEFT OUTER JOIN bgacl_t ON bgaaent = bgaclent AND bgaa002 = bgacl001 AND bgacl002 = g_dlang
                 LEFT OUTER JOIN ooail_t ON bgaaent = ooailent AND bgaa003 = ooail001 AND ooail002 = g_dlang
    WHERE bgaaent = g_enterprise AND bgaa001 = p_bgax001
   CALL abgt010_browser_tree_fill(l_bgaa010,l_bgaa011)
   LET g_bgax003 = l_bgaa011
   RETURN r_bgaal003,r_bgaa002,r_bgaa002_desc,r_bgaa003,r_bgaa003_desc
END FUNCTION

PRIVATE FUNCTION abgt010_ooefl001_ref(p_ooefl001)
   DEFINE p_ooefl001 LIKE ooefl_t.ooefl001
   DEFINE r_ooefl003 LIKE ooefl_t.ooefl003

   LET r_ooefl003  = ''
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_ooefl001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_ooefl003 = g_rtn_fields[1]
   RETURN r_ooefl003
END FUNCTION

PRIVATE FUNCTION abgt010_oofa003_ref(p_oofa003)
   DEFINE p_oofa003 LIKE oofa_t.oofa003
   DEFINE r_oofa011 LIKE oofa_t.oofa011

   LET r_oofa011  = ''
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oofa003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET r_oofa011 = g_rtn_fields[1]
   RETURN r_oofa011
END FUNCTION

PRIVATE FUNCTION abgt010_bgax023_chk(p_glaq013)
   DEFINE p_glaq013    LIKE glaq_t.glaq013 
   DEFINE  l_ooagstus  LIKE ooag_t.ooagstus


   LET g_errno=''
   SELECT ooagstus INTO l_ooagstus FROM ooag_t
    WHERE ooagent = g_enterprise
      AND ooag001 = p_glaq013

   CASE
      WHEN SQLCA.SQLCODE=100   LET g_errno = 'aoo-00074'
      #WHEN l_ooagstus ='N'     LET g_errno = 'aoo-00071' #160318-00005#4 mark
      WHEN l_ooagstus ='N'     LET g_errno = 'sub-01302'  #160318-00005#4 add
   END CASE
END FUNCTION

PRIVATE FUNCTION abgt010_bgax022_chk(p_glaq024)
   DEFINE p_glaq024   LIKE glaq_t.glaq024
  DEFINE l_rtaxstus  LIKE rtax_t.rtaxstus

  LET g_errno = ''
  SELECT rtaxstus INTO l_rtaxstus FROM rtax_t
   WHERE rtaxent = g_enterprise
     AND rtax001 = p_glaq024

  CASE
     WHEN SQLCA.SQLCODE = 100   LET g_errno = 'aoo-00137'
     #WHEN l_rtaxstus = 'N'      LET g_errno = 'aoo-00138' #160318-00005#4 mark
     WHEN l_rtaxstus = 'N'      LET g_errno = 'sub-01302'  #160318-00005#4 add
  END CASE
END FUNCTION

PRIVATE FUNCTION abgt010_bgax004_def(p_bgax001,p_bgax002,p_bgax003)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE r_bgax004 LIKE bgax_t.bgax004

   LET r_bgax004 = 0

   SELECT MAX(bgax004)+1 INTO r_bgax004 FROM bgax_t
    WHERE bgaxent = g_enterprise AND bgax001 = p_bgax001
      AND bgax002 = p_bgax002 AND bgax003 = p_bgax003
   IF cl_null(r_bgax004) OR r_bgax004 = 0 THEN
      LET r_bgax004 = 1
   END IF 

   RETURN r_bgax004
END FUNCTION

PRIVATE FUNCTION abgt010_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1
END FUNCTION

PRIVATE FUNCTION abgt010_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1 
END FUNCTION

PRIVATE FUNCTION abgt010_common_def()
   DEFINE r_ownid LIKE bgax_t.bgaxownid
   DEFINE r_owndp LIKE bgax_t.bgaxowndp
   DEFINE r_crtid LIKE bgax_t.bgaxcrtid
   DEFINE r_crtdp LIKE bgax_t.bgaxcrtdp
   DEFINE r_crtdt LIKE bgax_t.bgaxcrtdt
   DEFINE r_modid LIKE bgax_t.bgaxmodid
   DEFINE r_moddt LIKE bgax_t.bgaxmoddt

   LET r_ownid = g_user
   LET r_owndp = g_dept
   LET r_crtid = g_user
   LET r_crtdp = g_dept
   LET r_crtdt = cl_get_current()
   LET r_modid = ''
   LET r_moddt = ''

   RETURN r_ownid,r_owndp,r_crtid,r_crtdp,r_crtdt,r_modid,r_moddt
END FUNCTION
 #對第一單身key值欄位進行重新性檢查
PRIVATE FUNCTION abgt010_first_body_key_chk(p_bgax001,p_bgax002,p_bgax003,p_bgax005,p_bgax005_t,ps_cmd)
   DEFINE p_bgax001 LIKE bgax_t.bgax001
   DEFINE p_bgax002 LIKE bgax_t.bgax002
   DEFINE p_bgax003 LIKE bgax_t.bgax003
   DEFINE p_bgax005 LIKE bgax_t.bgax005
   DEFINE p_bgax005_t LIKE bgax_t.bgax005
   DEFINE ps_cmd     LIKE type_t.chr5
   DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE

   IF NOT cl_null(p_bgax001) AND NOT cl_null(p_bgax002) AND NOT cl_null(p_bgax003) AND NOT cl_null(p_bgax005) THEN 
      IF ps_cmd = 'a' OR ( ps_cmd = 'u' AND (p_bgax005 != p_bgax005_t )) THEN 
         IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bgax_t WHERE "||"bgaxent = '" ||g_enterprise||
                              "' AND bgax001 = '"||p_bgax001 ||"' AND bgax002 = '"||p_bgax002 ||
                              "' AND bgax003 = '"||p_bgax003 ||"' AND bgax005 = '"||p_bgax005 ||"'",'std-00004',0) THEN 
            LET r_success = FALSE
         END IF
      END IF
   END IF 
   
   RETURN r_success
END FUNCTION

#end add-point
 
{</section>}
 
