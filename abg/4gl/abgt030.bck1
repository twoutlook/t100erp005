#該程式未解開Section, 採用最新樣板產出!
{<section id="abgt030.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2016-12-14 15:17:05), PR版次:0002(2016-12-14 18:00:09)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000014
#+ Filename...: abgt030
#+ Description: 預算憑證維護
#+ Creator....: 05016(2016-11-16 11:27:53)
#+ Modifier...: 05016 -SD/PR- 05016
 
{</section>}
 
{<section id="abgt030.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#Memos
#161129-00019#2    2016/11/30   By Hans    單身預帶金額
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_bgba_m        RECORD
       bgba001 LIKE bgba_t.bgba001, 
   bgba001_desc LIKE type_t.chr80, 
   bgba002 LIKE bgba_t.bgba002, 
   bgbadocno LIKE bgba_t.bgbadocno, 
   bgba003 LIKE bgba_t.bgba003, 
   bgba004 LIKE bgba_t.bgba004, 
   bgba007 LIKE bgba_t.bgba007, 
   bgba010 LIKE bgba_t.bgba010, 
   bgba010_desc LIKE type_t.chr80, 
   bgba005 LIKE bgba_t.bgba005, 
   bgba005_desc LIKE type_t.chr80, 
   bgba006 LIKE bgba_t.bgba006, 
   bgba009 LIKE bgba_t.bgba009, 
   bgbastus LIKE bgba_t.bgbastus, 
   bgbaownid LIKE bgba_t.bgbaownid, 
   bgbaownid_desc LIKE type_t.chr80, 
   bgbaowndp LIKE bgba_t.bgbaowndp, 
   bgbaowndp_desc LIKE type_t.chr80, 
   bgbacrtid LIKE bgba_t.bgbacrtid, 
   bgbacrtid_desc LIKE type_t.chr80, 
   bgbacrtdp LIKE bgba_t.bgbacrtdp, 
   bgbacrtdp_desc LIKE type_t.chr80, 
   bgbacrtdt LIKE bgba_t.bgbacrtdt, 
   bgbamodid LIKE bgba_t.bgbamodid, 
   bgbamodid_desc LIKE type_t.chr80, 
   bgbamoddt LIKE bgba_t.bgbamoddt, 
   bgbacnfid LIKE bgba_t.bgbacnfid, 
   bgbacnfid_desc LIKE type_t.chr80, 
   bgbacnfdt LIKE bgba_t.bgbacnfdt, 
   bgbb011 LIKE bgbb_t.bgbb011, 
   bgbb011_desc LIKE type_t.chr80, 
   bgbb012 LIKE bgbb_t.bgbb012, 
   bgbb012_desc LIKE type_t.chr80, 
   bgbb013 LIKE bgbb_t.bgbb013, 
   bgbb013_desc LIKE type_t.chr80, 
   bgbb014 LIKE bgbb_t.bgbb014, 
   bgbb014_desc LIKE type_t.chr80, 
   bgbb015 LIKE bgbb_t.bgbb015, 
   bgbb015_desc LIKE type_t.chr80, 
   bgbb016 LIKE bgbb_t.bgbb016, 
   bgbb016_desc LIKE type_t.chr80, 
   bgbb017 LIKE bgbb_t.bgbb017, 
   bgbb017_desc LIKE type_t.chr80, 
   bgbb024 LIKE bgbb_t.bgbb024, 
   bgbb024_desc LIKE type_t.chr80, 
   bgbb021 LIKE bgbb_t.bgbb021, 
   bgbb022 LIKE bgbb_t.bgbb022, 
   bgbb022_desc LIKE type_t.chr80, 
   bgbb023 LIKE bgbb_t.bgbb023, 
   bgbb023_desc LIKE type_t.chr80, 
   bgbb018 LIKE bgbb_t.bgbb018, 
   bgbb018_desc LIKE type_t.chr80, 
   bgbb019 LIKE bgbb_t.bgbb019, 
   bgbb019_desc LIKE type_t.chr80, 
   bgbb020 LIKE bgbb_t.bgbb020, 
   bgbb020_desc LIKE type_t.chr80, 
   bgbb025 LIKE bgbb_t.bgbb025, 
   bgbb026 LIKE bgbb_t.bgbb026, 
   bgbb027 LIKE bgbb_t.bgbb027, 
   bgbb028 LIKE bgbb_t.bgbb028, 
   bgbb029 LIKE bgbb_t.bgbb029, 
   bgbb030 LIKE bgbb_t.bgbb030, 
   bgbb031 LIKE bgbb_t.bgbb031, 
   bgbb032 LIKE bgbb_t.bgbb032, 
   bgbb033 LIKE bgbb_t.bgbb033, 
   bgbb034 LIKE bgbb_t.bgbb034, 
   bgbb008_1 LIKE type_t.chr10, 
   bgbb009_1 LIKE type_t.num26_10, 
   bgbb010_1 LIKE type_t.num20_6, 
   bgbb005 LIKE bgbb_t.bgbb005, 
   bgbb006 LIKE bgbb_t.bgbb006, 
   bgbb007 LIKE bgbb_t.bgbb007
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bgbb_d        RECORD
       bgbbseq LIKE bgbb_t.bgbbseq, 
   bgbb001 LIKE bgbb_t.bgbb001, 
   bgbb002 LIKE bgbb_t.bgbb002, 
   lc_subject LIKE type_t.chr500, 
   bgbb008 LIKE bgbb_t.bgbb008, 
   bgbb009 LIKE bgbb_t.bgbb009, 
   edit1 LIKE type_t.chr500, 
   bgbb010 LIKE bgbb_t.bgbb010, 
   bgbb003 LIKE bgbb_t.bgbb003, 
   bgbb004 LIKE bgbb_t.bgbb004
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_bgbadocno LIKE bgba_t.bgbadocno,
      b_bgba001 LIKE bgba_t.bgba001,
      b_bgba002 LIKE bgba_t.bgba002,
      b_bgba003 LIKE bgba_t.bgba003,
      b_bgba004 LIKE bgba_t.bgba004,
      b_bgba005 LIKE bgba_t.bgba005
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_bgaa            RECORD
                            bgaa002   LIKE bgaa_t.bgaa002,
                            bgaa003   LIKE bgaa_t.bgaa003,
                            bgaa008   LIKE bgaa_t.bgaa008,   #預算細項參照表號
                            bgaa009   LIKE bgaa_t.bgaa009    #現金變動碼參照表
                         END RECORD
DEFINE g_bgbb009    LIKE bgbb_t.bgbb009  #匯率
DEFINE g_glaald     LIKE glaa_t.glaald
DEFINE g_glaa024    LIKE glaa_t.glaa024
#end add-point
       
#模組變數(Module Variables)
DEFINE g_bgba_m          type_g_bgba_m
DEFINE g_bgba_m_t        type_g_bgba_m
DEFINE g_bgba_m_o        type_g_bgba_m
DEFINE g_bgba_m_mask_o   type_g_bgba_m #轉換遮罩前資料
DEFINE g_bgba_m_mask_n   type_g_bgba_m #轉換遮罩後資料
 
   DEFINE g_bgbadocno_t LIKE bgba_t.bgbadocno
 
 
DEFINE g_bgbb_d          DYNAMIC ARRAY OF type_g_bgbb_d
DEFINE g_bgbb_d_t        type_g_bgbb_d
DEFINE g_bgbb_d_o        type_g_bgbb_d
DEFINE g_bgbb_d_mask_o   DYNAMIC ARRAY OF type_g_bgbb_d #轉換遮罩前資料
DEFINE g_bgbb_d_mask_n   DYNAMIC ARRAY OF type_g_bgbb_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="abgt030.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abg","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT bgba001,'',bgba002,bgbadocno,bgba003,bgba004,bgba007,bgba010,'',bgba005, 
       '',bgba006,bgba009,bgbastus,bgbaownid,'',bgbaowndp,'',bgbacrtid,'',bgbacrtdp,'',bgbacrtdt,bgbamodid, 
       '',bgbamoddt,bgbacnfid,'',bgbacnfdt,'','','','','','','','','','','','','','','','','','','', 
       '','','','','','','','','','','','','','','','','','','','','','','',''", 
                      " FROM bgba_t",
                      " WHERE bgbaent= ? AND bgbadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abgt030_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.bgba001,t0.bgba002,t0.bgbadocno,t0.bgba003,t0.bgba004,t0.bgba007, 
       t0.bgba010,t0.bgba005,t0.bgba006,t0.bgba009,t0.bgbastus,t0.bgbaownid,t0.bgbaowndp,t0.bgbacrtid, 
       t0.bgbacrtdp,t0.bgbacrtdt,t0.bgbamodid,t0.bgbamoddt,t0.bgbacnfid,t0.bgbacnfdt,t1.ooag011 ,t2.ooefl003 , 
       t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooag011",
               " FROM bgba_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.bgbaownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.bgbaowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.bgbacrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.bgbacrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.bgbamodid  ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.bgbacnfid  ",
 
               " WHERE t0.bgbaent = " ||g_enterprise|| " AND t0.bgbadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE abgt030_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abgt030 WITH FORM cl_ap_formpath("abg",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abgt030_init()   
 
      #進入選單 Menu (="N")
      CALL abgt030_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abgt030
      
   END IF 
   
   CLOSE abgt030_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="abgt030.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abgt030_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('bgbastus','13','N,Y,S,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('bgba007','8965')
   CALL cl_set_combo_scc('bgbb021','6013')
   #end add-point
   
   #初始化搜尋條件
   CALL abgt030_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="abgt030.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION abgt030_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL abgt030_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_bgba_m.* TO NULL
         CALL g_bgbb_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL abgt030_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL abgt030_fetch('') # reload data
               LET l_ac = 1
               CALL abgt030_ui_detailshow() #Setting the current row 
         
               CALL abgt030_idx_chk()
               #NEXT FIELD bgbbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_bgbb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL abgt030_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               CALL abgt030_b_detail()
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL abgt030_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL abgt030_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abgt030_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abgt030_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL abgt030_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
          
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL abgt030_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL abgt030_set_act_visible()   
            CALL abgt030_set_act_no_visible()
            IF NOT (g_bgba_m.bgbadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " bgbaent = " ||g_enterprise|| " AND",
                                  " bgbadocno = '", g_bgba_m.bgbadocno, "' "
 
               #填到對應位置
               CALL abgt030_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "bgba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bgbb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL abgt030_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "bgba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bgbb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL abgt030_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL abgt030_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL abgt030_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL abgt030_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abgt030_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL abgt030_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abgt030_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL abgt030_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abgt030_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL abgt030_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abgt030_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL abgt030_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abgt030_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_bgbb_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD bgbbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abgt030_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abgt030_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION undeduct
            LET g_action_choice="undeduct"
            IF cl_auth_chk_act("undeduct") THEN
               
               #add-point:ON ACTION undeduct name="menu.undeduct"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abgt030_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abgt030_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL abgt030_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abgt030_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL abgt030_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abgt030_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abgt030_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="abgt030.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abgt030_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_ooef001_str     STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   #檢查預算組織是否在abgi090中可操作的組織中
   CALL s_abg2_get_budget_site('','',g_user,'07') RETURNING l_ooef001_str
   CALL s_fin_get_wc_str(l_ooef001_str) RETURNING l_ooef001_str
   LET l_wc = l_wc," AND bgba005 IN ",l_ooef001_str
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT bgbadocno ",
                      " FROM bgba_t ",
                      " ",
                      " LEFT JOIN bgbb_t ON bgbbent = bgbaent AND bgbadocno = bgbbdocno ", "  ",
                      #add-point:browser_fill段sql(bgbb_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE bgbaent = " ||g_enterprise|| " AND bgbbent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("bgba_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT bgbadocno ",
                      " FROM bgba_t ", 
                      "  ",
                      "  ",
                      " WHERE bgbaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("bgba_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_bgba_m.* TO NULL
      CALL g_bgbb_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.bgbadocno,t0.bgba001,t0.bgba002,t0.bgba003,t0.bgba004,t0.bgba005 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.bgbastus,t0.bgbadocno,t0.bgba001,t0.bgba002,t0.bgba003,t0.bgba004, 
          t0.bgba005 ",
                  " FROM bgba_t t0",
                  "  ",
                  "  LEFT JOIN bgbb_t ON bgbbent = bgbaent AND bgbadocno = bgbbdocno ", "  ", 
                  #add-point:browser_fill段sql(bgbb_t1) name="browser_fill.join.bgbb_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.bgbaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("bgba_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.bgbastus,t0.bgbadocno,t0.bgba001,t0.bgba002,t0.bgba003,t0.bgba004, 
          t0.bgba005 ",
                  " FROM bgba_t t0",
                  "  ",
                  
                  " WHERE t0.bgbaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("bgba_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY bgbadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"bgba_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_bgbadocno,g_browser[g_cnt].b_bgba001, 
          g_browser[g_cnt].b_bgba002,g_browser[g_cnt].b_bgba003,g_browser[g_cnt].b_bgba004,g_browser[g_cnt].b_bgba005 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL abgt030_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_bgbadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION abgt030_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_bgba_m.bgbadocno = g_browser[g_current_idx].b_bgbadocno   
 
   EXECUTE abgt030_master_referesh USING g_bgba_m.bgbadocno INTO g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno, 
       g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba006, 
       g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt, 
       g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp_desc, 
       g_bgba_m.bgbamodid_desc,g_bgba_m.bgbacnfid_desc
   
   CALL abgt030_bgba_t_mask()
   CALL abgt030_show()
      
END FUNCTION
 
{</section>}
 
{<section id="abgt030.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION abgt030_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abgt030_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bgbadocno = g_bgba_m.bgbadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION abgt030_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bgba_m.* TO NULL
   CALL g_bgbb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   INITIALIZE g_wc_frozen TO NULL
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bgba001,bgba002,bgbadocno,bgba003,bgba004,bgba007,bgba010,bgba010_desc, 
          bgba005,bgba006,bgba009,bgbastus,bgbaownid,bgbaowndp,bgbacrtid,bgbacrtdp,bgbacrtdt,bgbamodid, 
          bgbamoddt,bgbacnfid,bgbacnfdt,bgbb025,bgbb026,bgbb027,bgbb028,bgbb029,bgbb030,bgbb031,bgbb032, 
          bgbb033,bgbb034,bgbb008_1,bgbb009_1,bgbb010_1,bgbb005,bgbb006,bgbb007
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<bgbacrtdt>>----
         AFTER FIELD bgbacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<bgbamoddt>>----
         AFTER FIELD bgbamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bgbacnfdt>>----
         AFTER FIELD bgbacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bgbapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba001
            #add-point:BEFORE FIELD bgba001 name="construct.b.bgba001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba001
            
            #add-point:AFTER FIELD bgba001 name="construct.a.bgba001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba001
            #add-point:ON ACTION controlp INFIELD bgba001 name="construct.c.bgba001"
            #C開窗-預算編號
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "bgaastus = 'Y' AND bgaa006 = '1' "   #使用預測才可以開
            CALL q_bgaa001()
            DISPLAY g_qryparam.return1 TO bgba001
            NEXT FIELD bgba001
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba002
            #add-point:BEFORE FIELD bgba002 name="construct.b.bgba002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba002
            
            #add-point:AFTER FIELD bgba002 name="construct.a.bgba002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba002
            #add-point:ON ACTION controlp INFIELD bgba002 name="construct.c.bgba002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbadocno
            #add-point:BEFORE FIELD bgbadocno name="construct.b.bgbadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbadocno
            
            #add-point:AFTER FIELD bgbadocno name="construct.a.bgbadocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbadocno
            #add-point:ON ACTION controlp INFIELD bgbadocno name="construct.c.bgbadocno"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bgbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbadocno  #顯示到畫面上
            NEXT FIELD bgbadocno
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba003
            #add-point:BEFORE FIELD bgba003 name="construct.b.bgba003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba003
            
            #add-point:AFTER FIELD bgba003 name="construct.a.bgba003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba003
            #add-point:ON ACTION controlp INFIELD bgba003 name="construct.c.bgba003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba004
            #add-point:BEFORE FIELD bgba004 name="construct.b.bgba004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba004
            
            #add-point:AFTER FIELD bgba004 name="construct.a.bgba004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba004
            #add-point:ON ACTION controlp INFIELD bgba004 name="construct.c.bgba004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba007
            #add-point:BEFORE FIELD bgba007 name="construct.b.bgba007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba007
            
            #add-point:AFTER FIELD bgba007 name="construct.a.bgba007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba007
            #add-point:ON ACTION controlp INFIELD bgba007 name="construct.c.bgba007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba010
            #add-point:BEFORE FIELD bgba010 name="construct.b.bgba010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba010
            
            #add-point:AFTER FIELD bgba010 name="construct.a.bgba010"
          
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba010
            #add-point:ON ACTION controlp INFIELD bgba010 name="construct.c.bgba010"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " bgaistus='Y' AND bgai003 = '",g_user,"' AND (bgai005 ='07' OR bgai005 = '00') "
            CALL q_bgai002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgba010  #顯示到畫面上
            NEXT FIELD bgba010                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba010_desc
            #add-point:BEFORE FIELD bgba010_desc name="construct.b.bgba010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba010_desc
            
            #add-point:AFTER FIELD bgba010_desc name="construct.a.bgba010_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba010_desc
            #add-point:ON ACTION controlp INFIELD bgba010_desc name="construct.c.bgba010_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba005
            #add-point:BEFORE FIELD bgba005 name="construct.b.bgba005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba005
            
            #add-point:AFTER FIELD bgba005 name="construct.a.bgba005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba005
            #add-point:ON ACTION controlp INFIELD bgba005 name="construct.c.bgba005"
            #開窗c段-預算組織
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooef205 = 'Y'"
            CALL q_ooef001()
            DISPLAY g_qryparam.return1 TO bgba005
            NEXT FIELD bgba005
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba006
            #add-point:BEFORE FIELD bgba006 name="construct.b.bgba006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba006
            
            #add-point:AFTER FIELD bgba006 name="construct.a.bgba006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba006
            #add-point:ON ACTION controlp INFIELD bgba006 name="construct.c.bgba006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba009
            #add-point:BEFORE FIELD bgba009 name="construct.b.bgba009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba009
            
            #add-point:AFTER FIELD bgba009 name="construct.a.bgba009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgba009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba009
            #add-point:ON ACTION controlp INFIELD bgba009 name="construct.c.bgba009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbastus
            #add-point:BEFORE FIELD bgbastus name="construct.b.bgbastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbastus
            
            #add-point:AFTER FIELD bgbastus name="construct.a.bgbastus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbastus
            #add-point:ON ACTION controlp INFIELD bgbastus name="construct.c.bgbastus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.bgbaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbaownid
            #add-point:ON ACTION controlp INFIELD bgbaownid name="construct.c.bgbaownid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbaownid  #顯示到畫面上
            NEXT FIELD bgbaownid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbaownid
            #add-point:BEFORE FIELD bgbaownid name="construct.b.bgbaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbaownid
            
            #add-point:AFTER FIELD bgbaownid name="construct.a.bgbaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbaowndp
            #add-point:ON ACTION controlp INFIELD bgbaowndp name="construct.c.bgbaowndp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbaowndp  #顯示到畫面上
            NEXT FIELD bgbaowndp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbaowndp
            #add-point:BEFORE FIELD bgbaowndp name="construct.b.bgbaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbaowndp
            
            #add-point:AFTER FIELD bgbaowndp name="construct.a.bgbaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbacrtid
            #add-point:ON ACTION controlp INFIELD bgbacrtid name="construct.c.bgbacrtid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbacrtid  #顯示到畫面上
            NEXT FIELD bgbacrtid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbacrtid
            #add-point:BEFORE FIELD bgbacrtid name="construct.b.bgbacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbacrtid
            
            #add-point:AFTER FIELD bgbacrtid name="construct.a.bgbacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbacrtdp
            #add-point:ON ACTION controlp INFIELD bgbacrtdp name="construct.c.bgbacrtdp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbacrtdp  #顯示到畫面上
            NEXT FIELD bgbacrtdp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbacrtdp
            #add-point:BEFORE FIELD bgbacrtdp name="construct.b.bgbacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbacrtdp
            
            #add-point:AFTER FIELD bgbacrtdp name="construct.a.bgbacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbacrtdt
            #add-point:BEFORE FIELD bgbacrtdt name="construct.b.bgbacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.bgbamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbamodid
            #add-point:ON ACTION controlp INFIELD bgbamodid name="construct.c.bgbamodid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbamodid  #顯示到畫面上
            NEXT FIELD bgbamodid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbamodid
            #add-point:BEFORE FIELD bgbamodid name="construct.b.bgbamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbamodid
            
            #add-point:AFTER FIELD bgbamodid name="construct.a.bgbamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbamoddt
            #add-point:BEFORE FIELD bgbamoddt name="construct.b.bgbamoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.bgbacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbacnfid
            #add-point:ON ACTION controlp INFIELD bgbacnfid name="construct.c.bgbacnfid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbacnfid  #顯示到畫面上
            NEXT FIELD bgbacnfid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbacnfid
            #add-point:BEFORE FIELD bgbacnfid name="construct.b.bgbacnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbacnfid
            
            #add-point:AFTER FIELD bgbacnfid name="construct.a.bgbacnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbacnfdt
            #add-point:BEFORE FIELD bgbacnfdt name="construct.b.bgbacnfdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb025
            #add-point:BEFORE FIELD bgbb025 name="construct.b.bgbb025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb025
            
            #add-point:AFTER FIELD bgbb025 name="construct.a.bgbb025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb025
            #add-point:ON ACTION controlp INFIELD bgbb025 name="construct.c.bgbb025"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb026
            #add-point:BEFORE FIELD bgbb026 name="construct.b.bgbb026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb026
            
            #add-point:AFTER FIELD bgbb026 name="construct.a.bgbb026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb026
            #add-point:ON ACTION controlp INFIELD bgbb026 name="construct.c.bgbb026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb027
            #add-point:BEFORE FIELD bgbb027 name="construct.b.bgbb027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb027
            
            #add-point:AFTER FIELD bgbb027 name="construct.a.bgbb027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb027
            #add-point:ON ACTION controlp INFIELD bgbb027 name="construct.c.bgbb027"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb028
            #add-point:BEFORE FIELD bgbb028 name="construct.b.bgbb028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb028
            
            #add-point:AFTER FIELD bgbb028 name="construct.a.bgbb028"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb028
            #add-point:ON ACTION controlp INFIELD bgbb028 name="construct.c.bgbb028"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb029
            #add-point:BEFORE FIELD bgbb029 name="construct.b.bgbb029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb029
            
            #add-point:AFTER FIELD bgbb029 name="construct.a.bgbb029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb029
            #add-point:ON ACTION controlp INFIELD bgbb029 name="construct.c.bgbb029"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb030
            #add-point:BEFORE FIELD bgbb030 name="construct.b.bgbb030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb030
            
            #add-point:AFTER FIELD bgbb030 name="construct.a.bgbb030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb030
            #add-point:ON ACTION controlp INFIELD bgbb030 name="construct.c.bgbb030"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb031
            #add-point:BEFORE FIELD bgbb031 name="construct.b.bgbb031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb031
            
            #add-point:AFTER FIELD bgbb031 name="construct.a.bgbb031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb031
            #add-point:ON ACTION controlp INFIELD bgbb031 name="construct.c.bgbb031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb032
            #add-point:BEFORE FIELD bgbb032 name="construct.b.bgbb032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb032
            
            #add-point:AFTER FIELD bgbb032 name="construct.a.bgbb032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb032
            #add-point:ON ACTION controlp INFIELD bgbb032 name="construct.c.bgbb032"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb033
            #add-point:BEFORE FIELD bgbb033 name="construct.b.bgbb033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb033
            
            #add-point:AFTER FIELD bgbb033 name="construct.a.bgbb033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb033
            #add-point:ON ACTION controlp INFIELD bgbb033 name="construct.c.bgbb033"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb034
            #add-point:BEFORE FIELD bgbb034 name="construct.b.bgbb034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb034
            
            #add-point:AFTER FIELD bgbb034 name="construct.a.bgbb034"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb034
            #add-point:ON ACTION controlp INFIELD bgbb034 name="construct.c.bgbb034"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb008_1
            #add-point:BEFORE FIELD bgbb008_1 name="construct.b.bgbb008_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb008_1
            
            #add-point:AFTER FIELD bgbb008_1 name="construct.a.bgbb008_1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb008_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb008_1
            #add-point:ON ACTION controlp INFIELD bgbb008_1 name="construct.c.bgbb008_1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb009_1
            #add-point:BEFORE FIELD bgbb009_1 name="construct.b.bgbb009_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb009_1
            
            #add-point:AFTER FIELD bgbb009_1 name="construct.a.bgbb009_1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb009_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb009_1
            #add-point:ON ACTION controlp INFIELD bgbb009_1 name="construct.c.bgbb009_1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb010_1
            #add-point:BEFORE FIELD bgbb010_1 name="construct.b.bgbb010_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb010_1
            
            #add-point:AFTER FIELD bgbb010_1 name="construct.a.bgbb010_1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb010_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb010_1
            #add-point:ON ACTION controlp INFIELD bgbb010_1 name="construct.c.bgbb010_1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb005
            #add-point:BEFORE FIELD bgbb005 name="construct.b.bgbb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb005
            
            #add-point:AFTER FIELD bgbb005 name="construct.a.bgbb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb005
            #add-point:ON ACTION controlp INFIELD bgbb005 name="construct.c.bgbb005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb006
            #add-point:BEFORE FIELD bgbb006 name="construct.b.bgbb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb006
            
            #add-point:AFTER FIELD bgbb006 name="construct.a.bgbb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb006
            #add-point:ON ACTION controlp INFIELD bgbb006 name="construct.c.bgbb006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb007
            #add-point:BEFORE FIELD bgbb007 name="construct.b.bgbb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb007
            
            #add-point:AFTER FIELD bgbb007 name="construct.a.bgbb007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bgbb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb007
            #add-point:ON ACTION controlp INFIELD bgbb007 name="construct.c.bgbb007"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON bgbbseq,bgbb001,bgbb002,lc_subject,bgbb008,bgbb009,edit1,bgbb010,bgbb003, 
          bgbb004
           FROM s_detail1[1].bgbbseq,s_detail1[1].bgbb001,s_detail1[1].bgbb002,s_detail1[1].lc_subject, 
               s_detail1[1].bgbb008,s_detail1[1].bgbb009,s_detail1[1].edit1,s_detail1[1].bgbb010,s_detail1[1].bgbb003, 
               s_detail1[1].bgbb004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbbseq
            #add-point:BEFORE FIELD bgbbseq name="construct.b.page1.bgbbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbbseq
            
            #add-point:AFTER FIELD bgbbseq name="construct.a.page1.bgbbseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbbseq
            #add-point:ON ACTION controlp INFIELD bgbbseq name="construct.c.page1.bgbbseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb001
            #add-point:BEFORE FIELD bgbb001 name="construct.b.page1.bgbb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb001
            
            #add-point:AFTER FIELD bgbb001 name="construct.a.page1.bgbb001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb001
            #add-point:ON ACTION controlp INFIELD bgbb001 name="construct.c.page1.bgbb001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb002
            #add-point:BEFORE FIELD bgbb002 name="construct.b.page1.bgbb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb002
            
            #add-point:AFTER FIELD bgbb002 name="construct.a.page1.bgbb002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb002
            #add-point:ON ACTION controlp INFIELD bgbb002 name="construct.c.page1.bgbb002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD lc_subject
            #add-point:BEFORE FIELD lc_subject name="construct.b.page1.lc_subject"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD lc_subject
            
            #add-point:AFTER FIELD lc_subject name="construct.a.page1.lc_subject"
          
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.lc_subject
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD lc_subject
            #add-point:ON ACTION controlp INFIELD lc_subject name="construct.c.page1.lc_subject"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bgae001()
            DISPLAY g_qryparam.return1 TO lc_subject
            NEXT FIELD lc_subject
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb008
            #add-point:BEFORE FIELD bgbb008 name="construct.b.page1.bgbb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb008
            
            #add-point:AFTER FIELD bgbb008 name="construct.a.page1.bgbb008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb008
            #add-point:ON ACTION controlp INFIELD bgbb008 name="construct.c.page1.bgbb008"
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb008  #顯示到畫面上

            NEXT FIELD bgbb008                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb009
            #add-point:BEFORE FIELD bgbb009 name="construct.b.page1.bgbb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb009
            
            #add-point:AFTER FIELD bgbb009 name="construct.a.page1.bgbb009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb009
            #add-point:ON ACTION controlp INFIELD bgbb009 name="construct.c.page1.bgbb009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD edit1
            #add-point:BEFORE FIELD edit1 name="construct.b.page1.edit1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD edit1
            
            #add-point:AFTER FIELD edit1 name="construct.a.page1.edit1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.edit1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD edit1
            #add-point:ON ACTION controlp INFIELD edit1 name="construct.c.page1.edit1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb010
            #add-point:BEFORE FIELD bgbb010 name="construct.b.page1.bgbb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb010
            
            #add-point:AFTER FIELD bgbb010 name="construct.a.page1.bgbb010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb010
            #add-point:ON ACTION controlp INFIELD bgbb010 name="construct.c.page1.bgbb010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb003
            #add-point:BEFORE FIELD bgbb003 name="construct.b.page1.bgbb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb003
            
            #add-point:AFTER FIELD bgbb003 name="construct.a.page1.bgbb003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb003
            #add-point:ON ACTION controlp INFIELD bgbb003 name="construct.c.page1.bgbb003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb004
            #add-point:BEFORE FIELD bgbb004 name="construct.b.page1.bgbb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb004
            
            #add-point:AFTER FIELD bgbb004 name="construct.a.page1.bgbb004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bgbb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb004
            #add-point:ON ACTION controlp INFIELD bgbb004 name="construct.c.page1.bgbb004"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      CONSTRUCT BY NAME g_wc_frozen ON bgbb011,bgbb012,bgbb013,bgbb014,bgbb015,
                                       bgbb016,bgbb017,bgbb018,bgbb019,bgbb020,
                                       bgbb021,bgbb022,bgbb023,bgbb024
                                       
            
         #部門
          ON ACTION controlp INFIELD bgbb011
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooegstus='Y'"
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb011  #顯示到畫面上
            NEXT FIELD bgbb011                    #返回原欄位 
         #利潤/成本中心
          ON ACTION controlp INFIELD bgbb012
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooegstus='Y' AND ooeg003 IN ('1','2','3')"
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb012      #顯示到畫面上
            NEXT FIELD bgbb012                         #返回原欄位 
          #区域        
          ON ACTION controlp INFIELD bgbb013
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_287()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb013      #顯示到畫面上
            NEXT FIELD bgbb013                         #返回原欄位    
          #交易客商
          ON ACTION controlp INFIELD bgbb014
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_25() 
            DISPLAY g_qryparam.return1 TO bgbb014      #顯示到畫面上
            NEXT FIELD bgbb014                         #返回原欄位               
           #帳款客戶
          ON ACTION controlp INFIELD bgbb015
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_pmaa001_25() 
            DISPLAY g_qryparam.return1 TO bgbb015      #顯示到畫面上
            NEXT FIELD bgbb015                         #返回原欄位   
            
          #客群      
          ON ACTION controlp INFIELD bgbb016
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_oocq002_281()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb016      #顯示到畫面上
            NEXT FIELD bgbb016                         #返回原欄位  
            
           #產品類別
          ON ACTION controlp INFIELD bgbb017
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb017      #顯示到畫面上
            NEXT FIELD bgbb017                         #返回原欄位   
            
           #人員
          ON ACTION controlp INFIELD bgbb018
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_ooag001_8()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb018      #顯示到畫面上
            NEXT FIELD bgbb018                         #返回原欄位   
            
           #渠道
          ON ACTION controlp INFIELD bgbb022
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            LET g_qryparam.where = " oojdstus='Y' " 
            CALL q_oojd001_2()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb022      #顯示到畫面上
            NEXT FIELD bgbb022                         #返回原欄位 
          
          #品牌
          ON ACTION controlp INFIELD bgbb023
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_oocq002_2002()                            #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb023      #顯示到畫面上
            NEXT FIELD bgbb023                         #返回原欄位 
            
          #专案
          ON ACTION controlp INFIELD bgbb019
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_pjba001()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb019     #顯示到畫面上
            NEXT FIELD bgbb019
            
          #WBS
          ON ACTION controlp INFIELD bgbb020
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            LET g_qryparam.where = "pjbb012='1' "
            CALL q_pjbb002()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb020     #顯示到畫面上
            NEXT FIELD bgbb020
            
         #現金變動碼
         ON ACTION controlp INFIELD bgbb024
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
  #         LET g_qryparam.where="nmai001='",g_glaa005,"'"
            CALL q_nmai002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgbb024  #顯示到畫面上
            NEXT FIELD bgbb024                     #返回原欄位            
      END CONSTRUCT
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         LET g_bgbb_d[1].bgbbseq = ""
         DISPLAY ARRAY g_bgbb_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "bgba_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "bgbb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   #单身
   IF NOT cl_null(g_wc2) AND g_wc2 <>" 1=1" THEN
      LET g_wc2 = cl_replace_str(g_wc2,"lc_subject","glaq002")
      LET g_wc2_table1 = g_wc2
   END IF 
   #冻结单身
   IF NOT cl_null(g_wc_frozen) AND g_wc_frozen <>' 1=1' THEN
      LET g_wc_frozen = cl_replace_str(g_wc_frozen,"_1","")
      LET g_wc2  = g_wc2 CLIPPED,' AND ',g_wc_frozen
      LET g_wc2_table1 = g_wc2
   END IF 
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION abgt030_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON bgbadocno,bgba001,bgba002,bgba003,bgba004,bgba005
                          FROM s_browse[1].b_bgbadocno,s_browse[1].b_bgba001,s_browse[1].b_bgba002,s_browse[1].b_bgba003, 
                              s_browse[1].b_bgba004,s_browse[1].b_bgba005
 
         BEFORE CONSTRUCT
               DISPLAY abgt030_filter_parser('bgbadocno') TO s_browse[1].b_bgbadocno
            DISPLAY abgt030_filter_parser('bgba001') TO s_browse[1].b_bgba001
            DISPLAY abgt030_filter_parser('bgba002') TO s_browse[1].b_bgba002
            DISPLAY abgt030_filter_parser('bgba003') TO s_browse[1].b_bgba003
            DISPLAY abgt030_filter_parser('bgba004') TO s_browse[1].b_bgba004
            DISPLAY abgt030_filter_parser('bgba005') TO s_browse[1].b_bgba005
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL abgt030_filter_show('bgbadocno')
   CALL abgt030_filter_show('bgba001')
   CALL abgt030_filter_show('bgba002')
   CALL abgt030_filter_show('bgba003')
   CALL abgt030_filter_show('bgba004')
   CALL abgt030_filter_show('bgba005')
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION abgt030_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION abgt030_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = abgt030_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abgt030_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bgbb_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL abgt030_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL abgt030_browser_fill("")
      CALL abgt030_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL abgt030_filter_show('bgbadocno')
   CALL abgt030_filter_show('bgba001')
   CALL abgt030_filter_show('bgba002')
   CALL abgt030_filter_show('bgba003')
   CALL abgt030_filter_show('bgba004')
   CALL abgt030_filter_show('bgba005')
   CALL abgt030_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL abgt030_fetch("F") 
      #顯示單身筆數
      CALL abgt030_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abgt030_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bgba_m.bgbadocno = g_browser[g_current_idx].b_bgbadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE abgt030_master_referesh USING g_bgba_m.bgbadocno INTO g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno, 
       g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba006, 
       g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt, 
       g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp_desc, 
       g_bgba_m.bgbamodid_desc,g_bgba_m.bgbacnfid_desc
   
   #遮罩相關處理
   LET g_bgba_m_mask_o.* =  g_bgba_m.*
   CALL abgt030_bgba_t_mask()
   LET g_bgba_m_mask_n.* =  g_bgba_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abgt030_set_act_visible()   
   CALL abgt030_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_bgba_m_t.* = g_bgba_m.*
   LET g_bgba_m_o.* = g_bgba_m.*
   
   LET g_data_owner = g_bgba_m.bgbaownid      
   LET g_data_dept  = g_bgba_m.bgbaowndp
   
   #重新顯示   
   CALL abgt030_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.insert" >}
#+ 資料新增
PRIVATE FUNCTION abgt030_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_bgbb_d.clear()   
 
 
   INITIALIZE g_bgba_m.* TO NULL             #DEFAULT 設定
   
   LET g_bgbadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_bgba_m.bgbaownid = g_user
      LET g_bgba_m.bgbaowndp = g_dept
      LET g_bgba_m.bgbacrtid = g_user
      LET g_bgba_m.bgbacrtdp = g_dept 
      LET g_bgba_m.bgbacrtdt = cl_get_current()
      LET g_bgba_m.bgbamodid = g_user
      LET g_bgba_m.bgbamoddt = cl_get_current()
      LET g_bgba_m.bgbastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_bgba_m.bgba004 = "0"
      LET g_bgba_m.bgbb010_1 = "0"
      LET g_bgba_m.bgbb006 = "0"
      LET g_bgba_m.bgbb007 = "0"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_bgba_m.bgba004 = '1'
      LET g_bgba_m.bgba007 = '00'
      LET g_bgba_m.bgba009 = 'Y'
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_bgba_m_t.* = g_bgba_m.*
      LET g_bgba_m_o.* = g_bgba_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_bgba_m.bgbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL abgt030_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_bgba_m.* TO NULL
         INITIALIZE g_bgbb_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL abgt030_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_bgbb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abgt030_set_act_visible()   
   CALL abgt030_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " bgbaent = " ||g_enterprise|| " AND",
                      " bgbadocno = '", g_bgba_m.bgbadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abgt030_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE abgt030_cl
   
   CALL abgt030_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE abgt030_master_referesh USING g_bgba_m.bgbadocno INTO g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno, 
       g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba006, 
       g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt, 
       g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp_desc, 
       g_bgba_m.bgbamodid_desc,g_bgba_m.bgbacnfid_desc
   
   
   #遮罩相關處理
   LET g_bgba_m_mask_o.* =  g_bgba_m.*
   CALL abgt030_bgba_t_mask()
   LET g_bgba_m_mask_n.* =  g_bgba_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_bgba_m.bgba001,g_bgba_m.bgba001_desc,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba003, 
       g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba010_desc,g_bgba_m.bgba005,g_bgba_m.bgba005_desc, 
       g_bgba_m.bgba006,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaownid_desc, 
       g_bgba_m.bgbaowndp,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdp_desc,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamodid_desc,g_bgba_m.bgbamoddt, 
       g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfid_desc,g_bgba_m.bgbacnfdt,g_bgba_m.bgbb011,g_bgba_m.bgbb011_desc, 
       g_bgba_m.bgbb012,g_bgba_m.bgbb012_desc,g_bgba_m.bgbb013,g_bgba_m.bgbb013_desc,g_bgba_m.bgbb014, 
       g_bgba_m.bgbb014_desc,g_bgba_m.bgbb015,g_bgba_m.bgbb015_desc,g_bgba_m.bgbb016,g_bgba_m.bgbb016_desc, 
       g_bgba_m.bgbb017,g_bgba_m.bgbb017_desc,g_bgba_m.bgbb024,g_bgba_m.bgbb024_desc,g_bgba_m.bgbb021, 
       g_bgba_m.bgbb022,g_bgba_m.bgbb022_desc,g_bgba_m.bgbb023,g_bgba_m.bgbb023_desc,g_bgba_m.bgbb018, 
       g_bgba_m.bgbb018_desc,g_bgba_m.bgbb019,g_bgba_m.bgbb019_desc,g_bgba_m.bgbb020,g_bgba_m.bgbb020_desc, 
       g_bgba_m.bgbb025,g_bgba_m.bgbb026,g_bgba_m.bgbb027,g_bgba_m.bgbb028,g_bgba_m.bgbb029,g_bgba_m.bgbb030, 
       g_bgba_m.bgbb031,g_bgba_m.bgbb032,g_bgba_m.bgbb033,g_bgba_m.bgbb034,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1, 
       g_bgba_m.bgbb010_1,g_bgba_m.bgbb005,g_bgba_m.bgbb006,g_bgba_m.bgbb007
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_bgba_m.bgbaownid      
   LET g_data_dept  = g_bgba_m.bgbaowndp
   
   #功能已完成,通報訊息中心
   CALL abgt030_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.modify" >}
#+ 資料修改
PRIVATE FUNCTION abgt030_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_bgba_m_t.* = g_bgba_m.*
   LET g_bgba_m_o.* = g_bgba_m.*
   
   IF g_bgba_m.bgbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
   CALL s_transaction_begin()
   
   OPEN abgt030_cl USING g_enterprise,g_bgba_m.bgbadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abgt030_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE abgt030_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abgt030_master_referesh USING g_bgba_m.bgbadocno INTO g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno, 
       g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba006, 
       g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt, 
       g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp_desc, 
       g_bgba_m.bgbamodid_desc,g_bgba_m.bgbacnfid_desc
   
   #檢查是否允許此動作
   IF NOT abgt030_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_bgba_m_mask_o.* =  g_bgba_m.*
   CALL abgt030_bgba_t_mask()
   LET g_bgba_m_mask_n.* =  g_bgba_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL abgt030_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_bgba_m.bgbamodid = g_user 
LET g_bgba_m.bgbamoddt = cl_get_current()
LET g_bgba_m.bgbamodid_desc = cl_get_username(g_bgba_m.bgbamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL abgt030_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE bgba_t SET (bgbamodid,bgbamoddt) = (g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt)
          WHERE bgbaent = g_enterprise AND bgbadocno = g_bgbadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_bgba_m.* = g_bgba_m_t.*
            CALL abgt030_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_bgba_m.bgbadocno != g_bgba_m_t.bgbadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE bgbb_t SET bgbbdocno = g_bgba_m.bgbadocno
 
          WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m_t.bgbadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "bgbb_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bgbb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abgt030_set_act_visible()   
   CALL abgt030_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " bgbaent = " ||g_enterprise|| " AND",
                      " bgbadocno = '", g_bgba_m.bgbadocno, "' "
 
   #填到對應位置
   CALL abgt030_browser_fill("")
 
   CLOSE abgt030_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL abgt030_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="abgt030.input" >}
#+ 資料輸入
PRIVATE FUNCTION abgt030_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_bgbb002     STRING
   DEFINE l_str         STRING
   DEFINE l_bgac002     LIKE bgac_t.bgac002
   DEFINE l_ooef014     LIKE ooef_t.ooef014
   DEFINE l_sum_bgbb003 LIKE bgbb_t.bgbb013
   DEFINE l_sum_bgbb004 LIKE bgbb_t.bgbb004
   DEFINE l_ooaj004     LIKE ooaj_t.ooaj004
   DEFINE l_bgae004     LIKE bgae_t.bgae004
   DEFINE l_site_str   STRING
   DEFINE l_net         LIKE bgbb_t.bgbb003 #161129-00019#2  
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bgba_m.bgba001,g_bgba_m.bgba001_desc,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba003, 
       g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba010_desc,g_bgba_m.bgba005,g_bgba_m.bgba005_desc, 
       g_bgba_m.bgba006,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaownid_desc, 
       g_bgba_m.bgbaowndp,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdp_desc,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamodid_desc,g_bgba_m.bgbamoddt, 
       g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfid_desc,g_bgba_m.bgbacnfdt,g_bgba_m.bgbb011,g_bgba_m.bgbb011_desc, 
       g_bgba_m.bgbb012,g_bgba_m.bgbb012_desc,g_bgba_m.bgbb013,g_bgba_m.bgbb013_desc,g_bgba_m.bgbb014, 
       g_bgba_m.bgbb014_desc,g_bgba_m.bgbb015,g_bgba_m.bgbb015_desc,g_bgba_m.bgbb016,g_bgba_m.bgbb016_desc, 
       g_bgba_m.bgbb017,g_bgba_m.bgbb017_desc,g_bgba_m.bgbb024,g_bgba_m.bgbb024_desc,g_bgba_m.bgbb021, 
       g_bgba_m.bgbb022,g_bgba_m.bgbb022_desc,g_bgba_m.bgbb023,g_bgba_m.bgbb023_desc,g_bgba_m.bgbb018, 
       g_bgba_m.bgbb018_desc,g_bgba_m.bgbb019,g_bgba_m.bgbb019_desc,g_bgba_m.bgbb020,g_bgba_m.bgbb020_desc, 
       g_bgba_m.bgbb025,g_bgba_m.bgbb026,g_bgba_m.bgbb027,g_bgba_m.bgbb028,g_bgba_m.bgbb029,g_bgba_m.bgbb030, 
       g_bgba_m.bgbb031,g_bgba_m.bgbb032,g_bgba_m.bgbb033,g_bgba_m.bgbb034,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1, 
       g_bgba_m.bgbb010_1,g_bgba_m.bgbb005,g_bgba_m.bgbb006,g_bgba_m.bgbb007
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT bgbbseq,bgbb001,bgbb002,bgbb008,bgbb009,bgbb010,bgbb003,bgbb004 FROM bgbb_t  
       WHERE bgbbent=? AND bgbbdocno=? AND bgbbseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abgt030_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abgt030_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL abgt030_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba004,g_bgba_m.bgba007, 
       g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbb025,g_bgba_m.bgbb026, 
       g_bgba_m.bgbb027,g_bgba_m.bgbb028,g_bgba_m.bgbb029,g_bgba_m.bgbb030,g_bgba_m.bgbb031,g_bgba_m.bgbb032, 
       g_bgba_m.bgbb033,g_bgba_m.bgbb034,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1,g_bgba_m.bgbb010_1,g_bgba_m.bgbb005, 
       g_bgba_m.bgbb006,g_bgba_m.bgbb007
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="abgt030.input.head" >}
      #單頭段
      INPUT BY NAME g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba004,g_bgba_m.bgba007, 
          g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbb025,g_bgba_m.bgbb026, 
          g_bgba_m.bgbb027,g_bgba_m.bgbb028,g_bgba_m.bgbb029,g_bgba_m.bgbb030,g_bgba_m.bgbb031,g_bgba_m.bgbb032, 
          g_bgba_m.bgbb033,g_bgba_m.bgbb034,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1,g_bgba_m.bgbb010_1, 
          g_bgba_m.bgbb005,g_bgba_m.bgbb006,g_bgba_m.bgbb007 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN abgt030_cl USING g_enterprise,g_bgba_m.bgbadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abgt030_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE abgt030_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL abgt030_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL abgt030_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba001
            
            #add-point:AFTER FIELD bgba001 name="input.a.bgba001"
            IF NOT cl_null(g_bgba_m.bgba001) THEN
               IF g_bgba_m.bgba001 != g_bgba_m_o.bgba001 OR cl_null(g_bgba_m_o.bgba001) THEN                                
                  CALL abgt030_bgba001_bgba005_bgbb002_chk(g_bgba_m.bgba001,'','')
                       RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     IF g_errno = 'sub-01302' THEN
                        LET g_errparam.replace[1] = 'abgi100'
                        LET g_errparam.replace[2] = cl_get_progname('abgi100',g_lang,"2")
                        LET g_errparam.exeprog = 'abgi100'
                     END IF
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bgba_m.bgba001 = g_bgba_m_o.bgba001 
                     LET g_bgba_m.bgba001_desc = s_desc_get_budget_desc(g_bgba_m.bgba001)
                     DISPLAY BY NAME g_bgba_m.bgba001_desc,g_bgba_m.bgba001
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_bgba_m.bgba010) THEN
                     CALL s_abg2_bgai002_chk(g_bgba_m.bgba001,g_bgba_m.bgba010,'07') 
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend =g_bgba_m.bgba010
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_bgba_m.bgba001 = g_bgba_m_o.bgba001 
                        LET g_bgba_m.bgba010 = ''
                        CALL s_desc_get_bgai002_desc(g_bgba_m.bgba001,g_bgba_m.bgba010) RETURNING g_bgba_m.bgba010_desc
                        LET g_bgba_m.bgba001_desc = s_desc_get_budget_desc(g_bgba_m.bgba001)
                        DISPLAY BY NAME g_bgba_m.bgba001_desc,g_bgba_m.bgba001,g_bgba_m.bgba010_desc
                        NEXT FIELD CURRENT
                     END IF                    
                  END IF
                  INITIALIZE g_bgaa.* TO NULL
                  #預算週期/預算幣別/使用預算項目參照表/現金異動表編碼
                  SELECT bgaa002,bgaa003,bgaa008,bgaa009 INTO g_bgaa.*
                    FROM bgaa_t
                   WHERE bgaaent = g_enterprise
                     AND bgaa001 = g_bgba_m.bgba001
                  LET g_bgba_m.bgba003 = g_bgaa.bgaa002 #預算週期
                  LET g_bgba_m.bgba006 = g_bgaa.bgaa003 #預算幣別
                  DISPLAY BY NAME g_bgba_m.bgba003,g_bgba_m.bgba006
                  #取得abgi200匯率
                  CALL s_abg_get_rate(g_bgba_m.bgba001,g_today,g_bgba_m.bgba003)RETURNING g_sub_success,g_errno,g_bgbb009                        
               END IF
            END IF         
            LET g_bgba_m.bgba001_desc = s_desc_get_budget_desc(g_bgba_m.bgba001)
            DISPLAY BY NAME g_bgba_m.bgba001_desc,g_bgba_m.bgba001
            LET g_bgba_m_o.* = g_bgba_m.* 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba001
            #add-point:BEFORE FIELD bgba001 name="input.b.bgba001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgba001
            #add-point:ON CHANGE bgba001 name="input.g.bgba001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba002
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bgba_m.bgba002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD bgba002
            END IF 
 
 
 
            #add-point:AFTER FIELD bgba002 name="input.a.bgba002"
            IF NOT cl_null(g_bgba_m.bgba002) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba002
            #add-point:BEFORE FIELD bgba002 name="input.b.bgba002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgba002
            #add-point:ON CHANGE bgba002 name="input.g.bgba002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbadocno
            #add-point:BEFORE FIELD bgbadocno name="input.b.bgbadocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbadocno
            
            #add-point:AFTER FIELD bgbadocno name="input.a.bgbadocno"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_bgba_m.bgbadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bgba_m.bgbadocno != g_bgbadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bgba_t WHERE "||"bgbaent = " ||g_enterprise|| " AND "||"bgbadocno = '"||g_bgba_m.bgbadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #取當期最大日
               SELECT MAX(bgac002) INTO l_bgac002 FROM bgac_t 
                WHERE bgacent = g_enterprise AND bgac001 = g_bgba_m.bgba003 AND bgac004 = g_bgba_m.bgba004
               CALL s_aooi200_fin_chk_docno(g_glaald,'','',g_bgba_m.bgbadocno,l_bgac002,g_prog) RETURNING g_sub_success
               IF NOT g_sub_success THEN LET g_bgba_m.bgbadocno = '' NEXT FIELD CURRENT END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbadocno
            #add-point:ON CHANGE bgbadocno name="input.g.bgbadocno"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bgba_m.bgba004,"1","1","","","azz-00079",1) THEN
               NEXT FIELD bgba004
            END IF 
 
 
 
            #add-point:AFTER FIELD bgba004 name="input.a.bgba004"
            IF NOT cl_null(g_bgba_m.bgba004) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba004
            #add-point:BEFORE FIELD bgba004 name="input.b.bgba004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgba004
            #add-point:ON CHANGE bgba004 name="input.g.bgba004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba007
            #add-point:BEFORE FIELD bgba007 name="input.b.bgba007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba007
            
            #add-point:AFTER FIELD bgba007 name="input.a.bgba007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgba007
            #add-point:ON CHANGE bgba007 name="input.g.bgba007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba010
            
            #add-point:AFTER FIELD bgba010 name="input.a.bgba010"
            IF NOT cl_null(g_bgba_m.bgba010) THEN
               IF g_bgba_m.bgba010 != g_bgba_m_t.bgba010 OR cl_null(g_bgba_m_t.bgba010) THEN 
                  CALL s_abg2_bgai002_chk(g_bgba_m.bgba001,g_bgba_m.bgba010,'07') 
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend =g_bgba_m.bgba010
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bgba_m.bgba010 = g_bgba_m_t.bgba010
                     CALL s_desc_get_bgai002_desc(g_bgba_m.bgba001,g_bgba_m.bgba010) RETURNING g_bgba_m.bgba010_desc
                     DISPLAY BY NAME g_bgba_m.bgba010_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_bgai002_desc(g_bgba_m.bgba001,g_bgba_m.bgba010) RETURNING g_bgba_m.bgba010_desc
            DISPLAY BY NAME g_bgba_m.bgba010_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba010
            #add-point:BEFORE FIELD bgba010 name="input.b.bgba010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgba010
            #add-point:ON CHANGE bgba010 name="input.g.bgba010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba005
            
            #add-point:AFTER FIELD bgba005 name="input.a.bgba005"
            #預算組織
            IF NOT cl_null(g_bgba_m.bgba005) THEN
               IF (g_bgba_m.bgba005 != g_bgba_m_t.bgba005 OR g_bgba_m_t.bgba005 IS NULL ) THEN                
                  CALL abgt030_bgba001_bgba005_bgbb002_chk(g_bgba_m.bgba001,g_bgba_m.bgba005,'')
                       RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     IF g_errno = 'sub-01302' THEN
                        LET g_errparam.replace[1] = 'abgi100'
                        LET g_errparam.replace[2] = cl_get_progname('abgi100',g_lang,"2")
                        LET g_errparam.exeprog = 'abgi100'
                     END IF
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bgba_m.bgba005      = g_bgba_m_t.bgba005
                     LET g_bgba_m.bgba005_desc = g_bgba_m_t.bgba005_desc
                     DISPLAY BY NAME g_bgba_m.bgba005,g_bgba_m.bgba005_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_bgba_m.bgba001) AND NOT cl_null(g_bgba_m.bgba010) THEN
                     #预算细项权限检查abgi090
                     CALL s_abg2_bgai006_chk(g_bgba_m.bgba001,g_bgba_m.bgba010,g_user,g_bgba_m.bgba005,'01','ALL')
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_bgba_m.bgba005      = g_bgba_m_t.bgba005
                        LET g_bgba_m.bgba005_desc = g_bgba_m_t.bgba005_desc
                        DISPLAY BY NAME g_bgba_m.bgba005,g_bgba_m.bgba005_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                               
                  #根據各單身預算組織找主帳套
                   SELECT glaald,glaa024 INTO g_glaald,g_glaa024 FROM glaa_t,ooef_t
                    WHERE glaaent = g_enterprise
                      AND glaacomp = ooef017           AND glaaent = ooefent
                      AND ooef001 = g_bgba_m.bgba005   AND glaa014 = 'Y'               
               END IF
            ELSE
               LET g_bgba_m.bgba005 = ''
            END IF
            LET g_bgba_m.bgba005_desc = s_desc_get_department_desc(g_bgba_m.bgba005)
            DISPLAY BY NAME g_bgba_m.bgba005_desc,g_bgba_m.bgba005
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba005
            #add-point:BEFORE FIELD bgba005 name="input.b.bgba005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgba005
            #add-point:ON CHANGE bgba005 name="input.g.bgba005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgba009
            #add-point:BEFORE FIELD bgba009 name="input.b.bgba009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgba009
            
            #add-point:AFTER FIELD bgba009 name="input.a.bgba009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgba009
            #add-point:ON CHANGE bgba009 name="input.g.bgba009"
            CALL cl_set_comp_visible('bgbb008,bgbb009,bgbb010',TRUE)
            IF g_bgba_m.bgba009 = 'N' THEN               
               CALL cl_set_comp_visible('bgbb008,bgbb009,bgbb010',FALSE)
            END IF
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbastus
            #add-point:BEFORE FIELD bgbastus name="input.b.bgbastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbastus
            
            #add-point:AFTER FIELD bgbastus name="input.a.bgbastus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbastus
            #add-point:ON CHANGE bgbastus name="input.g.bgbastus"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb025
            #add-point:BEFORE FIELD bgbb025 name="input.b.bgbb025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb025
            
            #add-point:AFTER FIELD bgbb025 name="input.a.bgbb025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb025
            #add-point:ON CHANGE bgbb025 name="input.g.bgbb025"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb026
            #add-point:BEFORE FIELD bgbb026 name="input.b.bgbb026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb026
            
            #add-point:AFTER FIELD bgbb026 name="input.a.bgbb026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb026
            #add-point:ON CHANGE bgbb026 name="input.g.bgbb026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb027
            #add-point:BEFORE FIELD bgbb027 name="input.b.bgbb027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb027
            
            #add-point:AFTER FIELD bgbb027 name="input.a.bgbb027"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb027
            #add-point:ON CHANGE bgbb027 name="input.g.bgbb027"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb028
            #add-point:BEFORE FIELD bgbb028 name="input.b.bgbb028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb028
            
            #add-point:AFTER FIELD bgbb028 name="input.a.bgbb028"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb028
            #add-point:ON CHANGE bgbb028 name="input.g.bgbb028"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb029
            #add-point:BEFORE FIELD bgbb029 name="input.b.bgbb029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb029
            
            #add-point:AFTER FIELD bgbb029 name="input.a.bgbb029"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb029
            #add-point:ON CHANGE bgbb029 name="input.g.bgbb029"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb030
            #add-point:BEFORE FIELD bgbb030 name="input.b.bgbb030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb030
            
            #add-point:AFTER FIELD bgbb030 name="input.a.bgbb030"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb030
            #add-point:ON CHANGE bgbb030 name="input.g.bgbb030"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb031
            #add-point:BEFORE FIELD bgbb031 name="input.b.bgbb031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb031
            
            #add-point:AFTER FIELD bgbb031 name="input.a.bgbb031"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb031
            #add-point:ON CHANGE bgbb031 name="input.g.bgbb031"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb032
            #add-point:BEFORE FIELD bgbb032 name="input.b.bgbb032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb032
            
            #add-point:AFTER FIELD bgbb032 name="input.a.bgbb032"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb032
            #add-point:ON CHANGE bgbb032 name="input.g.bgbb032"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb033
            #add-point:BEFORE FIELD bgbb033 name="input.b.bgbb033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb033
            
            #add-point:AFTER FIELD bgbb033 name="input.a.bgbb033"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb033
            #add-point:ON CHANGE bgbb033 name="input.g.bgbb033"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb034
            #add-point:BEFORE FIELD bgbb034 name="input.b.bgbb034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb034
            
            #add-point:AFTER FIELD bgbb034 name="input.a.bgbb034"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb034
            #add-point:ON CHANGE bgbb034 name="input.g.bgbb034"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb008_1
            #add-point:BEFORE FIELD bgbb008_1 name="input.b.bgbb008_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb008_1
            
            #add-point:AFTER FIELD bgbb008_1 name="input.a.bgbb008_1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb008_1
            #add-point:ON CHANGE bgbb008_1 name="input.g.bgbb008_1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb009_1
            #add-point:BEFORE FIELD bgbb009_1 name="input.b.bgbb009_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb009_1
            
            #add-point:AFTER FIELD bgbb009_1 name="input.a.bgbb009_1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb009_1
            #add-point:ON CHANGE bgbb009_1 name="input.g.bgbb009_1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb010_1
            #add-point:BEFORE FIELD bgbb010_1 name="input.b.bgbb010_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb010_1
            
            #add-point:AFTER FIELD bgbb010_1 name="input.a.bgbb010_1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb010_1
            #add-point:ON CHANGE bgbb010_1 name="input.g.bgbb010_1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb005
            #add-point:BEFORE FIELD bgbb005 name="input.b.bgbb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb005
            
            #add-point:AFTER FIELD bgbb005 name="input.a.bgbb005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb005
            #add-point:ON CHANGE bgbb005 name="input.g.bgbb005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb006
            #add-point:BEFORE FIELD bgbb006 name="input.b.bgbb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb006
            
            #add-point:AFTER FIELD bgbb006 name="input.a.bgbb006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb006
            #add-point:ON CHANGE bgbb006 name="input.g.bgbb006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb007
            #add-point:BEFORE FIELD bgbb007 name="input.b.bgbb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb007
            
            #add-point:AFTER FIELD bgbb007 name="input.a.bgbb007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb007
            #add-point:ON CHANGE bgbb007 name="input.g.bgbb007"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.bgba001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba001
            #add-point:ON ACTION controlp INFIELD bgba001 name="input.c.bgba001"
            #i開窗-預算編號
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgba_m.bgba001
            LET g_qryparam.where = "bgaastus = 'Y' AND bgaa006 = '1' "   #使用預測才可以開
            CALL q_bgaa001()
            LET g_bgba_m.bgba001 = g_qryparam.return1
            DISPLAY BY NAME g_bgba_m.bgba001
            NEXT FIELD bgba001
            #END add-point
 
 
         #Ctrlp:input.c.bgba002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba002
            #add-point:ON ACTION controlp INFIELD bgba002 name="input.c.bgba002"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbadocno
            #add-point:ON ACTION controlp INFIELD bgbadocno name="input.c.bgbadocno"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgba_m.bgbadocno      #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_glaa024
            LET g_qryparam.arg2 = g_prog
            CALL q_ooba002_1()                                #呼叫開窗
            LET g_bgba_m.bgbadocno = g_qryparam.return1
            DISPLAY g_bgba_m.bgbadocno TO bgbadocno
            NEXT FIELD bgbadocno                              #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.bgba004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba004
            #add-point:ON ACTION controlp INFIELD bgba004 name="input.c.bgba004"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgba007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba007
            #add-point:ON ACTION controlp INFIELD bgba007 name="input.c.bgba007"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgba010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba010
            #add-point:ON ACTION controlp INFIELD bgba010 name="input.c.bgba010"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgba_m.bgba010             #給予default值
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " bgaistus='Y' AND bgai003 = '",g_user,"' AND (bgai005 ='07' OR bgai005 = '00') "
            IF NOT cl_null(g_bgba_m.bgba001) THEN
               LET g_qryparam.where = g_qryparam.where," AND bgai001 = '",g_bgba_m.bgba001,"' "
            END IF
            CALL q_bgai002()                                #呼叫開窗

            LET g_bgba_m.bgba010 = g_qryparam.return1

            DISPLAY g_bgba_m.bgba010 TO bgba010              #

            NEXT FIELD bgba010
            #END add-point
 
 
         #Ctrlp:input.c.bgba005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba005
            #add-point:ON ACTION controlp INFIELD bgba005 name="input.c.bgba005"
            #預算組織
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgba_m.bgba005
            LET g_qryparam.where = " ooef001 IN (SELECT bgaj002 FROM bgaj_t ",
                                   "              WHERE bgajent = ooefent AND bgajent = ",g_enterprise,
                                   "                AND bgaj001 = '",g_bgba_m.bgba001,"' AND bgajstus = 'Y') "
            CALL s_abg2_get_budget_site(g_bgba_m.bgba001,g_bgba_m.bgba010,g_user,'07') RETURNING l_site_str
            CALL s_fin_get_wc_str(l_site_str) RETURNING l_site_str
            LET g_qryparam.where = g_qryparam.where CLIPPED,
                                   " AND ooef001 IN ",l_site_str                                                                                                       
            CALL q_ooef001()
            LET g_bgba_m.bgba005 = g_qryparam.return1
            DISPLAY BY NAME g_bgba_m.bgba005
            NEXT FIELD bgba005
            #END add-point
 
 
         #Ctrlp:input.c.bgba009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgba009
            #add-point:ON ACTION controlp INFIELD bgba009 name="input.c.bgba009"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbastus
            #add-point:ON ACTION controlp INFIELD bgbastus name="input.c.bgbastus"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb025
            #add-point:ON ACTION controlp INFIELD bgbb025 name="input.c.bgbb025"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb026
            #add-point:ON ACTION controlp INFIELD bgbb026 name="input.c.bgbb026"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb027
            #add-point:ON ACTION controlp INFIELD bgbb027 name="input.c.bgbb027"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb028
            #add-point:ON ACTION controlp INFIELD bgbb028 name="input.c.bgbb028"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb029
            #add-point:ON ACTION controlp INFIELD bgbb029 name="input.c.bgbb029"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb030
            #add-point:ON ACTION controlp INFIELD bgbb030 name="input.c.bgbb030"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb031
            #add-point:ON ACTION controlp INFIELD bgbb031 name="input.c.bgbb031"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb032
            #add-point:ON ACTION controlp INFIELD bgbb032 name="input.c.bgbb032"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb033
            #add-point:ON ACTION controlp INFIELD bgbb033 name="input.c.bgbb033"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb034
            #add-point:ON ACTION controlp INFIELD bgbb034 name="input.c.bgbb034"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb008_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb008_1
            #add-point:ON ACTION controlp INFIELD bgbb008_1 name="input.c.bgbb008_1"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb009_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb009_1
            #add-point:ON ACTION controlp INFIELD bgbb009_1 name="input.c.bgbb009_1"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb010_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb010_1
            #add-point:ON ACTION controlp INFIELD bgbb010_1 name="input.c.bgbb010_1"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb005
            #add-point:ON ACTION controlp INFIELD bgbb005 name="input.c.bgbb005"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb006
            #add-point:ON ACTION controlp INFIELD bgbb006 name="input.c.bgbb006"
            
            #END add-point
 
 
         #Ctrlp:input.c.bgbb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb007
            #add-point:ON ACTION controlp INFIELD bgbb007 name="input.c.bgbb007"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_bgba_m.bgbadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               SELECT MAX(bgac002) INTO l_bgac002 FROM bgac_t 
                WHERE bgacent = g_enterprise AND bgac001 = g_bgba_m.bgba003 AND bgac004 = g_bgba_m.bgba004
               CALL s_aooi200_fin_gen_docno(g_glaald,'','',g_bgba_m.bgbadocno,l_bgac002,g_prog)
                  RETURNING g_sub_success,g_bgba_m.bgbadocno
               #end add-point
               
               INSERT INTO bgba_t (bgbaent,bgba001,bgba002,bgbadocno,bgba003,bgba004,bgba007,bgba010, 
                   bgba005,bgba006,bgba009,bgbastus,bgbaownid,bgbaowndp,bgbacrtid,bgbacrtdp,bgbacrtdt, 
                   bgbamodid,bgbamoddt,bgbacnfid,bgbacnfdt)
               VALUES (g_enterprise,g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba003, 
                   g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba006, 
                   g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp,g_bgba_m.bgbacrtid, 
                   g_bgba_m.bgbacrtdp,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid, 
                   g_bgba_m.bgbacnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_bgba_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abgt030_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL abgt030_b_fill()
                  CALL abgt030_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL abgt030_bgba_t_mask_restore('restore_mask_o')
               
               UPDATE bgba_t SET (bgba001,bgba002,bgbadocno,bgba003,bgba004,bgba007,bgba010,bgba005, 
                   bgba006,bgba009,bgbastus,bgbaownid,bgbaowndp,bgbacrtid,bgbacrtdp,bgbacrtdt,bgbamodid, 
                   bgbamoddt,bgbacnfid,bgbacnfdt) = (g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno, 
                   g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005, 
                   g_bgba_m.bgba006,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp, 
                   g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt, 
                   g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt)
                WHERE bgbaent = g_enterprise AND bgbadocno = g_bgbadocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "bgba_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL abgt030_bgba_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_bgba_m_t)
               LET g_log2 = util.JSON.stringify(g_bgba_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="abgt030.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_bgbb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bgbb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abgt030_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_bgbb_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            SELECT bgaa002,bgaa003,bgaa008,bgaa009 INTO g_bgaa.*
              FROM bgaa_t
             WHERE bgaaent = g_enterprise
               AND bgaa001 = g_bgba_m.bgba001
            SELECT glaald INTO g_glaald FROM glaa_t,ooef_t
             WHERE glaaent = g_enterprise
               AND glaacomp = ooef017           AND glaaent = ooefent
               AND ooef001 = g_bgba_m.bgba005   AND glaa014 = 'Y'      
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abgt030_cl USING g_enterprise,g_bgba_m.bgbadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abgt030_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE abgt030_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_bgbb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bgbb_d[l_ac].bgbbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bgbb_d_t.* = g_bgbb_d[l_ac].*  #BACKUP
               LET g_bgbb_d_o.* = g_bgbb_d[l_ac].*  #BACKUP
               CALL abgt030_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL abgt030_set_no_entry_b(l_cmd)
               IF NOT abgt030_lock_b("bgbb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abgt030_bcl INTO g_bgbb_d[l_ac].bgbbseq,g_bgbb_d[l_ac].bgbb001,g_bgbb_d[l_ac].bgbb002, 
                      g_bgbb_d[l_ac].bgbb008,g_bgbb_d[l_ac].bgbb009,g_bgbb_d[l_ac].bgbb010,g_bgbb_d[l_ac].bgbb003, 
                      g_bgbb_d[l_ac].bgbb004
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_bgbb_d_t.bgbbseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bgbb_d_mask_o[l_ac].* =  g_bgbb_d[l_ac].*
                  CALL abgt030_bgbb_t_mask()
                  LET g_bgbb_d_mask_n[l_ac].* =  g_bgbb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL abgt030_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            CALL abgt030_b_detail()
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bgbb_d[l_ac].* TO NULL 
            INITIALIZE g_bgbb_d_t.* TO NULL 
            INITIALIZE g_bgbb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_bgbb_d[l_ac].bgbb010 = "0"
      LET g_bgbb_d[l_ac].bgbb003 = "0"
      LET g_bgbb_d[l_ac].bgbb004 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            #項次
             SELECT MAX(bgbbseq)+1 INTO g_bgbb_d[l_ac].bgbbseq
              FROM bgbb_t
             WHERE bgbbent = g_enterprise
               AND bgbbdocno = g_bgba_m.bgbadocno
            IF g_bgbb_d[l_ac].bgbbseq IS NULL THEN
               LET g_bgbb_d[l_ac].bgbbseq = 1
            END IF
            
            IF g_bgba_m.bgba009 = 'N' THEN
               LET g_bgbb_d[l_ac].bgbb008 = g_bgba_m.bgba006
            END IF
            LET g_bgbb_d[l_ac].bgbb009 = 1
            LET g_bgbb_d[l_ac].bgbb001 = g_bgba_m.bgba001
           
            #end add-point
            LET g_bgbb_d_t.* = g_bgbb_d[l_ac].*     #新輸入資料
            LET g_bgbb_d_o.* = g_bgbb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abgt030_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL abgt030_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bgbb_d[li_reproduce_target].* = g_bgbb_d[li_reproduce].*
 
               LET g_bgbb_d[li_reproduce_target].bgbbseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            CALL cl_err_collect_init()
            CALL abgt030_subject_chk(g_bgbb_d[l_ac].bgbb002) RETURNING g_sub_success
            CALL cl_err_collect_show()
            IF NOT g_sub_success THEN
               CANCEL INSERT
            END IF
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM bgbb_t 
             WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m.bgbadocno
 
               AND bgbbseq = g_bgbb_d[l_ac].bgbbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgba_m.bgbadocno
               LET gs_keys[2] = g_bgbb_d[g_detail_idx].bgbbseq
               CALL abgt030_insert_b('bgbb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               #開啟業務資訊
               LET l_bgae004 = ''
               SELECT bgae004 INTO l_bgae004 FROM bgae_t 
                WHERE bgaeent = g_enterprise 
                  AND bgae006 = g_bgaa.bgaa008
                  AND bgae001 = g_bgbb_d[g_detail_idx].bgbb002
               IF l_bgae004 = 2 OR l_bgae004 = 3 THEN
                  CALL abgt030_02(g_bgba_m.bgbadocno,g_bgbb_d[l_ac].bgbbseq,g_bgbb_d[l_ac].bgbb010) 
                     RETURNING g_bgba_m.bgbb005,g_bgba_m.bgbb006,g_bgba_m.bgbb007,g_bgbb_d[l_ac].bgbb010
                  IF cl_null(g_bgbb_d[l_ac].bgbb003) OR g_bgbb_d[l_ac].bgbb003 = 0 THEN
                     LET g_bgbb_d[l_ac].bgbb003 = 0
                     LET g_bgbb_d[l_ac].bgbb004 = g_bgbb_d[l_ac].bgbb009 * g_bgbb_d[l_ac].bgbb010                   
                  ELSE
                     LET g_bgbb_d[l_ac].bgbb004 = 0
                     LET g_bgbb_d[l_ac].bgbb003 = g_bgbb_d[l_ac].bgbb009 * g_bgbb_d[l_ac].bgbb010                  
                  END IF
                   UPDATE bgbb_t SET bgbb004 = g_bgbb_d[l_ac].bgbb004,bgbb003 = g_bgbb_d[l_ac].bgbb003 
                    WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m.bgbadocno
                      AND bgbbseq = g_bgbb_d[l_ac].bgbbseq
                  DISPLAY BY NAME g_bgbb_d[l_ac].bgbb010,g_bgbb_d[l_ac].bgbb003,g_bgbb_d[l_ac].bgbb004
               END IF
               #將離開科目欄位后的业务咨询/核算项 insert進DB
               CALL abgt030_update_forzen() RETURNING g_sub_success 
               IF NOT g_sub_success THEN
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               END IF    
               CALL abgt030_subject()
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_bgbb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bgbb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abgt030_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_bgba_m.bgbadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_bgbb_d_t.bgbbseq
 
            
               #刪除同層單身
               IF NOT abgt030_delete_b('bgbb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abgt030_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT abgt030_key_delete_b(gs_keys,'bgbb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abgt030_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE abgt030_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_bgbb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_bgbb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbbseq
            #add-point:BEFORE FIELD bgbbseq name="input.b.page1.bgbbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbbseq
            
            #add-point:AFTER FIELD bgbbseq name="input.a.page1.bgbbseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_bgba_m.bgbadocno IS NOT NULL AND g_bgbb_d[g_detail_idx].bgbbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bgba_m.bgbadocno != g_bgbadocno_t OR g_bgbb_d[g_detail_idx].bgbbseq != g_bgbb_d_t.bgbbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bgbb_t WHERE "||"bgbbent = " ||g_enterprise|| " AND "||"bgbbdocno = '"||g_bgba_m.bgbadocno ||"' AND "|| "bgbbseq = '"||g_bgbb_d[g_detail_idx].bgbbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbbseq
            #add-point:ON CHANGE bgbbseq name="input.g.page1.bgbbseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb001
            #add-point:BEFORE FIELD bgbb001 name="input.b.page1.bgbb001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb001
            
            #add-point:AFTER FIELD bgbb001 name="input.a.page1.bgbb001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb001
            #add-point:ON CHANGE bgbb001 name="input.g.page1.bgbb001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb002
            #add-point:BEFORE FIELD bgbb002 name="input.b.page1.bgbb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb002
            
            #add-point:AFTER FIELD bgbb002 name="input.a.page1.bgbb002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb002
            #add-point:ON CHANGE bgbb002 name="input.g.page1.bgbb002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD lc_subject
            #add-point:BEFORE FIELD lc_subject name="input.b.page1.lc_subject"
            LET g_bgbb_d[l_ac].lc_subject = g_bgbb_d[l_ac].bgbb002                    
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD lc_subject
            
            #add-point:AFTER FIELD lc_subject name="input.a.page1.lc_subject"
            #检查
             IF NOT cl_null(g_bgbb_d[l_ac].lc_subject) THEN
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_bgbb_d[l_ac].lc_subject <> g_bgbb_d_t.bgbb002) THEN
                  #預算細項存在性，有效性，非统治科目，账户科目属性检查
                  CALL abgt030_bgba001_bgba005_bgbb002_chk(g_bgba_m.bgba001,g_bgba_m.bgba005,g_bgbb_d[l_ac].lc_subject)
                       RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bgbb_d[l_ac].lc_subject
                     LET g_errparam.replace[1] = 'abgi100'
                     LET g_errparam.replace[2] = cl_get_progname('abgi100',g_lang,"2")
                     LET g_errparam.exeprog = 'abgi100'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()                  
                     LET g_bgbb_d[l_ac].lc_subject = g_bgbb_d_t.lc_subject
                     NEXT FIELD lc_subject                  
                  END IF 
                 
                  LET g_bgbb_d[l_ac].bgbb002 =g_bgbb_d[l_ac].lc_subject   
                  
                  CALL abgt030_01(g_bgba_m.bgbadocno,g_bgbb_d[l_ac].bgbbseq,g_bgbb_d[l_ac].lc_subject) 
                  RETURNING  g_bgba_m.bgbb011,g_bgba_m.bgbb012,g_bgba_m.bgbb013,g_bgba_m.bgbb014,g_bgba_m.bgbb015,
                             g_bgba_m.bgbb016,g_bgba_m.bgbb017,g_bgba_m.bgbb018,g_bgba_m.bgbb019,g_bgba_m.bgbb020,
                             g_bgba_m.bgbb021,g_bgba_m.bgbb022,g_bgba_m.bgbb023,g_bgba_m.bgbb024,
                             g_bgba_m.bgbb025,g_bgba_m.bgbb026,g_bgba_m.bgbb027,g_bgba_m.bgbb028,g_bgba_m.bgbb029,
                             g_bgba_m.bgbb030,g_bgba_m.bgbb031,g_bgba_m.bgbb032,g_bgba_m.bgbb033,g_bgba_m.bgbb034                             
               END IF
               #科目(核算項編號)+名稱+核算項組合
               CALL abgt030_bgbb002() RETURNING l_bgbb002,l_str
               LET g_bgbb_d[l_ac].lc_subject = g_bgbb_d[l_ac].bgbb002,l_str,'\n',l_bgbb002
               DISPLAY BY NAME g_bgbb_d[l_ac].lc_subject
            END IF             
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE lc_subject
            #add-point:ON CHANGE lc_subject name="input.g.page1.lc_subject"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb008
            #add-point:BEFORE FIELD bgbb008 name="input.b.page1.bgbb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb008
            
            #add-point:AFTER FIELD bgbb008 name="input.a.page1.bgbb008"
            DISPLAY BY NAME g_bgbb_d[l_ac].bgbb008
            IF NOT cl_null(g_bgbb_d[l_ac].bgbb008) THEN
               IF g_bgbb_d[l_ac].bgbb008 <> g_bgbb_d_o.bgbb008 OR cl_null(g_bgbb_d_o.bgbb008)THEN 
                  CALL abgt030_bgbb008_chk(g_bgbb_d[l_ac].bgbb008) RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bgbb_d[l_ac].bgbb008
                     LET g_errparam.replace[1] ='aooi140'
                     LET g_errparam.replace[2] = cl_get_progname('aooi140',g_lang,"2")
                     LET g_errparam.exeprog    ='aooi140'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()                  
                     LET g_bgbb_d[l_ac].bgbb008 = g_bgbb_d_t.bgbb008
                     NEXT FIELD bgbb008
                  END IF              
                  #錄入幣別與當前預設的幣別相同，匯率就是1 
                  #本位幣一匯率
                  #取預算匯率
                  #取當期最大日
                  SELECT MAX(bgac002) INTO l_bgac002 FROM bgac_t 
                   WHERE bgacent = g_enterprise AND bgac001 = g_bgba_m.bgba003 AND bgac004 = g_bgba_m.bgba004
                  CALL s_abg_get_bg_rate(g_bgba_m.bgba001,l_bgac002,g_bgbb_d[l_ac].bgbb008,g_bgba_m.bgba006)
                     RETURNING g_bgbb_d[l_ac].bgbb009   
                  IF cl_null(g_bgbb_d[l_ac].bgbb009) THEN LET g_bgbb_d[l_ac].bgbb009 = 1 END IF
                  #當幣別變化后判斷匯率是否改變，若發生改變重新計算金額
                  
                  IF cl_null(g_bgbb_d_t.bgbb009) OR g_bgbb_d[l_ac].bgbb009 <> g_bgbb_d_t.bgbb009 THEN
                     IF g_bgbb_d[l_ac].bgbb003 <> 0 THEN #借方
                        LET g_bgbb_d[l_ac].bgbb003 = g_bgbb_d[l_ac].bgbb009 *g_bgbb_d[l_ac].bgbb010
                     ELSE 
                        LET g_bgbb_d[l_ac].bgbb004 = g_bgbb_d[l_ac].bgbb009 *g_bgbb_d[l_ac].bgbb010
                     END IF                      
                     #取位
                     SELECT ooef014 INTO l_ooef014 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_bgba_m.bgba005
                     CALL s_curr_sel_ooaj004(l_ooef014,g_bgba_m.bgba006) RETURNING l_ooaj004
                     IF NOT cl_null(l_ooef014) THEN
                        IF g_bgbb_d[l_ac].bgbb003 <> 0 THEN
                           CALL s_num_round('1',g_bgbb_d[l_ac].bgbb003,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb003
                        ELSE
                           CALL s_num_round('1',g_bgbb_d[l_ac].bgbb004,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb004
                        END IF
                        #原幣
                        CALL s_curr_sel_ooaj004(l_ooef014,g_bgbb_d[l_ac].bgbb008) RETURNING l_ooaj004
                        CALL s_num_round('1',g_bgbb_d[l_ac].bgbb010,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb010
                     END IF
                  END IF
               END IF
            END IF             
            LET g_bgbb_d_o.bgbb008 = g_bgbb_d[l_ac].bgbb008
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb008
            #add-point:ON CHANGE bgbb008 name="input.g.page1.bgbb008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb009
            #add-point:BEFORE FIELD bgbb009 name="input.b.page1.bgbb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb009
            
            #add-point:AFTER FIELD bgbb009 name="input.a.page1.bgbb009"
            DISPLAY BY NAME g_bgbb_d[l_ac].bgbb009
            IF NOT cl_null(g_bgbb_d[l_ac].bgbb009) THEN
               IF g_bgbb_d[l_ac].bgbb009 <> g_bgbb_d_o.bgbb009 OR cl_null(g_bgbb_d_o.bgbb009) THEN 
                  IF g_bgbb_d[l_ac].bgbb009 <0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'aim-00009'
                     LET g_errparam.extend = g_bgbb_d[l_ac].bgbb009
                     LET g_errparam.popup = TRUE
                     CALL cl_err()                  
                     LET g_bgbb_d[l_ac].bgbb009 = g_bgbb_d_t.bgbb009
                     NEXT FIELD bgbb009
                  END IF
                  
                  IF g_bgbb_d[l_ac].bgbb008 = g_bgba_m.bgba006 AND g_bgbb_d[l_ac].bgbb009 <> 1 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00327'
                     LET g_errparam.extend = g_bgbb_d[l_ac].bgbb009
                     LET g_errparam.popup = FALSE
                     CALL cl_err()                  
                     LET g_bgbb_d[l_ac].bgbb009 = 1
                     NEXT FIELD bgbb009
                  END IF          
                  IF   g_bgbb_d[l_ac].bgbb009 <= 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abg-00262'
                     LET g_errparam.extend = g_bgbb_d[l_ac].bgbb009
                     LET g_errparam.popup = FALSE
                     CALL cl_err()                  
                     LET g_bgbb_d[l_ac].bgbb009 = 1
                     NEXT FIELD bgbb009
                  END IF                  
                  IF g_bgbb_d[l_ac].bgbb003 <> 0 THEN    #借
                     LET g_bgbb_d[l_ac].bgbb003 = g_bgbb_d[l_ac].bgbb009 * g_bgbb_d[l_ac].bgbb010                                         
                  ELSE
                     LET g_bgbb_d[l_ac].bgbb004 = g_bgbb_d[l_ac].bgbb009 * g_bgbb_d[l_ac].bgbb010   
                  END IF
                  #取位
                  SELECT ooef014 INTO l_ooef014 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_bgba_m.bgba005
                  CALL s_curr_sel_ooaj004(l_ooef014,g_bgba_m.bgba006) RETURNING l_ooaj004
                  IF NOT cl_null(l_ooef014) THEN
                     IF g_bgbb_d[l_ac].bgbb003 <> 0 THEN
                        CALL s_num_round('1',g_bgbb_d[l_ac].bgbb003,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb003
                     ELSE
                        CALL s_num_round('1',g_bgbb_d[l_ac].bgbb004,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb004
                     END IF
                     #原幣
                     CALL s_curr_sel_ooaj004(l_ooef014,g_bgbb_d[l_ac].bgbb008) RETURNING l_ooaj004
                     CALL s_num_round('1',g_bgbb_d[l_ac].bgbb010,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb010
                  END IF                   
               END IF     
            END IF           
            LET g_bgbb_d_o.bgbb009 = g_bgbb_d[l_ac].bgbb009
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb009
            #add-point:ON CHANGE bgbb009 name="input.g.page1.bgbb009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD edit1
            #add-point:BEFORE FIELD edit1 name="input.b.page1.edit1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD edit1
            
            #add-point:AFTER FIELD edit1 name="input.a.page1.edit1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE edit1
            #add-point:ON CHANGE edit1 name="input.g.page1.edit1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb010
            #add-point:BEFORE FIELD bgbb010 name="input.b.page1.bgbb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb010
            
            #add-point:AFTER FIELD bgbb010 name="input.a.page1.bgbb010"
            DISPLAY BY NAME g_bgbb_d[l_ac].bgbb010
            IF NOT cl_null(g_bgbb_d[l_ac].bgbb010) THEN
               IF g_bgbb_d[l_ac].bgbb010 <> g_bgbb_d_o.bgbb010 OR cl_null(g_bgbb_d_o.bgbb010) THEN
                  IF g_bgbb_d[l_ac].bgbb010 < 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'aim-00009'
                     LET g_errparam.extend = g_bgbb_d[l_ac].bgbb010
                     LET g_errparam.popup = TRUE
                     CALL cl_err()                
                     LET g_bgbb_d[l_ac].bgbb010 = g_bgbb_d_t.bgbb010
                     NEXT FIELD bgbb010
                  END IF          
                  IF g_bgbb_d[l_ac].bgbb004 <> 0 THEN
                     LET g_bgbb_d[l_ac].bgbb004 = g_bgbb_d[l_ac].bgbb009 *g_bgbb_d[l_ac].bgbb010            
                  ELSE
                     LET g_bgbb_d[l_ac].bgbb003 = g_bgbb_d[l_ac].bgbb009 *g_bgbb_d[l_ac].bgbb010                                         
                  END IF                  
                  #取位
                  SELECT ooef014 INTO l_ooef014 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_bgba_m.bgba005
                  CALL s_curr_sel_ooaj004(l_ooef014,g_bgba_m.bgba006) RETURNING l_ooaj004
                  IF NOT cl_null(l_ooef014) THEN
                     IF g_bgbb_d[l_ac].bgbb003 <> 0 THEN
                        CALL s_num_round('1',g_bgbb_d[l_ac].bgbb003,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb003
                     ELSE
                        CALL s_num_round('1',g_bgbb_d[l_ac].bgbb004,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb004
                     END IF
                     #原幣
                     CALL s_curr_sel_ooaj004(l_ooef014,g_bgbb_d[l_ac].bgbb008) RETURNING l_ooaj004
                     CALL s_num_round('1',g_bgbb_d[l_ac].bgbb010,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb010
                  END IF                                                       
               END IF
            END IF
            LET g_bgbb_d_o.bgbb010 = g_bgbb_d[l_ac].bgbb010

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb010
            #add-point:ON CHANGE bgbb010 name="input.g.page1.bgbb010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb003
            #add-point:BEFORE FIELD bgbb003 name="input.b.page1.bgbb003"
            #161129-00019#2 ---s---
            IF (cl_null(g_bgbb_d[l_ac].bgbb003) OR g_bgbb_d[l_ac].bgbb003 =0 ) AND 
               (cl_null(g_bgbb_d[l_ac].bgbb004) OR g_bgbb_d[l_ac].bgbb004 =0 ) THEN
               SELECT SUM(bgbb003),SUM(bgbb004) INTO l_sum_bgbb003,l_sum_bgbb004
                 FROM bgbb_t WHERE bgbbent = g_enterprise
                  AND bgbbdocno = g_bgba_m.bgbadocno
               IF cl_null(l_sum_bgbb003) THEN LET l_sum_bgbb003 = 0 END IF
               IF cl_null(l_sum_bgbb004) THEN LET l_sum_bgbb004 = 0 END IF
               LET l_net = 0 
               IF l_sum_bgbb003 > l_sum_bgbb004 THEN
                  LET g_bgbb_d[l_ac].bgbb004 = l_sum_bgbb003 - l_sum_bgbb004
                  LET g_bgbb_d[l_ac].bgbb003 = 0
               ELSE
                  LET g_bgbb_d[l_ac].bgbb003 = l_sum_bgbb004 - l_sum_bgbb003            
                  LET g_bgbb_d[l_ac].bgbb004 = 0
               END IF
               DISPLAY BY NAME g_bgbb_d[l_ac].bgbb003,g_bgbb_d[l_ac].bgbb004
            END IF
            #161129-00019#2 ---e---
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb003
            
            #add-point:AFTER FIELD bgbb003 name="input.a.page1.bgbb003"
            IF NOT cl_null(g_bgbb_d[l_ac].bgbb003) THEN
               IF g_bgbb_d[l_ac].bgbb003 <> g_bgbb_d_o.bgbb003 OR cl_null(g_bgbb_d_o.bgbb003) THEN
                  #如果借贷都有值的话，停在改栏位
                  IF g_bgbb_d[l_ac].bgbb003 <> 0  AND g_bgbb_d[l_ac].bgbb004<>0 THEN  
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00048'
                     LET g_errparam.extend = g_bgbb_d[l_ac].bgbb003
                     LET g_errparam.popup = FALSE
                     CALL cl_err()               
                     NEXT FIELD bgbb003
                  END IF 
                  IF g_bgbb_d[l_ac].bgbb003<>0 THEN
                     #当没有勾选外币时原币金额=本币金额
                     IF g_bgba_m.bgba009 <> 'Y'  THEN 
                        LET g_bgbb_d[l_ac].bgbb010 = g_bgbb_d[l_ac].bgbb003
                     END IF
                  END IF
                  #取得幣別參照表號
                  SELECT ooef014 INTO l_ooef014 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_bgba_m.bgba005
                  CALL s_curr_sel_ooaj004(l_ooef014,g_bgba_m.bgba006) RETURNING l_ooaj004
                  CALL s_num_round('1',g_bgbb_d[l_ac].bgbb003,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb003
                  #重推匯率
                  LET g_bgbb_d[l_ac].bgbb009 = g_bgbb_d[l_ac].bgbb003 / g_bgbb_d[l_ac].bgbb010
                  CALL abgt030_set_entry_b('')
                  CALL abgt030_set_no_entry_b('')
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb003
            #add-point:ON CHANGE bgbb003 name="input.g.page1.bgbb003"
            IF g_bgbb_d[l_ac].bgbb003=0 OR cl_null(g_bgbb_d[l_ac].bgbb003) THEN
               CALL cl_set_comp_entry('bgbb004',TRUE)
            ELSE
               CALL cl_set_comp_entry('bgbb004',FALSE)            
            END IF 
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbb004
            #add-point:BEFORE FIELD bgbb004 name="input.b.page1.bgbb004"
            #161129-00019#2 ---s---
            IF (cl_null(g_bgbb_d[l_ac].bgbb003) OR g_bgbb_d[l_ac].bgbb003 =0 ) AND 
               (cl_null(g_bgbb_d[l_ac].bgbb004) OR g_bgbb_d[l_ac].bgbb004 =0 ) THEN
               SELECT SUM(bgbb003),SUM(bgbb004) INTO l_sum_bgbb003,l_sum_bgbb004
                 FROM bgbb_t WHERE bgbbent = g_enterprise
                  AND bgbbdocno = g_bgba_m.bgbadocno
               IF cl_null(l_sum_bgbb003) THEN LET l_sum_bgbb003 = 0 END IF
               IF cl_null(l_sum_bgbb004) THEN LET l_sum_bgbb004 = 0 END IF
               LET l_net = 0 
               IF l_sum_bgbb003 > l_sum_bgbb004 THEN
                  LET g_bgbb_d[l_ac].bgbb004 = l_sum_bgbb003 - l_sum_bgbb004
                  LET g_bgbb_d[l_ac].bgbb003 = 0
               ELSE
                  LET g_bgbb_d[l_ac].bgbb003 = l_sum_bgbb004 - l_sum_bgbb003            
                  LET g_bgbb_d[l_ac].bgbb004 = 0
               END IF
               DISPLAY BY NAME g_bgbb_d[l_ac].bgbb003,g_bgbb_d[l_ac].bgbb004
            END IF
            #161129-00019#2 ---e---
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbb004
            
            #add-point:AFTER FIELD bgbb004 name="input.a.page1.bgbb004"
            IF NOT cl_null(g_bgbb_d[l_ac].bgbb004) THEN
               IF g_bgbb_d[l_ac].bgbb004 <> g_bgbb_d_o.bgbb004 OR cl_null(g_bgbb_d_o.bgbb004) THEN
                  #如果借贷都有值的话，停在改栏位
                  IF g_bgbb_d[l_ac].bgbb003 <> 0  AND g_bgbb_d[l_ac].bgbb004<>0 THEN  
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00048'
                     LET g_errparam.extend = g_bgbb_d[l_ac].bgbb004
                     LET g_errparam.popup = FALSE
                     CALL cl_err()               
                     NEXT FIELD bgbb004
                  END IF 
                  IF g_bgbb_d[l_ac].bgbb004<>0 THEN
                     #当没有勾选外币时原币金额=本币金额
                     IF g_bgba_m.bgba009 <> 'Y'  THEN 
                        LET g_bgbb_d[l_ac].bgbb010 = g_bgbb_d[l_ac].bgbb004
                     END IF
                  END IF
                  #取得幣別參照表號
                  SELECT ooef014 INTO l_ooef014 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_bgba_m.bgba005
                  CALL s_curr_sel_ooaj004(l_ooef014,g_bgba_m.bgba006) RETURNING l_ooaj004
                  CALL s_num_round('1',g_bgbb_d[l_ac].bgbb004,l_ooaj004) RETURNING g_bgbb_d[l_ac].bgbb004
                  #重推匯率
                  LET g_bgbb_d[l_ac].bgbb009 = g_bgbb_d[l_ac].bgbb004 / g_bgbb_d[l_ac].bgbb010
                  CALL abgt030_set_entry_b('')
                  CALL abgt030_set_no_entry_b('')
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbb004
            #add-point:ON CHANGE bgbb004 name="input.g.page1.bgbb004"
            IF g_bgbb_d[l_ac].bgbb004=0 OR cl_null(g_bgbb_d[l_ac].bgbb004)  THEN
               CALL cl_set_comp_entry('bgbb003',TRUE)
            ELSE
               CALL cl_set_comp_entry('bgbb003',FALSE)            
            END IF 
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.bgbbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbbseq
            #add-point:ON ACTION controlp INFIELD bgbbseq name="input.c.page1.bgbbseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbb001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb001
            #add-point:ON ACTION controlp INFIELD bgbb001 name="input.c.page1.bgbb001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb002
            #add-point:ON ACTION controlp INFIELD bgbb002 name="input.c.page1.bgbb002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.lc_subject
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD lc_subject
            #add-point:ON ACTION controlp INFIELD lc_subject name="input.c.page1.lc_subject"
           #i開窗-預算細項
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bgbb_d[l_ac].lc_subject          
            #抓取預算項目
            LET g_qryparam.where = " bgae006 IN (SELECT bgaa008 FROM bgaa_t ",
                                      "              WHERE bgaaent = ",g_enterprise,
                                      "                AND bgaa001 = '",g_bgba_m.bgba001,"') "   #存在預算編號的預算項目參照表   
            LET g_qryparam.where = g_qryparam.where CLIPPED,
                                         " AND bgae001 IN ( SELECT bgal003 FROM bgal_t WHERE bgalent = ",g_enterprise," ",
                                                          "    AND bgal001 = '",g_bgba_m.bgba001,"' ",
                                                          "    AND bgal002 = '",g_bgba_m.bgba005,"' ",
                                                          "    AND bgalstus = 'Y' )"
                                                                      
            CALL q_bgae001()
            
            LET g_bgbb_d[l_ac].lc_subject = g_qryparam.return1
            LET g_bgbb_d[l_ac].bgbb002 = g_qryparam.return1
            DISPLAY BY NAME g_bgbb_d[l_ac].lc_subject,g_bgbb_d[l_ac].bgbb002
            NEXT FIELD lc_subject
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb008
            #add-point:ON ACTION controlp INFIELD bgbb008 name="input.c.page1.bgbb008"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'i'
            LET g_qryparam.default1 = g_bgbb_d[l_ac].bgbb008             #給予default值
            CALL q_ooai001()                                             #呼叫開窗
            LET g_bgbb_d[l_ac].bgbb008 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bgbb_d[l_ac].bgbb008 TO bgbb008                    #顯示到畫面上
            NEXT FIELD bgbb008                                           #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb009
            #add-point:ON ACTION controlp INFIELD bgbb009 name="input.c.page1.bgbb009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.edit1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD edit1
            #add-point:ON ACTION controlp INFIELD edit1 name="input.c.page1.edit1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb010
            #add-point:ON ACTION controlp INFIELD bgbb010 name="input.c.page1.bgbb010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb003
            #add-point:ON ACTION controlp INFIELD bgbb003 name="input.c.page1.bgbb003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbb004
            #add-point:ON ACTION controlp INFIELD bgbb004 name="input.c.page1.bgbb004"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_bgbb_d[l_ac].* = g_bgbb_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE abgt030_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_bgbb_d[l_ac].bgbbseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_bgbb_d[l_ac].* = g_bgbb_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               CALL cl_err_collect_init()
               CALL abgt030_subject_chk(g_bgbb_d[l_ac].bgbb002) RETURNING g_sub_success
               CALL cl_err_collect_show()
               IF NOT g_sub_success THEN
                  NEXT FIELD CURRENT
               END IF
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL abgt030_bgbb_t_mask_restore('restore_mask_o')
      
               UPDATE bgbb_t SET (bgbbdocno,bgbbseq,bgbb001,bgbb002,bgbb008,bgbb009,bgbb010,bgbb003, 
                   bgbb004) = (g_bgba_m.bgbadocno,g_bgbb_d[l_ac].bgbbseq,g_bgbb_d[l_ac].bgbb001,g_bgbb_d[l_ac].bgbb002, 
                   g_bgbb_d[l_ac].bgbb008,g_bgbb_d[l_ac].bgbb009,g_bgbb_d[l_ac].bgbb010,g_bgbb_d[l_ac].bgbb003, 
                   g_bgbb_d[l_ac].bgbb004)
                WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m.bgbadocno 
 
                  AND bgbbseq = g_bgbb_d_t.bgbbseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_bgbb_d[l_ac].* = g_bgbb_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bgbb_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_bgbb_d[l_ac].* = g_bgbb_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bgbb_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgba_m.bgbadocno
               LET gs_keys_bak[1] = g_bgbadocno_t
               LET gs_keys[2] = g_bgbb_d[g_detail_idx].bgbbseq
               LET gs_keys_bak[2] = g_bgbb_d_t.bgbbseq
               CALL abgt030_update_b('bgbb_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL abgt030_bgbb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_bgbb_d[g_detail_idx].bgbbseq = g_bgbb_d_t.bgbbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_bgba_m.bgbadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_bgbb_d_t.bgbbseq
 
                  CALL abgt030_key_update_b(gs_keys,'bgbb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_bgba_m),util.JSON.stringify(g_bgbb_d_t)
               LET g_log2 = util.JSON.stringify(g_bgba_m),util.JSON.stringify(g_bgbb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               #開啟業務資訊
               LET l_bgae004 = ''
               SELECT bgae004 INTO l_bgae004 FROM bgae_t 
                WHERE bgaeent = g_enterprise 
                  AND bgae006 = g_bgaa.bgaa008
                  AND bgae001 = g_bgbb_d[g_detail_idx].bgbb002
               IF l_bgae004 = 2 OR l_bgae004 = 3 THEN
                  CALL abgt030_02(g_bgba_m.bgbadocno,g_bgbb_d[l_ac].bgbbseq,g_bgbb_d[g_detail_idx].bgbb010) 
                     RETURNING g_bgba_m.bgbb005,g_bgba_m.bgbb006,g_bgba_m.bgbb007,g_bgbb_d[g_detail_idx].bgbb010
                  IF cl_null(g_bgbb_d[l_ac].bgbb003) OR g_bgbb_d[l_ac].bgbb003 = 0 THEN
                     LET g_bgbb_d[l_ac].bgbb003 = 0
                     LET g_bgbb_d[l_ac].bgbb004 = g_bgbb_d[l_ac].bgbb009 * g_bgbb_d[l_ac].bgbb010                   
                  ELSE
                     LET g_bgbb_d[l_ac].bgbb004 = 0
                     LET g_bgbb_d[l_ac].bgbb003 = g_bgbb_d[l_ac].bgbb009 * g_bgbb_d[l_ac].bgbb010                  
                  END IF
                  UPDATE bgbb_t SET bgbb004 = g_bgbb_d[l_ac].bgbb004,bgbb003 = g_bgbb_d[l_ac].bgbb003 
                   WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m.bgbadocno
                     AND bgbbseq = g_bgbb_d[l_ac].bgbbseq
                  DISPLAY BY NAME g_bgbb_d[l_ac].bgbb010,g_bgbb_d[l_ac].bgbb003,g_bgbb_d[l_ac].bgbb004
               END IF
               #將離開科目欄位后的业务咨询/核算项 insert進DB
               CALL abgt030_update_forzen() RETURNING g_sub_success 
               IF NOT g_sub_success THEN
                  CALL s_transaction_end('N','0')                    
                  NEXT FIELD CURRENT
               END IF    
               CALL abgt030_subject()
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL abgt030_unlock_b("bgbb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            SELECT SUM(bgbb003),SUM(bgbb004) INTO l_sum_bgbb003,l_sum_bgbb004
              FROM bgbb_t 
             WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m.bgbadocno
            IF cl_null(l_sum_bgbb003) THEN LET l_sum_bgbb003 = 0 END IF
            IF cl_null(l_sum_bgbb004) THEN LET l_sum_bgbb004 = 0 END IF            
            #借貸金額需相等
            IF l_sum_bgbb003 <> l_sum_bgbb004 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 'agl-00050'
               LET g_errparam.popup  = TRUE 
               CALL cl_err()    
               NEXT FIELD bgbb003               
            END IF
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_bgbb_d[li_reproduce_target].* = g_bgbb_d[li_reproduce].*
 
               LET g_bgbb_d[li_reproduce_target].bgbbseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_bgbb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_bgbb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="abgt030.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            NEXT FIELD bgba001
            #end add-point  
            NEXT FIELD bgbadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bgbbseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
    SELECT SUM(bgbb003),SUM(bgbb004) INTO l_sum_bgbb003,l_sum_bgbb004
      FROM bgbb_t 
     WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m.bgbadocno
    IF cl_null(l_sum_bgbb003) THEN LET l_sum_bgbb003 = 0 END IF
    IF cl_null(l_sum_bgbb004) THEN LET l_sum_bgbb004 = 0 END IF            
    #借貸金額需相等
    IF l_sum_bgbb003 <> l_sum_bgbb004 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.extend = ''
       LET g_errparam.code   = 'agl-00050'
       LET g_errparam.popup  = TRUE 
       CALL cl_err()    
       CALL abgt030_input('u')            
    END IF




   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abgt030_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL abgt030_b_fill() #單身填充
      CALL abgt030_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL abgt030_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   LET g_bgba_m.bgba001_desc = s_desc_get_budget_desc(g_bgba_m.bgba001)
   LET g_bgba_m.bgba005_desc = s_desc_get_department_desc(g_bgba_m.bgba005)
   #end add-point
   
   #遮罩相關處理
   LET g_bgba_m_mask_o.* =  g_bgba_m.*
   CALL abgt030_bgba_t_mask()
   LET g_bgba_m_mask_n.* =  g_bgba_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bgba_m.bgba001,g_bgba_m.bgba001_desc,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba003, 
       g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba010_desc,g_bgba_m.bgba005,g_bgba_m.bgba005_desc, 
       g_bgba_m.bgba006,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaownid_desc, 
       g_bgba_m.bgbaowndp,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdp_desc,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamodid_desc,g_bgba_m.bgbamoddt, 
       g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfid_desc,g_bgba_m.bgbacnfdt,g_bgba_m.bgbb011,g_bgba_m.bgbb011_desc, 
       g_bgba_m.bgbb012,g_bgba_m.bgbb012_desc,g_bgba_m.bgbb013,g_bgba_m.bgbb013_desc,g_bgba_m.bgbb014, 
       g_bgba_m.bgbb014_desc,g_bgba_m.bgbb015,g_bgba_m.bgbb015_desc,g_bgba_m.bgbb016,g_bgba_m.bgbb016_desc, 
       g_bgba_m.bgbb017,g_bgba_m.bgbb017_desc,g_bgba_m.bgbb024,g_bgba_m.bgbb024_desc,g_bgba_m.bgbb021, 
       g_bgba_m.bgbb022,g_bgba_m.bgbb022_desc,g_bgba_m.bgbb023,g_bgba_m.bgbb023_desc,g_bgba_m.bgbb018, 
       g_bgba_m.bgbb018_desc,g_bgba_m.bgbb019,g_bgba_m.bgbb019_desc,g_bgba_m.bgbb020,g_bgba_m.bgbb020_desc, 
       g_bgba_m.bgbb025,g_bgba_m.bgbb026,g_bgba_m.bgbb027,g_bgba_m.bgbb028,g_bgba_m.bgbb029,g_bgba_m.bgbb030, 
       g_bgba_m.bgbb031,g_bgba_m.bgbb032,g_bgba_m.bgbb033,g_bgba_m.bgbb034,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1, 
       g_bgba_m.bgbb010_1,g_bgba_m.bgbb005,g_bgba_m.bgbb006,g_bgba_m.bgbb007
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_bgba_m.bgbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bgbb_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      #抓取原来的核算项来组合科目栏位
      CALL abgt030_subject()   
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL abgt030_detail_show()
 
   #add-point:show段之後 name="show.after"
   IF cl_null(g_detail_idx) THEN 
      LET g_detail_idx=1
   END IF      
   CALL abgt030_b_detail()
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION abgt030_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION abgt030_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE bgba_t.bgbadocno 
   DEFINE l_oldno     LIKE bgba_t.bgbadocno 
 
   DEFINE l_master    RECORD LIKE bgba_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE bgbb_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_bgba_m.bgbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
    
   LET g_bgba_m.bgbadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_bgba_m.bgbaownid = g_user
      LET g_bgba_m.bgbaowndp = g_dept
      LET g_bgba_m.bgbacrtid = g_user
      LET g_bgba_m.bgbacrtdp = g_dept 
      LET g_bgba_m.bgbacrtdt = cl_get_current()
      LET g_bgba_m.bgbamodid = g_user
      LET g_bgba_m.bgbamoddt = cl_get_current()
      LET g_bgba_m.bgbastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_bgba_m.bgbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL abgt030_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_bgba_m.* TO NULL
      INITIALIZE g_bgbb_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL abgt030_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abgt030_set_act_visible()   
   CALL abgt030_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " bgbaent = " ||g_enterprise|| " AND",
                      " bgbadocno = '", g_bgba_m.bgbadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abgt030_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL abgt030_idx_chk()
   
   LET g_data_owner = g_bgba_m.bgbaownid      
   LET g_data_dept  = g_bgba_m.bgbaowndp
   
   #功能已完成,通報訊息中心
   CALL abgt030_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION abgt030_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bgbb_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abgt030_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM bgbb_t
    WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgbadocno_t
 
    INTO TEMP abgt030_detail
 
   #將key修正為調整後   
   UPDATE abgt030_detail 
      #更新key欄位
      SET bgbbdocno = g_bgba_m.bgbadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO bgbb_t SELECT * FROM abgt030_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abgt030_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.delete" >}
#+ 資料刪除
PRIVATE FUNCTION abgt030_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_bgac002        LIKE bgac_t.bgac002
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_bgba_m.bgbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN abgt030_cl USING g_enterprise,g_bgba_m.bgbadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abgt030_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE abgt030_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abgt030_master_referesh USING g_bgba_m.bgbadocno INTO g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno, 
       g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba006, 
       g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt, 
       g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp_desc, 
       g_bgba_m.bgbamodid_desc,g_bgba_m.bgbacnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT abgt030_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_bgba_m_mask_o.* =  g_bgba_m.*
   CALL abgt030_bgba_t_mask()
   LET g_bgba_m_mask_n.* =  g_bgba_m.*
   
   CALL abgt030_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL abgt030_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_bgbadocno_t = g_bgba_m.bgbadocno
 
 
      DELETE FROM bgba_t
       WHERE bgbaent = g_enterprise AND bgbadocno = g_bgba_m.bgbadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_bgba_m.bgbadocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      SELECT glaald INTO g_glaald FROM glaa_t,ooef_t
       WHERE glaaent = g_enterprise
         AND glaacomp = ooef017           AND glaaent = ooefent
         AND ooef001 = g_bgba_m.bgba005   AND glaa014 = 'Y'
      #取當期最大日         
      SELECT MAX(bgac002) INTO l_bgac002 FROM bgac_t 
       WHERE bgacent = g_enterprise AND bgac001 = g_bgba_m.bgba003 AND bgac004 = g_bgba_m.bgba004         
      
      IF NOT s_aooi200_fin_del_docno(g_glaald,g_bgba_m.bgbadocno,l_bgac002) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM bgbb_t
       WHERE bgbbent = g_enterprise AND bgbbdocno = g_bgba_m.bgbadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bgbb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_bgba_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE abgt030_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_bgbb_d.clear() 
 
     
      CALL abgt030_ui_browser_refresh()  
      #CALL abgt030_ui_headershow()  
      #CALL abgt030_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL abgt030_browser_fill("")
         CALL abgt030_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE abgt030_cl
 
   #功能已完成,通報訊息中心
   CALL abgt030_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="abgt030.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION abgt030_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   SELECT bgaa002,bgaa003,bgaa008,bgaa009 INTO g_bgaa.*
     FROM bgaa_t
    WHERE bgaaent = g_enterprise
      AND bgaa001 = g_bgba_m.bgba001
   #end add-point
   
   #清空第一階單身
   CALL g_bgbb_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF abgt030_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT bgbbseq,bgbb001,bgbb002,bgbb008,bgbb009,bgbb010,bgbb003,bgbb004  FROM bgbb_t", 
                
                     " INNER JOIN bgba_t ON bgbaent = " ||g_enterprise|| " AND bgbadocno = bgbbdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                     
                     " WHERE bgbbent=? AND bgbbdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY bgbb_t.bgbbseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abgt030_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR abgt030_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_bgba_m.bgbadocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_bgba_m.bgbadocno INTO g_bgbb_d[l_ac].bgbbseq,g_bgbb_d[l_ac].bgbb001, 
          g_bgbb_d[l_ac].bgbb002,g_bgbb_d[l_ac].bgbb008,g_bgbb_d[l_ac].bgbb009,g_bgbb_d[l_ac].bgbb010, 
          g_bgbb_d[l_ac].bgbb003,g_bgbb_d[l_ac].bgbb004   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         CALL abgt030_subject()
         #显示的时候，如果金额为0，则显示空白
         IF g_bgbb_d[l_ac].bgbb003 = 0 THEN
            LET g_bgbb_d[l_ac].bgbb003 = ''
         END IF         
         IF g_bgbb_d[l_ac].bgbb004 = 0 THEN
            LET g_bgbb_d[l_ac].bgbb004 = ''
         END IF
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_bgbb_d.deleteElement(g_bgbb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abgt030_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_bgbb_d.getLength()
      LET g_bgbb_d_mask_o[l_ac].* =  g_bgbb_d[l_ac].*
      CALL abgt030_bgbb_t_mask()
      LET g_bgbb_d_mask_n[l_ac].* =  g_bgbb_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION abgt030_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM bgbb_t
       WHERE bgbbent = g_enterprise AND
         bgbbdocno = ps_keys_bak[1] AND bgbbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bgbb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION abgt030_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO bgbb_t
                  (bgbbent,
                   bgbbdocno,
                   bgbbseq
                   ,bgbb001,bgbb002,bgbb008,bgbb009,bgbb010,bgbb003,bgbb004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_bgbb_d[g_detail_idx].bgbb001,g_bgbb_d[g_detail_idx].bgbb002,g_bgbb_d[g_detail_idx].bgbb008, 
                       g_bgbb_d[g_detail_idx].bgbb009,g_bgbb_d[g_detail_idx].bgbb010,g_bgbb_d[g_detail_idx].bgbb003, 
                       g_bgbb_d[g_detail_idx].bgbb004)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bgbb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bgbb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION abgt030_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bgbb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL abgt030_bgbb_t_mask_restore('restore_mask_o')
               
      UPDATE bgbb_t 
         SET (bgbbdocno,
              bgbbseq
              ,bgbb001,bgbb002,bgbb008,bgbb009,bgbb010,bgbb003,bgbb004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_bgbb_d[g_detail_idx].bgbb001,g_bgbb_d[g_detail_idx].bgbb002,g_bgbb_d[g_detail_idx].bgbb008, 
                  g_bgbb_d[g_detail_idx].bgbb009,g_bgbb_d[g_detail_idx].bgbb010,g_bgbb_d[g_detail_idx].bgbb003, 
                  g_bgbb_d[g_detail_idx].bgbb004) 
         WHERE bgbbent = g_enterprise AND bgbbdocno = ps_keys_bak[1] AND bgbbseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bgbb_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bgbb_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL abgt030_bgbb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION abgt030_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION abgt030_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION abgt030_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL abgt030_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bgbb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN abgt030_bcl USING g_enterprise,
                                       g_bgba_m.bgbadocno,g_bgbb_d[g_detail_idx].bgbbseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abgt030_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abgt030_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abgt030_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION abgt030_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("bgbadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bgbadocno",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("bgba001,bgba002,bgba004,bgba005",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_visible('bgbb008,bgbb009,bgbb010',TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION abgt030_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("bgbadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("bgbadocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("bgba001,bgba002,bgba004,bgba005,bgba010",FALSE)
   END IF 
   
   IF g_bgba_m.bgba009 = 'N' THEN               
      CALL cl_set_comp_visible('bgbb008,bgbb009,bgbb010',FALSE)
   END IF

   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION abgt030_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry('bgbb003,bgbb004',TRUE)    
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION abgt030_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   IF (g_bgbb_d[l_ac].bgbb003 = 0 OR cl_null(g_bgbb_d[l_ac].bgbb003)) AND g_bgbb_d[l_ac].bgbb004 <> 0 THEN
      CALL cl_set_comp_entry('bgbb003',FALSE)  
   END IF 
   IF (g_bgbb_d[l_ac].bgbb004 = 0 OR cl_null(g_bgbb_d[l_ac].bgbb004)) AND g_bgbb_d[l_ac].bgbb003 <> 0 THEN
      CALL cl_set_comp_entry('bgbb004',FALSE)  
   END IF 
 
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION abgt030_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALl cl_set_act_visible("modify,modify_detail", TRUE) 
   CALL cl_set_comp_visible('bgbb008,bgbb009,bgbb010',TRUE)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION abgt030_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:2)
   IF g_bgba_m.bgbastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

  IF g_bgba_m.bgba007  <> '00' THEN 
     CALl cl_set_act_visible("modify,modify_detail,delete", FALSE) 
  END IF
  IF g_bgba_m.bgba009 = 'N' THEN               
      CALL cl_set_comp_visible('bgbb008,bgbb009,bgbb010',FALSE)
   END IF
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION abgt030_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION abgt030_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION abgt030_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bgbadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "bgba_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bgbb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION abgt030_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_bgba_m.bgbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN abgt030_cl USING g_enterprise,g_bgba_m.bgbadocno
   IF STATUS THEN
      CLOSE abgt030_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abgt030_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE abgt030_master_referesh USING g_bgba_m.bgbadocno INTO g_bgba_m.bgba001,g_bgba_m.bgba002,g_bgba_m.bgbadocno, 
       g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005,g_bgba_m.bgba006, 
       g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt, 
       g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp_desc, 
       g_bgba_m.bgbamodid_desc,g_bgba_m.bgbacnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT abgt030_action_chk() THEN
      CLOSE abgt030_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_bgba_m.bgba001,g_bgba_m.bgba001_desc,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba003, 
       g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba010_desc,g_bgba_m.bgba005,g_bgba_m.bgba005_desc, 
       g_bgba_m.bgba006,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaownid_desc, 
       g_bgba_m.bgbaowndp,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtid_desc,g_bgba_m.bgbacrtdp, 
       g_bgba_m.bgbacrtdp_desc,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamodid_desc,g_bgba_m.bgbamoddt, 
       g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfid_desc,g_bgba_m.bgbacnfdt,g_bgba_m.bgbb011,g_bgba_m.bgbb011_desc, 
       g_bgba_m.bgbb012,g_bgba_m.bgbb012_desc,g_bgba_m.bgbb013,g_bgba_m.bgbb013_desc,g_bgba_m.bgbb014, 
       g_bgba_m.bgbb014_desc,g_bgba_m.bgbb015,g_bgba_m.bgbb015_desc,g_bgba_m.bgbb016,g_bgba_m.bgbb016_desc, 
       g_bgba_m.bgbb017,g_bgba_m.bgbb017_desc,g_bgba_m.bgbb024,g_bgba_m.bgbb024_desc,g_bgba_m.bgbb021, 
       g_bgba_m.bgbb022,g_bgba_m.bgbb022_desc,g_bgba_m.bgbb023,g_bgba_m.bgbb023_desc,g_bgba_m.bgbb018, 
       g_bgba_m.bgbb018_desc,g_bgba_m.bgbb019,g_bgba_m.bgbb019_desc,g_bgba_m.bgbb020,g_bgba_m.bgbb020_desc, 
       g_bgba_m.bgbb025,g_bgba_m.bgbb026,g_bgba_m.bgbb027,g_bgba_m.bgbb028,g_bgba_m.bgbb029,g_bgba_m.bgbb030, 
       g_bgba_m.bgbb031,g_bgba_m.bgbb032,g_bgba_m.bgbb033,g_bgba_m.bgbb034,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1, 
       g_bgba_m.bgbb010_1,g_bgba_m.bgbb005,g_bgba_m.bgbb006,g_bgba_m.bgbb007
 
   CASE g_bgba_m.bgbastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   IF g_bgba_m.bgbastus = 'X' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'anm-00044'
      LET g_errparam.extend = g_bgba_m.bgbadocno
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE abgt030_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_bgba_m.bgbastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,undeduct",TRUE) 
      CALL cl_set_act_visible("closed",FALSE)
      
      CASE g_bgba_m.bgbastus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold,invalid,undeduct,posted",FALSE)
            CALL cl_set_act_visible("final_confirmed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF

         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            CALL cl_set_act_visible("final_confirmed",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
            CALL cl_set_act_visible("final_confirmed",FALSE)

         WHEN "X"
            CALL s_transaction_end('N','0')
            RETURN

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,invalid,undeduct",FALSE)
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            CALL cl_set_act_visible("final_confirmed",FALSE)

         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)
             CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
             CALL cl_set_act_visible("final_confirmed",FALSE)

         WHEN "FC"
             CALL cl_set_act_visible("confirmed ",TRUE)
             CALL cl_set_act_visible("invalid,unconfirmed,final_confirmed",FALSE)
         WHEN "S"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted",FALSE)
      END CASE
      
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT abgt030_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE abgt030_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT abgt030_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE abgt030_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      ON ACTION undeduct
         LET lc_state = "Y"
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_bgba_m.bgbastus = lc_state OR cl_null(lc_state) THEN
      CLOSE abgt030_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   #確認
   IF lc_state = 'Y' THEN
      CALL cl_err_collect_init()      
      IF NOT s_abgt030_conf_chk(g_bgba_m.bgbadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL s_transaction_end('N','0')
            CALL cl_err_collect_show()
            RETURN
         ELSE
            CALL s_transaction_begin()            
            IF NOT s_abgt030_conf_upd(g_bgba_m.bgbadocno) THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
               #若條件中包含1=2,代表是一開啟程式未下條件就新增;那麼應該重新給予條件=畫面上的這一筆資料(且狀態碼為異動後的)
               IF g_wc MATCHES '*1=2*' THEN
                  LET g_wc = " bgbadocno ='",g_bgba_m.bgbadocno,"' "
               END IF
            END IF
         END IF
      END IF
   END IF
   #取消確認
   IF lc_state = 'N' THEN
      CALL cl_err_collect_init()
      IF NOT s_abgt030_unconf_chk(g_bgba_m.bgbadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00110') THEN
            CALL s_transaction_end('N','0')
            CALL cl_err_collect_show()
            RETURN
         ELSE
            CALL s_transaction_begin()
            IF NOT s_abgt030_unconf_upd(g_bgba_m.bgbadocno) THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
            END IF
         END IF
      END IF
   END IF
   
   #過帳
   IF lc_state = 'S' THEN
      CALL cl_err_collect_init()
      IF NOT s_abgt030_posted_chk(g_bgba_m.bgbadocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN    #一定要RETURN,避免執行後面的UPDATE狀態的程式段
      ELSE
         #IF NOT cl_ask_confirm('abg-00232') THEN
         #   CALL s_transaction_end('N','0')      
         #   CALL cl_err_collect_show()
         #   RETURN
         #ELSE
            CALL s_transaction_begin()
            IF NOT s_abgt030_posted_upd(g_bgba_m.bgbadocno) THEN
               CALL s_transaction_end('N','0')   #避免transaction被卡住,所以 rollback 後 再顯示錯誤訊息
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
            END IF
         #END IF
      END IF
   END IF 
   #end add-point
   
   LET g_bgba_m.bgbamodid = g_user
   LET g_bgba_m.bgbamoddt = cl_get_current()
   LET g_bgba_m.bgbastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE bgba_t 
      SET (bgbastus,bgbamodid,bgbamoddt) 
        = (g_bgba_m.bgbastus,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt)     
    WHERE bgbaent = g_enterprise AND bgbadocno = g_bgba_m.bgbadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE abgt030_master_referesh USING g_bgba_m.bgbadocno INTO g_bgba_m.bgba001,g_bgba_m.bgba002, 
          g_bgba_m.bgbadocno,g_bgba_m.bgba003,g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba005, 
          g_bgba_m.bgba006,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid,g_bgba_m.bgbaowndp, 
          g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtdp,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamoddt, 
          g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfdt,g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid_desc, 
          g_bgba_m.bgbacrtdp_desc,g_bgba_m.bgbamodid_desc,g_bgba_m.bgbacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_bgba_m.bgba001,g_bgba_m.bgba001_desc,g_bgba_m.bgba002,g_bgba_m.bgbadocno,g_bgba_m.bgba003, 
          g_bgba_m.bgba004,g_bgba_m.bgba007,g_bgba_m.bgba010,g_bgba_m.bgba010_desc,g_bgba_m.bgba005, 
          g_bgba_m.bgba005_desc,g_bgba_m.bgba006,g_bgba_m.bgba009,g_bgba_m.bgbastus,g_bgba_m.bgbaownid, 
          g_bgba_m.bgbaownid_desc,g_bgba_m.bgbaowndp,g_bgba_m.bgbaowndp_desc,g_bgba_m.bgbacrtid,g_bgba_m.bgbacrtid_desc, 
          g_bgba_m.bgbacrtdp,g_bgba_m.bgbacrtdp_desc,g_bgba_m.bgbacrtdt,g_bgba_m.bgbamodid,g_bgba_m.bgbamodid_desc, 
          g_bgba_m.bgbamoddt,g_bgba_m.bgbacnfid,g_bgba_m.bgbacnfid_desc,g_bgba_m.bgbacnfdt,g_bgba_m.bgbb011, 
          g_bgba_m.bgbb011_desc,g_bgba_m.bgbb012,g_bgba_m.bgbb012_desc,g_bgba_m.bgbb013,g_bgba_m.bgbb013_desc, 
          g_bgba_m.bgbb014,g_bgba_m.bgbb014_desc,g_bgba_m.bgbb015,g_bgba_m.bgbb015_desc,g_bgba_m.bgbb016, 
          g_bgba_m.bgbb016_desc,g_bgba_m.bgbb017,g_bgba_m.bgbb017_desc,g_bgba_m.bgbb024,g_bgba_m.bgbb024_desc, 
          g_bgba_m.bgbb021,g_bgba_m.bgbb022,g_bgba_m.bgbb022_desc,g_bgba_m.bgbb023,g_bgba_m.bgbb023_desc, 
          g_bgba_m.bgbb018,g_bgba_m.bgbb018_desc,g_bgba_m.bgbb019,g_bgba_m.bgbb019_desc,g_bgba_m.bgbb020, 
          g_bgba_m.bgbb020_desc,g_bgba_m.bgbb025,g_bgba_m.bgbb026,g_bgba_m.bgbb027,g_bgba_m.bgbb028, 
          g_bgba_m.bgbb029,g_bgba_m.bgbb030,g_bgba_m.bgbb031,g_bgba_m.bgbb032,g_bgba_m.bgbb033,g_bgba_m.bgbb034, 
          g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1,g_bgba_m.bgbb010_1,g_bgba_m.bgbb005,g_bgba_m.bgbb006, 
          g_bgba_m.bgbb007
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE abgt030_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL abgt030_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="abgt030.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION abgt030_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bgbb_d.getLength() THEN
         LET g_detail_idx = g_bgbb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bgbb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bgbb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION abgt030_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL abgt030_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION abgt030_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="abgt030.status_show" >}
PRIVATE FUNCTION abgt030_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="abgt030.mask_functions" >}
&include "erp/abg/abgt030_mask.4gl"
 
{</section>}
 
{<section id="abgt030.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION abgt030_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL abgt030_show()
   CALL abgt030_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_bgba_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_bgbb_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL abgt030_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL abgt030_ui_headershow()
   CALL abgt030_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION abgt030_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL abgt030_ui_headershow()  
   CALL abgt030_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="abgt030.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION abgt030_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bgba_m.bgbadocno
   LET g_pk_array[1].column = 'bgbadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="abgt030.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="abgt030.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION abgt030_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL abgt030_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_bgba_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="abgt030.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION abgt030_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="abgt030.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 預算編號/組織/細項 檢核
# Memo...........:
# Usage..........: CALL abgt030_bgba001_bgba005_bgbb002_chk(p_bgba001,p_bgba005,p_bgbb002)
# Input parameter: p_bgaa002   預算編號
#                  p_bgbb005   預算組織
#                  p_bgaa002   預算細像
# Date & Author..: 2016/11/16 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_bgba001_bgba005_bgbb002_chk(p_bgba001,p_bgba005,p_bgbb002)
DEFINE p_bgba001     LIKE bgba_t.bgba001  #預算編號
DEFINE p_bgbb002     LIKE bgbb_t.bgbb002  #預算細項
DEFINE p_bgba005     LIKE bgba_t.bgba005  #預算組織
DEFINE l_bgaastus    LIKE bgaa_t.bgaastus
DEFINE l_bgaa006     LIKE bgaa_t.bgaa006 
DEFINE r_errno       LIKE gzze_t.gzze001
DEFINE r_success     LIKE type_t.num5

   LET r_errno = NULL
   LET r_success = TRUE
   IF NOT cl_null(p_bgba001)THEN       #單獨檢查預算編號
      CALL　s_abg2_bgaa001_chk(p_bgba001) RETURNING g_sub_success,g_errno
      IF NOT g_sub_success THEN
         LET r_success = FALSE
         LET r_errno  = g_errno
         RETURN r_success,r_errno
      END IF      
   END IF
   
   IF NOT cl_null(p_bgbb002) AND NOT cl_null(p_bgba001)THEN   
      #預算項目必須存在預算編號中的預算項目參照表中
      CALL s_abg_bgae001_chk(p_bgba001,'',p_bgbb002,'1') RETURNING g_sub_success,g_errno
      IF NOT g_sub_success THEN
         LET r_success = FALSE
         LET r_errno  = g_errno
         RETURN r_success,r_errno
      END IF
   END IF
   
   #檢查組織跟預算編號
   IF NOT cl_null(p_bgba001) AND NOT cl_null(p_bgba005)THEN
      IF NOT cl_null(g_bgba_m.bgba010) THEN
         CALL s_abg2_bgai004_chk(p_bgba001,g_bgba_m.bgba010,p_bgba005,'')
         IF NOT cl_null(g_errno)THEN
            LET r_success = FALSE
            LET r_errno   = g_errno
            RETURN r_success,r_errno
         END IF
      END IF
   END IF
   
   #檢查abgi100存在並有效
   IF NOT cl_null(p_bgba005) AND NOT cl_null(p_bgba001) AND NOT cl_null(p_bgbb002)THEN
      CALL s_abg_bgai_chk(p_bgba001,p_bgba005,p_bgbb002) RETURNING g_sub_success,g_errno
      IF NOT g_sub_success THEN
         LET r_success = FALSE
         LET r_errno = g_errno
         RETURN r_success,r_errno
      END IF
   END IF
   
   RETURN r_success,r_errno
END FUNCTION

################################################################################
# Descriptions...: 字串組合
# Memo...........:
# Usage..........: CALL abgt030_bgbb002()
# Date & Author..: 2016/11/17 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_bgbb002()
DEFINE l_bgbb002_desc      LIKE type_t.chr100
DEFINE r_bgbb002           STRING
DEFINE r_str               STRING
DEFINE l_desc              STRING
   
    
   LET r_bgbb002 = ''    #說明
   LET r_str = ''        #編號
   #取得細項說明   
   CALL s_abg_bgae001_desc(g_bgaa.bgaa008,g_bgbb_d[l_ac].bgbb002) RETURNING l_bgbb002_desc   
   
   #组合名稱以及核算项
   #部門編號
   IF NOT cl_null(g_bgba_m.bgbb011) THEN
      CALL s_desc_get_department_desc(g_bgba_m.bgbb011) RETURNING g_bgba_m.bgbb011_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb011_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb011_desc
      END IF
      IF NOT cl_null(r_str) THEN 
         LET r_str=r_str,'-',g_bgba_m.bgbb011
      ELSE
         LET r_str=g_bgba_m.bgbb011
      END IF    
   END IF 
   #成本利潤中心
   IF NOT cl_null(g_bgba_m.bgbb012) THEN
      CALL s_desc_get_department_desc(g_bgba_m.bgbb012) RETURNING g_bgba_m.bgbb012_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb012_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb012_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb012
      ELSE
         LET r_str=g_bgba_m.bgbb012
      END IF
   END IF 
   #區域
   IF NOT cl_null(g_bgba_m.bgbb013) THEN 
      CALL s_desc_get_acc_desc('287',g_bgba_m.bgbb013) RETURNING g_bgba_m.bgbb013_desc   
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb013_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb013_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb013
      ELSE
         LET r_str=g_bgba_m.bgbb013
      END IF      
   END IF 
   #交易客商
   IF NOT cl_null(g_bgba_m.bgbb014) THEN
      CALL s_desc_get_trading_partner_abbr_desc(g_bgba_m.bgbb014) RETURNING g_bgba_m.bgbb014_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb014_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb014_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb014
      ELSE
         LET r_str=g_bgba_m.bgbb014
      END IF      
   END IF 
   #帐款客商
   IF NOT cl_null(g_bgba_m.bgbb015) THEN
      CALL s_desc_get_trading_partner_abbr_desc(g_bgba_m.bgbb015) RETURNING g_bgba_m.bgbb015_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb015_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb015_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb015
      ELSE
         LET r_str=g_bgba_m.bgbb015
      END IF      
   END IF 
   #客群
   IF NOT cl_null(g_bgba_m.bgbb016) THEN
      CALL s_desc_get_acc_desc('281',g_bgba_m.bgbb016) RETURNING g_bgba_m.bgbb016_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb016_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb016_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb016
      ELSE
         LET r_str=g_bgba_m.bgbb016
      END IF      
   END IF 
   
   #产品分类
   IF NOT cl_null(g_bgba_m.bgbb017) THEN
      CALL s_desc_get_rtaxl003_desc(g_bgba_m.bgbb017) RETURNING g_bgba_m.bgbb017_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb017_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb017_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb017
      ELSE
         LET r_str=g_bgba_m.bgbb017
      END IF      
   END IF 
   
   #人员
   IF NOT cl_null(g_bgba_m.bgbb018) THEN
       CALL s_desc_get_person_desc(g_bgba_m.bgbb018) RETURNING g_bgba_m.bgbb018_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb018_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb018_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb018
      ELSE
         LET r_str=g_bgba_m.bgbb018
      END IF      
   END IF 
   
   #专案编号
   IF NOT cl_null(g_bgba_m.bgbb019) THEN
      CALL s_desc_get_project_desc(g_bgba_m.bgbb019) RETURNING g_bgba_m.bgbb019_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb019_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb019_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb019
      ELSE
         LET r_str=g_bgba_m.bgbb019
      END IF      
   END IF 
 
   #WBS
   IF NOT cl_null(g_bgba_m.bgbb020) THEN
      CALL s_desc_get_wbs_desc(g_bgba_m.bgbb027,g_bgba_m.bgbb020) RETURNING g_bgba_m.bgbb020_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb020_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb020_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb020
      ELSE
         LET r_str=g_bgba_m.bgbb020
      END IF      
   END IF 
   
   #經營方式
   IF NOT cl_null(g_bgba_m.bgbb021) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = '6013'
      LET g_ref_fields[2] = g_bgba_m.bgbb021
      CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001=? AND gzcbl002=? AND gzcbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET l_desc = g_rtn_fields[1]
      
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',l_desc
      ELSE
         LET r_bgbb002 = l_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb021
      ELSE
         LET r_str=g_bgba_m.bgbb021
      END IF      
   END IF 
   
   #渠道
   IF NOT cl_null(g_bgba_m.bgbb022) THEN
       CALL s_desc_get_oojdl003_desc(g_bgba_m.bgbb022) RETURNING g_bgba_m.bgbb022_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb022_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb022_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb022
      ELSE
         LET r_str=g_bgba_m.bgbb022
      END IF      
   END IF 
   
   #品牌
   IF NOT cl_null(g_bgba_m.bgbb023) THEN
      CALL s_desc_get_acc_desc('2002',g_bgba_m.bgbb023) RETURNING g_bgba_m.bgbb023_desc
      IF NOT cl_null(r_bgbb002) THEN
         LET r_bgbb002 = r_bgbb002 ,'-',g_bgba_m.bgbb023_desc
      ELSE
         LET r_bgbb002 = g_bgba_m.bgbb023_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_bgba_m.bgbb023
      ELSE
         LET r_str=g_bgba_m.bgbb023
      END IF      
   END IF 

   #组合科目名称以及核算项
   LET r_bgbb002 = l_bgbb002_desc,'\n',r_bgbb002
   IF NOT cl_null(r_str) THEN
      LET r_str="(",r_str,")"
   END IF                
   RETURN r_bgbb002,r_str    
   
END FUNCTION

################################################################################
# Descriptions...: 幣別檢核
# Memo...........:
# Usage..........: CALL abgt030_bgbb008_chk(p_bgbb008)
# Date & Author..: 2016/11/17 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_bgbb008_chk(p_bgbb008)
DEFINE r_success    LIKE type_t.num5
DEFINE r_errno      LIKE gzze_t.gzze001
DEFINE l_ooaistus   LIKE ooai_t.ooaistus
DEFINE p_bgbb008    LIKE bgbb_t.bgbb008
     
     LET r_errno = '' LET r_success = TRUE
     SELECT ooaistus INTO l_ooaistus FROM ooai_t
      WHERE ooaient = g_enterprise
        AND ooai001 = p_bgbb008
     CASE  
        WHEN SQLCA.sqlcode = 100   LET r_success = FALSE LET r_errno = 'aoo-00028' 
        WHEN l_ooaistus = 'N'      LET r_success = FALSE LET r_errno =  'sub-01302'  
     END CASE
     
     RETURN r_success,r_errno
END FUNCTION

################################################################################
# Descriptions...: 離開欄位之後update 核算項
# Memo...........:
# Usage..........: CALL abgt030_update_forzen()
# Date & Author..: 2016/11/18 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_update_forzen()
DEFINE r_success LIKE type_t.num5
DEFINE l_cnt     LIKE type_t.num5

   LET r_success =TRUE LET l_cnt = 0
   SELECT COUNT(1) INTO l_cnt FROM bgbb_t 
    WHERE bgbbent = g_enterprise
      AND bgbb011 = g_bgba_m.bgbb011 AND bgbb012 = g_bgba_m.bgbb012 AND bgbb013 = g_bgba_m.bgbb013
      AND bgbb014 = g_bgba_m.bgbb014 AND bgbb015 = g_bgba_m.bgbb015 AND bgbb016 = g_bgba_m.bgbb016
      AND bgbb017 = g_bgba_m.bgbb017 AND bgbb018 = g_bgba_m.bgbb018 AND bgbb019 = g_bgba_m.bgbb019
      AND bgbb020 = g_bgba_m.bgbb020 AND bgbb021 = g_bgba_m.bgbb021 AND bgbb022 = g_bgba_m.bgbb022
      AND bgbb023 = g_bgba_m.bgbb023 AND bgbb024 = g_bgba_m.bgbb024 AND bgbb025 = g_bgba_m.bgbb025
      AND bgbb026 = g_bgba_m.bgbb026 AND bgbb027 = g_bgba_m.bgbb027 AND bgbb028 = g_bgba_m.bgbb028
      AND bgbb029 = g_bgba_m.bgbb029 AND bgbb030 = g_bgba_m.bgbb030 AND bgbb031 = g_bgba_m.bgbb031
      AND bgbb032 = g_bgba_m.bgbb032 AND bgbb033 = g_bgba_m.bgbb033 AND bgbb034 = g_bgba_m.bgbb034
      AND bgbb005 = g_bgba_m.bgbb005 AND bgbb006 = g_bgba_m.bgbb006 AND bgbb007 = g_bgba_m.bgbb007  
      AND bgbbdocno = g_bgba_m.bgbadocno                                                           
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   IF l_cnt > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = '-239'
      LET g_errparam.extend = 'update bgbb_t'
      LET g_errparam.popup = TRUE
      CALL cl_err() 
      LET r_success = FALSE
   END IF    
      
   UPDATE bgbb_t SET bgbb011 = g_bgba_m.bgbb011,bgbb012 = g_bgba_m.bgbb012,bgbb013 = g_bgba_m.bgbb013,
                     bgbb014 = g_bgba_m.bgbb014,bgbb015 = g_bgba_m.bgbb015,bgbb016 = g_bgba_m.bgbb016,
                     bgbb017 = g_bgba_m.bgbb017,bgbb018 = g_bgba_m.bgbb018,bgbb019 = g_bgba_m.bgbb019,
                     bgbb020 = g_bgba_m.bgbb020,bgbb021 = g_bgba_m.bgbb021,bgbb022 = g_bgba_m.bgbb022,
                     bgbb023 = g_bgba_m.bgbb023,bgbb024 = g_bgba_m.bgbb024,bgbb025 = g_bgba_m.bgbb025,
                     bgbb026 = g_bgba_m.bgbb026,bgbb027 = g_bgba_m.bgbb027,bgbb028 = g_bgba_m.bgbb028,
                     bgbb029 = g_bgba_m.bgbb029,bgbb030 = g_bgba_m.bgbb030,bgbb031 = g_bgba_m.bgbb031,
                     bgbb032 = g_bgba_m.bgbb032,bgbb033 = g_bgba_m.bgbb033,bgbb034 = g_bgba_m.bgbb034,
                     bgbb005 = g_bgba_m.bgbb005,bgbb006 = g_bgba_m.bgbb006,bgbb007 = g_bgba_m.bgbb007                     
    WHERE bgbbent = g_enterprise
      AND bgbbdocno = g_bgba_m.bgbadocno
      AND bgbbseq =   g_bgbb_d[l_ac].bgbbseq

    IF SQLCA.SQLCODE THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = sqlca.sqlcode
       LET g_errparam.extend = 'upd bgbb_t'
       LET g_errparam.popup = TRUE
       CALL cl_err() 
       LET r_success = FALSE
   END IF


   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 預算名稱組合
# Memo...........:
# Usage..........: CALL abgt030_subject()
# Date & Author..: 2016/11/21 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_subject()
DEFINE l_bgbb002    STRING	  
DEFINE l_str        STRING
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_bgae036    LIKE bgae_t.bgae036
   
   #科目(核算項編號)+名称+核算项组合
   CALL abgt030_forzen_clear(1)   
    SELECT bgbb011,bgbb012,bgbb013,bgbb014,bgbb015,
          bgbb016,bgbb017,bgbb018,bgbb019,bgbb020,
          bgbb021,bgbb022,bgbb023,bgbb024 
     INTO g_bgba_m.bgbb011,g_bgba_m.bgbb012,g_bgba_m.bgbb013,g_bgba_m.bgbb014,g_bgba_m.bgbb015,
          g_bgba_m.bgbb016,g_bgba_m.bgbb017,g_bgba_m.bgbb018,g_bgba_m.bgbb019,g_bgba_m.bgbb020,
          g_bgba_m.bgbb021,g_bgba_m.bgbb022,g_bgba_m.bgbb023,g_bgba_m.bgbb024
      FROM bgbb_t WHERE bgbbent = g_enterprise
       AND bgbbdocno = g_bgba_m.bgbadocno AND bgbbseq = g_bgbb_d[l_ac].bgbbseq      

      
   #组合科目，科目名称，以及各核算项
   CALL abgt030_bgbb002() RETURNING l_bgbb002,l_str 
   LET g_bgbb_d[l_ac].lc_subject = g_bgbb_d[l_ac].bgbb002,l_str,'\n',l_bgbb002
END FUNCTION

################################################################################
# Descriptions...: 清空相關資訊
# Memo...........:
# Usage..........: CALL abgt030_forzen_clear(p_type)
# Date & Author..: 2016/11/21 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_forzen_clear(p_type)
DEFINE p_type   LIKE type_t.num5 
   
   #清空固定核算項
   IF p_type=0 OR p_type=1 THEN
      LET g_bgba_m.bgbb011 = ''
      LET g_bgba_m.bgbb011_desc = ''
      LET g_bgba_m.bgbb012 = ''
      LET g_bgba_m.bgbb012_desc = ''
      LET g_bgba_m.bgbb013 = ''
      LET g_bgba_m.bgbb013_desc = ''
      LET g_bgba_m.bgbb014 = ''
      LET g_bgba_m.bgbb014_desc = ''
      LET g_bgba_m.bgbb015 = ''
      LET g_bgba_m.bgbb015_desc = ''
      LET g_bgba_m.bgbb016 = ''
      LET g_bgba_m.bgbb016_desc = ''
      LET g_bgba_m.bgbb017 = ''
      LET g_bgba_m.bgbb017_desc = ''
      LET g_bgba_m.bgbb018 = ''
      LET g_bgba_m.bgbb018_desc = ''
      LET g_bgba_m.bgbb019 = ''
      LET g_bgba_m.bgbb019_desc = ''
      LET g_bgba_m.bgbb020 = ''
      LET g_bgba_m.bgbb020_desc = ''
      LET g_bgba_m.bgbb021 = ''
      LET g_bgba_m.bgbb022 = ''
      LET g_bgba_m.bgbb022_desc = ''
      LET g_bgba_m.bgbb023 = ''
      LET g_bgba_m.bgbb023_desc = ''
      LET g_bgba_m.bgbb024 = ''
      LET g_bgba_m.bgbb024_desc = ''
      LET g_bgba_m.bgbb025 = ''
      LET g_bgba_m.bgbb026 = ''
      LET g_bgba_m.bgbb027 = ''
      LET g_bgba_m.bgbb028 = ''
      LET g_bgba_m.bgbb029 = ''
      LET g_bgba_m.bgbb030 = ''
      LET g_bgba_m.bgbb031 = ''
      LET g_bgba_m.bgbb032 = ''
      LET g_bgba_m.bgbb033 = ''
      LET g_bgba_m.bgbb034 = ''
   END IF
   #清空業務訊息
   IF p_type=0 OR p_type=2 THEN
      LET g_bgba_m.bgbb005 = ''
      LET g_bgba_m.bgbb006 = ''
      LET g_bgba_m.bgbb007 = ''
   END IF
END FUNCTION

################################################################################
# Descriptions...: 核算項檢核
# Memo...........:
# Usage..........: CALL abgt030_subject_chk()
# Date & Author..: 2016/11/21 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_subject_chk(p_bgbb002)
DEFINE l_array DYNAMIC ARRAY OF RECORD
                  chr1   LIKE type_t.chr1
                  END RECORD

DEFINE r_success  LIKE type_t.num5
DEFINE r_errno    LIKE gzze_t.gzze001
DEFINE p_bgbb002  LIKE bgbb_t.bgbb002
DEFINE p_type     LIKE type_t.chr10
DEFINE l_bgae036  LIKE bgae_t.bgae036 #現金 
   
   LET r_success = TRUE
   IF g_bgbb_d[l_ac].bgbb002 = g_bgbb_d_t.bgbb002  THEN RETURN r_success END IF
   CALL l_array.clear()
   CALL s_abg_used_cond(g_bgba_m.bgba005,g_bgba_m.bgba001,p_bgbb002)
            RETURNING l_array
               
   IF l_array[2].chr1 = 'Y'  THEN  #部門   
      IF cl_null(g_bgba_m.bgbb011) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00043"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF
   END IF 
   IF l_array[3].chr1 = 'Y'  THEN #利潤中心
      IF cl_null(g_bgba_m.bgbb012) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00044"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[4].chr1 = 'Y'  THEN #區域
      IF cl_null(g_bgba_m.bgbb013) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00045"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[5].chr1 = 'Y'  THEN #交易客商
       IF cl_null(g_bgba_m.bgbb014) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00046"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[6].chr1 = 'Y'  THEN #收款客商
      IF cl_null(g_bgba_m.bgbb015) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "axr-00215"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[7].chr1 = 'Y'  THEN #客群
      IF cl_null(g_bgba_m.bgbb016) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00047"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[8].chr1 = 'Y'  THEN #產品類別
      IF cl_null(g_bgba_m.bgbb017) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00068"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[9].chr1 = 'Y'  THEN #人員
      IF cl_null(g_bgba_m.bgbb018) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00069"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[10].chr1 = 'Y' THEN #專案編號
      IF cl_null(g_bgba_m.bgbb019) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00071"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[11].chr1 = 'Y' THEN #WBS
       IF cl_null(g_bgba_m.bgbb020) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00072"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[12].chr1 = 'Y' THEN   #經營方式
      IF cl_null(g_bgba_m.bgbb021) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00286"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF             
   IF l_array[13].chr1 = 'Y' THEN #渠道
      IF cl_null(g_bgba_m.bgbb022) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00287"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF 
   END IF 
   IF l_array[14].chr1 = 'Y' THEN #品牌
      IF cl_null(g_bgba_m.bgbb023) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "agl-00288"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF  
   END IF  
   
   #是否是現金科目
   LET l_bgae036 = ''
   SELECT bgae036 INTO l_bgae036 FROM bgae_t
    WHERE bgaeent = g_enterprise 
      AND bgae006 = (SELECT bgaa008 FROM bgaa_t WHERE bgaaent = g_enterprise AND bgaa001 = g_bgba_m.bgba001 )
      AND bgae001 = p_bgbb002
   IF l_bgae036 = '1' THEN
     IF cl_null(g_bgba_m.bgbb024) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ''
         LET g_errparam.code   = "anm-00091"
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE  
      END IF
   END IF
         
   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 單身核算項重新顯示
# Memo...........:
# Usage..........: CALL abgt030_b_detail()
# Date & Author..: 2016/11/21 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_b_detail()
  
   IF g_detail_idx <=0 THEN
      RETURN
   END IF  
  
   SELECT bgbb011,bgbb012,bgbb013,bgbb014,bgbb015,
          bgbb016,bgbb017,bgbb018,bgbb019,bgbb020,
          bgbb021,bgbb022,bgbb023,bgbb024,bgbb005,
          bgbb006,bgbb007,bgbb008,bgbb009,bgbb010          
     INTO g_bgba_m.bgbb011,g_bgba_m.bgbb012,g_bgba_m.bgbb013,g_bgba_m.bgbb014,g_bgba_m.bgbb015,
          g_bgba_m.bgbb016,g_bgba_m.bgbb017,g_bgba_m.bgbb018,g_bgba_m.bgbb019,g_bgba_m.bgbb020,
          g_bgba_m.bgbb021,g_bgba_m.bgbb022,g_bgba_m.bgbb023,g_bgba_m.bgbb024,g_bgba_m.bgbb005,
          g_bgba_m.bgbb006,g_bgba_m.bgbb007,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1,g_bgba_m.bgbb010_1
      FROM bgbb_t WHERE bgbbent = g_enterprise
       AND bgbbdocno = g_bgba_m.bgbadocno AND bgbbseq = g_bgbb_d[g_detail_idx].bgbbseq 
   #抓取說明
   

    CALL s_desc_get_department_desc(g_bgba_m.bgbb011) RETURNING g_bgba_m.bgbb011_desc               #部門編號 
    CALL s_desc_get_department_desc(g_bgba_m.bgbb012) RETURNING g_bgba_m.bgbb012_desc               #成本利潤中心    
    CALL s_desc_get_acc_desc('287',g_bgba_m.bgbb013) RETURNING g_bgba_m.bgbb013_desc                #區域     
    CALL s_desc_get_trading_partner_abbr_desc(g_bgba_m.bgbb014) RETURNING g_bgba_m.bgbb014_desc     #交易客商
    CALL s_desc_get_trading_partner_abbr_desc(g_bgba_m.bgbb015) RETURNING g_bgba_m.bgbb015_desc     #帐款客商   
    CALL s_desc_get_acc_desc('281',g_bgba_m.bgbb016) RETURNING g_bgba_m.bgbb016_desc                #客群      
    CALL s_desc_get_rtaxl003_desc(g_bgba_m.bgbb017) RETURNING g_bgba_m.bgbb017_desc
    CALL s_desc_get_person_desc(g_bgba_m.bgbb018) RETURNING g_bgba_m.bgbb018_desc                   #人员       
    CALL s_desc_get_project_desc(g_bgba_m.bgbb019) RETURNING g_bgba_m.bgbb019_desc                  #专案编号  
    CALL s_desc_get_wbs_desc(g_bgba_m.bgbb027,g_bgba_m.bgbb020) RETURNING g_bgba_m.bgbb020_desc     #WBS        
    CALL s_desc_get_oojdl003_desc(g_bgba_m.bgbb022) RETURNING g_bgba_m.bgbb022_desc                 #渠道      
    CALL s_desc_get_acc_desc('2002',g_bgba_m.bgbb023) RETURNING g_bgba_m.bgbb023_desc               #品牌
                                                                                                    
   
   DISPLAY BY NAME g_bgba_m.bgbb011,g_bgba_m.bgbb012,g_bgba_m.bgbb013,g_bgba_m.bgbb014,g_bgba_m.bgbb015,
                   g_bgba_m.bgbb016,g_bgba_m.bgbb017,g_bgba_m.bgbb018,g_bgba_m.bgbb019,g_bgba_m.bgbb020,
                   g_bgba_m.bgbb021,g_bgba_m.bgbb022,g_bgba_m.bgbb023,g_bgba_m.bgbb024,g_bgba_m.bgbb005,
                   g_bgba_m.bgbb006,g_bgba_m.bgbb007,g_bgba_m.bgbb008_1,g_bgba_m.bgbb009_1,g_bgba_m.bgbb010_1,
                   g_bgba_m.bgbb011_desc,g_bgba_m.bgbb012_desc,g_bgba_m.bgbb013_desc,g_bgba_m.bgbb014_desc,
                   g_bgba_m.bgbb015_desc,g_bgba_m.bgbb016_desc,g_bgba_m.bgbb017_desc,g_bgba_m.bgbb018_desc,
                   g_bgba_m.bgbb019_desc,g_bgba_m.bgbb020_desc,g_bgba_m.bgbb022_desc,g_bgba_m.bgbb023_desc       
   
   
END FUNCTION

################################################################################
# Descriptions...: 管理組織檢核
# Memo...........:
# Usage..........: CALL abgt030_bgba010_chk(p_bgai001,p_bgai002)
# Date & Author..: 2016/12/14 By Hans
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt030_bgba010_chk(p_bgai001,p_bgai002)
DEFINE p_bgai001           LIKE bgai_t.bgai001
DEFINE p_bgai002           LIKE bgai_t.bgai002
DEFINE l_cnt               LIKE type_t.num5
DEFINE l_bgaistus          LIKE bgai_t.bgaistus
DEFINE l_bgai008           LIKE bgai_t.bgai008
DEFINE r_success           LIKE type_t.num5
DEFINE r_errno             LIKE gzze_t.gzze001

   LET r_errno = '' LET r_success = TRUE
   IF NOT cl_null(p_bgai002) THEN
      #存在否
      LET l_cnt = 0
      SELECT COUNT(1) INTO l_cnt FROM bgai_t
       WHERE bgaient=g_enterprise AND bgai002=p_bgai002
         AND bgai003 = g_user AND (bgai005 ='07' OR bgai005 = '00')
      IF l_cnt = 0 THEN
         LET r_errno = 'abg-00048'
         LET r_success = FALSE
         RETURN r_success,r_errno
      END IF
      #有效否
      LET l_cnt = 0
      SELECT COUNT(1) INTO l_cnt FROM bgai_t
       WHERE bgaient=g_enterprise AND bgai002=p_bgai002 AND bgaistus='Y'
         AND bgai003 = g_user AND (bgai005 ='07' OR bgai005 = '00')
      IF l_cnt = 0 THEN
         LET r_errno = 'abg-00198'
         LET r_success = FALSE
         RETURN r_success,r_errno
      END IF
   END IF
   #預算編+預算管理組織是否存在
   IF NOT cl_null(p_bgai001) AND NOT cl_null(p_bgai002) THEN
      SELECT DISTINCT bgaistus INTO l_bgaistus FROM bgai_t
       WHERE bgaient=g_enterprise AND bgai002=p_bgai002 AND bgai001=p_bgai001 
         AND bgai003 = g_user AND (bgai005 ='07' OR bgai005 = '00')
      CASE
         WHEN sqlca.sqlcode=100 
            LET r_errno = 'abg-00199'
            LET r_success = FALSE
            RETURN r_success,r_errno
         WHEN l_bgaistus<>'Y'  
            LET r_errno = 'abg-00200'
            LET r_success = FALSE
            RETURN r_success,r_errno
      END CASE     
   END IF
   
   RETURN r_success,r_errno
END FUNCTION

 
{</section>}
 
