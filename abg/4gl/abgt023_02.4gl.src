#該程式未解開Section, 採用最新樣板產出!
{<section id="abgt023_02.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2016-06-20 02:06:52), PR版次:0007(2017-01-24 14:22:19)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000045
#+ Filename...: abgt023_02
#+ Description: 預算調整
#+ Creator....: 03538(2016-06-19 16:46:00)
#+ Modifier...: 03538 -SD/PR- 06821
 
{</section>}
 
{<section id="abgt023_02.global" >}
#應用 i02 樣板自動產生(Version:38)
#add-point:填寫註解說明 name="global.memo"
#Memos
#160505-00011#2   16/07/21 by 03538         增加abgt026/abgt029
#160824-00038#1   16/08/28 by 03538         於審核作業時,管理組織與樣表並沒有實質意義,因此不當作撈取調整範圍的條件
#160905-00002#2   16/09/05 By Hans          SQL無ENT補上
#161104-00024#8   16/11/08 By 08171         程式中DEFINE RECORD LIKE時不可以用*的寫法，要一個一個欄位定義
#161108-00017#5   16/11/09 By 08732         程式中INSERT INTO時不可以用*的寫法，要一個一個欄位定義
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS   #(ver:36) add
   DEFINE mc_data_owner_check LIKE type_t.num5   #(ver:36) add
END GLOBALS   #(ver:36) add
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_bgbi_d RECORD
       bgbi002 LIKE bgbi_t.bgbi002, 
   bgbi003 LIKE bgbi_t.bgbi003, 
   bgbi045 LIKE bgbi_t.bgbi045, 
   bgbi044 LIKE bgbi_t.bgbi044, 
   bgbi004 LIKE bgbi_t.bgbi004, 
   bgbi005 LIKE bgbi_t.bgbi005, 
   title LIKE type_t.chr500, 
   bgbi024 LIKE bgbi_t.bgbi024, 
   bgbi0242 LIKE type_t.num20_6, 
   bgbi0243 LIKE type_t.num20_6, 
   bgbi0244 LIKE type_t.num20_6, 
   bgbi0245 LIKE type_t.num20_6, 
   bgbi0246 LIKE type_t.num20_6, 
   bgbi0247 LIKE type_t.num20_6, 
   bgbi0248 LIKE type_t.num20_6, 
   bgbi0249 LIKE type_t.num20_6, 
   bgbi02410 LIKE type_t.num20_6, 
   bgbi02411 LIKE type_t.num20_6, 
   bgbi02412 LIKE type_t.num20_6, 
   bgbi02413 LIKE type_t.num20_6, 
   l_sum LIKE type_t.num20_6
       END RECORD
 
 
 
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
TYPE type_g_bgbi_h RECORD
       bgbi002 LIKE bgbi_t.bgbi002, 
       bgbi003 LIKE bgbi_t.bgbi003, 
       bgbi045 LIKE bgbi_t.bgbi045, 
       bgbi044 LIKE bgbi_t.bgbi044, 
       bgbi004 LIKE bgbi_t.bgbi004,
       bgbi005 LIKE bgbi_t.bgbi005,
       bgbi017 LIKE bgbi_t.bgbi017,
       bgbi046 LIKE bgbi_t.bgbi046,
       bgbi047 LIKE bgbi_t.bgbi047,   #160505-00011#2
       bgaa002 LIKE bgaa_t.bgaa002,
       wc      STRING
           END RECORD  
DEFINE g_bgbi  type_g_bgbi_h      
DEFINE g_success LIKE type_t.num5
DEFINE g_act_choice          STRING   #160505-00011#2
DEFINE g_win_curr            ui.Window#160505-00011#2   #現行畫面
#end add-point
 
#模組變數(Module Variables)
DEFINE g_bgbi_d          DYNAMIC ARRAY OF type_g_bgbi_d #單身變數
DEFINE g_bgbi_d_t        type_g_bgbi_d                  #單身備份
DEFINE g_bgbi_d_o        type_g_bgbi_d                  #單身備份
DEFINE g_bgbi_d_mask_o   DYNAMIC ARRAY OF type_g_bgbi_d #單身變數
DEFINE g_bgbi_d_mask_n   DYNAMIC ARRAY OF type_g_bgbi_d #單身變數
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num10             #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="abgt023_02.main" >}
#應用 a27 樣板自動產生(Version:6)
#+ 作業開始(子程式類型)
PUBLIC FUNCTION abgt023_02(--)
   #add-point:main段變數傳入 name="main.get_var"
   ls_js
   #end add-point
   )
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
DEFINE ls_js      STRING
DEFINE lc_param   type_g_bgbi_h 

   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化 name="main.init"
   CALL util.JSON.parse(ls_js,lc_param)
   LET g_bgbi.* = lc_param.*
   LET g_act_choice = g_action_choice   #160505-00011#2
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
 
   
   #add-point:main段define_sql name="main.body.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT bgbi002,bgbi003,bgbi045,bgbi044,bgbi004,bgbi005,bgbi024 FROM bgbi_t WHERE  
       bgbient=? AND bgbi002=? AND bgbi003=? AND bgbi004=? AND bgbi005=? AND bgbi044=? AND bgbi045=?  
       FOR UPDATE"
   #add-point:main段define_sql name="main.body.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abgt023_02_bcl CURSOR FROM g_forupd_sql
 
 
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_abgt023_02 WITH FORM cl_ap_formpath("abg","abgt023_02")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL abgt023_02_init()   
 
   #進入選單 Menu (="N")
   CALL abgt023_02_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_abgt023_02
 
   
   
 
   #add-point:離開前 name="main.exit"
   RETURN g_success
   #end add-point
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="abgt023_02.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION abgt023_02_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
DEFINE l_cnt      LIKE type_t.num5
DEFINE l_title    STRING   #160505-00011#2
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   LET g_success = TRUE
   #end add-point
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化 name="init.init"
   LET l_cnt = 0
   SELECT COUNT(DISTINCT bgac004) INTO l_cnt
     FROM bgac_t
    WHERE bgacent = g_enterprise
      AND bgac001 = g_bgbi.bgaa002
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   CALL cl_set_comp_visible("bgbi02413",TRUE)
   IF l_cnt = 12 THEN
      CALL cl_set_comp_visible("bgbi02413",FALSE)
   END IF
   #160505-00011#2--s
   IF g_act_choice = 'abgt023_02_info' THEN
      LET l_title = s_fin_get_colname('','subtitle')
      LET g_win_curr = ui.Window.getCurrent()
      CALL g_win_curr.setText(l_title)   
   END IF
   #160505-00011#2--e   
   #end add-point
   
   CALL abgt023_02_default_search()
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION abgt023_02_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx   LIKE type_t.num10
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
 
   #end add-point 
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
 
   #end add-point
   
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_bgbi_d.clear()
 
         LET g_wc2 = ' 1=2'
         LET g_action_choice = ""
         CALL abgt023_02_init()
      END IF
   
      CALL abgt023_02_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_bgbi_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display  name="ui_dialog.body.before_display"
               
               #end add-point
               #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2 name="ui_dialog.body.before_display2"
               
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:3)
   CALL abgt023_02_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
               #add-point:display array-before row name="ui_dialog.before_row"
               
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before name="ui_dialog.b_dialog"
            CALL cl_set_act_visible("logistics,exporttoexcel", FALSE)
            #160505-00011#2--S
            CALL cl_set_act_visible("modify,modify_detail",TRUE)
            #動作為調整資訊,只顯示不可修改
            IF g_act_choice = 'abgt023_02_info' THEN
               CALL cl_set_act_visible("modify,modify_detail",FALSE)
            END IF
            #160505-00011#2--E            
            #end add-point
            NEXT FIELD CURRENT
      
         
         #應用 a67 樣板自動產生(Version:1)
         ON ACTION modify
            LET g_action_choice="modify"
            LET g_aw = ''
            CALL abgt023_02_show_ownid_msg()
            #因為不呼叫cl_auth_chk_act()，所以需另外紀錄log，
            #但紀錄log時需紀錄status，與鴻傑討論後，決議先一律紀錄成功
            CALL cl_log_act(g_action_choice,TRUE)
            CALL abgt023_02_modify()
            #add-point:ON ACTION modify name="menu.modify"
            
            #END add-point
            
 
 
 
 
         #應用 a67 樣板自動產生(Version:1)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            LET g_aw = g_curr_diag.getCurrentItem()
            CALL abgt023_02_show_ownid_msg()
            #因為不呼叫cl_auth_chk_act()，所以需另外紀錄log，
            #但紀錄log時需紀錄status，與鴻傑討論後，決議先一律紀錄成功
            CALL cl_log_act(g_action_choice,TRUE)
            CALL abgt023_02_modify()
            #add-point:ON ACTION modify_detail name="menu.modify_detail"
            
            #END add-point
            
 
 
 
 
      
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_bgbi_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            CANCEL DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            CANCEL DIALOG
            
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL abgt023_02_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abgt023_02_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abgt023_02_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION abgt023_02_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_bgbi_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON bgbi002,bgbi003,bgbi045,bgbi044,bgbi004,bgbi005 
 
         FROM s_detail1[1].bgbi002,s_detail1[1].bgbi003,s_detail1[1].bgbi045,s_detail1[1].bgbi044,s_detail1[1].bgbi004, 
             s_detail1[1].bgbi005 
      
         
      
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi002
            #add-point:BEFORE FIELD bgbi002 name="query.b.page1.bgbi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi002
            
            #add-point:AFTER FIELD bgbi002 name="query.a.page1.bgbi002"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bgbi002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi002
            #add-point:ON ACTION controlp INFIELD bgbi002 name="query.c.page1.bgbi002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi003
            #add-point:BEFORE FIELD bgbi003 name="query.b.page1.bgbi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi003
            
            #add-point:AFTER FIELD bgbi003 name="query.a.page1.bgbi003"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bgbi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi003
            #add-point:ON ACTION controlp INFIELD bgbi003 name="query.c.page1.bgbi003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi045
            #add-point:BEFORE FIELD bgbi045 name="query.b.page1.bgbi045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi045
            
            #add-point:AFTER FIELD bgbi045 name="query.a.page1.bgbi045"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bgbi045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi045
            #add-point:ON ACTION controlp INFIELD bgbi045 name="query.c.page1.bgbi045"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi044
            #add-point:BEFORE FIELD bgbi044 name="query.b.page1.bgbi044"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi044
            
            #add-point:AFTER FIELD bgbi044 name="query.a.page1.bgbi044"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bgbi044
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi044
            #add-point:ON ACTION controlp INFIELD bgbi044 name="query.c.page1.bgbi044"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi004
            #add-point:BEFORE FIELD bgbi004 name="query.b.page1.bgbi004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi004
            
            #add-point:AFTER FIELD bgbi004 name="query.a.page1.bgbi004"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bgbi004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi004
            #add-point:ON ACTION controlp INFIELD bgbi004 name="query.c.page1.bgbi004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi005
            #add-point:BEFORE FIELD bgbi005 name="query.b.page1.bgbi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi005
            
            #add-point:AFTER FIELD bgbi005 name="query.a.page1.bgbi005"
            
            #END add-point
            
 
 
         #Ctrlp:query.c.page1.bgbi005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi005
            #add-point:ON ACTION controlp INFIELD bgbi005 name="query.c.page1.bgbi005"
            
            #END add-point
 
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.before_construct"
            
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct name="query.more_construct"
      
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog name="query.before_dialog"
         
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         CANCEL DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct name="query.after_construct"
   
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      #LET g_wc2 = ls_wc
      LET g_wc2 = " 1=2"
      RETURN
   ELSE
      LET g_error_show = 1
      LET g_detail_idx = 1
   END IF
    
   CALL abgt023_02_b_fill(g_wc2)
 
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.insert" >}
#+ 資料新增
PRIVATE FUNCTION abgt023_02_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point                
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #add-point:單身新增前 name="insert.b_insert"
   
   #end add-point
   
   LET g_insert = 'Y'
   CALL abgt023_02_modify()
            
   #add-point:單身新增後 name="insert.a_insert"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.modify" >}
#+ 資料修改
PRIVATE FUNCTION abgt023_02_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num10
   DEFINE  l_i                    LIKE type_t.num10
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num10
   DEFINE  li_reproduce_target    LIKE type_t.num10
   DEFINE  lb_reproduce           BOOLEAN
   DEFINE  l_insert               BOOLEAN
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   DEFINE  l_sql                  STRING
   DEFINE  l_bgbi024              LIKE bgbi_t.bgbi024
   DEFINE  l_bgbiseq              LIKE bgbi_t.bgbiseq
   DEFINE  l_docdt                LIKE bgbi_t.bgbimoddt
   #160505-00011#2--S
   DEFINE  l_wc                   STRING   
   DEFINE  ls_js                  STRING
   DEFINE  lc_param               type_g_bgbi_h    
   #160505-00011#2--E
   #170123-00045#3 --s add
   DEFINE l_bgbi      RECORD
            bgbient   LIKE bgbi_t.bgbient,
            bgbiseq   LIKE bgbi_t.bgbiseq,
            bgbi001   LIKE bgbi_t.bgbi001,
            bgbi002   LIKE bgbi_t.bgbi002,
            bgbi003   LIKE bgbi_t.bgbi003,
            bgbi004   LIKE bgbi_t.bgbi004,
            bgbi005   LIKE bgbi_t.bgbi005,
            bgbi006   LIKE bgbi_t.bgbi006,
            bgbi007   LIKE bgbi_t.bgbi007,
            bgbi008   LIKE bgbi_t.bgbi008,
            bgbi009   LIKE bgbi_t.bgbi009,
            bgbi010   LIKE bgbi_t.bgbi010, 
            bgbi011   LIKE bgbi_t.bgbi011,
            bgbi012   LIKE bgbi_t.bgbi012,
            bgbi013   LIKE bgbi_t.bgbi013,
            bgbi014   LIKE bgbi_t.bgbi014,
            bgbi015   LIKE bgbi_t.bgbi015,
            bgbi016   LIKE bgbi_t.bgbi016, 
            bgbi017   LIKE bgbi_t.bgbi017,
            bgbi018   LIKE bgbi_t.bgbi018,
            bgbi019   LIKE bgbi_t.bgbi019,
            bgbi020   LIKE bgbi_t.bgbi020,
            bgbi021   LIKE bgbi_t.bgbi021,
            bgbi022   LIKE bgbi_t.bgbi022, 
            bgbi023   LIKE bgbi_t.bgbi023,
            bgbi024   LIKE bgbi_t.bgbi024,
            bgbi025   LIKE bgbi_t.bgbi025,
            bgbi026   LIKE bgbi_t.bgbi026,
            bgbi027   LIKE bgbi_t.bgbi027,
            bgbi028   LIKE bgbi_t.bgbi028, 
            bgbi029   LIKE bgbi_t.bgbi029,
            bgbi030   LIKE bgbi_t.bgbi030,
            bgbi031   LIKE bgbi_t.bgbi031,
            bgbi032   LIKE bgbi_t.bgbi032,
            bgbi033   LIKE bgbi_t.bgbi033,
            bgbi034   LIKE bgbi_t.bgbi034, 
            bgbi035   LIKE bgbi_t.bgbi035,
            bgbi036   LIKE bgbi_t.bgbi036,
            bgbi037   LIKE bgbi_t.bgbi037,
            bgbi038   LIKE bgbi_t.bgbi038,
            bgbi039   LIKE bgbi_t.bgbi039,
            bgbi040   LIKE bgbi_t.bgbi040, 
            bgbi041   LIKE bgbi_t.bgbi041,
            bgbi042   LIKE bgbi_t.bgbi042,
            bgbi043   LIKE bgbi_t.bgbi043,
            bgbi044   LIKE bgbi_t.bgbi044,
            bgbi045   LIKE bgbi_t.bgbi045,
            bgbi046   LIKE bgbi_t.bgbi046, 
            bgbiownid LIKE bgbi_t.bgbiownid,
            bgbiowndp LIKE bgbi_t.bgbiowndp,
            bgbicrtid LIKE bgbi_t.bgbicrtid,
            bgbicrtdp LIKE bgbi_t.bgbicrtdp,
            bgbicrtdt LIKE bgbi_t.bgbicrtdt, 
            bgbimodid LIKE bgbi_t.bgbimodid,
            bgbimoddt LIKE bgbi_t.bgbimoddt,
            bgbicnfid LIKE bgbi_t.bgbicnfid,
            bgbicnfdt LIKE bgbi_t.bgbicnfdt,
            bgbistus  LIKE bgbi_t.bgbistus 
                      END RECORD
   #170123-00045#3 --e add
   #end add-point 
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
#  LET g_action_choice = ""   #(ver:35) mark
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前 name="modify.define_sql"
   
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
   LET l_insert = FALSE
 
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
 
   #add-point:modify段修改前 name="modify.before_input"
   
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_bgbi_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bgbi_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abgt023_02_b_fill(g_wc2)
            LET g_detail_cnt = g_bgbi_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            CALL FGL_SET_ARR_CURR(2)
            LET l_ac = 2
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_bgbi_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_bgbi_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_bgbi_d[l_ac].bgbi002 IS NOT NULL
               AND g_bgbi_d[l_ac].bgbi003 IS NOT NULL
               AND g_bgbi_d[l_ac].bgbi004 IS NOT NULL
               AND g_bgbi_d[l_ac].bgbi005 IS NOT NULL
               AND g_bgbi_d[l_ac].bgbi044 IS NOT NULL
               AND g_bgbi_d[l_ac].bgbi045 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bgbi_d_t.* = g_bgbi_d[l_ac].*  #BACKUP
               LET g_bgbi_d_o.* = g_bgbi_d[l_ac].*  #BACKUP
               IF NOT abgt023_02_lock_b("bgbi_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abgt023_02_bcl INTO g_bgbi_d[l_ac].bgbi002,g_bgbi_d[l_ac].bgbi003,g_bgbi_d[l_ac].bgbi045, 
                      g_bgbi_d[l_ac].bgbi044,g_bgbi_d[l_ac].bgbi004,g_bgbi_d[l_ac].bgbi005,g_bgbi_d[l_ac].bgbi024 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_bgbi_d_t.bgbi002,":",SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bgbi_d_mask_o[l_ac].* =  g_bgbi_d[l_ac].*
                  CALL abgt023_02_bgbi_t_mask()
                  LET g_bgbi_d_mask_n[l_ac].* =  g_bgbi_d[l_ac].*
                  
                  CALL abgt023_02_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL abgt023_02_set_entry_b(l_cmd)
            CALL abgt023_02_set_no_entry_b(l_cmd)
            #add-point:modify段before row name="input.body.before_row"
            LET l_cmd='u'
            LET g_bgbi_d_t.* = g_bgbi_d[l_ac].*  #BACKUP
            LET g_bgbi_d_o.* = g_bgbi_d[l_ac].*  #BACKUP            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bgbi_d_t.* TO NULL
            INITIALIZE g_bgbi_d_o.* TO NULL
            INITIALIZE g_bgbi_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值(單身1)
                  LET g_bgbi_d[l_ac].bgbi024 = "0"
      LET g_bgbi_d[l_ac].bgbi0242 = "0"
      LET g_bgbi_d[l_ac].bgbi0243 = "0"
      LET g_bgbi_d[l_ac].bgbi0244 = "0"
      LET g_bgbi_d[l_ac].bgbi0245 = "0"
      LET g_bgbi_d[l_ac].bgbi0246 = "0"
      LET g_bgbi_d[l_ac].bgbi0247 = "0"
      LET g_bgbi_d[l_ac].bgbi0248 = "0"
      LET g_bgbi_d[l_ac].bgbi0249 = "0"
      LET g_bgbi_d[l_ac].bgbi02410 = "0"
      LET g_bgbi_d[l_ac].bgbi02411 = "0"
      LET g_bgbi_d[l_ac].bgbi02412 = "0"
      LET g_bgbi_d[l_ac].bgbi02413 = "0"
      LET g_bgbi_d[l_ac].l_sum = "0"
 
            #add-point:modify段before備份 name="input.body.before_bak"
            
            #end add-point
            LET g_bgbi_d_t.* = g_bgbi_d[l_ac].*     #新輸入資料
            LET g_bgbi_d_o.* = g_bgbi_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bgbi_d[li_reproduce_target].* = g_bgbi_d[li_reproduce].*
 
               LET g_bgbi_d[g_bgbi_d.getLength()].bgbi002 = NULL
               LET g_bgbi_d[g_bgbi_d.getLength()].bgbi003 = NULL
               LET g_bgbi_d[g_bgbi_d.getLength()].bgbi004 = NULL
               LET g_bgbi_d[g_bgbi_d.getLength()].bgbi005 = NULL
               LET g_bgbi_d[g_bgbi_d.getLength()].bgbi044 = NULL
               LET g_bgbi_d[g_bgbi_d.getLength()].bgbi045 = NULL
 
            END IF
            
 
            CALL abgt023_02_set_entry_b(l_cmd)
            CALL abgt023_02_set_no_entry_b(l_cmd)
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM bgbi_t 
             WHERE bgbient = g_enterprise AND bgbi002 = g_bgbi_d[l_ac].bgbi002
                                       AND bgbi003 = g_bgbi_d[l_ac].bgbi003
                                       AND bgbi004 = g_bgbi_d[l_ac].bgbi004
                                       AND bgbi005 = g_bgbi_d[l_ac].bgbi005
                                       AND bgbi044 = g_bgbi_d[l_ac].bgbi044
                                       AND bgbi045 = g_bgbi_d[l_ac].bgbi045
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgbi_d[g_detail_idx].bgbi002
               LET gs_keys[2] = g_bgbi_d[g_detail_idx].bgbi003
               LET gs_keys[3] = g_bgbi_d[g_detail_idx].bgbi004
               LET gs_keys[4] = g_bgbi_d[g_detail_idx].bgbi005
               LET gs_keys[5] = g_bgbi_d[g_detail_idx].bgbi044
               LET gs_keys[6] = g_bgbi_d[g_detail_idx].bgbi045
               CALL abgt023_02_insert_b('bgbi_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_bgbi_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bgbi_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abgt023_02_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               ##ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (bgbi002 = '", g_bgbi_d[l_ac].bgbi002, "' "
                                  ," AND bgbi003 = '", g_bgbi_d[l_ac].bgbi003, "' "
                                  ," AND bgbi004 = '", g_bgbi_d[l_ac].bgbi004, "' "
                                  ," AND bgbi005 = '", g_bgbi_d[l_ac].bgbi005, "' "
                                  ," AND bgbi044 = '", g_bgbi_d[l_ac].bgbi044, "' "
                                  ," AND bgbi045 = '", g_bgbi_d[l_ac].bgbi045, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除ask前 name="input.body.b_delete_ask"
               
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point   
               
               DELETE FROM bgbi_t
                WHERE bgbient = g_enterprise AND 
                      bgbi002 = g_bgbi_d_t.bgbi002
                      AND bgbi003 = g_bgbi_d_t.bgbi003
                      AND bgbi004 = g_bgbi_d_t.bgbi004
                      AND bgbi005 = g_bgbi_d_t.bgbi005
                      AND bgbi044 = g_bgbi_d_t.bgbi044
                      AND bgbi045 = g_bgbi_d_t.bgbi045
 
                      
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point  
                      
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "bgbi_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
 
                  #add-point:單身刪除後 name="input.body.a_delete"
                  
                  #end add-point
                  #修改歷程記錄(刪除)
                  CALL abgt023_02_set_pk_array()
                  LET g_log1 = util.JSON.stringify(g_bgbi_d[l_ac])   #(ver:38)
                  IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:38)
                  ELSE
                  END IF
               END IF 
               CLOSE abgt023_02_bcl
               #add-point:單身關閉bcl name="input.body.close"
               
               #end add-point
               LET l_count = g_bgbi_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgbi_d_t.bgbi002
               LET gs_keys[2] = g_bgbi_d_t.bgbi003
               LET gs_keys[3] = g_bgbi_d_t.bgbi004
               LET gs_keys[4] = g_bgbi_d_t.bgbi005
               LET gs_keys[5] = g_bgbi_d_t.bgbi044
               LET gs_keys[6] = g_bgbi_d_t.bgbi045
 
               #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL abgt023_02_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2 name="input.body.after_delete"
               
               #end add-point
                              CALL abgt023_02_delete_b('bgbi_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_bgbi_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            #add-point:單身刪除後3 name="input.body.after_delete3"
            
            #end add-point
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi002
            #add-point:BEFORE FIELD bgbi002 name="input.b.page1.bgbi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi002
            
            #add-point:AFTER FIELD bgbi002 name="input.a.page1.bgbi002"
            #應用 a05 樣板自動產生(Version:3)



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi002
            #add-point:ON CHANGE bgbi002 name="input.g.page1.bgbi002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi003
            #add-point:BEFORE FIELD bgbi003 name="input.b.page1.bgbi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi003
            
            #add-point:AFTER FIELD bgbi003 name="input.a.page1.bgbi003"
            #應用 a05 樣板自動產生(Version:3)




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi003
            #add-point:ON CHANGE bgbi003 name="input.g.page1.bgbi003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi045
            #add-point:BEFORE FIELD bgbi045 name="input.b.page1.bgbi045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi045
            
            #add-point:AFTER FIELD bgbi045 name="input.a.page1.bgbi045"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_bgbi_d[g_detail_idx].bgbi002 IS NOT NULL AND g_bgbi_d[g_detail_idx].bgbi003 IS NOT NULL AND g_bgbi_d[g_detail_idx].bgbi004 IS NOT NULL AND g_bgbi_d[g_detail_idx].bgbi005 IS NOT NULL AND g_bgbi_d[g_detail_idx].bgbi044 IS NOT NULL AND g_bgbi_d[g_detail_idx].bgbi045 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bgbi_d[g_detail_idx].bgbi002 != g_bgbi_d_t.bgbi002 OR g_bgbi_d[g_detail_idx].bgbi003 != g_bgbi_d_t.bgbi003 OR g_bgbi_d[g_detail_idx].bgbi004 != g_bgbi_d_t.bgbi004 OR g_bgbi_d[g_detail_idx].bgbi005 != g_bgbi_d_t.bgbi005 OR g_bgbi_d[g_detail_idx].bgbi044 != g_bgbi_d_t.bgbi044 OR g_bgbi_d[g_detail_idx].bgbi045 != g_bgbi_d_t.bgbi045)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bgbi_t WHERE "||"bgbient = '" ||g_enterprise|| "' AND "||"bgbi002 = '"||g_bgbi_d[g_detail_idx].bgbi002 ||"' AND "|| "bgbi003 = '"||g_bgbi_d[g_detail_idx].bgbi003 ||"' AND "|| "bgbi004 = '"||g_bgbi_d[g_detail_idx].bgbi004 ||"' AND "|| "bgbi005 = '"||g_bgbi_d[g_detail_idx].bgbi005 ||"' AND "|| "bgbi044 = '"||g_bgbi_d[g_detail_idx].bgbi044 ||"' AND "|| "bgbi045 = '"||g_bgbi_d[g_detail_idx].bgbi045 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi045
            #add-point:ON CHANGE bgbi045 name="input.g.page1.bgbi045"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi044
            #add-point:BEFORE FIELD bgbi044 name="input.b.page1.bgbi044"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi044
            
            #add-point:AFTER FIELD bgbi044 name="input.a.page1.bgbi044"
            #應用 a05 樣板自動產生(Version:3)




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi044
            #add-point:ON CHANGE bgbi044 name="input.g.page1.bgbi044"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi004
            #add-point:BEFORE FIELD bgbi004 name="input.b.page1.bgbi004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi004
            
            #add-point:AFTER FIELD bgbi004 name="input.a.page1.bgbi004"
            #應用 a05 樣板自動產生(Version:3)




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi004
            #add-point:ON CHANGE bgbi004 name="input.g.page1.bgbi004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi005
            #add-point:BEFORE FIELD bgbi005 name="input.b.page1.bgbi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi005
            
            #add-point:AFTER FIELD bgbi005 name="input.a.page1.bgbi005"
            #應用 a05 樣板自動產生(Version:3)




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi005
            #add-point:ON CHANGE bgbi005 name="input.g.page1.bgbi005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi024
            #add-point:BEFORE FIELD bgbi024 name="input.b.page1.bgbi024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi024
            
            #add-point:AFTER FIELD bgbi024 name="input.a.page1.bgbi024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi024
            #add-point:ON CHANGE bgbi024 name="input.g.page1.bgbi024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0242
            #add-point:BEFORE FIELD bgbi0242 name="input.b.page1.bgbi0242"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0242
            
            #add-point:AFTER FIELD bgbi0242 name="input.a.page1.bgbi0242"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0242
            #add-point:ON CHANGE bgbi0242 name="input.g.page1.bgbi0242"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0243
            #add-point:BEFORE FIELD bgbi0243 name="input.b.page1.bgbi0243"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0243
            
            #add-point:AFTER FIELD bgbi0243 name="input.a.page1.bgbi0243"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0243
            #add-point:ON CHANGE bgbi0243 name="input.g.page1.bgbi0243"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0244
            #add-point:BEFORE FIELD bgbi0244 name="input.b.page1.bgbi0244"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0244
            
            #add-point:AFTER FIELD bgbi0244 name="input.a.page1.bgbi0244"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0244
            #add-point:ON CHANGE bgbi0244 name="input.g.page1.bgbi0244"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0245
            #add-point:BEFORE FIELD bgbi0245 name="input.b.page1.bgbi0245"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0245
            
            #add-point:AFTER FIELD bgbi0245 name="input.a.page1.bgbi0245"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0245
            #add-point:ON CHANGE bgbi0245 name="input.g.page1.bgbi0245"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0246
            #add-point:BEFORE FIELD bgbi0246 name="input.b.page1.bgbi0246"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0246
            
            #add-point:AFTER FIELD bgbi0246 name="input.a.page1.bgbi0246"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0246
            #add-point:ON CHANGE bgbi0246 name="input.g.page1.bgbi0246"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0247
            #add-point:BEFORE FIELD bgbi0247 name="input.b.page1.bgbi0247"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0247
            
            #add-point:AFTER FIELD bgbi0247 name="input.a.page1.bgbi0247"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0247
            #add-point:ON CHANGE bgbi0247 name="input.g.page1.bgbi0247"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0248
            #add-point:BEFORE FIELD bgbi0248 name="input.b.page1.bgbi0248"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0248
            
            #add-point:AFTER FIELD bgbi0248 name="input.a.page1.bgbi0248"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0248
            #add-point:ON CHANGE bgbi0248 name="input.g.page1.bgbi0248"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi0249
            #add-point:BEFORE FIELD bgbi0249 name="input.b.page1.bgbi0249"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi0249
            
            #add-point:AFTER FIELD bgbi0249 name="input.a.page1.bgbi0249"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi0249
            #add-point:ON CHANGE bgbi0249 name="input.g.page1.bgbi0249"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi02410
            #add-point:BEFORE FIELD bgbi02410 name="input.b.page1.bgbi02410"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi02410
            
            #add-point:AFTER FIELD bgbi02410 name="input.a.page1.bgbi02410"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi02410
            #add-point:ON CHANGE bgbi02410 name="input.g.page1.bgbi02410"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi02411
            #add-point:BEFORE FIELD bgbi02411 name="input.b.page1.bgbi02411"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi02411
            
            #add-point:AFTER FIELD bgbi02411 name="input.a.page1.bgbi02411"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi02411
            #add-point:ON CHANGE bgbi02411 name="input.g.page1.bgbi02411"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi02412
            #add-point:BEFORE FIELD bgbi02412 name="input.b.page1.bgbi02412"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi02412
            
            #add-point:AFTER FIELD bgbi02412 name="input.a.page1.bgbi02412"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi02412
            #add-point:ON CHANGE bgbi02412 name="input.g.page1.bgbi02412"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bgbi02413
            #add-point:BEFORE FIELD bgbi02413 name="input.b.page1.bgbi02413"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bgbi02413
            
            #add-point:AFTER FIELD bgbi02413 name="input.a.page1.bgbi02413"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bgbi02413
            #add-point:ON CHANGE bgbi02413 name="input.g.page1.bgbi02413"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_sum
            #add-point:BEFORE FIELD l_sum name="input.b.page1.l_sum"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_sum
            
            #add-point:AFTER FIELD l_sum name="input.a.page1.l_sum"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_sum
            #add-point:ON CHANGE l_sum name="input.g.page1.l_sum"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.bgbi002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi002
            #add-point:ON ACTION controlp INFIELD bgbi002 name="input.c.page1.bgbi002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi003
            #add-point:ON ACTION controlp INFIELD bgbi003 name="input.c.page1.bgbi003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi045
            #add-point:ON ACTION controlp INFIELD bgbi045 name="input.c.page1.bgbi045"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi044
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi044
            #add-point:ON ACTION controlp INFIELD bgbi044 name="input.c.page1.bgbi044"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi004
            #add-point:ON ACTION controlp INFIELD bgbi004 name="input.c.page1.bgbi004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi005
            #add-point:ON ACTION controlp INFIELD bgbi005 name="input.c.page1.bgbi005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi024
            #add-point:ON ACTION controlp INFIELD bgbi024 name="input.c.page1.bgbi024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0242
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0242
            #add-point:ON ACTION controlp INFIELD bgbi0242 name="input.c.page1.bgbi0242"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0243
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0243
            #add-point:ON ACTION controlp INFIELD bgbi0243 name="input.c.page1.bgbi0243"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0244
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0244
            #add-point:ON ACTION controlp INFIELD bgbi0244 name="input.c.page1.bgbi0244"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0245
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0245
            #add-point:ON ACTION controlp INFIELD bgbi0245 name="input.c.page1.bgbi0245"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0246
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0246
            #add-point:ON ACTION controlp INFIELD bgbi0246 name="input.c.page1.bgbi0246"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0247
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0247
            #add-point:ON ACTION controlp INFIELD bgbi0247 name="input.c.page1.bgbi0247"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0248
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0248
            #add-point:ON ACTION controlp INFIELD bgbi0248 name="input.c.page1.bgbi0248"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi0249
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi0249
            #add-point:ON ACTION controlp INFIELD bgbi0249 name="input.c.page1.bgbi0249"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi02410
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi02410
            #add-point:ON ACTION controlp INFIELD bgbi02410 name="input.c.page1.bgbi02410"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi02411
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi02411
            #add-point:ON ACTION controlp INFIELD bgbi02411 name="input.c.page1.bgbi02411"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi02412
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi02412
            #add-point:ON ACTION controlp INFIELD bgbi02412 name="input.c.page1.bgbi02412"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bgbi02413
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bgbi02413
            #add-point:ON ACTION controlp INFIELD bgbi02413 name="input.c.page1.bgbi02413"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.l_sum
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_sum
            #add-point:ON ACTION controlp INFIELD l_sum name="input.c.page1.l_sum"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CLOSE abgt023_02_bcl
               LET INT_FLAG = 0
               LET g_bgbi_d[l_ac].* = g_bgbi_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               #add-point:單身取消時 name="input.body.cancel"
               
               #end add-point
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_bgbi_d[l_ac].bgbi002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bgbi_d[l_ac].* = g_bgbi_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身)
               
            
               #add-point:單身修改前 name="input.body.b_update"
               IF g_prog NOT MATCHES 'abgt02[69]' THEN   #160505-00011#2
                  LET l_docdt = cl_get_current()
    
                  LET l_sql = "UPDATE bgbi_t SET bgbi024 = ? ,bgbi027 = bgbi023 + ? ",
                              " WHERE ",g_bgbi.wc, 
                              "   AND bgbi044 = '",g_bgbi.bgbi044,"'",    #160505-00011#2
                              "   AND bgbi045 = '",g_bgbi.bgbi045,"'",    #160824-00038#1
                              "   AND bgbi006 = ? "        
                    
                  PREPARE abgt023_02_upd FROM l_sql         
                  LET l_sql = "SELECT COUNT(1) FROM bgbi_t ",
                              " WHERE ",g_bgbi.wc, 
                              "   AND bgbi006 = ? ",
                              "   AND bgbi044 = '",g_bgbi.bgbi044,"'"    #160505-00011#2
                  PREPARE abgt023_02_cnt FROM l_sql    
               
               
                  LET l_sql = 
                  #170123-00045#3 --s add 把INSERT INTO 與SELECT拆開
                  #" INSERT INTO bgbi_t ",
                  #" (bgbient, ",
                  #"  bgbiseq,  bgbi001,  bgbi002,  bgbi003,  bgbi004, bgbi005, ",
                  #"  bgbi006,  bgbi007,  bgbi008,  bgbi009,  bgbi010, bgbi011, ",
                  #"  bgbi012,  bgbi013,  bgbi014,  bgbi015,  bgbi016, bgbi017, ", 
                  #"  bgbi018,  bgbi019,  bgbi020,  bgbi021,  bgbi022, bgbi023, ", 
                  #"  bgbi024,  bgbi025,  bgbi026,  bgbi027,  bgbi028, bgbi029, ",
                  #"  bgbi030,  bgbi031,  bgbi032,  bgbi033,  bgbi034, bgbi035, ", 
                  #"  bgbi036,  bgbi037,  bgbi038,  bgbi039,  bgbi040, bgbi041, ",
                  #"  bgbi042,  bgbi043,  bgbi044,  bgbi045,  bgbi046, ",
                  #"  bgbiownid,bgbiowndp,bgbicrtid,bgbicrtdp,bgbicrtdt, ",
                  #"  bgbimodid,bgbimoddt,bgbicnfid,bgbicnfdt,bgbistus)  ",            
                  #170123-00045#3 --e add                  
                  " SELECT bgbient, ",
                  "        ?      , bgbi001, bgbi002, bgbi003, bgbi004, bgbi005, ",
                  "        ?      , bgbi007, bgbi008, bgbi009, bgbi010, bgbi011, ",
                  "        bgbi012, bgbi013, bgbi014, bgbi015, bgbi016, bgbi017, ",
                  "        0      , 0      , bgbi020, 1      , 0      , 0      , ",
                  "        ?      , 0      , 0      , ?      , bgbi028, bgbi029, ",
                  "        bgbi030, bgbi031, bgbi032, bgbi033, bgbi034, bgbi035, ",
                  "        bgbi036, bgbi037, bgbi038, bgbi039, bgbi040, bgbi041, ",
                  "        bgbi042, bgbi043, bgbi044, bgbi045, bgbi046, ",
                  "        bgbiownid,bgbiowndp,bgbicrtid,bgbicrtdp,  ?, ",
                  "        bgbimodid,?        ,bgbicnfid,?        ,bgbistus ",
                  "   FROM bgbi_t ",
                  "  WHERE ",g_bgbi.wc, 
                  "    AND bgbi044 = '",g_bgbi.bgbi044,"'",    #160505-00011#2
                  "    AND bgbient = ",g_enterprise,"  "       #160905-00002#2 
                  #"    AND ROWNUM = 1 "                       #170123-00045#3 mark

                  PREPARE abgt023_ins_bgbi FROM l_sql               
                  FOR l_i = 1 TO 13 
                     CASE l_i
                        WHEN '1' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi024
                        WHEN '2' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0242
                        WHEN '3' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0243
                        WHEN '4' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0244
                        WHEN '5' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0245
                        WHEN '6' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0246
                        WHEN '7' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0247
                        WHEN '8' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0248
                        WHEN '9' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi0249
                        WHEN '10' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi02410
                        WHEN '11' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi02411
                        WHEN '12' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi02412
                        WHEN '13' LET l_bgbi024 = g_bgbi_d[l_ac].bgbi02413
                     END CASE
                     IF cl_null(l_bgbi024) THEN LET l_bgbi024 = 0 END IF
                     LET l_cnt = 0
                     EXECUTE abgt023_02_cnt USING l_i INTO l_cnt
                     IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                     IF l_cnt > 0 THEN
                        EXECUTE abgt023_02_upd USING l_bgbi024,l_bgbi024,l_i
                        LET l_count = l_count +1
                     ELSE 
                        IF l_bgbi024 <> 0 THEN
                           LET l_bgbiseq = 0                       
                           SELECT MAX(bgbiseq)+1 INTO l_bgbiseq
                             FROM bgbi_t
                            WHERE bgbi002 = g_bgbi.bgbi002
                              AND bgbi003 = g_bgbi.bgbi003
                              AND bgbi004 = g_bgbi.bgbi004
                              AND bgbi005 = g_bgbi.bgbi005                      
                              AND bgbi044 = '1'  
                              AND bgbient = g_enterprise #160905-00002#2 
                                       
                           #170123-00045#3 --s mark                                       
                           #EXECUTE abgt023_ins_bgbi 
                           #  USING l_bgbiseq,l_i,l_bgbi024,l_bgbi024,l_docdt,l_docdt,l_docdt     
                           #170123-00045#3 --e mark
                           
                           #170123-00045#3 --s add 取得來源修改者資訊
                           INITIALIZE l_bgbi.* TO NULL
                           DECLARE abgt023_bgbi_cur SCROLL CURSOR FOR abgt023_ins_bgbi     
                           OPEN abgt023_bgbi_cur USING l_bgbiseq,l_i,l_bgbi024,l_bgbi024,l_docdt,l_docdt,l_docdt
                           FETCH FIRST abgt023_bgbi_cur INTO l_bgbi.*
                           INSERT INTO bgbi_t 
                           (bgbient,  bgbiseq,  bgbi001,  bgbi002,  bgbi003, bgbi004, 
                            bgbi005,  bgbi006,  bgbi007,  bgbi008,  bgbi009, bgbi010, 
                            bgbi011,  bgbi012,  bgbi013,  bgbi014,  bgbi015, bgbi016, 
                            bgbi017,  bgbi018,  bgbi019,  bgbi020,  bgbi021, bgbi022, 
                            bgbi023,  bgbi024,  bgbi025,  bgbi026,  bgbi027, bgbi028, 
                            bgbi029,  bgbi030,  bgbi031,  bgbi032,  bgbi033, bgbi034, 
                            bgbi035,  bgbi036,  bgbi037,  bgbi038,  bgbi039, bgbi040, 
                            bgbi041,  bgbi042,  bgbi043,  bgbi044,  bgbi045, bgbi046, 
                            bgbiownid,bgbiowndp,bgbicrtid,bgbicrtdp,bgbicrtdt, 
                            bgbimodid,bgbimoddt,bgbicnfid,bgbicnfdt,bgbistus) VALUES (l_bgbi.*)                         
                           
                           FREE abgt023_ins_bgbi
                           CLOSE abgt023_bgbi_cur     
                           #170123-00045#3 --e add                    
                  
                           LET l_count = l_count +1                                     
                        END IF                                  
                     END IF                  
                  END FOR
               #160505-00011#2--S
               ELSE
                  CALL abgt023_02_declare(g_bgbi.wc)
                  LET ls_js = util.JSON.stringify(g_bgbi)
                  #比對該其金額有做異動者,才寫入TMP準備調整金額攤算
                  IF g_bgbi_d[l_ac].bgbi024 <> g_bgbi_d_t.bgbi024 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 1 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)          
                     CALL abgt023_02_upd_source(l_wc,1,g_bgbi_d[5].bgbi024,g_bgbi_d[l_ac].bgbi024)
                     LET l_count = l_count +1
                  END IF
                  IF g_bgbi_d[l_ac].bgbi0242 <> g_bgbi_d_t.bgbi0242 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 2 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)       
                     CALL abgt023_02_upd_source(l_wc,2,g_bgbi_d[5].bgbi0242,g_bgbi_d[l_ac].bgbi0242)      
                     LET l_count = l_count +1                     
                  END IF                  
                  IF g_bgbi_d[l_ac].bgbi0243 <> g_bgbi_d_t.bgbi0243 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 3 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)          
                     CALL abgt023_02_upd_source(l_wc,3,g_bgbi_d[5].bgbi0243,g_bgbi_d[l_ac].bgbi0243)  
                     LET l_count = l_count +1
                  END IF           
                  IF g_bgbi_d[l_ac].bgbi0244 <> g_bgbi_d_t.bgbi0244 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 4 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)          
                     CALL abgt023_02_upd_source(l_wc,4,g_bgbi_d[5].bgbi0244,g_bgbi_d[l_ac].bgbi0244)  
                     LET l_count = l_count +1
                  END IF          
                  IF g_bgbi_d[l_ac].bgbi0245 <> g_bgbi_d_t.bgbi0245 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 5 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)          
                     CALL abgt023_02_upd_source(l_wc,5,g_bgbi_d[5].bgbi0245,g_bgbi_d[l_ac].bgbi0245)  
                     LET l_count = l_count +1
                  END IF                   
                  IF g_bgbi_d[l_ac].bgbi0246 <> g_bgbi_d_t.bgbi0246 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 6 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,6,g_bgbi_d[5].bgbi0246,g_bgbi_d[l_ac].bgbi0246) 
                     LET l_count = l_count +1                     
                  END IF                   
                  IF g_bgbi_d[l_ac].bgbi0247 <> g_bgbi_d_t.bgbi0247 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 7 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,7,g_bgbi_d[5].bgbi0247,g_bgbi_d[l_ac].bgbi0247)  
                     LET l_count = l_count +1
                  END IF                   
                  IF g_bgbi_d[l_ac].bgbi0248 <> g_bgbi_d_t.bgbi0248 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 8 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,8,g_bgbi_d[5].bgbi0248,g_bgbi_d[l_ac].bgbi0248)  
                     LET l_count = l_count +1
                  END IF                   
                  IF g_bgbi_d[l_ac].bgbi0249 <> g_bgbi_d_t.bgbi0249 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 9 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,9,g_bgbi_d[5].bgbi0249,g_bgbi_d[l_ac].bgbi0249)  
                     LET l_count = l_count +1
                  END IF                   
                  IF g_bgbi_d[l_ac].bgbi02410 <> g_bgbi_d_t.bgbi02410 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 10 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,10,g_bgbi_d[5].bgbi02410,g_bgbi_d[l_ac].bgbi02410) 
                     LET l_count = l_count +1                     
                  END IF        
                  IF g_bgbi_d[l_ac].bgbi02411 <> g_bgbi_d_t.bgbi02411 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 11 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,11,g_bgbi_d[5].bgbi02411,g_bgbi_d[l_ac].bgbi02411)  
                     LET l_count = l_count +1
                  END IF                      
                  IF g_bgbi_d[l_ac].bgbi02412 <> g_bgbi_d_t.bgbi02412 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 12 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,12,g_bgbi_d[5].bgbi02412,g_bgbi_d[l_ac].bgbi02412)  
                     LET l_count = l_count +1
                  END IF                      
                  IF g_bgbi_d[l_ac].bgbi02413 <> g_bgbi_d_t.bgbi02413 THEN
                     LET l_wc = g_bgbi.wc,' AND bgbi006 = 13 '
                     CALL abgt023_02_ins_tmp(l_wc,ls_js)
                     CALL abgt023_02_upd_source(l_wc,13,g_bgbi_d[5].bgbi02413,g_bgbi_d[l_ac].bgbi02413)  
                     LET l_count = l_count +1
                  END IF      
               END IF                  
               #160505-00011#2--E
               LET SQLCA.sqlerrd[3] = l_count
#               #end add-point
#               
#               #將遮罩欄位還原
#               CALL abgt023_02_bgbi_t_mask_restore('restore_mask_o')
# 
#               UPDATE bgbi_t SET (bgbi002,bgbi003,bgbi045,bgbi044,bgbi004,bgbi005,bgbi024) = (g_bgbi_d[l_ac].bgbi002, 
#                   g_bgbi_d[l_ac].bgbi003,g_bgbi_d[l_ac].bgbi045,g_bgbi_d[l_ac].bgbi044,g_bgbi_d[l_ac].bgbi004, 
#                   g_bgbi_d[l_ac].bgbi005,g_bgbi_d[l_ac].bgbi024)
#                WHERE bgbient = g_enterprise AND
#                  bgbi002 = g_bgbi_d_t.bgbi002 #項次   
#                  AND bgbi003 = g_bgbi_d_t.bgbi003  
#                  AND bgbi004 = g_bgbi_d_t.bgbi004  
#                  AND bgbi005 = g_bgbi_d_t.bgbi005  
#                  AND bgbi044 = g_bgbi_d_t.bgbi044  
#                  AND bgbi045 = g_bgbi_d_t.bgbi045  
# 
#                  
#               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bgbi_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                  WHEN SQLCA.SQLCODE #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bgbi_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgbi_d[g_detail_idx].bgbi002
               LET gs_keys_bak[1] = g_bgbi_d_t.bgbi002
               LET gs_keys[2] = g_bgbi_d[g_detail_idx].bgbi003
               LET gs_keys_bak[2] = g_bgbi_d_t.bgbi003
               LET gs_keys[3] = g_bgbi_d[g_detail_idx].bgbi004
               LET gs_keys_bak[3] = g_bgbi_d_t.bgbi004
               LET gs_keys[4] = g_bgbi_d[g_detail_idx].bgbi005
               LET gs_keys_bak[4] = g_bgbi_d_t.bgbi005
               LET gs_keys[5] = g_bgbi_d[g_detail_idx].bgbi044
               LET gs_keys_bak[5] = g_bgbi_d_t.bgbi044
               LET gs_keys[6] = g_bgbi_d[g_detail_idx].bgbi045
               LET gs_keys_bak[6] = g_bgbi_d_t.bgbi045
               CALL abgt023_02_update_b('bgbi_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(修改)
                     LET g_log1 = util.JSON.stringify(g_bgbi_d_t)
                     LET g_log2 = util.JSON.stringify(g_bgbi_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN
                     END IF
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL abgt023_02_bgbi_t_mask_restore('restore_mask_n')
               
               #add-point:單身修改後 name="input.body.a_update"
               FREE abgt023_02_upd
               CALL abgt023_02_b_fill(g_wc2)
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL abgt023_02_unlock_b("bgbi_t")
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bgbi_d[l_ac].* = g_bgbi_d_t.*
               END IF
               #add-point:單身after row name="input.body.a_close"
               
               #end add-point
            ELSE
            END IF
            #其他table進行unlock
            
             #add-point:單身after row name="input.body.a_row"
            
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後 name="input.body.a_input"
            
            #end add-point
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_bgbi_d[li_reproduce_target].* = g_bgbi_d[li_reproduce].*
 
               LET g_bgbi_d[li_reproduce_target].bgbi002 = NULL
               LET g_bgbi_d[li_reproduce_target].bgbi003 = NULL
               LET g_bgbi_d[li_reproduce_target].bgbi004 = NULL
               LET g_bgbi_d[li_reproduce_target].bgbi005 = NULL
               LET g_bgbi_d[li_reproduce_target].bgbi044 = NULL
               LET g_bgbi_d[li_reproduce_target].bgbi045 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_bgbi_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_bgbi_d.getLength()+1
            END IF
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input name="input.more_input"
      
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()      
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         #LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog name="input.before_dialog"
         
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD bgbi002
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         CANCEL DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
    
   #新增後取消
   IF l_cmd = 'a' THEN
      #當取消或無輸入資料按確定時刪除對應資料
      IF INT_FLAG OR cl_null(g_bgbi_d[g_detail_idx].bgbi002) THEN
         CALL g_bgbi_d.deleteElement(g_detail_idx)
 
      END IF
   END IF
   
   #修改後取消
   IF l_cmd = 'u' AND INT_FLAG THEN
      LET g_bgbi_d[g_detail_idx].* = g_bgbi_d_t.*
   END IF
   
   #add-point:modify段修改後 name="modify.after_input"
   
   #end add-point
 
   CLOSE abgt023_02_bcl
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.delete" >}
#+ 資料刪除
PRIVATE FUNCTION abgt023_02_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point
   DEFINE li_idx          LIKE type_t.num10
   DEFINE li_ac_t         LIKE type_t.num10
   DEFINE li_detail_tmp   LIKE type_t.num10
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.before_delete"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_ac_t = l_ac
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_bgbi_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT abgt023_02_lock_b("bgbi_t") THEN
            #已被他人鎖定
            RETURN
         END IF
 
         #(ver:35) ---add start---
         #確定是否有刪除的權限
         #先確定該table有ownid
         IF cl_getField("bgbi_t","") THEN
            IF NOT cl_auth_chk_act_permission("delete") THEN
               #有目前權限無法刪除的資料
               RETURN
            END IF
         END IF
         #(ver:35) --- add end ---
      END IF
   END FOR
   
   #add-point:單身刪除詢問前 name="delete.body.b_delete_ask"
   
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_bgbi_d.getLength()
      IF g_bgbi_d[li_idx].bgbi002 IS NOT NULL
         AND g_bgbi_d[li_idx].bgbi003 IS NOT NULL
         AND g_bgbi_d[li_idx].bgbi004 IS NOT NULL
         AND g_bgbi_d[li_idx].bgbi005 IS NOT NULL
         AND g_bgbi_d[li_idx].bgbi044 IS NOT NULL
         AND g_bgbi_d[li_idx].bgbi045 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前 name="delete.body.b_delete"
         
         #end add-point   
         
         DELETE FROM bgbi_t
          WHERE bgbient = g_enterprise AND 
                bgbi002 = g_bgbi_d[li_idx].bgbi002
                AND bgbi003 = g_bgbi_d[li_idx].bgbi003
                AND bgbi004 = g_bgbi_d[li_idx].bgbi004
                AND bgbi005 = g_bgbi_d[li_idx].bgbi005
                AND bgbi044 = g_bgbi_d[li_idx].bgbi044
                AND bgbi045 = g_bgbi_d[li_idx].bgbi045
 
         #add-point:單身刪除中 name="delete.body.m_delete"
         
         #end add-point  
                
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bgbi_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            LET l_ac = li_idx
            
 
 
            
 
 
            #add-point:單身同步刪除前(同層table) name="delete.body.a_delete"
            
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgbi_d_t.bgbi002
               LET gs_keys[2] = g_bgbi_d_t.bgbi003
               LET gs_keys[3] = g_bgbi_d_t.bgbi004
               LET gs_keys[4] = g_bgbi_d_t.bgbi005
               LET gs_keys[5] = g_bgbi_d_t.bgbi044
               LET gs_keys[6] = g_bgbi_d_t.bgbi045
 
            #add-point:單身同步刪除中(同層table) name="delete.body.a_delete2"
            
            #end add-point
                           CALL abgt023_02_delete_b('bgbi_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table) name="delete.body.a_delete3"
            
            #end add-point
            #刪除相關文件
            #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL abgt023_02_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove.func"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
            
         END IF 
      END IF 
    
   END FOR
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後 name="delete.after"
   
   #end add-point  
   
   LET l_ac = li_ac_t
   
   #刷新資料
   CALL abgt023_02_b_fill(g_wc2)
            
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION abgt023_02_b_fill(p_wc2)              #BODY FILL UP
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2            STRING
   DEFINE ls_owndept_list  STRING  #(ver:35) add
   DEFINE ls_ownuser_list  STRING  #(ver:35) add
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_i      LIKE type_t.num5
   #end add-point
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前 name="b_fill.sql_before"
#以下整段跳過
IF cl_null(p_wc2) THEN
   #end add-point
 
   LET g_sql = "SELECT  DISTINCT t0.bgbi002,t0.bgbi003,t0.bgbi045,t0.bgbi044,t0.bgbi004,t0.bgbi005,t0.bgbi024  FROM bgbi_t t0", 
 
               "",
               
               " WHERE t0.bgbient= ?  AND  1=1 AND (", p_wc2, ") "
 
   #(ver:35) ---add start---
   
   #(ver:35) --- add end ---
 
   #add-point:b_fill段sql wc name="b_fill.sql_wc"
   
   #end add-point
   LET g_sql = g_sql, cl_sql_add_filter("bgbi_t"),
                      " ORDER BY t0.bgbi002,t0.bgbi003,t0.bgbi004,t0.bgbi005,t0.bgbi044,t0.bgbi045"
   
   #add-point:b_fill段sql之後 name="b_fill.sql_after"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"bgbi_t")            #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE abgt023_02_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR abgt023_02_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_bgbi_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_bgbi_d[l_ac].bgbi002,g_bgbi_d[l_ac].bgbi003,g_bgbi_d[l_ac].bgbi045,g_bgbi_d[l_ac].bgbi044, 
       g_bgbi_d[l_ac].bgbi004,g_bgbi_d[l_ac].bgbi005,g_bgbi_d[l_ac].bgbi024
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH b_fill_curs:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充 name="b_fill.fill"
      
      #end add-point
      
      CALL abgt023_02_detail_show()      
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
 
      LET l_ac = l_ac + 1
      
   END FOREACH
 
   LET g_error_show = 0
   
 
   
   CALL g_bgbi_d.deleteElement(g_bgbi_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_bgbi_d.getLength()
 
      #add-point:b_fill段key值相關欄位 name="b_fill.keys.fill"
      
      #end add-point
   END FOR
   
   IF g_cnt > g_bgbi_d.getLength() THEN
      LET l_ac = g_bgbi_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_bgbi_d.getLength()
      LET g_bgbi_d_mask_o[l_ac].* =  g_bgbi_d[l_ac].*
      CALL abgt023_02_bgbi_t_mask()
      LET g_bgbi_d_mask_n[l_ac].* =  g_bgbi_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = g_cnt
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
END  IF
   SELECT dzebl003 INTO g_bgbi_d[1].title FROM dzebl_t WHERE dzebl001='bgbi023' AND dzebl002 = g_lang
   SELECT dzebl003 INTO g_bgbi_d[2].title FROM dzebl_t WHERE dzebl001='bgbi024' AND dzebl002 = g_lang
   #160505-00011#2--s
   IF g_prog MATCHES 'abgt026' OR g_prog MATCHES 'abgt029' THEN
      SELECT dzebl003 INTO g_bgbi_d[3].title FROM dzebl_t WHERE dzebl001='bgbi025' AND dzebl002 = g_lang
      SELECT dzebl003 INTO g_bgbi_d[4].title FROM dzebl_t WHERE dzebl001='bgbi026' AND dzebl002 = g_lang
      SELECT dzebl003 INTO g_bgbi_d[5].title FROM dzebl_t WHERE dzebl001='bgbi027' AND dzebl002 = g_lang
   ELSE
   #160505-00011#2--e
      SELECT dzebl003 INTO g_bgbi_d[3].title FROM dzebl_t WHERE dzebl001='bgbi027' AND dzebl002 = g_lang
   END IF   #160505-00011#2
   
   #160505-00011#2--s
   IF g_prog MATCHES 'abgt026' OR g_prog MATCHES 'abgt029' THEN
      LET g_sql =
      #以預算編號+預算版本+管理組織+預算組織+預算細項+期別
      "SELECT ",
        #基準金額
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi023 ELSE 0 END) bgbi0231,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi023 ELSE 0 END) bgbi0232,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi023 ELSE 0 END) bgbi0233,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi023 ELSE 0 END) bgbi0234,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi023 ELSE 0 END) bgbi0235,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi023 ELSE 0 END) bgbi0236,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi023 ELSE 0 END) bgbi0237,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi023 ELSE 0 END) bgbi0238,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi023 ELSE 0 END) bgbi0239,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi023 ELSE 0 END) bgbi02310,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi023 ELSE 0 END) bgbi02311,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi023 ELSE 0 END) bgbi02312,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi023 ELSE 0 END) bgbi02313,",
        #本層調整
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi024 ELSE 0 END) bgbi0241,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi024 ELSE 0 END) bgbi0242,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi024 ELSE 0 END) bgbi0243,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi024 ELSE 0 END) bgbi0244,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi024 ELSE 0 END) bgbi0245,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi024 ELSE 0 END) bgbi0246,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi024 ELSE 0 END) bgbi0247,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi024 ELSE 0 END) bgbi0248,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi024 ELSE 0 END) bgbi0249,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi024 ELSE 0 END) bgbi02410,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi024 ELSE 0 END) bgbi02411,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi024 ELSE 0 END) bgbi02412,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi024 ELSE 0 END) bgbi02413,",
        #上層調整
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi025 ELSE 0 END) bgbi0251,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi025 ELSE 0 END) bgbi0252,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi025 ELSE 0 END) bgbi0253,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi025 ELSE 0 END) bgbi0254,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi025 ELSE 0 END) bgbi0255,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi025 ELSE 0 END) bgbi0256,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi025 ELSE 0 END) bgbi0257,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi025 ELSE 0 END) bgbi0258,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi025 ELSE 0 END) bgbi0259,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi025 ELSE 0 END) bgbi02510,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi025 ELSE 0 END) bgbi02511,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi025 ELSE 0 END) bgbi02512,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi025 ELSE 0 END) bgbi02513,",     
        #下層調整
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi026 ELSE 0 END) bgbi0261,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi026 ELSE 0 END) bgbi0262,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi026 ELSE 0 END) bgbi0263,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi026 ELSE 0 END) bgbi0264,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi026 ELSE 0 END) bgbi0265,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi026 ELSE 0 END) bgbi0266,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi026 ELSE 0 END) bgbi0267,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi026 ELSE 0 END) bgbi0268,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi026 ELSE 0 END) bgbi0269,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi026 ELSE 0 END) bgbi02610,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi026 ELSE 0 END) bgbi02611,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi026 ELSE 0 END) bgbi02612,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi026 ELSE 0 END) bgbi02613,",             
        #核准金額
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi027 ELSE 0 END) bgbi0271,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi027 ELSE 0 END) bgbi0272,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi027 ELSE 0 END) bgbi0273,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi027 ELSE 0 END) bgbi0274,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi027 ELSE 0 END) bgbi0275,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi027 ELSE 0 END) bgbi0276,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi027 ELSE 0 END) bgbi0277,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi027 ELSE 0 END) bgbi0278,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi027 ELSE 0 END) bgbi0279,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi027 ELSE 0 END) bgbi02710,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi027 ELSE 0 END) bgbi02711,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi027 ELSE 0 END) bgbi02712,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi027 ELSE 0 END) bgbi02713 ",
      " FROM bgbi_t ",
      "WHERE ",p_wc2,
      "  AND bgbi044 = '",g_bgbi.bgbi044,"'",
      "  AND bgbi004 = '",g_bgbi.bgbi004,"'",
      "  AND bgbi005 = '",g_bgbi.bgbi005,"'",
      "  AND bgbi047 = '",g_bgbi.bgbi047,"'",
      "GROUP BY bgbi002,bgbi003,bgbi045,bgbi004,bgbi005" 
      PREPARE abgt023_02_adj_detail2 FROM g_sql
      EXECUTE abgt023_02_adj_detail2 
         INTO g_bgbi_d[1].bgbi024 ,g_bgbi_d[1].bgbi0242,g_bgbi_d[1].bgbi0243,g_bgbi_d[1].bgbi0244,
              g_bgbi_d[1].bgbi0245,g_bgbi_d[1].bgbi0246,g_bgbi_d[1].bgbi0247,g_bgbi_d[1].bgbi0248,
              g_bgbi_d[1].bgbi0249,g_bgbi_d[1].bgbi02410,g_bgbi_d[1].bgbi02411,g_bgbi_d[1].bgbi02412,
              g_bgbi_d[1].bgbi02413,
              g_bgbi_d[2].bgbi024 ,g_bgbi_d[2].bgbi0242,g_bgbi_d[2].bgbi0243,g_bgbi_d[2].bgbi0244,
              g_bgbi_d[2].bgbi0245,g_bgbi_d[2].bgbi0246,g_bgbi_d[2].bgbi0247,g_bgbi_d[2].bgbi0248,
              g_bgbi_d[2].bgbi0249,g_bgbi_d[2].bgbi02410,g_bgbi_d[2].bgbi02411,g_bgbi_d[2].bgbi02412,
              g_bgbi_d[2].bgbi02413,
              g_bgbi_d[3].bgbi024  ,g_bgbi_d[3].bgbi0242 ,g_bgbi_d[3].bgbi0243 ,g_bgbi_d[3].bgbi0244 ,
              g_bgbi_d[3].bgbi0245 ,g_bgbi_d[3].bgbi0246 ,g_bgbi_d[3].bgbi0247 ,g_bgbi_d[3].bgbi0248 ,
              g_bgbi_d[3].bgbi0249 ,g_bgbi_d[3].bgbi02410,g_bgbi_d[3].bgbi02411,g_bgbi_d[3].bgbi02412,
              g_bgbi_d[3].bgbi02413,
              g_bgbi_d[4].bgbi024  ,g_bgbi_d[4].bgbi0242 ,g_bgbi_d[4].bgbi0243 ,g_bgbi_d[4].bgbi0244 ,
              g_bgbi_d[4].bgbi0245 ,g_bgbi_d[4].bgbi0246 ,g_bgbi_d[4].bgbi0247 ,g_bgbi_d[4].bgbi0248 ,
              g_bgbi_d[4].bgbi0249 ,g_bgbi_d[4].bgbi02410,g_bgbi_d[4].bgbi02411,g_bgbi_d[4].bgbi02412,
              g_bgbi_d[4].bgbi02413,
              g_bgbi_d[5].bgbi024  ,g_bgbi_d[5].bgbi0242 ,g_bgbi_d[5].bgbi0243 ,g_bgbi_d[5].bgbi0244 ,
              g_bgbi_d[5].bgbi0245 ,g_bgbi_d[5].bgbi0246 ,g_bgbi_d[5].bgbi0247 ,g_bgbi_d[5].bgbi0248 ,
              g_bgbi_d[5].bgbi0249 ,g_bgbi_d[5].bgbi02410,g_bgbi_d[5].bgbi02411,g_bgbi_d[5].bgbi02412,
              g_bgbi_d[5].bgbi02413   
      FOR l_i = 1 TO 5
         LET g_bgbi_d[l_i].l_sum = g_bgbi_d[l_i].bgbi024+g_bgbi_d[l_i].bgbi0242+g_bgbi_d[l_i].bgbi0243+
                                   g_bgbi_d[l_i].bgbi0244+g_bgbi_d[l_i].bgbi0245+g_bgbi_d[l_i].bgbi0246+
                                   g_bgbi_d[l_i].bgbi0247+g_bgbi_d[l_i].bgbi0248+g_bgbi_d[l_i].bgbi0249+
                                   g_bgbi_d[l_i].bgbi02410+g_bgbi_d[l_i].bgbi02411+g_bgbi_d[l_i].bgbi02412+
                                   g_bgbi_d[l_i].bgbi02413
      
      END FOR
      #核准金額為0表示該期沒有資料,不允許調整
      CALL cl_set_comp_visible("bgbi024,bgbi0242,bgbi0243,bgbi0244,bgbi0245,bgbi0246,bgbi0247,bgbi0248,bgbi0249,bgbi02410,bgbi02411,bgbi02412,bgbi02413",TRUE)
      IF g_bgbi_d[5].bgbi024 = 0 THEN CALL cl_set_comp_visible("bgbi024",FALSE) END IF
      IF g_bgbi_d[5].bgbi0242 = 0 THEN CALL cl_set_comp_visible("bgbi0242",FALSE) END IF
      IF g_bgbi_d[5].bgbi0243 = 0 THEN CALL cl_set_comp_visible("bgbi0243",FALSE) END IF
      IF g_bgbi_d[5].bgbi0244 = 0 THEN CALL cl_set_comp_visible("bgbi0244",FALSE) END IF
      IF g_bgbi_d[5].bgbi0245 = 0 THEN CALL cl_set_comp_visible("bgbi0245",FALSE) END IF
      IF g_bgbi_d[5].bgbi0246 = 0 THEN CALL cl_set_comp_visible("bgbi0246",FALSE) END IF
      IF g_bgbi_d[5].bgbi0247 = 0 THEN CALL cl_set_comp_visible("bgbi0247",FALSE) END IF
      IF g_bgbi_d[5].bgbi0248 = 0 THEN CALL cl_set_comp_visible("bgbi0248",FALSE) END IF
      IF g_bgbi_d[5].bgbi0249 = 0 THEN CALL cl_set_comp_visible("bgbi0249",FALSE) END IF
      IF g_bgbi_d[5].bgbi02410 = 0 THEN CALL cl_set_comp_visible("bgbi02410",FALSE) END IF
      IF g_bgbi_d[5].bgbi02411 = 0 THEN CALL cl_set_comp_visible("bgbi02411",FALSE) END IF
      IF g_bgbi_d[5].bgbi02412 = 0 THEN CALL cl_set_comp_visible("bgbi02412",FALSE) END IF
      IF g_bgbi_d[5].bgbi02413 = 0 THEN CALL cl_set_comp_visible("bgbi02413",FALSE) END IF
      
   ELSE
   #160505-00011#2--e   
      LET g_sql =
      #以預算編號+預算版本+管理組織+預算組織+預算細項+期別
      "SELECT ",
        #基準金額
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi023 ELSE 0 END) bgbi0231,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi023 ELSE 0 END) bgbi0232,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi023 ELSE 0 END) bgbi0233,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi023 ELSE 0 END) bgbi0234,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi023 ELSE 0 END) bgbi0235,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi023 ELSE 0 END) bgbi0236,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi023 ELSE 0 END) bgbi0237,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi023 ELSE 0 END) bgbi0238,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi023 ELSE 0 END) bgbi0239,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi023 ELSE 0 END) bgbi02310,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi023 ELSE 0 END) bgbi02311,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi023 ELSE 0 END) bgbi02312,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi023 ELSE 0 END) bgbi02313,",
        #本層調整
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi024 ELSE 0 END) bgbi0241,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi024 ELSE 0 END) bgbi0242,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi024 ELSE 0 END) bgbi0243,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi024 ELSE 0 END) bgbi0244,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi024 ELSE 0 END) bgbi0245,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi024 ELSE 0 END) bgbi0246,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi024 ELSE 0 END) bgbi0247,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi024 ELSE 0 END) bgbi0248,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi024 ELSE 0 END) bgbi0249,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi024 ELSE 0 END) bgbi02410,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi024 ELSE 0 END) bgbi02411,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi024 ELSE 0 END) bgbi02412,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi024 ELSE 0 END) bgbi02413,",
        #核准金額
        "SUM(CASE bgbi006 WHEN 1  THEN bgbi027 ELSE 0 END) bgbi0271,",
        "SUM(CASE bgbi006 WHEN 2  THEN bgbi027 ELSE 0 END) bgbi0272,",
        "SUM(CASE bgbi006 WHEN 3  THEN bgbi027 ELSE 0 END) bgbi0273,",
        "SUM(CASE bgbi006 WHEN 4  THEN bgbi027 ELSE 0 END) bgbi0274,",
        "SUM(CASE bgbi006 WHEN 5  THEN bgbi027 ELSE 0 END) bgbi0275,",
        "SUM(CASE bgbi006 WHEN 6  THEN bgbi027 ELSE 0 END) bgbi0276,",
        "SUM(CASE bgbi006 WHEN 7  THEN bgbi027 ELSE 0 END) bgbi0277,",
        "SUM(CASE bgbi006 WHEN 8  THEN bgbi027 ELSE 0 END) bgbi0278,",
        "SUM(CASE bgbi006 WHEN 9  THEN bgbi027 ELSE 0 END) bgbi0279,",
        "SUM(CASE bgbi006 WHEN 10 THEN bgbi027 ELSE 0 END) bgbi02710,",
        "SUM(CASE bgbi006 WHEN 11 THEN bgbi027 ELSE 0 END) bgbi02711,",
        "SUM(CASE bgbi006 WHEN 12 THEN bgbi027 ELSE 0 END) bgbi02712,",
        "SUM(CASE bgbi006 WHEN 13 THEN bgbi027 ELSE 0 END) bgbi02713 ",
      " FROM bgbi_t ",
      "WHERE ",p_wc2,
      "  AND bgbi044 = '",g_bgbi.bgbi044,"'",    #160505-00011#2
      "GROUP BY bgbi002,bgbi003,bgbi045,bgbi004,bgbi005" 
      PREPARE abgt023_02_adj_detail FROM g_sql
      EXECUTE abgt023_02_adj_detail 
         INTO g_bgbi_d[1].bgbi024 ,g_bgbi_d[1].bgbi0242,g_bgbi_d[1].bgbi0243,g_bgbi_d[1].bgbi0244,
              g_bgbi_d[1].bgbi0245,g_bgbi_d[1].bgbi0246,g_bgbi_d[1].bgbi0247,g_bgbi_d[1].bgbi0248,
              g_bgbi_d[1].bgbi0249,g_bgbi_d[1].bgbi02410,g_bgbi_d[1].bgbi02411,g_bgbi_d[1].bgbi02412,
              g_bgbi_d[1].bgbi02413,
              g_bgbi_d[2].bgbi024 ,g_bgbi_d[2].bgbi0242,g_bgbi_d[2].bgbi0243,g_bgbi_d[2].bgbi0244,
              g_bgbi_d[2].bgbi0245,g_bgbi_d[2].bgbi0246,g_bgbi_d[2].bgbi0247,g_bgbi_d[2].bgbi0248,
              g_bgbi_d[2].bgbi0249,g_bgbi_d[2].bgbi02410,g_bgbi_d[2].bgbi02411,g_bgbi_d[2].bgbi02412,
              g_bgbi_d[2].bgbi02413,
              g_bgbi_d[3].bgbi024  ,g_bgbi_d[3].bgbi0242 ,g_bgbi_d[3].bgbi0243 ,g_bgbi_d[3].bgbi0244 ,
              g_bgbi_d[3].bgbi0245 ,g_bgbi_d[3].bgbi0246 ,g_bgbi_d[3].bgbi0247 ,g_bgbi_d[3].bgbi0248 ,
              g_bgbi_d[3].bgbi0249 ,g_bgbi_d[3].bgbi02410,g_bgbi_d[3].bgbi02411,g_bgbi_d[3].bgbi02412,
              g_bgbi_d[3].bgbi02413  
      FOR l_i = 1 TO 3
         LET g_bgbi_d[l_i].l_sum = g_bgbi_d[l_i].bgbi024+g_bgbi_d[l_i].bgbi0242+g_bgbi_d[l_i].bgbi0243+
                                   g_bgbi_d[l_i].bgbi0244+g_bgbi_d[l_i].bgbi0245+g_bgbi_d[l_i].bgbi0246+
                                   g_bgbi_d[l_i].bgbi0247+g_bgbi_d[l_i].bgbi0248+g_bgbi_d[l_i].bgbi0249+
                                   g_bgbi_d[l_i].bgbi02410+g_bgbi_d[l_i].bgbi02411+g_bgbi_d[l_i].bgbi02412+
                                   g_bgbi_d[l_i].bgbi02413
      
      END FOR
   #160505-00011#2--s
      #核准金額為0表示該期沒有資料,不允許調整
      CALL cl_set_comp_visible("bgbi024,bgbi0242,bgbi0243,bgbi0244,bgbi0245,bgbi0246,bgbi0247,bgbi0248,bgbi0249,bgbi02410,bgbi02411,bgbi02412,bgbi02413",TRUE)
      IF g_bgbi_d[3].bgbi024 = 0 THEN CALL cl_set_comp_visible("bgbi024",FALSE) END IF
      IF g_bgbi_d[3].bgbi0242 = 0 THEN CALL cl_set_comp_visible("bgbi0242",FALSE) END IF
      IF g_bgbi_d[3].bgbi0243 = 0 THEN CALL cl_set_comp_visible("bgbi0243",FALSE) END IF
      IF g_bgbi_d[3].bgbi0244 = 0 THEN CALL cl_set_comp_visible("bgbi0244",FALSE) END IF
      IF g_bgbi_d[3].bgbi0245 = 0 THEN CALL cl_set_comp_visible("bgbi0245",FALSE) END IF
      IF g_bgbi_d[3].bgbi0246 = 0 THEN CALL cl_set_comp_visible("bgbi0246",FALSE) END IF
      IF g_bgbi_d[3].bgbi0247 = 0 THEN CALL cl_set_comp_visible("bgbi0247",FALSE) END IF
      IF g_bgbi_d[3].bgbi0248 = 0 THEN CALL cl_set_comp_visible("bgbi0248",FALSE) END IF
      IF g_bgbi_d[3].bgbi0249 = 0 THEN CALL cl_set_comp_visible("bgbi0249",FALSE) END IF
      IF g_bgbi_d[3].bgbi02410 = 0 THEN CALL cl_set_comp_visible("bgbi02410",FALSE) END IF
      IF g_bgbi_d[3].bgbi02411 = 0 THEN CALL cl_set_comp_visible("bgbi02411",FALSE) END IF
      IF g_bgbi_d[3].bgbi02412 = 0 THEN CALL cl_set_comp_visible("bgbi02412",FALSE) END IF
      IF g_bgbi_d[3].bgbi02413 = 0 THEN CALL cl_set_comp_visible("bgbi02413",FALSE) END IF   
   END IF  
   #160505-00011#2--e
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_bgbi_d.getLength()
   DISPLAY g_detail_idx TO FORMONLY.idx
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE abgt023_02_pb
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION abgt023_02_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="detail_show.before"
   
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
 
   
   #讀入ref值
   #add-point:show段單身reference name="detail_show.reference"
   
   #end add-point
   
 
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION abgt023_02_set_entry_b(p_cmd)                                                  
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry_b段欄位控制 name="set_entry_b.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_entry_b段control name="set_entry_b.set_entry_b"
   
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                 
 
{</section>}
 
{<section id="abgt023_02.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION abgt023_02_set_no_entry_b(p_cmd)                                               
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point   
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry_b段control name="set_no_entry_b.set_no_entry_b"
   
   #end add-point       
                                                                                
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION abgt023_02_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bgbi002 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bgbi003 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " bgbi004 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " bgbi005 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " bgbi044 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " bgbi045 = '", g_argv[06], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   LET ls_wc = "     bgbient = '",g_enterprise,"'",
               " AND bgbi002 = '",g_bgbi.bgbi002,"'", 
               " AND bgbi003 = '",g_bgbi.bgbi003,"'", 
               " AND bgbi045 = '",g_bgbi.bgbi045,"'", 
               " AND bgbi044 = '",g_bgbi.bgbi044,"'", 
               " AND ",g_bgbi.wc,"     "
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
      #預設查詢條件
      LET g_wc2 = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc2) THEN
         LET g_wc2 = " 1=1"
      END IF
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION abgt023_02_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "bgbi_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      IF ps_table <> 'bgbi_t' THEN
         #add-point:delete_b段刪除前 name="delete_b.b_delete"
         
         #end add-point     
         
         DELETE FROM bgbi_t
          WHERE bgbient = g_enterprise AND
            bgbi002 = ps_keys_bak[1] AND bgbi003 = ps_keys_bak[2] AND bgbi004 = ps_keys_bak[3] AND bgbi005 = ps_keys_bak[4] AND bgbi044 = ps_keys_bak[5] AND bgbi045 = ps_keys_bak[6]
         
         #add-point:delete_b段刪除中 name="delete_b.m_delete"
         
         #end add-point  
            
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = ":",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.popup = FALSE 
            CALL cl_err()
         END IF
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bgbi_d.deleteElement(li_idx) 
      END IF 
 
      
      #add-point:delete_b段刪除後 name="delete_b.a_delete"
      
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION abgt023_02_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "bgbi_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前 name="insert_b.b_insert"
      
      #end add-point    
      INSERT INTO bgbi_t
                  (bgbient,
                   bgbi002,bgbi003,bgbi004,bgbi005,bgbi044,bgbi045
                   ,bgbi024) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
                   ,g_bgbi_d[l_ac].bgbi024)
      #add-point:insert_b段新增中 name="insert_b.m_insert"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bgbi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      #add-point:insert_b段新增後 name="insert_b.a_insert"
      
      #end add-point    
   #END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION abgt023_02_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #比對新舊值, 判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #若key無變動, 不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #若key有變動, 則連動其他table的資料   
   #判斷是否是同一群組的table
   LET ls_group = "bgbi_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "bgbi_t" THEN
      #add-point:update_b段修改前 name="update_b.b_update"
      
      #end add-point     
      UPDATE bgbi_t 
         SET (bgbi002,bgbi003,bgbi004,bgbi005,bgbi044,bgbi045
              ,bgbi024) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6]
              ,g_bgbi_d[l_ac].bgbi024) 
         WHERE bgbient = g_enterprise AND bgbi002 = ps_keys_bak[1] AND bgbi003 = ps_keys_bak[2] AND bgbi004 = ps_keys_bak[3] AND bgbi005 = ps_keys_bak[4] AND bgbi044 = ps_keys_bak[5] AND bgbi045 = ps_keys_bak[6]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bgbi_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bgbi_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.popup = TRUE 
            CALL cl_err()
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後 name="update_b.a_update"
      
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION abgt023_02_lock_b(ps_table)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL abgt023_02_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "bgbi_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abgt023_02_bcl USING g_enterprise,
                                       g_bgbi_d[g_detail_idx].bgbi002,g_bgbi_d[g_detail_idx].bgbi003, 
                                           g_bgbi_d[g_detail_idx].bgbi004,g_bgbi_d[g_detail_idx].bgbi005, 
                                           g_bgbi_d[g_detail_idx].bgbi044,g_bgbi_d[g_detail_idx].bgbi045 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abgt023_02_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abgt023_02_unlock_b(ps_table)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE abgt023_02_bcl
   #END IF
   
 
   
   #add-point:unlock_b段結束前 name="unlock_b.after"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.modify_detail_chk" >}
#+ 單身輸入判定(因應modify_detail)
PRIVATE FUNCTION abgt023_02_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define(客製用) name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:modify_detail_chk段開始前 name="modify_detail_chk.before"
   
   #end add-point
   
   #根據sr名稱確定該page第一個欄位的名稱
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "bgbi002"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="abgt023_02.show_ownid_msg" >}
#+ 判斷是否顯示只能修改自己權限資料的訊息
#(ver:35) ---add start---
PRIVATE FUNCTION abgt023_02_show_ownid_msg()
   #add-point:show_ownid_msg段define(客製用) name="show_ownid_msg.define_customerization"
   
   #end add-point
   #add-point:show_ownid_msg段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show_ownid_msg.define"
   
   #end add-point
  
 
   
 
END FUNCTION
#(ver:35) --- add end ---
 
{</section>}
 
{<section id="abgt023_02.mask_functions" >}
&include "erp/abg/abgt023_02_mask.4gl"
 
{</section>}
 
{<section id="abgt023_02.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION abgt023_02_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bgbi_d[l_ac].bgbi002
   LET g_pk_array[1].column = 'bgbi002'
   LET g_pk_array[2].values = g_bgbi_d[l_ac].bgbi003
   LET g_pk_array[2].column = 'bgbi003'
   LET g_pk_array[3].values = g_bgbi_d[l_ac].bgbi004
   LET g_pk_array[3].column = 'bgbi004'
   LET g_pk_array[4].values = g_bgbi_d[l_ac].bgbi005
   LET g_pk_array[4].column = 'bgbi005'
   LET g_pk_array[5].values = g_bgbi_d[l_ac].bgbi044
   LET g_pk_array[5].column = 'bgbi044'
   LET g_pk_array[6].values = g_bgbi_d[l_ac].bgbi045
   LET g_pk_array[6].column = 'bgbi045'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="abgt023_02.state_change" >}
   
 
{</section>}
 
{<section id="abgt023_02.other_dialog" readonly="Y" >}

 
{</section>}
 
{<section id="abgt023_02.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 預算調整回寫CURSOR準備
# Memo...........:
# Usage..........: CALL abgt023_02_declare(p_wc)
# Parameter......: p_wc      其他條件
# Date & Author..: 160731 By 03538(#160505-00011#2)
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt023_02_declare(p_wc)
DEFINE l_sql      STRING
DEFINE p_wc       STRING

   WHENEVER ERROR CONTINUE

   #UPDATE 來源單 上層調整
   #因為可能有不同管理組織存在相同預算組織+預算細項的編制資料,因此回寫時需要將管理組織列為key   #160824-00038#1
   LET l_sql =
   " UPDATE bgbi_t SET bgbi025 = bgbi025 + ?, ",
   "                   bgbi027 = bgbi027 + ? ",
   "  WHERE bgbient = ",g_enterprise,
   "    AND bgbi002 = ? ",
   "    AND bgbi003 = ? ",
   "    AND bgbi004 = ? ",
   "    AND bgbi005 = ? ",
   "    AND bgbi006 = ? ",
   "    AND bgbi044 = ? ",
   "    AND bgbi045 = ? ",   #160824-00038#1
   "    AND ",p_wc
   PREPARE abgt023_02_upd_dnbgbi_p1 FROM l_sql
   
   #UPDATE 現在這張單  本層調整
   LET l_sql =
   " UPDATE bgbi_t SET bgbi024 = bgbi024 + ?, ",
   "                   bgbi027 = bgbi027 + ? ",
   "  WHERE bgbient = ",g_enterprise,
   "    AND bgbi002 = ? ",
   "    AND bgbi003 = ? ",
   "    AND bgbi004 = ? ",
   "    AND bgbi005 = ? ",
   "    AND bgbi006 = ? ",
   "    AND bgbi044 = ? ",
   "    AND ",p_wc    
   PREPARE abgt023_02_upd_nowbgbi_p1 FROM l_sql
   
   #UPDATE 上層
   LET l_sql =
   " UPDATE bgbi_t SET bgbi026 = bgbi026 + ?, ",
   "                   bgbi027 = bgbi027 + ? ",
   "  WHERE bgbient = ",g_enterprise,
   "    AND bgbi002 = ? ",
   "    AND bgbi003 = ? ",
   "    AND bgbi004 = ? ",
   "    AND bgbi005 = ? ",
   "    AND bgbi006 = ? ",
   "    AND bgbi044 = ? ",
   "    AND ",p_wc           
   PREPARE abgt023_02_upd_upbgbi_p1 FROM l_sql
   
   #UPDATE 來源單 上層調整
   LET l_sql = 
   " UPDATE bgbi_t SET bgbi025 = bgbi025 + ?, ",
   "                   bgbi027 = bgbi027 + ? ",
   "  WHERE bgbient = ",g_enterprise,
   "    AND bgbi002 = ? ",
   "    AND bgbi003 = ? ",
   "    AND bgbi004 = ? ",
   "    AND bgbi005 = ? ",
   "    AND bgbiseq = ? ",
   "    AND bgbi044 = ? "
   PREPARE abgt023_02_upd_dnbgbi_p2 FROM l_sql
   
END FUNCTION
################################################################################
# Descriptions...: 把資料倒入臨時表
# Memo...........:
# Usage..........:
# Date & Author..: 160727 By 03538(#160505-00011#2)
# Modify.........:
#160824-00038#1   160828   By 03538      tmp增加管理組織,為區分不同管理組織,但卻同預算組織+預算細項資料回寫調整金額
################################################################################
PUBLIC FUNCTION abgt023_02_ins_tmp(p_wc,ls_js)
   DEFINE p_wc      STRING
   DEFINE ls_js     STRING
   DEFINE lc_param  type_g_bgbi_h       
   DEFINE l_sql     STRING
   DEFINE l_tmp     RECORD
      bgbiseq       LIKE bgbi_t.bgbiseq,    #項次
      bgbi002       LIKE bgbi_t.bgbi002,    #預算編號
      bgbi003       LIKE bgbi_t.bgbi003,    #預算版本
      bgbi004       LIKE bgbi_t.bgbi004,    #預算組織
      bgbi005       LIKE bgbi_t.bgbi005,    #預算項目
      bgbi006       LIKE bgbi_t.bgbi006,    #預算期別
      bgbi007       LIKE bgbi_t.bgbi007,    #部門
      bgbi008       LIKE bgbi_t.bgbi008,    #成本利潤中心
      bgbi009       LIKE bgbi_t.bgbi009,    #區域
      bgbi010       LIKE bgbi_t.bgbi010,    #交易客商
      bgbi011       LIKE bgbi_t.bgbi011,    #收款客商
      bgbi012       LIKE bgbi_t.bgbi012,    #客群
      bgbi013       LIKE bgbi_t.bgbi013,    #產品類別
      bgbi014       LIKE bgbi_t.bgbi014,    #人員
      bgbi015       LIKE bgbi_t.bgbi015,    #專案編號
      bgbi016       LIKE bgbi_t.bgbi016,    #WBS
      bgbi039       LIKE bgbi_t.bgbi039,    #經營方式
      bgbi040       LIKE bgbi_t.bgbi040,    #渠道
      bgbi041       LIKE bgbi_t.bgbi041,    #品牌
      bgbi028       LIKE bgbi_t.bgbi028,    #自由核算項一
      bgbi029       LIKE bgbi_t.bgbi029,    #自由核算項二
      bgbi030       LIKE bgbi_t.bgbi030,    #自由核算項三
      bgbi031       LIKE bgbi_t.bgbi031,    #自由核算項四
      bgbi032       LIKE bgbi_t.bgbi032,    #自由核算項五
      bgbi033       LIKE bgbi_t.bgbi033,    #自由核算項六
      bgbi034       LIKE bgbi_t.bgbi034,    #自由核算項七
      bgbi035       LIKE bgbi_t.bgbi035,    #自由核算項八
      bgbi036       LIKE bgbi_t.bgbi036,    #自由核算項九
      bgbi037       LIKE bgbi_t.bgbi037,    #自由核算項十
      bgbi038       LIKE bgbi_t.bgbi038,    #現金變動碼
      bgbi023       LIKE bgbi_t.bgbi023,    #基準金額
      bgbi024       LIKE bgbi_t.bgbi024,    #本層調整
      bgbi025       LIKE bgbi_t.bgbi025,    #上層調整
      bgbi026       LIKE bgbi_t.bgbi026,    #下層調整
      bgbi027       LIKE bgbi_t.bgbi027,    #核准金額     
      accountc      LIKE type_t.num20_6,    #變動金額
      upd           LIKE type_t.chr1,       #已回寫
      bgbi044       LIKE bgbi_t.bgbi044,    #異動類型
      bgbi045       LIKE bgbi_t.bgbi045,    #管理組織   #160824-00038#1      
      bgbi017       LIKE bgbi_t.bgbi017,    #來源原幣
      site026       LIKE ooef_t.ooef001,    #預算審核組織
      seq026        LIKE type_t.num10       #預算審核項次
                END RECORD
   DEFINE l_bgbi004 LIKE bgbi_t.bgbi004
   DEFINE l_bgbi044 LIKE bgbi_t.bgbi044
   DEFINE l_tok     base.Stringtokenizer
   DEFINE l_count   LIKE type_t.num10
   DEFINE l_dnstep_str STRING
   
   WHENEVER ERROR CONTINUE
 
   ##########
   CALL util.JSON.parse(ls_js,lc_param)
   DELETE FROM s_abgt026_tmp1
   #1.先取得組織範圍   自己p_bgbi004    自己的下層l_dnstep_str
   LET l_dnstep_str = NULL
   CALL s_abgt026_get_dnstep_site(lc_param.bgbi002,'','',lc_param.bgbi004)
      RETURNING l_dnstep_str
      
   LET l_sql = "SELECT bgbiseq,      bgbi002,      bgbi003,      bgbi004,      bgbi005, ",
               "       bgbi006,      bgbi007,      bgbi008,      bgbi009,      bgbi010, ", 
               "       bgbi011,      bgbi012,      bgbi013,      bgbi014,      bgbi015, ",
               "       bgbi016,      bgbi039,      bgbi040,      bgbi041,      bgbi028, ",
               "       bgbi029,      bgbi030,      bgbi031,      bgbi032,      bgbi033, ",
               "       bgbi034,      bgbi035,      bgbi036,      bgbi037,      bgbi038, ",
               "       bgbi023,      bgbi024,      bgbi025,      bgbi026,      bgbi027,  ",
              #"       0,            'N',          bgbi044,      bgbi017,      '', ",        #160824-00038#1 mark
              #"       '' ",                                                                 #160824-00038#1 mark 
               "       0,            'N',          bgbi044,      bgbi045,      bgbi017, ",   #160824-00038#1
               "       '',           '' ",                                                   #160824-00038#1               
               "  FROM bgbi_t ",  
               " WHERE bgbient = ", g_enterprise," ",
               "   AND bgbistus IN ('Y','FC') ",
               "   AND bgbi002 = ? ",
               "   AND bgbi003 = ? ",
               "   AND bgbi004 = ? ",
               "   AND bgbi005 = ? ",
               "   AND bgbi044 = ? ",
              #"   AND bgbi045 = ? ",            #160824-00038#1 mark
               "   AND (bgbi045 = ? OR 1=1 )",   #160824-00038#1 
               "   AND ",p_wc CLIPPED  
   PREPARE sel_bgbip1 FROM l_sql
   DECLARE sel_bgbic1 CURSOR FOR sel_bgbip1
               
   #2.自己的abgt023資料倒入
   LET l_bgbi004 = lc_param.bgbi004
   LET l_bgbi044 = '1'
   FOREACH sel_bgbic1 USING lc_param.bgbi002,lc_param.bgbi003,l_bgbi004,lc_param.bgbi005,l_bgbi044,lc_param.bgbi045
      INTO l_tmp.*
      IF SQLCA.SQLCODE THEN 
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.extend = 'FOREACH:sel_bgbic1:1'
         CALL cl_err()
         EXIT FOREACH
      END IF

      LET l_tmp.site026 = lc_param.bgbi004
      #INSERT INTO s_abgt026_tmp1 VALUES(l_tmp.*)   #161108-00017#5   mark
      #161108-00017#5   add---s
      INSERT INTO s_abgt026_tmp1 (bgbiseq,bgbi002,bgbi003,bgbi004,bgbi005,   
                                  bgbi006,bgbi007,bgbi008,bgbi009,bgbi010,   
                                  bgbi011,bgbi012,bgbi013,bgbi014,bgbi015,   
                                  bgbi016,bgbi039,bgbi040,bgbi041,bgbi028,   
                                  bgbi029,bgbi030,bgbi031,bgbi032,bgbi033,   
                                  bgbi034,bgbi035,bgbi036,bgbi037,bgbi038,   
                                  bgbi023,bgbi024,bgbi025,bgbi026,bgbi027,   
                                  accountc,upd,bgbi044,bgbi045,bgbi017,   
                                  site025,seq025)     
                          VALUES (l_tmp.bgbiseq,l_tmp.bgbi002,l_tmp.bgbi003,l_tmp.bgbi004,l_tmp.bgbi005,   
                                  l_tmp.bgbi006,l_tmp.bgbi007,l_tmp.bgbi008,l_tmp.bgbi009,l_tmp.bgbi010,   
                                  l_tmp.bgbi011,l_tmp.bgbi012,l_tmp.bgbi013,l_tmp.bgbi014,l_tmp.bgbi015,   
                                  l_tmp.bgbi016,l_tmp.bgbi039,l_tmp.bgbi040,l_tmp.bgbi041,l_tmp.bgbi028,   
                                  l_tmp.bgbi029,l_tmp.bgbi030,l_tmp.bgbi031,l_tmp.bgbi032,l_tmp.bgbi033,   
                                  l_tmp.bgbi034,l_tmp.bgbi035,l_tmp.bgbi036,l_tmp.bgbi037,l_tmp.bgbi038,   
                                  l_tmp.bgbi023,l_tmp.bgbi024,l_tmp.bgbi025,l_tmp.bgbi026,l_tmp.bgbi027,   
                                  l_tmp.accountc,l_tmp.upd,l_tmp.bgbi044,l_tmp.bgbi045,l_tmp.bgbi017,   
                                  l_tmp.site026,l_tmp.seq026)
      #161108-00017#5   add---e
   END FOREACH
   
   #3 下層組織的abgt023或abgt026資料倒入
   LET l_tok = base.StringTokenizer.create(l_dnstep_str,",")
   WHILE l_tok.hasMoreTokens()
      LET l_bgbi004 = l_tok.nextToken()
      IF l_bgbi004 = lc_param.bgbi004 THEN
         CONTINUE WHILE
      END IF
      #判斷本層匯總資料是否存在 存在就優先抓
      LET l_count = NULL
      SELECT COUNT(*) INTO l_count 
        FROM bgbi_t
       WHERE bgbient = g_enterprise
         AND bgbi002 = lc_param.bgbi002
         AND bgbi003 = lc_param.bgbi003
         AND bgbi004 = l_bgbi004
         AND bgbi005 = lc_param.bgbi005
         AND bgbi044 = '2'
         AND bgbistus IN ('Y','FC')
      IF cl_null(l_count)THEN LET l_count = 0 END IF
      
      IF l_count > 0 THEN
         LET l_bgbi044 = '2'
      ELSE
         LET l_bgbi044 = '1'
      END IF
      
      FOREACH sel_bgbic1 USING lc_param.bgbi002,lc_param.bgbi003,l_bgbi004,lc_param.bgbi005,l_bgbi044,lc_param.bgbi045
         INTO l_tmp.*
         IF SQLCA.SQLCODE THEN 
            INITIALIZE g_errparam.* TO NULL
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.extend = 'FOREACH:sel_bgbic1:2'
            CALL cl_err()
            EXIT FOREACH
         END IF

         LET l_tmp.site026 = lc_param.bgbi004
         #INSERT INTO s_abgt026_tmp1 VALUES(l_tmp.*)   #161108-00017#5   mark
         #161108-00017#5   add---s
         INSERT INTO s_abgt026_tmp1 (bgbiseq,bgbi002,bgbi003,bgbi004,bgbi005,   
                                     bgbi006,bgbi007,bgbi008,bgbi009,bgbi010,   
                                     bgbi011,bgbi012,bgbi013,bgbi014,bgbi015,   
                                     bgbi016,bgbi039,bgbi040,bgbi041,bgbi028,   
                                     bgbi029,bgbi030,bgbi031,bgbi032,bgbi033,   
                                     bgbi034,bgbi035,bgbi036,bgbi037,bgbi038,   
                                     bgbi023,bgbi024,bgbi025,bgbi026,bgbi027,   
                                     accountc,upd,bgbi044,bgbi045,bgbi017,   
                                     site025,seq025)     
                             VALUES (l_tmp.bgbiseq,l_tmp.bgbi002,l_tmp.bgbi003,l_tmp.bgbi004,l_tmp.bgbi005,   
                                     l_tmp.bgbi006,l_tmp.bgbi007,l_tmp.bgbi008,l_tmp.bgbi009,l_tmp.bgbi010,   
                                     l_tmp.bgbi011,l_tmp.bgbi012,l_tmp.bgbi013,l_tmp.bgbi014,l_tmp.bgbi015,   
                                     l_tmp.bgbi016,l_tmp.bgbi039,l_tmp.bgbi040,l_tmp.bgbi041,l_tmp.bgbi028,   
                                     l_tmp.bgbi029,l_tmp.bgbi030,l_tmp.bgbi031,l_tmp.bgbi032,l_tmp.bgbi033,   
                                     l_tmp.bgbi034,l_tmp.bgbi035,l_tmp.bgbi036,l_tmp.bgbi037,l_tmp.bgbi038,   
                                     l_tmp.bgbi023,l_tmp.bgbi024,l_tmp.bgbi025,l_tmp.bgbi026,l_tmp.bgbi027,   
                                     l_tmp.accountc,l_tmp.upd,l_tmp.bgbi044,l_tmp.bgbi045,l_tmp.bgbi017,   
                                     l_tmp.site026,l_tmp.seq026)
         #161108-00017#5   add---e
      END FOREACH
   END WHILE


END FUNCTION
################################################################################
# Descriptions...: 回寫各來源資料及臨時表資料方便後續呈現
# Memo...........:
# Parameter......: p_wc      本次調整條件
# ...............: p_period  期別 
# ...............: p_amt     原來金額
# ...............: p_adjamt  調整金額
# Date & Author..: 160731 by 03538(#160505-00011#2)
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt023_02_upd_source(p_wc,p_period,p_amt,p_adjamt)
DEFINE p_wc       STRING
DEFINE p_period   LIKE bgbi_t.bgbi006
DEFINE p_amt      LIKE bgbi_t.bgbi027
DEFINE p_adjamt   LIKE bgbi_t.bgbi023
DEFINE l_count    LIKE type_t.num10
DEFINE l_i        LIKE type_t.num10
DEFINE l_i2       LIKE type_t.num10
DEFINE l_wc       STRING
DEFINE l_sql      STRING
DEFINE l_tmp  RECORD
   bgbiseq   LIKE bgbi_t.bgbiseq,    #項次
   bgbi002   LIKE bgbi_t.bgbi002,    #預算編號
   bgbi003   LIKE bgbi_t.bgbi003,    #預算版本
   bgbi004   LIKE bgbi_t.bgbi004,    #預算組織
   bgbi005   LIKE bgbi_t.bgbi005,    #預算項目
   bgbi006   LIKE bgbi_t.bgbi006,    #預算期別
   bgbi007   LIKE bgbi_t.bgbi007,    #部門
   bgbi008   LIKE bgbi_t.bgbi008,    #成本利潤中心
   bgbi009   LIKE bgbi_t.bgbi009,    #區域
   bgbi010   LIKE bgbi_t.bgbi010,    #交易客商
   bgbi011   LIKE bgbi_t.bgbi011,    #收款客商
   bgbi012   LIKE bgbi_t.bgbi012,    #客群
   bgbi013   LIKE bgbi_t.bgbi013,    #產品類別
   bgbi014   LIKE bgbi_t.bgbi014,    #人員
   bgbi015   LIKE bgbi_t.bgbi015,    #專案編號
   bgbi016   LIKE bgbi_t.bgbi016,    #WBS
   bgbi039   LIKE bgbi_t.bgbi039,    #經營方式
   bgbi040   LIKE bgbi_t.bgbi040,    #渠道
   bgbi041   LIKE bgbi_t.bgbi041,    #品牌
   bgbi028   LIKE bgbi_t.bgbi028,    #自由核算項一
   bgbi029   LIKE bgbi_t.bgbi029,    #自由核算項二
   bgbi030   LIKE bgbi_t.bgbi030,    #自由核算項三
   bgbi031   LIKE bgbi_t.bgbi031,    #自由核算項四
   bgbi032   LIKE bgbi_t.bgbi032,    #自由核算項五
   bgbi033   LIKE bgbi_t.bgbi033,    #自由核算項六
   bgbi034   LIKE bgbi_t.bgbi034,    #自由核算項七
   bgbi035   LIKE bgbi_t.bgbi035,    #自由核算項八
   bgbi036   LIKE bgbi_t.bgbi036,    #自由核算項九
   bgbi037   LIKE bgbi_t.bgbi037,    #自由核算項十
   bgbi038   LIKE bgbi_t.bgbi038,    #現金變動碼
   bgbi023   LIKE bgbi_t.bgbi023,    #基準金額
   bgbi024   LIKE bgbi_t.bgbi024,    #本層調整
   bgbi025   LIKE bgbi_t.bgbi025,    #上層調整
   bgbi026   LIKE bgbi_t.bgbi026,    #下層調整
   bgbi027   LIKE bgbi_t.bgbi027,    #核准金額     
   accountc  LIKE type_t.num20_6,    #變動金額
   upd       LIKE type_t.chr1,        #已回寫
   bgbi044   LIKE bgbi_t.bgbi044,     #異動類型
   bgbi045   LIKE bgbi_t.bgbi045,    #管理組織   #160824-00038#1   
   bgbi017   LIKE bgbi_t.bgbi017,    #來源原幣
   site025   LIKE ooef_t.ooef001,    #預算審核組織
   seq025    LIKE type_t.num10       #預算審核項次
              END RECORD
DEFINE l_fieldh   STRING
DEFINE l_do       LIKE type_t.num20_6   #已分攤回寫
DEFINE l_needdo   LIKE type_t.num20_6   #需要分攤的
DEFINE l_accountc LIKE type_t.num20_6   #
DEFINE l_upd_up   LIKE type_t.chr1      #是否回寫上層
DEFINE l_site025 LIKE ooef_t.ooef001  #上一層的組織
DEFINE l_seq025   LIKE type_t.num10     #上層項次

   WHENEVER ERROR CONTINUE

   #判斷是否有需要做UPDATE SOURCE
   LET l_count = NULL
   SELECT COUNT(*) INTO l_count
     FROM s_abgt026_tmp1
    WHERE upd = 'N' 
   IF cl_null(l_count)THEN LET l_count = 0 END IF
   
   IF l_count = 0 THEN RETURN END IF
   
   #判斷是否需要回寫上層
   CALL s_abgt026_get_upstep_site(g_bgbi.bgbi002,'','',g_bgbi.bgbi004)
      RETURNING l_site025
   
   LET l_count = NULL
   SELECT COUNT(*) INTO l_count
     FROM bgbi_t
    WHERE bgbient = g_enterprise
      AND bgbi002 = g_bgbi.bgbi002
      AND bgbi003 = g_bgbi.bgbi003
      AND bgbi004 = l_site025
      AND bgbi005 = g_bgbi.bgbi005
      AND bgbi044 = '2'
      AND bgbi006 = p_period
      
   IF cl_null(l_count)THEN LET l_count = 0 END IF
   IF l_count > 0 AND l_site025 <> g_bgbi.bgbi004 THEN
      LET l_upd_up = 'Y'
   ELSE
      LEt l_upd_up = 'N'
   END IF
  
   #攤修改的預算   #以單身為最後修改結果BASE
   IF p_adjamt <> 0 THEN   #有調整金額
    
      LET l_sql = "SELECT * FROM s_abgt026_tmp1 ",
                  " WHERE ",p_wc,
                  " ORDER BY bgbi027 "
                  
      PREPARE sel_abgt026_tmp2p FROM l_sql
      DECLARE sel_abgt026_tmp2c CURSOR FOR sel_abgt026_tmp2p
      
      LET l_sql = "SELECT COUNT(*) FROM ( ",l_sql,") "
      PREPARE sel_abgt026_tmp3p FROM l_sql
      LET l_count = NULL
      EXECUTE sel_abgt026_tmp3p INTO l_count
      IF cl_null(l_count) THEN LET l_count = 0 END IF
      
      LET l_ac = 1
      LET l_do = 0
      FOREACH sel_abgt026_tmp2c INTO l_tmp.*
         IF SQLCA.SQLCODE THEN
            EXIT FOREACH
         END IF            
         #最後一筆用倒算,避免尾差            
         IF l_count = l_ac THEN
            IF l_ac = 1 THEN
               LET l_accountc = p_adjamt
            ELSE
               LET l_accountc = p_adjamt - l_do
            END IF
         ELSE
            LET l_accountc = p_adjamt * l_tmp.bgbi027 / p_amt
            #依預算編制幣別取位
            CALL s_curr_round(g_bgbi.bgbi004,g_bgbi.bgbi017,l_accountc,2) RETURNING l_accountc               
         END IF
         
         #UPDATE 來源單 上層調整
         EXECUTE abgt023_02_upd_dnbgbi_p1 USING l_accountc,l_accountc,l_tmp.bgbi002,l_tmp.bgbi003,l_tmp.bgbi004,
                                             #l_tmp.bgbi005,p_period,l_tmp.bgbi044                 #160824-00038#1 mark
                                              l_tmp.bgbi005,p_period,l_tmp.bgbi044,l_tmp.bgbi045   #160824-00038#1
            
         #UPDATE 現在這張單  本層調整
         EXECUTE abgt023_02_upd_nowbgbi_p1 USING l_accountc,l_accountc,l_tmp.bgbi002,l_tmp.bgbi003,l_tmp.site025,
                                                 l_tmp.bgbi005,p_period,'2'            
    
         #有上層的話要回寫上層的下層調整
         IF l_upd_up = 'Y' THEN               
             #UPDATE 上層
             EXECUTE abgt023_02_upd_upbgbi_p1 USING l_accountc,l_accountc,l_tmp.bgbi002,l_tmp.bgbi003,l_site025,   
                                                    l_tmp.bgbi005,p_period,'2'               
         END IF
            
         #UPDATE 已經攤算的
         UPDATE s_abgt026_tmp1 SET accountc = l_accountc,
                                   upd = 'Y'
          WHERE bgbi002 = l_tmp.bgbi002
            AND bgbi003 = l_tmp.bgbi003
            AND bgbi004 = l_tmp.bgbi004
            AND bgbi005 = l_tmp.bgbi005
            AND bgbi006 = p_period
            AND bgbi044 = l_tmp.bgbi044 
         
         #來源為abgt026時要往下展
         IF l_tmp.bgbi044 = '2' THEN
            #往下層繼續展開
            CALL abgt023_02_upd_source_down(p_wc,l_tmp.bgbi002,l_tmp.bgbi003,l_tmp.bgbi004,
                                            l_tmp.bgbi005,l_tmp.bgbi044,l_tmp.bgbiseq,l_accountc)
         END IF   
         
         LET l_do = l_do + l_accountc
         LET l_ac = l_ac + 1
      END FOREACH         
   END IF
   
END FUNCTION
################################################################################
# Descriptions...: ins符合條件的下層組織資料到臨時表
# Memo...........:
# Usage..........: 
# Date & Author..: 160731 By 03538(#160505-00011#2)
# Modify.........:
#160824-00038#1   160828   By 03538      tmp增加管理組織,為區分不同管理組織,但卻同預算組織+預算細項資料回寫調整金額
################################################################################
PRIVATE FUNCTION abgt023_02_ins_tmp2(p_wc,p_bgbi002,p_bgbi003,p_bgbi004,p_bgbi005,p_bgbi044,p_bgbiseq)
   DEFINE p_wc      STRING
   DEFINE p_bgbi002 LIKE bgbi_t.bgbi002
   DEFINE p_bgbi003 LIKE bgbi_t.bgbi003
   DEFINE p_bgbi004 LIKE bgbi_t.bgbi004
   DEFINE p_bgbi005 LIKE bgbi_t.bgbi005
   DEFINE p_bgbi044 LIKE bgbi_t.bgbi044
   DEFINE p_bgbiseq LIKE bgbi_t.bgbiseq
   DEFINE l_sql  STRING
  #DEFINE l_bgbi      RECORD LIKE bgbi_t.* #161104-00024#8  mark
   #161104-00024#8   --s add
   DEFINE l_bgbi RECORD  #年度預算單身檔
       bgbient LIKE bgbi_t.bgbient, #企業編號
       bgbiseq LIKE bgbi_t.bgbiseq, #項次
       bgbi001 LIKE bgbi_t.bgbi001, #摘要
       bgbi002 LIKE bgbi_t.bgbi002, #預算編號
       bgbi003 LIKE bgbi_t.bgbi003, #預算版本
       bgbi004 LIKE bgbi_t.bgbi004, #預算組織
       bgbi005 LIKE bgbi_t.bgbi005, #預算細項
       bgbi006 LIKE bgbi_t.bgbi006, #預算期別
       bgbi007 LIKE bgbi_t.bgbi007, #部門
       bgbi008 LIKE bgbi_t.bgbi008, #成本利潤中心
       bgbi009 LIKE bgbi_t.bgbi009, #區域
       bgbi010 LIKE bgbi_t.bgbi010, #交易客商
       bgbi011 LIKE bgbi_t.bgbi011, #收款客商
       bgbi012 LIKE bgbi_t.bgbi012, #客群
       bgbi013 LIKE bgbi_t.bgbi013, #產品類別
       bgbi014 LIKE bgbi_t.bgbi014, #人員
       bgbi015 LIKE bgbi_t.bgbi015, #專案編號
       bgbi016 LIKE bgbi_t.bgbi016, #WBS
       bgbi017 LIKE bgbi_t.bgbi017, #預算幣別
       bgbi018 LIKE bgbi_t.bgbi018, #含稅單價
       bgbi019 LIKE bgbi_t.bgbi019, #不含稅單價
       bgbi020 LIKE bgbi_t.bgbi020, #稅別
       bgbi021 LIKE bgbi_t.bgbi021, #交易數量
       bgbi022 LIKE bgbi_t.bgbi022, #交易金額
       bgbi023 LIKE bgbi_t.bgbi023, #基準金額
       bgbi024 LIKE bgbi_t.bgbi024, #本層調整
       bgbi025 LIKE bgbi_t.bgbi025, #上層調整
       bgbi026 LIKE bgbi_t.bgbi026, #下層調整
       bgbi027 LIKE bgbi_t.bgbi027, #核准金額
       bgbi028 LIKE bgbi_t.bgbi028, #自由核算項一
       bgbi029 LIKE bgbi_t.bgbi029, #自由核算項二
       bgbi030 LIKE bgbi_t.bgbi030, #自由核算項三
       bgbi031 LIKE bgbi_t.bgbi031, #自由核算項四
       bgbi032 LIKE bgbi_t.bgbi032, #自由核算項五
       bgbi033 LIKE bgbi_t.bgbi033, #自由核算項六
       bgbi034 LIKE bgbi_t.bgbi034, #自由核算項七
       bgbi035 LIKE bgbi_t.bgbi035, #自由核算項八
       bgbi036 LIKE bgbi_t.bgbi036, #自由核算項九
       bgbi037 LIKE bgbi_t.bgbi037, #自由核算項十
       bgbi038 LIKE bgbi_t.bgbi038, #現金變動碼
       bgbi039 LIKE bgbi_t.bgbi039, #經營方式
       bgbi040 LIKE bgbi_t.bgbi040, #通路
       bgbi041 LIKE bgbi_t.bgbi041, #品牌
       bgbi042 LIKE bgbi_t.bgbi042, #稅率
       bgbi043 LIKE bgbi_t.bgbi043, #匯率
       bgbiud001 LIKE bgbi_t.bgbiud001, #自定義欄位(文字)001
       bgbiud002 LIKE bgbi_t.bgbiud002, #自定義欄位(文字)002
       bgbiud003 LIKE bgbi_t.bgbiud003, #自定義欄位(文字)003
       bgbiud004 LIKE bgbi_t.bgbiud004, #自定義欄位(文字)004
       bgbiud005 LIKE bgbi_t.bgbiud005, #自定義欄位(文字)005
       bgbiud006 LIKE bgbi_t.bgbiud006, #自定義欄位(文字)006
       bgbiud007 LIKE bgbi_t.bgbiud007, #自定義欄位(文字)007
       bgbiud008 LIKE bgbi_t.bgbiud008, #自定義欄位(文字)008
       bgbiud009 LIKE bgbi_t.bgbiud009, #自定義欄位(文字)009
       bgbiud010 LIKE bgbi_t.bgbiud010, #自定義欄位(文字)010
       bgbiud011 LIKE bgbi_t.bgbiud011, #自定義欄位(數字)011
       bgbiud012 LIKE bgbi_t.bgbiud012, #自定義欄位(數字)012
       bgbiud013 LIKE bgbi_t.bgbiud013, #自定義欄位(數字)013
       bgbiud014 LIKE bgbi_t.bgbiud014, #自定義欄位(數字)014
       bgbiud015 LIKE bgbi_t.bgbiud015, #自定義欄位(數字)015
       bgbiud016 LIKE bgbi_t.bgbiud016, #自定義欄位(數字)016
       bgbiud017 LIKE bgbi_t.bgbiud017, #自定義欄位(數字)017
       bgbiud018 LIKE bgbi_t.bgbiud018, #自定義欄位(數字)018
       bgbiud019 LIKE bgbi_t.bgbiud019, #自定義欄位(數字)019
       bgbiud020 LIKE bgbi_t.bgbiud020, #自定義欄位(數字)020
       bgbiud021 LIKE bgbi_t.bgbiud021, #自定義欄位(日期時間)021
       bgbiud022 LIKE bgbi_t.bgbiud022, #自定義欄位(日期時間)022
       bgbiud023 LIKE bgbi_t.bgbiud023, #自定義欄位(日期時間)023
       bgbiud024 LIKE bgbi_t.bgbiud024, #自定義欄位(日期時間)024
       bgbiud025 LIKE bgbi_t.bgbiud025, #自定義欄位(日期時間)025
       bgbiud026 LIKE bgbi_t.bgbiud026, #自定義欄位(日期時間)026
       bgbiud027 LIKE bgbi_t.bgbiud027, #自定義欄位(日期時間)027
       bgbiud028 LIKE bgbi_t.bgbiud028, #自定義欄位(日期時間)028
       bgbiud029 LIKE bgbi_t.bgbiud029, #自定義欄位(日期時間)029
       bgbiud030 LIKE bgbi_t.bgbiud030, #自定義欄位(日期時間)030
       bgbi044 LIKE bgbi_t.bgbi044, #資料來源
       bgbi045 LIKE bgbi_t.bgbi045, #管理組織
       bgbi046 LIKE bgbi_t.bgbi046, #預算樣表
       bgbiownid LIKE bgbi_t.bgbiownid, #資料所有者
       bgbiowndp LIKE bgbi_t.bgbiowndp, #資料所屬部門
       bgbicrtid LIKE bgbi_t.bgbicrtid, #資料建立者
       bgbicrtdp LIKE bgbi_t.bgbicrtdp, #資料建立部門
       bgbicrtdt LIKE bgbi_t.bgbicrtdt, #資料創建日
       bgbimodid LIKE bgbi_t.bgbimodid, #資料修改者
       bgbimoddt LIKE bgbi_t.bgbimoddt, #最近修改日
       bgbicnfid LIKE bgbi_t.bgbicnfid, #資料確認者
       bgbicnfdt LIKE bgbi_t.bgbicnfdt, #資料確認日
       bgbistus LIKE bgbi_t.bgbistus, #狀態碼
       bgbi047 LIKE bgbi_t.bgbi047  #上層組織
   END RECORD
   #161104-00024#8  --e add
   DEFINE l_tmp  RECORD
      bgbiseq   LIKE bgbi_t.bgbiseq,    #項次
      bgbi002   LIKE bgbi_t.bgbi002,    #預算編號
      bgbi003   LIKE bgbi_t.bgbi003,    #預算版本
      bgbi004   LIKE bgbi_t.bgbi004,    #預算組織
      bgbi005   LIKE bgbi_t.bgbi005,    #預算項目
      bgbi006   LIKE bgbi_t.bgbi006,    #預算期別
      bgbi007   LIKE bgbi_t.bgbi007,    #部門
      bgbi008   LIKE bgbi_t.bgbi008,    #成本利潤中心
      bgbi009   LIKE bgbi_t.bgbi009,    #區域
      bgbi010   LIKE bgbi_t.bgbi010,    #交易客商
      bgbi011   LIKE bgbi_t.bgbi011,    #收款客商
      bgbi012   LIKE bgbi_t.bgbi012,    #客群
      bgbi013   LIKE bgbi_t.bgbi013,    #產品類別
      bgbi014   LIKE bgbi_t.bgbi014,    #人員
      bgbi015   LIKE bgbi_t.bgbi015,    #專案編號
      bgbi016   LIKE bgbi_t.bgbi016,    #WBS
      bgbi039   LIKE bgbi_t.bgbi039,    #經營方式
      bgbi040   LIKE bgbi_t.bgbi040,    #渠道
      bgbi041   LIKE bgbi_t.bgbi041,    #品牌
      bgbi028   LIKE bgbi_t.bgbi028,    #自由核算項一
      bgbi029   LIKE bgbi_t.bgbi029,    #自由核算項二
      bgbi030   LIKE bgbi_t.bgbi030,    #自由核算項三
      bgbi031   LIKE bgbi_t.bgbi031,    #自由核算項四
      bgbi032   LIKE bgbi_t.bgbi032,    #自由核算項五
      bgbi033   LIKE bgbi_t.bgbi033,    #自由核算項六
      bgbi034   LIKE bgbi_t.bgbi034,    #自由核算項七
      bgbi035   LIKE bgbi_t.bgbi035,    #自由核算項八
      bgbi036   LIKE bgbi_t.bgbi036,    #自由核算項九
      bgbi037   LIKE bgbi_t.bgbi037,    #自由核算項十
      bgbi038   LIKE bgbi_t.bgbi038,    #現金變動碼
      bgbi023   LIKE bgbi_t.bgbi023,    #基準金額
      bgbi024   LIKE bgbi_t.bgbi024,    #本層調整
      bgbi025   LIKE bgbi_t.bgbi025,    #上層調整
      bgbi026   LIKE bgbi_t.bgbi026,    #下層調整
      bgbi027   LIKE bgbi_t.bgbi027,    #核准金額     
      accountc  LIKE type_t.num20_6,    #變動金額
      upd       LIKE type_t.chr1,        #已回寫
      bgbi044   LIKE bgbi_t.bgbi044,     #異動類型
      bgbi045   LIKE bgbi_t.bgbi045,    #管理組織   #160824-00038#1      
      bgbi017   LIKE bgbi_t.bgbi017,    #來源原幣
      site025   LIKE ooef_t.ooef001,    #預算審核組織
      seq025    LIKE type_t.num10       #預算審核項次
                 END RECORD
   DEFINE l_bgbi004   LIKE bgbi_t.bgbi004
   DEFINE l_bgbi044   LIKE bgbi_t.bgbi044
   DEFINE l_tok       base.Stringtokenizer
   DEFINE l_count     LIKE type_t.num10
   DEFINE l_dnstep_str STRING
   WHENEVER ERROR CONTINUE
     
   #符合KEY
   LET l_sql = "SELECT bgbiseq,      bgbi002,      bgbi003,      bgbi004,      bgbi005, ",
               "       bgbi006,      bgbi007,      bgbi008,      bgbi009,      bgbi010, ", 
               "       bgbi011,      bgbi012,      bgbi013,      bgbi014,      bgbi015, ",
               "       bgbi016,      bgbi039,      bgbi040,      bgbi041,      bgbi028, ",
               "       bgbi029,      bgbi030,      bgbi031,      bgbi032,      bgbi033, ",
               "       bgbi034,      bgbi035,      bgbi036,      bgbi037,      bgbi038, ",
               "       bgbi023,      bgbi024,      bgbi025,      bgbi026,      bgbi027, ",
              #"       0,            'N',          bgbi044,      bgbi017,      '', ",        #160824-00038#1 mark
              #"       '' ",                                                                 #160824-00038#1 mark
               "       0,            'N',          bgbi044,      bgbi045,      bgbi017, ",   #160824-00038#1 
               "       '',           '' ",                                                   #160824-00038#1             
               "  FROM bgbi_t ",  
               " WHERE bgbient = ", g_enterprise," ",
               "   AND bgbi002 = ? ",               
               "   AND bgbi003 = ? ",
               "   AND bgbi004 = ? ",
               "   AND bgbi005 = ? ",
               "   AND bgbi044 = ? ",
               "   AND ",p_wc
   PREPARE sel_bgbip2 FROM l_sql
   DECLARE sel_bgbic2 CURSOR FOR sel_bgbip2
     
     
   #取得項次的核算項及其他維度
   INITIALIZE l_bgbi.* TO NULL
   SELECT * INTO l_bgbi.* FROM bgbi_t
    WHERE bgbient = g_enterprise
      AND bgbi002 = p_bgbi002
      AND bgbi003 = p_bgbi003
      AND bgbi004 = p_bgbi004
      AND bgbi005 = p_bgbi005
      AND bgbi044 = p_bgbi044
      AND bgbiseq = p_bgbiseq 
     
   #1.先取得組織範圍   自己p_bgbi004    自己的下層l_dnstep_str
   LET l_dnstep_str = NULL
   CALL s_abgt026_get_dnstep_site(l_bgbi.bgbi002,'','',l_bgbi.bgbi004)
      RETURNING l_dnstep_str
               
   #2.自己的abgt023資料倒入
   LET l_bgbi004 = l_bgbi.bgbi004
   LET l_bgbi044 = '1'
   FOREACH sel_bgbic2 USING l_bgbi.bgbi002,l_bgbi.bgbi003,l_bgbi004,l_bgbi.bgbi005,l_bgbi044
      INTO l_tmp.*
      IF SQLCA.SQLCODE THEN 
         INITIALIZE g_errparam.* TO NULL
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.extend = 'FOREACH:sel_bgbic1:1'
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      #INSERT INTO s_abgt026_tmp2 VALUES(l_tmp.*)   #161108-00017#5   mark
      #161108-00017#5   add---s
      INSERT INTO s_abgt026_tmp2 (bgbiseq,bgbi002,bgbi003,bgbi004,bgbi005,   
                                  bgbi006,bgbi007,bgbi008,bgbi009,bgbi010,  
                                  bgbi011,bgbi012,bgbi013,bgbi014,bgbi015,   
                                  bgbi016,bgbi039,bgbi040,bgbi041,bgbi028,   
                                  bgbi029,bgbi030,bgbi031,bgbi032,bgbi033,   
                                  bgbi034,bgbi035,bgbi036,bgbi037,bgbi038,   
                                  bgbi023,bgbi024,bgbi025,bgbi026,bgbi027,   
                                  accountc,upd,bgbi044,bgbi045,bgbi017,   
                                  site025,seq025)
                          VALUES (l_tmp.bgbiseq,l_tmp.bgbi002,l_tmp.bgbi003,l_tmp.bgbi004,l_tmp.bgbi005,   
                                  l_tmp.bgbi006,l_tmp.bgbi007,l_tmp.bgbi008,l_tmp.bgbi009,l_tmp.bgbi010,  
                                  l_tmp.bgbi011,l_tmp.bgbi012,l_tmp.bgbi013,l_tmp.bgbi014,l_tmp.bgbi015,   
                                  l_tmp.bgbi016,l_tmp.bgbi039,l_tmp.bgbi040,l_tmp.bgbi041,l_tmp.bgbi028,   
                                  l_tmp.bgbi029,l_tmp.bgbi030,l_tmp.bgbi031,l_tmp.bgbi032,l_tmp.bgbi033,   
                                  l_tmp.bgbi034,l_tmp.bgbi035,l_tmp.bgbi036,l_tmp.bgbi037,l_tmp.bgbi038,   
                                  l_tmp.bgbi023,l_tmp.bgbi024,l_tmp.bgbi025,l_tmp.bgbi026,l_tmp.bgbi027,   
                                  l_tmp.accountc,l_tmp.upd,l_tmp.bgbi044,l_tmp.bgbi045,l_tmp.bgbi017,   
                                  l_tmp.site025,l_tmp.seq025)
      #161108-00017#5   add---e
      
   END FOREACH
   
   #3 下層組織的abgt023或abgt026資料倒入
   LET l_tok = base.StringTokenizer.create(l_dnstep_str,",")
   WHILE l_tok.hasMoreTokens()
      LET l_bgbi004 = l_tok.nextToken()
      IF l_bgbi004 = g_bgbi.bgbi004 THEN
         CONTINUE WHILE
      END IF      
      #判斷本層匯總資料是否存在 存在就優先抓
      LET l_count = NULL
      SELECT COUNT(*) INTO l_count 
        FROM bgbi_t
       WHERE bgbient = g_enterprise
         AND bgbi002 = g_bgbi.bgbi002
         AND bgbi003 = g_bgbi.bgbi003
         AND bgbi004 = l_bgbi004
         AND bgbi005 = g_bgbi.bgbi005
         AND bgbi044 = '2'
         AND bgbistus IN ('Y','FC')
      IF cl_null(l_count)THEN LET l_count = 0 END IF
      
      IF l_count > 0 THEN
         LET l_bgbi044 = '2'
      ELSE
         LET l_bgbi044 = '1'
      END IF
      
      FOREACH sel_bgbic2 USING l_bgbi.bgbi002,l_bgbi.bgbi003,l_bgbi004,l_bgbi.bgbi005,l_bgbi044
         INTO l_tmp.*
         IF SQLCA.SQLCODE THEN 
            INITIALIZE g_errparam.* TO NULL
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.extend = 'FOREACH:sel_bgbic1:2'
            CALL cl_err()
            EXIT FOREACH
         END IF

         #INSERT INTO s_abgt026_tmp2 VALUES(l_tmp.*)   #161108-00017#5   mark
         #161108-00017#5   add---s
         INSERT INTO s_abgt026_tmp2 (bgbiseq,bgbi002,bgbi003,bgbi004,bgbi005,   
                                     bgbi006,bgbi007,bgbi008,bgbi009,bgbi010,  
                                     bgbi011,bgbi012,bgbi013,bgbi014,bgbi015,   
                                     bgbi016,bgbi039,bgbi040,bgbi041,bgbi028,   
                                     bgbi029,bgbi030,bgbi031,bgbi032,bgbi033,   
                                     bgbi034,bgbi035,bgbi036,bgbi037,bgbi038,   
                                     bgbi023,bgbi024,bgbi025,bgbi026,bgbi027,   
                                     accountc,upd,bgbi044,bgbi045,bgbi017,   
                                     site025,seq025)
                             VALUES (l_tmp.bgbiseq,l_tmp.bgbi002,l_tmp.bgbi003,l_tmp.bgbi004,l_tmp.bgbi005,   
                                     l_tmp.bgbi006,l_tmp.bgbi007,l_tmp.bgbi008,l_tmp.bgbi009,l_tmp.bgbi010,  
                                     l_tmp.bgbi011,l_tmp.bgbi012,l_tmp.bgbi013,l_tmp.bgbi014,l_tmp.bgbi015,   
                                     l_tmp.bgbi016,l_tmp.bgbi039,l_tmp.bgbi040,l_tmp.bgbi041,l_tmp.bgbi028,   
                                     l_tmp.bgbi029,l_tmp.bgbi030,l_tmp.bgbi031,l_tmp.bgbi032,l_tmp.bgbi033,   
                                     l_tmp.bgbi034,l_tmp.bgbi035,l_tmp.bgbi036,l_tmp.bgbi037,l_tmp.bgbi038,   
                                     l_tmp.bgbi023,l_tmp.bgbi024,l_tmp.bgbi025,l_tmp.bgbi026,l_tmp.bgbi027,   
                                     l_tmp.accountc,l_tmp.upd,l_tmp.bgbi044,l_tmp.bgbi045,l_tmp.bgbi017,   
                                     l_tmp.site025,l_tmp.seq025)
         #161108-00017#5   add---e
      END FOREACH
   END WHILE
END FUNCTION
################################################################################
# Descriptions...: 回寫下層組織來源
# Memo...........:
# Usage..........: 
# Date & Author..: 160731 By 03538(#160505-00011#2)
# Modify.........:
################################################################################
PRIVATE FUNCTION abgt023_02_upd_source_down(p_wc,p_bgbi002,p_bgbi003,p_bgbi004,p_bgbi005,p_bgbi044,p_bgbiseq,p_accountc)
   DEFINE p_wc        STRING
   DEFINE p_bgbi002   LIKE bgbi_t.bgbi002
   DEFINE p_bgbi003   LIKE bgbi_t.bgbi003
   DEFINE p_bgbi004   LIKE bgbi_t.bgbi004
   DEFINE p_bgbi005   LIKE bgbi_t.bgbi005
   DEFINE p_bgbi044   LIKE bgbi_t.bgbi044
   DEFINE p_bgbiseq   LIKE bgbi_t.bgbiseq
   DEFINE p_accountc  LIKE type_t.num20_6
   DEFINE l_accountb  LIKE type_t.num20_6
   DEFINE l_dnstep_str STRING
   DEFINE l_sql    STRING
   DEFINE l_i      LIKE type_t.num10
  #DEFINE l_bgbi      RECORD LIKE bgbi_t.* #161104-00024#8  mark
   #161104-00024#8   --s add
   DEFINE l_bgbi RECORD  #年度預算單身檔
       bgbient LIKE bgbi_t.bgbient, #企業編號
       bgbiseq LIKE bgbi_t.bgbiseq, #項次
       bgbi001 LIKE bgbi_t.bgbi001, #摘要
       bgbi002 LIKE bgbi_t.bgbi002, #預算編號
       bgbi003 LIKE bgbi_t.bgbi003, #預算版本
       bgbi004 LIKE bgbi_t.bgbi004, #預算組織
       bgbi005 LIKE bgbi_t.bgbi005, #預算細項
       bgbi006 LIKE bgbi_t.bgbi006, #預算期別
       bgbi007 LIKE bgbi_t.bgbi007, #部門
       bgbi008 LIKE bgbi_t.bgbi008, #成本利潤中心
       bgbi009 LIKE bgbi_t.bgbi009, #區域
       bgbi010 LIKE bgbi_t.bgbi010, #交易客商
       bgbi011 LIKE bgbi_t.bgbi011, #收款客商
       bgbi012 LIKE bgbi_t.bgbi012, #客群
       bgbi013 LIKE bgbi_t.bgbi013, #產品類別
       bgbi014 LIKE bgbi_t.bgbi014, #人員
       bgbi015 LIKE bgbi_t.bgbi015, #專案編號
       bgbi016 LIKE bgbi_t.bgbi016, #WBS
       bgbi017 LIKE bgbi_t.bgbi017, #預算幣別
       bgbi018 LIKE bgbi_t.bgbi018, #含稅單價
       bgbi019 LIKE bgbi_t.bgbi019, #不含稅單價
       bgbi020 LIKE bgbi_t.bgbi020, #稅別
       bgbi021 LIKE bgbi_t.bgbi021, #交易數量
       bgbi022 LIKE bgbi_t.bgbi022, #交易金額
       bgbi023 LIKE bgbi_t.bgbi023, #基準金額
       bgbi024 LIKE bgbi_t.bgbi024, #本層調整
       bgbi025 LIKE bgbi_t.bgbi025, #上層調整
       bgbi026 LIKE bgbi_t.bgbi026, #下層調整
       bgbi027 LIKE bgbi_t.bgbi027, #核准金額
       bgbi028 LIKE bgbi_t.bgbi028, #自由核算項一
       bgbi029 LIKE bgbi_t.bgbi029, #自由核算項二
       bgbi030 LIKE bgbi_t.bgbi030, #自由核算項三
       bgbi031 LIKE bgbi_t.bgbi031, #自由核算項四
       bgbi032 LIKE bgbi_t.bgbi032, #自由核算項五
       bgbi033 LIKE bgbi_t.bgbi033, #自由核算項六
       bgbi034 LIKE bgbi_t.bgbi034, #自由核算項七
       bgbi035 LIKE bgbi_t.bgbi035, #自由核算項八
       bgbi036 LIKE bgbi_t.bgbi036, #自由核算項九
       bgbi037 LIKE bgbi_t.bgbi037, #自由核算項十
       bgbi038 LIKE bgbi_t.bgbi038, #現金變動碼
       bgbi039 LIKE bgbi_t.bgbi039, #經營方式
       bgbi040 LIKE bgbi_t.bgbi040, #通路
       bgbi041 LIKE bgbi_t.bgbi041, #品牌
       bgbi042 LIKE bgbi_t.bgbi042, #稅率
       bgbi043 LIKE bgbi_t.bgbi043, #匯率
       bgbiud001 LIKE bgbi_t.bgbiud001, #自定義欄位(文字)001
       bgbiud002 LIKE bgbi_t.bgbiud002, #自定義欄位(文字)002
       bgbiud003 LIKE bgbi_t.bgbiud003, #自定義欄位(文字)003
       bgbiud004 LIKE bgbi_t.bgbiud004, #自定義欄位(文字)004
       bgbiud005 LIKE bgbi_t.bgbiud005, #自定義欄位(文字)005
       bgbiud006 LIKE bgbi_t.bgbiud006, #自定義欄位(文字)006
       bgbiud007 LIKE bgbi_t.bgbiud007, #自定義欄位(文字)007
       bgbiud008 LIKE bgbi_t.bgbiud008, #自定義欄位(文字)008
       bgbiud009 LIKE bgbi_t.bgbiud009, #自定義欄位(文字)009
       bgbiud010 LIKE bgbi_t.bgbiud010, #自定義欄位(文字)010
       bgbiud011 LIKE bgbi_t.bgbiud011, #自定義欄位(數字)011
       bgbiud012 LIKE bgbi_t.bgbiud012, #自定義欄位(數字)012
       bgbiud013 LIKE bgbi_t.bgbiud013, #自定義欄位(數字)013
       bgbiud014 LIKE bgbi_t.bgbiud014, #自定義欄位(數字)014
       bgbiud015 LIKE bgbi_t.bgbiud015, #自定義欄位(數字)015
       bgbiud016 LIKE bgbi_t.bgbiud016, #自定義欄位(數字)016
       bgbiud017 LIKE bgbi_t.bgbiud017, #自定義欄位(數字)017
       bgbiud018 LIKE bgbi_t.bgbiud018, #自定義欄位(數字)018
       bgbiud019 LIKE bgbi_t.bgbiud019, #自定義欄位(數字)019
       bgbiud020 LIKE bgbi_t.bgbiud020, #自定義欄位(數字)020
       bgbiud021 LIKE bgbi_t.bgbiud021, #自定義欄位(日期時間)021
       bgbiud022 LIKE bgbi_t.bgbiud022, #自定義欄位(日期時間)022
       bgbiud023 LIKE bgbi_t.bgbiud023, #自定義欄位(日期時間)023
       bgbiud024 LIKE bgbi_t.bgbiud024, #自定義欄位(日期時間)024
       bgbiud025 LIKE bgbi_t.bgbiud025, #自定義欄位(日期時間)025
       bgbiud026 LIKE bgbi_t.bgbiud026, #自定義欄位(日期時間)026
       bgbiud027 LIKE bgbi_t.bgbiud027, #自定義欄位(日期時間)027
       bgbiud028 LIKE bgbi_t.bgbiud028, #自定義欄位(日期時間)028
       bgbiud029 LIKE bgbi_t.bgbiud029, #自定義欄位(日期時間)029
       bgbiud030 LIKE bgbi_t.bgbiud030, #自定義欄位(日期時間)030
       bgbi044 LIKE bgbi_t.bgbi044, #資料來源
       bgbi045 LIKE bgbi_t.bgbi045, #管理組織
       bgbi046 LIKE bgbi_t.bgbi046, #預算樣表
       bgbiownid LIKE bgbi_t.bgbiownid, #資料所有者
       bgbiowndp LIKE bgbi_t.bgbiowndp, #資料所屬部門
       bgbicrtid LIKE bgbi_t.bgbicrtid, #資料建立者
       bgbicrtdp LIKE bgbi_t.bgbicrtdp, #資料建立部門
       bgbicrtdt LIKE bgbi_t.bgbicrtdt, #資料創建日
       bgbimodid LIKE bgbi_t.bgbimodid, #資料修改者
       bgbimoddt LIKE bgbi_t.bgbimoddt, #最近修改日
       bgbicnfid LIKE bgbi_t.bgbicnfid, #資料確認者
       bgbicnfdt LIKE bgbi_t.bgbicnfdt, #資料確認日
       bgbistus LIKE bgbi_t.bgbistus, #狀態碼
       bgbi047 LIKE bgbi_t.bgbi047  #上層組織
   END RECORD
   #161104-00024#8  --e add
   DEFINE l_bgbi2  DYNAMIC ARRAY OF RECORD 
      bgbiseq   LIKE bgbi_t.bgbiseq,    #項次
      bgbi002   LIKE bgbi_t.bgbi002,    #預算編號
      bgbi003   LIKE bgbi_t.bgbi003,    #預算版本
      bgbi004   LIKE bgbi_t.bgbi004,    #預算組織
      bgbi005   LIKE bgbi_t.bgbi005,    #預算項目
      bgbi006   LIKE bgbi_t.bgbi006,    #預算期別
      bgbi007   LIKE bgbi_t.bgbi007,    #部門
      bgbi008   LIKE bgbi_t.bgbi008,    #成本利潤中心
      bgbi009   LIKE bgbi_t.bgbi009,    #區域
      bgbi010   LIKE bgbi_t.bgbi010,    #交易客商
      bgbi011   LIKE bgbi_t.bgbi011,    #收款客商
      bgbi012   LIKE bgbi_t.bgbi012,    #客群
      bgbi013   LIKE bgbi_t.bgbi013,    #產品類別
      bgbi014   LIKE bgbi_t.bgbi014,    #人員
      bgbi015   LIKE bgbi_t.bgbi015,    #專案編號
      bgbi016   LIKE bgbi_t.bgbi016,    #WBS
      bgbi039   LIKE bgbi_t.bgbi039,    #經營方式
      bgbi040   LIKE bgbi_t.bgbi040,    #渠道
      bgbi041   LIKE bgbi_t.bgbi041,    #品牌
      bgbi028   LIKE bgbi_t.bgbi028,    #自由核算項一
      bgbi029   LIKE bgbi_t.bgbi029,    #自由核算項二
      bgbi030   LIKE bgbi_t.bgbi030,    #自由核算項三
      bgbi031   LIKE bgbi_t.bgbi031,    #自由核算項四
      bgbi032   LIKE bgbi_t.bgbi032,    #自由核算項五
      bgbi033   LIKE bgbi_t.bgbi033,    #自由核算項六
      bgbi034   LIKE bgbi_t.bgbi034,    #自由核算項七
      bgbi035   LIKE bgbi_t.bgbi035,    #自由核算項八
      bgbi036   LIKE bgbi_t.bgbi036,    #自由核算項九
      bgbi037   LIKE bgbi_t.bgbi037,    #自由核算項十
      bgbi038   LIKE bgbi_t.bgbi038,    #現金變動碼
      bgbi023   LIKE bgbi_t.bgbi023,    #基準金額
      bgbi024   LIKE bgbi_t.bgbi024,    #本層調整
      bgbi025   LIKE bgbi_t.bgbi025,    #上層調整
      bgbi026   LIKE bgbi_t.bgbi026,    #下層調整
      bgbi027   LIKE bgbi_t.bgbi027,    #核准金額     
      accountc  LIKE type_t.num20_6,    #變動金額
      upd       LIKE type_t.chr1,        #已回寫
      bgbi044   LIKE bgbi_t.bgbi044,     #異動類型
      bgbi017   LIKE bgbi_t.bgbi017,    #來源原幣
      site025   LIKE ooef_t.ooef001,    #預算審核組織
      seq025    LIKE type_t.num10       #預算審核項次   
                   END RECORD
   DEFINE l_do     LIKE type_t.num20_6
   DEFINE l_accountc LIKE type_t.num20_6
   DEFINE l_count  LIKE type_t.num10
   
   WHENEVER ERROR CONTINUE
   
   #取得下層組織
   #FOREACH下層組織符合的組成項次記錄到ARRAY
   #用ARRAY去跑攤算動作  如果遇到也是026結點就繼續CALL自己
       
      
   #用其維度及下一層的組織範圍取得資料
   #先insert到每層塞完都會刪除的temp2
   #做整理排序跟判斷要抓023 還是026
   DELETE FROM s_abgt026_tmp2
   CALL abgt023_02_ins_tmp2(p_wc,p_bgbi002,p_bgbi003,p_bgbi004,p_bgbi005,p_bgbi044,p_bgbiseq)
   
   #tmp2資料FOREACH   金額由小排到大 方便攤尾差
   #先取得此資料範圍的核準金額bgbi027總合
   #以核準金額當做金額分攤比例
   LET l_sql = "SELECT * FROM s_abgt026_tmp2 ",
               " ORDER BY bgbi027 "
   PREPARE sel_tmpp2 FROM l_sql
   DECLARE sel_tmpc2 CURSOR FOR sel_tmpp2
   
   LET l_sql = "SELECT COUNT(*) FROM ( ",l_sql,") "
   PREPARE sel_tmpp4 FROM l_sql
   LET l_count = NULL
   EXECUTE sel_tmpp4 INTO l_count
   IF cl_null(l_count) THEN LET l_count = 0 END IF   
   
   #取得資料範圍內核准金額總核
   LET l_sql = "SELECT SUM(bgbi027) FROM s_abgt026_tmp2 "
   PREPARE sel_tmpp3 FROM l_sql
   LET l_accountb = NULL
   EXECUTE sel_tmpp3 INTO l_accountb 
   IF cl_null(l_accountb)THEN LET l_accountb = 0 END IF
   IF l_accountb = 0 THEN RETURN END IF   #避免數學錯誤 除以0
   
   LET l_i = 1
   LET l_do = 0
   FOREACH sel_tmpc2 INTO l_bgbi2[l_i].*
      IF SQLCA.SQLCODE THEN EXIT FOREACH END IF
      LET l_i = l_i + 1   
   END FOREACH
   CALL l_bgbi2.deleteElement(l_bgbi2.getLength())
   
   FOR l_i = 1 TO l_bgbi2.getLength()
      IF l_count = l_i THEN
         IF l_i = 1 THEN
            LET l_accountc = p_accountc
         ELSE
            LET l_accountc = p_accountc - l_do
         END IF
      ELSE
         LET l_accountc = p_accountc * l_bgbi2[l_i].bgbi027 / l_accountb
         #依預算編制幣別取位
         CALL s_curr_round(g_bgbi.bgbi004,g_bgbi.bgbi017,l_accountc,2) RETURNING l_accountc               
      END IF
      
      #UPDATE 來源單 上層調整
      EXECUTE abgt023_02_upd_dnbgbi_p2 USING l_accountc,l_accountc,l_bgbi2[l_i].bgbi002,l_bgbi2[l_i].bgbi003,l_bgbi2[l_i].bgbi004,
                                             l_bgbi2[l_i].bgbi005,l_bgbi2[l_i].bgbiseq,l_bgbi2[l_i].bgbi044
         
      IF l_bgbi2[l_i].bgbi044 = '2' THEN
         #往下層繼續展開
         CALL abgt023_02_upd_source_down(p_wc,l_bgbi2[l_i].bgbi002,l_bgbi2[l_i].bgbi003,l_bgbi2[l_i].bgbi004,
                                         l_bgbi2[l_i].bgbi005,l_bgbi2[l_i].bgbi044,l_bgbi2[l_i].bgbiseq,
                                         l_accountc)
      END IF      
      LET l_do = l_do + l_accountc  
   END FOR
END FUNCTION

 
{</section>}
 
