<add_points prog="abgi020" std_prog="abgi020" erpver="1.0" module="ABG" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="detail_show.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bgab001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_bgaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgab001  #顯示到畫面上

            NEXT FIELD bgab001                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.bgab002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_bgab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bgab002  #顯示到畫面上

            NEXT FIELD bgab002                     #返回原欄位

]]>
</point>
  <point name="detail_show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bgab_d[l_ac].bgab001
            CALL ap_ref_array2(g_ref_fields,"SELECT bgaal003 FROM bgaal_t WHERE bgaalent='"||g_enterprise||"' AND bgaal001=? AND bgaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bgab_d[l_ac].bgab001_desc = g_rtn_fields[1]
            LET g_bgab2_d[l_ac].bgab001_2_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_bgab_d[l_ac].bgab001_desc
            DISPLAY BY NAME g_bgab2_d[l_ac].bgab001_2_desc
]]>
</point>
  <point name="detail_show.body2.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="function.abgi020_bgab001_chk" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#  檢查bagb001欄位
PRIVATE FUNCTION abgi020_bgab001_chk(p_cmd)
DEFINE p_cmd LIKE type_t.chr1
   DEFINE r_success LIKE type_t.num5
   DEFINE l_cmd LIKE type_t.chr1
   
   LET l_cmd = p_cmd
   LET r_success = TRUE
   IF NOT abgi020_key_chk(l_cmd) THEN
      LET r_success = FALSE
   END IF 

   IF r_success THEN
      IF NOT ap_chk_isExist(g_bgab_d[l_ac].bgab001,"SELECT COUNT(*) FROM bgaa_t WHERE bgaa001 = ?  AND bgaaent = '"||g_enterprise||"'",'abg-00007',1)  THEN
         LET r_success = FALSE
      END IF
   END IF 
   IF r_success THEN
      IF NOT ap_chk_isExist(g_bgab_d[l_ac].bgab001,"SELECT COUNT(*) FROM bgaa_t WHERE bgaa001 = ? AND bgaastus = 'Y'  AND bgaaent = '"||g_enterprise||"'",'abg-00008',1)  THEN
         LET r_success = FALSE
      END IF
   END IF 
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.abgi020_bgab001_ref" cite_std="N" status="u" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[# bagb001帶出參考欄位的內容
PRIVATE FUNCTION abgi020_bgab001_ref()
INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bgab_d[l_ac].bgab001
   CALL ap_ref_array2(g_ref_fields,"SELECT bgaal003 FROM bgaal_t WHERE bgaalent='"||g_enterprise||"' AND bgaal001=? AND bgaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bgab_d[l_ac].bgab001_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_bgab_d[l_ac].bgab001_desc
END FUNCTION]]>
</point>
  <point name="function.abgi020_key_chk" cite_std="N" status="u" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[# 檢查key 重複性
PRIVATE FUNCTION abgi020_key_chk(p_cmd)
DEFINE p_cmd LIKE type_t.chr1
   DEFINE r_success LIKE type_t.num5
   DEFINE l_cmd LIKE type_t.chr1
   
   LET l_cmd = p_cmd
   LET r_success = TRUE
   IF NOT cl_null(g_bgab_d[l_ac].bgab001) AND NOT cl_null(g_bgab_d[l_ac].bgab002) THEN 
      IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bgab_d[l_ac].bgab001 != g_bgab_d_t.bgab001 OR g_bgab_d[l_ac].bgab002 != g_bgab_d_t.bgab002))) THEN 
         IF NOT ap_chk_notDup(g_bgab_d[l_ac].bgab001||"/"||g_bgab_d[l_ac].bgab002,"SELECT COUNT(*) FROM bgab_t WHERE "||"bgabent = '" ||g_enterprise|| "' AND "||"bgab001 = '"||g_bgab_d[l_ac].bgab001 ||"' AND "|| "bgab002 = '"||g_bgab_d[l_ac].bgab002 ||"'",'std-00004',0) THEN 
            LET r_success = FALSE
         END IF
      END IF
   END IF
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="input.a.page1.bgab001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            LET g_bgab_d[l_ac].bgab001_desc = ''
            DISPLAY g_bgab_d[l_ac].bgab001_desc TO s_detail1[l_ac].bgab001_desc
            IF NOT abgi020_bgab001_chk(l_cmd) THEN
               LET g_bgab_d[l_ac].bgab001 = g_bgab_d_t.bgab001
               DISPLAY BY NAME g_bgab_d[l_ac].bgab001
               CALL abgi020_bgab001_ref()
               NEXT FIELD bgab001
            END IF 
            CALL abgi020_bgab001_ref()]]>
</point>
  <point name="input.a.page1.bgab002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF NOT abgi020_key_chk(l_cmd) THEN 
               LET g_bgab_d[l_ac].bgab002 = g_bgab_d_t.bgab002
               DISPLAY BY NAME g_bgab_d[l_ac].bgab002
               NEXT FIELD bgab002
            END IF 


]]>
</point>
  <point name="input.a.page2.bgab001_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bgab2_d[l_ac].bgab001) AND NOT cl_null(g_bgab2_d[l_ac].bgab002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bgab2_d[l_ac].bgab001 != g_bgab2_d_t.bgab001 OR g_bgab2_d[l_ac].bgab002 != g_bgab2_d_t.bgab002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bgab_t WHERE "||"bgabent = '" ||g_enterprise|| "' AND "||"bgab001 = '"||g_bgab2_d[l_ac].bgab001 ||"' AND "|| "bgab002 = '"||g_bgab2_d[l_ac].bgab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.bgab002_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bgab2_d[l_ac].bgab001) AND NOT cl_null(g_bgab2_d[l_ac].bgab002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bgab2_d[l_ac].bgab001 != g_bgab2_d_t.bgab001 OR g_bgab2_d[l_ac].bgab002 != g_bgab2_d_t.bgab002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bgab_t WHERE "||"bgabent = '" ||g_enterprise|| "' AND "||"bgab001 = '"||g_bgab2_d[l_ac].bgab001 ||"' AND "|| "bgab002 = '"||g_bgab2_d[l_ac].bgab002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.bgabcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page2.bgabcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page2.bgabmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page2.bgabowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page2.bgabownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_bgab2_d[l_ac].bgabmodid = ''
            LET g_bgab2_d[l_ac].bgabmoddt = ''
            LET g_bgab_d[l_ac].bgabstus = "Y"]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abgi020_bgab001_ref()]]>
</point>
  <point name="input.c.page1.bgab001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bgab_d[l_ac].bgab001             #給予default值

            #給予arg

            CALL q_bgaa001()                                #呼叫開窗

            LET g_bgab_d[l_ac].bgab001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bgab_d[l_ac].bgab001 TO bgab001              #顯示到畫面上
            CALL abgi020_bgab001_ref()
            DISPLAY g_bgab_d[l_ac].bgab001_desc TO bgab001_desc    
            NEXT FIELD bgab001                          #返回原欄位

]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.bgab001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.bgab001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.bgab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.bgab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.bgabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.bgabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.bgabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.bgab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.bgab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.bgab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.bgabmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.bgabmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page2.bgabmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.bgabmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.bgabownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.bgabownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page2.bgabownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.bgabowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.bgabowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page2.bgabowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.bgabcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.bgabcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page2.bgabcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.bgabcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.bgabcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page2.bgabcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.bgabcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bgab001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bgab001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bgab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bgab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bgabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bgabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bgabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bgab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bgab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bgab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bgab002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bgabstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bgab003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.before_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="link_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="abgi020.b_fill" ver="8" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION abgi020_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE bgab001,bgab002,bgabstus,bgab003,bgab001,bgab002,bgabmodid,bgabmoddt, 
       bgabownid,bgabowndp,bgabcrtid,bgabcrtdp,bgabcrtdt ,t1.bgaal003 ,t2.oofa011 ,t3.oofa011 ,t4.ooefl003 , 
       t5.oofa011 ,t6.ooefl003 FROM bgab_t",
               "",
                              " LEFT JOIN bgaal_t t1 ON t1.bgaalent='"||g_enterprise||"' AND t1.bgaal001=bgab001 AND t1.bgaal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=bgabmodid  ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=bgabownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=bgabowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=bgabcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=bgabcrtdp AND t6.ooefl002='"||g_dlang||"' ",
 
               " WHERE bgabent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, cl_sql_add_filter("bgab_t"),
                      " ORDER BY bgab_t.bgab001,bgab_t.bgab002"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE abgi020_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR abgi020_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_bgab_d.clear()
   CALL g_bgab2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_bgab_d[l_ac].bgab001,g_bgab_d[l_ac].bgab002,g_bgab_d[l_ac].bgabstus,g_bgab_d[l_ac].bgab003, 
       g_bgab2_d[l_ac].bgab001,g_bgab2_d[l_ac].bgab002,g_bgab2_d[l_ac].bgabmodid,g_bgab2_d[l_ac].bgabmoddt, 
       g_bgab2_d[l_ac].bgabownid,g_bgab2_d[l_ac].bgabowndp,g_bgab2_d[l_ac].bgabcrtid,g_bgab2_d[l_ac].bgabcrtdp, 
       g_bgab2_d[l_ac].bgabcrtdt,g_bgab_d[l_ac].bgab001_desc,g_bgab2_d[l_ac].bgabmodid_desc,g_bgab2_d[l_ac].bgabownid_desc, 
       g_bgab2_d[l_ac].bgabowndp_desc,g_bgab2_d[l_ac].bgabcrtid_desc,g_bgab2_d[l_ac].bgabcrtdp_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL abgi020_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("bgab_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
   
   CALL g_bgab_d.deleteElement(g_bgab_d.getLength())   
   CALL g_bgab2_d.deleteElement(g_bgab2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_bgab_d.getLength()
      LET g_bgab2_d[l_ac].bgab001 = g_bgab_d[l_ac].bgab001 
      LET g_bgab2_d[l_ac].bgab002 = g_bgab_d[l_ac].bgab002 
 
   END FOR
   
   IF g_cnt > g_bgab_d.getLength() THEN
      LET l_ac = g_bgab_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_bgab_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE abgi020_pb
   
END FUNCTION
]]>
</section>
  <section id="abgi020.default_search" ver="5" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION abgi020_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bgab001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bgab002 = ", g_argv[02], " AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="abgi020.delete" ver="3" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION abgi020_delete()
   DEFINE li_idx           LIKE type_t.num5
   DEFINE li_detail_tmp    LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_bgab_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT abgi020_lock_b("bgab_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_bgab_d.getLength()
      IF g_bgab_d[li_idx].bgab001 IS NOT NULL
         AND g_bgab_d_t.bgab002 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM bgab_t
          WHERE bgabent = g_enterprise AND 
                bgab001 = g_bgab_d[li_idx].bgab001
                AND bgab002 = g_bgab_d[li_idx].bgab002
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            CALL cl_err("bgab_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgab_d[g_detail_idx].bgab001
               LET gs_keys[2] = g_bgab_d[g_detail_idx].bgab002
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL abgi020_delete_b('bgab_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   #刷新資料
   CALL abgi020_b_fill(g_wc2)
            
END FUNCTION
]]>
</section>
  <section id="abgi020.delete_b" ver="3" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION abgi020_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "bgab_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'bgab_t' THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM bgab_t
       WHERE bgabent = g_enterprise AND
         bgab001 = ps_keys_bak[1] AND bgab002 = ps_keys_bak[2]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="abgi020.description" ver="13" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000119
#+ 
#+ Filename...: abgi020
#+ Description: 預算版本維護作業
#+ Creator....: 02299(2013/07/15)
#+ Modifier...: 02599(2014/06/29)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="abgi020.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION abgi020_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_bgab2_d[l_ac].bgabownid_desc = cl_get_username(g_bgab2_d[l_ac].bgabownid)
      #LET g_bgab2_d[l_ac].bgabowndp_desc = cl_get_deptname(g_bgab2_d[l_ac].bgabowndp)
      #LET g_bgab2_d[l_ac].bgabcrtid_desc = cl_get_username(g_bgab2_d[l_ac].bgabcrtid)
      #LET g_bgab2_d[l_ac].bgabcrtdp_desc = cl_get_deptname(g_bgab2_d[l_ac].bgabcrtdp)
      #LET g_bgab2_d[l_ac].bgabmodid_desc = cl_get_username(g_bgab2_d[l_ac].bgabmodid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="abgi020.global" ver="5" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_bgab_d RECORD
       bgab001 LIKE bgab_t.bgab001, 
   bgab001_desc LIKE type_t.chr500, 
   bgab002 LIKE bgab_t.bgab002, 
   bgabstus LIKE bgab_t.bgabstus, 
   bgab003 LIKE bgab_t.bgab003
       END RECORD
PRIVATE TYPE type_g_bgab2_d RECORD
       bgab001 LIKE bgab_t.bgab001, 
   bgab001_2_desc LIKE type_t.chr500, 
   bgab002 LIKE bgab_t.bgab002, 
   bgabmodid LIKE bgab_t.bgabmodid, 
   bgabmodid_desc LIKE type_t.chr500, 
   bgabmoddt DATETIME YEAR TO SECOND, 
   bgabownid LIKE bgab_t.bgabownid, 
   bgabownid_desc LIKE type_t.chr500, 
   bgabowndp LIKE bgab_t.bgabowndp, 
   bgabowndp_desc LIKE type_t.chr500, 
   bgabcrtid LIKE bgab_t.bgabcrtid, 
   bgabcrtid_desc LIKE type_t.chr500, 
   bgabcrtdp LIKE bgab_t.bgabcrtdp, 
   bgabcrtdp_desc LIKE type_t.chr500, 
   bgabcrtdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_bgab_d          DYNAMIC ARRAY OF type_g_bgab_d
DEFINE g_bgab_d_t        type_g_bgab_d
DEFINE g_bgab2_d   DYNAMIC ARRAY OF type_g_bgab2_d
DEFINE g_bgab2_d_t type_g_bgab2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="abgi020.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION abgi020_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL abgi020_default_search()
   
END FUNCTION
]]>
</section>
  <section id="abgi020.insert" ver="4" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION abgi020_insert()
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point                
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL abgi020_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="abgi020.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION abgi020_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "bgab_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO bgab_t
                  (bgabent,
                   bgab001,bgab002
                   ,bgabstus,bgab003,bgabmodid,bgabmoddt,bgabownid,bgabowndp,bgabcrtid,bgabcrtdp,bgabcrtdt) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_bgab_d[l_ac].bgabstus,g_bgab_d[l_ac].bgab003,g_bgab2_d[l_ac].bgabmodid,g_bgab2_d[l_ac].bgabmoddt, 
                       g_bgab2_d[l_ac].bgabownid,g_bgab2_d[l_ac].bgabowndp,g_bgab2_d[l_ac].bgabcrtid, 
                       g_bgab2_d[l_ac].bgabcrtdp,g_bgab2_d[l_ac].bgabcrtdt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("bgab_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="abgi020.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION abgi020_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="abgi020.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION abgi020_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL abgi020_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "bgab_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abgi020_bcl USING g_enterprise,
                                       g_bgab_d[g_detail_idx].bgab001,g_bgab_d[g_detail_idx].bgab002
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("abgi020_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="abgi020.main" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abg","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT bgab001,bgab002,bgabstus,bgab003,bgab001,bgab002,bgabmodid,bgabmoddt,bgabownid, 
       bgabowndp,bgabcrtid,bgabcrtdp,bgabcrtdt FROM bgab_t WHERE bgabent=? AND bgab001=? AND bgab002=?  
       FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abgi020_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abgi020 WITH FORM cl_ap_formpath("abg",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abgi020_init()   
 
      #進入選單 Menu (="N")
      CALL abgi020_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abgi020
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="abgi020.modify" ver="7" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION abgi020_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_bgab_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bgab_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abgi020_b_fill(g_wc2)
            LET g_detail_cnt = g_bgab_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_bgab_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_bgab_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_bgab_d[l_ac].bgab001 IS NOT NULL
               AND g_bgab_d[l_ac].bgab002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bgab_d_t.* = g_bgab_d[l_ac].*  #BACKUP
               IF NOT abgi020_lock_b("bgab_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abgi020_bcl INTO g_bgab_d[l_ac].bgab001,g_bgab_d[l_ac].bgab002,g_bgab_d[l_ac].bgabstus, 
                      g_bgab_d[l_ac].bgab003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_bgab_d_t.bgab001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL abgi020_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bgab_d_t.* TO NULL
            INITIALIZE g_bgab_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_bgab2_d[l_ac].bgabownid = g_user
      LET g_bgab2_d[l_ac].bgabowndp = g_dept
      LET g_bgab2_d[l_ac].bgabcrtid = g_user
      LET g_bgab2_d[l_ac].bgabcrtdp = g_dept 
      LET g_bgab2_d[l_ac].bgabcrtdt = cl_get_current()
      LET g_bgab2_d[l_ac].bgabmodid = ""
      LET g_bgab2_d[l_ac].bgabmoddt = ""
      LET g_bgab_d[l_ac].bgabstus = ""
 
 
                  LET g_bgab_d[l_ac].bgab003 = "Y"
 
            LET g_bgab_d_t.* = g_bgab_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abgi020_set_entry_b("a")
            CALL abgi020_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bgab_d[li_reproduce_target].* = g_bgab_d[li_reproduce].*
               LET g_bgab2_d[li_reproduce_target].* = g_bgab2_d[li_reproduce].*
 
               LET g_bgab_d[g_bgab_d.getLength()].bgab001 = NULL
               LET g_bgab_d[g_bgab_d.getLength()].bgab002 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bgab_t 
             WHERE bgabent = g_enterprise AND bgab001 = g_bgab_d[l_ac].bgab001
                                       AND bgab002 = g_bgab_d[l_ac].bgab002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgab_d[g_detail_idx].bgab001
               LET gs_keys[2] = g_bgab_d[g_detail_idx].bgab002
               CALL abgi020_insert_b('bgab_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bgab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bgab_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abgi020_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (bgab001 = '", g_bgab_d[l_ac].bgab001, "' "
                                  ," AND bgab002 = '", g_bgab_d[l_ac].bgab002, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bgab_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bgab_d.deleteElement(l_ac)
               NEXT FIELD bgab001
            END IF
            IF g_bgab_d[l_ac].bgab001 IS NOT NULL
               AND g_bgab_d_t.bgab002 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM bgab_t
                WHERE bgabent = g_enterprise AND 
                      bgab001 = g_bgab_d_t.bgab001
                      AND bgab002 = g_bgab_d_t.bgab002
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bgab_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abgi020_bcl
               LET l_count = g_bgab_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgab_d[g_detail_idx].bgab001
               LET gs_keys[2] = g_bgab_d[g_detail_idx].bgab002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL abgi020_delete_b('bgab_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD bgab001
            
            #add-point:AFTER FIELD bgab001
            {<point name="input.a.page1.bgab001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgab001
            #add-point:BEFORE FIELD bgab001
            {<point name="input.b.page1.bgab001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bgab001
            #add-point:ON CHANGE bgab001
            {<point name="input.g.page1.bgab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgab002
            #add-point:BEFORE FIELD bgab002
            {<point name="input.b.page1.bgab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgab002
            
            #add-point:AFTER FIELD bgab002
            {<point name="input.a.page1.bgab002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bgab002
            #add-point:ON CHANGE bgab002
            {<point name="input.g.page1.bgab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabstus
            #add-point:BEFORE FIELD bgabstus
            {<point name="input.b.page1.bgabstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgabstus
            
            #add-point:AFTER FIELD bgabstus
            {<point name="input.a.page1.bgabstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bgabstus
            #add-point:ON CHANGE bgabstus
            {<point name="input.g.page1.bgabstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgab003
            #add-point:BEFORE FIELD bgab003
            {<point name="input.b.page1.bgab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgab003
            
            #add-point:AFTER FIELD bgab003
            {<point name="input.a.page1.bgab003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bgab003
            #add-point:ON CHANGE bgab003
            {<point name="input.g.page1.bgab003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.bgab001
         ON ACTION controlp INFIELD bgab001
            #add-point:ON ACTION controlp INFIELD bgab001
            {<point name="input.c.page1.bgab001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bgab002
         ON ACTION controlp INFIELD bgab002
            #add-point:ON ACTION controlp INFIELD bgab002
            {<point name="input.c.page1.bgab002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bgabstus
         ON ACTION controlp INFIELD bgabstus
            #add-point:ON ACTION controlp INFIELD bgabstus
            {<point name="input.c.page1.bgabstus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bgab003
         ON ACTION controlp INFIELD bgab003
            #add-point:ON ACTION controlp INFIELD bgab003
            {<point name="input.c.page1.bgab003" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bgab_d[l_ac].* = g_bgab_d_t.*
               CLOSE abgi020_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_bgab_d[l_ac].bgab001,-263,1)
               LET g_bgab_d[l_ac].* = g_bgab_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_bgab2_d[l_ac].bgabmodid = g_user 
LET g_bgab2_d[l_ac].bgabmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE bgab_t SET (bgab001,bgab002,bgabstus,bgab003,bgabmodid,bgabmoddt,bgabownid,bgabowndp, 
                   bgabcrtid,bgabcrtdp,bgabcrtdt) = (g_bgab_d[l_ac].bgab001,g_bgab_d[l_ac].bgab002,g_bgab_d[l_ac].bgabstus, 
                   g_bgab_d[l_ac].bgab003,g_bgab2_d[l_ac].bgabmodid,g_bgab2_d[l_ac].bgabmoddt,g_bgab2_d[l_ac].bgabownid, 
                   g_bgab2_d[l_ac].bgabowndp,g_bgab2_d[l_ac].bgabcrtid,g_bgab2_d[l_ac].bgabcrtdp,g_bgab2_d[l_ac].bgabcrtdt) 

                WHERE bgabent = g_enterprise AND
                  bgab001 = g_bgab_d_t.bgab001 #項次   
                  AND bgab002 = g_bgab_d_t.bgab002  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bgab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bgab_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bgab_d[g_detail_idx].bgab001
               LET gs_keys_bak[1] = g_bgab_d_t.bgab001
               LET gs_keys[2] = g_bgab_d[g_detail_idx].bgab002
               LET gs_keys_bak[2] = g_bgab_d_t.bgab002
               CALL abgi020_update_b('bgab_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_bgab_d_t)
                     LET g_log2 = util.JSON.stringify(g_bgab_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL abgi020_unlock_b("bgab_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_bgab_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bgab_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_bgab2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL abgi020_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD bgab001
            WHEN "s_detail2"
               NEXT FIELD bgab001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE abgi020_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="abgi020.modify_detail_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION abgi020_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "bgab001"
      WHEN "s_detail2"
         LET ls_return = "bgab001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="abgi020.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="abgi020.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="abgi020.query" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION abgi020_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_bgab_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON bgab001,bgab002,bgabstus,bgab003,bgabmodid,bgabmoddt,bgabownid,bgabowndp,bgabcrtid, 
          bgabcrtdp,bgabcrtdt 
 
         FROM s_detail1[1].bgab001,s_detail1[1].bgab002,s_detail1[1].bgabstus,s_detail1[1].bgab003,s_detail2[1].bgabmodid, 
             s_detail2[1].bgabmoddt,s_detail2[1].bgabownid,s_detail2[1].bgabowndp,s_detail2[1].bgabcrtid, 
             s_detail2[1].bgabcrtdp,s_detail2[1].bgabcrtdt 
      
         #此段落由子樣板a11產生
         ##----<<bgabcrtdt>>----
         AFTER FIELD bgabcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bgabmoddt>>----
         AFTER FIELD bgabmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bgabcnfdt>>----
         
         #----<<bgabpstdt>>----
 
 
      
                  #Ctrlp:construct.c.page1.bgab001
         ON ACTION controlp INFIELD bgab001
            #add-point:ON ACTION controlp INFIELD bgab001
            {<point name="construct.c.page1.bgab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgab001
            #add-point:BEFORE FIELD bgab001
            {<point name="query.b.page1.bgab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgab001
            
            #add-point:AFTER FIELD bgab001
            {<point name="query.a.page1.bgab001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bgab002
         ON ACTION controlp INFIELD bgab002
            #add-point:ON ACTION controlp INFIELD bgab002
            {<point name="construct.c.page1.bgab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgab002
            #add-point:BEFORE FIELD bgab002
            {<point name="query.b.page1.bgab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgab002
            
            #add-point:AFTER FIELD bgab002
            {<point name="query.a.page1.bgab002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabstus
            #add-point:BEFORE FIELD bgabstus
            {<point name="query.b.page1.bgabstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgabstus
            
            #add-point:AFTER FIELD bgabstus
            {<point name="query.a.page1.bgabstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.bgabstus
         ON ACTION controlp INFIELD bgabstus
            #add-point:ON ACTION controlp INFIELD bgabstus
            {<point name="query.c.page1.bgabstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgab003
            #add-point:BEFORE FIELD bgab003
            {<point name="query.b.page1.bgab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgab003
            
            #add-point:AFTER FIELD bgab003
            {<point name="query.a.page1.bgab003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.bgab003
         ON ACTION controlp INFIELD bgab003
            #add-point:ON ACTION controlp INFIELD bgab003
            {<point name="query.c.page1.bgab003" />}
            #END add-point
 
  
         
                  #此段落由子樣板a01產生
         BEFORE FIELD bgabmodid
            #add-point:BEFORE FIELD bgabmodid
            {<point name="query.b.page2.bgabmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgabmodid
            
            #add-point:AFTER FIELD bgabmodid
            {<point name="query.a.page2.bgabmodid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.bgabmodid
         ON ACTION controlp INFIELD bgabmodid
            #add-point:ON ACTION controlp INFIELD bgabmodid
            {<point name="query.c.page2.bgabmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabmoddt
            #add-point:BEFORE FIELD bgabmoddt
            {<point name="query.b.page2.bgabmoddt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabownid
            #add-point:BEFORE FIELD bgabownid
            {<point name="query.b.page2.bgabownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgabownid
            
            #add-point:AFTER FIELD bgabownid
            {<point name="query.a.page2.bgabownid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.bgabownid
         ON ACTION controlp INFIELD bgabownid
            #add-point:ON ACTION controlp INFIELD bgabownid
            {<point name="query.c.page2.bgabownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabowndp
            #add-point:BEFORE FIELD bgabowndp
            {<point name="query.b.page2.bgabowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgabowndp
            
            #add-point:AFTER FIELD bgabowndp
            {<point name="query.a.page2.bgabowndp" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.bgabowndp
         ON ACTION controlp INFIELD bgabowndp
            #add-point:ON ACTION controlp INFIELD bgabowndp
            {<point name="query.c.page2.bgabowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabcrtid
            #add-point:BEFORE FIELD bgabcrtid
            {<point name="query.b.page2.bgabcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgabcrtid
            
            #add-point:AFTER FIELD bgabcrtid
            {<point name="query.a.page2.bgabcrtid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.bgabcrtid
         ON ACTION controlp INFIELD bgabcrtid
            #add-point:ON ACTION controlp INFIELD bgabcrtid
            {<point name="query.c.page2.bgabcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabcrtdp
            #add-point:BEFORE FIELD bgabcrtdp
            {<point name="query.b.page2.bgabcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bgabcrtdp
            
            #add-point:AFTER FIELD bgabcrtdp
            {<point name="query.a.page2.bgabcrtdp" />}
            #END add-point
            
 
         #Ctrlp:query.c.page2.bgabcrtdp
         ON ACTION controlp INFIELD bgabcrtdp
            #add-point:ON ACTION controlp INFIELD bgabcrtdp
            {<point name="query.c.page2.bgabcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bgabcrtdt
            #add-point:BEFORE FIELD bgabcrtdt
            {<point name="query.b.page2.bgabcrtdt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL abgi020_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="abgi020.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION abgi020_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="abgi020.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION abgi020_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="abgi020.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="abgi020.ui_dialog" ver="7" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION abgi020_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL abgi020_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_bgab_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_bgab2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body2.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body2.before_display2"/>}
               #end add-point
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row2"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL DIALOG.setSelectionMode("s_detail2", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abgi020_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abgi020_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abgi020_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abgi020_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abgi020_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="abgi020.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abgi020_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE abgi020_bcl
   #END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="abgi020.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION abgi020_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "bgab_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "bgab_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE bgab_t 
         SET (bgab001,bgab002
              ,bgabstus,bgab003,bgabmodid,bgabmoddt,bgabownid,bgabowndp,bgabcrtid,bgabcrtdp,bgabcrtdt) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_bgab_d[l_ac].bgabstus,g_bgab_d[l_ac].bgab003,g_bgab2_d[l_ac].bgabmodid,g_bgab2_d[l_ac].bgabmoddt, 
                  g_bgab2_d[l_ac].bgabownid,g_bgab2_d[l_ac].bgabowndp,g_bgab2_d[l_ac].bgabcrtid,g_bgab2_d[l_ac].bgabcrtdp, 
                  g_bgab2_d[l_ac].bgabcrtdt) 
         WHERE bgab001 = ps_keys_bak[1] AND bgab002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bgab_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bgab_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>