{<section id="aapr130_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:7(2017-01-24 17:40:10), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000074
#+ Filename...: aapr130_x01
#+ Description: ...
#+ Creator....: 05016(2014-12-10 15:37:16)
#+ Modifier...: 06821 -SD/PR-
{</section>}



{<section id="aapr130_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 LIKE type_t.chr80,         #apcald 
       a2 LIKE type_t.chr80,         #apcacomp 
       a3 LIKE type_t.chr80,         #apcb007 
       a4 LIKE type_t.chr1          #g_aapq130_arg
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="aapr130_x01.main" readonly="Y" >}
PUBLIC FUNCTION aapr130_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr80         #tm.a1  apcald 
DEFINE  p_arg3 LIKE type_t.chr80         #tm.a2  apcacomp 
DEFINE  p_arg4 LIKE type_t.chr80         #tm.a3  apcb007 
DEFINE  p_arg5 LIKE type_t.chr1         #tm.a4  g_aapq130_arg
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
   LET tm.a3 = p_arg4
   LET tm.a4 = p_arg5

   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aapr130_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aapr130_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aapr130_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aapr130_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aapr130_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aapr130_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="aapr130_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION aapr130_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdtsite.pmdt_t.pmdtsite,pmds007.pmds_t.pmds007,pmds007_desc.type_t.chr100,pmds001.pmds_t.pmds001,l_pmds000.type_t.chr500,pmdtdocno.pmdt_t.pmdtdocno,pmdtseq.pmdt_t.pmdtseq,pmdt006.pmdt_t.pmdt006,pmdt006_desc.type_t.chr500,pmdt006_desc_1.type_t.chr100,l_pmdt005_desc.type_t.chr500,l_imag011.imag_t.imag011,l_imag011_desc.type_t.chr500,l_apcb021.apcb_t.apcb021,l_apcb021_desc.type_t.chr500,pmdt001.pmdt_t.pmdt001,pmdt002.pmdt_t.pmdt002,pmdt050.pmdt_t.pmdt050,pmds002.pmds_t.pmds002,l_pmds002_desc.type_t.chr500,pmds003.pmds_t.pmds003,l_pmds003_desc.type_t.chr500,pmdt016.pmdt_t.pmdt016,l_pmdt016_desc.type_t.chr500,pmdt024.pmdt_t.pmdt024,apcb007.apcb_t.apcb007,pmdt056.pmdt_t.pmdt056,pmdt066.pmdt_t.pmdt066,pmdt069.pmdt_t.pmdt069,l_diffqty.type_t.num20_6,pmds037.pmds_t.pmds037,pmds038.pmds_t.pmds038,pmdt046.pmdt_t.pmdt046,pmdt037.pmdt_t.pmdt037,pmdt036.pmdt_t.pmdt036,l_pmdt038_3.type_t.num20_6,l_pmdt047_3.type_t.num20_6,l_pmdt039_3.type_t.num20_6,pmdt038.pmdt_t.pmdt038,pmdt047.pmdt_t.pmdt047,pmdt039.pmdt_t.pmdt039,l_sumapcb103.type_t.num20_6,l_sumapcb104.type_t.num20_6,l_sumapcb105.type_t.num20_6,l_sfapcb103.type_t.num20_6,l_sfapcb104.type_t.num20_6,l_sfapcb105.type_t.num20_6,l_apcb113.type_t.num20_6,l_apcb114.type_t.num20_6,l_apcb115.type_t.num20_6,l_dapcb103.type_t.num20_6,l_dapcb104.type_t.num20_6,l_dapcb105.type_t.num20_6,pmdt0382.pmdt_t.pmdt038,pmdt0472.pmdt_t.pmdt047,pmdt0392.pmdt_t.pmdt039,l_apcadocno.apca_t.apcadocno,l_apca2.apca_t.apcadocno" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="aapr130_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION aapr130_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  


      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="aapr130_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aapr130_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdtsite,pmds007,'',pmds001,'',pmdtdocno,pmdtseq,pmdt006,'','','','','','','',pmdt001,pmdt002,pmdt050,pmds002,'',pmds003,'',pmdt016,'',pmdt024,'',pmdt056,pmdt066,pmdt069,'',pmds037,pmds038,pmdt046,pmdt037,pmdt036,'','','',pmdt038,'',pmdt039,'','','','','','','','','','','','','','','','',''"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmds_t,pmdt_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmds_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aapr130_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aapr130_x01_curs CURSOR FOR aapr130_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="aapr130_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION aapr130_x01_ins_data()
DEFINE sr RECORD 
   pmdtsite LIKE pmdt_t.pmdtsite, 
   pmds007 LIKE pmds_t.pmds007, 
   pmds007_desc LIKE type_t.chr100, 
   pmds001 LIKE pmds_t.pmds001, 
   l_pmds000 LIKE type_t.chr500, 
   pmdtdocno LIKE pmdt_t.pmdtdocno, 
   pmdtseq LIKE pmdt_t.pmdtseq, 
   pmdt006 LIKE pmdt_t.pmdt006, 
   pmdt006_desc LIKE type_t.chr500, 
   pmdt006_desc_1 LIKE type_t.chr100, 
   l_pmdt005_desc LIKE type_t.chr500, 
   l_imag011 LIKE imag_t.imag011, 
   l_imag011_desc LIKE type_t.chr500, 
   l_apcb021 LIKE apcb_t.apcb021, 
   l_apcb021_desc LIKE type_t.chr500, 
   pmdt001 LIKE pmdt_t.pmdt001, 
   pmdt002 LIKE pmdt_t.pmdt002, 
   pmdt050 LIKE pmdt_t.pmdt050, 
   pmds002 LIKE pmds_t.pmds002, 
   l_pmds002_desc LIKE type_t.chr500, 
   pmds003 LIKE pmds_t.pmds003, 
   l_pmds003_desc LIKE type_t.chr500, 
   pmdt016 LIKE pmdt_t.pmdt016, 
   l_pmdt016_desc LIKE type_t.chr500, 
   pmdt024 LIKE pmdt_t.pmdt024, 
   apcb007 LIKE apcb_t.apcb007, 
   pmdt056 LIKE pmdt_t.pmdt056, 
   pmdt066 LIKE pmdt_t.pmdt066, 
   pmdt069 LIKE pmdt_t.pmdt069, 
   l_diffqty LIKE type_t.num20_6, 
   pmds037 LIKE pmds_t.pmds037, 
   pmds038 LIKE pmds_t.pmds038, 
   pmdt046 LIKE pmdt_t.pmdt046, 
   pmdt037 LIKE pmdt_t.pmdt037, 
   pmdt036 LIKE pmdt_t.pmdt036, 
   l_pmdt038_3 LIKE type_t.num20_6, 
   l_pmdt047_3 LIKE type_t.num20_6, 
   l_pmdt039_3 LIKE type_t.num20_6, 
   pmdt038 LIKE pmdt_t.pmdt038, 
   pmdt047 LIKE pmdt_t.pmdt047, 
   pmdt039 LIKE pmdt_t.pmdt039, 
   l_sumapcb103 LIKE type_t.num20_6, 
   l_sumapcb104 LIKE type_t.num20_6, 
   l_sumapcb105 LIKE type_t.num20_6, 
   l_sfapcb103 LIKE type_t.num20_6, 
   l_sfapcb104 LIKE type_t.num20_6, 
   l_sfapcb105 LIKE type_t.num20_6, 
   l_apcb113 LIKE type_t.num20_6, 
   l_apcb114 LIKE type_t.num20_6, 
   l_apcb115 LIKE type_t.num20_6, 
   l_dapcb103 LIKE type_t.num20_6, 
   l_dapcb104 LIKE type_t.num20_6, 
   l_dapcb105 LIKE type_t.num20_6, 
   pmdt0382 LIKE pmdt_t.pmdt038, 
   pmdt0472 LIKE pmdt_t.pmdt047, 
   pmdt0392 LIKE pmdt_t.pmdt039, 
   l_apcadocno LIKE apca_t.apcadocno, 
   l_apca2 LIKE apca_t.apcadocno
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aapr130_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdtsite,sr.pmds007,sr.pmds007_desc,sr.pmds001,sr.l_pmds000,sr.pmdtdocno,sr.pmdtseq,sr.pmdt006,sr.pmdt006_desc,sr.pmdt006_desc_1,sr.l_pmdt005_desc,sr.l_imag011,sr.l_imag011_desc,sr.l_apcb021,sr.l_apcb021_desc,sr.pmdt001,sr.pmdt002,sr.pmdt050,sr.pmds002,sr.l_pmds002_desc,sr.pmds003,sr.l_pmds003_desc,sr.pmdt016,sr.l_pmdt016_desc,sr.pmdt024,sr.apcb007,sr.pmdt056,sr.pmdt066,sr.pmdt069,sr.l_diffqty,sr.pmds037,sr.pmds038,sr.pmdt046,sr.pmdt037,sr.pmdt036,sr.l_pmdt038_3,sr.l_pmdt047_3,sr.l_pmdt039_3,sr.pmdt038,sr.pmdt047,sr.pmdt039,sr.l_sumapcb103,sr.l_sumapcb104,sr.l_sumapcb105,sr.l_sfapcb103,sr.l_sfapcb104,sr.l_sfapcb105,sr.l_apcb113,sr.l_apcb114,sr.l_apcb115,sr.l_dapcb103,sr.l_dapcb104,sr.l_dapcb105,sr.pmdt0382,sr.pmdt0472,sr.pmdt0392,sr.l_apcadocno,sr.l_apca2
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aapr130_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="aapr130_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION aapr130_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="aapr130_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
