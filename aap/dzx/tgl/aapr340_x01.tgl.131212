#+ Version..: T100-ERP-1.00.00(版次:1) Build-000035
#+ 
#+ Filename...: aapr340_x01
#+ Description: XG測試程式
#+ Creator....: 02716(2013/12/04)
#+ Modifier...: 02716(2013/10/17)
#+ Buildtype..: 應用 x01 樣板自動產生
#+ 以上段落由子樣板a00產生


 
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#模組共用變數/g_xxxx 
{<Module define>} 
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #condition 
       sw21 LIKE type_t.chr1,         #退貨折讓沖帳 
       sw22 LIKE type_t.chr1,         #預付沖帳 
       sw23 LIKE type_t.chr1,         #DM沖帳 
       z LIKE type_t.chr1,         #Print UNAP  暫估帳款 
       h LIKE type_t.chr1,         #狀態 
       more LIKE type_t.chr1          #Input more condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值                                               
       g_sql           STRING  
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
 
PUBLIC FUNCTION aapr340_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5,p_arg6,p_arg7)
DEFINE  p_arg1 STRING                  #tm.wc  condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.sw21  退貨折讓沖帳 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.sw22  預付沖帳 
DEFINE  p_arg4 LIKE type_t.chr1         #tm.sw23  DM沖帳 
DEFINE  p_arg5 LIKE type_t.chr1         #tm.z  Print UNAP  暫估帳款 
DEFINE  p_arg6 LIKE type_t.chr1         #tm.h  狀態 
DEFINE  p_arg7 LIKE type_t.chr1         #tm.more  Input more condition
#add-point:init段define
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.sw21 = p_arg2
   LET tm.sw22 = p_arg3
   LET tm.sw23 = p_arg4
   LET tm.z = p_arg5
   LET tm.h = p_arg6
   LET tm.more = p_arg7

   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
 
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔  
   CALL aapr340_x01_create_tmptable()
   
   #報表select欄位準備
   CALL aapr340_x01_sel_prep()
   
   #報表insert的prepare
   CALL aapr340_x01_ins_prep()  
   
   #將資料存入tmptable
   CALL aapr340_x01_ins_data() 
   
   #將tmptable資料印出
   CALL aapr340_x01_rep_data()
   
   #刪除TEMP TABLE
   CALL cl_xg_drop_tmptable()
 
 
END FUNCTION
 
 
FUNCTION aapr340_x01_create_tmptable()
 
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before       
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #建立TEMP TABLE 透過此lib(組字串+create temp table+組ins的問號)     
   IF NOT cl_xg_create_tmptable() THEN             
      CALL cl_ap_exitprogram("1")                
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after
   {<point name="create_tmp.after"/>} 
   #end add-point:create_tmp.after   
END FUNCTION
 
 
FUNCTION aapr340_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING 
#add-point:ins_prep.define
{<point name="ins_prep.define"/>} 
#end add-point:ins_prep.define 
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_gre_del_data(g_rep_tmpname[i])      
       LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
       CASE i
         WHEN 1  
         PREPARE insert_prep FROM g_sql          


       END CASE 
       IF STATUS THEN
          LET l_prep_str="insert_prep",i
          CALL cl_err(l_prep_str,status,1) 
          CALL cl_xg_drop_tmptable()  
          CALL cl_ap_exitprogram("1")            
       END IF
   END FOR  
END FUNCTION 
 
 
#+ 選單功能實際執行處
PRIVATE FUNCTION aapr340_x01_sel_prep() 
DEFINE l_select      STRING
DEFINE l_from        STRING
DEFINE l_where       STRING
#add-point:sel_prep段define
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before"/>}
   #end add-point
   
 
   #add-point:sel_prep l_select
   {<point name="sel_prep.l_select"/>}
   #end add-point 
   LET l_select = " SELECT '',itap000,itap001,itap002,itap003,itap004,itpc004,itap005,itap006,itap007,itap008,itap009,(itpc005-itpc006-itpc007-itpc008),(itpc009-itpc010-itpc011-itpc008*itap010),itap011,itap012,itpm002,itpm003,itpc013,itaz003,itaz004,itaz005,'','',''"  
 
   #add-point:sel_prep l_from
   {<point name="sel_prep.l_from"/>}
   #end add-point
    LET l_from = " FROM itap_t LEFT OUTER JOIN itpm_t ON itpm001 = itap003  LEFT OUTER JOIN itge_t ON itge001 = itap006  LEFT OUTER JOIN itpa_t ON itpa001 = itap004,itpc_t,itaz_t"  
 
   #add-point:sel_prep l_where
   {<point name="sel_prep.l_where"/>}
   #end add-point
    LET l_where = " WHERE itaz_t.itaz001 = itap_t.itap005 AND itap003!='EMPL' AND itap001 =itpc001 AND itap013 = 'N' AND itap014 > (itap015+itap016) AND " ,tm.wc CLIPPED   
 
   #add-point:sel_prep l_order
   {<point name="sel_prep.l_order"/>}
   #end add-point   
   
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before"/>}
   #end add-point:sel_prep.sql.before
   
   LET g_sql = l_select CLIPPED ," ",l_from CLIPPED ," ",l_where CLIPPED 
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after"/>}
   #end add-point 
   PREPARE aapr340_x01_prepare FROM g_sql
   IF STATUS THEN 
      CALL cl_err('prepare:',STATUS,1) 
      CALL cl_ap_exitprogram("1")                        
   END IF
   DECLARE aapr340_x01_curs CURSOR FOR aapr340_x01_prepare   
 
END FUNCTION
 
 
PRIVATE FUNCTION aapr340_x01_ins_data()
DEFINE sr RECORD 
   plant LIKE ooab_t.ooabsite, 
   itap000 LIKE itap_t.itap000, 
   itap001 LIKE itap_t.itap001, 
   itap002 LIKE itap_t.itap002, 
   itap003 LIKE itap_t.itap003, 
   itap004 LIKE itap_t.itap004, 
   itpc004 LIKE itpc_t.itpc004, 
   itap005 LIKE itap_t.itap005, 
   itap006 LIKE itap_t.itap006, 
   itap007 LIKE itap_t.itap007, 
   itap008 LIKE itap_t.itap008, 
   itap009 LIKE itap_t.itap009, 
   pay LIKE itap_t.itap018, 
   pay1 LIKE itap_t.itap018, 
   itap011 LIKE itap_t.itap011, 
   itap012 LIKE itap_t.itap012, 
   itpm002 LIKE itpm_t.itpm002, 
   itpm003 LIKE itpm_t.itpm003, 
   itpc013 LIKE itpc_t.itpc013, 
   itaz003 LIKE itaz_t.itaz003, 
   itaz004 LIKE itaz_t.itaz004, 
   itaz005 LIKE itaz_t.itaz005, 
   itpa002 LIKE itpa_t.itpa002, 
   itge002 LIKE itge_t.itge002, 
   mark LIKE itap_t.itap005
 END RECORD                           
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
   
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point  
                    
    FOREACH aapr340_x01_curs INTO sr.*                               
       IF STATUS THEN 
          CALL cl_err('foreach:',STATUS,1) 
          EXIT FOREACH 
       END IF 
       
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point   
 
       #add-point:ins_data段before.save
       {<point name="ins_data.before.save"/>}
       #end add-point  
 
       #EXECUTE
       EXECUTE insert_prep USING sr.itap003,sr.itap011,sr.itap006,sr.itge002,sr.itap007,sr.itap001,sr.itap008,sr.itap009,sr.itap000,sr.itap002,sr.itpc004,sr.pay,sr.pay1,sr.itpc013,'',sr.mark,sr.itap012,'',sr.itaz004,sr.itaz005,''   
 
       #add-point:ins_data段after_save
       {<point name="ins_data.after.save"/>}
       #end add-point
 
    END FOREACH
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point    
END FUNCTION
 
 
FUNCTION aapr340_x01_rep_data()
#add-point:rep_data.define
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before 
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before  
    LET g_xgrid.table = g_rep_tmpname[1]   
    CALL cl_xg_view() 
    #add-point:rep_data.after 
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after   
END FUNCTION
 
# add-point:other.function
{<point name="other.function"/>}   
# end add-point:other.function
