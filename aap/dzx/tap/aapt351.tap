<add_points prog="aapt351" std_prog="aapt351" erpver="1.0" module="AAP" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.aapt351_get_apda006_desc" cite_std="N" status="d" ver="" src="s" new="Y" order="1">
<![CDATA[
################################################################################
# Descriptions...: 零用金帳戶說明欄位
# Usage..........: CALL aapt351_get_apda006_desc(p_apda006)
#                  RETURNING r_desc
# Date & Author..: 14/06/11 By Belle
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt351_get_apda006_desc(p_apda006)
DEFINE p_apda006   LIKE apda_t.apda006
DEFINE r_desc      LIKE type_t.chr80
DEFINE l_apac003   LIKE apac_t.apac003
DEFINE l_apacsite  LIKE apac_t.apacsite
DEFINE l_apacl003  LIKE apacl_t.apacl003  #零用金說明
DEFINE l_ooefl003  LIKE ooefl_t.ooefl003  #組織說明
DEFINE l_oofa011   LIKE oofa_t.oofa011    #人員說明
   
   LET l_apac003  = ''
   LET l_apacsite = ''
   LET l_apacl003 = ''
   LET l_apacl003 = ''
   LET l_ooefl003 = ''
   LET l_oofa011  = ''
   LET r_desc = ''
   SELECT apac003,apacsite,apacl003 INTO l_apac003,l_apacsite,l_apacl003
     FROM apac_t LEFT OUTER JOIN apacl_t ON apacent = apaclent AND apac001 = apacl001 AND apacl002 = g_lang
    WHERE apacent = g_enterprise
      AND apac001 = p_apda006
   CALL s_desc_get_department_desc(l_apacsite) RETURNING l_ooefl003
   CALL s_desc_get_person_desc(l_apac003)      RETURNING l_oofa011
   
   LET r_desc = l_apacl003 CLIPPED ,"/",l_ooefl003 CLIPPED ,"/", l_oofa011 CLIPPED
   
   RETURN r_desc
END FUNCTION]]>
</point>
  <point name="construct.c.apda006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #開窗c段
            #零用金帳戶
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apda_m.apda006        #給予default值
            CALL q_apac001_1()                                #呼叫開窗
            LET g_apda_m.apda006 = g_qryparam.return1         #將開窗取得的值回傳到變數
            DISPLAY BY NAME g_apda_m.apda006
            NEXT FIELD apda006                                #返回原欄位]]>
</point>
  <point name="construct.c.apdacnfid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apdacnfid  #顯示到畫面上
            NEXT FIELD apdacnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.apdacrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apdacrtdp  #顯示到畫面上
            NEXT FIELD apdacrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.apdacrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apdacrtid  #顯示到畫面上
            NEXT FIELD apdacrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.apdadocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #開窗c段
            #單據編號
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_fin_create_slip_sql('apda001',g_prog)
            CALL q_apdadocno()                                #呼叫開窗
            LET g_apda_m.apdadocno = g_qryparam.return1       #將開窗取得的值回傳到變數
            DISPLAY g_qryparam.return1 TO apdadocno           #顯示到畫面上
            NEXT FIELD apdadocno        ]]>
</point>
  <point name="construct.c.apdamodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apdamodid  #顯示到畫面上
            NEXT FIELD apdamodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.apdaowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apdaowndp  #顯示到畫面上
            NEXT FIELD apdaowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.apdaownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apdaownid  #顯示到畫面上
            NEXT FIELD apdaownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.apdasite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_xrah002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apdasite  #顯示到畫面上
            NEXT FIELD apdasite                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.apce100" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO apce100  #顯示到畫面上
            NEXT FIELD apce100                     #返回原欄位
    

]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF NOT s_aooi200_del_docno(g_apda_m.apdadocno,g_apda_m.apdadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[GLOBALS "../../cfg/top_finance.inc"    #財務模組使用]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[DEFINE g_fin_arg1            LIKE gzsz_t.gzsz002      #財務應用參數(定義於azzi991)D-FIN-3001--應付帳款單性質
DEFINE g_success1            LIKE type_t.num5
DEFINE g_ap_slip             LIKE ooba_t.ooba002      #應付帳款單單別]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.apda001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.apda003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #申請人員
            LET g_apda_m.apda003_desc = ' '
            IF NOT cl_null(g_apda_m.apda003) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_apda_m.apda003 != g_apda_m_t.apda003 OR g_apda_m_t.apda003 IS NULL )) THEN
                  CALL s_employee_chk(g_apda_m.apda003) RETURNING g_success1
                  IF NOT g_success1 THEN
                     LET g_apda_m.apda003 = g_apda_m_t.apda003
                     CALL s_desc_get_person_desc(g_apda_m.apda003) RETURNING g_apda_m.apda003_desc
                     DISPLAY BY NAME g_apda_m.apda003_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_person_desc(g_apda_m.apda003) RETURNING g_apda_m.apda003_desc
            DISPLAY BY NAME g_apda_m.apda003_desc   ]]>
</point>
  <point name="input.a.apda006" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #零用金帳戶
            LET g_apda_m.apda006_desc = ' '
            IF NOT cl_null(g_apda_m.apda006) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_apda_m.apda006 != g_apda_m_t.apda006 OR g_apda_m_t.apda006 IS NULL )) THEN
                  CALL s_aap_apac001_chk(g_apda_m.apda006) RETURNING g_success1,g_errno
                  IF NOT g_success1 THEN
                     CALL cl_err('',g_errno,1)
                     LET g_apda_m.apda006 = g_apda_m_t.apda006
                     CALL aapt351_get_apda006_desc(g_apda_m.apda006) RETURNING g_apda_m.apda006_desc
                     DISPLAY BY NAME g_apda_m.apda006_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL aapt351_get_apda006_desc(g_apda_m.apda006) RETURNING g_apda_m.apda006_desc
            DISPLAY BY NAME g_apda_m.apda006_desc]]>
</point>
  <point name="input.a.apda015" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #作廢理由碼
            LET g_apda_m.apda015_desc = ''
            IF NOT cl_null(g_apda_m.apda015) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND ((g_apda_m.apda015 != g_apda_m_t.apda015 OR g_apda_m_t.apda015 IS NULL ) )) THEN
                  IF NOT s_azzi650_chk_exist('3115',g_apda_m.apda015) THEN
                     LET g_apda_m.apda015 = g_apda_m_t.apda015
                     CALL s_desc_get_acc_desc('3115',g_apda_m.apda015) RETURNING g_apda_m.apda015_desc
                     DISPLAY BY NAME g_apda_m.apda015_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               NEXT FIELD CURRENT 
            END IF
            CALL s_desc_get_acc_desc('3115',g_apda_m.apda015) RETURNING g_apda_m.apda015_desc
            DISPLAY BY NAME g_apda_m.apda015_desc  
]]>
</point>
  <point name="input.a.apda018" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #請款理由碼
            LET g_apda_m.apda018_desc = ''
            IF NOT cl_null(g_apda_m.apda018) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND ((g_apda_m.apda018 != g_apda_m_t.apda018 OR g_apda_m_t.apda018 IS NULL ) )) THEN
                  IF NOT s_azzi650_chk_exist('3212',g_apda_m.apda018) THEN
                     LET g_apda_m.apda018 = g_apda_m_t.apda018
                     CALL s_desc_get_acc_desc('3212',g_apda_m.apda018) RETURNING g_apda_m.apda018_desc
                     DISPLAY BY NAME g_apda_m.apda018_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               NEXT FIELD CURRENT 
            END IF
            CALL s_desc_get_acc_desc('3212',g_apda_m.apda018) RETURNING g_apda_m.apda018_desc
            DISPLAY BY NAME g_apda_m.apda018_desc   ]]>
</point>
  <point name="input.a.apdadocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #撥補單號
            LET g_apda_m.apdadocno_desc = ''
            #檢查是否有重複的單據編號(企業代碼/帳別/單號)
            IF NOT cl_null(g_apda_m.apdadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (cl_null(g_apda_m_t.apdadocno) OR g_apda_m.apdadocno != g_apda_m_t.apdadocno)) THEN 
                  #檢查單別是否存在單別檔/單別是有效
                  LET g_errno = NULL
                  #以帳別去取所屬法人,以法人勾稽單別是否在單別參照表
                  CALL s_fin_slip_chk(g_apda_m.apdadocno,g_prog,g_apda_m.apdald) RETURNING g_success1,g_errno
                  IF NOT g_success1 THEN
                     CALL cl_err('',g_errno,1)
                     LET g_apda_m.apdadocno = g_apda_m_t.apdadocno
                     CALL s_aooi200_get_slip_desc(g_apda_m.apdadocno) RETURNING g_apda_m.apdadocno_desc
                     DISPLAY BY NAME g_apda_m.apdadocno_desc
                     NEXT FIELD CURRENT
                  END IF
                  #取得單別性質(apda001)
                  CALL s_aooi200_get_slip(g_apda_m.apdadocno) RETURNING g_success1,g_ap_slip
                  CALL cl_get_doc_para(g_enterprise,g_apda_m.apdacomp,g_ap_slip,g_fin_arg1) RETURNING g_apda_m.apda001
                  DISPLAY BY NAME g_apda_m.apda001
               END IF
            END IF
            CALL s_aooi200_get_slip_desc(g_apda_m.apdadocno) RETURNING g_apda_m.apdadocno_desc
            DISPLAY BY NAME g_apda_m.apdadocno_desc]]>
</point>
  <point name="input.a.apdald" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_apda_m.apdald) AND NOT cl_null(g_apda_m.apdadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_apda_m.apdald != g_apdald_t  OR g_apda_m.apdadocno != g_apdadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM apda_t WHERE "||"apdaent = '" ||g_enterprise|| "' AND "||"apdald = '"||g_apda_m.apdald ||"' AND "|| "apdadocno = '"||g_apda_m.apdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.apdasite" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_apda_m.apdasite) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_xrah002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.page1.apce109" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_apce_d[l_ac].apce109) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page1.apceseq" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_apce_d[l_ac].apceseq) THEN 
            END IF 


            #此段落由子樣板a05產生
            IF  g_apda_m.apdald IS NOT NULL AND g_apda_m.apdadocno IS NOT NULL AND g_apce_d[g_detail_idx].apceseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_apda_m.apdald != g_apdald_t OR g_apda_m.apdadocno != g_apdadocno_t OR g_apce_d[g_detail_idx].apceseq != g_apce_d_t.apceseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM apce_t WHERE "||"apceent = '" ||g_enterprise|| "' AND "||"apceld = '"||g_apda_m.apdald ||"' AND "|| "apcedocno = '"||g_apda_m.apdadocno ||"' AND "|| "apceseq = '"||g_apce_d[g_detail_idx].apceseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.apcadocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_apda_m.apdald IS NOT NULL AND g_apda_m.apdadocno IS NOT NULL AND g_apce_d[g_detail_idx].apceseq IS NOT NULL AND g_apce2_d[g_detail_idx2].apcald IS NOT NULL AND g_apce2_d[g_detail_idx2].apcadocno IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_apda_m.apdald != g_apdald_t OR g_apda_m.apdadocno != g_apdadocno_t OR g_apce_d[g_detail_idx].apceseq != g_apce_d[g_detail_idx].apceseq OR g_apce2_d[g_detail_idx2].apcald != g_apce2_d_t.apcald OR g_apce2_d[g_detail_idx2].apcadocno != g_apce2_d_t.apcadocno)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM apca_t WHERE "||"apcaent = '" ||g_enterprise|| "' AND "||"apcald = '"||g_apda_m.apdald ||"' AND "|| "apcadocno = '"||g_apda_m.apdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.apcald" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_apda_m.apdald IS NOT NULL AND g_apda_m.apdadocno IS NOT NULL AND g_apce_d[g_detail_idx].apceseq IS NOT NULL AND g_apce2_d[g_detail_idx2].apcald IS NOT NULL AND g_apce2_d[g_detail_idx2].apcadocno IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_apda_m.apdald != g_apdald_t OR g_apda_m.apdadocno != g_apdadocno_t OR g_apce_d[g_detail_idx].apceseq != g_apce_d[g_detail_idx].apceseq OR g_apce2_d[g_detail_idx2].apcald != g_apce2_d_t.apcald OR g_apce2_d[g_detail_idx2].apcadocno != g_apce2_d_t.apcadocno)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM apca_t WHERE "||"apcaent = '" ||g_enterprise|| "' AND "||"apcald = '"||g_apda_m.apdald ||"' AND "|| "apcadocno = '"||g_apda_m.apdadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.apda003" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #帳務人員            
            #開窗i段
		    	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		      LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apda_m.apda003      #給予default值
            CALL q_ooag001()                                #呼叫開窗
            LET g_apda_m.apda003 = g_qryparam.return1       #將開窗取得的值回傳到變數
            CALL s_desc_get_person_desc(g_apda_m.apda003) RETURNING g_apda_m.apda003_desc
            DISPLAY BY NAME g_apda_m.apda003,g_apda_m.apda003_desc
            NEXT FIELD apda003                              #返回原欄位]]>
</point>
  <point name="input.c.apda006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #開窗i段
            #零用金帳戶
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apda_m.apda006        #給予default值
            CALL q_apac001_1()                                #呼叫開窗
            LET g_apda_m.apda006 = g_qryparam.return1         #將開窗取得的值回傳到變數
            DISPLAY BY NAME g_apda_m.apda006
            NEXT FIELD apda006                                #返回原欄位]]>
</point>
  <point name="input.c.apda015" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[			   #作廢
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apda_m.apda015       #給予default值
            LET g_qryparam.arg1 = "3115"
            CALL q_oocq002()                                 #呼叫開窗
            LET g_apda_m.apda015 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL s_desc_get_acc_desc('3115',g_apda_m.apda015) RETURNING g_apda_m.apda015_desc
            DISPLAY BY NAME g_apda_m.apda015,g_apda_m.apda015_desc
            NEXT FIELD apda015]]>
</point>
  <point name="input.c.apda018" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #開窗i段
            #請款理由碼
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
   			LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apda_m.apda018       #給予default值
            LET g_qryparam.arg1 = "3212"
            CALL q_oocq002()                                 #呼叫開窗
            LET g_apda_m.apda018 = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL s_desc_get_acc_desc('3212',g_apda_m.apda018) RETURNING g_apda_m.apda018_desc
            DISPLAY BY NAME g_apda_m.apda018,g_apda_m.apda018_desc
            NEXT FIELD apda018]]>
</point>
  <point name="input.c.apdadocno" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #撥補單號            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_apda_m.apdadocno      #給予default值
            LET g_qryparam.arg1  = g_apda_m.apdacomp 
            LET g_qryparam.where = s_fin_create_slip_sql('ooac004',g_prog)
            CALL q_oobx001_1()                                #呼叫開窗
            LET g_apda_m.apdadocno = g_qryparam.return1       #將開窗取得的值回傳到變數
            CALL s_aooi200_get_slip_desc(g_apda_m.apdadocno) RETURNING g_apda_m.apdadocno_desc
            CALL s_aooi200_get_slip(g_apda_m.apdadocno) RETURNING g_success1,g_ap_slip
            CALL cl_get_doc_para(g_enterprise,g_apda_m.apdacomp,g_ap_slip,g_fin_arg1) RETURNING g_apda_m.apda001
            DISPLAY BY NAME g_apda_m.apdadocno,g_apda_m.apdadocno_desc,g_apda_m.apda001
            NEXT FIELD apdadocno                              #返回原欄位]]>
</point>
  <point name="input.c.page1.apce100" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_apce_d[l_ac].apce100             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooai001()                                #呼叫開窗

            LET g_apce_d[l_ac].apce100 = g_qryparam.return1              

            DISPLAY g_apce_d[l_ac].apce100 TO apce100              #

            NEXT FIELD apce100                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               #新增前才取單號
               CALL s_aooi200_gen_docno(g_apda_m.apdacomp,g_apda_m.apdadocno,g_apda_m.apdadocdt,g_prog)
                    RETURNING l_success,g_apda_m.apdadocno
               IF NOT l_success THEN
                  CALL cl_err(g_apda_m.apdadocno,'apm-00003',1)
                  CALL s_transaction_end('N','0')
                  NEXT FIELD apdadocno
               END IF
               DISPLAY BY NAME g_apda_m.apdadocno]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      DISPLAY BY NAME g_apda_m.apda016
      LET g_apda_m_t.*  = g_apda_m.*    #設定預設值後]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET g_fin_arg1 = 'D-FIN-3001']]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET g_apda_m.apdasite_desc = s_desc_get_department_desc(g_apda_m.apdasite) #帳務中心
   LET g_apda_m.apdadocno_desc= s_aooi200_get_slip_desc(g_apda_m.apdadocno)   #單別
   LET g_apda_m.apda003_desc  = s_desc_get_person_desc(g_apda_m.apda003)      #帳務人員
   LET g_apda_m.apda006_desc  = aapt351_get_apda006_desc(g_apda_m.apda006)    #零用金帳戶說明
   LET g_apda_m.apda015_desc  = s_desc_get_acc_desc('3115',g_apda_m.apda015)  #作廢理由碼
   LET g_apda_m.apda018_desc  = s_desc_get_acc_desc('3212',g_apda_m.apda018)  #請款理由碼
   ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apdadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdadocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdadocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdacomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdacomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apdacomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apdald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apda018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apda018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apda018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apda008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apda008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apda008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apda017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apda017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apda017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apda015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apda015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.apda015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdacrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdamoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdacnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.apdacnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.apdacnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apceseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apceseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.apceseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apce008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apce008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.apce008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apce100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apce100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apce109" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apce109" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.apce109" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apce011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apce011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.apce011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apad003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apad003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.apad003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apce031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apce031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.apce031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.apce010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.apce010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.apce010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apdadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.apdadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apdadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apdadocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apdadocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apdasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apdasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apdacomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.apdacomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apdacomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apdald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apdald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apda018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apda018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apda008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.apda008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apda008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apda017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.apda017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apda017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.apda015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.apda015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.apdadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.apda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.apdasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.apdacomp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.apdald" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.apda008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.apda017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[              ##取得g_apda_m.apda003的人員歸屬部門/責任中心
              #UPDATE apce_t
              #   SET (apce001,apce002,apce003,apce004,apce005,
              #        apce006,apce007,apce009,apce015,apce017,
              #        apce018,apce019,apce027,apce028)
              #      =('aapt351','10' ,g_apda_m.apdadocno,0,0,
              #        '20'   ,0      ,'N'    ,''     ,g_apda_m.apda003,
              #        ''     ,''     ,'N'    ,'0')
              # WHERE
               ]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apceseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apceseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apce008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.apce008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apce008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apce100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.apce100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apce100" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apce109" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apce109" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apce011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.apce011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apce011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apad003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.apad003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apad003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apce031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.apce031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apce031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.apce010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.apce010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.apce010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.apceseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.apce008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.apce109" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.apce011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.apad003_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.apce031" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.apce010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.aapt351_get_apda006_desc" cite_std="N" status="u" ver="" src="s" new="Y" order="1">
<![CDATA[
################################################################################
# Descriptions...: 零用金帳戶說明欄位
# Usage..........: CALL aapt351_get_apda006_desc(p_apda006)
#                  RETURNING r_desc
# Date & Author..: 14/06/11 By Belle
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt351_get_apda006_desc(p_apda006)
DEFINE p_apda006   LIKE apda_t.apda006
DEFINE r_desc      LIKE type_t.chr80
DEFINE l_apac003   LIKE apac_t.apac003
DEFINE l_apacsite  LIKE apac_t.apacsite
DEFINE l_apacl003  LIKE apacl_t.apacl003  #零用金說明
DEFINE l_ooefl003  LIKE ooefl_t.ooefl003  #組織說明
DEFINE l_oofa011   LIKE oofa_t.oofa011    #人員說明
   
   LET l_apac003  = ''
   LET l_apacsite = ''
   LET l_apacl003 = ''
   LET l_apacl003 = ''
   LET l_ooefl003 = ''
   LET l_oofa011  = ''
   LET r_desc = ''
   SELECT apac003,apacsite,apacl003 INTO l_apac003,l_apacsite,l_apacl003
     FROM apac_t LEFT OUTER JOIN apacl_t ON apacent = apaclent AND apac001 = apacl001 AND apacl002 = g_lang
    WHERE apacent = g_enterprise
      AND apac001 = p_apda006
   CALL s_desc_get_department_desc(l_apacsite) RETURNING l_ooefl003
   CALL s_desc_get_person_desc(l_apac003)      RETURNING l_oofa011
   
   LET r_desc = l_apacl003 CLIPPED ,"/",l_ooefl003 CLIPPED ,"/", l_oofa011 CLIPPED
   
   RETURN r_desc
END FUNCTION]]>
</point>
  <section id="aapt351.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aapt351_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_apce_d.clear()    #g_apce_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aapt351_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE apceseq,apce008,apce100,apce109,apce011,'',apce031,apce010 FROM apce_t", 
             
                  " INNER JOIN apda_t ON apdald = apceld ",
                  " AND apdadocno = apcedocno ",
 
                  #"",
                  
                  "",
                  " WHERE apceent=? AND apceld=? AND apcedocno=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY apce_t.apceseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE aapt351_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aapt351_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_apda_m.apdald
                                               ,g_apda_m.apdadocno
 
                                               
      FOREACH b_fill_cs INTO g_apce_d[l_ac].apceseq,g_apce_d[l_ac].apce008,g_apce_d[l_ac].apce100,g_apce_d[l_ac].apce109, 
          g_apce_d[l_ac].apce011,g_apce_d[l_ac].apad003_desc,g_apce_d[l_ac].apce031,g_apce_d[l_ac].apce010 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_apce_d.deleteElement(g_apce_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aapt351_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aapt351.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aapt351_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aapt351_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aapt351.browser_fill" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aapt351_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_apda_m.* TO NULL
   CALL g_apce_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "apdald"
                        ,",apdadocno"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE apdald ",
                                    ",apdadocno ",
 
                        " FROM apda_t ",
                              " ",
                              " LEFT JOIN apce_t ON apceent = apdaent AND apdald = apceld AND apdadocno = apcedocno ",
 
 
                              " ", 
                              " ", 
                       " WHERE apdaent = '" ||g_enterprise|| "' AND apceent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("apda_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE apdald ",
                                    ",apdadocno ",
 
                        " FROM apda_t ", 
                              " ",
                              " ",
                        "WHERE apdaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("apda_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照apdadocno,apdald,apda003,apdadocdt,apdasite Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT apdastus,apdadocno,apdald,apda003,apdadocdt,apdasite,DENSE_RANK() OVER(ORDER BY apdald, 
          apdadocno ",g_order,") AS RANK ",
                        " FROM apda_t ",
                              " ",
                              " LEFT JOIN apce_t ON apceent = apdaent AND apdald = apceld AND apdadocno = apcedocno ",
 
 
                              " ",
                              " ",
                       " ",
                       " WHERE apdaent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2, cl_sql_add_filter("apda_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT apdastus,apdadocno,apdald,apda003,apdadocdt,apdasite,DENSE_RANK() OVER(ORDER BY apdald, 
          apdadocno ",g_order,") AS RANK ",
                       " FROM apda_t ",
                            "  ",
                            "  ",
                       " WHERE apdaent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("apda_t")
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT apdastus,apdadocno,apdald,apda003,apdadocdt,apdasite FROM (",l_sql_rank,") WHERE ", 

              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_apdadocno,g_browser[g_cnt].b_apdald, 
       g_browser[g_cnt].b_apda003,g_browser[g_cnt].b_apdadocdt,g_browser[g_cnt].b_apdasite
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aapt351.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aapt351_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY apdald"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aapt351_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aapt351.construct" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aapt351_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_apda_m.* TO NULL
   CALL g_apce_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON apda006,apdadocdt,apdadocno,apda001,apdasite,apda003,apdacomp,apdald, 
          apda018,apda008,apda017,apda015,apdaownid,apdaowndp,apdacrtid,apdacrtdp,apdacrtdt,apdamodid, 
          apdamoddt,apdacnfid,apdacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<apdaownid>>----
         #ON ACTION controlp INFIELD apdaownid
         #   CALL q_common('apda_t','apdaownid',TRUE,FALSE,g_apda_m.apdaownid) RETURNING ls_return
         #   DISPLAY ls_return TO apdaownid
         #   NEXT FIELD apdaownid  
         #
         ##----<<apdaowndp>>----
         #ON ACTION controlp INFIELD apdaowndp
         #   CALL q_common('apda_t','apdaowndp',TRUE,FALSE,g_apda_m.apdaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO apdaowndp
         #   NEXT FIELD apdaowndp
         #
         ##----<<apdacrtid>>----
         #ON ACTION controlp INFIELD apdacrtid
         #   CALL q_common('apda_t','apdacrtid',TRUE,FALSE,g_apda_m.apdacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO apdacrtid
         #   NEXT FIELD apdacrtid
         #
         ##----<<apdacrtdp>>----
         #ON ACTION controlp INFIELD apdacrtdp
         #   CALL q_common('apda_t','apdacrtdp',TRUE,FALSE,g_apda_m.apdacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO apdacrtdp
         #   NEXT FIELD apdacrtdp
         #
         ##----<<apdamodid>>----
         #ON ACTION controlp INFIELD apdamodid
         #   CALL q_common('apda_t','apdamodid',TRUE,FALSE,g_apda_m.apdamodid) RETURNING ls_return
         #   DISPLAY ls_return TO apdamodid
         #   NEXT FIELD apdamodid
         #
         ##----<<apdacnfid>>----
         #ON ACTION controlp INFIELD apdacnfid
         #   CALL q_common('apda_t','apdacnfid',TRUE,FALSE,g_apda_m.apdacnfid) RETURNING ls_return
         #   DISPLAY ls_return TO apdacnfid
         #   NEXT FIELD apdacnfid
         #
         ##----<<apdapstid>>----
         ##ON ACTION controlp INFIELD apdapstid
         ##   CALL q_common('apda_t','apdapstid',TRUE,FALSE,g_apda_m.apdapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO apdapstid
         ##   NEXT FIELD apdapstid
         
         ##----<<apdacrtdt>>----
         AFTER FIELD apdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<apdamoddt>>----
         AFTER FIELD apdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<apdacnfdt>>----
         AFTER FIELD apdacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<apdapstdt>>----
         #AFTER FIELD apdapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<apda006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda006
            #add-point:BEFORE FIELD apda006
            {<point name="construct.b.apda006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda006
            
            #add-point:AFTER FIELD apda006
            {<point name="construct.a.apda006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apda006
         ON ACTION controlp INFIELD apda006
            #add-point:ON ACTION controlp INFIELD apda006
            {<point name="construct.c.apda006" />}
            #END add-point
 
         #----<<apda006_desc>>----
         #----<<apdadocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdadocdt
            #add-point:BEFORE FIELD apdadocdt
            {<point name="construct.b.apdadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdadocdt
            
            #add-point:AFTER FIELD apdadocdt
            {<point name="construct.a.apdadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apdadocdt
         ON ACTION controlp INFIELD apdadocdt
            #add-point:ON ACTION controlp INFIELD apdadocdt
            {<point name="construct.c.apdadocdt" />}
            #END add-point
 
         #----<<apdadocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdadocno
            #add-point:BEFORE FIELD apdadocno
            {<point name="construct.b.apdadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdadocno
            
            #add-point:AFTER FIELD apdadocno
            {<point name="construct.a.apdadocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apdadocno
         ON ACTION controlp INFIELD apdadocno
            #add-point:ON ACTION controlp INFIELD apdadocno
            {<point name="construct.c.apdadocno" />}
            #END add-point
 
         #----<<apdadocno_desc>>----
         #----<<apda001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda001
            #add-point:BEFORE FIELD apda001
            {<point name="construct.b.apda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda001
            
            #add-point:AFTER FIELD apda001
            {<point name="construct.a.apda001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apda001
         ON ACTION controlp INFIELD apda001
            #add-point:ON ACTION controlp INFIELD apda001
            {<point name="construct.c.apda001" />}
            #END add-point
 
         #----<<apdasite>>----
         #Ctrlp:construct.c.apdasite
         ON ACTION controlp INFIELD apdasite
            #add-point:ON ACTION controlp INFIELD apdasite
            {<point name="construct.c.apdasite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdasite
            #add-point:BEFORE FIELD apdasite
            {<point name="construct.b.apdasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdasite
            
            #add-point:AFTER FIELD apdasite
            {<point name="construct.a.apdasite" />}
            #END add-point
            
 
         #----<<apdasite_desc>>----
         #----<<apda003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda003
            #add-point:BEFORE FIELD apda003
            {<point name="construct.b.apda003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda003
            
            #add-point:AFTER FIELD apda003
            {<point name="construct.a.apda003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apda003
         ON ACTION controlp INFIELD apda003
            #add-point:ON ACTION controlp INFIELD apda003
            {<point name="construct.c.apda003" />}
            #END add-point
 
         #----<<apda003_desc>>----
         #----<<apdacomp>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdacomp
            #add-point:BEFORE FIELD apdacomp
            {<point name="construct.b.apdacomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdacomp
            
            #add-point:AFTER FIELD apdacomp
            {<point name="construct.a.apdacomp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apdacomp
         ON ACTION controlp INFIELD apdacomp
            #add-point:ON ACTION controlp INFIELD apdacomp
            {<point name="construct.c.apdacomp" />}
            #END add-point
 
         #----<<apdald>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdald
            #add-point:BEFORE FIELD apdald
            {<point name="construct.b.apdald" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdald
            
            #add-point:AFTER FIELD apdald
            {<point name="construct.a.apdald" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apdald
         ON ACTION controlp INFIELD apdald
            #add-point:ON ACTION controlp INFIELD apdald
            {<point name="construct.c.apdald" />}
            #END add-point
 
         #----<<apda018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda018
            #add-point:BEFORE FIELD apda018
            {<point name="construct.b.apda018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda018
            
            #add-point:AFTER FIELD apda018
            {<point name="construct.a.apda018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apda018
         ON ACTION controlp INFIELD apda018
            #add-point:ON ACTION controlp INFIELD apda018
            {<point name="construct.c.apda018" />}
            #END add-point
 
         #----<<apda018_desc>>----
         #----<<apda008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda008
            #add-point:BEFORE FIELD apda008
            {<point name="construct.b.apda008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda008
            
            #add-point:AFTER FIELD apda008
            {<point name="construct.a.apda008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apda008
         ON ACTION controlp INFIELD apda008
            #add-point:ON ACTION controlp INFIELD apda008
            {<point name="construct.c.apda008" />}
            #END add-point
 
         #----<<apda017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda017
            #add-point:BEFORE FIELD apda017
            {<point name="construct.b.apda017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda017
            
            #add-point:AFTER FIELD apda017
            {<point name="construct.a.apda017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apda017
         ON ACTION controlp INFIELD apda017
            #add-point:ON ACTION controlp INFIELD apda017
            {<point name="construct.c.apda017" />}
            #END add-point
 
         #----<<apda016>>----
         #----<<apda015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda015
            #add-point:BEFORE FIELD apda015
            {<point name="construct.b.apda015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda015
            
            #add-point:AFTER FIELD apda015
            {<point name="construct.a.apda015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.apda015
         ON ACTION controlp INFIELD apda015
            #add-point:ON ACTION controlp INFIELD apda015
            {<point name="construct.c.apda015" />}
            #END add-point
 
         #----<<apda015_desc>>----
         #----<<apdaownid>>----
         #Ctrlp:construct.c.apdaownid
         ON ACTION controlp INFIELD apdaownid
            #add-point:ON ACTION controlp INFIELD apdaownid
            {<point name="construct.c.apdaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdaownid
            #add-point:BEFORE FIELD apdaownid
            {<point name="construct.b.apdaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdaownid
            
            #add-point:AFTER FIELD apdaownid
            {<point name="construct.a.apdaownid" />}
            #END add-point
            
 
         #----<<apdaownid_desc>>----
         #----<<apdaowndp>>----
         #Ctrlp:construct.c.apdaowndp
         ON ACTION controlp INFIELD apdaowndp
            #add-point:ON ACTION controlp INFIELD apdaowndp
            {<point name="construct.c.apdaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdaowndp
            #add-point:BEFORE FIELD apdaowndp
            {<point name="construct.b.apdaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdaowndp
            
            #add-point:AFTER FIELD apdaowndp
            {<point name="construct.a.apdaowndp" />}
            #END add-point
            
 
         #----<<apdaowndp_desc>>----
         #----<<apdacrtid>>----
         #Ctrlp:construct.c.apdacrtid
         ON ACTION controlp INFIELD apdacrtid
            #add-point:ON ACTION controlp INFIELD apdacrtid
            {<point name="construct.c.apdacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdacrtid
            #add-point:BEFORE FIELD apdacrtid
            {<point name="construct.b.apdacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdacrtid
            
            #add-point:AFTER FIELD apdacrtid
            {<point name="construct.a.apdacrtid" />}
            #END add-point
            
 
         #----<<apdacrtid_desc>>----
         #----<<apdacrtdp>>----
         #Ctrlp:construct.c.apdacrtdp
         ON ACTION controlp INFIELD apdacrtdp
            #add-point:ON ACTION controlp INFIELD apdacrtdp
            {<point name="construct.c.apdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdacrtdp
            #add-point:BEFORE FIELD apdacrtdp
            {<point name="construct.b.apdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdacrtdp
            
            #add-point:AFTER FIELD apdacrtdp
            {<point name="construct.a.apdacrtdp" />}
            #END add-point
            
 
         #----<<apdacrtdp_desc>>----
         #----<<apdacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdacrtdt
            #add-point:BEFORE FIELD apdacrtdt
            {<point name="construct.b.apdacrtdt" />}
            #END add-point
 
         #----<<apdamodid>>----
         #Ctrlp:construct.c.apdamodid
         ON ACTION controlp INFIELD apdamodid
            #add-point:ON ACTION controlp INFIELD apdamodid
            {<point name="construct.c.apdamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdamodid
            #add-point:BEFORE FIELD apdamodid
            {<point name="construct.b.apdamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdamodid
            
            #add-point:AFTER FIELD apdamodid
            {<point name="construct.a.apdamodid" />}
            #END add-point
            
 
         #----<<apdamodid_desc>>----
         #----<<apdamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdamoddt
            #add-point:BEFORE FIELD apdamoddt
            {<point name="construct.b.apdamoddt" />}
            #END add-point
 
         #----<<apdacnfid>>----
         #Ctrlp:construct.c.apdacnfid
         ON ACTION controlp INFIELD apdacnfid
            #add-point:ON ACTION controlp INFIELD apdacnfid
            {<point name="construct.c.apdacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdacnfid
            #add-point:BEFORE FIELD apdacnfid
            {<point name="construct.b.apdacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdacnfid
            
            #add-point:AFTER FIELD apdacnfid
            {<point name="construct.a.apdacnfid" />}
            #END add-point
            
 
         #----<<apdacnfid_desc>>----
         #----<<apdacnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdacnfdt
            #add-point:BEFORE FIELD apdacnfdt
            {<point name="construct.b.apdacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON apceseq,apce008,apce100,apce109,apce011,apad003_desc,apce031,apce010
           FROM s_detail1[1].apceseq,s_detail1[1].apce008,s_detail1[1].apce100,s_detail1[1].apce109, 
               s_detail1[1].apce011,s_detail1[1].apad003_desc,s_detail1[1].apce031,s_detail1[1].apce010 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<apceseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apceseq
            #add-point:BEFORE FIELD apceseq
            {<point name="construct.b.page1.apceseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apceseq
            
            #add-point:AFTER FIELD apceseq
            {<point name="construct.a.page1.apceseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.apceseq
         ON ACTION controlp INFIELD apceseq
            #add-point:ON ACTION controlp INFIELD apceseq
            {<point name="construct.c.page1.apceseq" />}
            #END add-point
 
         #----<<apce008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce008
            #add-point:BEFORE FIELD apce008
            {<point name="construct.b.page1.apce008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce008
            
            #add-point:AFTER FIELD apce008
            {<point name="construct.a.page1.apce008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.apce008
         ON ACTION controlp INFIELD apce008
            #add-point:ON ACTION controlp INFIELD apce008
            {<point name="construct.c.page1.apce008" />}
            #END add-point
 
         #----<<apce100>>----
         #Ctrlp:construct.c.page1.apce100
         ON ACTION controlp INFIELD apce100
            #add-point:ON ACTION controlp INFIELD apce100
            {<point name="construct.c.page1.apce100" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD apce100
            #add-point:BEFORE FIELD apce100
            {<point name="construct.b.page1.apce100" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce100
            
            #add-point:AFTER FIELD apce100
            {<point name="construct.a.page1.apce100" />}
            #END add-point
            
 
         #----<<apce109>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce109
            #add-point:BEFORE FIELD apce109
            {<point name="construct.b.page1.apce109" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce109
            
            #add-point:AFTER FIELD apce109
            {<point name="construct.a.page1.apce109" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.apce109
         ON ACTION controlp INFIELD apce109
            #add-point:ON ACTION controlp INFIELD apce109
            {<point name="construct.c.page1.apce109" />}
            #END add-point
 
         #----<<apce011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce011
            #add-point:BEFORE FIELD apce011
            {<point name="construct.b.page1.apce011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce011
            
            #add-point:AFTER FIELD apce011
            {<point name="construct.a.page1.apce011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.apce011
         ON ACTION controlp INFIELD apce011
            #add-point:ON ACTION controlp INFIELD apce011
            {<point name="construct.c.page1.apce011" />}
            #END add-point
 
         #----<<apad003_desc>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apad003_desc
            #add-point:BEFORE FIELD apad003_desc
            {<point name="construct.b.page1.apad003_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apad003_desc
            
            #add-point:AFTER FIELD apad003_desc
            {<point name="construct.a.page1.apad003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.apad003_desc
         ON ACTION controlp INFIELD apad003_desc
            #add-point:ON ACTION controlp INFIELD apad003_desc
            {<point name="construct.c.page1.apad003_desc" />}
            #END add-point
 
         #----<<apce031>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce031
            #add-point:BEFORE FIELD apce031
            {<point name="construct.b.page1.apce031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce031
            
            #add-point:AFTER FIELD apce031
            {<point name="construct.a.page1.apce031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.apce031
         ON ACTION controlp INFIELD apce031
            #add-point:ON ACTION controlp INFIELD apce031
            {<point name="construct.c.page1.apce031" />}
            #END add-point
 
         #----<<apce010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce010
            #add-point:BEFORE FIELD apce010
            {<point name="construct.b.page1.apce010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce010
            
            #add-point:AFTER FIELD apce010
            {<point name="construct.a.page1.apce010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.apce010
         ON ACTION controlp INFIELD apce010
            #add-point:ON ACTION controlp INFIELD apce010
            {<point name="construct.c.page1.apce010" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aapt351.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aapt351_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " apdald = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " apdadocno = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aapt351.delete" ver="3" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aapt351_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_apda_m.apdald IS NULL
   OR g_apda_m.apdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aapt351_master_referesh USING g_apda_m.apdald,g_apda_m.apdadocno INTO g_apda_m.apda006,g_apda_m.apdadocdt, 
       g_apda_m.apdadocno,g_apda_m.apda001,g_apda_m.apdasite,g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald, 
       g_apda_m.apda018,g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apdaownid, 
       g_apda_m.apdaowndp,g_apda_m.apdacrtid,g_apda_m.apdacrtdp,g_apda_m.apdacrtdt,g_apda_m.apdamodid, 
       g_apda_m.apdamoddt,g_apda_m.apdacnfid,g_apda_m.apdacnfdt
   
   
 
   CALL aapt351_show()
   
   CALL s_transaction_begin()
 
   OPEN aapt351_cl USING g_enterprise,g_apda_m.apdald
                                                       ,g_apda_m.apdadocno
 
   IF STATUS THEN
      CALL cl_err("OPEN aapt351_cl:", STATUS, 1)
      CLOSE aapt351_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH aapt351_cl INTO g_apda_m.apda006,g_apda_m.apda006_desc,g_apda_m.apdadocdt,g_apda_m.apdadocno, 
       g_apda_m.apdadocno_desc,g_apda_m.apda001,g_apda_m.apdasite,g_apda_m.apdasite_desc,g_apda_m.apda003, 
       g_apda_m.apda003_desc,g_apda_m.apdacomp,g_apda_m.apdald,g_apda_m.apda018,g_apda_m.apda018_desc, 
       g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apda015_desc,g_apda_m.apdaownid, 
       g_apda_m.apdaownid_desc,g_apda_m.apdaowndp,g_apda_m.apdaowndp_desc,g_apda_m.apdacrtid,g_apda_m.apdacrtid_desc, 
       g_apda_m.apdacrtdp,g_apda_m.apdacrtdp_desc,g_apda_m.apdacrtdt,g_apda_m.apdamodid,g_apda_m.apdamodid_desc, 
       g_apda_m.apdamoddt,g_apda_m.apdacnfid,g_apda_m.apdacnfid_desc,g_apda_m.apdacnfdt              
        #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_apda_m.apdald,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aapt351_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_apdald_t = g_apda_m.apdald
      LET g_apdadocno_t = g_apda_m.apdadocno
 
 
      DELETE FROM apda_t
       WHERE apdaent = g_enterprise AND apdald = g_apda_m.apdald
         AND apdadocno = g_apda_m.apdadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_apda_m.apdald,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM apce_t
       WHERE apceent = g_enterprise AND apceld = g_apda_m.apdald
         AND apcedocno = g_apda_m.apdadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("apce_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_apce_d.clear() 
 
     
      #CALL aapt351_ui_browser_refresh()  
      CALL aapt351_ui_headershow()  
      CALL aapt351_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aapt351_browser_fill("")
         CALL aapt351_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aapt351_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
  
 
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aapt351_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_apda_m.apdald,'D')
    
END FUNCTION
]]>
</section>
  <section id="aapt351.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aapt351_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM apce_t
       WHERE apceent = g_enterprise AND
         apceld = ps_keys_bak[1] AND apcedocno = ps_keys_bak[2] AND apceseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aapt351.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000018
#+ 
#+ Filename...: aapt351
#+ Description: 零用支撥補申請作業
#+ Creator....: 02097(2014/06/11)
#+ Modifier...: 02097(2014/06/11)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aapt351.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aapt351_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE apce_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aapt351_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aapt351_detail AS ",
                "SELECT * FROM apce_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aapt351_detail SELECT * FROM apce_t 
                                         WHERE apceent = g_enterprise AND apceld = g_apdald_t
                                         AND apcedocno = g_apdadocno_t
 
   
   #將key修正為調整後   
   UPDATE aapt351_detail 
      #更新key欄位
      SET apceld = g_apda_m.apdald
          , apcedocno = g_apda_m.apdadocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO apce_t SELECT * FROM aapt351_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aapt351_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_apdald_t = g_apda_m.apdald
   LET g_apdadocno_t = g_apda_m.apdadocno
 
   
   DROP TABLE aapt351_detail
   
END FUNCTION
]]>
</section>
  <section id="aapt351.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION aapt351_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aapt351.fetch" ver="1" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aapt351_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_apda_m.apdald = g_browser[g_current_idx].b_apdald
   LET g_apda_m.apdadocno = g_browser[g_current_idx].b_apdadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aapt351_master_referesh USING g_apda_m.apdald,g_apda_m.apdadocno INTO g_apda_m.apda006,g_apda_m.apdadocdt, 
       g_apda_m.apdadocno,g_apda_m.apda001,g_apda_m.apdasite,g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald, 
       g_apda_m.apda018,g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apdaownid, 
       g_apda_m.apdaowndp,g_apda_m.apdacrtid,g_apda_m.apdacrtdp,g_apda_m.apdacrtdt,g_apda_m.apdamodid, 
       g_apda_m.apdamoddt,g_apda_m.apdacnfid,g_apda_m.apdacnfdt
   IF SQLCA.sqlcode THEN
      CALL cl_err("apda_t",SQLCA.sqlcode,1)
      INITIALIZE g_apda_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
  
   #重新顯示   
   CALL aapt351_show()
 
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aapt351.fill_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aapt351_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aapt351.filter" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aapt351_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON apdadocno,apdald,apda003,apdadocdt,apdasite
                          FROM s_browse[1].b_apdadocno,s_browse[1].b_apdald,s_browse[1].b_apda003,s_browse[1].b_apdadocdt, 
                              s_browse[1].b_apdasite
 
         BEFORE CONSTRUCT
               DISPLAY aapt351_filter_parser('apdadocno') TO s_browse[1].b_apdadocno
            DISPLAY aapt351_filter_parser('apdald') TO s_browse[1].b_apdald
            DISPLAY aapt351_filter_parser('apda003') TO s_browse[1].b_apda003
            DISPLAY aapt351_filter_parser('apdadocdt') TO s_browse[1].b_apdadocdt
            DISPLAY aapt351_filter_parser('apdasite') TO s_browse[1].b_apdasite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aapt351_filter_show('apdadocno')
   CALL aapt351_filter_show('apdald')
   CALL aapt351_filter_show('apda003')
   CALL aapt351_filter_show('apdadocdt')
   CALL aapt351_filter_show('apdasite')
 
END FUNCTION
]]>
</section>
  <section id="aapt351.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aapt351_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aapt351.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aapt351_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aapt351_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aapt351.global" ver="4" status="" src="s">
<![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_apda_m        RECORD
       apda006 LIKE apda_t.apda006, 
   apda006_desc LIKE type_t.chr80, 
   apdadocdt LIKE apda_t.apdadocdt, 
   apdadocno LIKE apda_t.apdadocno, 
   apdadocno_desc LIKE type_t.chr80, 
   apda001 LIKE apda_t.apda001, 
   apdasite LIKE apda_t.apdasite, 
   apdasite_desc LIKE type_t.chr80, 
   apda003 LIKE apda_t.apda003, 
   apda003_desc LIKE type_t.chr80, 
   apdacomp LIKE apda_t.apdacomp, 
   apdald LIKE apda_t.apdald, 
   apda018 LIKE apda_t.apda018, 
   apda018_desc LIKE type_t.chr80, 
   apda008 LIKE apda_t.apda008, 
   apda017 LIKE apda_t.apda017, 
   apda016 LIKE apda_t.apda016, 
   apda015 LIKE apda_t.apda015, 
   apda015_desc LIKE type_t.chr80, 
   apdaownid LIKE apda_t.apdaownid, 
   apdaownid_desc LIKE type_t.chr80, 
   apdaowndp LIKE apda_t.apdaowndp, 
   apdaowndp_desc LIKE type_t.chr80, 
   apdacrtid LIKE apda_t.apdacrtid, 
   apdacrtid_desc LIKE type_t.chr80, 
   apdacrtdp LIKE apda_t.apdacrtdp, 
   apdacrtdp_desc LIKE type_t.chr80, 
   apdacrtdt DATETIME YEAR TO SECOND, 
   apdamodid LIKE apda_t.apdamodid, 
   apdamodid_desc LIKE type_t.chr80, 
   apdamoddt DATETIME YEAR TO SECOND, 
   apdacnfid LIKE apda_t.apdacnfid, 
   apdacnfid_desc LIKE type_t.chr80, 
   apdacnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_apce_d        RECORD
       apceseq LIKE apce_t.apceseq, 
   apce008 LIKE apce_t.apce008, 
   apce100 LIKE apce_t.apce100, 
   apce109 LIKE apce_t.apce109, 
   apce011 LIKE apce_t.apce011, 
   apad003_desc LIKE type_t.chr80, 
   apce031 LIKE apce_t.apce031, 
   apce010 LIKE apce_t.apce010
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_apda_m          type_g_apda_m
DEFINE g_apda_m_t        type_g_apda_m
 
   DEFINE g_apdadocno_t LIKE apda_t.apdadocno
DEFINE g_apdald_t LIKE apda_t.apdald
 
 
DEFINE g_apce_d          DYNAMIC ARRAY OF type_g_apce_d
DEFINE g_apce_d_t        type_g_apce_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_apdadocno LIKE apda_t.apdadocno,
      b_apdald LIKE apda_t.apdald,
      b_apda003 LIKE apda_t.apda003,
      b_apdadocdt LIKE apda_t.apdadocdt,
      b_apdasite LIKE apda_t.apdasite
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_apdadocno LIKE apda_t.apdadocno,
      b_apdald LIKE apda_t.apdald,
      b_apda003 LIKE apda_t.apda003,
      b_apdadocdt LIKE apda_t.apdadocdt,
      b_apdasite LIKE apda_t.apdasite
      END RECORD 
      
#無單頭append欄位定義
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aapt351.idx_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aapt351_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_apce_d.getLength() THEN
         LET g_detail_idx = g_apce_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_apce_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_apce_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aapt351.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aapt351_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
   
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aapt351_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aapt351.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aapt351_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT apceseq,apce008,apce100,apce109,apce011,'',apce031,apce010 FROM apce_t  
       WHERE apceent=? AND apceld=? AND apcedocno=? AND apceseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aapt351_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aapt351_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aapt351_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_apda_m.apda006,g_apda_m.apdadocdt,g_apda_m.apdadocno,g_apda_m.apda001,g_apda_m.apdasite, 
       g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald,g_apda_m.apda018,g_apda_m.apda008,g_apda_m.apda017, 
       g_apda_m.apda015
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aapt351.input.body" ver="3" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_apce_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_apce_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aapt351_b_fill()
            LET g_rec_b = g_apce_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point              
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aapt351_cl USING g_enterprise,g_apda_m.apdald
                                                                ,g_apda_m.apdadocno
 
            IF STATUS THEN
               CALL cl_err("OPEN aapt351_cl:", STATUS, 1)
               CLOSE aapt351_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_apce_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_apce_d[l_ac].apceseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_apce_d_t.* = g_apce_d[l_ac].*  #BACKUP
               CALL aapt351_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aapt351_set_no_entry_b(l_cmd)
               IF NOT aapt351_lock_b("apce_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aapt351_bcl INTO g_apce_d[l_ac].apceseq,g_apce_d[l_ac].apce008,g_apce_d[l_ac].apce100, 
                      g_apce_d[l_ac].apce109,g_apce_d[l_ac].apce011,g_apce_d[l_ac].apad003_desc,g_apce_d[l_ac].apce031, 
                      g_apce_d[l_ac].apce010
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_apce_d_t.apceseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aapt351_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_apce_d[l_ac].* TO NULL 
            
            LET g_apce_d_t.* = g_apce_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aapt351_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aapt351_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_apce_d[li_reproduce_target].* = g_apce_d[li_reproduce].*
 
               LET g_apce_d[li_reproduce_target].apceseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM apce_t 
             WHERE apceent = g_enterprise AND apceld = g_apda_m.apdald
               AND apcedocno = g_apda_m.apdadocno
 
               AND apceseq = g_apce_d[l_ac].apceseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_apda_m.apdald
               LET gs_keys[2] = g_apda_m.apdadocno
               LET gs_keys[3] = g_apce_d[g_detail_idx].apceseq
               CALL aapt351_insert_b('apce_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_apce_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("apce_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aapt351_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_apce_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_apce_d.deleteElement(l_ac)
               NEXT FIELD apceseq
            END IF
         
            IF g_apce_d[l_ac].apceseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM apce_t
                WHERE apceent = g_enterprise AND apceld = g_apda_m.apdald AND
                                          apcedocno = g_apda_m.apdadocno AND
 
                      apceseq = g_apce_d_t.apceseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("apce_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aapt351_bcl
               LET l_count = g_apce_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_apda_m.apdald
               LET gs_keys[2] = g_apda_m.apdadocno
               LET gs_keys[3] = g_apce_d[g_detail_idx].apceseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aapt351_delete_b('apce_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<apceseq>>----
         #此段落由子樣板a02產生
         AFTER FIELD apceseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_apce_d[l_ac].apceseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD apceseq
            END IF
 
 
            #add-point:AFTER FIELD apceseq
            {<point name="input.a.page1.apceseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apceseq
            #add-point:BEFORE FIELD apceseq
            {<point name="input.b.page1.apceseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apceseq
            #add-point:ON CHANGE apceseq
            {<point name="input.g.page1.apceseq" />}
            #END add-point
 
         #----<<apce008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce008
            #add-point:BEFORE FIELD apce008
            {<point name="input.b.page1.apce008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce008
            
            #add-point:AFTER FIELD apce008
            {<point name="input.a.page1.apce008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apce008
            #add-point:ON CHANGE apce008
            {<point name="input.g.page1.apce008" />}
            #END add-point
 
         #----<<apce100>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce100
            #add-point:BEFORE FIELD apce100
            {<point name="input.b.page1.apce100" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce100
            
            #add-point:AFTER FIELD apce100
            {<point name="input.a.page1.apce100" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apce100
            #add-point:ON CHANGE apce100
            {<point name="input.g.page1.apce100" />}
            #END add-point
 
         #----<<apce109>>----
         #此段落由子樣板a02產生
         AFTER FIELD apce109
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_apce_d[l_ac].apce109,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD apce109
            END IF
 
 
            #add-point:AFTER FIELD apce109
            {<point name="input.a.page1.apce109" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apce109
            #add-point:BEFORE FIELD apce109
            {<point name="input.b.page1.apce109" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apce109
            #add-point:ON CHANGE apce109
            {<point name="input.g.page1.apce109" />}
            #END add-point
 
         #----<<apce011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce011
            #add-point:BEFORE FIELD apce011
            {<point name="input.b.page1.apce011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce011
            
            #add-point:AFTER FIELD apce011
            {<point name="input.a.page1.apce011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apce011
            #add-point:ON CHANGE apce011
            {<point name="input.g.page1.apce011" />}
            #END add-point
 
         #----<<apad003_desc>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apad003_desc
            #add-point:BEFORE FIELD apad003_desc
            {<point name="input.b.page1.apad003_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apad003_desc
            
            #add-point:AFTER FIELD apad003_desc
            {<point name="input.a.page1.apad003_desc" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apad003_desc
            #add-point:ON CHANGE apad003_desc
            {<point name="input.g.page1.apad003_desc" />}
            #END add-point
 
         #----<<apce031>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce031
            #add-point:BEFORE FIELD apce031
            {<point name="input.b.page1.apce031" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce031
            
            #add-point:AFTER FIELD apce031
            {<point name="input.a.page1.apce031" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apce031
            #add-point:ON CHANGE apce031
            {<point name="input.g.page1.apce031" />}
            #END add-point
 
         #----<<apce010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apce010
            #add-point:BEFORE FIELD apce010
            {<point name="input.b.page1.apce010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apce010
            
            #add-point:AFTER FIELD apce010
            {<point name="input.a.page1.apce010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apce010
            #add-point:ON CHANGE apce010
            {<point name="input.g.page1.apce010" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<apceseq>>----
         #Ctrlp:input.c.page1.apceseq
         ON ACTION controlp INFIELD apceseq
            #add-point:ON ACTION controlp INFIELD apceseq
            {<point name="input.c.page1.apceseq" />}
            #END add-point
 
         #----<<apce008>>----
         #Ctrlp:input.c.page1.apce008
         ON ACTION controlp INFIELD apce008
            #add-point:ON ACTION controlp INFIELD apce008
            {<point name="input.c.page1.apce008" />}
            #END add-point
 
         #----<<apce100>>----
         #Ctrlp:input.c.page1.apce100
         ON ACTION controlp INFIELD apce100
            #add-point:ON ACTION controlp INFIELD apce100
            {<point name="input.c.page1.apce100" />}
            #END add-point
 
         #----<<apce109>>----
         #Ctrlp:input.c.page1.apce109
         ON ACTION controlp INFIELD apce109
            #add-point:ON ACTION controlp INFIELD apce109
            {<point name="input.c.page1.apce109" />}
            #END add-point
 
         #----<<apce011>>----
         #Ctrlp:input.c.page1.apce011
         ON ACTION controlp INFIELD apce011
            #add-point:ON ACTION controlp INFIELD apce011
            {<point name="input.c.page1.apce011" />}
            #END add-point
 
         #----<<apad003_desc>>----
         #Ctrlp:input.c.page1.apad003_desc
         ON ACTION controlp INFIELD apad003_desc
            #add-point:ON ACTION controlp INFIELD apad003_desc
            {<point name="input.c.page1.apad003_desc" />}
            #END add-point
 
         #----<<apce031>>----
         #Ctrlp:input.c.page1.apce031
         ON ACTION controlp INFIELD apce031
            #add-point:ON ACTION controlp INFIELD apce031
            {<point name="input.c.page1.apce031" />}
            #END add-point
 
         #----<<apce010>>----
         #Ctrlp:input.c.page1.apce010
         ON ACTION controlp INFIELD apce010
            #add-point:ON ACTION controlp INFIELD apce010
            {<point name="input.c.page1.apce010" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_apce_d[l_ac].* = g_apce_d_t.*
               CLOSE aapt351_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_apce_d[l_ac].apceseq,-263,1)
               LET g_apce_d[l_ac].* = g_apce_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE apce_t SET (apceld,apcedocno,apceseq,apce008,apce100,apce109,apce011,apce031,apce010) = (g_apda_m.apdald, 
                   g_apda_m.apdadocno,g_apce_d[l_ac].apceseq,g_apce_d[l_ac].apce008,g_apce_d[l_ac].apce100, 
                   g_apce_d[l_ac].apce109,g_apce_d[l_ac].apce011,g_apce_d[l_ac].apce031,g_apce_d[l_ac].apce010) 

                WHERE apceent = g_enterprise AND apceld = g_apda_m.apdald 
                  AND apcedocno = g_apda_m.apdadocno 
 
                  AND apceseq = g_apce_d_t.apceseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("apce_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_apce_d[l_ac].* = g_apce_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("apce_t",SQLCA.sqlcode,1)
                     LET g_apce_d[l_ac].* = g_apce_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_apda_m.apdald
               LET gs_keys_bak[1] = g_apdald_t
               LET gs_keys[2] = g_apda_m.apdadocno
               LET gs_keys_bak[2] = g_apdadocno_t
               LET gs_keys[3] = g_apce_d[g_detail_idx].apceseq
               LET gs_keys_bak[3] = g_apce_d_t.apceseq
               CALL aapt351_update_b('apce_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aapt351_unlock_b("apce_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_apce_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_apce_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aapt351.input.head" ver="2" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_apda_m.apda006,g_apda_m.apdadocdt,g_apda_m.apdadocno,g_apda_m.apda001,g_apda_m.apdasite, 
          g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald,g_apda_m.apda018,g_apda_m.apda008,g_apda_m.apda017, 
          g_apda_m.apda015 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF         
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<apda006>>----
         #此段落由子樣板a02產生
         AFTER FIELD apda006
            
            #add-point:AFTER FIELD apda006
            {<point name="input.a.apda006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apda006
            #add-point:BEFORE FIELD apda006
            {<point name="input.b.apda006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apda006
            #add-point:ON CHANGE apda006
            {<point name="input.g.apda006" />}
            #END add-point
 
         #----<<apda006_desc>>----
         #----<<apdadocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdadocdt
            #add-point:BEFORE FIELD apdadocdt
            {<point name="input.b.apdadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdadocdt
            
            #add-point:AFTER FIELD apdadocdt
            {<point name="input.a.apdadocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apdadocdt
            #add-point:ON CHANGE apdadocdt
            {<point name="input.g.apdadocdt" />}
            #END add-point
 
         #----<<apdadocno>>----
         #此段落由子樣板a02產生
         AFTER FIELD apdadocno
            
            #add-point:AFTER FIELD apdadocno
            {<point name="input.a.apdadocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdadocno
            #add-point:BEFORE FIELD apdadocno
            {<point name="input.b.apdadocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apdadocno
            #add-point:ON CHANGE apdadocno
            {<point name="input.g.apdadocno" />}
            #END add-point
 
         #----<<apdadocno_desc>>----
         #----<<apda001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda001
            #add-point:BEFORE FIELD apda001
            {<point name="input.b.apda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda001
            
            #add-point:AFTER FIELD apda001
            {<point name="input.a.apda001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apda001
            #add-point:ON CHANGE apda001
            {<point name="input.g.apda001" />}
            #END add-point
 
         #----<<apdasite>>----
         #此段落由子樣板a02產生
         AFTER FIELD apdasite
            
            #add-point:AFTER FIELD apdasite
            {<point name="input.a.apdasite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apdasite
            #add-point:BEFORE FIELD apdasite
            {<point name="input.b.apdasite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apdasite
            #add-point:ON CHANGE apdasite
            {<point name="input.g.apdasite" />}
            #END add-point
 
         #----<<apdasite_desc>>----
         #----<<apda003>>----
         #此段落由子樣板a02產生
         AFTER FIELD apda003
            
            #add-point:AFTER FIELD apda003
            {<point name="input.a.apda003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apda003
            #add-point:BEFORE FIELD apda003
            {<point name="input.b.apda003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apda003
            #add-point:ON CHANGE apda003
            {<point name="input.g.apda003" />}
            #END add-point
 
         #----<<apda003_desc>>----
         #----<<apdacomp>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdacomp
            #add-point:BEFORE FIELD apdacomp
            {<point name="input.b.apdacomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdacomp
            
            #add-point:AFTER FIELD apdacomp
            {<point name="input.a.apdacomp" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apdacomp
            #add-point:ON CHANGE apdacomp
            {<point name="input.g.apdacomp" />}
            #END add-point
 
         #----<<apdald>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apdald
            #add-point:BEFORE FIELD apdald
            {<point name="input.b.apdald" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apdald
            
            #add-point:AFTER FIELD apdald
            {<point name="input.a.apdald" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apdald
            #add-point:ON CHANGE apdald
            {<point name="input.g.apdald" />}
            #END add-point
 
         #----<<apda018>>----
         #此段落由子樣板a02產生
         AFTER FIELD apda018
            
            #add-point:AFTER FIELD apda018
            {<point name="input.a.apda018" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apda018
            #add-point:BEFORE FIELD apda018
            {<point name="input.b.apda018" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apda018
            #add-point:ON CHANGE apda018
            {<point name="input.g.apda018" />}
            #END add-point
 
         #----<<apda018_desc>>----
         #----<<apda008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda008
            #add-point:BEFORE FIELD apda008
            {<point name="input.b.apda008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda008
            
            #add-point:AFTER FIELD apda008
            {<point name="input.a.apda008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apda008
            #add-point:ON CHANGE apda008
            {<point name="input.g.apda008" />}
            #END add-point
 
         #----<<apda017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD apda017
            #add-point:BEFORE FIELD apda017
            {<point name="input.b.apda017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD apda017
            
            #add-point:AFTER FIELD apda017
            {<point name="input.a.apda017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE apda017
            #add-point:ON CHANGE apda017
            {<point name="input.g.apda017" />}
            #END add-point
 
         #----<<apda016>>----
         #----<<apda015>>----
         #此段落由子樣板a02產生
         AFTER FIELD apda015
            
            #add-point:AFTER FIELD apda015
            {<point name="input.a.apda015" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD apda015
            #add-point:BEFORE FIELD apda015
            {<point name="input.b.apda015" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE apda015
            #add-point:ON CHANGE apda015
            {<point name="input.g.apda015" />}
            #END add-point
 
         #----<<apda015_desc>>----
         #----<<apdaownid>>----
         #----<<apdaownid_desc>>----
         #----<<apdaowndp>>----
         #----<<apdaowndp_desc>>----
         #----<<apdacrtid>>----
         #----<<apdacrtid_desc>>----
         #----<<apdacrtdp>>----
         #----<<apdacrtdp_desc>>----
         #----<<apdacrtdt>>----
         #----<<apdamodid>>----
         #----<<apdamodid_desc>>----
         #----<<apdamoddt>>----
         #----<<apdacnfid>>----
         #----<<apdacnfid_desc>>----
         #----<<apdacnfdt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<apda006>>----
         #Ctrlp:input.c.apda006
         ON ACTION controlp INFIELD apda006
            #add-point:ON ACTION controlp INFIELD apda006
            {<point name="input.c.apda006" />}
            #END add-point
 
         #----<<apda006_desc>>----
         #----<<apdadocdt>>----
         #Ctrlp:input.c.apdadocdt
         ON ACTION controlp INFIELD apdadocdt
            #add-point:ON ACTION controlp INFIELD apdadocdt
            {<point name="input.c.apdadocdt" />}
            #END add-point
 
         #----<<apdadocno>>----
         #Ctrlp:input.c.apdadocno
         ON ACTION controlp INFIELD apdadocno
            #add-point:ON ACTION controlp INFIELD apdadocno
            {<point name="input.c.apdadocno" />}
            #END add-point
 
         #----<<apdadocno_desc>>----
         #----<<apda001>>----
         #Ctrlp:input.c.apda001
         ON ACTION controlp INFIELD apda001
            #add-point:ON ACTION controlp INFIELD apda001
            {<point name="input.c.apda001" />}
            #END add-point
 
         #----<<apdasite>>----
         #Ctrlp:input.c.apdasite
         ON ACTION controlp INFIELD apdasite
            #add-point:ON ACTION controlp INFIELD apdasite
            {<point name="input.c.apdasite" />}
            #END add-point
 
         #----<<apdasite_desc>>----
         #----<<apda003>>----
         #Ctrlp:input.c.apda003
         ON ACTION controlp INFIELD apda003
            #add-point:ON ACTION controlp INFIELD apda003
            {<point name="input.c.apda003" />}
            #END add-point
 
         #----<<apda003_desc>>----
         #----<<apdacomp>>----
         #Ctrlp:input.c.apdacomp
         ON ACTION controlp INFIELD apdacomp
            #add-point:ON ACTION controlp INFIELD apdacomp
            {<point name="input.c.apdacomp" />}
            #END add-point
 
         #----<<apdald>>----
         #Ctrlp:input.c.apdald
         ON ACTION controlp INFIELD apdald
            #add-point:ON ACTION controlp INFIELD apdald
            {<point name="input.c.apdald" />}
            #END add-point
 
         #----<<apda018>>----
         #Ctrlp:input.c.apda018
         ON ACTION controlp INFIELD apda018
            #add-point:ON ACTION controlp INFIELD apda018
            {<point name="input.c.apda018" />}
            #END add-point
 
         #----<<apda018_desc>>----
         #----<<apda008>>----
         #Ctrlp:input.c.apda008
         ON ACTION controlp INFIELD apda008
            #add-point:ON ACTION controlp INFIELD apda008
            {<point name="input.c.apda008" />}
            #END add-point
 
         #----<<apda017>>----
         #Ctrlp:input.c.apda017
         ON ACTION controlp INFIELD apda017
            #add-point:ON ACTION controlp INFIELD apda017
            {<point name="input.c.apda017" />}
            #END add-point
 
         #----<<apda016>>----
         #----<<apda015>>----
         #Ctrlp:input.c.apda015
         ON ACTION controlp INFIELD apda015
            #add-point:ON ACTION controlp INFIELD apda015
            {<point name="input.c.apda015" />}
            #END add-point
 
         #----<<apda015_desc>>----
         #----<<apdaownid>>----
         #----<<apdaownid_desc>>----
         #----<<apdaowndp>>----
         #----<<apdaowndp_desc>>----
         #----<<apdacrtid>>----
         #----<<apdacrtid_desc>>----
         #----<<apdacrtdp>>----
         #----<<apdacrtdp_desc>>----
         #----<<apdacrtdt>>----
         #----<<apdamodid>>----
         #----<<apdamodid_desc>>----
         #----<<apdamoddt>>----
         #----<<apdacnfid>>----
         #----<<apdacnfid_desc>>----
         #----<<apdacnfdt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_apda_m.apdald             
                            ,g_apda_m.apdadocno   
 
 
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                   
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO apda_t (apdaent,apda006,apdadocdt,apdadocno,apda001,apdasite,apda003,apdacomp, 
                   apdald,apda018,apda008,apda017,apda016,apda015,apdaownid,apdaowndp,apdacrtid,apdacrtdp, 
                   apdacrtdt,apdacnfid,apdacnfdt)
               VALUES (g_enterprise,g_apda_m.apda006,g_apda_m.apdadocdt,g_apda_m.apdadocno,g_apda_m.apda001, 
                   g_apda_m.apdasite,g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald,g_apda_m.apda018, 
                   g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apdaownid, 
                   g_apda_m.apdaowndp,g_apda_m.apdacrtid,g_apda_m.apdacrtdp,g_apda_m.apdacrtdt,g_apda_m.apdacnfid, 
                   g_apda_m.apdacnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_apda_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aapt351_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE apda_t SET (apda006,apdadocdt,apdadocno,apda001,apdasite,apda003,apdacomp,apdald, 
                   apda018,apda008,apda017,apda016,apda015,apdaownid,apdaowndp,apdacrtid,apdacrtdp,apdacrtdt, 
                   apdacnfid,apdacnfdt) = (g_apda_m.apda006,g_apda_m.apdadocdt,g_apda_m.apdadocno,g_apda_m.apda001, 
                   g_apda_m.apdasite,g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald,g_apda_m.apda018, 
                   g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apdaownid, 
                   g_apda_m.apdaowndp,g_apda_m.apdacrtid,g_apda_m.apdacrtdp,g_apda_m.apdacrtdt,g_apda_m.apdacnfid, 
                   g_apda_m.apdacnfdt)
                WHERE apdaent = g_enterprise AND apdald = g_apdald_t
                  AND apdadocno = g_apdadocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("apda_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_apdald_t = g_apda_m.apdald
            LET g_apdadocno_t = g_apda_m.apdadocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aapt351.input.other" ver="2" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD apdald
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD apceseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aapt351.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aapt351_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_apce_d.clear()   
 
 
   INITIALIZE g_apda_m.* LIKE apda_t.*             #DEFAULT 設定
   
   LET g_apdald_t = NULL
   LET g_apdadocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_apda_m.apdaownid = g_user
      LET g_apda_m.apdaowndp = g_dept
      LET g_apda_m.apdacrtid = g_user
      LET g_apda_m.apdacrtdp = g_dept 
      LET g_apda_m.apdacrtdt = cl_get_current()
      LET g_apda_m.apdamodid = ""
      LET g_apda_m.apdamoddt = ""
      #LET g_apda_m.apdastus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_apda_m.apda016 = "0"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aapt351_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_apda_m.* = g_apda_m_t.*
         CALL aapt351_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_apce_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_apdald_t = g_apda_m.apdald
   LET g_apdadocno_t = g_apda_m.apdadocno
 
   
   LET g_wc = g_wc,  
              " OR ( apdaent = '" ||g_enterprise|| "' AND",
              " apdald = '", g_apda_m.apdald CLIPPED, "' "
              ," AND apdadocno = '", g_apda_m.apdadocno CLIPPED, "' "
 
              , ") "
   
   CLOSE aapt351_cl
   
END FUNCTION
]]>
</section>
  <section id="aapt351.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aapt351_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO apce_t
                  (apceent,
                   apceld,apcedocno,
                   apceseq
                   ,apce008,apce100,apce109,apce011,apce031,apce010) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_apce_d[g_detail_idx].apce008,g_apce_d[g_detail_idx].apce100,g_apce_d[g_detail_idx].apce109, 
                       g_apce_d[g_detail_idx].apce011,g_apce_d[g_detail_idx].apce031,g_apce_d[g_detail_idx].apce010) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("apce_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aapt351.lock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aapt351_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aapt351_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "apce_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aapt351_bcl USING g_enterprise,
                                       g_apda_m.apdald,g_apda_m.apdadocno,g_apce_d[g_detail_idx].apceseq  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("aapt351_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aapt351.main" ver="1" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aap","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT apda006,'',apdadocdt,apdadocno,'',apda001,apdasite,'',apda003,'',apdacomp, 
       apdald,apda018,'',apda008,apda017,apda016,apda015,'',apdaownid,'',apdaowndp,'',apdacrtid,'',apdacrtdp, 
       '',apdacrtdt,apdamodid,'',apdamoddt,apdacnfid,'',apdacnfdt FROM apda_t WHERE apdaent= ? AND apdald=?  
       AND apdadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE aapt351_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE apda006,apdadocdt,apdadocno,apda001,apdasite,apda003,apdacomp,apdald, 
       apda018,apda008,apda017,apda016,apda015,apdaownid,apdaowndp,apdacrtid,apdacrtdp,apdacrtdt,apdamodid, 
       apdamoddt,apdacnfid,apdacnfdt",
               " FROM apda_t",
               " WHERE apdaent = '" ||g_enterprise|| "' AND apdald = ? AND apdadocno = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aapt351_master_referesh FROM g_sql
 
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_aapt351 WITH FORM cl_ap_formpath("aap",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aapt351_init()   
 
      #進入選單 Menu (="N")
      CALL aapt351_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aapt351
      
   END IF 
   
   CLOSE aapt351_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aapt351.modify" ver="3" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aapt351_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_apda_m.apdald IS NULL
   OR g_apda_m.apdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aapt351_master_referesh USING g_apda_m.apdald,g_apda_m.apdadocno INTO g_apda_m.apda006,g_apda_m.apdadocdt, 
       g_apda_m.apdadocno,g_apda_m.apda001,g_apda_m.apdasite,g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald, 
       g_apda_m.apda018,g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apdaownid, 
       g_apda_m.apdaowndp,g_apda_m.apdacrtid,g_apda_m.apdacrtdp,g_apda_m.apdacrtdt,g_apda_m.apdamodid, 
       g_apda_m.apdamoddt,g_apda_m.apdacnfid,g_apda_m.apdacnfdt
 
   ERROR ""
  
   LET g_apdald_t = g_apda_m.apdald
   LET g_apdadocno_t = g_apda_m.apdadocno
 
   CALL s_transaction_begin()
   
   OPEN aapt351_cl USING g_enterprise,g_apda_m.apdald
                                                       ,g_apda_m.apdadocno
 
   IF STATUS THEN
      CALL cl_err("OPEN aapt351_cl:", STATUS, 1)
      CLOSE aapt351_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aapt351_cl INTO g_apda_m.apda006,g_apda_m.apda006_desc,g_apda_m.apdadocdt,g_apda_m.apdadocno, 
       g_apda_m.apdadocno_desc,g_apda_m.apda001,g_apda_m.apdasite,g_apda_m.apdasite_desc,g_apda_m.apda003, 
       g_apda_m.apda003_desc,g_apda_m.apdacomp,g_apda_m.apdald,g_apda_m.apda018,g_apda_m.apda018_desc, 
       g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apda015_desc,g_apda_m.apdaownid, 
       g_apda_m.apdaownid_desc,g_apda_m.apdaowndp,g_apda_m.apdaowndp_desc,g_apda_m.apdacrtid,g_apda_m.apdacrtid_desc, 
       g_apda_m.apdacrtdp,g_apda_m.apdacrtdp_desc,g_apda_m.apdacrtdt,g_apda_m.apdamodid,g_apda_m.apdamodid_desc, 
       g_apda_m.apdamoddt,g_apda_m.apdacnfid,g_apda_m.apdacnfid_desc,g_apda_m.apdacnfdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_apda_m.apdald,SQLCA.sqlcode,0)
      CLOSE aapt351_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aapt351_show()
   WHILE TRUE
      LET g_apdald_t = g_apda_m.apdald
      LET g_apdadocno_t = g_apda_m.apdadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_apda_m.apdamodid = g_user 
LET g_apda_m.apdamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aapt351_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_apda_m.* = g_apda_m_t.*
         CALL aapt351_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
     
      #若有modid跟moddt則進行update
      UPDATE apda_t SET (apdamodid,apdamoddt) = (g_apda_m.apdamodid,g_apda_m.apdamoddt)
       WHERE apdaent = g_enterprise AND apdald = g_apdald_t
         AND apdadocno = g_apdadocno_t
 
 
      #若單頭key欄位有變更
      IF g_apda_m.apdald != g_apdald_t 
      OR g_apda_m.apdadocno != g_apdadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE apce_t SET apceld = g_apda_m.apdald
                                      ,apcedocno = g_apda_m.apdadocno
 
          WHERE apceent = g_enterprise AND apceld = g_apdald_t
            AND apcedocno = g_apdadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("apce_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("apce_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_apda_m.apdald,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aapt351_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_apda_m.apdald,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aapt351.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="aapt351.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aapt351.query" ver="2" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aapt351_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_apce_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aapt351_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aapt351_browser_fill("")
      CALL aapt351_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aapt351_filter_show('apdadocno')
   CALL aapt351_filter_show('apdald')
   CALL aapt351_filter_show('apda003')
   CALL aapt351_filter_show('apdadocdt')
   CALL aapt351_filter_show('apdasite')
   CALL aapt351_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aapt351_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aapt351.reproduce" ver="3" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aapt351_reproduce()
   DEFINE l_newno     LIKE apda_t.apdald 
   DEFINE l_oldno     LIKE apda_t.apdald 
   DEFINE l_newno02     LIKE apda_t.apdadocno 
   DEFINE l_oldno02     LIKE apda_t.apdadocno 
 
   DEFINE l_master    RECORD LIKE apda_t.*
   DEFINE l_detail    RECORD LIKE apce_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_apda_m.apdald IS NULL
   OR g_apda_m.apdadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_apdald_t = g_apda_m.apdald
   LET g_apdadocno_t = g_apda_m.apdadocno
 
    
   LET g_apda_m.apdald = ""
   LET g_apda_m.apdadocno = ""
 
    
   CALL aapt351_set_entry('a')
   CALL aapt351_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_apda_m.apdaownid = g_user
      LET g_apda_m.apdaowndp = g_dept
      LET g_apda_m.apdacrtid = g_user
      LET g_apda_m.apdacrtdp = g_dept 
      LET g_apda_m.apdacrtdt = cl_get_current()
      LET g_apda_m.apdamodid = ""
      LET g_apda_m.apdamoddt = ""
      #LET g_apda_m.apdastus = ""
 
 
  
   CALL s_transaction_begin()
 
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aapt351_input("r")
   
      LET g_apda_m.apdadocno_desc = ''
   DISPLAY BY NAME g_apda_m.apdadocno_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g_wc = g_wc,  
              " OR (",
              " apdald = '", g_apda_m.apdald CLIPPED, "' "
              ," AND apdadocno = '", g_apda_m.apdadocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aapt351.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aapt351_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("apdald,apdadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aapt351.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aapt351_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aapt351.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aapt351_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("apdald,apdadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aapt351.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aapt351_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aapt351.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aapt351_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_apda_m.apdald
   LET g_pk_array[1].column = 'apdald'
   LET g_pk_array[2].values = g_apda_m.apdadocno
   LET g_pk_array[2].column = 'apdadocno'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aapt351.show" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aapt351_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_apda_m_t.* = g_apda_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL aapt351_b_fill() #單身填充
      CALL aapt351_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_apda_m.apdaownid_desc = cl_get_username(g_apda_m.apdaownid)
      #LET g_apda_m.apdaowndp_desc = cl_get_deptname(g_apda_m.apdaowndp)
      #LET g_apda_m.apdacrtid_desc = cl_get_username(g_apda_m.apdacrtid)
      #LET g_apda_m.apdacrtdp_desc = cl_get_deptname(g_apda_m.apdacrtdp)
      #LET g_apda_m.apdamodid_desc = cl_get_username(g_apda_m.apdamodid)
      #LET g_apda_m.apdacnfid_desc = cl_get_deptname(g_apda_m.apdacnfid)
      ##LET g_apda_m.apdapstid_desc = cl_get_deptname(g_apda_m.apdapstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aapt351_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_apda_m.apda006,g_apda_m.apda006_desc,g_apda_m.apdadocdt,g_apda_m.apdadocno,g_apda_m.apdadocno_desc, 
       g_apda_m.apda001,g_apda_m.apdasite,g_apda_m.apdasite_desc,g_apda_m.apda003,g_apda_m.apda003_desc, 
       g_apda_m.apdacomp,g_apda_m.apdald,g_apda_m.apda018,g_apda_m.apda018_desc,g_apda_m.apda008,g_apda_m.apda017, 
       g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apda015_desc,g_apda_m.apdaownid,g_apda_m.apdaownid_desc, 
       g_apda_m.apdaowndp,g_apda_m.apdaowndp_desc,g_apda_m.apdacrtid,g_apda_m.apdacrtid_desc,g_apda_m.apdacrtdp, 
       g_apda_m.apdacrtdp_desc,g_apda_m.apdacrtdt,g_apda_m.apdamodid,g_apda_m.apdamodid_desc,g_apda_m.apdamoddt, 
       g_apda_m.apdacnfid,g_apda_m.apdacnfid_desc,g_apda_m.apdacnfdt
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_apce_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aapt351_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aapt351.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aapt351.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aapt351.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aapt351_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_apdald = g_apda_m.apdald 
         AND g_browser[l_i].b_apdadocno = g_apda_m.apdadocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aapt351.ui_detailshow" ver="2" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aapt351_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aapt351.ui_dialog" ver="2" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aapt351_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aapt351_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aapt351_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_apdald = g_apdald_t
               AND g_browser[li_idx].b_apdadocno = g_apdadocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aapt351_fetch('') # reload data
               LET l_ac = 1
               CALL aapt351_ui_detailshow() #Setting the current row 
      
               CALL aapt351_idx_chk()
               #NEXT FIELD apceseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_apce_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aapt351_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aapt351_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aapt351_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aapt351_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aapt351_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD apceseq
            END IF
        
         #ON ACTION statechange
         #   LET g_action_choice = "statechange"
         #   CALL aapt351_statechange()
         #   EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aapt351_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aapt351_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aapt351_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aapt351_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aapt351_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aapt351_idx_chk()
            
         ON ACTION previous
            CALL aapt351_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aapt351_idx_chk()
            
         ON ACTION jump
            CALL aapt351_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aapt351_idx_chk()
            
         ON ACTION next
            CALL aapt351_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aapt351_idx_chk()
            
         ON ACTION last
            CALL aapt351_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aapt351_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aapt351_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aapt351_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aapt351_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aapt351_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aapt351_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aapt351_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aapt351_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aapt351_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aapt351_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_apda_m.apdadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aapt351.ui_headershow" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aapt351_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_apda_m.apdald = g_browser[g_current_idx].b_apdald   
   LET g_apda_m.apdadocno = g_browser[g_current_idx].b_apdadocno   
 
   EXECUTE aapt351_master_referesh USING g_apda_m.apdald,g_apda_m.apdadocno INTO g_apda_m.apda006,g_apda_m.apdadocdt, 
       g_apda_m.apdadocno,g_apda_m.apda001,g_apda_m.apdasite,g_apda_m.apda003,g_apda_m.apdacomp,g_apda_m.apdald, 
       g_apda_m.apda018,g_apda_m.apda008,g_apda_m.apda017,g_apda_m.apda016,g_apda_m.apda015,g_apda_m.apdaownid, 
       g_apda_m.apdaowndp,g_apda_m.apdacrtid,g_apda_m.apdacrtdp,g_apda_m.apdacrtdt,g_apda_m.apdamodid, 
       g_apda_m.apdamoddt,g_apda_m.apdacnfid,g_apda_m.apdacnfdt
   CALL aapt351_show()
   
END FUNCTION
]]>
</section>
  <section id="aapt351.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aapt351_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aapt351_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aapt351.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aapt351_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "apce_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE apce_t 
         SET (apceld,apcedocno,
              apceseq
              ,apce008,apce100,apce109,apce011,apce031,apce010) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_apce_d[g_detail_idx].apce008,g_apce_d[g_detail_idx].apce100,g_apce_d[g_detail_idx].apce109, 
                  g_apce_d[g_detail_idx].apce011,g_apce_d[g_detail_idx].apce031,g_apce_d[g_detail_idx].apce010)  

         WHERE apceent = g_enterprise AND apceld = ps_keys_bak[1] AND apcedocno = ps_keys_bak[2] AND apceseq = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("apce_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("apce_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>