#該程式未解開Section, 採用最新樣板產出!
{<section id="aapt415_01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2015-12-10 10:28:13), PR版次:0002(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000056
#+ Filename...: aapt415_01
#+ Description: 對帳單號開窗
#+ Creator....: 03538(2015-03-01 16:28:29)
#+ Modifier...: 02114 -SD/PR- 00000
 
{</section>}
 
{<section id="aapt415_01.global" >}
#應用 p00 樣板自動產生(Version:4)
#add-point:填寫註解說明
#150505           2015/05/05 By apo      全選使用的SQLCURSOR沒有附加篩選邏輯,因此改寫
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
#add-point:增加匯入變數檔

#end add-point
 
{</section>}
 
{<section id="aapt415_01.free_style_variable" >}
#add-point:free_style模組變數(Module Variable)
#開窗畫面顯示欄位 type 宣告
 TYPE type_gr_qry RECORD
         check       LIKE type_t.chr1,
         apbb002     LIKE apbb_t.apbb002, 
         pmaal003    LIKE pmaal_t.pmaal003, 
         apbbcomp    LIKE apbb_t.apbbcomp, 
         ooefl003    LIKE ooefl_t.ooefl003, 
         apbbdocno   LIKE apbb_t.apbbdocno, 
         apbbdocdt   LIKE apbb_t.apbbdocdt, 
         apbb055     LIKE apbb_t.apbb055, 
         apbb050     LIKE apbb_t.apbb050, 
         gzcbl004    LIKE gzcbl_t.gzcbl004, 
         apbb010     LIKE apbb_t.apbb010, 
         apbb009     LIKE apbb_t.apbb009, 
         apbb014     LIKE apbb_t.apbb014, 
         apbb025     LIKE apbb_t.apbb025
       END RECORD
 
#@查詢資料的暫存器.
DEFINE gr_qry            DYNAMIC ARRAY OF type_gr_qry  
DEFINE gr_qry_sel        DYNAMIC ARRAY OF type_gr_qry  #多選時記錄已勾選的資料
 
DEFINE gi_multi_sel      LIKE type_t.num5   #是否需要複選資料(TRUE/FALSE)
DEFINE gi_need_cons      LIKE type_t.num5   #是否需要CONSTRUCT(TRUE/FALSE)
DEFINE gi_cons_where     STRING                #暫存CONSTRUCT區塊的WHERE條件
DEFINE gi_cons_where_old STRING                #暫存CONSTRUCT區塊的WHERE條件(舊的,用來比對條件是否改變)
 
DEFINE gs_default1       STRING 
DEFINE gs_default2       STRING 
DEFINE gs_default3       STRING 
DEFINE gs_default4       STRING
DEFINE gs_default5       STRING
DEFINE gi_page_count     LIKE type_t.num10  #每頁顯現資料筆數
DEFINE gs_pageswitch     STRING                #選擇的頁面
DEFINE gs_action         STRING
DEFINE gi_reconstruct    LIKE type_t.num5   #重新查詢
DEFINE g_pagestart       LIKE type_t.num5
DEFINE g_data_cnt        LIKE type_t.num5
DEFINE g_page_idx        LIKE type_t.num5   #目前所在頁數
DEFINE g_page_last       LIKE type_t.num5   #最後一頁
DEFINE g_sel_limit       LIKE type_t.num5   #選擇筆數的上限
DEFINE gwin_curr         ui.Window  
#end add-point
 
{</section>}
 
{<section id="aapt415_01.global_variable" >}
#add-point:自定義模組變數(Module Variable)

#end add-point
 
{</section>}
 
{<section id="aapt415_01.other_dialog" >}

 
{</section>}
 
{<section id="aapt415_01.other_function" readonly="Y" >}

PUBLIC FUNCTION aapt415_01()
 
   DEFINE pi_multi_sel   LIKE type_t.num5
   DEFINE pi_need_cons   LIKE type_t.num5
   DEFINE lwin_curr      ui.Window
   DEFINE lfrm_curr      ui.Form
   DEFINE ls_path        STRING
 
   WHENEVER ERROR CALL cl_err_msg_log
 
   #目前因為cl_ap_formpath() lib尚未調整
   #所以open window路徑先寫死,未來應該要call cl_ap_formpath()
   OPEN WINDOW w_aapt415_01 WITH FORM cl_ap_formpath("aap","aapt415_01")
      ATTRIBUTE(STYLE="openwin")
   LET lwin_curr = ui.Window.getCurrent()
   LET lfrm_curr = lwin_curr.getForm()
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   LET ls_path = os.Path.join(ls_path,"toolbar_openwin.4tb")
   CALL lfrm_curr.loadToolBar(ls_path)
   IF g_qryparam.state = 'i' THEN
      LET gi_multi_sel = FALSE
   ELSE
      LET gi_multi_sel = TRUE
   END IF 
   LET gi_need_cons = g_qryparam.reqry

   LET gs_default1 = g_qryparam.default1 
   LET gs_default2 = g_qryparam.default2 
   LET gs_default3 = g_qryparam.default3 
   LET gs_default4 = g_qryparam.default4
   LET gs_default5 = g_qryparam.default5
 
   CALL aapt415_01_init()
   CALL aapt415_01_sel()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
   END IF 
 
   CLOSE WINDOW w_aapt415_01

END FUNCTION

PRIVATE FUNCTION aapt415_01_init()
   DEFINE l_qry_text LIKE dzcal_t.dzcal003
   DEFINE l_qry_id   LIKE dzca_t.dzca001
   DEFINE l_text     STRING
 
   IF NOT (gi_multi_sel) THEN
      CALL cl_set_comp_visible("check", FALSE)
      CALL cl_set_toolbaritem_visible("selectall, selectnone, selectpageall, selectpagenone", FALSE)
   END IF
 
   IF (gi_multi_sel) THEN
      #lib尚未修正
      #CALL cl_set_comp_font_color("oea01", "red")
   END IF
 
   LET INT_FLAG = FALSE         #避免被其他函式影響
   LET g_page_idx = 0
   LET g_page_last = 0
   LET g_sel_limit = aapt415_01_get_sel_limit()     #選擇筆數的上限
   LET gi_page_count = aapt415_01_get_page_count()  #每頁顯現資料筆數
   LET gi_cons_where = " 1=1"   #預設查詢全部資料
   LET gi_cons_where_old = NULL
   LET gi_reconstruct = FALSE
   INITIALIZE gs_pageswitch TO NULL
   INITIALIZE gs_action TO NULL
   INITIALIZE g_qryparam.return1 TO NULL  
   INITIALIZE g_qryparam.return2 TO NULL  
   INITIALIZE g_qryparam.return3 TO NULL
   INITIALIZE g_qryparam.return4 TO NULL   
   INITIALIZE g_qryparam.return5 TO NULL   
   
   CALL gr_qry.clear()
   CALL gr_qry_sel.clear()
 
   #動態設定comboBox項目
   ### 此開窗無comboBox的欄位 ###
  
 
   #設定開窗識別碼的說明
   LET gwin_curr = ui.Window.forName("w_qry")
   SELECT dzca001,dzcal003 INTO l_qry_id,l_qry_text FROM dzca_t
      LEFT JOIN dzcal_t ON dzcal001=dzca001 AND dzcal002=g_lang 
      WHERE dzca001="aapt415_01"
   LET l_text = l_qry_text,"(",l_qry_id,")"
   CALL gwin_curr.setText(l_text)
END FUNCTION
################################################################################
# Descriptions...: 取得每頁顯現資料筆數
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_get_page_count()
   DEFINE l_sel_limit  LIKE type_t.num5,
          l_ooaa002    LIKE ooaa_t.ooaa002,
          l_default    LIKE type_t.num5
 
   LET l_default = 10 #設定預設值
 
   #取值優先權: ds.dzca_t>dsdemo.ooaa_t
   
   #從ds.dzca_t提取開窗每頁顯現資料筆數
   SELECT dzca004 INTO l_ooaa002 FROM dzca_t
      WHERE dzca001 = "aapt415_01"
 
 
   IF l_ooaa002 <10 OR cl_null(l_ooaa002) THEN
      #提取開窗每頁顯現資料筆數      
      LET l_ooaa002 = cl_get_para(g_enterprise,g_site,"E-SYS-0002")
 
      IF l_ooaa002 <10 OR cl_null(l_ooaa002) THEN
         LET l_sel_limit = l_default
      ELSE
         LET l_sel_limit = l_ooaa002
      END IF
   ELSE
      LET l_sel_limit = l_ooaa002
   END IF
 
   RETURN l_sel_limit
END FUNCTION
################################################################################
# Descriptions...: 取得選擇筆數的上限
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_get_sel_limit()
   DEFINE l_sel_limit  LIKE type_t.num5,
          l_ooaa002    LIKE ooaa_t.ooaa002,
          l_default    LIKE type_t.num5
 
   LET l_default = 200 #設定預設值
 
   #從資料庫提取開窗選擇筆數資料上限
   LET l_ooaa002 = cl_get_para(g_enterprise,g_site,"E-SYS-0003")
 
   IF l_ooaa002 <200 OR cl_null(l_ooaa002) THEN
      LET l_sel_limit = l_default
   ELSE
      LET l_sel_limit = l_ooaa002
   END IF
 
   RETURN l_sel_limit
END FUNCTION
################################################################################
# Descriptions...: 畫面顯現與資料的選擇.
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_sel()
  WHILE TRUE
      CALL aapt415_01_prep_result_set()
 
      IF (gi_multi_sel) THEN
         CALL aapt415_01_input_array()
      ELSE
         CALL aapt415_01_display_array()
      END IF
 
      IF gs_action = "exit" THEN
         EXIT WHILE
      END IF
   END WHILE
END FUNCTION
################################################################################
# Descriptions...: 準備查詢畫面的資料集.
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_prep_result_set()
   CALL gr_qry.clear()
   CALL gr_qry_sel.clear()

 
   IF (gi_need_cons) OR (gi_reconstruct) THEN
 
      #避免使用預先查詢時,按重新整理的時候,進入CONSTRUCT段
      LET gi_need_cons = FALSE
 
      LET gi_reconstruct = FALSE
      LET gi_cons_where_old = NULL
      DISPLAY "" TO formonly.index
      CONSTRUCT gi_cons_where ON apbb002, pmaal003, apbbcomp, ooefl003, apbbdocno, apbbdocdt, apbb055, apbb050, gzcbl004, apbb010, apbb009, apbb014, apbb025 
         FROM s_detail1[1].apbb002, s_detail1[1].pmaal003, s_detail1[1].apbbcomp, s_detail1[1].ooefl003, s_detail1[1].apbbdocno, s_detail1[1].apbbdocdt, s_detail1[1].apbb055, s_detail1[1].apbb050, s_detail1[1].gzcbl004, s_detail1[1].apbb010, s_detail1[1].apbb009, s_detail1[1].apbb014, s_detail1[1].apbb025 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         LET gi_cons_where = " 1=1"
      END IF
   END IF
 
   IF cl_null(gs_pageswitch) THEN
      LET gs_pageswitch = "first"
   END IF
   CALL aapt415_01_pagedata_fill(gs_pageswitch)
   INITIALIZE gs_pageswitch TO NULL
END FUNCTION
################################################################################
# Descriptions...: 採用INPUT ARRAY的方式來顯現查詢過後的資料.
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_input_array()
   DEFINE li_ac     LIKE type_t.num5
   DEFINE ldig_curr ui.Dialog
   DEFINE l_msg     STRING           
   DEFINE l_chk     LIKE type_t.num5 

   #動態設定comboBox項目
   ### 此開窗無comboBox的欄位 ###
 
   DIALOG ATTRIBUTES(UNBUFFERED)
      INPUT ARRAY gr_qry FROM s_detail1.*
         ATTRIBUTES(COUNT=g_data_cnt, 
                    APPEND ROW=FALSE, INSERT ROW=FALSE, DELETE ROW=FALSE) 
         
         BEFORE INPUT
            CALL aapt415_01_set_pagebutton(ldig_curr) 
            
         BEFORE ROW
            LET li_ac = DIALOG.getCurrentRow("s_detail1") 
            
         ON CHANGE check   #改變勾選狀態
            CALL aapt415_01_qry_check("", gr_qry[li_ac].check, li_ac, li_ac)

      END INPUT
 
      BEFORE DIALOG
         LET ldig_curr = ui.Dialog.getCurrent()
 
      ON ACTION accept
         CALL aapt415_01_get_multiret()
         LET gs_action = "exit"
         EXIT DIALOG
         
      ON ACTION cancel
         LET g_qryparam.return1 = NULL
         LET g_qryparam.return2 = NULL
         LET g_qryparam.return3 = NULL
         LET g_qryparam.return4 = NULL
         LET g_qryparam.return5 = NULL
         
         LET gs_action = "exit"
         LET INT_FLAG = TRUE
         EXIT DIALOG
         
      ON ACTION pg_first
         CALL aapt415_01_pagedata_fill("first")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_prev
         CALL aapt415_01_pagedata_fill("prev")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_next
         CALL aapt415_01_pagedata_fill("next")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_last
         CALL aapt415_01_pagedata_fill("last")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      #重新整理
      ON ACTION refresh
         CALL aapt415_01_pagedata_fill("first")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         EXIT DIALOG
         
      #重新查詢
      ON ACTION reconstruct
         LET gi_reconstruct = TRUE
         CALL gr_qry.clear()
         CALL gr_qry_sel.clear()
         CALL aapt415_01_data_count("0")    #總筆數
         EXIT DIALOG
         
      #全部選取
      ON ACTION selectall
         # 連未選擇的頁面都必須選擇
         CALL aapt415_01_qry_check("selectall", "Y", 1, gr_qry.getLength()) 

         
      #全部取消選取
      ON ACTION selectnone
         CALL aapt415_01_qry_check("selectnone", "N", 1, gr_qry.getLength()) 
         
      #此頁全選
      ON ACTION selectpageall
         CALL aapt415_01_qry_check("selectpageall", "Y", 1, gr_qry.getLength()) 
         
      #此頁取消選取
      ON ACTION selectpagenone
         CALL aapt415_01_qry_check("selectpagenone", "N", 1, gr_qry.getLength()) 
         
      ON ACTION exporttoexcel
         MESSAGE ""
 
      #開窗程式串查沒有設定
 
         
   END DIALOG
END FUNCTION
################################################################################
# Descriptions...: 採用DISPLAY ARRAY的方式來顯現查詢過後的資料.
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_display_array()
   DEFINE li_ac       LIKE type_t.num5
   DEFINE ldig_curr   ui.Dialog
   DEFINE l_msg       STRING           
   DEFINE l_chk       LIKE type_t.num5 
 
   #動態設定comboBox項目
   ### 此開窗無comboBox的欄位 ###
   
   DIALOG ATTRIBUTES(UNBUFFERED)
      DISPLAY ARRAY gr_qry TO s_detail1.*
         ATTRIBUTES(COUNT=g_data_cnt)
         BEFORE ROW
            LET li_ac = DIALOG.getCurrentRow("s_detail1")
      END DISPLAY
 
      BEFORE DIALOG
         LET ldig_curr = ui.Dialog.getCurrent()
         CALL aapt415_01_set_pagebutton(ldig_curr)
 
      ON ACTION accept
         IF li_ac > 0 THEN
            LET g_qryparam.return1 = gr_qry[li_ac].apbbdocno
            LET g_qryparam.return2 = gr_qry[li_ac].apbbdocdt
            LET g_qryparam.return3 = gr_qry[li_ac].apbb055
            LET g_qryparam.return4 = gr_qry[li_ac].apbb010
            LET g_qryparam.return5 = gr_qry[li_ac].apbb009
          
         ELSE
            LET g_qryparam.return1 = gs_default1 
            LET g_qryparam.return2 = gs_default2 
            LET g_qryparam.return3 = gs_default3 
            LET g_qryparam.return4 = gs_default4 
            LET g_qryparam.return5 = gs_default5

         END IF
         LET gs_action = "exit"
         EXIT DIALOG
         
      ON ACTION CANCEL
            LET g_qryparam.return1 = gs_default1 
            LET g_qryparam.return2 = gs_default2 
            LET g_qryparam.return3 = gs_default3 
            LET g_qryparam.return4 = gs_default4
            LET g_qryparam.return5 = gs_default5

 
         LET gs_action = "exit"
         LET INT_FLAG = TRUE
         EXIT DIALOG
         
      ON ACTION pg_first
         CALL aapt415_01_pagedata_fill("first")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_prev
         CALL aapt415_01_pagedata_fill("prev")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_next
         CALL aapt415_01_pagedata_fill("next")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_last
         CALL aapt415_01_pagedata_fill("last")
         CALL aapt415_01_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION refresh       #重新整理
         CALL aapt415_01_pagedata_fill("first") 
         CALL aapt415_01_set_pagebutton(ldig_curr)
         EXIT DIALOG
         
      ON ACTION reconstruct   #重新查詢 
         LET gi_reconstruct = TRUE
         CALL gr_qry.clear()
         CALL aapt415_01_data_count("0")    #總筆數
         EXIT DIALOG
         
      ON ACTION exporttoexcel
         MESSAGE ""
 
      #開窗程式串查沒有設定
 
         
   END DIALOG
END FUNCTION
################################################################################
# Descriptions...: 準備查詢畫面的資料集.
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_pagedata_fill(ps_page_action)
   DEFINE ps_page_action STRING
   DEFINE ls_sql         STRING
   DEFINE ls_where       STRING
   DEFINE li_i           LIKE type_t.num10
   DEFINE li_j           LIKE type_t.num10
   DEFINE l_datarange    STRING   #第m-n筆
   DEFINE l_str          STRING   #字串
   DEFINE l_str1         STRING
   DEFINE l_str2         STRING
   DEFINE l_apbb028      LIKE apbb_t.apbb028  #150302apo
   DEFINE l_cnt          LIKE type_t.num5     #150302apo

 
   CASE ps_page_action
      WHEN "first"
         LET g_page_idx = 1
      WHEN "prev"
         LET g_page_idx = g_page_idx - 1
      WHEN "next"
         LET g_page_idx = g_page_idx + 1
      WHEN "last"
         LET g_page_idx = g_page_last
   END CASE
 
   IF g_page_idx > 0 THEN
      LET g_pagestart = (g_page_idx - 1) * gi_page_count + 1
   END IF
 
   CALL aapt415_01_sqlwhere() RETURNING ls_where

   
   #全部選取
   LET ls_sql =
   "SELECT DISTINCT  'Y',  apbb002,pmaal003,apbbcomp,ooefl003,apbbdocno,apbbdocdt,apbb055,apbb050,gzcbl004,apbb010,apbb009,apbb014,apbb025 
  FROM   ( SELECT  apbbstus,apbb002 ,pmaal003 ,apbb050 ,gzcbl004 ,apbbcomp ,ooefl003 ,apbbdocdt ,apbb055,apbbdocno ,apbb014 ,
                                  CASE WHEN isam025 IS NULL THEN apbb025 ELSE isam025 END apbb025
                                               ,isam010 apbb010,apbb009
                                  FROM  apbb_t    
                                  LEFT JOIN  pmaal_t ON pmaal001 = apbb002 AND pmaalent = apbbent AND pmaal002 = '",g_dlang,"'
                                  LEFT JOIN gzcbl_t ON gzcbl001 = '9741' AND gzcbl002 = apbb050   AND gzcbl003 = '",g_dlang,"'
                                  LEFT JOIN ooefl_t ON ooefl001 = apbbcomp AND ooeflent = apbbent AND ooefl002 ='",g_dlang,"'
                                  LEFT JOIN isam_t ON isamdocno = apbbdocno AND apbbent = isament  
                                 WHERE apbbstus = 'Y' AND  apbbent = ",g_enterprise," 
                                     AND apbb025 >(SELECT COALESCE (sum(apeb109),0) FROM apea_t,apeb_t  WHERE apeb003 = apbbdocno AND apeadocno=apebdocno) )
    
  WHERE   1=1   AND ", ls_where CLIPPED, "
  ORDER BY apbbdocno DESC"
   DECLARE lcurs_qry_all CURSOR FROM ls_sql
 
   #此頁
   #@如果不需要複選資料,則不要設定check的預設值(將'N'刪除)
   LET ls_sql = 
   "SELECT 'N', apbb002_1, pmaal003_2, apbbcomp_3, ooefl003_4, apbbdocno_5, apbbdocdt_6, apbb055_7, apbb050_8, gzcbl004_9, apbb010_10, apbb009_11, apbb014_12, apbb025_13, RANK 
  FROM ( SELECT apbb002_1, pmaal003_2, apbbcomp_3, ooefl003_4, apbbdocno_5, apbbdocdt_6, apbb055_7, apbb050_8, gzcbl004_9, apbb010_10, apbb009_11, apbb014_12, apbb025_13, RANK() OVER(ORDER BY apbb002_1, pmaal003_2, apbbcomp_3, ooefl003_4, apbbdocno_5, apbbdocdt_6, apbb055_7, apbb050_8, gzcbl004_9, apbb010_10, apbb009_11, apbb014_12, apbb025_13) AS RANK  FROM (SELECT DISTINCT  apbb002 apbb002_1, pmaal003 pmaal003_2, apbbcomp apbbcomp_3, ooefl003 ooefl003_4, apbbdocno apbbdocno_5, apbbdocdt apbbdocdt_6, apbb055 apbb055_7, apbb050 apbb050_8, gzcbl004 gzcbl004_9, apbb010 apbb010_10, apbb009 apbb009_11, apbb014 apbb014_12, apbb025 apbb025_13 
  FROM   ( SELECT  apbbstus,apbb002 ,pmaal003 ,apbb050 ,gzcbl004 ,apbbcomp ,ooefl003 ,apbbdocdt ,apbb055,apbbdocno ,apbb014 ,
                                  CASE WHEN isam025 IS NULL THEN apbb025 ELSE isam025 END apbb025
                                               ,isam010 apbb010,apbb009
                                  FROM  apbb_t    
                                  LEFT JOIN  pmaal_t ON pmaal001 = apbb002 AND pmaalent = apbbent AND pmaal002 = '",g_dlang,"'
                                  LEFT JOIN gzcbl_t ON gzcbl001 = '9741' AND gzcbl002 = apbb050   AND gzcbl003 = '",g_dlang,"'
                                  LEFT JOIN ooefl_t ON ooefl001 = apbbcomp AND ooeflent = apbbent AND ooefl002 ='",g_dlang,"'
                                  LEFT JOIN isam_t ON isamdocno = apbbdocno AND apbbent = isament  
                                 WHERE apbbstus = 'Y' AND  apbbent = ",g_enterprise," 
                                     AND apbb025 >(SELECT COALESCE (sum(apeb109),0) FROM apea_t,apeb_t  WHERE apeb003 = apbbdocno AND apeadocno=apebdocno) )
    
  WHERE   1=1   AND ", ls_where CLIPPED, "
  ORDER BY apbbdocno DESC))",
   " WHERE RANK >= ", g_pagestart," AND RANK < ", g_pagestart + gi_page_count
 
   #DISPLAY "%%%%%%%%%%%%%%%%%%%%%%"
   #DISPLAY "ls_sql = ",ls_sql
 
   DECLARE lcurs_qry CURSOR FROM ls_sql
 
   CALL gr_qry.clear()
 
   LET li_i = 1
   FOREACH lcurs_qry INTO gr_qry[li_i].*
      #--150302apo--(s)
      IF NOT cl_null(gr_qry[li_i].apbb010) THEN
         SELECT isam025-(SELECT COALESCE (SUM(apeb109),0) 
                           FROM apeb_t,apea_t 
                          WHERE apeastus != 'X' 
                            AND apeadocno = apebdocno AND apeb008 = isam010 ),
                isam028-(SELECT COALESCE (SUM(apeb119),0) 
                           FROM apeb_t,apea_t 
                          WHERE apeastus != 'X' 
                            AND apeadocno = apebdocno AND apeb008 = isam010 )
           INTO gr_qry[li_i].apbb025,l_apbb028
           FROM isam_t
          WHERE isament = g_enterprise
            AND (isam009 = gr_qry[li_i].apbb009 OR isam009 IS NULL OR isam009 = ' ')
            AND isam010 = gr_qry[li_i].apbb010
            AND isamdocno = gr_qry[li_i].apbbdocno
      ELSE  
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt
           FROM isam_t
           WHERE isamdocno = gr_qry[li_i].apbbdocno
             AND isament = g_enterprise
         IF l_cnt = 1 THEN
            SELECT apbb025-(SELECT COALESCE (SUM(apeb109),0) 
                              FROM apeb_t,apea_t 
                             WHERE apeastus != 'X' 
                               AND apeadocno = apebdocno 
                               AND apeb003 = gr_qry[li_i].apbbdocno),
                   apbb028-(SELECT COALESCE (SUM(apeb119),0) 
                              FROM apeb_t,apea_t 
                             WHERE apeastus != 'X' 
                               AND apeadocno = apebdocno
                               AND apeb003 = gr_qry[li_i].apbbdocno)
              INTO gr_qry[li_i].apbb025,l_apbb028
              FROM apbb_t,isam_t
             WHERE apbbent = isament AND apbbent = g_enterprise 
               AND apbbdocno = isamdocno AND apbbdocno = gr_qry[li_i].apbbdocno
        END IF
        IF l_cnt = 0 THEN
           SELECT apbb025-(SELECT COALESCE (SUM(apeb109),0) 
                             FROM apeb_t,apea_t 
                            WHERE apeastus != 'X' 
                              AND apeadocno = apebdocno 
                              AND apeb003 = gr_qry[li_i].apbbdocno),
                  apbb028-(SELECT COALESCE (SUM(apeb119),0) 
                             FROM apeb_t,apea_t 
                            WHERE apeastus != 'X' 
                              AND apeadocno = apebdocno
                              AND apeb003 = gr_qry[li_i].apbbdocno)
             INTO gr_qry[li_i].apbb025,l_apbb028
             FROM apbb_t
            WHERE apbbent = g_enterprise 
              AND apbbdocno = gr_qry[li_i].apbbdocno
         END IF
      END IF
      IF cl_null(gr_qry[li_i].apbb025) THEN LET gr_qry[li_i].apbb025 = 0 END IF
      IF cl_null(l_apbb028) THEN LET l_apbb028 = 0 END IF
      IF gr_qry[li_i].apbb025 = 0 OR l_apbb028 = 0 THEN     
         CONTINUE FOREACH
      END IF      
      #--150302apo--(e)
      LET l_str1 = gr_qry[li_i].apbb002, gr_qry[li_i].pmaal003, gr_qry[li_i].apbbcomp, gr_qry[li_i].ooefl003, gr_qry[li_i].apbbdocno, gr_qry[li_i].apbbdocdt, gr_qry[li_i].apbb055, gr_qry[li_i].apbb050, gr_qry[li_i].gzcbl004, gr_qry[li_i].apbb010, gr_qry[li_i].apbb009, gr_qry[li_i].apbb014, gr_qry[li_i].apbb025
      FOR li_j = 1 TO gr_qry_sel.getLength()
         LET l_str2 = gr_qry_sel[li_j].apbb002, gr_qry_sel[li_j].pmaal003, gr_qry_sel[li_j].apbbcomp, gr_qry_sel[li_j].ooefl003, gr_qry_sel[li_j].apbbdocno, gr_qry_sel[li_j].apbbdocdt, gr_qry_sel[li_j].apbb055, gr_qry_sel[li_j].apbb050, gr_qry_sel[li_j].gzcbl004, gr_qry_sel[li_j].apbb010, gr_qry_sel[li_j].apbb009, gr_qry_sel[li_j].apbb014, gr_qry_sel[li_j].apbb025
         IF l_str1 = l_str2 THEN
            LET gr_qry[li_i].check = gr_qry_sel[li_j].check
         END IF
      END FOR
      LET li_i = li_i + 1
   END FOREACH
   CALL gr_qry.deleteElement(li_i)
   
 
   IF gi_cons_where <> gi_cons_where_old OR cl_null(gi_cons_where) OR cl_null(gi_cons_where_old) THEN   #查詢條件改變
      LET gi_cons_where_old = gi_cons_where
      #CALL aapt415_01_data_count("db")  #查詢資料的總筆數,給下一段計算第m-n筆
   END IF
 
   CALL aapt415_01_data_count("db") #查詢資料的總筆數,給下一段計算第m-n筆
 
   #第m-n筆
   IF g_page_idx > 0 THEN
      LET li_i = g_data_cnt MOD gi_page_count
      #現在在最後一頁，而且不是滿頁的狀況
      IF g_page_idx = g_page_last AND li_i > 0 THEN
         LET l_str = g_pagestart - 1 + li_i
      ELSE
         LET l_str = g_pagestart - 1 + gi_page_count
      END IF
      LET l_datarange = g_pagestart
      LET l_datarange = l_datarange CLIPPED, " - ", l_str
   ELSE
      LET l_datarange = ""
   END IF
   DISPLAY l_datarange TO formonly.index
 
END FUNCTION
################################################################################
# Descriptions...: 查詢資料的總筆數
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_data_count(p_data_cnt)
   DEFINE p_data_cnt  STRING     #總筆數計算方式 "db":資料庫中的資料/非"db"則以此值為總筆數
   DEFINE ls_sql      STRING
   DEFINE ls_where    STRING
   DEFINE ls_sql_1    STRING
 
 
   IF p_data_cnt = "db" THEN
      CALL aapt415_01_sqlwhere() RETURNING ls_where
      LET ls_sql = "SELECT COUNT(1) FROM (", "SELECT DISTINCT  'Y',  apbb002,pmaal003,apbbcomp,ooefl003,apbbdocno,apbbdocdt,apbb055,apbb050,gzcbl004,apbb010,apbb009,apbb014,apbb025 
  FROM   ( SELECT  apbbstus,apbb002 ,pmaal003 ,apbb050 ,gzcbl004 ,apbbcomp ,ooefl003 ,apbbdocdt ,apbb055,apbbdocno ,apbb014 ,
                                  CASE WHEN isam025 IS NULL THEN apbb025 ELSE isam025 END apbb025
                                               ,isam010 apbb010,apbb009
                                  FROM  apbb_t    
                                  LEFT JOIN  pmaal_t ON pmaal001 = apbb002 AND pmaalent = apbbent AND pmaal002 = '",g_dlang,"'
                                  LEFT JOIN gzcbl_t ON gzcbl001 = '9741' AND gzcbl002 = apbb050   AND gzcbl003 = '",g_dlang,"'
                                  LEFT JOIN ooefl_t ON ooefl001 = apbbcomp AND ooeflent = apbbent AND ooefl002 ='",g_dlang,"'
                                  LEFT JOIN isam_t ON isamdocno = apbbdocno AND apbbent = isament  
                                 WHERE apbbstus = 'Y' AND  apbbent = ",g_enterprise," 
                                     AND apbb025 >(SELECT COALESCE (sum(apeb109),0) FROM apea_t,apeb_t  WHERE apeb003 = apbbdocno AND apeadocno=apebdocno) )
    
  WHERE   1=1   AND ", ls_where CLIPPED, "
  ORDER BY apbbdocno DESC", ")"
      LET ls_sql_1 = "SELECT DISTINCT  'Y',  apbb002,pmaal003,apbbcomp,ooefl003,apbbdocno,apbbdocdt,apbb055,apbb050,gzcbl004,apbb010,apbb009,apbb014,apbb025 
  FROM   ( SELECT  apbbstus,apbb002 ,pmaal003 ,apbb050 ,gzcbl004 ,apbbcomp ,ooefl003 ,apbbdocdt ,apbb055,apbbdocno ,apbb014 ,
                                  CASE WHEN isam025 IS NULL THEN apbb025 ELSE isam025 END apbb025
                                               ,isam010 apbb010,apbb009
                                  FROM  apbb_t    
                                  LEFT JOIN  pmaal_t ON pmaal001 = apbb002 AND pmaalent = apbbent AND pmaal002 = '",g_dlang,"'
                                  LEFT JOIN gzcbl_t ON gzcbl001 = '9741' AND gzcbl002 = apbb050   AND gzcbl003 = '",g_dlang,"'
                                  LEFT JOIN ooefl_t ON ooefl001 = apbbcomp AND ooeflent = apbbent AND ooefl002 ='",g_dlang,"'
                                  LEFT JOIN isam_t ON isamdocno = apbbdocno AND apbbent = isament  
                                 WHERE apbbstus = 'Y' AND  apbbent = ",g_enterprise," 
                                     AND apbb025 >(SELECT COALESCE (sum(apeb109),0) FROM apea_t,apeb_t  WHERE apeb003 = apbbdocno AND apeadocno=apebdocno) )
    
  WHERE   1=1   AND ", ls_where CLIPPED, "
  ORDER BY apbbdocno DESC"
      DISPLAY "########################################################################"
      DISPLAY "[sql for aapt415_01] = ",ls_sql_1
      DISPLAY "########################################################################"
      CALL aapt415_01_sql_verify(ls_sql_1)
      PREPARE qry_count FROM ls_sql
      EXECUTE qry_count INTO g_data_cnt
   ELSE
      LET g_data_cnt = p_data_cnt
   END IF
 
   IF g_data_cnt > 0 THEN
      IF g_data_cnt MOD gi_page_count = 0 THEN
         LET g_page_last = g_data_cnt / gi_page_count   #總筆數 / 每頁顯現資料筆數
      ELSE
         LET g_page_last = g_data_cnt / gi_page_count + 1
      END IF
   ELSE
      LET g_page_last = 0
   END IF
 
   #DISPLAY "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
   #DISPLAY "ls_sql = ",ls_sql
   #DISPLAY "ls_sql_1 = ",ls_sql_1
   #DISPLAY "g_data_cnt = ",g_data_cnt
   #DISPLAY "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"
 
   DISPLAY g_data_cnt TO formonly.count    #顯示總筆數
END FUNCTION
################################################################################
# Descriptions...: 進行SQL驗證
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_sql_verify(p_sql)
   DEFINE p_sql      STRING
   DEFINE l_sql      STRING
   DEFINE l_sql_msg  STRING
   
   TRY
      LET l_sql = "SELECT COUNT(1) FROM (",p_sql,")"
       
      #實際進行驗證
      EXECUTE IMMEDIATE l_sql
 
 
      MESSAGE 'Verify OK!' 
   CATCH
      DISPLAY ":SQLCA.SQLCODE=",SQLCA.SQLCODE,SQLERRMESSAGE
      LET l_sql_msg = ":SQLCA.SQLCODE=",SQLCA.SQLCODE,ASCII 10," \ sql = ",l_sql,ASCII 10," \ SQLERRMESSAGE=",SQLERRMESSAGE
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = l_sql_msg 
      LET g_errparam.code   =  "adz-00024" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
 
   END TRY  
END FUNCTION
################################################################################
# Descriptions...: 組SQL的where條件
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_sqlwhere()
   DEFINE ls_where   STRING
 
   LET ls_where = gi_cons_where CLIPPED   #gi_cons_where 螢幕抓取的where 條件
 
   #在input段開窗的時候自動加入<inwc></inwc>之間的where條件 cch_20130605
   IF  g_qryparam.state = "i" THEN
      LET ls_where = ls_where," ",""
   END IF
   
   #entprise - Start -
    
   #entprise -  End  -
   IF NOT cl_null(g_qryparam.where) THEN
      LET ls_where = ls_where, " AND ", g_qryparam.where CLIPPED   # g_qryparam.where查詢資料的條件
   END IF
   RETURN ls_where
END FUNCTION
################################################################################
# Descriptions...: 設定上下頁按鈕狀態
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_set_pagebutton(pdig_curr)
   DEFINE pdig_curr ui.Dialog
 
   CALL pdig_curr.setActionActive("pg_first", 0)
   CALL pdig_curr.setActionActive("pg_prev", 0)
   CALL pdig_curr.setActionActive("pg_next", 0)
   CALL pdig_curr.setActionActive("pg_last", 0)
 
   IF g_page_idx > 1 THEN
      CALL pdig_curr.setActionActive("pg_first", 1)
      CALL pdig_curr.setActionActive("pg_prev", 1)
   END IF
 
   IF g_page_idx < g_page_last THEN
      CALL pdig_curr.setActionActive("pg_next", 1)
      CALL pdig_curr.setActionActive("pg_last", 1)
   END IF
 
END FUNCTION
################################################################################
# Descriptions...: 組合多選資料
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_get_multiret()
   DEFINE li_i   LIKE type_t.num10
 
   IF g_qryparam.state = "c" THEN
      LET g_qryparam.return1 = ""
      FOR li_i = 1 TO gr_qry_sel.getLength()
         IF gr_qry_sel[li_i].check = "Y" THEN
            IF cl_null(g_qryparam.return1) THEN
               LET g_qryparam.return1 = gr_qry_sel[li_i].apbbdocno
            ELSE
               LET g_qryparam.return1 = g_qryparam.return1 , "|", gr_qry_sel[li_i].apbbdocno
            END IF
            #--------------
         END IF
      END FOR
   END IF
 
   IF g_qryparam.state = "m" THEN
      CALL g_qryparam.str_array.clear()
 
      FOR li_i = 1 TO gr_qry_sel.getLength()
         #DISPLAY "gr_qry_sel[",li_i,"] = ",gr_qry_sel[li_i].*
         LET g_qryparam.str_array[li_i] = gr_qry_sel[li_i].apbbdocno,'|', 
                                          gr_qry_sel[li_i].apbbdocdt,'|', 
                                          gr_qry_sel[li_i].apbb055,'|', 
                                          gr_qry_sel[li_i].apbb010,'|', 
                                          gr_qry_sel[li_i].apbb009
         #DISPLAY "g_qryparam.str_array[",li_i,"] = ",g_qryparam.str_array[li_i]
      END FOR
   END IF
 
END FUNCTION
################################################################################
# Descriptions...: 記錄已勾選的資料
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_qry_check(p_mode,p_check,p_start,p_end)
   DEFINE p_mode   STRING                 #選取方式
   DEFINE p_check  LIKE type_t.chr1    #選取狀態 Y/N
   DEFINE p_start  LIKE type_t.num10   #此頁選取範圍第一筆
   DEFINE p_end    LIKE type_t.num10   #此頁選取範圍最後一筆
   DEFINE li_i     LIKE type_t.num10
   DEFINE li_j     LIKE type_t.num10
   DEFINE l_check  LIKE type_t.chr1
   DEFINE l_str1   STRING
   DEFINE l_str2   STRING
 
   CASE
      #全部選取
      WHEN p_mode = "selectall"
         IF g_data_cnt > g_sel_limit THEN   #選取資料筆數超出系統容許上限
            #qry-005:選取資料筆數超出系統容許上限%1
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = g_sel_limit
            LET g_errparam.code   =  "9035" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         ELSE
            CALL gr_qry_sel.clear()   #150505
            FOR li_i = p_start TO p_end
               LET gr_qry[li_i].check = "Y"
               LET gr_qry_sel[li_i].* = gr_qry[li_i].*  #150505
            END FOR
           #-150505-mark--(s)
           #CALL gr_qry_sel.clear()
           #LET li_i = 1
           #FOREACH lcurs_qry_all INTO gr_qry_sel[li_i].*
           #   LET li_i = li_i + 1
           #END FOREACH
           #CALL gr_qry_sel.deleteElement(li_i)
           #-150505-mark--(e)
         END IF
      #全部取消選取
      WHEN p_mode = "selectnone"
         CALL gr_qry_sel.clear()
         FOR li_i = p_start TO p_end
            LET gr_qry[li_i].check = "N"
         END FOR
      #改變單筆資料的選取狀態/此頁全選/此頁取消選取
      WHEN p_end > 0 AND (cl_null(p_mode) OR p_mode = "selectpageall" OR p_mode = "selectpagenone")
         FOR li_i = p_start TO p_end
             #將所有欄位值串在一起,以利做開窗record唯一值判斷
            #要和已被選取的陣列(gr_qry_sel)做唯一值判斷比較
             LET l_str1 = gr_qry[li_i].apbb002, gr_qry[li_i].pmaal003, gr_qry[li_i].apbbcomp, gr_qry[li_i].ooefl003, gr_qry[li_i].apbbdocno, gr_qry[li_i].apbbdocdt, gr_qry[li_i].apbb055, gr_qry[li_i].apbb050, gr_qry[li_i].gzcbl004, gr_qry[li_i].apbb010, gr_qry[li_i].apbb009, gr_qry[li_i].apbb014, gr_qry[li_i].apbb025
             
            IF p_check = "Y" THEN
               IF gr_qry_sel.getLength() >= g_sel_limit THEN   #選取資料筆數超出系統容許上限
                  LET gr_qry[li_i].check = "N"
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_sel_limit
                  LET g_errparam.code   =  "9035" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  EXIT FOR
               ELSE
                  LET l_check = "Y"
                  LET gr_qry[li_i].check = "Y"             #此頁全選時,用程式批次改變值
                  FOR li_j = 1 TO gr_qry_sel.getLength()   #勾選清單中有此筆資料
                     LET l_str2 = gr_qry_sel[li_j].apbb002, gr_qry_sel[li_j].pmaal003, gr_qry_sel[li_j].apbbcomp, gr_qry_sel[li_j].ooefl003, gr_qry_sel[li_j].apbbdocno, gr_qry_sel[li_j].apbbdocdt, gr_qry_sel[li_j].apbb055, gr_qry_sel[li_j].apbb050, gr_qry_sel[li_j].gzcbl004, gr_qry_sel[li_j].apbb010, gr_qry_sel[li_j].apbb009, gr_qry_sel[li_j].apbb014, gr_qry_sel[li_j].apbb025
                     IF l_str1 = l_str2 THEN
                        LET l_check = ""
                        EXIT FOR
                     END IF
                  END FOR
                  IF l_check = "Y" THEN  #加入勾選清單
                     LET li_j = gr_qry_sel.getLength() + 1
                     LET gr_qry_sel[li_j].* = gr_qry[li_i].*
                  END IF
               END IF
            ELSE
               LET gr_qry[li_i].check = "N"             #此頁取消選取時,用程式批次改變值
               FOR li_j = 1 TO gr_qry_sel.getLength()   #刪除勾選清單中的此筆資料
                  LET l_str2 = gr_qry_sel[li_j].apbb002, gr_qry_sel[li_j].pmaal003, gr_qry_sel[li_j].apbbcomp, gr_qry_sel[li_j].ooefl003, gr_qry_sel[li_j].apbbdocno, gr_qry_sel[li_j].apbbdocdt, gr_qry_sel[li_j].apbb055, gr_qry_sel[li_j].apbb050, gr_qry_sel[li_j].gzcbl004, gr_qry_sel[li_j].apbb010, gr_qry_sel[li_j].apbb009, gr_qry_sel[li_j].apbb014, gr_qry_sel[li_j].apbb025
                  IF l_str1 = l_str2 THEN
                      CALL gr_qry_sel.deleteElement(li_j)
                     EXIT FOR
                  END IF
               END FOR
            END IF
         END FOR
   END CASE
END FUNCTION
################################################################################
# Descriptions...: 設定comboBox
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_setting_comboBox(p_col_str)
   DEFINE p_col_str           STRING,
          l_i                 LIKE type_t.num5,
          l_dzep011           LIKE dzep_t.dzep010, #系統分類碼
          l_dzeb001           LIKE dzeb_t.dzeb001, #表格代號
          l_gzcc003           LIKE gzcc_t.gzcc003, #系統分類碼
          l_gzcc004_str       STRING,              #系統分類值的字串 
          l_token             base.StringTokenizer,
          l_token_str         LIKE dzeb_t.dzeb002,
          l_str               STRING,
          l_parameter1        STRING,
          l_parameter2        STRING,
          l_parameter3        STRING,
          l_col_id            LIKE dzeb_t.dzeb002
          
   #優先處理 token
   LET l_token = base.StringTokenizer.create(p_col_str,"|")
 
   WHILE l_token.hasMoreTokens()
 
      LET l_token_str =l_token.nextToken()
 
      LET l_str = l_token_str
      #LET l_str = l_str.subString(1,l_str.getLength()-2)
      LET l_str = l_str.subString(1,l_str.getIndexOf("_",1)-1)
      LET l_col_id = l_str.trim()
      #DISPLAY "l_col_id = ",l_col_id
 
         
      #找出欄位的所屬表格代號
      SELECT dzeb001 INTO l_dzeb001 FROM dzeb_t WHERE dzeb002 = l_col_id
      
      IF l_col_id MATCHES "*stus" THEN
         #找出該表格的狀態碼欄位和系統分類碼
         SELECT DISTINCT gzcc003 INTO l_gzcc003 FROM gzcc_t WHERE gzcc001 = l_dzeb001
         #組合出表格有效的系統分類值的字串
         LET l_gzcc004_str = aapt415_01_setting_system_type_value_for_table(l_dzeb001)
 
         #DISPLAY "###########",l_token_str
         LET l_parameter1 = "formonly.",l_token_str
         LET l_parameter2 = l_gzcc003
         LET l_parameter3 = l_gzcc004_str
         
         #DISPLAY l_parameter1
         #DISPLAY l_parameter2
         #DISPLAY l_parameter3
         
         #組合 動態設定有選擇SCC資料的ComboBox選項 的程式碼,列出部分的系統分類值
         CALL cl_set_combo_scc_part(l_parameter1,l_parameter2,l_parameter3)
      ELSE
         #找出該欄位的系統分類碼
         SELECT dzep011 INTO l_dzep011 FROM dzep_t WHERE dzep002 = l_col_id
 
         #DISPLAY "###########",l_token_str
         LET l_parameter1 = "formonly.",l_token_str
         LET l_parameter2 = l_dzep011
         
         #DISPLAY l_parameter1
         #DISPLAY l_parameter2
         
         #組合 動態設定有選擇SCC資料的ComboBox選項 的程式碼,列出全部的系統分類值
         CALL cl_set_combo_scc(l_parameter1,l_parameter2)
      END IF
 
   END WHILE
END FUNCTION
################################################################################
# Descriptions...: 組合出表格有效的系統分類值的字串
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION aapt415_01_setting_system_type_value_for_table(p_table)
   DEFINE p_table     LIKE  gzcc_t.gzcc001,
          l_gzcc_d    DYNAMIC ARRAY OF  RECORD
            gzcc004     LIKE dzeb_t.dzeb001
                      END  RECORD,
          l_cnt       LIKE type_t.num5,
          ls_sql      STRING,
          r_str       STRING
 
   LET ls_sql = "SELECT gzcc004 FROM gzcc_t ",
               "WHERE gzcc001='",p_table,"' AND gzccstus='Y' ",
               "ORDER BY gzcc006 "
 
   LET r_str = ""
 
   PREPARE gzcc_prep FROM ls_sql
   DECLARE gzcc_curs CURSOR FOR gzcc_prep
   LET l_cnt = 1
   FOREACH gzcc_curs INTO l_gzcc_d[l_cnt].gzcc004
      LET r_str = r_str,l_gzcc_d[l_cnt].gzcc004,","
 
      LET l_cnt = l_cnt + 1
   END FOREACH
 
   CALL l_gzcc_d.deleteElement(l_cnt)
 
   #去掉最後面的逗號
   LET r_str = r_str.subString(1,r_str.getLength()-1)
   
   RETURN r_str
END FUNCTION

 
{</section>}
 
