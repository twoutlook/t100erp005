#該程式未解開Section, 採用最新樣板產出!
{<section id="aapr120.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2016-11-11 10:17:43), PR版次:0002(2017-01-09 17:19:49)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000017
#+ Filename...: aapr120
#+ Description: 供應商貨款對帳憑單列印
#+ Creator....: 08729(2016-11-11 10:17:43)
#+ Modifier...: 08729 -SD/PR- 06821
 
{</section>}
 
{<section id="aapr120.global" >}
#應用 r01 樣板自動產生(Version:21)
#add-point:填寫註解說明 name="global.memo"
#161229-00047#38  2017/01/09  By 06821    財務用供應商對象控制組,法人條件改為用 IN (site...)的方式,QBE時,傳入符合權限的法人；INPUT時傳入目前法人據點
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE gi_hiden_rep_temp    LIKE type_t.num5             
   DEFINE g_chk_jobid          LIKE type_t.num5               
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       apbb004 LIKE apbb_t.apbb004, 
   apbb004_desc LIKE type_t.chr80, 
   apbbcomp LIKE apbb_t.apbbcomp, 
   apbbcomp_desc LIKE type_t.chr80, 
   apbb003 LIKE apbb_t.apbb003, 
   apbbdocno LIKE apbb_t.apbbdocno, 
   apbbdocdt LIKE apbb_t.apbbdocdt, 
   apbb051 LIKE apbb_t.apbb051, 
   apbb052 LIKE apbb_t.apbb052, 
   apbb002 LIKE apbb_t.apbb002, 
   apbb044 LIKE apbb_t.apbb044, 
   apbbstus LIKE apbb_t.apbbstus,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable) name="global.variable"
DEFINE g_sql_ctrl            STRING
DEFINE g_wc_cs_comp          STRING
DEFINE g_wc_apbacomp         STRING                  #法人條件  #160705-00035#1
DEFINE g_wc_apbaorga         STRING                  #帳務組織條件
DEFINE g_ld                  LIKE glaa_t.glaald
DEFINE g_glaa001             LIKE glaa_t.glaa001
DEFINE g_wc_cs_site             STRING   #組織樹對應的範圍字串(帳務中心)
DEFINE g_wc_cs_ld               STRING   #組織樹對應的範圍字串(帳套)
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aapr120.main" >}
MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define name="main.define"
   
   #end add-point 
   #add-point:main段define (客製用) name="main.define_customerization"
   
   #end add-point 
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aap","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
   
   #end add-point   
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
      CALL util.JSON.parse(ls_js,g_master)      #r類背景參數解析入口
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
      CALL aapr120_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aapr120 WITH FORM cl_ap_formpath("aap",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aapr120_init()
 
      #進入選單 Menu (="N")
      CALL aapr120_ui_dialog()
 
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aapr120
   END IF
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aapr120.init" >}
#+ 初始化作業
PRIVATE FUNCTION aapr120_init()
   #add-point:init段define name="init.define"
   
   #end add-point
   #add-point:init段define (客製用) name="init.define_customerization"
   
   #end add-point
   
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化 name="init.init"
   #CALL cl_set_combo_scc_part('apbb003','8522','2,5,7,8,9') #對帳方式
   CALL cl_set_combo_scc('apbb044','9959')
   CALL cl_set_combo_scc('apbbstus','9962')
   CALL aapr120_qbe_clear()
   #LET g_master.apbb003 = "2"
   #LET g_master.apbb044 = "1"
   #LET g_master.apbbstus = "3"
   #CALL s_fin_azzi800_sons_query(g_today)
   #CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp   
   #CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
   #LET g_sql_ctrl = NULL
   #CALL s_control_get_supplier_sql('4',g_site,g_user,g_dept,'') RETURNING g_sub_success,g_sql_ctrl
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aapr120.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aapr120_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define name="ui_dialog.define"
   DEFINE  l_sql                STRING
   DEFINE  l_cnt_comp           LIKE type_t.num10
   #DEFINE g_wc_cs_comp          STRING
   #DEFINE g_wc_apbacomp         STRING                  #法人條件  #160705-00035#1
   #DEFINE g_wc_apbaorga         STRING                  #帳務組織條件
   #DEFINE g_ld                  LIKE glaa_t.glaald
   #end add-point
   #add-point:ui_dialog段define (客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.apbb004,g_master.apbbcomp,g_master.apbb003,g_master.apbb044,g_master.apbbstus  
 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbb004
            
            #add-point:AFTER FIELD apbb004 name="input.a.apbb004"
            IF NOT cl_null(g_master.apbb004) THEN
               CALL s_fin_account_center_sons_query('3',g_master.apbb004,g_today,'1')
               CALL s_fin_account_center_chk(g_master.apbb004,'','3',g_today) RETURNING g_sub_success,g_errno
               IF NOT g_sub_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_master.apbb004 = ''  
                  LET g_master.apbbcomp = ''
                  CALL s_desc_get_department_desc(g_master.apbbcomp) RETURNING g_master.apbbcomp_desc
                  CALL s_desc_get_department_desc(g_master.apbb004) RETURNING g_master.apbb004_desc
                  DISPLAY BY NAME g_master.apbb004_desc,g_master.apbbcomp_desc
                  NEXT FIELD CURRENT
               END IF
               
               CALL s_fin_orga_get_comp_ld(g_master.apbb004) RETURNING g_sub_success,g_errno,g_master.apbbcomp,g_ld
               CALL s_desc_get_department_desc(g_master.apbbcomp) RETURNING g_master.apbbcomp_desc
               DISPLAY BY NAME g_master.apbbcomp_desc
               IF NOT cl_null(g_master.apbbcomp)THEN
                  CALL s_fin_account_center_with_ld_chk(g_master.apbb004,g_ld,g_user,'3','Y','',g_today)
                       RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_master.apbb004 = ''
                     LET g_master.apbbcomp = ''
                     CALL s_desc_get_department_desc(g_master.apbbcomp) RETURNING g_master.apbbcomp_desc
                     CALL s_desc_get_department_desc(g_master.apbb004) RETURNING g_master.apbb004_desc
                     DISPLAY BY NAME g_master.apbb004_desc,g_master.apbbcomp_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
                  
               #OK就帶出該帳務中心的法人&帳套&幣別
               CALL s_fin_orga_get_comp_ld(g_master.apbb004) RETURNING g_sub_success,g_errno,g_master.apbbcomp,g_ld
               CALL s_desc_get_department_desc(g_master.apbbcomp) RETURNING g_master.apbbcomp_desc
               DISPLAY BY NAME g_master.apbbcomp_desc
               CALL s_ld_sel_glaa(g_ld,'glaa001') RETURNING g_sub_success,g_glaa001
               CALL s_fin_account_center_with_ld_chk(g_master.apbb004,g_ld,g_user,'3','Y','',g_today) RETURNING g_sub_success,g_errno   
               IF NOT g_sub_success THEN
                  LET g_master.apbbcomp = ''
               END IF
               #取得帳務組織下所屬成員
               CALL s_fin_account_center_sons_query('3',g_master.apbb004,g_today,'1')
               #取得帳務組織底下所屬的法人範圍
               CALL s_fin_account_center_comp_str() RETURNING g_wc_apbacomp
               CALL s_fin_account_center_sons_str() RETURNING g_wc_apbaorga
               #將取回的字串轉換為SQL條件
               CALL s_fin_get_wc_str(g_wc_apbacomp) RETURNING g_wc_apbacomp
               CALL s_fin_get_wc_str(g_wc_apbaorga) RETURNING g_wc_apbaorga
            END IF
            CALL s_desc_get_department_desc(g_master.apbb004) RETURNING g_master.apbb004_desc
            DISPLAY BY NAME g_master.apbb004_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbb004
            #add-point:BEFORE FIELD apbb004 name="input.b.apbb004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apbb004
            #add-point:ON CHANGE apbb004 name="input.g.apbb004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbbcomp
            
            #add-point:AFTER FIELD apbbcomp name="input.a.apbbcomp"
             IF NOT cl_null(g_master.apbbcomp) THEN
               CALL s_fin_azzi800_sons_query(g_today)
               IF NOT cl_null(g_master.apbb004) THEN 
                  CALL s_fin_account_center_sons_query('3',g_master.apbb004,g_today,'')
               END IF 
               CALL s_fin_account_center_sons_query('3',g_master.apbb004,g_today,'1')
               #取得帳務中心底下之組織範圍
               CALL s_fin_account_center_sons_str() RETURNING g_wc_cs_site
               CALL s_fin_get_wc_str(g_wc_cs_site) RETURNING g_wc_cs_site
               #取得帳務中心底下的帳套範圍               
               CALL s_fin_account_center_ld_str() RETURNING g_wc_cs_ld
               CALL s_fin_get_wc_str(g_wc_cs_ld) RETURNING g_wc_cs_ld
               #取得帳務中心底下的法人範圍
               CALL s_fin_account_center_comp_str()RETURNING g_wc_cs_comp
               CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
               #160907-00041#1 --e add
               #比對輸入的法人是否在帳務組織下
               IF s_chr_get_index_of(g_wc_cs_comp,g_master.apbbcomp,'1') = 0 THEN  
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aap-00127'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_master.apbbcomp = ''
                  CALL s_desc_get_department_desc(g_master.apbbcomp) RETURNING g_master.apbbcomp_desc
                  DISPLAY BY NAME g_master.apbbcomp_desc
                  NEXT FIELD CURRENT
               END IF
               #檢核法人是否有azzi800權限
               LET l_cnt_comp = 0                     
               LET l_sql = "SELECT COUNT(1) FROM ooef_t WHERE ooefent = ",g_enterprise," ",
                           "   AND ooef001 = '",g_master.apbbcomp,"' ",
                           "   AND ooef001 IN ",g_wc_cs_comp CLIPPED
               PREPARE sel_cnt_comp FROM l_sql
               EXECUTE sel_cnt_comp INTO l_cnt_comp
                  
               IF cl_null(l_cnt_comp)THEN LET l_cnt_comp = 0 END IF
               IF l_cnt_comp = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ais-00228'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()        
                  LET g_master.apbbcomp = ''
                  CALL s_desc_get_department_desc(g_master.apbbcomp) RETURNING g_master.apbbcomp_desc
                  DISPLAY BY NAME g_master.apbbcomp_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL s_desc_get_department_desc(g_master.apbbcomp) RETURNING g_master.apbbcomp_desc
            DISPLAY BY NAME g_master.apbbcomp_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbbcomp
            #add-point:BEFORE FIELD apbbcomp name="input.b.apbbcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apbbcomp
            #add-point:ON CHANGE apbbcomp name="input.g.apbbcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbb003
            #add-point:BEFORE FIELD apbb003 name="input.b.apbb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbb003
            
            #add-point:AFTER FIELD apbb003 name="input.a.apbb003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apbb003
            #add-point:ON CHANGE apbb003 name="input.g.apbb003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbb044
            #add-point:BEFORE FIELD apbb044 name="input.b.apbb044"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbb044
            
            #add-point:AFTER FIELD apbb044 name="input.a.apbb044"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apbb044
            #add-point:ON CHANGE apbb044 name="input.g.apbb044"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbbstus
            #add-point:BEFORE FIELD apbbstus name="input.b.apbbstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbbstus
            
            #add-point:AFTER FIELD apbbstus name="input.a.apbbstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE apbbstus
            #add-point:ON CHANGE apbbstus name="input.g.apbbstus"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.apbb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbb004
            #add-point:ON ACTION controlp INFIELD apbb004 name="input.c.apbb004"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.apbb004
            CALL q_ooef001_46()   
            LET g_master.apbb004 = g_qryparam.return1
            DISPLAY BY NAME g_master.apbb004
            NEXT FIELD apbb004
            #END add-point
 
 
         #Ctrlp:input.c.apbbcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbbcomp
            #add-point:ON ACTION controlp INFIELD apbbcomp name="input.c.apbbcomp"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.apbbcomp
            IF NOT cl_null(g_master.apbb004) THEN 
               CALL s_fin_azzi800_sons_query(g_today)                 
               CALL s_fin_account_center_sons_query('3',g_master.apbb004,g_today,'')
               CALL s_fin_account_center_comp_str()RETURNING g_wc_cs_comp
               CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
               LET g_qryparam.where = "ooef003 = 'Y' AND ooef001 IN ",g_wc_cs_comp CLIPPED
            ELSE
               CALL s_fin_azzi800_sons_query(g_today)
               CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp   
               CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
               LET g_qryparam.where = "ooef003 = 'Y'"
               LET g_qryparam.where = g_qryparam.where CLIPPED," AND ooef001 IN ",g_wc_cs_comp CLIPPED #160907-00041#1 add
            END IF 
            CALL q_ooef001()
            LET g_master.apbbcomp = g_qryparam.return1
            DISPLAY BY NAME g_master.apbbcomp
            NEXT FIELD apbbcomp
            #END add-point
 
 
         #Ctrlp:input.c.apbb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbb003
            #add-point:ON ACTION controlp INFIELD apbb003 name="input.c.apbb003"
            
            #END add-point
 
 
         #Ctrlp:input.c.apbb044
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbb044
            #add-point:ON ACTION controlp INFIELD apbb044 name="input.c.apbb044"
            
            #END add-point
 
 
         #Ctrlp:input.c.apbbstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbbstus
            #add-point:ON ACTION controlp INFIELD apbbstus name="input.c.apbbstus"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON apbbdocno,apbbdocdt,apbb051,apbb052,apbb002
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.apbbdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbbdocno
            #add-point:ON ACTION controlp INFIELD apbbdocno name="construct.c.apbbdocno"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " apbbcomp = '",g_master.apbbcomp,"'",
                                   " AND apbb004 = '",g_master.apbb004,"'",
                                   " AND apbb003 = '",g_master.apbb003,"'",
                                   " AND apbbstus <> 'X'"
            IF NOT cl_null(g_sql_ctrl) AND NOT g_sql_ctrl = ' 1=1'  THEN
               LET g_qryparam.where = g_qryparam.where," AND EXISTS (SELECT 1 FROM pmaa_t ",
                                                       "              WHERE pmaaent = ",g_enterprise,
                                                       "                AND ",g_sql_ctrl,
                                                       "                AND pmaaent = apbbent ",
                                                       "                AND pmaa001 = apbb002 )"
            END IF
            CALL q_apbbdocno()
            DISPLAY g_qryparam.return1 TO apbbdocno
            NEXT FIELD apbbdocno

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbbdocno
            #add-point:BEFORE FIELD apbbdocno name="construct.b.apbbdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbbdocno
            
            #add-point:AFTER FIELD apbbdocno name="construct.a.apbbdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbbdocdt
            #add-point:BEFORE FIELD apbbdocdt name="construct.b.apbbdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbbdocdt
            
            #add-point:AFTER FIELD apbbdocdt name="construct.a.apbbdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.apbbdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbbdocdt
            #add-point:ON ACTION controlp INFIELD apbbdocdt name="construct.c.apbbdocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbb051
            #add-point:BEFORE FIELD apbb051 name="construct.b.apbb051"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbb051
            
            #add-point:AFTER FIELD apbb051 name="construct.a.apbb051"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.apbb051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbb051
            #add-point:ON ACTION controlp INFIELD apbb051 name="construct.c.apbb051"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()
            DISPLAY g_qryparam.return1 TO apbb051
            NEXT FIELD apbb051
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbb052
            #add-point:BEFORE FIELD apbb052 name="construct.b.apbb052"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbb052
            
            #add-point:AFTER FIELD apbb052 name="construct.a.apbb052"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.apbb052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbb052
            #add-point:ON ACTION controlp INFIELD apbb052 name="construct.c.apbb052"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()
            DISPLAY g_qryparam.return1 TO apbb052
            NEXT FIELD apbb052
            #END add-point
 
 
         #Ctrlp:construct.c.apbb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD apbb002
            #add-point:ON ACTION controlp INFIELD apbb002 name="construct.c.apbb002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " (pmaa002 ='1' OR pmaa002 ='3') " #供廠商OR交易對象
            IF NOT cl_null(g_sql_ctrl) AND NOT g_sql_ctrl = ' 1=1'  THEN
               LET g_qryparam.where = g_qryparam.where," AND ",g_sql_ctrl
            END IF
            CALL q_pmaa001_25()
            DISPLAY g_qryparam.return1 TO apbb002
            NEXT FIELD apbb002

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD apbb002
            #add-point:BEFORE FIELD apbb002 name="construct.b.apbb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD apbb002
            
            #add-point:AFTER FIELD apbb002 name="construct.a.apbb002"
            
            #END add-point
            
 
 
 
            
            #add-point:其他管控 name="cs.other"
            
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
         
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
         
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL cl_qbe_display_condition(FGL_GETENV("QUERYPLANID"), g_user)
            CALL aapr120_get_buffer(l_dialog)
 
         ON ACTION qbe_select
            LET ls_wc = ""
            #需要用ITM類程式查詢方案在CONSTRUCT的功能，將值set到畫面上
            CALL cl_qbe_list("c") RETURNING ls_wc
            CALL aapr120_get_buffer(l_dialog)
            IF NOT cl_null(ls_wc) THEN
               LET g_master.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後 name="ui_dialog.qbe_select"
               
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION output
            LET g_action_choice = "output"
            ACCEPT DIALOG
 
         ON ACTION quickprint
            LET g_action_choice = "quickprint"
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear name="ui_dialog.qbeclear"
            INITIALIZE g_master.* TO NULL
            CALL aapr120_qbe_clear()
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         ON ACTION rpt_replang
            CALL cl_gr_set_dlang()
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aapr120_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
 
     #LET lc_param.wc = g_master.wc    #r類主程式不在意lc_param,不使用轉換
      #add-point:ui_dialog段exit dialog name="process.exit_dialog"
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(g_master)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aapr120_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aapr120_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF           
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule name="process.after_schedule"
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         LET gi_hiden_rep_temp = FALSE   #報表樣板設定
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aapr120.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aapr120_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define name="transfer_agrv.define"
   
   #end add-point
   #add-point:transfer_agrv段define (客製用) name="transfer_agrv.define_customerization"
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容 name="transfer.argv.define"
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aapr120.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aapr120_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_r01_status LIKE type_t.num5
   DEFINE l_token       base.StringTokenizer      #cmdrun使用
   DEFINE ls_next       STRING                    #cmdrun使用
   DEFINE l_cnt         LIKE type_t.num5          #cmdrun使用   
   DEFINE l_arg         DYNAMIC ARRAY OF STRING   ##cmdrun使用的陣列 
   #add-point:process段define name="process.define"
   DEFINE l_sql         STRING 
   #end add-point
   #add-point:process段define (客製用) name="process.define_customerization"
   
   #end add-point
 
   INITIALIZE lc_param TO NULL
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_r01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   LET g_rep_wcchp = cl_wcchp(g_master.wc,"apbbdocno,apbbdocdt,apbb051,apbb052,apbb002")  #取得列印條件
  
   #add-point:process段前處理 name="process.pre_process"
  IF cl_null(g_master.wc) THEN
     CALL l_arg.clear()
     LET l_token = base.StringTokenizer.create(ls_js,",")
     LET l_cnt = 1
     WHILE l_token.hasMoreTokens()
        LET ls_next = l_token.nextToken()
        LET l_arg[l_cnt] = ls_next
        LET l_cnt = l_cnt + 1
     END WHILE
     CALL l_arg.deleteElement(l_cnt)
     LET  g_master.wc = l_arg[01]   
  ELSE
  
  CASE g_master.apbbstus
     WHEN '1'
           LET g_master.wc = g_master.wc CLIPPED,"AND apbbstus = 'N' "	
     WHEN '2'
           LET g_master.wc = g_master.wc CLIPPED,"AND apbbstus = 'Y' "			
  END CASE
  CASE g_master.apbb044
     WHEN '1'
           LET g_master.wc = g_master.wc CLIPPED,"AND apbb044 = 0 "	
     WHEN '2'
           LET g_master.wc = g_master.wc CLIPPED,"AND apbb044 > 0 "			
  END CASE
    
	LET g_master.wc = g_master.wc CLIPPED,"AND apbbent  = ",g_enterprise,
                                        "AND apbb004 ='",g_master.apbb004,"'",
                                        "AND apbbcomp ='",g_master.apbbcomp,"'",
                                        "AND apbb003 ='",g_master.apbb003,"'",
                                        "AND apbbstus <> 'X'"
  END IF
  CALL aapr120_g01(g_master.wc)
   #end add-point
 
   #預先計算progressbar迴圈次數   #r類不用計算進度條
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress name="process.count_progress"
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aapr120_process_cs CURSOR FROM ls_sql
#  FOREACH aapr120_process_cs INTO
   #add-point:process段process name="process.process"
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" OR g_bgjob = "T" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理 name="process.foreground_finish"
      
      #end add-point
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理 name="process.background_finish"
      
      #end add-point
      CALL cl_schedule_exec_call(li_r01_status)
   END IF
END FUNCTION
 
{</section>}
 
{<section id="aapr120.get_buffer" >}
PRIVATE FUNCTION aapr120_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.apbb004 = p_dialog.getFieldBuffer('apbb004')
   LET g_master.apbbcomp = p_dialog.getFieldBuffer('apbbcomp')
   LET g_master.apbb003 = p_dialog.getFieldBuffer('apbb003')
   LET g_master.apbb044 = p_dialog.getFieldBuffer('apbb044')
   LET g_master.apbbstus = p_dialog.getFieldBuffer('apbbstus')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理 name="get_buffer.others"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aapr120.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"

################################################################################
# Descriptions...: 給預設值
# Memo...........:
# Usage..........: CALL aapr120_qbe_clear()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 16/11/16 By 08729
# Modify.........:
################################################################################
PRIVATE FUNCTION aapr120_qbe_clear()
DEFINE l_apbbcomp         LIKE apbb_t.apbbcomp   
   
      
      CALL cl_set_combo_scc_part('apbb003','8522','2,5,7,8,9') #對帳方式
      LET g_master.apbb003 = "2"
      LET g_master.apbb044 = "1"
      LET g_master.apbbstus = "2"
      CALL s_fin_create_account_center_tmp()  #161229-00047#38 add
      CALL s_fin_azzi800_sons_query(g_today)
      LET g_sql_ctrl = NULL
      #161229-00047#38 --s mark
      #SELECT ooef017 INTO l_apbbcomp
      #  FROM ooef_t
      # WHERE ooefent = g_enterprise
      #   AND ooef001 = g_site
      #   AND ooefstus = 'Y'
      #CALL s_control_get_supplier_sql_pmab('4',g_site,g_user,g_dept,'',l_apbbcomp) RETURNING g_sub_success,g_sql_ctrl
      #161229-00047#38 --e mark
      #161229-00047#38 --s add
      CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp   
      CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp      
      CALL s_control_get_supplier_sql_pmab('4',g_site,g_user,g_dept,'',g_wc_cs_comp) RETURNING g_sub_success,g_sql_ctrl 
      #161229-00047#38 --e add      
END FUNCTION

#end add-point
 
{</section>}
 
