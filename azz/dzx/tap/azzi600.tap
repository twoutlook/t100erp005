<add_points prog="azzi600" std_prog="azzi600" erpver="1.0" module="AZZ" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.azzi600_gzca004_def_gzca001" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL azzi600_gzca004_def_gzca001(p_gzca004)
#                  RETURNING r_gzca001
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi600_gzca004_def_gzca001(p_gzca004)
   DEFINE p_gzca004 LIKE gzca_t.gzca004
   DEFINE r_gzca001 LIKE gzca_t.gzca001
   
   LET r_gzca001  = 0
   IF p_gzca004 = 1 THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = 1
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = 1
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF 
      IF r_gzca001 >2000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 <=2000 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=2000 THEN
            LET r_gzca001 = "1"
         END IF
      END IF 
   END IF 
   IF p_gzca004 = 2 THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = 2
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = 2001
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF 
      IF r_gzca001 >4000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 <4001 AND gzca001 >=2001 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=4000 THEN
            LET r_gzca001 = "2001"
         END IF
      END IF 
   END IF 
   IF p_gzca004 = 3 THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = 3
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = "4001"
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF
      IF r_gzca001 >6000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 <6001 AND gzca001 >=4001 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=6000 THEN
            LET r_gzca001 = "4001"
         END IF
      END IF
   END IF
   IF p_gzca004 = "4" THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = '4'
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = "6001"
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF
      IF r_gzca001 >8000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 <8001 AND gzca001 >=6001 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=8000 THEN
            LET r_gzca001 = "6000"
         END IF
      END IF
   END IF 
   IF p_gzca004 = "5" THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = '5'
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = "8001"
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF
      IF r_gzca001 >10000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 <10001 AND gzca001 >=8001 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=10000 THEN
            LET r_gzca001 = "8001"
         END IF
      END IF
   END IF 
   IF p_gzca004 = "6" THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = '6'
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = "16001"
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF
      IF r_gzca001 >18000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 <18001 AND gzca001 >=16001 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=18000 THEN
            LET r_gzca001 = "16001"
         END IF
      END IF
   END IF 
   IF p_gzca004 = "7" THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = '7'
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = "18001"
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF
      IF r_gzca001 >20000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 >=18001 AND gzca001 <= 20000 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=20000 THEN
            LET r_gzca001 = "18001"
         END IF
      END IF
   END IF 
   IF p_gzca004 = "8" THEN
      SELECT max(gzca001) INTO r_gzca001 FROM gzca_t
       WHERE gzca004 = '8'
      IF cl_null(r_gzca001) THEN
         LET r_gzca001 = "20001"
      ELSE
         LET r_gzca001 = r_gzca001 +1
      END IF
      IF r_gzca001 >50000 THEN
         SELECT min(gzca001+1) INTO r_gzca001 FROM gzca_t 
          WHERE gzca001 >=20001 AND gzca001 <= 50000 AND gzca001+1 NOT IN (select gzca001 FROM gzca_t)
         IF r_gzca001 >=50000 THEN
            LET r_gzca001 = "20001"
         END IF
      END IF
   END IF 

   RETURN r_gzca001
END FUNCTION]]>
</point>
  <point name="function.azzi600_get_gzzq004" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: SCC13,17,50的狀態碼在單身的系統應用欄位三顯示action id多語言說明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: p_gzcb004   狀態碼action id
# Return code....: r_gzzq004   action id多語言說明
# Date & Author..: 14/04/24 By Sarah
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi600_get_gzzq004(p_gzcb004)
   DEFINE p_gzcb004    LIKE gzcb_t.gzcb004
   DEFINE r_gzzq004    LIKE gzzq_t.gzzq004

   #抓取點擊狀態圖示時出現的popmenu上的ACTION動詞，例如：核准(approved)
   LET r_gzzq004 = ''
   SELECT gzzq004 INTO r_gzzq004
     FROM gzzq_t
    WHERE gzzq001 = 'standard'
      AND gzzq002 = p_gzcb004
      AND gzzq003 = g_dlang
   RETURN r_gzzq004
END FUNCTION]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         #INITIALIZE g_ref_fields TO NULL
         #LET g_ref_fields[1] = g_gzca_m.gzca001
         #LET g_ref_fields[2] = g_gzcb_d[l_ac].gzcb002
         #CALL ap_ref_array2(g_ref_fields," SELECT gzcbl004,gzcbl005 FROM gzcbl_t WHERE gzcbl001 = ? AND gzcbl002 = ? AND gzcbl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
         #LET g_gzcb_d[l_ac].gzcbl004 = g_rtn_fields[1]
         #LET g_gzcb_d[l_ac].gzcbl005 = g_rtn_fields[2]
         #DISPLAY BY NAME g_gzcb_d[l_ac].gzcbl004
         #DISPLAY BY NAME g_gzcb_d[l_ac].gzcbl005
         #抓取點擊狀態圖示時出現的popmenu上的ACTION動詞顯示在系統應用欄位三
         IF g_gzca_m.gzca001=13 OR g_gzca_m.gzca001=17 OR g_gzca_m.gzca001=50 THEN
            LET g_gzcb_d[l_ac].gzcb005=azzi600_get_gzzq004(g_gzcb_d[l_ac].gzcb004)            
         END IF]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET g_sql = "SELECT  UNIQUE gzcb002,gzcbl004,gzcbl005,gzcbl006,gzcb013,gzcb012,gzcb015,gzcb003,gzcb004,gzcb005,gzcb006,gzcb007,gzcb008,gzcb009,gzcb010,gzcb011,gzcb014 FROM gzcb_t",    
               " LEFT JOIN gzcbl_t ON gzcb001 = gzcbl001 AND gzcb002 = gzcbl002 AND gzcbl003 = '",g_lang,"'",
               " WHERE gzcb001=?"
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY gzcb_t.gzcb012"]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="construct.c.gzca001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzca001  #顯示到畫面上

            NEXT FIELD gzca001                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzcacrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzcacrtdp  #顯示到畫面上

            NEXT FIELD gzcacrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzcacrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzcacrtid  #顯示到畫面上

            NEXT FIELD gzcacrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzcamodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzcamodid  #顯示到畫面上

            NEXT FIELD gzcamodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzcaowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzcaowndp  #顯示到畫面上

            NEXT FIELD gzcaowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzcaownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzcaownid  #顯示到畫面上

            NEXT FIELD gzcaownid                     #返回原欄位

]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      DELETE FROM gzcbl_t
       WHERE gzcbl001=g_gzca_m.gzca001
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzcbl_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      DELETE FROM gzcal_t
       WHERE gzcal001=g_gzca_m.gzca001
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzcal_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF FGL_GETENV("DGENV") ='c' THEN
         IF g_gzca_m.gzca002 = 'Y' THEN
            CALL cl_err('','azz-00050',1)
            RETURN
         END IF
      END IF]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_gzca_m.gzca001 = '100' OR g_gzca_m.gzca001 = '104' THEN 
      CALL cl_set_comp_visible("gzcbl006",TRUE)
   ELSE
      CALL cl_set_comp_visible("gzcbl006",FALSE)   
   END IF
   IF g_gzca_m.gzca001 = '24' THEN
      CALL cl_set_comp_visible("gzcb015",TRUE)
   ELSE
      CALL cl_set_comp_visible("gzcb015",FALSE)   
   END IF]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.gzca001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzca_m.gzca001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzca_m.gzca001 != g_gzca001_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzca_t WHERE "||"gzca001 = '"||g_gzca_m.gzca001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_gzca_m.gzca001) THEN 
            END IF 
]]>
</point>
  <point name="input.a.gzca004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF p_cmd = 'a'  THEN
               CALL azzi600_gzca004_def_gzca001(g_gzca_m.gzca004)
                  RETURNING g_gzca_m.gzca001 
               DISPLAY BY NAME g_gzca_m.gzca001
            END IF             ]]>
</point>
  <point name="input.a.gzcacrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcacrtdp_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_gzca_m.gzcacrtdp_desc
]]>
</point>
  <point name="input.a.gzcacrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcacrtid_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_gzca_m.gzcacrtid_desc
]]>
</point>
  <point name="input.a.gzcamodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcamodid_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_gzca_m.gzcamodid_desc
]]>
</point>
  <point name="input.a.gzcaowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcaowndp_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_gzca_m.gzcaowndp_desc
]]>
</point>
  <point name="input.a.gzcaownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcaownid_desc = '('|| g_rtn_fields[1] || ')'
            DISPLAY BY NAME g_gzca_m.gzcaownid_desc
]]>
</point>
  <point name="input.a.page1.gzcb002" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzca_m.gzca001) AND NOT cl_null(g_gzcb_d[l_ac].gzcb002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzca_m.gzca001 != g_gzca001_t OR g_gzcb_d[l_ac].gzcb002 != g_gzcb_d_t.gzcb002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzcb_t WHERE "||"gzcb001 = '"||g_gzca_m.gzca001 ||"' AND "|| "gzcb002 = '"||g_gzcb_d[l_ac].gzcb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.gzcb012" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_gzcb_d[l_ac].gzcb012) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzcb_d[l_ac].gzcb012 <> g_gzcb_d_t.gzcb012))) THEN 
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt FROM gzcb_t WHERE gzcb001 =g_gzca_m.gzca001 AND gzcb012 = g_gzcb_d[l_ac].gzcb012
                  IF l_cnt > 0 THEN 
                     CALL cl_err(g_gzcb_d[l_ac].gzcb012,'std-00004',0)
                     LET g_gzcb_d[l_ac].gzcb012 = g_gzcb_d_t.gzcb012
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.b.page1.gzcb012" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               INSERT INTO gzcbl_t VALUES(g_gzca_m.gzca001,g_gzcb_d[l_ac].gzcb002,g_dlang,g_gzcb_d[l_ac].gzcbl004,g_gzcb_d[l_ac].gzcbl005)]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[                ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF FGL_GETENV("DGENV") ='c' THEN
               LET g_gzcb_d[l_ac].gzcb013 = "N"
            END IF 
            SELECT MAX(gzcb012)+10 INTO g_gzcb_d[l_ac].gzcb012
              FROM gzcb_t
             WHERE gzcb001 = g_gzca_m.gzca001
            IF cl_null(g_gzcb_d[l_ac].gzcb012) THEN LET g_gzcb_d[l_ac].gzcb012 = 10 END IF
            LET  g_gzcb_d[l_ac].gzcb012 = g_gzcb_d[l_ac].gzcb012 USING "&&&&"]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[             IF l_cmd = 'u' THEN
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = g_gzca_m.gzca001
                LET g_ref_fields[2] = g_gzcb_d[l_ac].gzcb002
                CALL ap_ref_array2(g_ref_fields," SELECT gzcbl004,gzcbl005 FROM gzcbl_t WHERE gzcbl001 = ? AND gzcbl002 = ? AND gzcbl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                LET g_gzcb_d[l_ac].gzcbl004 = g_rtn_fields[1]
                LET g_gzcb_d[l_ac].gzcbl005 = g_rtn_fields[2]
                DISPLAY BY NAME g_gzcb_d[l_ac].gzcbl004
                DISPLAY BY NAME g_gzcb_d[l_ac].gzcbl005
             END IF  
             
             IF l_cmd = 'u' THEN
                IF FGL_GETENV("DGENV") ='c'  AND g_gzcb_d[l_ac].gzcb013 = 'Y' THEN
                   CALL cl_err('','azz-00051',1)
                   RETURN
                END IF 
             END IF 

            IF g_gzca_m.gzca001=13 OR g_gzca_m.gzca001=17 OR g_gzca_m.gzca001=50 THEN
               LET g_gzcb_d[l_ac].gzcb005=azzi600_get_gzzq004(g_gzcb_d[l_ac].gzcb004)               
            END IF]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE  l_gzcb_max      LIKE gzcb_t.gzcb012]]>
</point>
  <point name="input.detail_input.page1.update_item" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               IF  NOT cl_null(g_gzca_m.gzca001) AND NOT cl_null(g_gzcb_d[l_ac].gzcb002) THEN 
                   CALL n_gzcbl(g_gzca_m.gzca001,g_gzcb_d[l_ac].gzcb002)
                   INITIALIZE g_ref_fields TO NULL 
                   LET g_ref_fields[1] = g_gzca_m.gzca001
                   LET g_ref_fields[2] = g_gzcb_d[l_ac].gzcb002
                   CALL ap_ref_array2(g_ref_fields," SELECT gzcbl004,gzcbl005,gzcbl006 FROM gzcbl_t WHERE gzcbl001 = ? AND gzcbl002 = ? AND gzcbl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
                   LET g_gzcb_d[l_ac].gzcbl004 = g_rtn_fields[1] 
                   LET g_gzcb_d[l_ac].gzcbl005 = g_rtn_fields[2]
                   LET g_gzcb_d[l_ac].gzcbl006 = g_rtn_fields[3]                    
                   DISPLAY BY NAME g_gzcb_d[l_ac].gzcbl004,g_gzcb_d[l_ac].gzcbl005,g_gzcb_d[l_ac].gzcbl006    
                END IF   ]]>
</point>
  <point name="input.g.gzca004" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF p_cmd = 'a'  THEN
               CALL azzi600_gzca004_def_gzca001(g_gzca_m.gzca004)
                  RETURNING g_gzca_m.gzca001 
               DISPLAY BY NAME g_gzca_m.gzca001
            END IF            ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            NEXT FIELD gzca004]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               IF  NOT cl_null(g_gzca_m.gzca001) THEN 
                   CALL n_gzcal(g_gzca_m.gzca001)
                   INITIALIZE g_ref_fields TO NULL
                   LET g_ref_fields[1] = g_gzca_m.gzca001
                   CALL ap_ref_array2(g_ref_fields,"SELECT gzcal003,gzcal004 FROM gzcal_t WHERE gzcal001=? AND gzcal002='"||g_lang||"'","") RETURNING g_rtn_fields
                   LET g_gzca_m.gzcal003 = g_rtn_fields[1]
                   LET g_gzca_m.gzcal004 = g_rtn_fields[2]
                   DISPLAY BY NAME g_gzca_m.gzcal003
                END IF]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      LET g_gzca_m.gzcastus = "Y"
      IF FGL_GETENV("DGENV") ='s' THEN
         LET g_gzca_m.gzca002 = 'Y'
      ELSE
         LET g_gzca_m.gzca002 = 'N'
      END IF]]>
</point>
  <point name="menu.syn_status" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               CALL azzi600_01_synchro_status()]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      IF FGL_GETENV("DGENV") ='c' THEN
         IF g_gzca_m.gzca002 = 'Y' THEN
            CALL cl_err('','azz-00049',1)
            RETURN
         END IF
      END IF      ]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("gzcb005",TRUE)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF g_gzca_m.gzca001=13 OR g_gzca_m.gzca001=17 OR g_gzca_m.gzca001=50 THEN
      CALL cl_set_comp_entry("gzcb005",FALSE)
   END IF]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_gzca_m.gzca001
   LET g_ref_fields[2] = g_gzcb_d[l_ac].gzcb002
   CALL ap_ref_array2(g_ref_fields," SELECT gzcbl004,gzcbl005,gzcbl006 FROM gzcbl_t WHERE gzcbl001 = ? AND gzcbl002 = ? AND gzcbl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzcb_d[l_ac].gzcbl004 = g_rtn_fields[1] 
   LET g_gzcb_d[l_ac].gzcbl005 = g_rtn_fields[2]
   LET g_gzcb_d[l_ac].gzcbl006 = g_rtn_fields[3]   
   DISPLAY BY NAME g_gzcb_d[l_ac].gzcbl004,g_gzcb_d[l_ac].gzcbl005,g_gzcb_d[l_ac].gzcbl006]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzca_m.gzca001
   CALL ap_ref_array2(g_ref_fields," SELECT gzcal003,gzcal004 FROM gzcal_t WHERE gzcal001 = ? AND gzcal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzca_m.gzcal003 = g_rtn_fields[1] 
   LET g_gzca_m.gzcal004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_gzca_m.gzcal003,g_gzca_m.gzcal004
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcaownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzca_m.gzcaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcaowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzca_m.gzcaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcacrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzca_m.gzcacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcacrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzca_m.gzcacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzca_m.gzcamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzca_m.gzcamodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzca_m.gzcamodid_desc
]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzca004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzca004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzca004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzca001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzca001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzcal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzcal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzca002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzca002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzca002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzca003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzca003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzca003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzcastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcacrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzcamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzcamoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcbl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcbl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcbl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.gzcb014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.gzcb014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.gzcb014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzca004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzca001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzca001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzcal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzcal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzcal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzcal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzcal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzcal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzca002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzca002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzca002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzca003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzca003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzca003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzcastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzcastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzcastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzca004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzca001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzcal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzcal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzca002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzca003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzcastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcbl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcbl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcbl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzcb014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzcb014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzcb014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcbl004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcbl005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcbl006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzcb014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   LET g_gzca_m.gzcastus = "Y"]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.lang0.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.lang0.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.lang0.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.inactive" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.active" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="azzi600.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi600_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_gzcb_d.clear()    #g_gzcb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF azzi600_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE gzcb002,'','','',gzcb013,gzcb012,gzcb015,gzcb003,gzcb004,gzcb005,gzcb006, 
          gzcb007,gzcb008,gzcb009,gzcb010,gzcb011,gzcb014 FROM gzcb_t",   
                  " INNER JOIN gzca_t ON gzca001 = gzcb001 ",
 
                  #" LEFT JOIN gzcbl_t ON gzca001 = gzcbl001 AND gzcb002 = gzcbl002 AND gzcbl003 = '",g_lang,"'",
                  
                  " LEFT JOIN gzcbl_t ON gzca001 = gzcbl001 AND gzcb002 = gzcbl002 AND gzcbl003 = '",g_lang,"'",
                  " WHERE gzcb001=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY gzcb_t.gzcb002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE azzi600_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR azzi600_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_gzca_m.gzca001
 
                                               
      FOREACH b_fill_cs INTO g_gzcb_d[l_ac].gzcb002,g_gzcb_d[l_ac].gzcbl004,g_gzcb_d[l_ac].gzcbl005, 
          g_gzcb_d[l_ac].gzcbl006,g_gzcb_d[l_ac].gzcb013,g_gzcb_d[l_ac].gzcb012,g_gzcb_d[l_ac].gzcb015, 
          g_gzcb_d[l_ac].gzcb003,g_gzcb_d[l_ac].gzcb004,g_gzcb_d[l_ac].gzcb005,g_gzcb_d[l_ac].gzcb006, 
          g_gzcb_d[l_ac].gzcb007,g_gzcb_d[l_ac].gzcb008,g_gzcb_d[l_ac].gzcb009,g_gzcb_d[l_ac].gzcb010, 
          g_gzcb_d[l_ac].gzcb011,g_gzcb_d[l_ac].gzcb014
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_gzcb_d.deleteElement(g_gzcb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE azzi600_pb
 
   
END FUNCTION
]]>
</section>
  <section id="azzi600.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION azzi600_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL azzi600_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="azzi600.browser_fill" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi600_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzca_m.* TO NULL
   CALL g_gzcb_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "gzca001"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE gzca001 ",
 
                        " FROM gzca_t ",
                              " ",
                              " LEFT JOIN gzcb_t ON gzca001 = gzcb001 ",
 
 
                              " LEFT JOIN gzcal_t ON gzca001 = gzcal001 AND gzcal002 = '",g_lang,"' ", 
                              " LEFT JOIN gzcbl_t ON gzca001 = gzcbl001 AND gzcb002 = gzcbl002 AND gzcbl003 = '",g_lang,"' ", 
                       " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzca_t")
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE gzca001 ",
 
                        " FROM gzca_t ", 
                              " ",
                              " LEFT JOIN gzcal_t ON gzca001 = gzcal001 AND gzcal002 = '",g_lang,"' ",
                        "WHERE  ",l_wc CLIPPED, cl_sql_add_filter("gzca_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照gzca001,'',gzca002 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT gzcastus,gzca001,'',gzca002,DENSE_RANK() OVER(ORDER BY gzca001 ", 
          g_order,") AS RANK ",
                        " FROM gzca_t ",
                              " ",
                              " LEFT JOIN gzcb_t ON gzca001 = gzcb001 ",
 
 
                              " LEFT JOIN gzcal_t ON gzca001 = gzcal001 AND gzcal002 = '",g_lang,"' ",
                              " LEFT JOIN gzcbl_t ON gzca001 = gzcbl001 AND gzcb002 = gzcbl002 AND gzcbl003 = '",g_lang,"' ",
                       " ",
                       " WHERE  ",g_wc," AND ",g_wc2, cl_sql_add_filter("gzca_t")
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT gzcastus,gzca001,'',gzca002,DENSE_RANK() OVER(ORDER BY gzca001 ", 
          g_order,") AS RANK ",
                       " FROM gzca_t ",
                            "  ",
                            "  LEFT JOIN gzcal_t ON gzca001 = gzcal001 AND gzcal002 = '",g_lang,"' ",
                       " WHERE  ", g_wc, cl_sql_add_filter("gzca_t")
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT gzcastus,gzca001,'',gzca002 FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzca001,g_browser[g_cnt].b_gzca001_desc, 
       g_browser[g_cnt].b_gzca002
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_gzca001
      CALL ap_ref_array2(g_ref_fields,"SELECT gzcal003 FROM gzcal_t WHERE gzcal001=? AND gzcal002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_gzca001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_gzca001_desc
 
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="azzi600.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION azzi600_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY gzca001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL azzi600_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="azzi600.construct" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi600_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzca_m.* TO NULL
   CALL g_gzcb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzca004,gzca001,gzcal003,gzcal004,gzca002,gzca003,gzcastus,gzcaownid, 
          gzcaowndp,gzcacrtid,gzcacrtdp,gzcacrtdt,gzcamodid,gzcamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<gzcaownid>>----
         #ON ACTION controlp INFIELD gzcaownid
         #   CALL q_common('gzca_t','gzcaownid',TRUE,FALSE,g_gzca_m.gzcaownid) RETURNING ls_return
         #   DISPLAY ls_return TO gzcaownid
         #   NEXT FIELD gzcaownid  
         #
         ##----<<gzcaowndp>>----
         #ON ACTION controlp INFIELD gzcaowndp
         #   CALL q_common('gzca_t','gzcaowndp',TRUE,FALSE,g_gzca_m.gzcaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO gzcaowndp
         #   NEXT FIELD gzcaowndp
         #
         ##----<<gzcacrtid>>----
         #ON ACTION controlp INFIELD gzcacrtid
         #   CALL q_common('gzca_t','gzcacrtid',TRUE,FALSE,g_gzca_m.gzcacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO gzcacrtid
         #   NEXT FIELD gzcacrtid
         #
         ##----<<gzcacrtdp>>----
         #ON ACTION controlp INFIELD gzcacrtdp
         #   CALL q_common('gzca_t','gzcacrtdp',TRUE,FALSE,g_gzca_m.gzcacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO gzcacrtdp
         #   NEXT FIELD gzcacrtdp
         #
         ##----<<gzcamodid>>----
         #ON ACTION controlp INFIELD gzcamodid
         #   CALL q_common('gzca_t','gzcamodid',TRUE,FALSE,g_gzca_m.gzcamodid) RETURNING ls_return
         #   DISPLAY ls_return TO gzcamodid
         #   NEXT FIELD gzcamodid
         #
         ##----<<gzcacnfid>>----
         ##ON ACTION controlp INFIELD gzcacnfid
         ##   CALL q_common('gzca_t','gzcacnfid',TRUE,FALSE,g_gzca_m.gzcacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO gzcacnfid
         ##   NEXT FIELD gzcacnfid
         #
         ##----<<gzcapstid>>----
         ##ON ACTION controlp INFIELD gzcapstid
         ##   CALL q_common('gzca_t','gzcapstid',TRUE,FALSE,g_gzca_m.gzcapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO gzcapstid
         ##   NEXT FIELD gzcapstid
         
         ##----<<gzcacrtdt>>----
         AFTER FIELD gzcacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzcamoddt>>----
         AFTER FIELD gzcamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzcacnfdt>>----
         #AFTER FIELD gzcacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzcapstdt>>----
         #AFTER FIELD gzcapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<gzca004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzca004
            #add-point:BEFORE FIELD gzca004
            {<point name="construct.b.gzca004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzca004
            
            #add-point:AFTER FIELD gzca004
            {<point name="construct.a.gzca004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzca004
         ON ACTION controlp INFIELD gzca004
            #add-point:ON ACTION controlp INFIELD gzca004
            {<point name="construct.c.gzca004" />}
            #END add-point
 
         #----<<gzca001>>----
         #Ctrlp:construct.c.gzca001
         ON ACTION controlp INFIELD gzca001
            #add-point:ON ACTION controlp INFIELD gzca001
            {<point name="construct.c.gzca001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzca001
            #add-point:BEFORE FIELD gzca001
            {<point name="construct.b.gzca001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzca001
            
            #add-point:AFTER FIELD gzca001
            {<point name="construct.a.gzca001" />}
            #END add-point
            
 
         #----<<gzcal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcal003
            #add-point:BEFORE FIELD gzcal003
            {<point name="construct.b.gzcal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcal003
            
            #add-point:AFTER FIELD gzcal003
            {<point name="construct.a.gzcal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzcal003
         ON ACTION controlp INFIELD gzcal003
            #add-point:ON ACTION controlp INFIELD gzcal003
            {<point name="construct.c.gzcal003" />}
            #END add-point
 
         #----<<gzcal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcal004
            #add-point:BEFORE FIELD gzcal004
            {<point name="construct.b.gzcal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcal004
            
            #add-point:AFTER FIELD gzcal004
            {<point name="construct.a.gzcal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzcal004
         ON ACTION controlp INFIELD gzcal004
            #add-point:ON ACTION controlp INFIELD gzcal004
            {<point name="construct.c.gzcal004" />}
            #END add-point
 
         #----<<gzca002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzca002
            #add-point:BEFORE FIELD gzca002
            {<point name="construct.b.gzca002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzca002
            
            #add-point:AFTER FIELD gzca002
            {<point name="construct.a.gzca002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzca002
         ON ACTION controlp INFIELD gzca002
            #add-point:ON ACTION controlp INFIELD gzca002
            {<point name="construct.c.gzca002" />}
            #END add-point
 
         #----<<gzca003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzca003
            #add-point:BEFORE FIELD gzca003
            {<point name="construct.b.gzca003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzca003
            
            #add-point:AFTER FIELD gzca003
            {<point name="construct.a.gzca003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzca003
         ON ACTION controlp INFIELD gzca003
            #add-point:ON ACTION controlp INFIELD gzca003
            {<point name="construct.c.gzca003" />}
            #END add-point
 
         #----<<gzcastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcastus
            #add-point:BEFORE FIELD gzcastus
            {<point name="construct.b.gzcastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcastus
            
            #add-point:AFTER FIELD gzcastus
            {<point name="construct.a.gzcastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzcastus
         ON ACTION controlp INFIELD gzcastus
            #add-point:ON ACTION controlp INFIELD gzcastus
            {<point name="construct.c.gzcastus" />}
            #END add-point
 
         #----<<gzcaownid>>----
         #Ctrlp:construct.c.gzcaownid
         ON ACTION controlp INFIELD gzcaownid
            #add-point:ON ACTION controlp INFIELD gzcaownid
            {<point name="construct.c.gzcaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzcaownid
            #add-point:BEFORE FIELD gzcaownid
            {<point name="construct.b.gzcaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcaownid
            
            #add-point:AFTER FIELD gzcaownid
            {<point name="construct.a.gzcaownid" />}
            #END add-point
            
 
         #----<<gzcaownid_desc>>----
         #----<<gzcaowndp>>----
         #Ctrlp:construct.c.gzcaowndp
         ON ACTION controlp INFIELD gzcaowndp
            #add-point:ON ACTION controlp INFIELD gzcaowndp
            {<point name="construct.c.gzcaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzcaowndp
            #add-point:BEFORE FIELD gzcaowndp
            {<point name="construct.b.gzcaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcaowndp
            
            #add-point:AFTER FIELD gzcaowndp
            {<point name="construct.a.gzcaowndp" />}
            #END add-point
            
 
         #----<<gzcaowndp_desc>>----
         #----<<gzcacrtid>>----
         #Ctrlp:construct.c.gzcacrtid
         ON ACTION controlp INFIELD gzcacrtid
            #add-point:ON ACTION controlp INFIELD gzcacrtid
            {<point name="construct.c.gzcacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzcacrtid
            #add-point:BEFORE FIELD gzcacrtid
            {<point name="construct.b.gzcacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcacrtid
            
            #add-point:AFTER FIELD gzcacrtid
            {<point name="construct.a.gzcacrtid" />}
            #END add-point
            
 
         #----<<gzcacrtid_desc>>----
         #----<<gzcacrtdp>>----
         #Ctrlp:construct.c.gzcacrtdp
         ON ACTION controlp INFIELD gzcacrtdp
            #add-point:ON ACTION controlp INFIELD gzcacrtdp
            {<point name="construct.c.gzcacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzcacrtdp
            #add-point:BEFORE FIELD gzcacrtdp
            {<point name="construct.b.gzcacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcacrtdp
            
            #add-point:AFTER FIELD gzcacrtdp
            {<point name="construct.a.gzcacrtdp" />}
            #END add-point
            
 
         #----<<gzcacrtdp_desc>>----
         #----<<gzcacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcacrtdt
            #add-point:BEFORE FIELD gzcacrtdt
            {<point name="construct.b.gzcacrtdt" />}
            #END add-point
 
         #----<<gzcamodid>>----
         #Ctrlp:construct.c.gzcamodid
         ON ACTION controlp INFIELD gzcamodid
            #add-point:ON ACTION controlp INFIELD gzcamodid
            {<point name="construct.c.gzcamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzcamodid
            #add-point:BEFORE FIELD gzcamodid
            {<point name="construct.b.gzcamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcamodid
            
            #add-point:AFTER FIELD gzcamodid
            {<point name="construct.a.gzcamodid" />}
            #END add-point
            
 
         #----<<gzcamodid_desc>>----
         #----<<gzcamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcamoddt
            #add-point:BEFORE FIELD gzcamoddt
            {<point name="construct.b.gzcamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON gzcb002,gzcbl004,gzcbl005,gzcbl006,gzcb013,gzcb012,gzcb003,gzcb004,gzcb005, 
          gzcb006,gzcb007,gzcb008,gzcb009,gzcb010,gzcb011,gzcb014
           FROM s_detail1[1].gzcb002,s_detail1[1].gzcbl004,s_detail1[1].gzcbl005,s_detail1[1].gzcbl006, 
               s_detail1[1].gzcb013,s_detail1[1].gzcb012,s_detail1[1].gzcb003,s_detail1[1].gzcb004,s_detail1[1].gzcb005, 
               s_detail1[1].gzcb006,s_detail1[1].gzcb007,s_detail1[1].gzcb008,s_detail1[1].gzcb009,s_detail1[1].gzcb010, 
               s_detail1[1].gzcb011,s_detail1[1].gzcb014
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<gzcb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb002
            #add-point:BEFORE FIELD gzcb002
            {<point name="construct.b.page1.gzcb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb002
            
            #add-point:AFTER FIELD gzcb002
            {<point name="construct.a.page1.gzcb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb002
         ON ACTION controlp INFIELD gzcb002
            #add-point:ON ACTION controlp INFIELD gzcb002
            {<point name="construct.c.page1.gzcb002" />}
            #END add-point
 
         #----<<gzcbl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcbl004
            #add-point:BEFORE FIELD gzcbl004
            {<point name="construct.b.page1.gzcbl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcbl004
            
            #add-point:AFTER FIELD gzcbl004
            {<point name="construct.a.page1.gzcbl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcbl004
         ON ACTION controlp INFIELD gzcbl004
            #add-point:ON ACTION controlp INFIELD gzcbl004
            {<point name="construct.c.page1.gzcbl004" />}
            #END add-point
 
         #----<<gzcbl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcbl005
            #add-point:BEFORE FIELD gzcbl005
            {<point name="construct.b.page1.gzcbl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcbl005
            
            #add-point:AFTER FIELD gzcbl005
            {<point name="construct.a.page1.gzcbl005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcbl005
         ON ACTION controlp INFIELD gzcbl005
            #add-point:ON ACTION controlp INFIELD gzcbl005
            {<point name="construct.c.page1.gzcbl005" />}
            #END add-point
 
         #----<<gzcbl006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcbl006
            #add-point:BEFORE FIELD gzcbl006
            {<point name="construct.b.page1.gzcbl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcbl006
            
            #add-point:AFTER FIELD gzcbl006
            {<point name="construct.a.page1.gzcbl006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcbl006
         ON ACTION controlp INFIELD gzcbl006
            #add-point:ON ACTION controlp INFIELD gzcbl006
            {<point name="construct.c.page1.gzcbl006" />}
            #END add-point
 
         #----<<gzcb013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb013
            #add-point:BEFORE FIELD gzcb013
            {<point name="construct.b.page1.gzcb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb013
            
            #add-point:AFTER FIELD gzcb013
            {<point name="construct.a.page1.gzcb013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb013
         ON ACTION controlp INFIELD gzcb013
            #add-point:ON ACTION controlp INFIELD gzcb013
            {<point name="construct.c.page1.gzcb013" />}
            #END add-point
 
         #----<<gzcb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb012
            #add-point:BEFORE FIELD gzcb012
            {<point name="construct.b.page1.gzcb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb012
            
            #add-point:AFTER FIELD gzcb012
            {<point name="construct.a.page1.gzcb012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb012
         ON ACTION controlp INFIELD gzcb012
            #add-point:ON ACTION controlp INFIELD gzcb012
            {<point name="construct.c.page1.gzcb012" />}
            #END add-point
 
         #----<<gzcb015>>----
         #----<<gzcb003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb003
            #add-point:BEFORE FIELD gzcb003
            {<point name="construct.b.page1.gzcb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb003
            
            #add-point:AFTER FIELD gzcb003
            {<point name="construct.a.page1.gzcb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb003
         ON ACTION controlp INFIELD gzcb003
            #add-point:ON ACTION controlp INFIELD gzcb003
            {<point name="construct.c.page1.gzcb003" />}
            #END add-point
 
         #----<<gzcb004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb004
            #add-point:BEFORE FIELD gzcb004
            {<point name="construct.b.page1.gzcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb004
            
            #add-point:AFTER FIELD gzcb004
            {<point name="construct.a.page1.gzcb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb004
         ON ACTION controlp INFIELD gzcb004
            #add-point:ON ACTION controlp INFIELD gzcb004
            {<point name="construct.c.page1.gzcb004" />}
            #END add-point
 
         #----<<gzcb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb005
            #add-point:BEFORE FIELD gzcb005
            {<point name="construct.b.page1.gzcb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb005
            
            #add-point:AFTER FIELD gzcb005
            {<point name="construct.a.page1.gzcb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb005
         ON ACTION controlp INFIELD gzcb005
            #add-point:ON ACTION controlp INFIELD gzcb005
            {<point name="construct.c.page1.gzcb005" />}
            #END add-point
 
         #----<<gzcb006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb006
            #add-point:BEFORE FIELD gzcb006
            {<point name="construct.b.page1.gzcb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb006
            
            #add-point:AFTER FIELD gzcb006
            {<point name="construct.a.page1.gzcb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb006
         ON ACTION controlp INFIELD gzcb006
            #add-point:ON ACTION controlp INFIELD gzcb006
            {<point name="construct.c.page1.gzcb006" />}
            #END add-point
 
         #----<<gzcb007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb007
            #add-point:BEFORE FIELD gzcb007
            {<point name="construct.b.page1.gzcb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb007
            
            #add-point:AFTER FIELD gzcb007
            {<point name="construct.a.page1.gzcb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb007
         ON ACTION controlp INFIELD gzcb007
            #add-point:ON ACTION controlp INFIELD gzcb007
            {<point name="construct.c.page1.gzcb007" />}
            #END add-point
 
         #----<<gzcb008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb008
            #add-point:BEFORE FIELD gzcb008
            {<point name="construct.b.page1.gzcb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb008
            
            #add-point:AFTER FIELD gzcb008
            {<point name="construct.a.page1.gzcb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb008
         ON ACTION controlp INFIELD gzcb008
            #add-point:ON ACTION controlp INFIELD gzcb008
            {<point name="construct.c.page1.gzcb008" />}
            #END add-point
 
         #----<<gzcb009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb009
            #add-point:BEFORE FIELD gzcb009
            {<point name="construct.b.page1.gzcb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb009
            
            #add-point:AFTER FIELD gzcb009
            {<point name="construct.a.page1.gzcb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb009
         ON ACTION controlp INFIELD gzcb009
            #add-point:ON ACTION controlp INFIELD gzcb009
            {<point name="construct.c.page1.gzcb009" />}
            #END add-point
 
         #----<<gzcb010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb010
            #add-point:BEFORE FIELD gzcb010
            {<point name="construct.b.page1.gzcb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb010
            
            #add-point:AFTER FIELD gzcb010
            {<point name="construct.a.page1.gzcb010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb010
         ON ACTION controlp INFIELD gzcb010
            #add-point:ON ACTION controlp INFIELD gzcb010
            {<point name="construct.c.page1.gzcb010" />}
            #END add-point
 
         #----<<gzcb011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb011
            #add-point:BEFORE FIELD gzcb011
            {<point name="construct.b.page1.gzcb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb011
            
            #add-point:AFTER FIELD gzcb011
            {<point name="construct.a.page1.gzcb011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb011
         ON ACTION controlp INFIELD gzcb011
            #add-point:ON ACTION controlp INFIELD gzcb011
            {<point name="construct.c.page1.gzcb011" />}
            #END add-point
 
         #----<<gzcb014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb014
            #add-point:BEFORE FIELD gzcb014
            {<point name="construct.b.page1.gzcb014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb014
            
            #add-point:AFTER FIELD gzcb014
            {<point name="construct.a.page1.gzcb014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzcb014
         ON ACTION controlp INFIELD gzcb014
            #add-point:ON ACTION controlp INFIELD gzcb014
            {<point name="construct.c.page1.gzcb014" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi600.default_search" ver="3" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi600_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " gzca001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="azzi600.delete" ver="5" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi600_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_gzca_m.gzca001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE azzi600_master_referesh USING g_gzca_m.gzca001 INTO g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaowndp,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtdp, 
       g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamoddt
   
   LET g_master_multi_table_t.gzcal001 = g_gzca_m.gzca001
LET g_master_multi_table_t.gzcal003 = g_gzca_m.gzcal003
LET g_master_multi_table_t.gzcal004 = g_gzca_m.gzcal004
 
 
   CALL azzi600_show()
   
   CALL s_transaction_begin()
 
   OPEN azzi600_cl USING g_gzca_m.gzca001
 
   IF STATUS THEN
      CALL cl_err("OPEN azzi600_cl:", STATUS, 1)
      CLOSE azzi600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH azzi600_cl INTO g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzcal003,g_gzca_m.gzcal004,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaownid_desc,g_gzca_m.gzcaowndp, 
       g_gzca_m.gzcaowndp_desc,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtid_desc,g_gzca_m.gzcacrtdp,g_gzca_m.gzcacrtdp_desc, 
       g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamodid_desc,g_gzca_m.gzcamoddt              
        #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzca_m.gzca001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi600_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_gzca001_t = g_gzca_m.gzca001
 
 
      DELETE FROM gzca_t
       WHERE  gzca001 = g_gzca_m.gzca001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_gzca_m.gzca001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzcb_t
       WHERE  gzcb001 = g_gzca_m.gzca001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzcb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_gzcb_d.clear() 
 
     
      CALL azzi600_ui_browser_refresh()  
      CALL azzi600_ui_headershow()  
      CALL azzi600_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL azzi600_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL azzi600_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzcal001
   LET l_field_keys[01] = 'gzcal001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'gzcal002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzcal_t')
 
      
      #單身多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gzcbl001'
                  LET l_field_keys[02] = 'gzcbl003'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gzcbl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.gzcbl003
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzcbl_t')
 
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE azzi600_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzca_m.gzca001,'D')
    
END FUNCTION
]]>
</section>
  <section id="azzi600.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi600_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM gzcb_t
       WHERE 
         gzcb001 = ps_keys_bak[1] AND gzcb002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="azzi600.description" ver="23" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000311
#+ 
#+ Filename...: azzi600
#+ Description: 系統分類碼維護作業
#+ Creator....: 00845(2013/06/01)
#+ Modifier...: 02295(2013/08/23)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="azzi600.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION azzi600_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzcb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi600_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi600_detail AS ",
                "SELECT * FROM gzcb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi600_detail SELECT * FROM gzcb_t 
                                         WHERE  gzcb001 = g_gzca001_t
 
   
   #將key修正為調整後   
   UPDATE azzi600_detail 
      #更新key欄位
      SET gzcb001 = g_gzca_m.gzca001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO gzcb_t SELECT * FROM azzi600_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi600_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #此段落由子樣板a38產生
   DROP TABLE azzi600_detail_lang
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi600_detail_lang AS ",
                "SELECT * FROM gzcbl_t "
   PREPARE repro_gzcbl_t FROM ls_sql
   EXECUTE repro_gzcbl_t
   FREE repro_gzcbl_t
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi600_detail_lang SELECT * FROM gzcbl_t 
                                             WHERE  gzcbl001 = g_gzca001_t
 
   
   #將key修正為調整後   
   UPDATE azzi600_detail_lang 
      #更新key欄位
      SET gzcbl001 = g_gzca_m.gzca001
 
  
   #將資料塞回原table   
   INSERT INTO gzcbl_t SELECT * FROM azzi600_detail_lang
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi600_detail_lang
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzca001_t = g_gzca_m.gzca001
 
   
   DROP TABLE azzi600_detail
   
END FUNCTION
]]>
</section>
  <section id="azzi600.detail_show" ver="3" status="" src="s">
<![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION azzi600_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="azzi600.fetch" ver="3" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi600_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzca_m.gzca001 = g_browser[g_current_idx].b_gzca001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi600_master_referesh USING g_gzca_m.gzca001 INTO g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaowndp,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtdp, 
       g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamoddt
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzca_t",SQLCA.sqlcode,1)
      INITIALIZE g_gzca_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL azzi600_show()
 
END FUNCTION
]]>
</section>
  <section id="azzi600.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION azzi600_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="azzi600.filter" ver="5" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION azzi600_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gzca001,gzca002
                          FROM s_browse[1].b_gzca001,s_browse[1].b_gzca002
 
         BEFORE CONSTRUCT
               DISPLAY azzi600_filter_parser('gzca001') TO s_browse[1].b_gzca001
            DISPLAY azzi600_filter_parser('gzca002') TO s_browse[1].b_gzca002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL azzi600_filter_show('gzca001')
   CALL azzi600_filter_show('gzca002')
 
END FUNCTION
]]>
</section>
  <section id="azzi600.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi600_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="azzi600.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION azzi600_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = azzi600_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="azzi600.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzca_m        RECORD
       gzca004 LIKE gzca_t.gzca004, 
   gzca001 LIKE gzca_t.gzca001, 
   gzcal003 LIKE gzcal_t.gzcal003, 
   gzcal004 LIKE gzcal_t.gzcal004, 
   gzca002 LIKE gzca_t.gzca002, 
   gzca003 LIKE gzca_t.gzca003, 
   gzcastus LIKE gzca_t.gzcastus, 
   gzcaownid LIKE gzca_t.gzcaownid, 
   gzcaownid_desc LIKE type_t.chr80, 
   gzcaowndp LIKE gzca_t.gzcaowndp, 
   gzcaowndp_desc LIKE type_t.chr80, 
   gzcacrtid LIKE gzca_t.gzcacrtid, 
   gzcacrtid_desc LIKE type_t.chr80, 
   gzcacrtdp LIKE gzca_t.gzcacrtdp, 
   gzcacrtdp_desc LIKE type_t.chr80, 
   gzcacrtdt DATETIME YEAR TO SECOND, 
   gzcamodid LIKE gzca_t.gzcamodid, 
   gzcamodid_desc LIKE type_t.chr80, 
   gzcamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzcb_d        RECORD
       gzcb002 LIKE gzcb_t.gzcb002, 
   gzcbl004 LIKE gzcbl_t.gzcbl004, 
   gzcbl005 LIKE gzcbl_t.gzcbl005, 
   gzcbl006 LIKE gzcbl_t.gzcbl006, 
   gzcb013 LIKE gzcb_t.gzcb013, 
   gzcb012 LIKE gzcb_t.gzcb012, 
   gzcb015 LIKE gzcb_t.gzcb015, 
   gzcb003 LIKE gzcb_t.gzcb003, 
   gzcb004 LIKE gzcb_t.gzcb004, 
   gzcb005 LIKE gzcb_t.gzcb005, 
   gzcb006 LIKE gzcb_t.gzcb006, 
   gzcb007 LIKE gzcb_t.gzcb007, 
   gzcb008 LIKE gzcb_t.gzcb008, 
   gzcb009 LIKE gzcb_t.gzcb009, 
   gzcb010 LIKE gzcb_t.gzcb010, 
   gzcb011 LIKE gzcb_t.gzcb011, 
   gzcb014 LIKE gzcb_t.gzcb014
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_gzca_m          type_g_gzca_m
DEFINE g_gzca_m_t        type_g_gzca_m
 
   DEFINE g_gzca001_t LIKE gzca_t.gzca001
 
 
DEFINE g_gzcb_d          DYNAMIC ARRAY OF type_g_gzcb_d
DEFINE g_gzcb_d_t        type_g_gzcb_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzca001 LIKE gzca_t.gzca001,
   b_gzca001_desc LIKE type_t.chr80,
      b_gzca002 LIKE gzca_t.gzca002
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzca001 LIKE gzca_t.gzca001,
   b_gzca001_desc LIKE type_t.chr80,
      b_gzca002 LIKE gzca_t.gzca002
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      gzcal001 LIKE gzcal_t.gzcal001,
      gzcal003 LIKE gzcal_t.gzcal003,
      gzcal004 LIKE gzcal_t.gzcal004
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      gzcbl001 LIKE gzcbl_t.gzcbl001,
      gzcbl002 LIKE gzcbl_t.gzcbl002,
      gzcbl003 LIKE gzcbl_t.gzcbl003,
      gzcbl004 LIKE gzcbl_t.gzcbl004,
      gzcbl005 LIKE gzcbl_t.gzcbl005,
      gzcbl006 LIKE gzcbl_t.gzcbl006
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="azzi600.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION azzi600_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gzcb_d.getLength() THEN
         LET g_detail_idx = g_gzcb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzcb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzcb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="azzi600.init" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi600_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('gzcastus','17','N,Y')
 
      CALL cl_set_combo_scc('gzca004','4') 
   CALL cl_set_combo_scc('gzcb015','200') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL azzi600_default_search()
    
END FUNCTION
]]>
</section>
  <section id="azzi600.input" ver="4" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi600_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzcb002,'','','',gzcb013,gzcb012,gzcb015,gzcb003,gzcb004,gzcb005,gzcb006, 
       gzcb007,gzcb008,gzcb009,gzcb010,gzcb011,gzcb014 FROM gzcb_t WHERE gzcb001=? AND gzcb002=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE azzi600_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi600_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi600_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzcal003,g_gzca_m.gzcal004,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="azzi600.input.body" ver="3" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzcb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzcb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi600_b_fill()
            LET g_rec_b = g_gzcb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi600_cl USING g_gzca_m.gzca001
 
            IF STATUS THEN
               CALL cl_err("OPEN azzi600_cl:", STATUS, 1)
               CLOSE azzi600_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzcb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzcb_d[l_ac].gzcb002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzcb_d_t.* = g_gzcb_d[l_ac].*  #BACKUP
               CALL azzi600_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL azzi600_set_no_entry_b(l_cmd)
               IF NOT azzi600_lock_b("gzcb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi600_bcl INTO g_gzcb_d[l_ac].gzcb002,g_gzcb_d[l_ac].gzcbl004,g_gzcb_d[l_ac].gzcbl005, 
                      g_gzcb_d[l_ac].gzcbl006,g_gzcb_d[l_ac].gzcb013,g_gzcb_d[l_ac].gzcb012,g_gzcb_d[l_ac].gzcb015, 
                      g_gzcb_d[l_ac].gzcb003,g_gzcb_d[l_ac].gzcb004,g_gzcb_d[l_ac].gzcb005,g_gzcb_d[l_ac].gzcb006, 
                      g_gzcb_d[l_ac].gzcb007,g_gzcb_d[l_ac].gzcb008,g_gzcb_d[l_ac].gzcb009,g_gzcb_d[l_ac].gzcb010, 
                      g_gzcb_d[l_ac].gzcb011,g_gzcb_d[l_ac].gzcb014
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_gzcb_d_t.gzcb002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL azzi600_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.gzcbl001 = g_gzca_m.gzca001
LET g_detail_multi_table_t.gzcbl002 = g_gzcb_d[l_ac].gzcb002
LET g_detail_multi_table_t.gzcbl003 = g_dlang
LET g_detail_multi_table_t.gzcbl004 = g_gzcb_d[l_ac].gzcbl004
LET g_detail_multi_table_t.gzcbl005 = g_gzcb_d[l_ac].gzcbl005
LET g_detail_multi_table_t.gzcbl006 = g_gzcb_d[l_ac].gzcbl006
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'gzcbl001'
            LET l_var_keys[01] = g_gzca_m.gzca001
            LET l_field_keys[02] = 'gzcbl002'
            LET l_var_keys[02] = g_gzcb_d[l_ac].gzcb002
            LET l_field_keys[03] = 'gzcbl003'
            LET l_var_keys[03] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'gzcbl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzcb_d[l_ac].* TO NULL 
                  LET g_gzcb_d[l_ac].gzcb013 = "Y"
 
 
            LET g_gzcb_d_t.* = g_gzcb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi600_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi600_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzcb_d[li_reproduce_target].* = g_gzcb_d[li_reproduce].*
 
               LET g_gzcb_d[li_reproduce_target].gzcb002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            LET g_detail_multi_table_t.gzcbl001 = g_gzca_m.gzca001
LET g_detail_multi_table_t.gzcbl002 = g_gzcb_d[l_ac].gzcb002
LET g_detail_multi_table_t.gzcbl003 = g_dlang
LET g_detail_multi_table_t.gzcbl004 = g_gzcb_d[l_ac].gzcbl004
LET g_detail_multi_table_t.gzcbl005 = g_gzcb_d[l_ac].gzcbl005
LET g_detail_multi_table_t.gzcbl006 = g_gzcb_d[l_ac].gzcbl006
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzcb_t 
             WHERE  gzcb001 = g_gzca_m.gzca001
 
               AND gzcb002 = g_gzcb_d[l_ac].gzcb002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzca_m.gzca001
               LET gs_keys[2] = g_gzcb_d[g_detail_idx].gzcb002
               CALL azzi600_insert_b('gzcb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzcb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzcb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi600_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzca_m.gzca001 = g_detail_multi_table_t.gzcbl001 AND
         g_gzcb_d[l_ac].gzcb002 = g_detail_multi_table_t.gzcbl002 AND
         g_gzcb_d[l_ac].gzcbl004 = g_detail_multi_table_t.gzcbl004 AND
         g_gzcb_d[l_ac].gzcbl005 = g_detail_multi_table_t.gzcbl005 AND
         g_gzcb_d[l_ac].gzcbl006 = g_detail_multi_table_t.gzcbl006 THEN
         ELSE 
            LET l_var_keys[01] = g_gzca_m.gzca001
            LET l_field_keys[01] = 'gzcbl001'
            LET l_var_keys[02] = g_gzcb_d[l_ac].gzcb002
            LET l_field_keys[02] = 'gzcbl002'
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'gzcbl003'
            LET l_vars[01] = g_gzcb_d[l_ac].gzcbl004
            LET l_fields[01] = 'gzcbl004'
            LET l_vars[02] = g_gzcb_d[l_ac].gzcbl005
            LET l_fields[02] = 'gzcbl005'
            LET l_vars[03] = g_gzcb_d[l_ac].gzcbl006
            LET l_fields[03] = 'gzcbl006'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzcbl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzcbl002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.gzcbl003
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzcbl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzcb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzcb_d.deleteElement(l_ac)
               NEXT FIELD gzcb002
            END IF
         
            IF g_gzcb_d[l_ac].gzcb002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM gzcb_t
                WHERE  gzcb001 = g_gzca_m.gzca001 AND
 
                      gzcb002 = g_gzcb_d_t.gzcb002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzcb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gzcbl001'
                  LET l_field_keys[02] = 'gzcbl002'
                  LET l_field_keys[03] = 'gzcbl003'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gzcbl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.gzcbl002
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.gzcbl003
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzcbl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi600_bcl
               LET l_count = g_gzcb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzca_m.gzca001
               LET gs_keys[2] = g_gzcb_d[g_detail_idx].gzcb002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL azzi600_delete_b('gzcb_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<gzcb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb002
            #add-point:BEFORE FIELD gzcb002
            {<point name="input.b.page1.gzcb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb002
            
            #add-point:AFTER FIELD gzcb002
            {<point name="input.a.page1.gzcb002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb002
            #add-point:ON CHANGE gzcb002
            {<point name="input.g.page1.gzcb002" />}
            #END add-point
 
         #----<<gzcbl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcbl004
            #add-point:BEFORE FIELD gzcbl004
            {<point name="input.b.page1.gzcbl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcbl004
            
            #add-point:AFTER FIELD gzcbl004
            {<point name="input.a.page1.gzcbl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcbl004
            #add-point:ON CHANGE gzcbl004
            {<point name="input.g.page1.gzcbl004" />}
            #END add-point
 
         #----<<gzcbl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcbl005
            #add-point:BEFORE FIELD gzcbl005
            {<point name="input.b.page1.gzcbl005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcbl005
            
            #add-point:AFTER FIELD gzcbl005
            {<point name="input.a.page1.gzcbl005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcbl005
            #add-point:ON CHANGE gzcbl005
            {<point name="input.g.page1.gzcbl005" />}
            #END add-point
 
         #----<<gzcbl006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcbl006
            #add-point:BEFORE FIELD gzcbl006
            {<point name="input.b.page1.gzcbl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcbl006
            
            #add-point:AFTER FIELD gzcbl006
            {<point name="input.a.page1.gzcbl006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcbl006
            #add-point:ON CHANGE gzcbl006
            {<point name="input.g.page1.gzcbl006" />}
            #END add-point
 
         #----<<gzcb013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb013
            #add-point:BEFORE FIELD gzcb013
            {<point name="input.b.page1.gzcb013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb013
            
            #add-point:AFTER FIELD gzcb013
            {<point name="input.a.page1.gzcb013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb013
            #add-point:ON CHANGE gzcb013
            {<point name="input.g.page1.gzcb013" />}
            #END add-point
 
         #----<<gzcb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb012
            #add-point:BEFORE FIELD gzcb012
            {<point name="input.b.page1.gzcb012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb012
            
            #add-point:AFTER FIELD gzcb012
            {<point name="input.a.page1.gzcb012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb012
            #add-point:ON CHANGE gzcb012
            {<point name="input.g.page1.gzcb012" />}
            #END add-point
 
         #----<<gzcb015>>----
         #----<<gzcb003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb003
            #add-point:BEFORE FIELD gzcb003
            {<point name="input.b.page1.gzcb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb003
            
            #add-point:AFTER FIELD gzcb003
            {<point name="input.a.page1.gzcb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb003
            #add-point:ON CHANGE gzcb003
            {<point name="input.g.page1.gzcb003" />}
            #END add-point
 
         #----<<gzcb004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb004
            #add-point:BEFORE FIELD gzcb004
            {<point name="input.b.page1.gzcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb004
            
            #add-point:AFTER FIELD gzcb004
            {<point name="input.a.page1.gzcb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb004
            #add-point:ON CHANGE gzcb004
            {<point name="input.g.page1.gzcb004" />}
            #END add-point
 
         #----<<gzcb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb005
            #add-point:BEFORE FIELD gzcb005
            {<point name="input.b.page1.gzcb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb005
            
            #add-point:AFTER FIELD gzcb005
            {<point name="input.a.page1.gzcb005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb005
            #add-point:ON CHANGE gzcb005
            {<point name="input.g.page1.gzcb005" />}
            #END add-point
 
         #----<<gzcb006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb006
            #add-point:BEFORE FIELD gzcb006
            {<point name="input.b.page1.gzcb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb006
            
            #add-point:AFTER FIELD gzcb006
            {<point name="input.a.page1.gzcb006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb006
            #add-point:ON CHANGE gzcb006
            {<point name="input.g.page1.gzcb006" />}
            #END add-point
 
         #----<<gzcb007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb007
            #add-point:BEFORE FIELD gzcb007
            {<point name="input.b.page1.gzcb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb007
            
            #add-point:AFTER FIELD gzcb007
            {<point name="input.a.page1.gzcb007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb007
            #add-point:ON CHANGE gzcb007
            {<point name="input.g.page1.gzcb007" />}
            #END add-point
 
         #----<<gzcb008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb008
            #add-point:BEFORE FIELD gzcb008
            {<point name="input.b.page1.gzcb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb008
            
            #add-point:AFTER FIELD gzcb008
            {<point name="input.a.page1.gzcb008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb008
            #add-point:ON CHANGE gzcb008
            {<point name="input.g.page1.gzcb008" />}
            #END add-point
 
         #----<<gzcb009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb009
            #add-point:BEFORE FIELD gzcb009
            {<point name="input.b.page1.gzcb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb009
            
            #add-point:AFTER FIELD gzcb009
            {<point name="input.a.page1.gzcb009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb009
            #add-point:ON CHANGE gzcb009
            {<point name="input.g.page1.gzcb009" />}
            #END add-point
 
         #----<<gzcb010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb010
            #add-point:BEFORE FIELD gzcb010
            {<point name="input.b.page1.gzcb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb010
            
            #add-point:AFTER FIELD gzcb010
            {<point name="input.a.page1.gzcb010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb010
            #add-point:ON CHANGE gzcb010
            {<point name="input.g.page1.gzcb010" />}
            #END add-point
 
         #----<<gzcb011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb011
            #add-point:BEFORE FIELD gzcb011
            {<point name="input.b.page1.gzcb011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb011
            
            #add-point:AFTER FIELD gzcb011
            {<point name="input.a.page1.gzcb011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb011
            #add-point:ON CHANGE gzcb011
            {<point name="input.g.page1.gzcb011" />}
            #END add-point
 
         #----<<gzcb014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcb014
            #add-point:BEFORE FIELD gzcb014
            {<point name="input.b.page1.gzcb014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcb014
            
            #add-point:AFTER FIELD gzcb014
            {<point name="input.a.page1.gzcb014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcb014
            #add-point:ON CHANGE gzcb014
            {<point name="input.g.page1.gzcb014" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<gzcb002>>----
         #Ctrlp:input.c.page1.gzcb002
         ON ACTION controlp INFIELD gzcb002
            #add-point:ON ACTION controlp INFIELD gzcb002
            {<point name="input.c.page1.gzcb002" />}
            #END add-point
 
         #----<<gzcbl004>>----
         #Ctrlp:input.c.page1.gzcbl004
         ON ACTION controlp INFIELD gzcbl004
            #add-point:ON ACTION controlp INFIELD gzcbl004
            {<point name="input.c.page1.gzcbl004" />}
            #END add-point
 
         #----<<gzcbl005>>----
         #Ctrlp:input.c.page1.gzcbl005
         ON ACTION controlp INFIELD gzcbl005
            #add-point:ON ACTION controlp INFIELD gzcbl005
            {<point name="input.c.page1.gzcbl005" />}
            #END add-point
 
         #----<<gzcbl006>>----
         #Ctrlp:input.c.page1.gzcbl006
         ON ACTION controlp INFIELD gzcbl006
            #add-point:ON ACTION controlp INFIELD gzcbl006
            {<point name="input.c.page1.gzcbl006" />}
            #END add-point
 
         #----<<gzcb013>>----
         #Ctrlp:input.c.page1.gzcb013
         ON ACTION controlp INFIELD gzcb013
            #add-point:ON ACTION controlp INFIELD gzcb013
            {<point name="input.c.page1.gzcb013" />}
            #END add-point
 
         #----<<gzcb012>>----
         #Ctrlp:input.c.page1.gzcb012
         ON ACTION controlp INFIELD gzcb012
            #add-point:ON ACTION controlp INFIELD gzcb012
            {<point name="input.c.page1.gzcb012" />}
            #END add-point
 
         #----<<gzcb015>>----
         #----<<gzcb003>>----
         #Ctrlp:input.c.page1.gzcb003
         ON ACTION controlp INFIELD gzcb003
            #add-point:ON ACTION controlp INFIELD gzcb003
            {<point name="input.c.page1.gzcb003" />}
            #END add-point
 
         #----<<gzcb004>>----
         #Ctrlp:input.c.page1.gzcb004
         ON ACTION controlp INFIELD gzcb004
            #add-point:ON ACTION controlp INFIELD gzcb004
            {<point name="input.c.page1.gzcb004" />}
            #END add-point
 
         #----<<gzcb005>>----
         #Ctrlp:input.c.page1.gzcb005
         ON ACTION controlp INFIELD gzcb005
            #add-point:ON ACTION controlp INFIELD gzcb005
            {<point name="input.c.page1.gzcb005" />}
            #END add-point
 
         #----<<gzcb006>>----
         #Ctrlp:input.c.page1.gzcb006
         ON ACTION controlp INFIELD gzcb006
            #add-point:ON ACTION controlp INFIELD gzcb006
            {<point name="input.c.page1.gzcb006" />}
            #END add-point
 
         #----<<gzcb007>>----
         #Ctrlp:input.c.page1.gzcb007
         ON ACTION controlp INFIELD gzcb007
            #add-point:ON ACTION controlp INFIELD gzcb007
            {<point name="input.c.page1.gzcb007" />}
            #END add-point
 
         #----<<gzcb008>>----
         #Ctrlp:input.c.page1.gzcb008
         ON ACTION controlp INFIELD gzcb008
            #add-point:ON ACTION controlp INFIELD gzcb008
            {<point name="input.c.page1.gzcb008" />}
            #END add-point
 
         #----<<gzcb009>>----
         #Ctrlp:input.c.page1.gzcb009
         ON ACTION controlp INFIELD gzcb009
            #add-point:ON ACTION controlp INFIELD gzcb009
            {<point name="input.c.page1.gzcb009" />}
            #END add-point
 
         #----<<gzcb010>>----
         #Ctrlp:input.c.page1.gzcb010
         ON ACTION controlp INFIELD gzcb010
            #add-point:ON ACTION controlp INFIELD gzcb010
            {<point name="input.c.page1.gzcb010" />}
            #END add-point
 
         #----<<gzcb011>>----
         #Ctrlp:input.c.page1.gzcb011
         ON ACTION controlp INFIELD gzcb011
            #add-point:ON ACTION controlp INFIELD gzcb011
            {<point name="input.c.page1.gzcb011" />}
            #END add-point
 
         #----<<gzcb014>>----
         #Ctrlp:input.c.page1.gzcb014
         ON ACTION controlp INFIELD gzcb014
            #add-point:ON ACTION controlp INFIELD gzcb014
            {<point name="input.c.page1.gzcb014" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzcb_d[l_ac].* = g_gzcb_d_t.*
               CLOSE azzi600_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_gzcb_d[l_ac].gzcb002,-263,1)
               LET g_gzcb_d[l_ac].* = g_gzcb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE gzcb_t SET (gzcb001,gzcb002,gzcb013,gzcb012,gzcb015,gzcb003,gzcb004,gzcb005,gzcb006, 
                   gzcb007,gzcb008,gzcb009,gzcb010,gzcb011,gzcb014) = (g_gzca_m.gzca001,g_gzcb_d[l_ac].gzcb002, 
                   g_gzcb_d[l_ac].gzcb013,g_gzcb_d[l_ac].gzcb012,g_gzcb_d[l_ac].gzcb015,g_gzcb_d[l_ac].gzcb003, 
                   g_gzcb_d[l_ac].gzcb004,g_gzcb_d[l_ac].gzcb005,g_gzcb_d[l_ac].gzcb006,g_gzcb_d[l_ac].gzcb007, 
                   g_gzcb_d[l_ac].gzcb008,g_gzcb_d[l_ac].gzcb009,g_gzcb_d[l_ac].gzcb010,g_gzcb_d[l_ac].gzcb011, 
                   g_gzcb_d[l_ac].gzcb014)
                WHERE  gzcb001 = g_gzca_m.gzca001 
 
                  AND gzcb002 = g_gzcb_d_t.gzcb002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzcb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_gzcb_d[l_ac].* = g_gzcb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzcb_t",SQLCA.sqlcode,1)
                     LET g_gzcb_d[l_ac].* = g_gzcb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzca_m.gzca001
               LET gs_keys_bak[1] = g_gzca001_t
               LET gs_keys[2] = g_gzcb_d[g_detail_idx].gzcb002
               LET gs_keys_bak[2] = g_gzcb_d_t.gzcb002
               CALL azzi600_update_b('gzcb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzca_m.gzca001 = g_detail_multi_table_t.gzcbl001 AND
         g_gzcb_d[l_ac].gzcb002 = g_detail_multi_table_t.gzcbl002 AND
         g_gzcb_d[l_ac].gzcbl004 = g_detail_multi_table_t.gzcbl004 AND
         g_gzcb_d[l_ac].gzcbl005 = g_detail_multi_table_t.gzcbl005 AND
         g_gzcb_d[l_ac].gzcbl006 = g_detail_multi_table_t.gzcbl006 THEN
         ELSE 
            LET l_var_keys[01] = g_gzca_m.gzca001
            LET l_field_keys[01] = 'gzcbl001'
            LET l_var_keys[02] = g_gzcb_d[l_ac].gzcb002
            LET l_field_keys[02] = 'gzcbl002'
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'gzcbl003'
            LET l_vars[01] = g_gzcb_d[l_ac].gzcbl004
            LET l_fields[01] = 'gzcbl004'
            LET l_vars[02] = g_gzcb_d[l_ac].gzcbl005
            LET l_fields[02] = 'gzcbl005'
            LET l_vars[03] = g_gzcb_d[l_ac].gzcbl006
            LET l_fields[03] = 'gzcbl006'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzcbl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzcbl002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.gzcbl003
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzcbl_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL azzi600_unlock_b("gzcb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzcb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzcb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="azzi600.input.head" ver="4" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzcal003,g_gzca_m.gzcal004,g_gzca_m.gzca002, 
          g_gzca_m.gzca003,g_gzca_m.gzcastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            LET g_master_multi_table_t.gzcal001 = g_gzca_m.gzca001
LET g_master_multi_table_t.gzcal003 = g_gzca_m.gzcal003
LET g_master_multi_table_t.gzcal004 = g_gzca_m.gzcal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.gzcal001 = ''
LET g_master_multi_table_t.gzcal003 = ''
LET g_master_multi_table_t.gzcal004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<gzca004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzca004
            #add-point:BEFORE FIELD gzca004
            {<point name="input.b.gzca004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzca004
            
            #add-point:AFTER FIELD gzca004
            {<point name="input.a.gzca004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzca004
            #add-point:ON CHANGE gzca004
            {<point name="input.g.gzca004" />}
            #END add-point
 
         #----<<gzca001>>----
         #此段落由子樣板a02產生
         AFTER FIELD gzca001
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_gzca_m.gzca001,"1","1","50000","1","azz-00087",1) THEN
               NEXT FIELD gzca001
            END IF
 
 
            #add-point:AFTER FIELD gzca001
            {<point name="input.a.gzca001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzca001
            #add-point:BEFORE FIELD gzca001
            {<point name="input.b.gzca001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzca001
            #add-point:ON CHANGE gzca001
            {<point name="input.g.gzca001" />}
            #END add-point
 
         #----<<gzcal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcal003
            #add-point:BEFORE FIELD gzcal003
            {<point name="input.b.gzcal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcal003
            
            #add-point:AFTER FIELD gzcal003
            {<point name="input.a.gzcal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcal003
            #add-point:ON CHANGE gzcal003
            {<point name="input.g.gzcal003" />}
            #END add-point
 
         #----<<gzcal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcal004
            #add-point:BEFORE FIELD gzcal004
            {<point name="input.b.gzcal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcal004
            
            #add-point:AFTER FIELD gzcal004
            {<point name="input.a.gzcal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcal004
            #add-point:ON CHANGE gzcal004
            {<point name="input.g.gzcal004" />}
            #END add-point
 
         #----<<gzca002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzca002
            #add-point:BEFORE FIELD gzca002
            {<point name="input.b.gzca002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzca002
            
            #add-point:AFTER FIELD gzca002
            {<point name="input.a.gzca002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzca002
            #add-point:ON CHANGE gzca002
            {<point name="input.g.gzca002" />}
            #END add-point
 
         #----<<gzca003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzca003
            #add-point:BEFORE FIELD gzca003
            {<point name="input.b.gzca003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzca003
            
            #add-point:AFTER FIELD gzca003
            {<point name="input.a.gzca003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzca003
            #add-point:ON CHANGE gzca003
            {<point name="input.g.gzca003" />}
            #END add-point
 
         #----<<gzcastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzcastus
            #add-point:BEFORE FIELD gzcastus
            {<point name="input.b.gzcastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzcastus
            
            #add-point:AFTER FIELD gzcastus
            {<point name="input.a.gzcastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzcastus
            #add-point:ON CHANGE gzcastus
            {<point name="input.g.gzcastus" />}
            #END add-point
 
         #----<<gzcaownid>>----
         #----<<gzcaownid_desc>>----
         #----<<gzcaowndp>>----
         #----<<gzcaowndp_desc>>----
         #----<<gzcacrtid>>----
         #----<<gzcacrtid_desc>>----
         #----<<gzcacrtdp>>----
         #----<<gzcacrtdp_desc>>----
         #----<<gzcacrtdt>>----
         #----<<gzcamodid>>----
         #----<<gzcamodid_desc>>----
         #----<<gzcamoddt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<gzca004>>----
         #Ctrlp:input.c.gzca004
         ON ACTION controlp INFIELD gzca004
            #add-point:ON ACTION controlp INFIELD gzca004
            {<point name="input.c.gzca004" />}
            #END add-point
 
         #----<<gzca001>>----
         #Ctrlp:input.c.gzca001
         ON ACTION controlp INFIELD gzca001
            #add-point:ON ACTION controlp INFIELD gzca001
            {<point name="input.c.gzca001" />}
            #END add-point
 
         #----<<gzcal003>>----
         #Ctrlp:input.c.gzcal003
         ON ACTION controlp INFIELD gzcal003
            #add-point:ON ACTION controlp INFIELD gzcal003
            {<point name="input.c.gzcal003" />}
            #END add-point
 
         #----<<gzcal004>>----
         #Ctrlp:input.c.gzcal004
         ON ACTION controlp INFIELD gzcal004
            #add-point:ON ACTION controlp INFIELD gzcal004
            {<point name="input.c.gzcal004" />}
            #END add-point
 
         #----<<gzca002>>----
         #Ctrlp:input.c.gzca002
         ON ACTION controlp INFIELD gzca002
            #add-point:ON ACTION controlp INFIELD gzca002
            {<point name="input.c.gzca002" />}
            #END add-point
 
         #----<<gzca003>>----
         #Ctrlp:input.c.gzca003
         ON ACTION controlp INFIELD gzca003
            #add-point:ON ACTION controlp INFIELD gzca003
            {<point name="input.c.gzca003" />}
            #END add-point
 
         #----<<gzcastus>>----
         #Ctrlp:input.c.gzcastus
         ON ACTION controlp INFIELD gzcastus
            #add-point:ON ACTION controlp INFIELD gzcastus
            {<point name="input.c.gzcastus" />}
            #END add-point
 
         #----<<gzcaownid>>----
         #----<<gzcaownid_desc>>----
         #----<<gzcaowndp>>----
         #----<<gzcaowndp_desc>>----
         #----<<gzcacrtid>>----
         #----<<gzcacrtid_desc>>----
         #----<<gzcacrtdp>>----
         #----<<gzcacrtdp_desc>>----
         #----<<gzcacrtdt>>----
         #----<<gzcamodid>>----
         #----<<gzcamodid_desc>>----
         #----<<gzcamoddt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_gzca_m.gzca001             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO gzca_t (gzca004,gzca001,gzca002,gzca003,gzcastus,gzcaownid,gzcaowndp,gzcacrtid, 
                   gzcacrtdp,gzcacrtdt,gzcamodid,gzcamoddt)
               VALUES (g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzca002,g_gzca_m.gzca003,g_gzca_m.gzcastus, 
                   g_gzca_m.gzcaownid,g_gzca_m.gzcaowndp,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtdp,g_gzca_m.gzcacrtdt, 
                   g_gzca_m.gzcamodid,g_gzca_m.gzcamoddt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_gzca_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzca_m.gzca001 = g_master_multi_table_t.gzcal001 AND
         g_gzca_m.gzcal003 = g_master_multi_table_t.gzcal003 AND 
         g_gzca_m.gzcal004 = g_master_multi_table_t.gzcal004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzca_m.gzca001
            LET l_field_keys[01] = 'gzcal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzcal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzcal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzca_m.gzcal003
            LET l_fields[01] = 'gzcal003'
            LET l_vars[02] = g_gzca_m.gzcal004
            LET l_fields[02] = 'gzcal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzcal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi600_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE gzca_t SET (gzca004,gzca001,gzca002,gzca003,gzcastus,gzcaownid,gzcaowndp,gzcacrtid, 
                   gzcacrtdp,gzcacrtdt,gzcamodid,gzcamoddt) = (g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzca002, 
                   g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaowndp,g_gzca_m.gzcacrtid, 
                   g_gzca_m.gzcacrtdp,g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamoddt)
                WHERE  gzca001 = g_gzca001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzca_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzca_m.gzca001 = g_master_multi_table_t.gzcal001 AND
         g_gzca_m.gzcal003 = g_master_multi_table_t.gzcal003 AND 
         g_gzca_m.gzcal004 = g_master_multi_table_t.gzcal004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzca_m.gzca001
            LET l_field_keys[01] = 'gzcal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzcal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzcal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzca_m.gzcal003
            LET l_fields[01] = 'gzcal003'
            LET l_vars[02] = g_gzca_m.gzcal004
            LET l_fields[02] = 'gzcal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzcal_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_gzca001_t = g_gzca_m.gzca001
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="azzi600.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD gzca001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzcb002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="azzi600.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi600_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gzcb_d.clear()   
 
 
   INITIALIZE g_gzca_m.* LIKE gzca_t.*             #DEFAULT 設定
   
   LET g_gzca001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_gzca_m.gzcaownid = g_user
      LET g_gzca_m.gzcaowndp = g_dept
      LET g_gzca_m.gzcacrtid = g_user
      LET g_gzca_m.gzcacrtdp = g_dept 
      LET g_gzca_m.gzcacrtdt = cl_get_current()
      LET g_gzca_m.gzcamodid = ""
      LET g_gzca_m.gzcamoddt = ""
      LET g_gzca_m.gzcastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gzca_m.gzca002 = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL azzi600_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzca_m.* = g_gzca_m_t.*
         CALL azzi600_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_gzcb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_gzca001_t = g_gzca_m.gzca001
 
   
   LET g_wc = g_wc,  
              " OR ( ",
              " gzca001 = '", g_gzca_m.gzca001 CLIPPED, "' "
 
              , ") "
   
   CLOSE azzi600_cl
   
END FUNCTION
]]>
</section>
  <section id="azzi600.insert_b" ver="3" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi600_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO gzcb_t
                  (
                   gzcb001,
                   gzcb002
                   ,gzcb013,gzcb012,gzcb015,gzcb003,gzcb004,gzcb005,gzcb006,gzcb007,gzcb008,gzcb009,gzcb010,gzcb011,gzcb014) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzcb_d[g_detail_idx].gzcb013,g_gzcb_d[g_detail_idx].gzcb012,g_gzcb_d[g_detail_idx].gzcb015, 
                       g_gzcb_d[g_detail_idx].gzcb003,g_gzcb_d[g_detail_idx].gzcb004,g_gzcb_d[g_detail_idx].gzcb005, 
                       g_gzcb_d[g_detail_idx].gzcb006,g_gzcb_d[g_detail_idx].gzcb007,g_gzcb_d[g_detail_idx].gzcb008, 
                       g_gzcb_d[g_detail_idx].gzcb009,g_gzcb_d[g_detail_idx].gzcb010,g_gzcb_d[g_detail_idx].gzcb011, 
                       g_gzcb_d[g_detail_idx].gzcb014)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzcb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="azzi600.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi600_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL azzi600_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "gzcb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN azzi600_bcl USING 
                                       g_gzca_m.gzca001,g_gzcb_d[g_detail_idx].gzcb002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi600_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="azzi600.main" ver="4" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT gzca004,gzca001,'','',gzca002,gzca003,gzcastus,gzcaownid,'',gzcaowndp, 
       '',gzcacrtid,'',gzcacrtdp,'',gzcacrtdt,gzcamodid,'',gzcamoddt FROM gzca_t WHERE gzca001=? FOR  
       UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE azzi600_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzca004,gzca001,gzca002,gzca003,gzcastus,gzcaownid,gzcaowndp,gzcacrtid, 
       gzcacrtdp,gzcacrtdt,gzcamodid,gzcamoddt",
               " FROM gzca_t",
               " WHERE  gzca001 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi600_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi600 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi600_init()   
 
      #進入選單 Menu (="N")
      CALL azzi600_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi600
      
   END IF 
   
   CLOSE azzi600_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="azzi600.modify" ver="4" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi600_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_gzca_m.gzca001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE azzi600_master_referesh USING g_gzca_m.gzca001 INTO g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaowndp,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtdp, 
       g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamoddt
 
   ERROR ""
  
   LET g_gzca001_t = g_gzca_m.gzca001
 
   CALL s_transaction_begin()
   
   OPEN azzi600_cl USING g_gzca_m.gzca001
 
   IF STATUS THEN
      CALL cl_err("OPEN azzi600_cl:", STATUS, 1)
      CLOSE azzi600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi600_cl INTO g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzcal003,g_gzca_m.gzcal004,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaownid_desc,g_gzca_m.gzcaowndp, 
       g_gzca_m.gzcaowndp_desc,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtid_desc,g_gzca_m.gzcacrtdp,g_gzca_m.gzcacrtdp_desc, 
       g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamodid_desc,g_gzca_m.gzcamoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzca_m.gzca001,SQLCA.sqlcode,0)
      CLOSE azzi600_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL azzi600_show()
   WHILE TRUE
      LET g_gzca001_t = g_gzca_m.gzca001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gzca_m.gzcamodid = g_user 
LET g_gzca_m.gzcamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL azzi600_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzca_m.* = g_gzca_m_t.*
         CALL azzi600_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_gzca_m.gzca001 != g_gzca001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE gzcb_t SET gzcb001 = g_gzca_m.gzca001
 
          WHERE  gzcb001 = g_gzca001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("gzcb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("gzcb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_gzca_m.gzca001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE azzi600_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzca_m.gzca001,'U')
 
END FUNCTION   
]]>
</section>
  <section id="azzi600.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="azzi600.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="azzi600.query" ver="3" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi600_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzcb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL azzi600_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi600_browser_fill("")
      CALL azzi600_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL azzi600_filter_show('gzca001')
   CALL azzi600_filter_show('gzca002')
   CALL azzi600_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL azzi600_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi600.reproduce" ver="3" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi600_reproduce()
   DEFINE l_newno     LIKE gzca_t.gzca001 
   DEFINE l_oldno     LIKE gzca_t.gzca001 
 
   DEFINE l_master    RECORD LIKE gzca_t.*
   DEFINE l_detail    RECORD LIKE gzcb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_gzca_m.gzca001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_gzca001_t = g_gzca_m.gzca001
 
    
   LET g_gzca_m.gzca001 = ""
 
    
   CALL azzi600_set_entry('a')
   CALL azzi600_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_gzca_m.gzcaownid = g_user
      LET g_gzca_m.gzcaowndp = g_dept
      LET g_gzca_m.gzcacrtid = g_user
      LET g_gzca_m.gzcacrtdp = g_dept 
      LET g_gzca_m.gzcacrtdt = cl_get_current()
      LET g_gzca_m.gzcamodid = ""
      LET g_gzca_m.gzcamoddt = ""
      LET g_gzca_m.gzcastus = "N"
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL azzi600_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " gzca001 = '", g_gzca_m.gzca001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="azzi600.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi600_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzca001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="azzi600.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi600_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="azzi600.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi600_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzca001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="azzi600.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi600_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="azzi600.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi600_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzca_m.gzca001
   LET g_pk_array[1].column = 'gzca001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="azzi600.show" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi600_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_gzca_m_t.* = g_gzca_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL azzi600_b_fill() #單身填充
      CALL azzi600_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_gzca_m.gzcaownid_desc = cl_get_username(g_gzca_m.gzcaownid)
      #LET g_gzca_m.gzcaowndp_desc = cl_get_deptname(g_gzca_m.gzcaowndp)
      #LET g_gzca_m.gzcacrtid_desc = cl_get_username(g_gzca_m.gzcacrtid)
      #LET g_gzca_m.gzcacrtdp_desc = cl_get_deptname(g_gzca_m.gzcacrtdp)
      #LET g_gzca_m.gzcamodid_desc = cl_get_username(g_gzca_m.gzcamodid)
      ##LET g_gzca_m.gzcacnfid_desc = cl_get_deptname(g_gzca_m.gzcacnfid)
      ##LET g_gzca_m.gzcapstid_desc = cl_get_deptname(g_gzca_m.gzcapstid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi600_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzcal003,g_gzca_m.gzcal004,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaownid_desc,g_gzca_m.gzcaowndp, 
       g_gzca_m.gzcaowndp_desc,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtid_desc,g_gzca_m.gzcacrtdp,g_gzca_m.gzcacrtdp_desc, 
       g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamodid_desc,g_gzca_m.gzcamoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_gzca_m.gzcastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzcb_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL azzi600_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="azzi600.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="azzi600.state_change" ver="3" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION azzi600_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzca_m.gzca001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzca_m.gzcastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE gzca_t SET gzcastus = lc_state 
    WHERE  gzca001 = g_gzca_m.gzca001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_gzca_m.gzcastus = lc_state
      DISPLAY BY NAME g_gzca_m.gzcastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="azzi600.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi600_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzca001 = g_gzca_m.gzca001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="azzi600.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION azzi600_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="azzi600.ui_dialog" ver="12" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION azzi600_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi600_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL azzi600_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_gzca001 = g_gzca001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL azzi600_fetch('') # reload data
               LET l_ac = 1
               CALL azzi600_ui_detailshow() #Setting the current row 
      
               CALL azzi600_idx_chk()
               #NEXT FIELD gzcb002
         
         END DISPLAY
        
         DISPLAY ARRAY g_gzcb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL azzi600_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL azzi600_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi600_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi600_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL azzi600_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzcb002
            END IF
        
         ON ACTION statechange
            CALL azzi600_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL azzi600_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL azzi600_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL azzi600_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL azzi600_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL azzi600_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi600_idx_chk()
            
         ON ACTION previous
            CALL azzi600_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi600_idx_chk()
            
         ON ACTION jump
            CALL azzi600_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi600_idx_chk()
            
         ON ACTION next
            CALL azzi600_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi600_idx_chk()
            
         ON ACTION last
            CALL azzi600_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi600_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi600_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi600_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION syn_status
            LET g_action_choice="syn_status"
            IF cl_auth_chk_act("syn_status") THEN
               
               #add-point:ON ACTION syn_status
               {<point name="menu.syn_status" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi600_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi600_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi600_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi600_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi600_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi600_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi600_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="azzi600.ui_headershow" ver="2" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi600_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_gzca_m.gzca001 = g_browser[g_current_idx].b_gzca001   
 
   EXECUTE azzi600_master_referesh USING g_gzca_m.gzca001 INTO g_gzca_m.gzca004,g_gzca_m.gzca001,g_gzca_m.gzca002, 
       g_gzca_m.gzca003,g_gzca_m.gzcastus,g_gzca_m.gzcaownid,g_gzca_m.gzcaowndp,g_gzca_m.gzcacrtid,g_gzca_m.gzcacrtdp, 
       g_gzca_m.gzcacrtdt,g_gzca_m.gzcamodid,g_gzca_m.gzcamoddt
   CALL azzi600_show()
   
END FUNCTION
]]>
</section>
  <section id="azzi600.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi600_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi600_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="azzi600.update_b" ver="4" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi600_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzcb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE gzcb_t 
         SET (gzcb001,
              gzcb002
              ,gzcb013,gzcb012,gzcb015,gzcb003,gzcb004,gzcb005,gzcb006,gzcb007,gzcb008,gzcb009,gzcb010,gzcb011,gzcb014) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzcb_d[g_detail_idx].gzcb013,g_gzcb_d[g_detail_idx].gzcb012,g_gzcb_d[g_detail_idx].gzcb015, 
                  g_gzcb_d[g_detail_idx].gzcb003,g_gzcb_d[g_detail_idx].gzcb004,g_gzcb_d[g_detail_idx].gzcb005, 
                  g_gzcb_d[g_detail_idx].gzcb006,g_gzcb_d[g_detail_idx].gzcb007,g_gzcb_d[g_detail_idx].gzcb008, 
                  g_gzcb_d[g_detail_idx].gzcb009,g_gzcb_d[g_detail_idx].gzcb010,g_gzcb_d[g_detail_idx].gzcb011, 
                  g_gzcb_d[g_detail_idx].gzcb014) 
         WHERE  gzcb001 = ps_keys_bak[1] AND gzcb002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzcb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzcb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            LET l_new_key[01] = ps_keys[01] 
LET l_old_key[01] = ps_keys_bak[01] 
LET l_field_key[01] = 'gzcbl001'
LET l_new_key[02] = ps_keys[02] 
LET l_old_key[02] = ps_keys_bak[02] 
LET l_field_key[02] = 'gzcbl002'
LET l_new_key[03] = g_dlang 
LET l_old_key[03] = g_dlang 
LET l_field_key[03] = 'gzcbl003'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'gzcbl_t')
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>