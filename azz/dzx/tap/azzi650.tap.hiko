<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="azzi650" std_prog="azzi650" erpver="1.0" module="AZZ" ver="4" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.gzaa001" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gzaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzaa001  #顯示到畫面上
            NEXT FIELD gzaa001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzaacrtdp" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzaacrtdp  #顯示到畫面上
            NEXT FIELD gzaacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzaacrtid" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzaacrtid  #顯示到畫面上
            NEXT FIELD gzaacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzaamodid" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzaamodid  #顯示到畫面上
            NEXT FIELD gzaamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzaaowndp" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzaaowndp  #顯示到畫面上
            NEXT FIELD gzaaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzaaownid" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzaaownid  #顯示到畫面上
            NEXT FIELD gzaaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.gzad006" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gzca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzad006  #顯示到畫面上
            NEXT FIELD gzad006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.gzad007" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dzca001_02()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzad007  #顯示到畫面上
            NEXT FIELD gzad007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.gzad008" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dzcd001_01()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzad008  #顯示到畫面上
            NEXT FIELD gzad008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.gzad015" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dzea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzad015  #顯示到畫面上
            NEXT FIELD gzad015                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.gzad016" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dzeb001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzad016  #顯示到畫面上
            NEXT FIELD gzad016                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.gzad017" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dzeb001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzad017  #顯示到畫面上
            NEXT FIELD gzad017                     #返回原欄位
    

]]>
  </point>
  <point name="input.a.gzaa001" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzaa_m.gzaa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzaa_m.gzaa001 != g_gzaa001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzaa_t WHERE "||"gzaa001 = '"||g_gzaa_m.gzaa001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.page1.gzac002" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_gzaa_m.gzaa001 IS NOT NULL AND g_gzac_d[g_detail_idx].gzac002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzaa_m.gzaa001 != g_gzaa001_t OR g_gzac_d[g_detail_idx].gzac002 != g_gzac_d_t.gzac002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzac_t WHERE "||"gzac001 = '"||g_gzaa_m.gzaa001 ||"' AND "|| "gzac002 = '"||g_gzac_d[g_detail_idx].gzac002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.gzad002" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_gzaa_m.gzaa001 IS NOT NULL AND g_gzac2_d[g_detail_idx].gzad002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzaa_m.gzaa001 != g_gzaa001_t OR g_gzac2_d[g_detail_idx].gzad002 != g_gzac2_d_t.gzad002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzad_t WHERE "||"gzad001 = '"||g_gzaa_m.gzaa001 ||"' AND "|| "gzad002 = '"||g_gzac2_d[g_detail_idx].gzad002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzac2_d[l_ac].gzad002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001='990' AND gzcbl002=? AND gzcbl003='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzac2_d[l_ac].gzad002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzac2_d[l_ac].gzad002_desc

]]>
  </point>
  <point name="input.a.page2.gzad006" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_gzac2_d[l_ac].gzad006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_gzca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzac2_d[l_ac].gzad006
            CALL ap_ref_array2(g_ref_fields,"SELECT gzcal003 FROM gzcal_t WHERE gzcal001=? AND gzcal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzac2_d[l_ac].gzad006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzac2_d[l_ac].gzad006_desc

]]>
  </point>
  <point name="input.a.page2.gzad007" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_gzac2_d[l_ac].gzad007) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_dzca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.page2.gzad008" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_gzac2_d[l_ac].gzad008) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist_and_ref_val("v_dzcd001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.c.page2.gzad006" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzac2_d[l_ac].gzad006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_gzca001()                                #呼叫開窗

            LET g_gzac2_d[l_ac].gzad006 = g_qryparam.return1              

            DISPLAY g_gzac2_d[l_ac].gzad006 TO gzad006              #

            NEXT FIELD gzad006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.gzad007" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzac2_d[l_ac].gzad007             #給予default值
            LET g_qryparam.default2 = "" #g_gzac2_d[l_ac].dzca001 #開窗識別碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_dzca001_02()                                #呼叫開窗

            LET g_gzac2_d[l_ac].gzad007 = g_qryparam.return1              
            #LET g_gzac2_d[l_ac].dzca001 = g_qryparam.return2 
            DISPLAY g_gzac2_d[l_ac].gzad007 TO gzad007              #
            #DISPLAY g_gzac2_d[l_ac].dzca001 TO dzca001 #開窗識別碼
            NEXT FIELD gzad007                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.gzad008" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzac2_d[l_ac].gzad008             #給予default值
            LET g_qryparam.default2 = "" #g_gzac2_d[l_ac].dzcd001 #校驗帶值識別碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_dzcd001_01()                                #呼叫開窗

            LET g_gzac2_d[l_ac].gzad008 = g_qryparam.return1              
            #LET g_gzac2_d[l_ac].dzcd001 = g_qryparam.return2 
            DISPLAY g_gzac2_d[l_ac].gzad008 TO gzad008              #
            #DISPLAY g_gzac2_d[l_ac].dzcd001 TO dzcd001 #校驗帶值識別碼
            NEXT FIELD gzad008                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.gzad015" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzac2_d[l_ac].gzad015             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_dzea001_1()                                #呼叫開窗

            LET g_gzac2_d[l_ac].gzad015 = g_qryparam.return1              

            DISPLAY g_gzac2_d[l_ac].gzad015 TO gzad015              #

            NEXT FIELD gzad015                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.gzad016" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzac2_d[l_ac].gzad016             #給予default值
            LET g_qryparam.default2 = "" #g_gzac2_d[l_ac].dzeb003 #欄位名稱
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_dzeb001()                                #呼叫開窗

            LET g_gzac2_d[l_ac].gzad016 = g_qryparam.return1              
            #LET g_gzac2_d[l_ac].dzeb003 = g_qryparam.return2 
            DISPLAY g_gzac2_d[l_ac].gzad016 TO gzad016              #
            #DISPLAY g_gzac2_d[l_ac].dzeb003 TO dzeb003 #欄位名稱
            NEXT FIELD gzad016                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.gzad017" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzac2_d[l_ac].gzad017             #給予default值
            LET g_qryparam.default2 = "" #g_gzac2_d[l_ac].dzeb003 #欄位名稱
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_dzeb001()                                #呼叫開窗

            LET g_gzac2_d[l_ac].gzad017 = g_qryparam.return1              
            #LET g_gzac2_d[l_ac].dzeb003 = g_qryparam.return2 
            DISPLAY g_gzac2_d[l_ac].gzad017 TO gzad017              #
            #DISPLAY g_gzac2_d[l_ac].dzeb003 TO dzeb003 #欄位名稱
            NEXT FIELD gzad017                          #返回原欄位

]]>
  </point>
  <point name="show.head.reference" order="" ver="4" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzaa_m.gzaa001
   CALL ap_ref_array2(g_ref_fields," SELECT gzaal003,gzaal004 FROM gzaal_t WHERE gzaal001 = ? AND gzaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzaa_m.gzaal003 = g_rtn_fields[1] 
   LET g_gzaa_m.gzaal004 = g_rtn_fields[2] 
   DISPLAY g_gzaa_m.gzaal003,g_gzaa_m.gzaal004 TO gzaal003,gzaal004]]>
  </point>
  <section id="azzi650.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi650_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_gzac_d.clear()    #g_gzac_d 單頭及單身 
   CALL g_gzac2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF azzi650_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE gzac002,gzac023,gzac024,gzac003,gzac004,gzac005,gzac006,gzac007,gzac008, 
          gzac009,gzac010,gzac011,gzac012,gzac013,gzac014,gzac015,gzac016,gzac017,gzac018,gzac019,gzac020, 
          gzac021,gzac022  FROM gzac_t",   
                  " INNER JOIN gzaa_t ON gzaa001 = gzac001 ",
 
                  #"",
                  
                  "",
                  
                  " WHERE gzac001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY gzac_t.gzac002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE azzi650_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR azzi650_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_gzaa_m.gzaa001
                                               
      FOREACH b_fill_cs INTO g_gzac_d[l_ac].gzac002,g_gzac_d[l_ac].gzac023,g_gzac_d[l_ac].gzac024,g_gzac_d[l_ac].gzac003, 
          g_gzac_d[l_ac].gzac004,g_gzac_d[l_ac].gzac005,g_gzac_d[l_ac].gzac006,g_gzac_d[l_ac].gzac007, 
          g_gzac_d[l_ac].gzac008,g_gzac_d[l_ac].gzac009,g_gzac_d[l_ac].gzac010,g_gzac_d[l_ac].gzac011, 
          g_gzac_d[l_ac].gzac012,g_gzac_d[l_ac].gzac013,g_gzac_d[l_ac].gzac014,g_gzac_d[l_ac].gzac015, 
          g_gzac_d[l_ac].gzac016,g_gzac_d[l_ac].gzac017,g_gzac_d[l_ac].gzac018,g_gzac_d[l_ac].gzac019, 
          g_gzac_d[l_ac].gzac020,g_gzac_d[l_ac].gzac021,g_gzac_d[l_ac].gzac022
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF azzi650_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE gzad002,gzad003,gzad004,gzad005,gzad006,gzad007,gzad008,gzad015,gzad016, 
          gzad017,gzad009,gzad014,gzad010,gzad011,gzad012,gzad013 ,t1.gzcbl004 ,t2.gzcal003 FROM gzad_t", 
             
                  " INNER JOIN gzaa_t ON gzaa001 = gzad001 ",
 
                  "",
                  
                                 " LEFT JOIN gzcbl_t t1 ON t1.gzcbl001='990' AND t1.gzcbl002=gzad002 AND t1.gzcbl003='"||g_lang||"' ",
               " LEFT JOIN gzcal_t t2 ON t2.gzcal001=gzad006 AND t2.gzcal002='"||g_lang||"' ",
 
                  " WHERE gzad001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY gzad_t.gzad002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE azzi650_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR azzi650_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_gzaa_m.gzaa001
                                               
      FOREACH b_fill_cs2 INTO g_gzac2_d[l_ac].gzad002,g_gzac2_d[l_ac].gzad003,g_gzac2_d[l_ac].gzad004, 
          g_gzac2_d[l_ac].gzad005,g_gzac2_d[l_ac].gzad006,g_gzac2_d[l_ac].gzad007,g_gzac2_d[l_ac].gzad008, 
          g_gzac2_d[l_ac].gzad015,g_gzac2_d[l_ac].gzad016,g_gzac2_d[l_ac].gzad017,g_gzac2_d[l_ac].gzad009, 
          g_gzac2_d[l_ac].gzad014,g_gzac2_d[l_ac].gzad010,g_gzac2_d[l_ac].gzad011,g_gzac2_d[l_ac].gzad012, 
          g_gzac2_d[l_ac].gzad013,g_gzac2_d[l_ac].gzad002_desc,g_gzac2_d[l_ac].gzad006_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_gzac_d.deleteElement(g_gzac_d.getLength())
   CALL g_gzac2_d.deleteElement(g_gzac2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE azzi650_pb
   FREE azzi650_pb2
 
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION azzi650_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL azzi650_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.browser_fill" ver="7" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi650_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzaa_m.* TO NULL
   CALL g_gzac_d.clear()        
   CALL g_gzac2_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "gzaa001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE gzaa001 ",
                      " FROM gzaa_t ",
                      " ",
                      " LEFT JOIN gzac_t ON gzaa001 = gzac001 ",
                      " LEFT JOIN gzad_t ON gzaa001 = gzad001", 
 
 
 
                      " LEFT JOIN gzaal_t ON gzaa001 = gzaal001 AND gzaal002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzaa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE gzaa001 ",
                      " FROM gzaa_t ", 
                      "  ",
                      "  LEFT JOIN gzaal_t ON gzaa001 = gzaal001 AND gzaal002 = '",g_lang,"' ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("gzaa_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照gzaa001,'',gzaa002,gzaa003,'','' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT gzaastus,gzaa001,'',gzaa002,gzaa003,'','',t1.gzaal003 ",
               " FROM gzaa_t ",
               "  ",
               "  LEFT JOIN gzac_t ON gzaa001 = gzac001 ",
               "  LEFT JOIN gzad_t ON gzaa001 = gzad001",
 
 
 
               "  LEFT JOIN gzaal_t ON gzaa001 = gzaal001 AND gzaal002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN gzaal_t t1 ON t1.gzaal001=gzaa001 AND t1.gzaal002='"||g_lang||"' ",
 
               " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("gzaa_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzaa001,g_browser[g_cnt].b_gzaa001_desc, 
       g_browser[g_cnt].b_gzaa002,g_browser[g_cnt].b_gzaa003,g_browser[g_cnt].b_gzzz001,g_browser[g_cnt].b_gzzz001_desc, 
       g_browser[g_cnt].b_gzaa001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION azzi650_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY gzaa001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL azzi650_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.construct" ver="10" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi650_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzaa_m.* TO NULL
   CALL g_gzac_d.clear()        
   CALL g_gzac2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzaa004,gzaa001,gzaal003,gzaal004,gzaa002,gzaa003,gzzz001,gzzal003,gzaastus, 
          gzaaownid,gzaaowndp,gzaacrtid,gzaacrtdp,gzaacrtdt,gzaamodid,gzaamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<gzaacrtdt>>----
         AFTER FIELD gzaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzaamoddt>>----
         AFTER FIELD gzaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzaacnfdt>>----
         
         #----<<gzaapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD gzaa004
            #add-point:BEFORE FIELD gzaa004
            {<point name="construct.b.gzaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa004
            
            #add-point:AFTER FIELD gzaa004
            {<point name="construct.a.gzaa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaa004
         ON ACTION controlp INFIELD gzaa004
            #add-point:ON ACTION controlp INFIELD gzaa004
            {<point name="construct.c.gzaa004" />}
            #END add-point
 
         #Ctrlp:construct.c.gzaa001
         ON ACTION controlp INFIELD gzaa001
            #add-point:ON ACTION controlp INFIELD gzaa001
            {<point name="construct.c.gzaa001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaa001
            #add-point:BEFORE FIELD gzaa001
            {<point name="construct.b.gzaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa001
            
            #add-point:AFTER FIELD gzaa001
            {<point name="construct.a.gzaa001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaal003
            #add-point:BEFORE FIELD gzaal003
            {<point name="construct.b.gzaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaal003
            
            #add-point:AFTER FIELD gzaal003
            {<point name="construct.a.gzaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaal003
         ON ACTION controlp INFIELD gzaal003
            #add-point:ON ACTION controlp INFIELD gzaal003
            {<point name="construct.c.gzaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaal004
            #add-point:BEFORE FIELD gzaal004
            {<point name="construct.b.gzaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaal004
            
            #add-point:AFTER FIELD gzaal004
            {<point name="construct.a.gzaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaal004
         ON ACTION controlp INFIELD gzaal004
            #add-point:ON ACTION controlp INFIELD gzaal004
            {<point name="construct.c.gzaal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaa002
            #add-point:BEFORE FIELD gzaa002
            {<point name="construct.b.gzaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa002
            
            #add-point:AFTER FIELD gzaa002
            {<point name="construct.a.gzaa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaa002
         ON ACTION controlp INFIELD gzaa002
            #add-point:ON ACTION controlp INFIELD gzaa002
            {<point name="construct.c.gzaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaa003
            #add-point:BEFORE FIELD gzaa003
            {<point name="construct.b.gzaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa003
            
            #add-point:AFTER FIELD gzaa003
            {<point name="construct.a.gzaa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaa003
         ON ACTION controlp INFIELD gzaa003
            #add-point:ON ACTION controlp INFIELD gzaa003
            {<point name="construct.c.gzaa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzz001
            #add-point:BEFORE FIELD gzzz001
            {<point name="construct.b.gzzz001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzz001
            
            #add-point:AFTER FIELD gzzz001
            {<point name="construct.a.gzzz001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzz001
         ON ACTION controlp INFIELD gzzz001
            #add-point:ON ACTION controlp INFIELD gzzz001
            {<point name="construct.c.gzzz001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzal003
            #add-point:BEFORE FIELD gzzal003
            {<point name="construct.b.gzzal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzal003
            
            #add-point:AFTER FIELD gzzal003
            {<point name="construct.a.gzzal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzal003
         ON ACTION controlp INFIELD gzzal003
            #add-point:ON ACTION controlp INFIELD gzzal003
            {<point name="construct.c.gzzal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaastus
            #add-point:BEFORE FIELD gzaastus
            {<point name="construct.b.gzaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaastus
            
            #add-point:AFTER FIELD gzaastus
            {<point name="construct.a.gzaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaastus
         ON ACTION controlp INFIELD gzaastus
            #add-point:ON ACTION controlp INFIELD gzaastus
            {<point name="construct.c.gzaastus" />}
            #END add-point
 
         #Ctrlp:construct.c.gzaaownid
         ON ACTION controlp INFIELD gzaaownid
            #add-point:ON ACTION controlp INFIELD gzaaownid
            {<point name="construct.c.gzaaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaaownid
            #add-point:BEFORE FIELD gzaaownid
            {<point name="construct.b.gzaaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaaownid
            
            #add-point:AFTER FIELD gzaaownid
            {<point name="construct.a.gzaaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaaowndp
         ON ACTION controlp INFIELD gzaaowndp
            #add-point:ON ACTION controlp INFIELD gzaaowndp
            {<point name="construct.c.gzaaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaaowndp
            #add-point:BEFORE FIELD gzaaowndp
            {<point name="construct.b.gzaaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaaowndp
            
            #add-point:AFTER FIELD gzaaowndp
            {<point name="construct.a.gzaaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaacrtid
         ON ACTION controlp INFIELD gzaacrtid
            #add-point:ON ACTION controlp INFIELD gzaacrtid
            {<point name="construct.c.gzaacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaacrtid
            #add-point:BEFORE FIELD gzaacrtid
            {<point name="construct.b.gzaacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaacrtid
            
            #add-point:AFTER FIELD gzaacrtid
            {<point name="construct.a.gzaacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzaacrtdp
         ON ACTION controlp INFIELD gzaacrtdp
            #add-point:ON ACTION controlp INFIELD gzaacrtdp
            {<point name="construct.c.gzaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaacrtdp
            #add-point:BEFORE FIELD gzaacrtdp
            {<point name="construct.b.gzaacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaacrtdp
            
            #add-point:AFTER FIELD gzaacrtdp
            {<point name="construct.a.gzaacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaacrtdt
            #add-point:BEFORE FIELD gzaacrtdt
            {<point name="construct.b.gzaacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.gzaamodid
         ON ACTION controlp INFIELD gzaamodid
            #add-point:ON ACTION controlp INFIELD gzaamodid
            {<point name="construct.c.gzaamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaamodid
            #add-point:BEFORE FIELD gzaamodid
            {<point name="construct.b.gzaamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaamodid
            
            #add-point:AFTER FIELD gzaamodid
            {<point name="construct.a.gzaamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaamoddt
            #add-point:BEFORE FIELD gzaamoddt
            {<point name="construct.b.gzaamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON gzac002,gzac023,gzac024,gzac003,gzac004,gzac005,gzac006,gzac007,gzac008, 
          gzac009,gzac010,gzac011,gzac012,gzac013,gzac014,gzac015,gzac016,gzac017,gzac018,gzac019,gzac020, 
          gzac021,gzac022
           FROM s_detail1[1].gzac002,s_detail1[1].gzac023,s_detail1[1].gzac024,s_detail1[1].gzac003, 
               s_detail1[1].gzac004,s_detail1[1].gzac005,s_detail1[1].gzac006,s_detail1[1].gzac007,s_detail1[1].gzac008, 
               s_detail1[1].gzac009,s_detail1[1].gzac010,s_detail1[1].gzac011,s_detail1[1].gzac012,s_detail1[1].gzac013, 
               s_detail1[1].gzac014,s_detail1[1].gzac015,s_detail1[1].gzac016,s_detail1[1].gzac017,s_detail1[1].gzac018, 
               s_detail1[1].gzac019,s_detail1[1].gzac020,s_detail1[1].gzac021,s_detail1[1].gzac022
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD gzac002
            #add-point:BEFORE FIELD gzac002
            {<point name="construct.b.page1.gzac002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac002
            
            #add-point:AFTER FIELD gzac002
            {<point name="construct.a.page1.gzac002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac002
         ON ACTION controlp INFIELD gzac002
            #add-point:ON ACTION controlp INFIELD gzac002
            {<point name="construct.c.page1.gzac002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac023
            #add-point:BEFORE FIELD gzac023
            {<point name="construct.b.page1.gzac023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac023
            
            #add-point:AFTER FIELD gzac023
            {<point name="construct.a.page1.gzac023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac023
         ON ACTION controlp INFIELD gzac023
            #add-point:ON ACTION controlp INFIELD gzac023
            {<point name="construct.c.page1.gzac023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac024
            #add-point:BEFORE FIELD gzac024
            {<point name="construct.b.page1.gzac024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac024
            
            #add-point:AFTER FIELD gzac024
            {<point name="construct.a.page1.gzac024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac024
         ON ACTION controlp INFIELD gzac024
            #add-point:ON ACTION controlp INFIELD gzac024
            {<point name="construct.c.page1.gzac024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac003
            #add-point:BEFORE FIELD gzac003
            {<point name="construct.b.page1.gzac003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac003
            
            #add-point:AFTER FIELD gzac003
            {<point name="construct.a.page1.gzac003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac003
         ON ACTION controlp INFIELD gzac003
            #add-point:ON ACTION controlp INFIELD gzac003
            {<point name="construct.c.page1.gzac003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac004
            #add-point:BEFORE FIELD gzac004
            {<point name="construct.b.page1.gzac004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac004
            
            #add-point:AFTER FIELD gzac004
            {<point name="construct.a.page1.gzac004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac004
         ON ACTION controlp INFIELD gzac004
            #add-point:ON ACTION controlp INFIELD gzac004
            {<point name="construct.c.page1.gzac004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac005
            #add-point:BEFORE FIELD gzac005
            {<point name="construct.b.page1.gzac005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac005
            
            #add-point:AFTER FIELD gzac005
            {<point name="construct.a.page1.gzac005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac005
         ON ACTION controlp INFIELD gzac005
            #add-point:ON ACTION controlp INFIELD gzac005
            {<point name="construct.c.page1.gzac005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac006
            #add-point:BEFORE FIELD gzac006
            {<point name="construct.b.page1.gzac006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac006
            
            #add-point:AFTER FIELD gzac006
            {<point name="construct.a.page1.gzac006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac006
         ON ACTION controlp INFIELD gzac006
            #add-point:ON ACTION controlp INFIELD gzac006
            {<point name="construct.c.page1.gzac006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac007
            #add-point:BEFORE FIELD gzac007
            {<point name="construct.b.page1.gzac007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac007
            
            #add-point:AFTER FIELD gzac007
            {<point name="construct.a.page1.gzac007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac007
         ON ACTION controlp INFIELD gzac007
            #add-point:ON ACTION controlp INFIELD gzac007
            {<point name="construct.c.page1.gzac007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac008
            #add-point:BEFORE FIELD gzac008
            {<point name="construct.b.page1.gzac008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac008
            
            #add-point:AFTER FIELD gzac008
            {<point name="construct.a.page1.gzac008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac008
         ON ACTION controlp INFIELD gzac008
            #add-point:ON ACTION controlp INFIELD gzac008
            {<point name="construct.c.page1.gzac008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac009
            #add-point:BEFORE FIELD gzac009
            {<point name="construct.b.page1.gzac009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac009
            
            #add-point:AFTER FIELD gzac009
            {<point name="construct.a.page1.gzac009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac009
         ON ACTION controlp INFIELD gzac009
            #add-point:ON ACTION controlp INFIELD gzac009
            {<point name="construct.c.page1.gzac009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac010
            #add-point:BEFORE FIELD gzac010
            {<point name="construct.b.page1.gzac010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac010
            
            #add-point:AFTER FIELD gzac010
            {<point name="construct.a.page1.gzac010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac010
         ON ACTION controlp INFIELD gzac010
            #add-point:ON ACTION controlp INFIELD gzac010
            {<point name="construct.c.page1.gzac010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac011
            #add-point:BEFORE FIELD gzac011
            {<point name="construct.b.page1.gzac011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac011
            
            #add-point:AFTER FIELD gzac011
            {<point name="construct.a.page1.gzac011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac011
         ON ACTION controlp INFIELD gzac011
            #add-point:ON ACTION controlp INFIELD gzac011
            {<point name="construct.c.page1.gzac011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac012
            #add-point:BEFORE FIELD gzac012
            {<point name="construct.b.page1.gzac012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac012
            
            #add-point:AFTER FIELD gzac012
            {<point name="construct.a.page1.gzac012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac012
         ON ACTION controlp INFIELD gzac012
            #add-point:ON ACTION controlp INFIELD gzac012
            {<point name="construct.c.page1.gzac012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac013
            #add-point:BEFORE FIELD gzac013
            {<point name="construct.b.page1.gzac013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac013
            
            #add-point:AFTER FIELD gzac013
            {<point name="construct.a.page1.gzac013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac013
         ON ACTION controlp INFIELD gzac013
            #add-point:ON ACTION controlp INFIELD gzac013
            {<point name="construct.c.page1.gzac013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac014
            #add-point:BEFORE FIELD gzac014
            {<point name="construct.b.page1.gzac014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac014
            
            #add-point:AFTER FIELD gzac014
            {<point name="construct.a.page1.gzac014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac014
         ON ACTION controlp INFIELD gzac014
            #add-point:ON ACTION controlp INFIELD gzac014
            {<point name="construct.c.page1.gzac014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac015
            #add-point:BEFORE FIELD gzac015
            {<point name="construct.b.page1.gzac015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac015
            
            #add-point:AFTER FIELD gzac015
            {<point name="construct.a.page1.gzac015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac015
         ON ACTION controlp INFIELD gzac015
            #add-point:ON ACTION controlp INFIELD gzac015
            {<point name="construct.c.page1.gzac015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac016
            #add-point:BEFORE FIELD gzac016
            {<point name="construct.b.page1.gzac016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac016
            
            #add-point:AFTER FIELD gzac016
            {<point name="construct.a.page1.gzac016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac016
         ON ACTION controlp INFIELD gzac016
            #add-point:ON ACTION controlp INFIELD gzac016
            {<point name="construct.c.page1.gzac016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac017
            #add-point:BEFORE FIELD gzac017
            {<point name="construct.b.page1.gzac017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac017
            
            #add-point:AFTER FIELD gzac017
            {<point name="construct.a.page1.gzac017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac017
         ON ACTION controlp INFIELD gzac017
            #add-point:ON ACTION controlp INFIELD gzac017
            {<point name="construct.c.page1.gzac017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac018
            #add-point:BEFORE FIELD gzac018
            {<point name="construct.b.page1.gzac018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac018
            
            #add-point:AFTER FIELD gzac018
            {<point name="construct.a.page1.gzac018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac018
         ON ACTION controlp INFIELD gzac018
            #add-point:ON ACTION controlp INFIELD gzac018
            {<point name="construct.c.page1.gzac018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac019
            #add-point:BEFORE FIELD gzac019
            {<point name="construct.b.page1.gzac019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac019
            
            #add-point:AFTER FIELD gzac019
            {<point name="construct.a.page1.gzac019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac019
         ON ACTION controlp INFIELD gzac019
            #add-point:ON ACTION controlp INFIELD gzac019
            {<point name="construct.c.page1.gzac019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac020
            #add-point:BEFORE FIELD gzac020
            {<point name="construct.b.page1.gzac020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac020
            
            #add-point:AFTER FIELD gzac020
            {<point name="construct.a.page1.gzac020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac020
         ON ACTION controlp INFIELD gzac020
            #add-point:ON ACTION controlp INFIELD gzac020
            {<point name="construct.c.page1.gzac020" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac021
            #add-point:BEFORE FIELD gzac021
            {<point name="construct.b.page1.gzac021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac021
            
            #add-point:AFTER FIELD gzac021
            {<point name="construct.a.page1.gzac021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac021
         ON ACTION controlp INFIELD gzac021
            #add-point:ON ACTION controlp INFIELD gzac021
            {<point name="construct.c.page1.gzac021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac022
            #add-point:BEFORE FIELD gzac022
            {<point name="construct.b.page1.gzac022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac022
            
            #add-point:AFTER FIELD gzac022
            {<point name="construct.a.page1.gzac022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzac022
         ON ACTION controlp INFIELD gzac022
            #add-point:ON ACTION controlp INFIELD gzac022
            {<point name="construct.c.page1.gzac022" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON gzad002,l_ref_style,gzad003,gzad004,gzad005,gzad006,gzad007,gzad008, 
          gzad015,gzad016,gzad017,gzad009,gzad014,gzad010,gzad011,gzad012,gzad013
           FROM s_detail2[1].gzad002,s_detail2[1].l_ref_style,s_detail2[1].gzad003,s_detail2[1].gzad004, 
               s_detail2[1].gzad005,s_detail2[1].gzad006,s_detail2[1].gzad007,s_detail2[1].gzad008,s_detail2[1].gzad015, 
               s_detail2[1].gzad016,s_detail2[1].gzad017,s_detail2[1].gzad009,s_detail2[1].gzad014,s_detail2[1].gzad010, 
               s_detail2[1].gzad011,s_detail2[1].gzad012,s_detail2[1].gzad013
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD gzad002
            #add-point:BEFORE FIELD gzad002
            {<point name="construct.b.page2.gzad002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad002
            
            #add-point:AFTER FIELD gzad002
            {<point name="construct.a.page2.gzad002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad002
         ON ACTION controlp INFIELD gzad002
            #add-point:ON ACTION controlp INFIELD gzad002
            {<point name="construct.c.page2.gzad002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_ref_style
            #add-point:BEFORE FIELD l_ref_style
            {<point name="construct.b.page2.l_ref_style" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_ref_style
            
            #add-point:AFTER FIELD l_ref_style
            {<point name="construct.a.page2.l_ref_style" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.l_ref_style
         ON ACTION controlp INFIELD l_ref_style
            #add-point:ON ACTION controlp INFIELD l_ref_style
            {<point name="construct.c.page2.l_ref_style" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad003
            #add-point:BEFORE FIELD gzad003
            {<point name="construct.b.page2.gzad003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad003
            
            #add-point:AFTER FIELD gzad003
            {<point name="construct.a.page2.gzad003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad003
         ON ACTION controlp INFIELD gzad003
            #add-point:ON ACTION controlp INFIELD gzad003
            {<point name="construct.c.page2.gzad003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad004
            #add-point:BEFORE FIELD gzad004
            {<point name="construct.b.page2.gzad004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad004
            
            #add-point:AFTER FIELD gzad004
            {<point name="construct.a.page2.gzad004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad004
         ON ACTION controlp INFIELD gzad004
            #add-point:ON ACTION controlp INFIELD gzad004
            {<point name="construct.c.page2.gzad004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad005
            #add-point:BEFORE FIELD gzad005
            {<point name="construct.b.page2.gzad005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad005
            
            #add-point:AFTER FIELD gzad005
            {<point name="construct.a.page2.gzad005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad005
         ON ACTION controlp INFIELD gzad005
            #add-point:ON ACTION controlp INFIELD gzad005
            {<point name="construct.c.page2.gzad005" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.gzad006
         ON ACTION controlp INFIELD gzad006
            #add-point:ON ACTION controlp INFIELD gzad006
            {<point name="construct.c.page2.gzad006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad006
            #add-point:BEFORE FIELD gzad006
            {<point name="construct.b.page2.gzad006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad006
            
            #add-point:AFTER FIELD gzad006
            {<point name="construct.a.page2.gzad006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad007
         ON ACTION controlp INFIELD gzad007
            #add-point:ON ACTION controlp INFIELD gzad007
            {<point name="construct.c.page2.gzad007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad007
            #add-point:BEFORE FIELD gzad007
            {<point name="construct.b.page2.gzad007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad007
            
            #add-point:AFTER FIELD gzad007
            {<point name="construct.a.page2.gzad007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad008
         ON ACTION controlp INFIELD gzad008
            #add-point:ON ACTION controlp INFIELD gzad008
            {<point name="construct.c.page2.gzad008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad008
            #add-point:BEFORE FIELD gzad008
            {<point name="construct.b.page2.gzad008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad008
            
            #add-point:AFTER FIELD gzad008
            {<point name="construct.a.page2.gzad008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad015
         ON ACTION controlp INFIELD gzad015
            #add-point:ON ACTION controlp INFIELD gzad015
            {<point name="construct.c.page2.gzad015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad015
            #add-point:BEFORE FIELD gzad015
            {<point name="construct.b.page2.gzad015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad015
            
            #add-point:AFTER FIELD gzad015
            {<point name="construct.a.page2.gzad015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad016
         ON ACTION controlp INFIELD gzad016
            #add-point:ON ACTION controlp INFIELD gzad016
            {<point name="construct.c.page2.gzad016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad016
            #add-point:BEFORE FIELD gzad016
            {<point name="construct.b.page2.gzad016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad016
            
            #add-point:AFTER FIELD gzad016
            {<point name="construct.a.page2.gzad016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad017
         ON ACTION controlp INFIELD gzad017
            #add-point:ON ACTION controlp INFIELD gzad017
            {<point name="construct.c.page2.gzad017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad017
            #add-point:BEFORE FIELD gzad017
            {<point name="construct.b.page2.gzad017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad017
            
            #add-point:AFTER FIELD gzad017
            {<point name="construct.a.page2.gzad017" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad009
            #add-point:BEFORE FIELD gzad009
            {<point name="construct.b.page2.gzad009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad009
            
            #add-point:AFTER FIELD gzad009
            {<point name="construct.a.page2.gzad009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad009
         ON ACTION controlp INFIELD gzad009
            #add-point:ON ACTION controlp INFIELD gzad009
            {<point name="construct.c.page2.gzad009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad014
            #add-point:BEFORE FIELD gzad014
            {<point name="construct.b.page2.gzad014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad014
            
            #add-point:AFTER FIELD gzad014
            {<point name="construct.a.page2.gzad014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad014
         ON ACTION controlp INFIELD gzad014
            #add-point:ON ACTION controlp INFIELD gzad014
            {<point name="construct.c.page2.gzad014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad010
            #add-point:BEFORE FIELD gzad010
            {<point name="construct.b.page2.gzad010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad010
            
            #add-point:AFTER FIELD gzad010
            {<point name="construct.a.page2.gzad010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad010
         ON ACTION controlp INFIELD gzad010
            #add-point:ON ACTION controlp INFIELD gzad010
            {<point name="construct.c.page2.gzad010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad011
            #add-point:BEFORE FIELD gzad011
            {<point name="construct.b.page2.gzad011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad011
            
            #add-point:AFTER FIELD gzad011
            {<point name="construct.a.page2.gzad011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad011
         ON ACTION controlp INFIELD gzad011
            #add-point:ON ACTION controlp INFIELD gzad011
            {<point name="construct.c.page2.gzad011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad012
            #add-point:BEFORE FIELD gzad012
            {<point name="construct.b.page2.gzad012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad012
            
            #add-point:AFTER FIELD gzad012
            {<point name="construct.a.page2.gzad012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad012
         ON ACTION controlp INFIELD gzad012
            #add-point:ON ACTION controlp INFIELD gzad012
            {<point name="construct.c.page2.gzad012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad013
            #add-point:BEFORE FIELD gzad013
            {<point name="construct.b.page2.gzad013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad013
            
            #add-point:AFTER FIELD gzad013
            {<point name="construct.a.page2.gzad013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzad013
         ON ACTION controlp INFIELD gzad013
            #add-point:ON ACTION controlp INFIELD gzad013
            {<point name="construct.c.page2.gzad013" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi650_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzaa001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.delete" ver="9" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi650_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_gzaa_m.gzaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_master_multi_table_t.gzaal001 = g_gzaa_m.gzaa001
LET g_master_multi_table_t.gzaal003 = g_gzaa_m.gzaal003
LET g_master_multi_table_t.gzaal004 = g_gzaa_m.gzaal004
 
 
   CALL azzi650_show()
   
   CALL s_transaction_begin()
 
   OPEN azzi650_cl USING g_gzaa_m.gzaa001
   IF STATUS THEN
      CALL cl_err("OPEN azzi650_cl:", STATUS, 1)
      CLOSE azzi650_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi650_master_referesh USING g_gzaa_m.gzaa001 INTO g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaa002, 
       g_gzaa_m.gzaa003,g_gzaa_m.gzaastus,g_gzaa_m.gzaaownid,g_gzaa_m.gzaaowndp,g_gzaa_m.gzaacrtid,g_gzaa_m.gzaacrtdp, 
       g_gzaa_m.gzaacrtdt,g_gzaa_m.gzaamodid,g_gzaa_m.gzaamoddt,g_gzaa_m.gzaaownid_desc,g_gzaa_m.gzaaowndp_desc, 
       g_gzaa_m.gzaacrtid_desc,g_gzaa_m.gzaacrtdp_desc,g_gzaa_m.gzaamodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzaa_m.gzaa001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi650_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_gzaa001_t = g_gzaa_m.gzaa001
 
 
      DELETE FROM gzaa_t
       WHERE  gzaa001 = g_gzaa_m.gzaa001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_gzaa_m.gzaa001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzac_t
       WHERE  gzac001 = g_gzaa_m.gzaa001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzac_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM gzad_t
       WHERE 
             gzad001 = g_gzaa_m.gzaa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzad_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_gzac_d.clear() 
      CALL g_gzac2_d.clear()       
 
     
      #CALL azzi650_ui_browser_refresh()  
      CALL azzi650_ui_headershow()  
      CALL azzi650_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL azzi650_browser_fill("")
         CALL azzi650_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL azzi650_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzaal001
   LET l_field_keys[01] = 'gzaal001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'gzaal002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzaal_t')
 
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE azzi650_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzaa_m.gzaa001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="azzi650.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi650_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM gzac_t
       WHERE 
         gzac001 = ps_keys_bak[1] AND gzac002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM gzad_t
       WHERE 
         gzad001 = ps_keys_bak[1] AND gzad002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzad_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.description" ver="40" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:4,PR版次:4) Build-000484
#+ 
#+ Filename...: azzi650
#+ Description: 應用分類碼維護作業
#+ Creator....: 00845(2013/06/01)
#+ Modifier...: 02599(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="azzi650.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION azzi650_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzac_t.*
   DEFINE l_detail2    RECORD LIKE gzad_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi650_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi650_detail AS ",
                "SELECT * FROM gzac_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi650_detail SELECT * FROM gzac_t 
                                         WHERE  gzac001 = g_gzaa001_t
 
   
   #將key修正為調整後   
   UPDATE azzi650_detail 
      #更新key欄位
      SET gzac001 = g_gzaa_m.gzaa001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO gzac_t SELECT * FROM azzi650_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi650_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE azzi650_detail AS ",
      "SELECT * FROM gzad_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi650_detail SELECT * FROM gzad_t
                                         WHERE  gzad001 = g_gzaa001_t
 
 
   #將key修正為調整後   
   UPDATE azzi650_detail SET gzad001 = g_gzaa_m.gzaa001
 
  
   #將資料塞回原table   
   INSERT INTO gzad_t SELECT * FROM azzi650_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi650_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzaa001_t = g_gzaa_m.gzaa001
 
   
   DROP TABLE azzi650_detail
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION azzi650_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.fetch" ver="4" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi650_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzaa_m.gzaa001 = g_browser[g_current_idx].b_gzaa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi650_master_referesh USING g_gzaa_m.gzaa001 INTO g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaa002, 
       g_gzaa_m.gzaa003,g_gzaa_m.gzaastus,g_gzaa_m.gzaaownid,g_gzaa_m.gzaaowndp,g_gzaa_m.gzaacrtid,g_gzaa_m.gzaacrtdp, 
       g_gzaa_m.gzaacrtdt,g_gzaa_m.gzaamodid,g_gzaa_m.gzaamoddt,g_gzaa_m.gzaaownid_desc,g_gzaa_m.gzaaowndp_desc, 
       g_gzaa_m.gzaacrtid_desc,g_gzaa_m.gzaacrtdp_desc,g_gzaa_m.gzaamodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzaa_t",SQLCA.sqlcode,1)
      INITIALIZE g_gzaa_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL azzi650_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION azzi650_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.filter" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION azzi650_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gzaa001,gzaa002,gzaa003
                          FROM s_browse[1].b_gzaa001,s_browse[1].b_gzaa002,s_browse[1].b_gzaa003
 
         BEFORE CONSTRUCT
               DISPLAY azzi650_filter_parser('gzaa001') TO s_browse[1].b_gzaa001
            DISPLAY azzi650_filter_parser('gzaa002') TO s_browse[1].b_gzaa002
            DISPLAY azzi650_filter_parser('gzaa003') TO s_browse[1].b_gzaa003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL azzi650_filter_show('gzaa001')
   CALL azzi650_filter_show('gzaa002')
   CALL azzi650_filter_show('gzaa003')
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi650_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION azzi650_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = azzi650_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.global" ver="6" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzaa_m        RECORD
       gzaa004 LIKE gzaa_t.gzaa004, 
   gzaa001 LIKE gzaa_t.gzaa001, 
   gzaal003 LIKE gzaal_t.gzaal003, 
   gzaal004 LIKE gzaal_t.gzaal004, 
   gzaa002 LIKE gzaa_t.gzaa002, 
   gzaa003 LIKE gzaa_t.gzaa003, 
   gzzz001 LIKE gzzz_t.gzzz001, 
   gzzal003 LIKE gzzal_t.gzzal003, 
   gzaastus LIKE gzaa_t.gzaastus, 
   gzaaownid LIKE gzaa_t.gzaaownid, 
   gzaaownid_desc LIKE type_t.chr80, 
   gzaaowndp LIKE gzaa_t.gzaaowndp, 
   gzaaowndp_desc LIKE type_t.chr80, 
   gzaacrtid LIKE gzaa_t.gzaacrtid, 
   gzaacrtid_desc LIKE type_t.chr80, 
   gzaacrtdp LIKE gzaa_t.gzaacrtdp, 
   gzaacrtdp_desc LIKE type_t.chr80, 
   gzaacrtdt DATETIME YEAR TO SECOND, 
   gzaamodid LIKE gzaa_t.gzaamodid, 
   gzaamodid_desc LIKE type_t.chr80, 
   gzaamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzac_d        RECORD
       gzac002 LIKE gzac_t.gzac002, 
   gzac023 LIKE gzac_t.gzac023, 
   gzac024 LIKE gzac_t.gzac024, 
   gzac003 LIKE gzac_t.gzac003, 
   gzac004 LIKE gzac_t.gzac004, 
   gzac005 LIKE gzac_t.gzac005, 
   gzac006 LIKE gzac_t.gzac006, 
   gzac007 LIKE gzac_t.gzac007, 
   gzac008 LIKE gzac_t.gzac008, 
   gzac009 LIKE gzac_t.gzac009, 
   gzac010 LIKE gzac_t.gzac010, 
   gzac011 LIKE gzac_t.gzac011, 
   gzac012 LIKE gzac_t.gzac012, 
   gzac013 LIKE gzac_t.gzac013, 
   gzac014 LIKE gzac_t.gzac014, 
   gzac015 LIKE gzac_t.gzac015, 
   gzac016 LIKE gzac_t.gzac016, 
   gzac017 LIKE gzac_t.gzac017, 
   gzac018 LIKE gzac_t.gzac018, 
   gzac019 LIKE gzac_t.gzac019, 
   gzac020 LIKE gzac_t.gzac020, 
   gzac021 LIKE gzac_t.gzac021, 
   gzac022 LIKE gzac_t.gzac022
       END RECORD
PRIVATE TYPE type_g_gzac2_d RECORD
       gzad002 LIKE gzad_t.gzad002, 
   gzad002_desc LIKE type_t.chr500, 
   l_ref_style LIKE type_t.chr80, 
   gzad003 LIKE gzad_t.gzad003, 
   gzad004 LIKE gzad_t.gzad004, 
   gzad005 LIKE gzad_t.gzad005, 
   gzad006 LIKE gzad_t.gzad006, 
   gzad006_desc LIKE type_t.chr500, 
   gzad007 LIKE gzad_t.gzad007, 
   gzad008 LIKE gzad_t.gzad008, 
   gzad015 LIKE gzad_t.gzad015, 
   gzad016 LIKE gzad_t.gzad016, 
   gzad017 LIKE gzad_t.gzad017, 
   gzad009 LIKE gzad_t.gzad009, 
   gzad014 LIKE gzad_t.gzad014, 
   gzad010 LIKE gzad_t.gzad010, 
   gzad011 LIKE gzad_t.gzad011, 
   gzad012 LIKE gzad_t.gzad012, 
   gzad013 LIKE gzad_t.gzad013
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_gzaa_m          type_g_gzaa_m
DEFINE g_gzaa_m_t        type_g_gzaa_m
 
   DEFINE g_gzaa001_t LIKE gzaa_t.gzaa001
 
 
DEFINE g_gzac_d          DYNAMIC ARRAY OF type_g_gzac_d
DEFINE g_gzac_d_t        type_g_gzac_d
DEFINE g_gzac2_d   DYNAMIC ARRAY OF type_g_gzac2_d
DEFINE g_gzac2_d_t type_g_gzac2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzaa001 LIKE gzaa_t.gzaa001,
   b_gzaa001_desc LIKE type_t.chr80,
      b_gzaa002 LIKE gzaa_t.gzaa002,
      b_gzaa003 LIKE gzaa_t.gzaa003,
   b_gzzz001 LIKE type_t.chr80,
   b_gzzz001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzaa001 LIKE gzaa_t.gzaa001,
   b_gzaa001_desc LIKE type_t.chr80,
      b_gzaa002 LIKE gzaa_t.gzaa002,
      b_gzaa003 LIKE gzaa_t.gzaa003,
   b_gzzz001 LIKE type_t.chr80,
   b_gzzz001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      gzaal001 LIKE gzaal_t.gzaal001,
      gzaal003 LIKE gzaal_t.gzaal003,
      gzaal004 LIKE gzaal_t.gzaal004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="azzi650.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION azzi650_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gzac_d.getLength() THEN
         LET g_detail_idx = g_gzac_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzac_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzac_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_gzac2_d.getLength() THEN
         LET g_detail_idx = g_gzac2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzac2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzac2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi650_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('gzaastus','17','N,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL azzi650_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="azzi650.input" ver="5" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi650_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzac002,gzac023,gzac024,gzac003,gzac004,gzac005,gzac006,gzac007,gzac008, 
       gzac009,gzac010,gzac011,gzac012,gzac013,gzac014,gzac015,gzac016,gzac017,gzac018,gzac019,gzac020, 
       gzac021,gzac022 FROM gzac_t WHERE gzac001=? AND gzac002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi650_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT gzad002,gzad003,gzad004,gzad005,gzad006,gzad007,gzad008,gzad015,gzad016, 
       gzad017,gzad009,gzad014,gzad010,gzad011,gzad012,gzad013 FROM gzad_t WHERE gzad001=? AND gzad002=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi650_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi650_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi650_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaal003,g_gzaa_m.gzaal004,g_gzaa_m.gzaa002, 
       g_gzaa_m.gzaa003,g_gzaa_m.gzaastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="azzi650.input.body" ver="5" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzac_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzac_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi650_b_fill()
            LET g_rec_b = g_gzac_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi650_cl USING g_gzaa_m.gzaa001
            IF STATUS THEN
               CALL cl_err("OPEN azzi650_cl:", STATUS, 1)
               CLOSE azzi650_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzac_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzac_d[l_ac].gzac002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzac_d_t.* = g_gzac_d[l_ac].*  #BACKUP
               CALL azzi650_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL azzi650_set_no_entry_b(l_cmd)
               IF NOT azzi650_lock_b("gzac_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi650_bcl INTO g_gzac_d[l_ac].gzac002,g_gzac_d[l_ac].gzac023,g_gzac_d[l_ac].gzac024, 
                      g_gzac_d[l_ac].gzac003,g_gzac_d[l_ac].gzac004,g_gzac_d[l_ac].gzac005,g_gzac_d[l_ac].gzac006, 
                      g_gzac_d[l_ac].gzac007,g_gzac_d[l_ac].gzac008,g_gzac_d[l_ac].gzac009,g_gzac_d[l_ac].gzac010, 
                      g_gzac_d[l_ac].gzac011,g_gzac_d[l_ac].gzac012,g_gzac_d[l_ac].gzac013,g_gzac_d[l_ac].gzac014, 
                      g_gzac_d[l_ac].gzac015,g_gzac_d[l_ac].gzac016,g_gzac_d[l_ac].gzac017,g_gzac_d[l_ac].gzac018, 
                      g_gzac_d[l_ac].gzac019,g_gzac_d[l_ac].gzac020,g_gzac_d[l_ac].gzac021,g_gzac_d[l_ac].gzac022 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_gzac_d_t.gzac002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL azzi650_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzac_d[l_ac].* TO NULL 
            
            LET g_gzac_d_t.* = g_gzac_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi650_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi650_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzac_d[li_reproduce_target].* = g_gzac_d[li_reproduce].*
 
               LET g_gzac_d[li_reproduce_target].gzac002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzac_t 
             WHERE  gzac001 = g_gzaa_m.gzaa001
 
               AND gzac002 = g_gzac_d[l_ac].gzac002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzaa_m.gzaa001
               LET gs_keys[2] = g_gzac_d[g_detail_idx].gzac002
               CALL azzi650_insert_b('gzac_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzac_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi650_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzac_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzac_d.deleteElement(l_ac)
               NEXT FIELD gzac002
            END IF
         
            IF g_gzac_d[l_ac].gzac002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM gzac_t
                WHERE  gzac001 = g_gzaa_m.gzaa001 AND
 
                      gzac002 = g_gzac_d_t.gzac002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzac_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi650_bcl
               LET l_count = g_gzac_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzaa_m.gzaa001
               LET gs_keys[2] = g_gzac_d[g_detail_idx].gzac002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL azzi650_delete_b('gzac_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzac002
            #add-point:BEFORE FIELD gzac002
            {<point name="input.b.page1.gzac002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac002
            
            #add-point:AFTER FIELD gzac002
            {<point name="input.a.page1.gzac002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac002
            #add-point:ON CHANGE gzac002
            {<point name="input.g.page1.gzac002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac023
            #add-point:BEFORE FIELD gzac023
            {<point name="input.b.page1.gzac023" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac023
            
            #add-point:AFTER FIELD gzac023
            {<point name="input.a.page1.gzac023" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac023
            #add-point:ON CHANGE gzac023
            {<point name="input.g.page1.gzac023" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac024
            #add-point:BEFORE FIELD gzac024
            {<point name="input.b.page1.gzac024" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac024
            
            #add-point:AFTER FIELD gzac024
            {<point name="input.a.page1.gzac024" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac024
            #add-point:ON CHANGE gzac024
            {<point name="input.g.page1.gzac024" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac003
            #add-point:BEFORE FIELD gzac003
            {<point name="input.b.page1.gzac003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac003
            
            #add-point:AFTER FIELD gzac003
            {<point name="input.a.page1.gzac003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac003
            #add-point:ON CHANGE gzac003
            {<point name="input.g.page1.gzac003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac004
            #add-point:BEFORE FIELD gzac004
            {<point name="input.b.page1.gzac004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac004
            
            #add-point:AFTER FIELD gzac004
            {<point name="input.a.page1.gzac004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac004
            #add-point:ON CHANGE gzac004
            {<point name="input.g.page1.gzac004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac005
            #add-point:BEFORE FIELD gzac005
            {<point name="input.b.page1.gzac005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac005
            
            #add-point:AFTER FIELD gzac005
            {<point name="input.a.page1.gzac005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac005
            #add-point:ON CHANGE gzac005
            {<point name="input.g.page1.gzac005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac006
            #add-point:BEFORE FIELD gzac006
            {<point name="input.b.page1.gzac006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac006
            
            #add-point:AFTER FIELD gzac006
            {<point name="input.a.page1.gzac006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac006
            #add-point:ON CHANGE gzac006
            {<point name="input.g.page1.gzac006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac007
            #add-point:BEFORE FIELD gzac007
            {<point name="input.b.page1.gzac007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac007
            
            #add-point:AFTER FIELD gzac007
            {<point name="input.a.page1.gzac007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac007
            #add-point:ON CHANGE gzac007
            {<point name="input.g.page1.gzac007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac008
            #add-point:BEFORE FIELD gzac008
            {<point name="input.b.page1.gzac008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac008
            
            #add-point:AFTER FIELD gzac008
            {<point name="input.a.page1.gzac008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac008
            #add-point:ON CHANGE gzac008
            {<point name="input.g.page1.gzac008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac009
            #add-point:BEFORE FIELD gzac009
            {<point name="input.b.page1.gzac009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac009
            
            #add-point:AFTER FIELD gzac009
            {<point name="input.a.page1.gzac009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac009
            #add-point:ON CHANGE gzac009
            {<point name="input.g.page1.gzac009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac010
            #add-point:BEFORE FIELD gzac010
            {<point name="input.b.page1.gzac010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac010
            
            #add-point:AFTER FIELD gzac010
            {<point name="input.a.page1.gzac010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac010
            #add-point:ON CHANGE gzac010
            {<point name="input.g.page1.gzac010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac011
            #add-point:BEFORE FIELD gzac011
            {<point name="input.b.page1.gzac011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac011
            
            #add-point:AFTER FIELD gzac011
            {<point name="input.a.page1.gzac011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac011
            #add-point:ON CHANGE gzac011
            {<point name="input.g.page1.gzac011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac012
            #add-point:BEFORE FIELD gzac012
            {<point name="input.b.page1.gzac012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac012
            
            #add-point:AFTER FIELD gzac012
            {<point name="input.a.page1.gzac012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac012
            #add-point:ON CHANGE gzac012
            {<point name="input.g.page1.gzac012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac013
            #add-point:BEFORE FIELD gzac013
            {<point name="input.b.page1.gzac013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac013
            
            #add-point:AFTER FIELD gzac013
            {<point name="input.a.page1.gzac013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac013
            #add-point:ON CHANGE gzac013
            {<point name="input.g.page1.gzac013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac014
            #add-point:BEFORE FIELD gzac014
            {<point name="input.b.page1.gzac014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac014
            
            #add-point:AFTER FIELD gzac014
            {<point name="input.a.page1.gzac014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac014
            #add-point:ON CHANGE gzac014
            {<point name="input.g.page1.gzac014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac015
            #add-point:BEFORE FIELD gzac015
            {<point name="input.b.page1.gzac015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac015
            
            #add-point:AFTER FIELD gzac015
            {<point name="input.a.page1.gzac015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac015
            #add-point:ON CHANGE gzac015
            {<point name="input.g.page1.gzac015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac016
            #add-point:BEFORE FIELD gzac016
            {<point name="input.b.page1.gzac016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac016
            
            #add-point:AFTER FIELD gzac016
            {<point name="input.a.page1.gzac016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac016
            #add-point:ON CHANGE gzac016
            {<point name="input.g.page1.gzac016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac017
            #add-point:BEFORE FIELD gzac017
            {<point name="input.b.page1.gzac017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac017
            
            #add-point:AFTER FIELD gzac017
            {<point name="input.a.page1.gzac017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac017
            #add-point:ON CHANGE gzac017
            {<point name="input.g.page1.gzac017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac018
            #add-point:BEFORE FIELD gzac018
            {<point name="input.b.page1.gzac018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac018
            
            #add-point:AFTER FIELD gzac018
            {<point name="input.a.page1.gzac018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac018
            #add-point:ON CHANGE gzac018
            {<point name="input.g.page1.gzac018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac019
            #add-point:BEFORE FIELD gzac019
            {<point name="input.b.page1.gzac019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac019
            
            #add-point:AFTER FIELD gzac019
            {<point name="input.a.page1.gzac019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac019
            #add-point:ON CHANGE gzac019
            {<point name="input.g.page1.gzac019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac020
            #add-point:BEFORE FIELD gzac020
            {<point name="input.b.page1.gzac020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac020
            
            #add-point:AFTER FIELD gzac020
            {<point name="input.a.page1.gzac020" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac020
            #add-point:ON CHANGE gzac020
            {<point name="input.g.page1.gzac020" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac021
            #add-point:BEFORE FIELD gzac021
            {<point name="input.b.page1.gzac021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac021
            
            #add-point:AFTER FIELD gzac021
            {<point name="input.a.page1.gzac021" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac021
            #add-point:ON CHANGE gzac021
            {<point name="input.g.page1.gzac021" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzac022
            #add-point:BEFORE FIELD gzac022
            {<point name="input.b.page1.gzac022" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzac022
            
            #add-point:AFTER FIELD gzac022
            {<point name="input.a.page1.gzac022" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzac022
            #add-point:ON CHANGE gzac022
            {<point name="input.g.page1.gzac022" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.gzac002
         ON ACTION controlp INFIELD gzac002
            #add-point:ON ACTION controlp INFIELD gzac002
            {<point name="input.c.page1.gzac002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac023
         ON ACTION controlp INFIELD gzac023
            #add-point:ON ACTION controlp INFIELD gzac023
            {<point name="input.c.page1.gzac023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac024
         ON ACTION controlp INFIELD gzac024
            #add-point:ON ACTION controlp INFIELD gzac024
            {<point name="input.c.page1.gzac024" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac003
         ON ACTION controlp INFIELD gzac003
            #add-point:ON ACTION controlp INFIELD gzac003
            {<point name="input.c.page1.gzac003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac004
         ON ACTION controlp INFIELD gzac004
            #add-point:ON ACTION controlp INFIELD gzac004
            {<point name="input.c.page1.gzac004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac005
         ON ACTION controlp INFIELD gzac005
            #add-point:ON ACTION controlp INFIELD gzac005
            {<point name="input.c.page1.gzac005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac006
         ON ACTION controlp INFIELD gzac006
            #add-point:ON ACTION controlp INFIELD gzac006
            {<point name="input.c.page1.gzac006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac007
         ON ACTION controlp INFIELD gzac007
            #add-point:ON ACTION controlp INFIELD gzac007
            {<point name="input.c.page1.gzac007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac008
         ON ACTION controlp INFIELD gzac008
            #add-point:ON ACTION controlp INFIELD gzac008
            {<point name="input.c.page1.gzac008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac009
         ON ACTION controlp INFIELD gzac009
            #add-point:ON ACTION controlp INFIELD gzac009
            {<point name="input.c.page1.gzac009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac010
         ON ACTION controlp INFIELD gzac010
            #add-point:ON ACTION controlp INFIELD gzac010
            {<point name="input.c.page1.gzac010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac011
         ON ACTION controlp INFIELD gzac011
            #add-point:ON ACTION controlp INFIELD gzac011
            {<point name="input.c.page1.gzac011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac012
         ON ACTION controlp INFIELD gzac012
            #add-point:ON ACTION controlp INFIELD gzac012
            {<point name="input.c.page1.gzac012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac013
         ON ACTION controlp INFIELD gzac013
            #add-point:ON ACTION controlp INFIELD gzac013
            {<point name="input.c.page1.gzac013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac014
         ON ACTION controlp INFIELD gzac014
            #add-point:ON ACTION controlp INFIELD gzac014
            {<point name="input.c.page1.gzac014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac015
         ON ACTION controlp INFIELD gzac015
            #add-point:ON ACTION controlp INFIELD gzac015
            {<point name="input.c.page1.gzac015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac016
         ON ACTION controlp INFIELD gzac016
            #add-point:ON ACTION controlp INFIELD gzac016
            {<point name="input.c.page1.gzac016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac017
         ON ACTION controlp INFIELD gzac017
            #add-point:ON ACTION controlp INFIELD gzac017
            {<point name="input.c.page1.gzac017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac018
         ON ACTION controlp INFIELD gzac018
            #add-point:ON ACTION controlp INFIELD gzac018
            {<point name="input.c.page1.gzac018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac019
         ON ACTION controlp INFIELD gzac019
            #add-point:ON ACTION controlp INFIELD gzac019
            {<point name="input.c.page1.gzac019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac020
         ON ACTION controlp INFIELD gzac020
            #add-point:ON ACTION controlp INFIELD gzac020
            {<point name="input.c.page1.gzac020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac021
         ON ACTION controlp INFIELD gzac021
            #add-point:ON ACTION controlp INFIELD gzac021
            {<point name="input.c.page1.gzac021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzac022
         ON ACTION controlp INFIELD gzac022
            #add-point:ON ACTION controlp INFIELD gzac022
            {<point name="input.c.page1.gzac022" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzac_d[l_ac].* = g_gzac_d_t.*
               CLOSE azzi650_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_gzac_d[l_ac].gzac002,-263,1)
               LET g_gzac_d[l_ac].* = g_gzac_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE gzac_t SET (gzac001,gzac002,gzac023,gzac024,gzac003,gzac004,gzac005,gzac006,gzac007, 
                   gzac008,gzac009,gzac010,gzac011,gzac012,gzac013,gzac014,gzac015,gzac016,gzac017,gzac018, 
                   gzac019,gzac020,gzac021,gzac022) = (g_gzaa_m.gzaa001,g_gzac_d[l_ac].gzac002,g_gzac_d[l_ac].gzac023, 
                   g_gzac_d[l_ac].gzac024,g_gzac_d[l_ac].gzac003,g_gzac_d[l_ac].gzac004,g_gzac_d[l_ac].gzac005, 
                   g_gzac_d[l_ac].gzac006,g_gzac_d[l_ac].gzac007,g_gzac_d[l_ac].gzac008,g_gzac_d[l_ac].gzac009, 
                   g_gzac_d[l_ac].gzac010,g_gzac_d[l_ac].gzac011,g_gzac_d[l_ac].gzac012,g_gzac_d[l_ac].gzac013, 
                   g_gzac_d[l_ac].gzac014,g_gzac_d[l_ac].gzac015,g_gzac_d[l_ac].gzac016,g_gzac_d[l_ac].gzac017, 
                   g_gzac_d[l_ac].gzac018,g_gzac_d[l_ac].gzac019,g_gzac_d[l_ac].gzac020,g_gzac_d[l_ac].gzac021, 
                   g_gzac_d[l_ac].gzac022)
                WHERE  gzac001 = g_gzaa_m.gzaa001 
 
                  AND gzac002 = g_gzac_d_t.gzac002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzac_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_gzac_d[l_ac].* = g_gzac_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzac_t",SQLCA.sqlcode,1)
                     LET g_gzac_d[l_ac].* = g_gzac_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzaa_m.gzaa001
               LET gs_keys_bak[1] = g_gzaa001_t
               LET gs_keys[2] = g_gzac_d[g_detail_idx].gzac002
               LET gs_keys_bak[2] = g_gzac_d_t.gzac002
               CALL azzi650_update_b('gzac_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_gzaa_m),util.JSON.stringify(g_gzac_d_t)
               LET g_log2 = util.JSON.stringify(g_gzaa_m),util.JSON.stringify(g_gzac_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL azzi650_unlock_b("gzac_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzac_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzac_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_gzac2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzac2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi650_b_fill()
            LET g_rec_b = g_gzac2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzac2_d[l_ac].* TO NULL 
                  LET g_gzac2_d[l_ac].gzad003 = "N"
      LET g_gzac2_d[l_ac].gzad004 = "Y"
      LET g_gzac2_d[l_ac].gzad005 = "2"
 
            LET g_gzac2_d_t.* = g_gzac2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi650_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi650_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzac2_d[li_reproduce_target].* = g_gzac2_d[li_reproduce].*
 
               LET g_gzac2_d[li_reproduce_target].gzad002 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi650_cl USING g_gzaa_m.gzaa001
            IF STATUS THEN
               CALL cl_err("OPEN azzi650_cl:", STATUS, 1)
               CLOSE azzi650_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzac2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzac2_d[l_ac].gzad002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_gzac2_d_t.* = g_gzac2_d[l_ac].*  #BACKUP
               CALL azzi650_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL azzi650_set_no_entry_b(l_cmd)
               IF NOT azzi650_lock_b("gzad_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi650_bcl2 INTO g_gzac2_d[l_ac].gzad002,g_gzac2_d[l_ac].gzad003,g_gzac2_d[l_ac].gzad004, 
                      g_gzac2_d[l_ac].gzad005,g_gzac2_d[l_ac].gzad006,g_gzac2_d[l_ac].gzad007,g_gzac2_d[l_ac].gzad008, 
                      g_gzac2_d[l_ac].gzad015,g_gzac2_d[l_ac].gzad016,g_gzac2_d[l_ac].gzad017,g_gzac2_d[l_ac].gzad009, 
                      g_gzac2_d[l_ac].gzad014,g_gzac2_d[l_ac].gzad010,g_gzac2_d[l_ac].gzad011,g_gzac2_d[l_ac].gzad012, 
                      g_gzac2_d[l_ac].gzad013
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL azzi650_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzac2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzac2_d.deleteElement(l_ac)
               NEXT FIELD gzad002
            END IF
         
            IF g_gzac2_d[l_ac].gzad002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM gzad_t
                WHERE  gzad001 = g_gzaa_m.gzaa001 AND
                      gzad002 = g_gzac2_d_t.gzad002
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzac_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi650_bcl
               LET l_count = g_gzac_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzaa_m.gzaa001
               LET gs_keys[2] = g_gzac2_d[g_detail_idx].gzad002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL azzi650_delete_b('gzad_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzad_t 
             WHERE  gzad001 = g_gzaa_m.gzaa001
               AND gzad002 = g_gzac2_d[l_ac].gzad002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzaa_m.gzaa001
               LET gs_keys[2] = g_gzac2_d[g_detail_idx].gzad002
               CALL azzi650_insert_b('gzad_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzad_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi650_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzac2_d[l_ac].* = g_gzac2_d_t.*
               CLOSE azzi650_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_gzac2_d[l_ac].* = g_gzac2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE gzad_t SET (gzad001,gzad002,gzad003,gzad004,gzad005,gzad006,gzad007,gzad008,gzad015, 
                   gzad016,gzad017,gzad009,gzad014,gzad010,gzad011,gzad012,gzad013) = (g_gzaa_m.gzaa001, 
                   g_gzac2_d[l_ac].gzad002,g_gzac2_d[l_ac].gzad003,g_gzac2_d[l_ac].gzad004,g_gzac2_d[l_ac].gzad005, 
                   g_gzac2_d[l_ac].gzad006,g_gzac2_d[l_ac].gzad007,g_gzac2_d[l_ac].gzad008,g_gzac2_d[l_ac].gzad015, 
                   g_gzac2_d[l_ac].gzad016,g_gzac2_d[l_ac].gzad017,g_gzac2_d[l_ac].gzad009,g_gzac2_d[l_ac].gzad014, 
                   g_gzac2_d[l_ac].gzad010,g_gzac2_d[l_ac].gzad011,g_gzac2_d[l_ac].gzad012,g_gzac2_d[l_ac].gzad013)  
                   #自訂欄位頁簽
                WHERE  gzad001 = g_gzaa_m.gzaa001
                  AND gzad002 = g_gzac2_d_t.gzad002 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzad_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_gzac2_d[l_ac].* = g_gzac2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzad_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_gzac2_d[l_ac].* = g_gzac2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzaa_m.gzaa001
               LET gs_keys_bak[1] = g_gzaa001_t
               LET gs_keys[2] = g_gzac2_d[g_detail_idx].gzad002
               LET gs_keys_bak[2] = g_gzac2_d_t.gzad002
               CALL azzi650_update_b('gzad_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_gzaa_m),util.JSON.stringify(g_gzac2_d_t)
               LET g_log2 = util.JSON.stringify(g_gzaa_m),util.JSON.stringify(g_gzac2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD gzad002
            
            #add-point:AFTER FIELD gzad002
            {<point name="input.a.page2.gzad002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad002
            #add-point:BEFORE FIELD gzad002
            {<point name="input.b.page2.gzad002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzad002
            #add-point:ON CHANGE gzad002
            {<point name="input.g.page2.gzad002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD l_ref_style
            #add-point:BEFORE FIELD l_ref_style
            {<point name="input.b.page2.l_ref_style" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD l_ref_style
            
            #add-point:AFTER FIELD l_ref_style
            {<point name="input.a.page2.l_ref_style" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE l_ref_style
            #add-point:ON CHANGE l_ref_style
            {<point name="input.g.page2.l_ref_style" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad003
            #add-point:BEFORE FIELD gzad003
            {<point name="input.b.page2.gzad003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad003
            
            #add-point:AFTER FIELD gzad003
            {<point name="input.a.page2.gzad003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad003
            #add-point:ON CHANGE gzad003
            {<point name="input.g.page2.gzad003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad004
            #add-point:BEFORE FIELD gzad004
            {<point name="input.b.page2.gzad004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad004
            
            #add-point:AFTER FIELD gzad004
            {<point name="input.a.page2.gzad004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad004
            #add-point:ON CHANGE gzad004
            {<point name="input.g.page2.gzad004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad005
            #add-point:BEFORE FIELD gzad005
            {<point name="input.b.page2.gzad005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad005
            
            #add-point:AFTER FIELD gzad005
            {<point name="input.a.page2.gzad005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad005
            #add-point:ON CHANGE gzad005
            {<point name="input.g.page2.gzad005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad006
            
            #add-point:AFTER FIELD gzad006
            {<point name="input.a.page2.gzad006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad006
            #add-point:BEFORE FIELD gzad006
            {<point name="input.b.page2.gzad006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzad006
            #add-point:ON CHANGE gzad006
            {<point name="input.g.page2.gzad006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad007
            
            #add-point:AFTER FIELD gzad007
            {<point name="input.a.page2.gzad007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad007
            #add-point:BEFORE FIELD gzad007
            {<point name="input.b.page2.gzad007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzad007
            #add-point:ON CHANGE gzad007
            {<point name="input.g.page2.gzad007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad008
            
            #add-point:AFTER FIELD gzad008
            {<point name="input.a.page2.gzad008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad008
            #add-point:BEFORE FIELD gzad008
            {<point name="input.b.page2.gzad008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzad008
            #add-point:ON CHANGE gzad008
            {<point name="input.g.page2.gzad008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad015
            #add-point:BEFORE FIELD gzad015
            {<point name="input.b.page2.gzad015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad015
            
            #add-point:AFTER FIELD gzad015
            {<point name="input.a.page2.gzad015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad015
            #add-point:ON CHANGE gzad015
            {<point name="input.g.page2.gzad015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad016
            #add-point:BEFORE FIELD gzad016
            {<point name="input.b.page2.gzad016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad016
            
            #add-point:AFTER FIELD gzad016
            {<point name="input.a.page2.gzad016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad016
            #add-point:ON CHANGE gzad016
            {<point name="input.g.page2.gzad016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad017
            #add-point:BEFORE FIELD gzad017
            {<point name="input.b.page2.gzad017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad017
            
            #add-point:AFTER FIELD gzad017
            {<point name="input.a.page2.gzad017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad017
            #add-point:ON CHANGE gzad017
            {<point name="input.g.page2.gzad017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad009
            #add-point:BEFORE FIELD gzad009
            {<point name="input.b.page2.gzad009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad009
            
            #add-point:AFTER FIELD gzad009
            {<point name="input.a.page2.gzad009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad009
            #add-point:ON CHANGE gzad009
            {<point name="input.g.page2.gzad009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad014
            #add-point:BEFORE FIELD gzad014
            {<point name="input.b.page2.gzad014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad014
            
            #add-point:AFTER FIELD gzad014
            {<point name="input.a.page2.gzad014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad014
            #add-point:ON CHANGE gzad014
            {<point name="input.g.page2.gzad014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad010
            #add-point:BEFORE FIELD gzad010
            {<point name="input.b.page2.gzad010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad010
            
            #add-point:AFTER FIELD gzad010
            {<point name="input.a.page2.gzad010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad010
            #add-point:ON CHANGE gzad010
            {<point name="input.g.page2.gzad010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad011
            #add-point:BEFORE FIELD gzad011
            {<point name="input.b.page2.gzad011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad011
            
            #add-point:AFTER FIELD gzad011
            {<point name="input.a.page2.gzad011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad011
            #add-point:ON CHANGE gzad011
            {<point name="input.g.page2.gzad011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad012
            #add-point:BEFORE FIELD gzad012
            {<point name="input.b.page2.gzad012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad012
            
            #add-point:AFTER FIELD gzad012
            {<point name="input.a.page2.gzad012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad012
            #add-point:ON CHANGE gzad012
            {<point name="input.g.page2.gzad012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzad013
            #add-point:BEFORE FIELD gzad013
            {<point name="input.b.page2.gzad013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzad013
            
            #add-point:AFTER FIELD gzad013
            {<point name="input.a.page2.gzad013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzad013
            #add-point:ON CHANGE gzad013
            {<point name="input.g.page2.gzad013" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.gzad002
         ON ACTION controlp INFIELD gzad002
            #add-point:ON ACTION controlp INFIELD gzad002
            {<point name="input.c.page2.gzad002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.l_ref_style
         ON ACTION controlp INFIELD l_ref_style
            #add-point:ON ACTION controlp INFIELD l_ref_style
            {<point name="input.c.page2.l_ref_style" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad003
         ON ACTION controlp INFIELD gzad003
            #add-point:ON ACTION controlp INFIELD gzad003
            {<point name="input.c.page2.gzad003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad004
         ON ACTION controlp INFIELD gzad004
            #add-point:ON ACTION controlp INFIELD gzad004
            {<point name="input.c.page2.gzad004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad005
         ON ACTION controlp INFIELD gzad005
            #add-point:ON ACTION controlp INFIELD gzad005
            {<point name="input.c.page2.gzad005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad006
         ON ACTION controlp INFIELD gzad006
            #add-point:ON ACTION controlp INFIELD gzad006
            {<point name="input.c.page2.gzad006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad007
         ON ACTION controlp INFIELD gzad007
            #add-point:ON ACTION controlp INFIELD gzad007
            {<point name="input.c.page2.gzad007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad008
         ON ACTION controlp INFIELD gzad008
            #add-point:ON ACTION controlp INFIELD gzad008
            {<point name="input.c.page2.gzad008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad015
         ON ACTION controlp INFIELD gzad015
            #add-point:ON ACTION controlp INFIELD gzad015
            {<point name="input.c.page2.gzad015" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad016
         ON ACTION controlp INFIELD gzad016
            #add-point:ON ACTION controlp INFIELD gzad016
            {<point name="input.c.page2.gzad016" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad017
         ON ACTION controlp INFIELD gzad017
            #add-point:ON ACTION controlp INFIELD gzad017
            {<point name="input.c.page2.gzad017" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad009
         ON ACTION controlp INFIELD gzad009
            #add-point:ON ACTION controlp INFIELD gzad009
            {<point name="input.c.page2.gzad009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad014
         ON ACTION controlp INFIELD gzad014
            #add-point:ON ACTION controlp INFIELD gzad014
            {<point name="input.c.page2.gzad014" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad010
         ON ACTION controlp INFIELD gzad010
            #add-point:ON ACTION controlp INFIELD gzad010
            {<point name="input.c.page2.gzad010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad011
         ON ACTION controlp INFIELD gzad011
            #add-point:ON ACTION controlp INFIELD gzad011
            {<point name="input.c.page2.gzad011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad012
         ON ACTION controlp INFIELD gzad012
            #add-point:ON ACTION controlp INFIELD gzad012
            {<point name="input.c.page2.gzad012" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzad013
         ON ACTION controlp INFIELD gzad013
            #add-point:ON ACTION controlp INFIELD gzad013
            {<point name="input.c.page2.gzad013" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzac2_d[l_ac].* = g_gzac2_d_t.*
               END IF
               CLOSE azzi650_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL azzi650_unlock_b("gzad_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_gzac2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzac2_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="azzi650.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaal003,g_gzaa_m.gzaal004,g_gzaa_m.gzaa002, 
          g_gzaa_m.gzaa003,g_gzaa_m.gzaastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.gzaal001 = g_gzaa_m.gzaa001
LET g_master_multi_table_t.gzaal003 = g_gzaa_m.gzaal003
LET g_master_multi_table_t.gzaal004 = g_gzaa_m.gzaal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.gzaal001 = ''
LET g_master_multi_table_t.gzaal003 = ''
LET g_master_multi_table_t.gzaal004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzaa004
            #add-point:BEFORE FIELD gzaa004
            {<point name="input.b.gzaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa004
            
            #add-point:AFTER FIELD gzaa004
            {<point name="input.a.gzaa004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzaa004
            #add-point:ON CHANGE gzaa004
            {<point name="input.g.gzaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaa001
            #add-point:BEFORE FIELD gzaa001
            {<point name="input.b.gzaa001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa001
            
            #add-point:AFTER FIELD gzaa001
            {<point name="input.a.gzaa001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzaa001
            #add-point:ON CHANGE gzaa001
            {<point name="input.g.gzaa001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaal003
            #add-point:BEFORE FIELD gzaal003
            {<point name="input.b.gzaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaal003
            
            #add-point:AFTER FIELD gzaal003
            {<point name="input.a.gzaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzaal003
            #add-point:ON CHANGE gzaal003
            {<point name="input.g.gzaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaal004
            #add-point:BEFORE FIELD gzaal004
            {<point name="input.b.gzaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaal004
            
            #add-point:AFTER FIELD gzaal004
            {<point name="input.a.gzaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzaal004
            #add-point:ON CHANGE gzaal004
            {<point name="input.g.gzaal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaa002
            #add-point:BEFORE FIELD gzaa002
            {<point name="input.b.gzaa002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa002
            
            #add-point:AFTER FIELD gzaa002
            {<point name="input.a.gzaa002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzaa002
            #add-point:ON CHANGE gzaa002
            {<point name="input.g.gzaa002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaa003
            #add-point:BEFORE FIELD gzaa003
            {<point name="input.b.gzaa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaa003
            
            #add-point:AFTER FIELD gzaa003
            {<point name="input.a.gzaa003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzaa003
            #add-point:ON CHANGE gzaa003
            {<point name="input.g.gzaa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzaastus
            #add-point:BEFORE FIELD gzaastus
            {<point name="input.b.gzaastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzaastus
            
            #add-point:AFTER FIELD gzaastus
            {<point name="input.a.gzaastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzaastus
            #add-point:ON CHANGE gzaastus
            {<point name="input.g.gzaastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.gzaa004
         ON ACTION controlp INFIELD gzaa004
            #add-point:ON ACTION controlp INFIELD gzaa004
            {<point name="input.c.gzaa004" />}
            #END add-point
 
         #Ctrlp:input.c.gzaa001
         ON ACTION controlp INFIELD gzaa001
            #add-point:ON ACTION controlp INFIELD gzaa001
            {<point name="input.c.gzaa001" />}
            #END add-point
 
         #Ctrlp:input.c.gzaal003
         ON ACTION controlp INFIELD gzaal003
            #add-point:ON ACTION controlp INFIELD gzaal003
            {<point name="input.c.gzaal003" />}
            #END add-point
 
         #Ctrlp:input.c.gzaal004
         ON ACTION controlp INFIELD gzaal004
            #add-point:ON ACTION controlp INFIELD gzaal004
            {<point name="input.c.gzaal004" />}
            #END add-point
 
         #Ctrlp:input.c.gzaa002
         ON ACTION controlp INFIELD gzaa002
            #add-point:ON ACTION controlp INFIELD gzaa002
            {<point name="input.c.gzaa002" />}
            #END add-point
 
         #Ctrlp:input.c.gzaa003
         ON ACTION controlp INFIELD gzaa003
            #add-point:ON ACTION controlp INFIELD gzaa003
            {<point name="input.c.gzaa003" />}
            #END add-point
 
         #Ctrlp:input.c.gzaastus
         ON ACTION controlp INFIELD gzaastus
            #add-point:ON ACTION controlp INFIELD gzaastus
            {<point name="input.c.gzaastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_gzaa_m.gzaa001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO gzaa_t (gzaa004,gzaa001,gzaa002,gzaa003,gzaastus,gzaaownid,gzaaowndp,gzaacrtid, 
                   gzaacrtdp,gzaacrtdt)
               VALUES (g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaa002,g_gzaa_m.gzaa003,g_gzaa_m.gzaastus, 
                   g_gzaa_m.gzaaownid,g_gzaa_m.gzaaowndp,g_gzaa_m.gzaacrtid,g_gzaa_m.gzaacrtdp,g_gzaa_m.gzaacrtdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_gzaa_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzaa_m.gzaa001 = g_master_multi_table_t.gzaal001 AND
         g_gzaa_m.gzaal003 = g_master_multi_table_t.gzaal003 AND 
         g_gzaa_m.gzaal004 = g_master_multi_table_t.gzaal004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzaa_m.gzaa001
            LET l_field_keys[01] = 'gzaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzaa_m.gzaal003
            LET l_fields[01] = 'gzaal003'
            LET l_vars[02] = g_gzaa_m.gzaal004
            LET l_fields[02] = 'gzaal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzaal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi650_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE gzaa_t SET (gzaa004,gzaa001,gzaa002,gzaa003,gzaastus,gzaaownid,gzaaowndp,gzaacrtid, 
                   gzaacrtdp,gzaacrtdt) = (g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaa002,g_gzaa_m.gzaa003, 
                   g_gzaa_m.gzaastus,g_gzaa_m.gzaaownid,g_gzaa_m.gzaaowndp,g_gzaa_m.gzaacrtid,g_gzaa_m.gzaacrtdp, 
                   g_gzaa_m.gzaacrtdt)
                WHERE  gzaa001 = g_gzaa001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzaa_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzaa_m.gzaa001 = g_master_multi_table_t.gzaal001 AND
         g_gzaa_m.gzaal003 = g_master_multi_table_t.gzaal003 AND 
         g_gzaa_m.gzaal004 = g_master_multi_table_t.gzaal004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzaa_m.gzaa001
            LET l_field_keys[01] = 'gzaal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzaal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzaal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzaa_m.gzaal003
            LET l_fields[01] = 'gzaal003'
            LET l_vars[02] = g_gzaa_m.gzaal004
            LET l_fields[02] = 'gzaal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzaal_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_gzaa_m_t)
               LET g_log2 = util.JSON.stringify(g_gzaa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_gzaa001_t = g_gzaa_m.gzaa001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="azzi650.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD gzaa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzac002
               WHEN "s_detail2"
                  NEXT FIELD gzad002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi650_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gzac_d.clear()   
   CALL g_gzac2_d.clear()  
 
 
   INITIALIZE g_gzaa_m.* LIKE gzaa_t.*             #DEFAULT 設定
   
   LET g_gzaa001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_gzaa_m.gzaaownid = g_user
      LET g_gzaa_m.gzaaowndp = g_dept
      LET g_gzaa_m.gzaacrtid = g_user
      LET g_gzaa_m.gzaacrtdp = g_dept 
      LET g_gzaa_m.gzaacrtdt = cl_get_current()
      LET g_gzaa_m.gzaamodid = ""
      LET g_gzaa_m.gzaamoddt = ""
      LET g_gzaa_m.gzaastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gzaa_m.gzaa003 = "N"
      LET g_gzaa_m.gzaastus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL azzi650_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzaa_m.* = g_gzaa_m_t.*
         CALL azzi650_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_gzac_d.clear()
      CALL g_gzac2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_gzaa001_t = g_gzaa_m.gzaa001
 
   
   LET g_wc = g_wc,  
              " OR ( ",
              " gzaa001 = '", g_gzaa_m.gzaa001 CLIPPED, "' "
 
              , ") "
   
   CLOSE azzi650_cl
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi650_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO gzac_t
                  (
                   gzac001,
                   gzac002
                   ,gzac023,gzac024,gzac003,gzac004,gzac005,gzac006,gzac007,gzac008,gzac009,gzac010,gzac011,gzac012,gzac013,gzac014,gzac015,gzac016,gzac017,gzac018,gzac019,gzac020,gzac021,gzac022) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzac_d[g_detail_idx].gzac023,g_gzac_d[g_detail_idx].gzac024,g_gzac_d[g_detail_idx].gzac003, 
                       g_gzac_d[g_detail_idx].gzac004,g_gzac_d[g_detail_idx].gzac005,g_gzac_d[g_detail_idx].gzac006, 
                       g_gzac_d[g_detail_idx].gzac007,g_gzac_d[g_detail_idx].gzac008,g_gzac_d[g_detail_idx].gzac009, 
                       g_gzac_d[g_detail_idx].gzac010,g_gzac_d[g_detail_idx].gzac011,g_gzac_d[g_detail_idx].gzac012, 
                       g_gzac_d[g_detail_idx].gzac013,g_gzac_d[g_detail_idx].gzac014,g_gzac_d[g_detail_idx].gzac015, 
                       g_gzac_d[g_detail_idx].gzac016,g_gzac_d[g_detail_idx].gzac017,g_gzac_d[g_detail_idx].gzac018, 
                       g_gzac_d[g_detail_idx].gzac019,g_gzac_d[g_detail_idx].gzac020,g_gzac_d[g_detail_idx].gzac021, 
                       g_gzac_d[g_detail_idx].gzac022)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzac_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO gzad_t
                  (
                   gzad001,
                   gzad002
                   ,gzad003,gzad004,gzad005,gzad006,gzad007,gzad008,gzad015,gzad016,gzad017,gzad009,gzad014,gzad010,gzad011,gzad012,gzad013) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzac2_d[g_detail_idx].gzad003,g_gzac2_d[g_detail_idx].gzad004,g_gzac2_d[g_detail_idx].gzad005, 
                       g_gzac2_d[g_detail_idx].gzad006,g_gzac2_d[g_detail_idx].gzad007,g_gzac2_d[g_detail_idx].gzad008, 
                       g_gzac2_d[g_detail_idx].gzad015,g_gzac2_d[g_detail_idx].gzad016,g_gzac2_d[g_detail_idx].gzad017, 
                       g_gzac2_d[g_detail_idx].gzad009,g_gzac2_d[g_detail_idx].gzad014,g_gzac2_d[g_detail_idx].gzad010, 
                       g_gzac2_d[g_detail_idx].gzad011,g_gzac2_d[g_detail_idx].gzad012,g_gzac2_d[g_detail_idx].gzad013) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzad_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi650_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL azzi650_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "gzac_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN azzi650_bcl USING 
                                       g_gzaa_m.gzaa001,g_gzac_d[g_detail_idx].gzac002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi650_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "gzad_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi650_bcl2 USING 
                                             g_gzaa_m.gzaa001,g_gzac2_d[g_detail_idx].gzad002
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi650_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.main" ver="7" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT gzaa004,gzaa001,'','',gzaa002,gzaa003,'','',gzaastus,gzaaownid,'',gzaaowndp, 
       '',gzaacrtid,'',gzaacrtdp,'',gzaacrtdt,gzaamodid,'',gzaamoddt", 
                      " FROM gzaa_t",
                      " WHERE gzaa001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi650_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzaa004,gzaa001,gzaa002,gzaa003,gzaastus,gzaaownid,gzaaowndp,gzaacrtid, 
       gzaacrtdp,gzaacrtdt,gzaamodid,gzaamoddt,t1.oofa011 ,t2.ooefl003 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011", 

               " FROM gzaa_t",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=gzaaownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=gzaaowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=gzaacrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=gzaacrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=gzaamodid  ",
 
               " WHERE  gzaa001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi650_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi650 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi650_init()   
 
      #進入選單 Menu (="N")
      CALL azzi650_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi650
      
   END IF 
   
   CLOSE azzi650_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="azzi650.modify" ver="7" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi650_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_gzaa_m.gzaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_gzaa001_t = g_gzaa_m.gzaa001
 
   CALL s_transaction_begin()
   
   OPEN azzi650_cl USING g_gzaa_m.gzaa001
   IF STATUS THEN
      CALL cl_err("OPEN azzi650_cl:", STATUS, 1)
      CLOSE azzi650_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi650_master_referesh USING g_gzaa_m.gzaa001 INTO g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaa002, 
       g_gzaa_m.gzaa003,g_gzaa_m.gzaastus,g_gzaa_m.gzaaownid,g_gzaa_m.gzaaowndp,g_gzaa_m.gzaacrtid,g_gzaa_m.gzaacrtdp, 
       g_gzaa_m.gzaacrtdt,g_gzaa_m.gzaamodid,g_gzaa_m.gzaamoddt,g_gzaa_m.gzaaownid_desc,g_gzaa_m.gzaaowndp_desc, 
       g_gzaa_m.gzaacrtid_desc,g_gzaa_m.gzaacrtdp_desc,g_gzaa_m.gzaamodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzaa_m.gzaa001,SQLCA.sqlcode,0)
      CLOSE azzi650_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL azzi650_show()
   WHILE TRUE
      LET g_gzaa001_t = g_gzaa_m.gzaa001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gzaa_m.gzaamodid = g_user 
LET g_gzaa_m.gzaamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL azzi650_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzaa_m.* = g_gzaa_m_t.*
         CALL azzi650_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE gzaa_t SET (gzaamodid,gzaamoddt) = (g_gzaa_m.gzaamodid,g_gzaa_m.gzaamoddt)
       WHERE  gzaa001 = g_gzaa001_t
 
                  
      #若單頭key欄位有變更
      IF g_gzaa_m.gzaa001 != g_gzaa001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE gzac_t SET gzac001 = g_gzaa_m.gzaa001
 
          WHERE  gzac001 = g_gzaa001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("gzac_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("gzac_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE gzad_t
            SET gzad001 = g_gzaa_m.gzaa001
 
          WHERE 
                gzad001 = g_gzaa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("gzad_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("gzad_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_gzaa_m.gzaa001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE azzi650_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzaa_m.gzaa001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="azzi650.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi650.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="azzi650.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi650_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzac_d.clear()
   CALL g_gzac2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL azzi650_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi650_browser_fill("")
      CALL azzi650_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL azzi650_filter_show('gzaa001')
   CALL azzi650_filter_show('gzaa002')
   CALL azzi650_filter_show('gzaa003')
   CALL azzi650_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL azzi650_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi650_reproduce()
   DEFINE l_newno     LIKE gzaa_t.gzaa001 
   DEFINE l_oldno     LIKE gzaa_t.gzaa001 
 
   DEFINE l_master    RECORD LIKE gzaa_t.*
   DEFINE l_detail    RECORD LIKE gzac_t.*
   DEFINE l_detail2    RECORD LIKE gzad_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_gzaa_m.gzaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_gzaa001_t = g_gzaa_m.gzaa001
 
    
   LET g_gzaa_m.gzaa001 = ""
 
    
   CALL azzi650_set_entry('a')
   CALL azzi650_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_gzaa_m.gzaaownid = g_user
      LET g_gzaa_m.gzaaowndp = g_dept
      LET g_gzaa_m.gzaacrtid = g_user
      LET g_gzaa_m.gzaacrtdp = g_dept 
      LET g_gzaa_m.gzaacrtdt = cl_get_current()
      LET g_gzaa_m.gzaamodid = ""
      LET g_gzaa_m.gzaamoddt = ""
      LET g_gzaa_m.gzaastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL azzi650_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " gzaa001 = '", g_gzaa_m.gzaa001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi650_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzaa001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi650_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="azzi650.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi650_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzaa001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi650_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="azzi650.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi650_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzaa_m.gzaa001
   LET g_pk_array[1].column = 'gzaa001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi650.show" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi650_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_gzaa_m_t.* = g_gzaa_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL azzi650_b_fill() #單身填充
      CALL azzi650_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_gzaa_m.gzaaownid_desc = cl_get_username(g_gzaa_m.gzaaownid)
      #LET g_gzaa_m.gzaaowndp_desc = cl_get_deptname(g_gzaa_m.gzaaowndp)
      #LET g_gzaa_m.gzaacrtid_desc = cl_get_username(g_gzaa_m.gzaacrtid)
      #LET g_gzaa_m.gzaacrtdp_desc = cl_get_deptname(g_gzaa_m.gzaacrtdp)
      #LET g_gzaa_m.gzaamodid_desc = cl_get_username(g_gzaa_m.gzaamodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi650_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaal003,g_gzaa_m.gzaal004,g_gzaa_m.gzaa002, 
       g_gzaa_m.gzaa003,g_gzaa_m.gzzz001,g_gzaa_m.gzzal003,g_gzaa_m.gzaastus,g_gzaa_m.gzaaownid,g_gzaa_m.gzaaownid_desc, 
       g_gzaa_m.gzaaowndp,g_gzaa_m.gzaaowndp_desc,g_gzaa_m.gzaacrtid,g_gzaa_m.gzaacrtid_desc,g_gzaa_m.gzaacrtdp, 
       g_gzaa_m.gzaacrtdp_desc,g_gzaa_m.gzaacrtdt,g_gzaa_m.gzaamodid,g_gzaa_m.gzaamodid_desc,g_gzaa_m.gzaamoddt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_gzaa_m.gzaastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzac_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_gzac2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL azzi650_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi650.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION azzi650_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzaa_m.gzaa001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzaa_m.gzaastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE gzaa_t SET gzaastus = lc_state 
    WHERE  gzaa001 = g_gzaa_m.gzaa001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_gzaa_m.gzaastus = lc_state
      DISPLAY BY NAME g_gzaa_m.gzaastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi650.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi650_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzaa001 = g_gzaa_m.gzaa001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION azzi650_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.ui_dialog" ver="22" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION azzi650_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi650_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL azzi650_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_gzaa001 = g_gzaa001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL azzi650_fetch('') # reload data
               LET l_ac = 1
               CALL azzi650_ui_detailshow() #Setting the current row 
      
               CALL azzi650_idx_chk()
               #NEXT FIELD gzac002
         
         END DISPLAY
        
         DISPLAY ARRAY g_gzac_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL azzi650_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL azzi650_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_gzac2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL azzi650_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL azzi650_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi650_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi650_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL azzi650_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL azzi650_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL azzi650_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL azzi650_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL azzi650_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL azzi650_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL azzi650_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi650_idx_chk()
            
         ON ACTION previous
            CALL azzi650_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi650_idx_chk()
            
         ON ACTION jump
            CALL azzi650_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi650_idx_chk()
            
         ON ACTION next
            CALL azzi650_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi650_idx_chk()
            
         ON ACTION last
            CALL azzi650_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi650_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzac002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi650_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi650_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi650_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi650_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_azzi910
            LET g_action_choice="open_azzi910"
            IF cl_auth_chk_act("open_azzi910") THEN
               
               #add-point:ON ACTION open_azzi910
               {<point name="menu.open_azzi910" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi650_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi650_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION app_cc
            LET g_action_choice="app_cc"
            IF cl_auth_chk_act("app_cc") THEN
               
               #add-point:ON ACTION app_cc
               {<point name="menu.app_cc" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi650_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi650_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi650_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="azzi650.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi650_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_gzaa_m.gzaa001 = g_browser[g_current_idx].b_gzaa001   
 
   EXECUTE azzi650_master_referesh USING g_gzaa_m.gzaa001 INTO g_gzaa_m.gzaa004,g_gzaa_m.gzaa001,g_gzaa_m.gzaa002, 
       g_gzaa_m.gzaa003,g_gzaa_m.gzaastus,g_gzaa_m.gzaaownid,g_gzaa_m.gzaaowndp,g_gzaa_m.gzaacrtid,g_gzaa_m.gzaacrtdp, 
       g_gzaa_m.gzaacrtdt,g_gzaa_m.gzaamodid,g_gzaa_m.gzaamoddt,g_gzaa_m.gzaaownid_desc,g_gzaa_m.gzaaowndp_desc, 
       g_gzaa_m.gzaacrtid_desc,g_gzaa_m.gzaacrtdp_desc,g_gzaa_m.gzaamodid_desc
   CALL azzi650_show()
   
END FUNCTION
]]>
  </section>
  <section id="azzi650.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi650_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi650_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi650_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi650.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi650_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzac_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE gzac_t 
         SET (gzac001,
              gzac002
              ,gzac023,gzac024,gzac003,gzac004,gzac005,gzac006,gzac007,gzac008,gzac009,gzac010,gzac011,gzac012,gzac013,gzac014,gzac015,gzac016,gzac017,gzac018,gzac019,gzac020,gzac021,gzac022) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzac_d[g_detail_idx].gzac023,g_gzac_d[g_detail_idx].gzac024,g_gzac_d[g_detail_idx].gzac003, 
                  g_gzac_d[g_detail_idx].gzac004,g_gzac_d[g_detail_idx].gzac005,g_gzac_d[g_detail_idx].gzac006, 
                  g_gzac_d[g_detail_idx].gzac007,g_gzac_d[g_detail_idx].gzac008,g_gzac_d[g_detail_idx].gzac009, 
                  g_gzac_d[g_detail_idx].gzac010,g_gzac_d[g_detail_idx].gzac011,g_gzac_d[g_detail_idx].gzac012, 
                  g_gzac_d[g_detail_idx].gzac013,g_gzac_d[g_detail_idx].gzac014,g_gzac_d[g_detail_idx].gzac015, 
                  g_gzac_d[g_detail_idx].gzac016,g_gzac_d[g_detail_idx].gzac017,g_gzac_d[g_detail_idx].gzac018, 
                  g_gzac_d[g_detail_idx].gzac019,g_gzac_d[g_detail_idx].gzac020,g_gzac_d[g_detail_idx].gzac021, 
                  g_gzac_d[g_detail_idx].gzac022) 
         WHERE  gzac001 = ps_keys_bak[1] AND gzac002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzac_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzac_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzad_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE gzad_t 
         SET (gzad001,
              gzad002
              ,gzad003,gzad004,gzad005,gzad006,gzad007,gzad008,gzad015,gzad016,gzad017,gzad009,gzad014,gzad010,gzad011,gzad012,gzad013) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzac2_d[g_detail_idx].gzad003,g_gzac2_d[g_detail_idx].gzad004,g_gzac2_d[g_detail_idx].gzad005, 
                  g_gzac2_d[g_detail_idx].gzad006,g_gzac2_d[g_detail_idx].gzad007,g_gzac2_d[g_detail_idx].gzad008, 
                  g_gzac2_d[g_detail_idx].gzad015,g_gzac2_d[g_detail_idx].gzad016,g_gzac2_d[g_detail_idx].gzad017, 
                  g_gzac2_d[g_detail_idx].gzad009,g_gzac2_d[g_detail_idx].gzad014,g_gzac2_d[g_detail_idx].gzad010, 
                  g_gzac2_d[g_detail_idx].gzad011,g_gzac2_d[g_detail_idx].gzad012,g_gzac2_d[g_detail_idx].gzad013)  

         WHERE  gzad001 = ps_keys_bak[1] AND gzad002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzad_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzad_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
