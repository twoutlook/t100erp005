<add_points prog="azzi920" std_prog="azzi920" erpver="1.0" module="AZZ" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="input.a.page1_info.gzze001_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_gzze1_info_d[g_detail_idx].gzze001 IS NOT NULL AND g_gzze1_info_d[g_detail_idx].gzze002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzze1_info_d[g_detail_idx].gzze001 != g_gzze1_info_d_t.gzze001 OR g_gzze1_info_d[g_detail_idx].gzze002 != g_gzze1_info_d_t.gzze002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzze_t WHERE "||"gzze001 = '"||g_gzze1_info_d[g_detail_idx].gzze001 ||"' AND "|| "gzze002 = '"||g_gzze1_info_d[g_detail_idx].gzze002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1_info.gzze002_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_gzze1_info_d[g_detail_idx].gzze001 IS NOT NULL AND g_gzze1_info_d[g_detail_idx].gzze002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzze1_info_d[g_detail_idx].gzze001 != g_gzze1_info_d_t.gzze001 OR g_gzze1_info_d[g_detail_idx].gzze002 != g_gzze1_info_d_t.gzze002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzze_t WHERE "||"gzze001 = '"||g_gzze1_info_d[g_detail_idx].gzze001 ||"' AND "|| "gzze002 = '"||g_gzze1_info_d[g_detail_idx].gzze002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="function.azzi920_check_gzze001" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#+檢核 gzze001
#+欄位格式: 分類碼-NNNNN  分類碼為3碼英文或不存在  NNNNN 為數值  (特殊案例: ! )
#+例如：-264 , -6319 (支援db或Genero)  lib-423, sui-00002 (支援 tiptop)
PRIVATE FUNCTION azzi920_check_gzze001()
 DEFINE ls_str     STRING 
   DEFINE ls_cls_code STRING 
   DEFINE ls_num      STRING
   DEFINE ls_dash      STRING
   DEFINE li          LIKE type_t.num5
   DEFINE li_status   LIKE type_t.num5
   LET g_errno = NULL
   
   LET ls_str = g_gzze_d[l_ac].gzze001
   LET ls_str = ls_str.trim()
   IF cl_chk_num(ls_str,"N") THEN
      LET li_status = 1  #全部數字
   ELSE 
      LET li_status = 0  #其他  
   END IF 

   IF li_status = 1 THEN 
      IF NOT ls_str.subString(1,1) = "-" THEN 
         LET li_status = -1 #數字開頭前面要加 -     
      END IF 
   END IF 

   IF li_status = 0 THEN 
      CASE 
         WHEN ls_str.subString(1,1) = "-" #-264
            LET ls_num = ls_str.subString(2,ls_str.getLength())
            IF cl_chk_num(ls_num,"N") THEN
               LET li_status = 1   #表示符合
            ELSE 
               LET li_status = -2  #表示不符合 
            END IF 
         WHEN ls_str.subString(1,1) = ASCII(33) #!
              LET li_status = 1   #表示符合
         OTHERWISE #lib-423  or #azz-00001
            LET ls_cls_code = ls_str.subString(1,3) 
            LET ls_dash = ls_str.subString(4,4)
            LET ls_num = ls_str.subString(5,ls_str.getLength())
            IF cl_chk_num(ls_cls_code,"L") AND ls_dash = "-" 
               AND  cl_chk_num(ls_num,"N") THEN                                                      
               LET li_status = 1   #表示符合
            ELSE 
               LET li_status = -3  #表示不符合      
            END IF 
      END CASE     
   END IF 

   IF li_status < 0 THEN 
      LET g_errno = "azz-00041"
   END IF
END FUNCTION]]>
</point>
  <point name="function.azzi920_trans_zh_cn_lang" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#+ 把中文 轉成簡體中文
PRIVATE FUNCTION azzi920_trans_zh_cn_lang()
   DEFINE li            LIKE type_t.num5
   DEFINE r_success     LIKE type_t.num5
   DEFINE ls_sql STRING
   DEFINE lc_gzzeownid  LIKE gzze_t.gzzeownid
   DEFINE lc_gzzeowndp  LIKE gzze_t.gzzeowndp
   DEFINE lc_gzzecrtid  LIKE gzze_t.gzzecrtid
   DEFINE lc_gzzecrtdp  LIKE gzze_t.gzzecrtdp
   DEFINE ld_gzzecrtdt  DATETIME YEAR TO SECOND
   DEFINE lr_gzze_d         type_g_gzze_d
   DEFINE lr_gzze_d2        type_g_gzze1_info_d
   DEFINE li_cnt LIKE type_t.num5
   DEFINE lc_gzze003_tw   LIKE gzze_t.gzze003
   DEFINE lc_gzze001   LIKE gzze_t.gzze001
   DEFINE lc_gzze004_tw   LIKE gzze_t.gzze004
  
   LET r_success = TRUE
   LET g_action_choice=''
   IF NOT s_transaction_chk('Y','1') THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   IF g_gzze_d.getLength() = 0 THEN
      LET r_success = FALSE
      RETURN r_success
   END IF

   LET ls_sql = "SELECT gzze001,gzze003,gzze004 FROM gzze_t WHERE gzze002 = 'zh_TW'"
   DECLARE azzi920_zh_tw_cs CURSOR FROM ls_sql
   FOREACH azzi920_zh_tw_cs INTO lc_gzze001,lc_gzze003_tw,lc_gzze004_tw
       
       SELECT COUNT(*) INTO li_cnt FROM gzze_t 
          WHERE gzze001 = lc_gzze001
             AND gzze002 = 'zh_CN'
       
       IF li_cnt = 0 THEN 
          LET lr_gzze_d.gzzestus = 'Y'
          LET lr_gzze_d.gzze001 = lc_gzze001 
          LET lr_gzze_d2.gzzeownid = g_user
          LET lr_gzze_d2.gzzeowndp = g_dept
          LET lr_gzze_d2.gzzecrtid = g_user
          LET lr_gzze_d2.gzzecrtdp = g_dept 
          LET lr_gzze_d2.gzzecrtdt = cl_get_current()  

          LET lr_gzze_d.gzze003 = cl_trans_code_tw_cn("zh_CN",lc_gzze003_tw)
          LET lr_gzze_d.gzze004 = cl_trans_code_tw_cn("zh_CN",lc_gzze004_tw)

           INSERT INTO gzze_t
                  (gzze001,gzze002,gzzestus,gzze003,gzze004,
                   gzze005,gzze006,gzze007,gzze008,
                  gzzemodid,gzzemoddt,gzzeownid,gzzeowndp,gzzecrtid,gzzecrtdp,gzzecrtdt) 
            VALUES(lr_gzze_d.gzze001,'zh_CN',lr_gzze_d.gzzestus,lr_gzze_d.gzze003,lr_gzze_d.gzze004,
                  lr_gzze_d.gzze005,lr_gzze_d.gzze006,lr_gzze_d.gzze007,lr_gzze_d.gzze008,     
                  '','',lr_gzze_d2.gzzeownid,lr_gzze_d2.gzzeowndp,lr_gzze_d2.gzzecrtid,lr_gzze_d2.gzzecrtdp,lr_gzze_d2.gzzecrtdt)
       END IF  
   END FOREACH 
      RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.azzi920_check_gzze001_2" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 在產中不能打c開頭的訊息代碼；在客戶家一定得打c開頭的訊息代碼   
# Memo...........:
# Usage..........: CALL azzi920_check_gzze001_2(p_gzze001)
#                  RETURNING 回传参数
# Input parameter: p_gzze001   訊息代碼
# Return code....: 
# Date & Author..: 2014/05/30 By tsai_yen
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi920_check_gzze001_2(p_gzze001)
   DEFINE p_gzze001   LIKE gzze_t.gzze001   #g_gzze_d[l_ac].gzze001
   DEFINE l_dgenv     LIKE type_t.chr1      #環境變數DGENV使用標示(s:標準/ c:客製)
   DEFINE l_str       STRING 
   
   LET g_errno = NULL
   LET l_dgenv = FGL_GETENV("DGENV") CLIPPED   
   LET l_str = p_gzze001
   LET l_str = l_str.subString(1,1)
   LET l_str = DOWNSHIFT(l_str)
   
   CASE
      WHEN l_dgenv = "s" AND l_str = "c"
         LET g_errno = "azz-00071"
      WHEN l_dgenv = "c" AND l_str <> "c"
         LET g_errno = "azz-00198"
   END CASE
END FUNCTION]]>
</point>
  <point name="construct.c.page1.gzze005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gzzz001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzze005  #顯示到畫面上
            NEXT FIELD gzze005                     #返回原欄位
    

]]>
</point>
  <point name="detail_show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="detail_show.body1_info.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[CALL cl_set_combo_lang("gzze002")
CALL cl_set_combo_lang("gzze002_s_detail1_info")
    ]]>
</point>
  <point name="input.a.page1.gzze001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzze_d[l_ac].gzze001) AND NOT cl_null(g_gzze_d[l_ac].gzze002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzze_d[l_ac].gzze001 != g_gzze_d_t.gzze001 OR g_gzze_d[l_ac].gzze002 != g_gzze_d_t.gzze002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzze_t WHERE "||"gzze001 = '"||g_gzze_d[l_ac].gzze001 ||"' AND "|| "gzze002 = '"||g_gzze_d[l_ac].gzze002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            END IF

            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzze_d[l_ac].gzze001 != g_gzze_d_t.gzze001)) THEN
               #在產中不能打c開頭的訊息代碼；在客戶家一定得打c開頭的訊息代碼
               CALL azzi920_check_gzze001_2(g_gzze_d[l_ac].gzze001)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD gzze001
               END IF 
            END IF
            
            CALL azzi920_check_gzze001()
            IF NOT cl_null(g_errno) THEN
               CALL cl_err('',g_errno,1)
               NEXT FIELD gzze001
            END IF 
]]>
</point>
  <point name="input.a.page1.gzze002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzze_d[l_ac].gzze001) AND NOT cl_null(g_gzze_d[l_ac].gzze002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzze_d[l_ac].gzze001 != g_gzze_d_t.gzze001 OR g_gzze_d[l_ac].gzze002 != g_gzze_d_t.gzze002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzze_t WHERE "||"gzze001 = '"||g_gzze_d[l_ac].gzze001 ||"' AND "|| "gzze002 = '"||g_gzze_d[l_ac].gzze002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.gzze005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_gzze_d[l_ac].gzze005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_gzze_d[l_ac].gzze005

                  
               #呼叫檢查存在並帶值的library
               #IF cl_chk_exist_and_ref_val("v_gzzz001") THEN
               #檢查資料是否存在
               IF cl_chk_exist("v_gzzz001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzze_d[l_ac].gzze005
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzze_d[l_ac].gzze005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzze_d[l_ac].gzze005_desc

]]>
</point>
  <point name="input.a.page2.gzze001_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzze2_d[l_ac].gzze001) AND NOT cl_null(g_gzze2_d[l_ac].gzze002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzze2_d[l_ac].gzze001 != g_gzze2_d_t.gzze001 OR g_gzze2_d[l_ac].gzze002 != g_gzze2_d_t.gzze002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzze_t WHERE "||"gzze001 = '"||g_gzze2_d[l_ac].gzze001 ||"' AND "|| "gzze002 = '"||g_gzze2_d[l_ac].gzze002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.gzze002_2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzze2_d[l_ac].gzze001) AND NOT cl_null(g_gzze2_d[l_ac].gzze002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzze2_d[l_ac].gzze001 != g_gzze2_d_t.gzze001 OR g_gzze2_d[l_ac].gzze002 != g_gzze2_d_t.gzze002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzze_t WHERE "||"gzze001 = '"||g_gzze2_d[l_ac].gzze001 ||"' AND "|| "gzze002 = '"||g_gzze2_d[l_ac].gzze002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.gzzecrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzze2_d[l_ac].gzzecrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzze2_d[l_ac].gzzecrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzze2_d[l_ac].gzzecrtdp_desc
]]>
</point>
  <point name="input.a.page2.gzzecrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzze2_d[l_ac].gzzecrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzze2_d[l_ac].gzzecrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzze2_d[l_ac].gzzecrtid_desc
]]>
</point>
  <point name="input.a.page2.gzzemodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzze2_d[l_ac].gzzemodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzze2_d[l_ac].gzzemodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzze2_d[l_ac].gzzemodid_desc
]]>
</point>
  <point name="input.a.page2.gzzeowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
]]>
</point>
  <point name="input.a.page2.gzzeownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzze2_d[l_ac].gzzeownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzze2_d[l_ac].gzzeownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzze2_d[l_ac].gzzeownid_desc
]]>
</point>
  <point name="input.c.page1.gzze005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzze_d[l_ac].gzze005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_gzzz001_1()                                #呼叫開窗

            LET g_gzze_d[l_ac].gzze005 = g_qryparam.return1              

            DISPLAY g_gzze_d[l_ac].gzze005 TO gzze005              #

            NEXT FIELD gzze005                          #返回原欄位

]]>
</point>
  <point name="input.detail_input.page1.trans_zh_cn_lang" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_transaction_begin()
               CALL azzi920_trans_zh_cn_lang() RETURNING l_success
               IF l_success THEN
                   CALL s_transaction_end('Y','1')
               ELSE
                   CALL s_transaction_end('N','1')
                END IF
                EXIT DIALOG ]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success LIKE type_t.num5]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body1_info.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body1_info.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row1_info" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzzestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzzestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzzestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzze001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzze002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzze003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzze004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzze006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzze007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.gzze008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.gzze008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.gzze008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1_info.gzzemodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1_info.gzzemodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1_info.gzzemodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1_info.gzzemoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1_info.gzzeownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1_info.gzzeownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1_info.gzzeownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1_info.gzzeowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1_info.gzzeowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1_info.gzzeowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1_info.gzzecrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1_info.gzzecrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1_info.gzzecrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1_info.gzzecrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1_info.gzzecrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1_info.gzzecrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1_info.gzzecrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzzestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzzestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzzestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzze003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzze004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzze006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzze007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.gzze008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.gzze008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.gzze008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzzestus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzze001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzze002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzze003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzze004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzze006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzze007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.gzze008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body1_info.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.before_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="link_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="azzi920.b_fill" ver="7" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi920_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE gzzestus,gzze001,gzze002,gzze003,gzze004,gzze005,gzze006,gzze007,gzze008, 
       gzze001,gzze002,gzzemodid,gzzemoddt,gzzeownid,gzzeowndp,gzzecrtid,gzzecrtdp,gzzecrtdt ,t1.gzzal003 , 
       t2.ooag011 ,t3.ooag011 ,t4.ooag011 ,t5.ooefl003 FROM gzze_t",
               "",
                              " LEFT JOIN gzzal_t t1 ON t1.gzzal001=gzze005 AND t1.gzzal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=gzzemodid  ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=gzzeownid  ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=gzzecrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=gzzecrtdp AND t5.ooefl002='"||g_dlang||"' ",
 
               " WHERE 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, cl_sql_add_filter("gzze_t"),
                      " ORDER BY gzze_t.gzze001,gzze_t.gzze002"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE azzi920_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR azzi920_pb
   
   OPEN b_fill_curs
 
   CALL g_gzze_d.clear()
   CALL g_gzze1_info_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_gzze_d[l_ac].gzzestus,g_gzze_d[l_ac].gzze001,g_gzze_d[l_ac].gzze002,g_gzze_d[l_ac].gzze003, 
       g_gzze_d[l_ac].gzze004,g_gzze_d[l_ac].gzze005,g_gzze_d[l_ac].gzze006,g_gzze_d[l_ac].gzze007,g_gzze_d[l_ac].gzze008, 
       g_gzze1_info_d[l_ac].gzze001,g_gzze1_info_d[l_ac].gzze002,g_gzze1_info_d[l_ac].gzzemodid,g_gzze1_info_d[l_ac].gzzemoddt, 
       g_gzze1_info_d[l_ac].gzzeownid,g_gzze1_info_d[l_ac].gzzeowndp,g_gzze1_info_d[l_ac].gzzecrtid, 
       g_gzze1_info_d[l_ac].gzzecrtdp,g_gzze1_info_d[l_ac].gzzecrtdt,g_gzze_d[l_ac].gzze005_desc,g_gzze1_info_d[l_ac].gzzemodid_desc, 
       g_gzze1_info_d[l_ac].gzzeownid_desc,g_gzze1_info_d[l_ac].gzzecrtid_desc,g_gzze1_info_d[l_ac].gzzecrtdp_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL azzi920_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("gzze_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
   
   CALL g_gzze_d.deleteElement(g_gzze_d.getLength())   
   CALL g_gzze1_info_d.deleteElement(g_gzze1_info_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_gzze_d.getLength()
      LET g_gzze1_info_d[l_ac].gzze001 = g_gzze_d[l_ac].gzze001 
      LET g_gzze1_info_d[l_ac].gzze002 = g_gzze_d[l_ac].gzze002 
 
   END FOR
   
   IF g_cnt > g_gzze_d.getLength() THEN
      LET l_ac = g_gzze_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_gzze_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE azzi920_pb
   
END FUNCTION
]]>
</section>
  <section id="azzi920.default_search" ver="5" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi920_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzze001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " gzze002 = ", g_argv[02], " AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi920.delete" ver="3" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi920_delete()
   DEFINE li_idx           LIKE type_t.num5
   DEFINE li_detail_tmp    LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_gzze_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT azzi920_lock_b("gzze_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_gzze_d.getLength()
      IF g_gzze_d[li_idx].gzze001 IS NOT NULL
         AND g_gzze_d_t.gzze002 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM gzze_t
          WHERE  
                gzze001 = g_gzze_d[li_idx].gzze001
                AND gzze002 = g_gzze_d[li_idx].gzze002
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            CALL cl_err("gzze_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzze_d[g_detail_idx].gzze001
               LET gs_keys[2] = g_gzze_d[g_detail_idx].gzze002
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL azzi920_delete_b('gzze_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   #刷新資料
   CALL azzi920_b_fill(g_wc2)
            
END FUNCTION
]]>
</section>
  <section id="azzi920.delete_b" ver="3" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi920_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "gzze_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'gzze_t' THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM gzze_t
       WHERE 
         gzze001 = ps_keys_bak[1] AND gzze002 = ps_keys_bak[2]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="azzi920.description" ver="20" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000235
#+ 
#+ Filename...: azzi920
#+ Description: 錯誤訊息維護作業
#+ Creator....: 00845(2013/06/01)
#+ Modifier...: 01856(2014/07/03)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="azzi920.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION azzi920_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_gzze1_info_d[l_ac].gzzeownid_desc = cl_get_username(g_gzze1_info_d[l_ac].gzzeownid)
      #LET g_gzze1_info_d[l_ac].gzzeowndp_desc = cl_get_deptname(g_gzze1_info_d[l_ac].gzzeowndp)
      #LET g_gzze1_info_d[l_ac].gzzecrtid_desc = cl_get_username(g_gzze1_info_d[l_ac].gzzecrtid)
      #LET g_gzze1_info_d[l_ac].gzzecrtdp_desc = cl_get_deptname(g_gzze1_info_d[l_ac].gzzecrtdp)
      #LET g_gzze1_info_d[l_ac].gzzemodid_desc = cl_get_username(g_gzze1_info_d[l_ac].gzzemodid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body1_info.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="azzi920.global" ver="8" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_gzze_d RECORD
       gzzestus LIKE gzze_t.gzzestus, 
   gzze001 LIKE gzze_t.gzze001, 
   gzze002 LIKE gzze_t.gzze002, 
   gzze003 LIKE gzze_t.gzze003, 
   gzze004 LIKE gzze_t.gzze004, 
   gzze005 LIKE gzze_t.gzze005, 
   gzze005_desc LIKE type_t.chr500, 
   gzze006 LIKE gzze_t.gzze006, 
   gzze007 LIKE gzze_t.gzze007, 
   gzze008 LIKE gzze_t.gzze008
       END RECORD
PRIVATE TYPE type_g_gzze1_info_d RECORD
       gzze001 LIKE gzze_t.gzze001, 
   gzze002 LIKE gzze_t.gzze002, 
   gzzemodid LIKE gzze_t.gzzemodid, 
   gzzemodid_desc LIKE type_t.chr500, 
   gzzemoddt DATETIME YEAR TO SECOND, 
   gzzeownid LIKE gzze_t.gzzeownid, 
   gzzeownid_desc LIKE type_t.chr500, 
   gzzeowndp LIKE gzze_t.gzzeowndp, 
   gzzeowndp_desc LIKE type_t.chr500, 
   gzzecrtid LIKE gzze_t.gzzecrtid, 
   gzzecrtid_desc LIKE type_t.chr500, 
   gzzecrtdp LIKE gzze_t.gzzecrtdp, 
   gzzecrtdp_desc LIKE type_t.chr500, 
   gzzecrtdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_gzze_d          DYNAMIC ARRAY OF type_g_gzze_d #單身變數
DEFINE g_gzze_d_t        type_g_gzze_d                  #單身備份
DEFINE g_gzze_d_o        type_g_gzze_d                  #單身備份
DEFINE g_gzze1_info_d   DYNAMIC ARRAY OF type_g_gzze1_info_d
DEFINE g_gzze1_info_d_t type_g_gzze1_info_d
DEFINE g_gzze1_info_d_o type_g_gzze1_info_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="azzi920.init" ver="2" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION azzi920_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
      CALL cl_set_combo_scc('gzze007','106') 
 
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL azzi920_default_search()
   
END FUNCTION
]]>
</section>
  <section id="azzi920.insert" ver="4" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi920_insert()
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point                
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL azzi920_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="azzi920.insert_b" ver="3" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi920_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "gzze_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO gzze_t
                  (
                   gzze001,gzze002
                   ,gzzestus,gzze003,gzze004,gzze005,gzze006,gzze007,gzze008,gzzemodid,gzzemoddt,gzzeownid,gzzeowndp,gzzecrtid,gzzecrtdp,gzzecrtdt) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzze_d[l_ac].gzzestus,g_gzze_d[l_ac].gzze003,g_gzze_d[l_ac].gzze004,g_gzze_d[l_ac].gzze005, 
                       g_gzze_d[l_ac].gzze006,g_gzze_d[l_ac].gzze007,g_gzze_d[l_ac].gzze008,g_gzze1_info_d[l_ac].gzzemodid, 
                       g_gzze1_info_d[l_ac].gzzemoddt,g_gzze1_info_d[l_ac].gzzeownid,g_gzze1_info_d[l_ac].gzzeowndp, 
                       g_gzze1_info_d[l_ac].gzzecrtid,g_gzze1_info_d[l_ac].gzzecrtdp,g_gzze1_info_d[l_ac].gzzecrtdt) 

      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzze_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="azzi920.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION azzi920_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="azzi920.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi920_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL azzi920_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "gzze_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi920_bcl USING 
                                       g_gzze_d[g_detail_idx].gzze001,g_gzze_d[g_detail_idx].gzze002
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi920_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="azzi920.main" ver="7" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzzestus,gzze001,gzze002,gzze003,gzze004,gzze005,gzze006,gzze007,gzze008, 
       gzze001,gzze002,gzzemodid,gzzemoddt,gzzeownid,gzzeowndp,gzzecrtid,gzzecrtdp,gzzecrtdt FROM gzze_t  
       WHERE gzze001=? AND gzze002=? FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi920_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi920 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi920_init()   
 
      #進入選單 Menu (="N")
      CALL azzi920_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi920
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="azzi920.modify" ver="8" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi920_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzze_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION trans_zh_cn_lang
            LET g_action_choice="trans_zh_cn_lang"
            IF cl_auth_chk_act("trans_zh_cn_lang") THEN
               
               #add-point:ON ACTION trans_zh_cn_lang
               {<point name="input.detail_input.page1.trans_zh_cn_lang" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzze_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi920_b_fill(g_wc2)
            LET g_detail_cnt = g_gzze_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_gzze_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_gzze_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_gzze_d[l_ac].gzze001 IS NOT NULL
               AND g_gzze_d[l_ac].gzze002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzze_d_t.* = g_gzze_d[l_ac].*  #BACKUP
               LET g_gzze_d_o.* = g_gzze_d[l_ac].*  #BACKUP
               IF NOT azzi920_lock_b("gzze_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi920_bcl INTO g_gzze_d[l_ac].gzzestus,g_gzze_d[l_ac].gzze001,g_gzze_d[l_ac].gzze002, 
                      g_gzze_d[l_ac].gzze003,g_gzze_d[l_ac].gzze004,g_gzze_d[l_ac].gzze005,g_gzze_d[l_ac].gzze006, 
                      g_gzze_d[l_ac].gzze007,g_gzze_d[l_ac].gzze008,g_gzze1_info_d[l_ac].gzze001,g_gzze1_info_d[l_ac].gzze002, 
                      g_gzze1_info_d[l_ac].gzzemodid,g_gzze1_info_d[l_ac].gzzemoddt,g_gzze1_info_d[l_ac].gzzeownid, 
                      g_gzze1_info_d[l_ac].gzzeowndp,g_gzze1_info_d[l_ac].gzzecrtid,g_gzze1_info_d[l_ac].gzzecrtdp, 
                      g_gzze1_info_d[l_ac].gzzecrtdt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_gzze_d_t.gzze001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL azzi920_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzze_d_t.* TO NULL
            INITIALIZE g_gzze_d_o.* TO NULL
            INITIALIZE g_gzze_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_gzze1_info_d[l_ac].gzzeownid = g_user
      LET g_gzze1_info_d[l_ac].gzzeowndp = g_dept
      LET g_gzze1_info_d[l_ac].gzzecrtid = g_user
      LET g_gzze1_info_d[l_ac].gzzecrtdp = g_dept 
      LET g_gzze1_info_d[l_ac].gzzecrtdt = cl_get_current()
      LET g_gzze1_info_d[l_ac].gzzemodid = ""
      LET g_gzze1_info_d[l_ac].gzzemoddt = ""
      LET g_gzze_d[l_ac].gzzestus = ""
 
 
                  LET g_gzze_d[l_ac].gzzestus = "Y"
      LET g_gzze_d[l_ac].gzze007 = "1"
      LET g_gzze_d[l_ac].gzze008 = "N"
 
            LET g_gzze_d_t.* = g_gzze_d[l_ac].*     #新輸入資料
            LET g_gzze_d_o.* = g_gzze_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi920_set_entry_b("a")
            CALL azzi920_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzze_d[li_reproduce_target].* = g_gzze_d[li_reproduce].*
               LET g_gzze1_info_d[li_reproduce_target].* = g_gzze1_info_d[li_reproduce].*
 
               LET g_gzze_d[g_gzze_d.getLength()].gzze001 = NULL
               LET g_gzze_d[g_gzze_d.getLength()].gzze002 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzze_t 
             WHERE  gzze001 = g_gzze_d[l_ac].gzze001
                                       AND gzze002 = g_gzze_d[l_ac].gzze002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzze_d[g_detail_idx].gzze001
               LET gs_keys[2] = g_gzze_d[g_detail_idx].gzze002
               CALL azzi920_insert_b('gzze_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzze_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzze_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi920_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (gzze001 = '", g_gzze_d[l_ac].gzze001, "' "
                                  ," AND gzze002 = '", g_gzze_d[l_ac].gzze002, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzze_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzze_d.deleteElement(l_ac)
               NEXT FIELD gzze001
            END IF
            IF g_gzze_d[l_ac].gzze001 IS NOT NULL
               AND g_gzze_d_t.gzze002 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM gzze_t
                WHERE  
                      gzze001 = g_gzze_d_t.gzze001
                      AND gzze002 = g_gzze_d_t.gzze002
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzze_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi920_bcl
               LET l_count = g_gzze_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzze_d[g_detail_idx].gzze001
               LET gs_keys[2] = g_gzze_d[g_detail_idx].gzze002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL azzi920_delete_b('gzze_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzzestus
            #add-point:BEFORE FIELD gzzestus
            {<point name="input.b.page1.gzzestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzestus
            
            #add-point:AFTER FIELD gzzestus
            {<point name="input.a.page1.gzzestus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzestus
            #add-point:ON CHANGE gzzestus
            {<point name="input.g.page1.gzzestus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze001
            #add-point:BEFORE FIELD gzze001
            {<point name="input.b.page1.gzze001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze001
            
            #add-point:AFTER FIELD gzze001
            {<point name="input.a.page1.gzze001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzze001
            #add-point:ON CHANGE gzze001
            {<point name="input.g.page1.gzze001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze002
            #add-point:BEFORE FIELD gzze002
            {<point name="input.b.page1.gzze002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze002
            
            #add-point:AFTER FIELD gzze002
            {<point name="input.a.page1.gzze002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzze002
            #add-point:ON CHANGE gzze002
            {<point name="input.g.page1.gzze002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze003
            #add-point:BEFORE FIELD gzze003
            {<point name="input.b.page1.gzze003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze003
            
            #add-point:AFTER FIELD gzze003
            {<point name="input.a.page1.gzze003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzze003
            #add-point:ON CHANGE gzze003
            {<point name="input.g.page1.gzze003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze004
            #add-point:BEFORE FIELD gzze004
            {<point name="input.b.page1.gzze004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze004
            
            #add-point:AFTER FIELD gzze004
            {<point name="input.a.page1.gzze004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzze004
            #add-point:ON CHANGE gzze004
            {<point name="input.g.page1.gzze004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze005
            
            #add-point:AFTER FIELD gzze005
            {<point name="input.a.page1.gzze005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze005
            #add-point:BEFORE FIELD gzze005
            {<point name="input.b.page1.gzze005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzze005
            #add-point:ON CHANGE gzze005
            {<point name="input.g.page1.gzze005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze006
            #add-point:BEFORE FIELD gzze006
            {<point name="input.b.page1.gzze006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze006
            
            #add-point:AFTER FIELD gzze006
            {<point name="input.a.page1.gzze006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzze006
            #add-point:ON CHANGE gzze006
            {<point name="input.g.page1.gzze006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze007
            #add-point:BEFORE FIELD gzze007
            {<point name="input.b.page1.gzze007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze007
            
            #add-point:AFTER FIELD gzze007
            {<point name="input.a.page1.gzze007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzze007
            #add-point:ON CHANGE gzze007
            {<point name="input.g.page1.gzze007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze008
            #add-point:BEFORE FIELD gzze008
            {<point name="input.b.page1.gzze008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze008
            
            #add-point:AFTER FIELD gzze008
            {<point name="input.a.page1.gzze008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzze008
            #add-point:ON CHANGE gzze008
            {<point name="input.g.page1.gzze008" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.gzzestus
         ON ACTION controlp INFIELD gzzestus
            #add-point:ON ACTION controlp INFIELD gzzestus
            {<point name="input.c.page1.gzzestus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze001
         ON ACTION controlp INFIELD gzze001
            #add-point:ON ACTION controlp INFIELD gzze001
            {<point name="input.c.page1.gzze001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze002
         ON ACTION controlp INFIELD gzze002
            #add-point:ON ACTION controlp INFIELD gzze002
            {<point name="input.c.page1.gzze002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze003
         ON ACTION controlp INFIELD gzze003
            #add-point:ON ACTION controlp INFIELD gzze003
            {<point name="input.c.page1.gzze003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze004
         ON ACTION controlp INFIELD gzze004
            #add-point:ON ACTION controlp INFIELD gzze004
            {<point name="input.c.page1.gzze004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze005
         ON ACTION controlp INFIELD gzze005
            #add-point:ON ACTION controlp INFIELD gzze005
            {<point name="input.c.page1.gzze005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze006
         ON ACTION controlp INFIELD gzze006
            #add-point:ON ACTION controlp INFIELD gzze006
            {<point name="input.c.page1.gzze006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze007
         ON ACTION controlp INFIELD gzze007
            #add-point:ON ACTION controlp INFIELD gzze007
            {<point name="input.c.page1.gzze007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzze008
         ON ACTION controlp INFIELD gzze008
            #add-point:ON ACTION controlp INFIELD gzze008
            {<point name="input.c.page1.gzze008" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzze_d[l_ac].* = g_gzze_d_t.*
               CLOSE azzi920_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_gzze_d[l_ac].gzze001,-263,1)
               LET g_gzze_d[l_ac].* = g_gzze_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_gzze1_info_d[l_ac].gzzemodid = g_user 
LET g_gzze1_info_d[l_ac].gzzemoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE gzze_t SET (gzzestus,gzze001,gzze002,gzze003,gzze004,gzze005,gzze006,gzze007,gzze008, 
                   gzzemodid,gzzemoddt,gzzeownid,gzzeowndp,gzzecrtid,gzzecrtdp,gzzecrtdt) = (g_gzze_d[l_ac].gzzestus, 
                   g_gzze_d[l_ac].gzze001,g_gzze_d[l_ac].gzze002,g_gzze_d[l_ac].gzze003,g_gzze_d[l_ac].gzze004, 
                   g_gzze_d[l_ac].gzze005,g_gzze_d[l_ac].gzze006,g_gzze_d[l_ac].gzze007,g_gzze_d[l_ac].gzze008, 
                   g_gzze1_info_d[l_ac].gzzemodid,g_gzze1_info_d[l_ac].gzzemoddt,g_gzze1_info_d[l_ac].gzzeownid, 
                   g_gzze1_info_d[l_ac].gzzeowndp,g_gzze1_info_d[l_ac].gzzecrtid,g_gzze1_info_d[l_ac].gzzecrtdp, 
                   g_gzze1_info_d[l_ac].gzzecrtdt)
                WHERE 
                  gzze001 = g_gzze_d_t.gzze001 #項次   
                  AND gzze002 = g_gzze_d_t.gzze002  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzze_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzze_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzze_d[g_detail_idx].gzze001
               LET gs_keys_bak[1] = g_gzze_d_t.gzze001
               LET gs_keys[2] = g_gzze_d[g_detail_idx].gzze002
               LET gs_keys_bak[2] = g_gzze_d_t.gzze002
               CALL azzi920_update_b('gzze_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_gzze_d_t)
                     LET g_log2 = util.JSON.stringify(g_gzze_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL azzi920_unlock_b("gzze_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_gzze_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzze_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_gzze1_info_d TO s_detail1_info.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL azzi920_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1_info")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body1_info.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD gzzestus
            WHEN "s_detail1_info"
               NEXT FIELD gzze001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE azzi920_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="azzi920.modify_detail_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION azzi920_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "gzzestus"
      WHEN "s_detail1_info"
         LET ls_return = "gzze001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="azzi920.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="azzi920.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="azzi920.query" ver="6" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi920_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_gzze_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON gzzestus,gzze001,gzze002,gzze003,gzze004,gzze005,gzze006,gzze007,gzze008,gzzemodid, 
          gzzemoddt,gzzeownid,gzzeowndp,gzzecrtid,gzzecrtdp,gzzecrtdt 
 
         FROM s_detail1[1].gzzestus,s_detail1[1].gzze001,s_detail1[1].gzze002,s_detail1[1].gzze003,s_detail1[1].gzze004, 
             s_detail1[1].gzze005,s_detail1[1].gzze006,s_detail1[1].gzze007,s_detail1[1].gzze008,s_detail1_info[1].gzzemodid, 
             s_detail1_info[1].gzzemoddt,s_detail1_info[1].gzzeownid,s_detail1_info[1].gzzeowndp,s_detail1_info[1].gzzecrtid, 
             s_detail1_info[1].gzzecrtdp,s_detail1_info[1].gzzecrtdt 
      
         #此段落由子樣板a11產生
         ##----<<gzzecrtdt>>----
         AFTER FIELD gzzecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzemoddt>>----
         AFTER FIELD gzzemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzecnfdt>>----
         
         #----<<gzzepstdt>>----
 
 
      
                  #此段落由子樣板a01產生
         BEFORE FIELD gzzestus
            #add-point:BEFORE FIELD gzzestus
            {<point name="query.b.page1.gzzestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzestus
            
            #add-point:AFTER FIELD gzzestus
            {<point name="query.a.page1.gzzestus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzzestus
         ON ACTION controlp INFIELD gzzestus
            #add-point:ON ACTION controlp INFIELD gzzestus
            {<point name="query.c.page1.gzzestus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze001
            #add-point:BEFORE FIELD gzze001
            {<point name="query.b.page1.gzze001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze001
            
            #add-point:AFTER FIELD gzze001
            {<point name="query.a.page1.gzze001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzze001
         ON ACTION controlp INFIELD gzze001
            #add-point:ON ACTION controlp INFIELD gzze001
            {<point name="query.c.page1.gzze001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze002
            #add-point:BEFORE FIELD gzze002
            {<point name="query.b.page1.gzze002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze002
            
            #add-point:AFTER FIELD gzze002
            {<point name="query.a.page1.gzze002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzze002
         ON ACTION controlp INFIELD gzze002
            #add-point:ON ACTION controlp INFIELD gzze002
            {<point name="query.c.page1.gzze002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze003
            #add-point:BEFORE FIELD gzze003
            {<point name="query.b.page1.gzze003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze003
            
            #add-point:AFTER FIELD gzze003
            {<point name="query.a.page1.gzze003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzze003
         ON ACTION controlp INFIELD gzze003
            #add-point:ON ACTION controlp INFIELD gzze003
            {<point name="query.c.page1.gzze003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze004
            #add-point:BEFORE FIELD gzze004
            {<point name="query.b.page1.gzze004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze004
            
            #add-point:AFTER FIELD gzze004
            {<point name="query.a.page1.gzze004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzze004
         ON ACTION controlp INFIELD gzze004
            #add-point:ON ACTION controlp INFIELD gzze004
            {<point name="query.c.page1.gzze004" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.gzze005
         ON ACTION controlp INFIELD gzze005
            #add-point:ON ACTION controlp INFIELD gzze005
            {<point name="construct.c.page1.gzze005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze005
            #add-point:BEFORE FIELD gzze005
            {<point name="query.b.page1.gzze005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze005
            
            #add-point:AFTER FIELD gzze005
            {<point name="query.a.page1.gzze005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze006
            #add-point:BEFORE FIELD gzze006
            {<point name="query.b.page1.gzze006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze006
            
            #add-point:AFTER FIELD gzze006
            {<point name="query.a.page1.gzze006" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzze006
         ON ACTION controlp INFIELD gzze006
            #add-point:ON ACTION controlp INFIELD gzze006
            {<point name="query.c.page1.gzze006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze007
            #add-point:BEFORE FIELD gzze007
            {<point name="query.b.page1.gzze007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze007
            
            #add-point:AFTER FIELD gzze007
            {<point name="query.a.page1.gzze007" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzze007
         ON ACTION controlp INFIELD gzze007
            #add-point:ON ACTION controlp INFIELD gzze007
            {<point name="query.c.page1.gzze007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzze008
            #add-point:BEFORE FIELD gzze008
            {<point name="query.b.page1.gzze008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzze008
            
            #add-point:AFTER FIELD gzze008
            {<point name="query.a.page1.gzze008" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzze008
         ON ACTION controlp INFIELD gzze008
            #add-point:ON ACTION controlp INFIELD gzze008
            {<point name="query.c.page1.gzze008" />}
            #END add-point
 
  
         
                  #此段落由子樣板a01產生
         BEFORE FIELD gzzemodid
            #add-point:BEFORE FIELD gzzemodid
            {<point name="query.b.page1_info.gzzemodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzemodid
            
            #add-point:AFTER FIELD gzzemodid
            {<point name="query.a.page1_info.gzzemodid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1_info.gzzemodid
         ON ACTION controlp INFIELD gzzemodid
            #add-point:ON ACTION controlp INFIELD gzzemodid
            {<point name="query.c.page1_info.gzzemodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzemoddt
            #add-point:BEFORE FIELD gzzemoddt
            {<point name="query.b.page1_info.gzzemoddt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzeownid
            #add-point:BEFORE FIELD gzzeownid
            {<point name="query.b.page1_info.gzzeownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzeownid
            
            #add-point:AFTER FIELD gzzeownid
            {<point name="query.a.page1_info.gzzeownid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1_info.gzzeownid
         ON ACTION controlp INFIELD gzzeownid
            #add-point:ON ACTION controlp INFIELD gzzeownid
            {<point name="query.c.page1_info.gzzeownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzeowndp
            #add-point:BEFORE FIELD gzzeowndp
            {<point name="query.b.page1_info.gzzeowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzeowndp
            
            #add-point:AFTER FIELD gzzeowndp
            {<point name="query.a.page1_info.gzzeowndp" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1_info.gzzeowndp
         ON ACTION controlp INFIELD gzzeowndp
            #add-point:ON ACTION controlp INFIELD gzzeowndp
            {<point name="query.c.page1_info.gzzeowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzecrtid
            #add-point:BEFORE FIELD gzzecrtid
            {<point name="query.b.page1_info.gzzecrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzecrtid
            
            #add-point:AFTER FIELD gzzecrtid
            {<point name="query.a.page1_info.gzzecrtid" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1_info.gzzecrtid
         ON ACTION controlp INFIELD gzzecrtid
            #add-point:ON ACTION controlp INFIELD gzzecrtid
            {<point name="query.c.page1_info.gzzecrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzecrtdp
            #add-point:BEFORE FIELD gzzecrtdp
            {<point name="query.b.page1_info.gzzecrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzecrtdp
            
            #add-point:AFTER FIELD gzzecrtdp
            {<point name="query.a.page1_info.gzzecrtdp" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1_info.gzzecrtdp
         ON ACTION controlp INFIELD gzzecrtdp
            #add-point:ON ACTION controlp INFIELD gzzecrtdp
            {<point name="query.c.page1_info.gzzecrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzecrtdt
            #add-point:BEFORE FIELD gzzecrtdt
            {<point name="query.b.page1_info.gzzecrtdt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL azzi920_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="azzi920.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi920_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="azzi920.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi920_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="azzi920.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="azzi920.ui_dialog" ver="5" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION azzi920_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL azzi920_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_gzze_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
			   #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_gzze1_info_d TO s_detail1_info.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body1_info.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body1_info.before_display2"/>}
               #end add-point
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1_info")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row1_info"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL DIALOG.setSelectionMode("s_detail1_info", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi920_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi920_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi920_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi920_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi920_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="azzi920.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi920_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE azzi920_bcl
   #END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="azzi920.update_b" ver="3" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi920_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "gzze_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "gzze_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE gzze_t 
         SET (gzze001,gzze002
              ,gzzestus,gzze003,gzze004,gzze005,gzze006,gzze007,gzze008,gzzemodid,gzzemoddt,gzzeownid,gzzeowndp,gzzecrtid,gzzecrtdp,gzzecrtdt) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzze_d[l_ac].gzzestus,g_gzze_d[l_ac].gzze003,g_gzze_d[l_ac].gzze004,g_gzze_d[l_ac].gzze005, 
                  g_gzze_d[l_ac].gzze006,g_gzze_d[l_ac].gzze007,g_gzze_d[l_ac].gzze008,g_gzze1_info_d[l_ac].gzzemodid, 
                  g_gzze1_info_d[l_ac].gzzemoddt,g_gzze1_info_d[l_ac].gzzeownid,g_gzze1_info_d[l_ac].gzzeowndp, 
                  g_gzze1_info_d[l_ac].gzzecrtid,g_gzze1_info_d[l_ac].gzzecrtdp,g_gzze1_info_d[l_ac].gzzecrtdt)  

         WHERE gzze001 = ps_keys_bak[1] AND gzze002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzze_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzze_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>