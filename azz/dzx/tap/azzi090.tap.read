<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="azzi090" std_prog="azzi090" erpver="1.0" module="AZZ" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.page2.gztdcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gztdcrtdp  #顯示到畫面上

            NEXT FIELD gztdcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gztdcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gztdcrtid  #顯示到畫面上

            NEXT FIELD gztdcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gztdmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gztdmodid  #顯示到畫面上

            NEXT FIELD gztdmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gztdowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gztdowndp  #顯示到畫面上

            NEXT FIELD gztdowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gztdownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gztdownid  #顯示到畫面上

            NEXT FIELD gztdownid                     #返回原欄位

]]>
  </point>
  <point name="detail_show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_gztd_d[l_ac].gztd001
   CALL ap_ref_array2(g_ref_fields," SELECT gztdl003,gztdl004 FROM gztdl_t WHERE gztdl001 = ? AND gztdl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gztd_d[l_ac].gztdl003 = g_rtn_fields[1] 
   LET g_gztd_d[l_ac].gztdl004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_gztd_d[l_ac].gztdl003,g_gztd_d[l_ac].gztdl004]]>
  </point>
  <point name="detail_show.body2.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdcrtdp_desc
]]>
  </point>
  <point name="detail_show.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_gztd_d[l_ac].gztd001
   CALL ap_ref_array2(g_ref_fields," SELECT gztdl003,gztdl004 FROM gztdl_t WHERE gztdl001 = ? AND gztdl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gztd_d[l_ac].gztdl003 = g_rtn_fields[1] 
   LET g_gztd_d[l_ac].gztdl004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_gztd_d[l_ac].gztdl003,g_gztd_d[l_ac].gztdl004]]>
  </point>
  <point name="input.a.page1.gztd001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
           LET g_gztd_d[l_ac].gztd001 = UPSHIFT(g_gztd_d[l_ac].gztd001)           
           IF  NOT cl_null(g_gztd_d[l_ac].gztd001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gztd_d[l_ac].gztd001 != g_gztd_d_t.gztd001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gztd_t WHERE "||"gztd001 = '"||g_gztd_d[l_ac].gztd001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL azzi090_check_gztd001()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD gztd001
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.gztd001_2" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gztd2_d[l_ac].gztd001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gztd2_d[l_ac].gztd001 != g_gztd2_d_t.gztd001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gztd_t WHERE "||"gztd001 = '"||g_gztd2_d[l_ac].gztd001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.gztdcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdcrtdp_desc
]]>
  </point>
  <point name="input.a.page2.gztdcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdcrtid_desc
]]>
  </point>
  <point name="input.a.page2.gztdmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdmodid_desc
]]>
  </point>
  <point name="input.a.page2.gztdowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdowndp_desc
]]>
  </point>
  <point name="input.a.page2.gztdownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gztd2_d[l_ac].gztdownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gztd2_d[l_ac].gztdownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gztd2_d[l_ac].gztdownid_desc
]]>
  </point>
  <point name="function.azzi090_xml_trim_str" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION azzi090_xml_trim_str(p_String)
   DEFINE
  p_String STRING
DEFINE
  ls_String STRING
DEFINE
  ls_Return STRING

  LET ls_String = p_String

  LET ls_String = ls_String.trim()
  LET ls_Return = ls_String
  
  RETURN ls_Return
END FUNCTION]]>
  </point>
  <point name="function.azzi090_xml_gen_table_data_types_XML" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+產生資料表欄位屬性資料
PRIVATE FUNCTION azzi090_xml_gen_table_data_types_XML(p_XMLFileName)
   DEFINE
  p_XMLFileName STRING
DEFINE
  lo_TableDataTypes RECORD
                      D_NAME     VARCHAR(255),
                      D_TYPE     VARCHAR(50),
                      D_LENGTH   VARCHAR(50),
                      D_NULLABLE VARCHAR(02),
                      D_DEFAULT  VARCHAR(50)
                    END RECORD
DEFINE 
  ls_XMLFileName    STRING,
  ls_SQL            STRING,
  ls_D_NAME         STRING,
  li_Space          INTEGER,
  lo_XMLDocuments   om.DomDocument,
  lo_XMLElements    om.DomNode,
  lo_XMLDomNode     om.DomNode

  LET li_Space = 2
  LET ls_XMLFileName = p_XMLFileName

  
#  LET ls_SQL = "SELECT TD.GZTD001||'.'||TD.GZTD002||':'||TD.GZTD003 D_NAME, ",
#               "       TD.GZTD003   D_TYPE,                                 ",
#               "       TD.GZTD008   D_LENGTH,                               ",
#               "       ''           D_NULLABLE,                             ",
#               "       ''           D_DEFAULT                               ",
#               "  FROM GZTD_T TD                                            ",
#               " ORDER BY TD.GZTD001                                        "
               
  LET ls_SQL = "SELECT TD.GZTD001||'.'||TDL.GZTDL003||':'||TD.GZTD003 D_NAME, ",
               "       TD.GZTD003   D_TYPE,                                   ",
               "       TD.GZTD008   D_LENGTH,                                 ",
               "       ''           D_NULLABLE,                               ",
               "       ''           D_DEFAULT                                 ",
               "  FROM GZTD_T TD                                              ",
               "  LEFT OUTER JOIN GZTDL_T TDL                                 ",
               "               ON TDL.GZTDL001 = td.gztd001                   ",                
               "              AND TDL.GZTDL002 = '",g_lang,"'                 ",
               " WHERE TD.GZTD001 NOT LIKE 'T%'                               ",
               " ORDER BY TD.GZTD001                                          "
  
  PREPARE lpre_TableDataTypes FROM ls_SQL
  DECLARE lcur_TableDataTypes CURSOR FOR lpre_TableDataTypes

  LET lo_XMLDocuments = om.DomDocument.create("dataTypes")
  LET lo_XMLElements  = lo_XMLDocuments.getDocumentElement()
  
  OPEN lcur_TableDataTypes
  FOREACH lcur_TableDataTypes INTO lo_TableDataTypes.*
    IF SQLCA.sqlcode THEN
      EXIT FOREACH
    END IF

    LET lo_XMLDomNode = lo_XMLElements.createChild("dataType")

    IF lo_TableDataTypes.D_LENGTH IS NULL THEN
      LET ls_D_NAME = azzi090_xml_trim_str(lo_TableDataTypes.D_NAME)
    ELSE
      LET ls_D_NAME = azzi090_xml_trim_str(lo_TableDataTypes.D_NAME),"(",azzi090_xml_trim_str(lo_TableDataTypes.D_LENGTH),")"
    END IF
    
    #CALL lo_XMLDomNode.setAttribute("name",azzi090_xml_trim_str(lo_TableDataTypes.D_NAME))
    CALL lo_XMLDomNode.setAttribute("name",ls_D_NAME)
    #CALL lo_XMLDomNode.setAttribute("type=",azzi090_xml_trim_str(lo_TableDataTypes.D_TYPE))
    CALL lo_XMLDomNode.setAttribute("type","")
    #CALL lo_XMLDomNode.setAttribute("length=",azzi090_xml_trim_str(lo_TableDataTypes.D_LENGTH))
    CALL lo_XMLDomNode.setAttribute("length","")
    CALL lo_XMLDomNode.setAttribute("isnull",azzi090_xml_trim_str(lo_TableDataTypes.D_NULLABLE))
    CALL lo_XMLDomNode.setAttribute("default",azzi090_xml_trim_str(lo_TableDataTypes.D_DEFAULT))

  END FOREACH
  CLOSE lcur_TableDataTypes
  
  FREE lpre_TableDataTypes
  FREE lcur_TableDataTypes
  
  CALL lo_XMLElements.writeXml(ls_XMLFileName)

END FUNCTION]]>
  </point>
  <point name="function.azzi090_token_str" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+做token，回傳指定順序的字串
PRIVATE FUNCTION azzi090_token_str(p_str,p_cnt)
   DEFINE p_str      LIKE type_t.chr200     #要做token的字串
   DEFINE p_cnt      LIKE type_t.num5       #要回傳字串的順序
   DEFINE l_tok      base.StringTokenizer   #token的物件
   DEFINE ls_tmp     LIKE type_t.chr100     #存放nextToken()的物件
   DEFINE l_cnt      LIKE type_t.num5       #筆數
   DEFINE l_return   STRING                 #回傳值
   
   LET l_tok = base.StringTokenizer.create(p_str,",")

   LET l_cnt = 1
   
   WHILE l_tok.hasMoreTokens()

      LET ls_tmp = l_tok.nextToken()

      #筆數和指定要回傳的順序相同,則回傳該字串
      IF l_cnt = p_cnt THEN
         LET l_return = ls_tmp
         CALL l_return.trim() RETURNING l_return
         EXIT WHILE
      END IF
      
      LET l_cnt = l_cnt + 1

   END WHILE

   RETURN l_return
END FUNCTION]]>
  </point>
  <point name="function.azzi090_gztd009_onchange" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+根據gztd009的選擇項目去找對應的資料型態和長度
PRIVATE FUNCTION azzi090_gztd009_onchange(p_data_type)
   
DEFINE
  p_data_type  STRING
DEFINE
  ls_sql       STRING,
  ls_data_type STRING,
  lo_db_type   type_data_type
DEFINE
  lo_return    type_data_type

  LET ls_data_type  = p_data_type

  #取得資料表欄位屬性
  LET ls_sql = "SELECT EJ.DZEJ005 DATA_TYPE,                       ",
               "       EJ.DZEJ006 DATA_LENGTH                      ", 
               "  FROM DS.DZEJ_T EJ                                ",
               " WHERE EJ.DZEJ001 = 'DB_DATATYPES_"||ms_db_type||"'",
               "   AND EJ.DZEJ003 = '"||ls_data_type||"'           "                              
  
  PREPARE lpre_onchange_gztd009 FROM ls_SQL
  DECLARE lcur_onchange_gztd009 CURSOR FOR lpre_onchange_gztd009
  OPEN lcur_onchange_gztd009
  FETCH lcur_onchange_gztd009 INTO lo_db_type.*
  CLOSE lcur_onchange_gztd009
  FREE lcur_onchange_gztd009
  FREE lpre_onchange_gztd009
  
  LET lo_return.* = lo_db_type.*
  
  RETURN lo_return.*
END FUNCTION]]>
  </point>
  <point name="function.azzi090_fill_combobox" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 動態載入gztd009的comboBox項目
PRIVATE FUNCTION azzi090_fill_combobox(p_Combobox,p_SQL)
DEFINE 
  p_Combobox ui.ComboBox,
  p_SQL      STRING
DEFINE
  ls_SQL      STRING,
  li_Index    INTEGER,
  li_Count    INTEGER, 
  ls_Combobox RECORD 
                Combobox_NAME VARCHAR(50),
                Combobox_DESC VARCHAR(255)
              END RECORD  
  
  LET li_Index = 0
  LET ls_SQL = p_SQL
  
  PREPARE lpre_Combobox FROM ls_SQL
  DECLARE lcur_Combobox SCROLL CURSOR FOR lpre_Combobox

  CALL p_Combobox.clear()
  
  LET li_Count = 1

  FOREACH lcur_Combobox INTO ls_Combobox.*  
    IF SQLCA.sqlcode THEN
      EXIT FOREACH
    END IF
    CALL p_Combobox.addItem(ls_Combobox.Combobox_NAME,ls_Combobox.Combobox_DESC)
    LET li_Count = li_Count + 1
  END FOREACH

  FREE lcur_Combobox
  FREE lpre_Combobox
END FUNCTION]]>
  </point>
  <point name="function.azzi090_chk_length" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 檢查欄位長度
PRIVATE FUNCTION azzi090_chk_length(ps_gztd003,ps_gztd008)
   DEFINE ps_gztd003 STRING 
   DEFINE ps_gztd008 STRING 
   DEFINE li_min  LIKE type_t.num5
   DEFINE li_max  LIKE type_t.num5
   #DISPLAY "ps_gztd003:",ps_gztd003 , " ps_gztd008:",ps_gztd008
   CASE
      
      WHEN ps_gztd003 = "varchar2" 
           # 長度不可>4000 
           IF ps_gztd008 > 4000 THEN 
              CALL cl_err("","azz-00010",1) 
              RETURN FALSE 
           END IF 
      WHEN ps_gztd003 = "number"
           # number>4000
           # number：長度最大值小於等於36，允許最長小數位數，需小於前方數字
           IF ps_gztd008.getIndexOf(",",1) THEN 
              LET li_min = ps_gztd008.subString(ps_gztd008.getIndexOf(",",1)+1 ,ps_gztd008.getLength()) 
              LET li_max = ps_gztd008.subString(1,ps_gztd008.getIndexOf(",",1)-1)
              IF li_max < li_min THEN                 
                 CALL cl_err("","azz-00011",1) 
                 RETURN FALSE
              END IF 
           ELSE 
              IF ps_gztd008 > 36 THEN
                 CALL cl_err("","azz-00011",1) 
                 RETURN FALSE
              END IF   
           END IF 

   END CASE    
 
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.azzi090_check_gztd001" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION azzi090_check_gztd001()
    DEFINE ls_str STRING 
   DEFINE ls_temp STRING 

   LET g_errno = NULL 
   LET ls_str  = g_gztd_d[l_ac].gztd001
   LET ls_str = ls_str.trim()
   LET ls_temp = ls_str.subString(1,1)
   IF NOT cl_chk_num(ls_temp,"U") THEN
      LET g_errno = "azz-00073" #第一碼為英文字大寫 
      RETURN
   END IF 
   LET ls_temp = ls_str.subString(2,ls_str.getLength())
   IF NOT cl_chk_num(ls_temp,"N") THEN
      LET g_errno = "azz-00074"  #后三码为数字
      RETURN
   END IF   
   
END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[PRIVATE TYPE type_data_type RECORD
                data_type    VARCHAR(20),
                data_length  VARCHAR(20)
             END RECORD

DEFINE ms_db_type           STRING #資料庫類別]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[    DEFINE lo_combobox ui.ComboBox #ernest add
   DEFINE ls_sql      STRING ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL FGL_DB_DRIVER_TYPE() RETURNING ms_db_type
   LET ms_db_type = ms_db_type.toUpperCase()

   LET ls_sql = "SELECT EJ.DZEJ003 DATA_TYPE,                          ",
                "       EJ.DZEJ003 TYPE_DESC                           ",
                "  FROM DS.DZEJ_T EJ                                   ",
                " WHERE EJ.DZEJ001 LIKE 'DB_DATATYPES_"||ms_db_type||"'",
                " ORDER BY EJ.DZEJ003                                  "

   LET lo_Combobox = ui.ComboBox.forName("gztd009")
   CALL azzi090_fill_combobox(lo_combobox,ls_sql)

   #cch_20130625 begin

   LET ls_sql =  "SELECT EJ.DZEJ002 WIDGETS_TYPES,                        ",
                 "       EJ.DZEJ002||'. '||EJ.DZEJ003 WIDGETS_TYPES_DESC  ",
                 "  FROM DZEJ_T EJ                                        ",
                 " WHERE EJ.DZEJ001 = 'GENERO_WIDGETS'                  ",
                 " AND NOT EJ.DZEJ002 IN('18','19','20','21','22','24','27','29','31','32','33','16 ','17','23','25','26','30') ",
                 " ORDER BY EJ.DZEJ002  "
   LET lo_combobox = ui.combobox.forName("gztd_t.gztd005")
   CALL azzi090_fill_combobox(lo_combobox,ls_sql)]]>
  </point>
  <point name="input.a.page1.gztd008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_gztd_d[l_ac].gztd008)  THEN 
                  IF NOT azzi090_chk_length(g_gztd_d[l_ac].gztd003,g_gztd_d[l_ac].gztd008) THEN  
                  END IF
            END IF]]>
  </point>
  <point name="input.a.page1.gztd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_gztd_d[l_ac].gztd010 > 30 OR g_gztd_d[l_ac].gztd010 < 5 THEN
                CALL cl_err_msg("", "azz-00020", "" , g_errshow)
            END IF
            IF cl_null(g_gztd_d[l_ac].gztd011) THEN
               LET g_gztd_d[l_ac].gztd011 =  g_gztd_d[l_ac].gztd010
               DISPLAY BY NAME g_gztd_d[l_ac].gztd011
            END IF]]>
  </point>
  <point name="input.b.page1.gztd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.gztd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL DIALOG.setFieldTouched("s_detail1.gztd010",TRUE)          
            IF g_gztd_d[l_ac].gztd010 IS NULL THEN
               IF NOT g_gztd_d[l_ac].gztd008 MATCHES "*,*" THEN 
                   LET g_gztd_d[l_ac].gztd010 = g_gztd_d[l_ac].gztd008
                   IF g_gztd_d[l_ac].gztd010 > 30 THEN
                      LET g_gztd_d[l_ac].gztd010 = 30
                   END IF
                   IF g_gztd_d[l_ac].gztd010 < 5 THEN
                      LET g_gztd_d[l_ac].gztd010 = 5
                   END IF
               ELSE
                   LET g_gztd_d[l_ac].gztd010 = azzi090_token_str(g_gztd_d[l_ac].gztd008,1) + azzi090_token_str(g_gztd_d[l_ac].gztd008,2)
                   IF g_gztd_d[l_ac].gztd010 > 30 THEN
                      LET g_gztd_d[l_ac].gztd010 = 30
                   END IF
                   IF g_gztd_d[l_ac].gztd010 < 5 THEN
                      LET g_gztd_d[l_ac].gztd010 = 5
                   END IF
               END IF
            END IF]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL azzi090_set_entry_b(l_cmd)
            CALL azzi090_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET l_ac = ARR_CURR()
				IF  NOT cl_null(g_gztd_d[l_ac].gztd001) THEN
				  CALL n_gztdl(g_gztd_d[l_ac].gztd001) 
				  INITIALIZE g_ref_fields TO NULL
				  LET g_ref_fields[1] = g_gztd_d[l_ac].gztd001
				  CALL ap_ref_array2(g_ref_fields," SELECT gztdl003,gztdl004 FROM gztdl_t WHERE gztdl001 = ? AND gztdl002 = '"||g_lang||"'","") RETURNING g_rtn_fields
				  
				  #DISPLAY "g_rtn_fields[1] = ",g_rtn_fields[1]
				  LET g_gztd_d[l_ac].gztdl003 = g_rtn_fields[1]
				  DISPLAY BY NAME g_gztd_d[l_ac].gztdl003
				  
				  #DISPLAY "g_rtn_fields[2] = ",g_rtn_fields[2]
				  LET g_gztd_d[l_ac].gztdl004 = g_rtn_fields[2]
				  DISPLAY BY NAME g_gztd_d[l_ac].gztdl004
				END IF ]]>
  </point>
  <point name="input.g.page1.gztd009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL azzi090_gztd009_onchange(g_gztd_d[l_ac].gztd009) RETURNING lo_db_type.*
           LET g_gztd_d[l_ac].gztd003 = lo_db_type.data_type 
           LET g_gztd_d[l_ac].gztd008 = lo_db_type.data_length]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                LET ls_TOP_ENV = FGL_GETENV("TOP")
               CALL azzi090_xml_gen_table_data_types_XML(ls_TOP_ENV||"/com/mta/"||g_lang||"/datatypes.xml")]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE lo_db_type       type_data_type]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("gztd012",TRUE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #只有N004,N101,N102,N201,N202,N203,N204這七種數值屬性需要設定gztd012
   IF g_gztd_d[l_ac].gztd001!='N004' AND g_gztd_d[l_ac].gztd001!='N101' AND
      g_gztd_d[l_ac].gztd001!='N102' AND g_gztd_d[l_ac].gztd001!='N201' AND
      g_gztd_d[l_ac].gztd001!='N202' AND g_gztd_d[l_ac].gztd001!='N203' AND
      g_gztd_d[l_ac].gztd001!='N204' AND g_gztd_d[l_ac].gztd001!='N301' THEN
      CALL cl_set_comp_entry("gztd012",FALSE)
   END IF]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE ls_TOP_ENV STRING]]>
  </point>
  <section id="azzi090.b_fill" ver="6" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi090_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE gztdstus,gztd001,gztd009,gztd003,gztd008,gztd005,gztd007,gztd010,gztd011, 
       gztd012,gztd001,gztdmodid,gztdcrtdt,gztdownid,gztdowndp,gztdcrtid,gztdcrtdp,gztdmoddt ,t1.ooag011 , 
       t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 FROM gztd_t",
               " LEFT JOIN gztdl_t ON gztd001 = gztdl001 AND gztdl002 = '",g_lang,"'",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=gztdmodid  ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=gztdownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=gztdowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=gztdcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=gztdcrtdp AND t5.ooefl002='"||g_dlang||"' ",
 
               " WHERE 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, cl_sql_add_filter("gztd_t"),
                      " ORDER BY gztd_t.gztd001"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE azzi090_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR azzi090_pb
   
   OPEN b_fill_curs
 
   CALL g_gztd_d.clear()
   CALL g_gztd2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_gztd_d[l_ac].gztdstus,g_gztd_d[l_ac].gztd001,g_gztd_d[l_ac].gztd009,g_gztd_d[l_ac].gztd003, 
       g_gztd_d[l_ac].gztd008,g_gztd_d[l_ac].gztd005,g_gztd_d[l_ac].gztd007,g_gztd_d[l_ac].gztd010,g_gztd_d[l_ac].gztd011, 
       g_gztd_d[l_ac].gztd012,g_gztd2_d[l_ac].gztd001,g_gztd2_d[l_ac].gztdmodid,g_gztd2_d[l_ac].gztdcrtdt, 
       g_gztd2_d[l_ac].gztdownid,g_gztd2_d[l_ac].gztdowndp,g_gztd2_d[l_ac].gztdcrtid,g_gztd2_d[l_ac].gztdcrtdp, 
       g_gztd2_d[l_ac].gztdmoddt,g_gztd2_d[l_ac].gztdmodid_desc,g_gztd2_d[l_ac].gztdownid_desc,g_gztd2_d[l_ac].gztdowndp_desc, 
       g_gztd2_d[l_ac].gztdcrtid_desc,g_gztd2_d[l_ac].gztdcrtdp_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL azzi090_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("gztd_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
   
   CALL g_gztd_d.deleteElement(g_gztd_d.getLength())   
   CALL g_gztd2_d.deleteElement(g_gztd2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_gztd_d.getLength()
      LET g_gztd2_d[l_ac].gztd001 = g_gztd_d[l_ac].gztd001 
 
   END FOR
   
   IF g_cnt > g_gztd_d.getLength() THEN
      LET l_ac = g_gztd_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_gztd_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE azzi090_pb
   
END FUNCTION
]]>
  </section>
  <section id="azzi090.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi090_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gztd001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi090.delete" ver="2" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi090_delete()
   DEFINE li_idx           LIKE type_t.num5
   DEFINE li_detail_tmp    LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_gztd_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT azzi090_lock_b("gztd_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_gztd_d.getLength()
      IF g_gztd_d[li_idx].gztd001 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM gztd_t
          WHERE  
                gztd001 = g_gztd_d[li_idx].gztd001
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            CALL cl_err("gztd_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gztdl001'
                  LET l_field_keys[02] = 'gztdl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gztdl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.gztdl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gztdl_t')
 
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gztd_d[g_detail_idx].gztd001
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL azzi090_delete_b('gztd_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   #刷新資料
   CALL azzi090_b_fill(g_wc2)
            
END FUNCTION
]]>
  </section>
  <section id="azzi090.delete_b" ver="3" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi090_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "gztd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'gztd_t' THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM gztd_t
       WHERE 
         gztd001 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi090.description" ver="14" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000301
#+ 
#+ Filename...: azzi090
#+ Description: 欄位型態維護作業
#+ Creator....: 01856(2013/09/16)
#+ Modifier...: 01856(2013/09/16)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="azzi090.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION azzi090_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_gztd2_d[l_ac].gztdownid_desc = cl_get_username(g_gztd2_d[l_ac].gztdownid)
      #LET g_gztd2_d[l_ac].gztdowndp_desc = cl_get_deptname(g_gztd2_d[l_ac].gztdowndp)
      #LET g_gztd2_d[l_ac].gztdcrtid_desc = cl_get_username(g_gztd2_d[l_ac].gztdcrtid)
      #LET g_gztd2_d[l_ac].gztdcrtdp_desc = cl_get_deptname(g_gztd2_d[l_ac].gztdcrtdp)
      #LET g_gztd2_d[l_ac].gztdmodid_desc = cl_get_username(g_gztd2_d[l_ac].gztdmodid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="azzi090.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_gztd_d RECORD
       gztdstus LIKE gztd_t.gztdstus, 
   gztd001 LIKE gztd_t.gztd001, 
   gztdl003 LIKE gztdl_t.gztdl003, 
   gztdl004 LIKE gztdl_t.gztdl004, 
   gztd009 LIKE gztd_t.gztd009, 
   gztd003 LIKE gztd_t.gztd003, 
   gztd008 LIKE gztd_t.gztd008, 
   gztd005 LIKE gztd_t.gztd005, 
   gztd007 LIKE gztd_t.gztd007, 
   gztd010 LIKE gztd_t.gztd010, 
   gztd011 LIKE gztd_t.gztd011, 
   gztd012 LIKE gztd_t.gztd012
       END RECORD
PRIVATE TYPE type_g_gztd2_d RECORD
       gztd001 LIKE gztd_t.gztd001, 
   gztdmodid LIKE gztd_t.gztdmodid, 
   gztdmodid_desc LIKE type_t.chr500, 
   gztdcrtdt DATETIME YEAR TO SECOND, 
   gztdownid LIKE gztd_t.gztdownid, 
   gztdownid_desc LIKE type_t.chr500, 
   gztdowndp LIKE gztd_t.gztdowndp, 
   gztdowndp_desc LIKE type_t.chr500, 
   gztdcrtid LIKE gztd_t.gztdcrtid, 
   gztdcrtid_desc LIKE type_t.chr500, 
   gztdcrtdp LIKE gztd_t.gztdcrtdp, 
   gztdcrtdp_desc LIKE type_t.chr500, 
   gztdmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      gztdl001 LIKE gztdl_t.gztdl001,
      gztdl002 LIKE gztdl_t.gztdl002,
      gztdl003 LIKE gztdl_t.gztdl003,
      gztdl004 LIKE gztdl_t.gztdl004
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_gztd_d          DYNAMIC ARRAY OF type_g_gztd_d #單身變數
DEFINE g_gztd_d_t        type_g_gztd_d                  #單身備份
DEFINE g_gztd_d_o        type_g_gztd_d                  #單身備份
DEFINE g_gztd2_d   DYNAMIC ARRAY OF type_g_gztd2_d
DEFINE g_gztd2_d_t type_g_gztd2_d
DEFINE g_gztd2_d_o type_g_gztd2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="azzi090.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION azzi090_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL azzi090_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="azzi090.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi090_insert()
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point                
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL azzi090_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="azzi090.insert_b" ver="3" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi090_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "gztd_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO gztd_t
                  (
                   gztd001
                   ,gztdstus,gztd009,gztd003,gztd008,gztd005,gztd007,gztd010,gztd011,gztd012,gztdmodid,gztdcrtdt,gztdownid,gztdowndp,gztdcrtid,gztdcrtdp,gztdmoddt) 
            VALUES(
                   ps_keys[1]
                   ,g_gztd_d[l_ac].gztdstus,g_gztd_d[l_ac].gztd009,g_gztd_d[l_ac].gztd003,g_gztd_d[l_ac].gztd008, 
                       g_gztd_d[l_ac].gztd005,g_gztd_d[l_ac].gztd007,g_gztd_d[l_ac].gztd010,g_gztd_d[l_ac].gztd011, 
                       g_gztd_d[l_ac].gztd012,g_gztd2_d[l_ac].gztdmodid,g_gztd2_d[l_ac].gztdcrtdt,g_gztd2_d[l_ac].gztdownid, 
                       g_gztd2_d[l_ac].gztdowndp,g_gztd2_d[l_ac].gztdcrtid,g_gztd2_d[l_ac].gztdcrtdp, 
                       g_gztd2_d[l_ac].gztdmoddt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("gztd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi090.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION azzi090_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="azzi090.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi090_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL azzi090_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "gztd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi090_bcl USING 
                                       g_gztd_d[g_detail_idx].gztd001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi090_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi090.main" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gztdstus,gztd001,gztd009,gztd003,gztd008,gztd005,gztd007,gztd010,gztd011, 
       gztd012,gztd001,gztdmodid,gztdcrtdt,gztdownid,gztdowndp,gztdcrtid,gztdcrtdp,gztdmoddt FROM gztd_t  
       WHERE gztd001=? FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi090_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi090 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi090_init()   
 
      #進入選單 Menu (="N")
      CALL azzi090_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi090
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="azzi090.modify" ver="6" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi090_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_gztd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gztd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi090_b_fill(g_wc2)
            LET g_detail_cnt = g_gztd_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_gztd_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_gztd_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_gztd_d[l_ac].gztd001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gztd_d_t.* = g_gztd_d[l_ac].*  #BACKUP
               LET g_gztd_d_o.* = g_gztd_d[l_ac].*  #BACKUP
               IF NOT azzi090_lock_b("gztd_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi090_bcl INTO g_gztd_d[l_ac].gztdstus,g_gztd_d[l_ac].gztd001,g_gztd_d[l_ac].gztd009, 
                      g_gztd_d[l_ac].gztd003,g_gztd_d[l_ac].gztd008,g_gztd_d[l_ac].gztd005,g_gztd_d[l_ac].gztd007, 
                      g_gztd_d[l_ac].gztd010,g_gztd_d[l_ac].gztd011,g_gztd_d[l_ac].gztd012,g_gztd2_d[l_ac].gztd001, 
                      g_gztd2_d[l_ac].gztdmodid,g_gztd2_d[l_ac].gztdcrtdt,g_gztd2_d[l_ac].gztdownid, 
                      g_gztd2_d[l_ac].gztdowndp,g_gztd2_d[l_ac].gztdcrtid,g_gztd2_d[l_ac].gztdcrtdp, 
                      g_gztd2_d[l_ac].gztdmoddt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_gztd_d_t.gztd001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL azzi090_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.gztdl001 = g_gztd_d[l_ac].gztd001
LET g_detail_multi_table_t.gztdl002 = g_dlang
LET g_detail_multi_table_t.gztdl003 = g_gztd_d[l_ac].gztdl003
LET g_detail_multi_table_t.gztdl004 = g_gztd_d[l_ac].gztdl004
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'gztdl001'
            LET l_var_keys[01] = g_gztd_d[l_ac].gztd001
            LET l_field_keys[02] = 'gztdl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'gztdl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gztd_d_t.* TO NULL
            INITIALIZE g_gztd_d_o.* TO NULL
            INITIALIZE g_gztd_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_gztd2_d[l_ac].gztdownid = g_user
      LET g_gztd2_d[l_ac].gztdowndp = g_dept
      LET g_gztd2_d[l_ac].gztdcrtid = g_user
      LET g_gztd2_d[l_ac].gztdcrtdp = g_dept 
      LET g_gztd2_d[l_ac].gztdcrtdt = cl_get_current()
      LET g_gztd2_d[l_ac].gztdmodid = ""
      LET g_gztd2_d[l_ac].gztdmoddt = ""
      LET g_gztd_d[l_ac].gztdstus = ""
 
 
                  LET g_gztd_d[l_ac].gztdstus = "Y"
 
            LET g_gztd_d_t.* = g_gztd_d[l_ac].*     #新輸入資料
            LET g_gztd_d_o.* = g_gztd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi090_set_entry_b("a")
            CALL azzi090_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gztd_d[li_reproduce_target].* = g_gztd_d[li_reproduce].*
               LET g_gztd2_d[li_reproduce_target].* = g_gztd2_d[li_reproduce].*
 
               LET g_gztd_d[g_gztd_d.getLength()].gztd001 = NULL
 
            END IF
            LET g_detail_multi_table_t.gztdl001 = g_gztd_d[l_ac].gztd001
LET g_detail_multi_table_t.gztdl002 = g_dlang
LET g_detail_multi_table_t.gztdl003 = g_gztd_d[l_ac].gztdl003
LET g_detail_multi_table_t.gztdl004 = g_gztd_d[l_ac].gztdl004
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gztd_t 
             WHERE  gztd001 = g_gztd_d[l_ac].gztd001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gztd_d[g_detail_idx].gztd001
               CALL azzi090_insert_b('gztd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gztd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gztd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi090_b_fill(g_wc2)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gztd_d[l_ac].gztd001 = g_detail_multi_table_t.gztdl001 AND
         g_gztd_d[l_ac].gztdl003 = g_detail_multi_table_t.gztdl003 AND
         g_gztd_d[l_ac].gztdl004 = g_detail_multi_table_t.gztdl004 THEN
         ELSE 
            LET l_var_keys[01] = g_gztd_d[l_ac].gztd001
            LET l_field_keys[01] = 'gztdl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gztdl002'
            LET l_vars[01] = g_gztd_d[l_ac].gztdl003
            LET l_fields[01] = 'gztdl003'
            LET l_vars[02] = g_gztd_d[l_ac].gztdl004
            LET l_fields[02] = 'gztdl004'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gztdl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gztdl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gztdl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (gztd001 = '", g_gztd_d[l_ac].gztd001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gztd_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gztd_d.deleteElement(l_ac)
               NEXT FIELD gztd001
            END IF
            IF g_gztd_d[l_ac].gztd001 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM gztd_t
                WHERE  
                      gztd001 = g_gztd_d_t.gztd001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gztd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gztdl001'
                  LET l_field_keys[02] = 'gztdl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gztdl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.gztdl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gztdl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi090_bcl
               LET l_count = g_gztd_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gztd_d[g_detail_idx].gztd001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL azzi090_delete_b('gztd_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gztdstus
            #add-point:BEFORE FIELD gztdstus
            {<point name="input.b.page1.gztdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdstus
            
            #add-point:AFTER FIELD gztdstus
            {<point name="input.a.page1.gztdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztdstus
            #add-point:ON CHANGE gztdstus
            {<point name="input.g.page1.gztdstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd001
            #add-point:BEFORE FIELD gztd001
            {<point name="input.b.page1.gztd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd001
            
            #add-point:AFTER FIELD gztd001
            {<point name="input.a.page1.gztd001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd001
            #add-point:ON CHANGE gztd001
            {<point name="input.g.page1.gztd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdl003
            #add-point:BEFORE FIELD gztdl003
            {<point name="input.b.page1.gztdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdl003
            
            #add-point:AFTER FIELD gztdl003
            {<point name="input.a.page1.gztdl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztdl003
            #add-point:ON CHANGE gztdl003
            {<point name="input.g.page1.gztdl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdl004
            #add-point:BEFORE FIELD gztdl004
            {<point name="input.b.page1.gztdl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdl004
            
            #add-point:AFTER FIELD gztdl004
            {<point name="input.a.page1.gztdl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztdl004
            #add-point:ON CHANGE gztdl004
            {<point name="input.g.page1.gztdl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd009
            #add-point:BEFORE FIELD gztd009
            {<point name="input.b.page1.gztd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd009
            
            #add-point:AFTER FIELD gztd009
            {<point name="input.a.page1.gztd009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd009
            #add-point:ON CHANGE gztd009
            {<point name="input.g.page1.gztd009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd003
            #add-point:BEFORE FIELD gztd003
            {<point name="input.b.page1.gztd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd003
            
            #add-point:AFTER FIELD gztd003
            {<point name="input.a.page1.gztd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd003
            #add-point:ON CHANGE gztd003
            {<point name="input.g.page1.gztd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd008
            #add-point:BEFORE FIELD gztd008
            {<point name="input.b.page1.gztd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd008
            
            #add-point:AFTER FIELD gztd008
            {<point name="input.a.page1.gztd008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd008
            #add-point:ON CHANGE gztd008
            {<point name="input.g.page1.gztd008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd005
            #add-point:BEFORE FIELD gztd005
            {<point name="input.b.page1.gztd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd005
            
            #add-point:AFTER FIELD gztd005
            {<point name="input.a.page1.gztd005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd005
            #add-point:ON CHANGE gztd005
            {<point name="input.g.page1.gztd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd007
            #add-point:BEFORE FIELD gztd007
            {<point name="input.b.page1.gztd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd007
            
            #add-point:AFTER FIELD gztd007
            {<point name="input.a.page1.gztd007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd007
            #add-point:ON CHANGE gztd007
            {<point name="input.g.page1.gztd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd010
            #add-point:BEFORE FIELD gztd010
            {<point name="input.b.page1.gztd010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd010
            
            #add-point:AFTER FIELD gztd010
            {<point name="input.a.page1.gztd010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd010
            #add-point:ON CHANGE gztd010
            {<point name="input.g.page1.gztd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd012
            #add-point:BEFORE FIELD gztd012
            {<point name="input.b.page1.gztd012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd012
            
            #add-point:AFTER FIELD gztd012
            {<point name="input.a.page1.gztd012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gztd012
            #add-point:ON CHANGE gztd012
            {<point name="input.g.page1.gztd012" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.gztdstus
         ON ACTION controlp INFIELD gztdstus
            #add-point:ON ACTION controlp INFIELD gztdstus
            {<point name="input.c.page1.gztdstus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd001
         ON ACTION controlp INFIELD gztd001
            #add-point:ON ACTION controlp INFIELD gztd001
            {<point name="input.c.page1.gztd001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztdl003
         ON ACTION controlp INFIELD gztdl003
            #add-point:ON ACTION controlp INFIELD gztdl003
            {<point name="input.c.page1.gztdl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztdl004
         ON ACTION controlp INFIELD gztdl004
            #add-point:ON ACTION controlp INFIELD gztdl004
            {<point name="input.c.page1.gztdl004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd009
         ON ACTION controlp INFIELD gztd009
            #add-point:ON ACTION controlp INFIELD gztd009
            {<point name="input.c.page1.gztd009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd003
         ON ACTION controlp INFIELD gztd003
            #add-point:ON ACTION controlp INFIELD gztd003
            {<point name="input.c.page1.gztd003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd008
         ON ACTION controlp INFIELD gztd008
            #add-point:ON ACTION controlp INFIELD gztd008
            {<point name="input.c.page1.gztd008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd005
         ON ACTION controlp INFIELD gztd005
            #add-point:ON ACTION controlp INFIELD gztd005
            {<point name="input.c.page1.gztd005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd007
         ON ACTION controlp INFIELD gztd007
            #add-point:ON ACTION controlp INFIELD gztd007
            {<point name="input.c.page1.gztd007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd010
         ON ACTION controlp INFIELD gztd010
            #add-point:ON ACTION controlp INFIELD gztd010
            {<point name="input.c.page1.gztd010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gztd012
         ON ACTION controlp INFIELD gztd012
            #add-point:ON ACTION controlp INFIELD gztd012
            {<point name="input.c.page1.gztd012" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gztd_d[l_ac].* = g_gztd_d_t.*
               CLOSE azzi090_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_gztd_d[l_ac].gztd001,-263,1)
               LET g_gztd_d[l_ac].* = g_gztd_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_gztd2_d[l_ac].gztdmodid = g_user 
LET g_gztd2_d[l_ac].gztdmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE gztd_t SET (gztdstus,gztd001,gztd009,gztd003,gztd008,gztd005,gztd007,gztd010,gztd011, 
                   gztd012,gztdmodid,gztdcrtdt,gztdownid,gztdowndp,gztdcrtid,gztdcrtdp,gztdmoddt) = (g_gztd_d[l_ac].gztdstus, 
                   g_gztd_d[l_ac].gztd001,g_gztd_d[l_ac].gztd009,g_gztd_d[l_ac].gztd003,g_gztd_d[l_ac].gztd008, 
                   g_gztd_d[l_ac].gztd005,g_gztd_d[l_ac].gztd007,g_gztd_d[l_ac].gztd010,g_gztd_d[l_ac].gztd011, 
                   g_gztd_d[l_ac].gztd012,g_gztd2_d[l_ac].gztdmodid,g_gztd2_d[l_ac].gztdcrtdt,g_gztd2_d[l_ac].gztdownid, 
                   g_gztd2_d[l_ac].gztdowndp,g_gztd2_d[l_ac].gztdcrtid,g_gztd2_d[l_ac].gztdcrtdp,g_gztd2_d[l_ac].gztdmoddt) 

                WHERE 
                  gztd001 = g_gztd_d_t.gztd001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gztd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gztd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gztd_d[g_detail_idx].gztd001
               LET gs_keys_bak[1] = g_gztd_d_t.gztd001
               CALL azzi090_update_b('gztd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gztd_d[l_ac].gztd001 = g_detail_multi_table_t.gztdl001 AND
         g_gztd_d[l_ac].gztdl003 = g_detail_multi_table_t.gztdl003 AND
         g_gztd_d[l_ac].gztdl004 = g_detail_multi_table_t.gztdl004 THEN
         ELSE 
            LET l_var_keys[01] = g_gztd_d[l_ac].gztd001
            LET l_field_keys[01] = 'gztdl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gztdl002'
            LET l_vars[01] = g_gztd_d[l_ac].gztdl003
            LET l_fields[01] = 'gztdl003'
            LET l_vars[02] = g_gztd_d[l_ac].gztdl004
            LET l_fields[02] = 'gztdl004'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gztdl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gztdl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gztdl_t')
         END IF 
 
                     LET g_log1 = util.JSON.stringify(g_gztd_d_t)
                     LET g_log2 = util.JSON.stringify(g_gztd_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL azzi090_unlock_b("gztd_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_gztd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gztd_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_gztd2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL azzi090_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD gztdstus
            WHEN "s_detail2"
               NEXT FIELD gztd001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE azzi090_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="azzi090.modify_detail_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION azzi090_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "gztdstus"
      WHEN "s_detail2"
         LET ls_return = "gztd001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="azzi090.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="azzi090.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="azzi090.query" ver="4" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi090_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_gztd_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON gztdstus,gztd001,gztdl003,gztdl004,gztd009,gztd003,gztd008,gztd005,gztd007, 
          gztd010,gztd012,gztdmodid,gztdcrtdt,gztdownid,gztdowndp,gztdcrtid,gztdcrtdp,gztdmoddt 
 
         FROM s_detail1[1].gztdstus,s_detail1[1].gztd001,s_detail1[1].gztdl003,s_detail1[1].gztdl004, 
             s_detail1[1].gztd009,s_detail1[1].gztd003,s_detail1[1].gztd008,s_detail1[1].gztd005,s_detail1[1].gztd007, 
             s_detail1[1].gztd010,s_detail1[1].gztd012,s_detail2[1].gztdmodid,s_detail2[1].gztdcrtdt, 
             s_detail2[1].gztdownid,s_detail2[1].gztdowndp,s_detail2[1].gztdcrtid,s_detail2[1].gztdcrtdp, 
             s_detail2[1].gztdmoddt 
      
         #此段落由子樣板a11產生
         ##----<<gztdcrtdt>>----
         AFTER FIELD gztdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gztdmoddt>>----
         AFTER FIELD gztdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gztdcnfdt>>----
         
         #----<<gztdpstdt>>----
 
 
      
                  #此段落由子樣板a01產生
         BEFORE FIELD gztdstus
            #add-point:BEFORE FIELD gztdstus
            {<point name="query.b.page1.gztdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdstus
            
            #add-point:AFTER FIELD gztdstus
            {<point name="query.a.page1.gztdstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztdstus
         ON ACTION controlp INFIELD gztdstus
            #add-point:ON ACTION controlp INFIELD gztdstus
            {<point name="query.c.page1.gztdstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd001
            #add-point:BEFORE FIELD gztd001
            {<point name="query.b.page1.gztd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd001
            
            #add-point:AFTER FIELD gztd001
            {<point name="query.a.page1.gztd001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd001
         ON ACTION controlp INFIELD gztd001
            #add-point:ON ACTION controlp INFIELD gztd001
            {<point name="query.c.page1.gztd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdl003
            #add-point:BEFORE FIELD gztdl003
            {<point name="query.b.page1.gztdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdl003
            
            #add-point:AFTER FIELD gztdl003
            {<point name="query.a.page1.gztdl003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztdl003
         ON ACTION controlp INFIELD gztdl003
            #add-point:ON ACTION controlp INFIELD gztdl003
            {<point name="query.c.page1.gztdl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdl004
            #add-point:BEFORE FIELD gztdl004
            {<point name="query.b.page1.gztdl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdl004
            
            #add-point:AFTER FIELD gztdl004
            {<point name="query.a.page1.gztdl004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztdl004
         ON ACTION controlp INFIELD gztdl004
            #add-point:ON ACTION controlp INFIELD gztdl004
            {<point name="query.c.page1.gztdl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd009
            #add-point:BEFORE FIELD gztd009
            {<point name="query.b.page1.gztd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd009
            
            #add-point:AFTER FIELD gztd009
            {<point name="query.a.page1.gztd009" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd009
         ON ACTION controlp INFIELD gztd009
            #add-point:ON ACTION controlp INFIELD gztd009
            {<point name="query.c.page1.gztd009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd003
            #add-point:BEFORE FIELD gztd003
            {<point name="query.b.page1.gztd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd003
            
            #add-point:AFTER FIELD gztd003
            {<point name="query.a.page1.gztd003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd003
         ON ACTION controlp INFIELD gztd003
            #add-point:ON ACTION controlp INFIELD gztd003
            {<point name="query.c.page1.gztd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd008
            #add-point:BEFORE FIELD gztd008
            {<point name="query.b.page1.gztd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd008
            
            #add-point:AFTER FIELD gztd008
            {<point name="query.a.page1.gztd008" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd008
         ON ACTION controlp INFIELD gztd008
            #add-point:ON ACTION controlp INFIELD gztd008
            {<point name="query.c.page1.gztd008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd005
            #add-point:BEFORE FIELD gztd005
            {<point name="query.b.page1.gztd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd005
            
            #add-point:AFTER FIELD gztd005
            {<point name="query.a.page1.gztd005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd005
         ON ACTION controlp INFIELD gztd005
            #add-point:ON ACTION controlp INFIELD gztd005
            {<point name="query.c.page1.gztd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd007
            #add-point:BEFORE FIELD gztd007
            {<point name="query.b.page1.gztd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd007
            
            #add-point:AFTER FIELD gztd007
            {<point name="query.a.page1.gztd007" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd007
         ON ACTION controlp INFIELD gztd007
            #add-point:ON ACTION controlp INFIELD gztd007
            {<point name="query.c.page1.gztd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd010
            #add-point:BEFORE FIELD gztd010
            {<point name="query.b.page1.gztd010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd010
            
            #add-point:AFTER FIELD gztd010
            {<point name="query.a.page1.gztd010" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd010
         ON ACTION controlp INFIELD gztd010
            #add-point:ON ACTION controlp INFIELD gztd010
            {<point name="query.c.page1.gztd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztd012
            #add-point:BEFORE FIELD gztd012
            {<point name="query.b.page1.gztd012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztd012
            
            #add-point:AFTER FIELD gztd012
            {<point name="query.a.page1.gztd012" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gztd012
         ON ACTION controlp INFIELD gztd012
            #add-point:ON ACTION controlp INFIELD gztd012
            {<point name="query.c.page1.gztd012" />}
            #END add-point
 
  
         
                  #Ctrlp:construct.c.page2.gztdmodid
         ON ACTION controlp INFIELD gztdmodid
            #add-point:ON ACTION controlp INFIELD gztdmodid
            {<point name="construct.c.page2.gztdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdmodid
            #add-point:BEFORE FIELD gztdmodid
            {<point name="query.b.page2.gztdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdmodid
            
            #add-point:AFTER FIELD gztdmodid
            {<point name="query.a.page2.gztdmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdcrtdt
            #add-point:BEFORE FIELD gztdcrtdt
            {<point name="query.b.page2.gztdcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.gztdownid
         ON ACTION controlp INFIELD gztdownid
            #add-point:ON ACTION controlp INFIELD gztdownid
            {<point name="construct.c.page2.gztdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdownid
            #add-point:BEFORE FIELD gztdownid
            {<point name="query.b.page2.gztdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdownid
            
            #add-point:AFTER FIELD gztdownid
            {<point name="query.a.page2.gztdownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gztdowndp
         ON ACTION controlp INFIELD gztdowndp
            #add-point:ON ACTION controlp INFIELD gztdowndp
            {<point name="construct.c.page2.gztdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdowndp
            #add-point:BEFORE FIELD gztdowndp
            {<point name="query.b.page2.gztdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdowndp
            
            #add-point:AFTER FIELD gztdowndp
            {<point name="query.a.page2.gztdowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gztdcrtid
         ON ACTION controlp INFIELD gztdcrtid
            #add-point:ON ACTION controlp INFIELD gztdcrtid
            {<point name="construct.c.page2.gztdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdcrtid
            #add-point:BEFORE FIELD gztdcrtid
            {<point name="query.b.page2.gztdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdcrtid
            
            #add-point:AFTER FIELD gztdcrtid
            {<point name="query.a.page2.gztdcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gztdcrtdp
         ON ACTION controlp INFIELD gztdcrtdp
            #add-point:ON ACTION controlp INFIELD gztdcrtdp
            {<point name="construct.c.page2.gztdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdcrtdp
            #add-point:BEFORE FIELD gztdcrtdp
            {<point name="query.b.page2.gztdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gztdcrtdp
            
            #add-point:AFTER FIELD gztdcrtdp
            {<point name="query.a.page2.gztdcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gztdmoddt
            #add-point:BEFORE FIELD gztdmoddt
            {<point name="query.b.page2.gztdmoddt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL azzi090_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="azzi090.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi090_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="azzi090.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi090_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="azzi090.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi090.ui_dialog" ver="8" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION azzi090_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL azzi090_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_gztd_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
			   #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_gztd2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body2.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body2.before_display2"/>}
               #end add-point
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row2"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL DIALOG.setSelectionMode("s_detail2", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi090_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi090_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi090_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi090_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi090_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="azzi090.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi090_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE azzi090_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="azzi090.update_b" ver="3" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi090_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "gztd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "gztd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE gztd_t 
         SET (gztd001
              ,gztdstus,gztd009,gztd003,gztd008,gztd005,gztd007,gztd010,gztd011,gztd012,gztdmodid,gztdcrtdt,gztdownid,gztdowndp,gztdcrtid,gztdcrtdp,gztdmoddt) 
              = 
             (ps_keys[1]
              ,g_gztd_d[l_ac].gztdstus,g_gztd_d[l_ac].gztd009,g_gztd_d[l_ac].gztd003,g_gztd_d[l_ac].gztd008, 
                  g_gztd_d[l_ac].gztd005,g_gztd_d[l_ac].gztd007,g_gztd_d[l_ac].gztd010,g_gztd_d[l_ac].gztd011, 
                  g_gztd_d[l_ac].gztd012,g_gztd2_d[l_ac].gztdmodid,g_gztd2_d[l_ac].gztdcrtdt,g_gztd2_d[l_ac].gztdownid, 
                  g_gztd2_d[l_ac].gztdowndp,g_gztd2_d[l_ac].gztdcrtid,g_gztd2_d[l_ac].gztdcrtdp,g_gztd2_d[l_ac].gztdmoddt)  

         WHERE gztd001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gztd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gztd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
