<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="azzi500" std_prog="azzi500" erpver="1.0" module="AZZ" ver="11" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="construct.c.page1_info.gzoucrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzoucrtdp  #顯示到畫面上

            NEXT FIELD gzoucrtdp                     #返回原欄位

]]>
  </point>
  <point name="input.a.page1_info.gzou001_2" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_gzou1_info_d[g_detail_idx].gzou001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzou1_info_d[g_detail_idx].gzou001 != g_gzou1_info_d_t.gzou001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzou_t WHERE "||"gzou001 = '"||g_gzou1_info_d[g_detail_idx].gzou001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="construct.c.page1_info.gzouownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzouownid  #顯示到畫面上

            NEXT FIELD gzouownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1_info.gzouowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzouowndp  #顯示到畫面上

            NEXT FIELD gzouowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1_info.gzoumodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzoumodid  #顯示到畫面上

            NEXT FIELD gzoumodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1_info.gzoucrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzoucrtid  #顯示到畫面上

            NEXT FIELD gzoucrtid                     #返回原欄位

]]>
  </point>
  <point name="function.azzi500_check_exist_db" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ 檢核資料庫存是否在gzda_t
#+ 輸入值需存在 gzda001(資料庫編號) ，不存在則報錯「無此資料庫, 請重新輸入!」
#+ 輸入值需存在 gzda001(資料庫編號) 且有效，無效則報錯「資料庫已無效, 請重新輸入!」
PRIVATE FUNCTION azzi500_check_exist_db(pc_db)
  DEFINE pc_db        LIKE gzda_t.gzda001  
   DEFINE ls_str      STRING
   DEFINE li_cnt      LIKE type_t.num5
   DEFINE l_stus      LIKE gzda_t.gzdastus 
   DEFINE lc_gzda001  LIKE gzda_t.gzda001
   LET g_errno = NULL

   SELECT gzdastus,gzda001 INTO l_stus,lc_gzda001 
      FROM gzda_t 
         WHERE  gzda001 =  pc_db

   IF cl_null(lc_gzda001) THEN
      LET g_errno = "azz-00039"
      RETURN 
   END IF 
   IF l_stus = "N" THEN
      LET g_errno = "azz-00040"
      RETURN 
   END IF
END FUNCTION]]>
  </point>
  <point name="function.azzi500_set_combo_gzou005" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+預設年月日表現方式
PRIVATE FUNCTION azzi500_set_combo_gzou005()
  DEFINE ls_values  STRING 
   DEFINE ls_items   STRING 
   DEFINE lc_gzcb002 LIKE gzcb_t.gzcb002 
   DEFINE lc_gzcbl004 LIKE gzcbl_t.gzcbl004
   DEFINE ls_gzcb002 STRING  
   DEFINE li         LIKE type_t.num5
   DECLARE azzi500_set_combo_scc_dt_cs CURSOR FOR
      SELECT gzcb002, gzcbl004
         FROM gzcb_t
         LEFT JOIN gzcbl_t ON gzcb002 = gzcbl002
                     AND gzcb001 = gzcbl001
                     AND gzcb001 = '10'
                     AND gzcbl003 = g_dlang
         WHERE gzcb001 IN (SELECT gzcb001 
                      FROM gzcb_t 
                        WHERE gzcb001 = '10') 
         ORDER BY gzcbl002  
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  "lib-045"
         LET g_errparam.extend = "gzcb_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN
      END IF
   LET ls_values = "" 
   LET ls_items = ""
   LET li = 1 
   FOREACH azzi500_set_combo_scc_dt_cs INTO lc_gzcb002, lc_gzcbl004
      LET ls_values = ls_values, lc_gzcb002 , ',' #值
      LET ls_items = ls_items, lc_gzcbl004 CLIPPED, ',' #items
   END FOREACH
   LET ls_values = ls_values.subString(1, ls_values.getLength() - 1)
   LET ls_items = ls_items.subString(1, ls_items.getLength() - 1)
   
   CALL cl_set_combo_items("gzou005", ls_values, ls_items)
END FUNCTION]]>
  </point>
  <point name="function.azzi500_enterprise_login_url" order="3" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 企業登入網址
# Usage..........: CALL azzi500_enterprise_login_url()
#                  RETURNING 回传参数
# Date & Author..: 日期 By 作者
################################################################################
PRIVATE FUNCTION azzi500_enterprise_login_url()
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING

   DEFINE ls_gdc  STRING 
   DEFINE ls_gwc  STRING

   #ls_gdc:http://10.40.40.18/wt10dev/wa/r/app/gdc_azzi000?Arg=99
   #ls_gwc:http://10.40.40.18/wt10dev/wa/r/app/gwc_azzi000?Arg=99
   LET la_param.prog = "azzi000"
   LET ls_gdc = cl_ap_url("GDC",util.JSON.stringify(la_param))
   LET ls_gdc = ls_gdc.subString(1,ls_gdc.getIndexOf("azzi000",1)+6),"?Arg=",g_gzou_d[g_detail_idx].gzou001 USING "<<<<"  
   LET ls_gwc = cl_ap_url("GWC",util.JSON.stringify(la_param))
   LET ls_gwc = ls_gwc.subString(1,ls_gwc.getIndexOf("azzi000",1)+6),"?Arg=",g_gzou_d[g_detail_idx].gzou001 USING "<<<<"  

   OPEN WINDOW w_azzi500_s01 WITH FORM cl_ap_formpath("azz","azzi500_s01")

        #瀏覽頁簽資料初始化
        CALL cl_ui_init()
      
        MENU "" ATTRIBUTE(STYLE="")
                   
           BEFORE MENU 
              CALL cl_set_comp_att_text("prog_gdc",ls_gdc)  
              CALL cl_set_comp_att_text("prog_gwc",ls_gwc)  

          ON ACTION CLOSE  
             EXIT MENU 

          ON ACTION ACCEPT 
             EXIT MENU   
                      
          ON ACTION CANCEL   
             EXIT MENU    

          ON ACTION prog_gwc
             IF cl_client_open_url(ls_gwc) THEN END IF
                EXIT MENU   

          ON ACTION prog_gdc
             IF cl_client_open_url(ls_gdc) THEN END IF 
                EXIT MENU 
             END MENU 
            
          CLOSE WINDOW w_azzi500_s01
END FUNCTION]]>
  </point>
  <point name="function.azzi500_ins_azzi850" order="4" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 新增企業編號，額外新增到azzi850 
# Memo...........:
# Usage..........: CALLazzi500_ins_azzi850(pc_gzou001)
# Input parameter: pc_gzou001 企業編號 NUMBER(5)
# Date & Author..: 日期 By 作者
################################################################################
PRIVATE FUNCTION azzi500_ins_azzi850(pc_gzou001)
   DEFINE pc_gzou001 LIKE gzou_t.gzou001
   DEFINE lc_gzzz001 LIKE gzzz_t.gzzz001
   DEFINE li_cnt     LIKE type_t.num5
   DEFINE l_gzyb_d   RECORD 
      gzyb002      LIKE gzyb_t.gzyb002, 
      gzyb003      LIKE gzyb_t.gzyb003, 
      gzyb004      LIKE gzyb_t.gzyb004, 
      gzyb005      LIKE gzyb_t.gzyb005,
      gzybownid    LIKE gzyb_t.gzybownid, 
      gzybowndp    LIKE gzyb_t.gzybowndp, 
      gzybcrtid    LIKE gzyb_t.gzybcrtid, 
      gzybcrtdp    LIKE gzyb_t.gzybcrtdp, 
      gzybcrtdt    DATETIME YEAR TO SECOND, 
      gzybmodid    LIKE gzyb_t.gzybmodid, 
      gzybmoddt    DATETIME YEAR TO SECOND      
      END RECORD
   DEFINE ls_sql   STRING 
   DEFINE li_count LIKE type_t.num10
   
   LET l_gzyb_d.gzybownid = g_user
   LET l_gzyb_d.gzybowndp = g_dept
   LET l_gzyb_d.gzybcrtid = g_user
   LET l_gzyb_d.gzybcrtdp = g_dept 
   LET l_gzyb_d.gzybcrtdt = cl_get_current()

   LET ls_sql = "SELECT COUNT(*) FROM gzzz_t "
   PREPARE azzi500_count_pre FROM ls_sql
   EXECUTE azzi500_count_pre INTO li_count
   FREE azzi500_count_pre

   IF cl_null(li_count) THEN
      LET li_count = 0
   END IF
   CALL cl_progress_bar(li_count)
   DECLARE azzi500_ins_cs CURSOR FOR 
      SELECT gzzz001 INTO lc_gzzz001 FROM gzzz_t  

   FOREACH azzi500_ins_cs INTO lc_gzzz001 
      CALL cl_progress_ing("r.r azzp185 admin "|| lc_gzzz001)
      SELECT COUNT(*) INTO li_cnt FROM gzyb_t
       WHERE gzybent = g_enterprise
         AND gzyb001 = g_gzya_m.gzya001
         AND gzyb002 = l_gzyb_d.gzyb002
       
       IF li_cnt > 0 THEN 
       ELSE
          LET l_gzyb_d.gzyb003 = "0" 
          LET l_gzyb_d.gzyb004 = "0" 
          LET l_gzyb_d.gzyb005 = "0"   
          INSERT INTO gzyb_t
                  (gzybent,gzyb001,gzyb002,
                   gzyb003,gzyb004,gzyb005,
                   gzybownid,gzybowndp,gzybcrtid,gzybcrtdp,gzybcrtdt) 
            VALUES(pc_gzou001,'admin',lc_gzzz001,
                   l_gzyb_d.gzyb003,l_gzyb_d.gzyb004,l_gzyb_d.gzyb005,
                   l_gzyb_d.gzybownid,l_gzyb_d.gzybowndp,l_gzyb_d.gzybcrtid,l_gzyb_d.gzybcrtdp,l_gzyb_d.gzybcrtdt)                
       END IF
                       #職能角色 作業編號 企業編號
      RUN "r.r azzp185 admin "||lc_gzzz001 || " " || pc_gzou001
   END FOREACH 
   CLOSE azzi500_ins_cs
END FUNCTION]]>
  </point>
  <point name="function.azzi500_cnt_appdate" order="5" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL azzi500_cnt_appdate(ps_keys)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/0615 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi500_cnt_appdate(ps_keys)
    DEFINE li_cnt  LIKE type_t.num5
   DEFINE ps_keys LIKE type_t.num5

   SELECT COUNT(*) INTO li_cnt FROM gzxa_t 
    WHERE gzxaent = ps_keys 
      AND (gzxa001 = 'tiptop' OR gzxa001 = 'topstd') 
      
   IF li_cnt > 0 THEN RETURN TRUE END IF    
      
   --SELECT COUNT(*) INTO li_cnt FROM gzxa_t 
    --WHERE gzxaent = ps_keys 
      --AND gzxa001 = 'topstd'
      --
   --IF li_cnt > 0 THEN RETURN TRUE END IF    

   SELECT COUNT(*) INTO li_cnt FROM gzxb_t 
    WHERE gzxbent = ps_keys
      AND gzxa001 = '00000'
      
   IF li_cnt > 0 THEN RETURN TRUE END IF 

   SELECT COUNT(*) INTO li_cnt FROM gzxc_t 
    WHERE gzxbent = ps_keys
      AND gzxc001 = '00000'
      
    IF li_cnt > 0 THEN RETURN TRUE END IF   
      

    SELECT COUNT(*) INTO li_cnt FROM gzxd_t 
     WHERE gzxdent = ps_keys 
       AND (gzxd001 = 'tiptop' OR gzxd001 = 'topstd') 

     IF li_cnt > 0 THEN RETURN TRUE END IF  
       
   SELECT COUNT(*) INTO li_cnt FROM gzya_t 
    WHERE gzyaent = ps_keys 
      AND gzya001 = 'admin'
      
   IF li_cnt > 0 THEN RETURN TRUE END IF 
      
   SELECT COUNT(*) INTO li_cnt FROM gzyb_t 
    WHERE gzybent = ps_keys 
      AND gzyb001 = 'admin' 
      
   IF li_cnt > 0 THEN RETURN TRUE END IF    
      
   SELECT COUNT(*) INTO li_cnt FROM gzyc_t 
    WHERE gzycent = ps_keys  
      AND gzyb001 = 'admin'
      
   IF li_cnt > 0 THEN RETURN TRUE END IF       
      
   SELECT COUNT(*) INTO li_cnt FROM ooce_t WHERE ooceent = ps_keys #aooi010
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM oocg_t WHERE oocgent = ps_keys #aooi020
   IF li_cnt > 0 THEN RETURN TRUE END IF 

   SELECT COUNT(*) INTO li_cnt FROM ooci_t WHERE oocient = ps_keys #aooi030
   IF li_cnt > 0 THEN RETURN TRUE END IF 

   SELECT COUNT(*) INTO li_cnt FROM oock_t WHERE oocient = ps_keys #aooi040
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM ooga_t WHERE oogaent = ps_keys #aooi400
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM ooct_t WHERE ooctent = ps_keys #aooi240
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM oocm_t WHERE oocment = ps_keys #aooi050
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM oocn_t WHERE oocnent = ps_keys #aooi060
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM ooai_t WHERE ooaient = ps_keys #aooi140
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM oocs_t WHERE oocsent = ps_keys #aooi230
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM ooaa_t WHERE ooaaent = ps_keys #aoos010
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM gzsb_t WHERE gzsbent = ps_keys #azzi990
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM gzxq_t WHERE gzxqent = ps_keys 
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   #SELECT * FROM oocel_t WHERE oocelent = li_stdent INTO TEMP tmp_oocel_t   #aooi010

   SELECT COUNT(*) INTO li_cnt FROM gzwe_t WHERE gzweent = ps_keys #azzi880
   IF li_cnt > 0 THEN RETURN TRUE END IF 
   
   SELECT COUNT(*) INTO li_cnt FROM ooef_t #ooef_t
    WHERE ooefent = ps_keys
      AND ooef001 = 'SITE-01'
      
   IF li_cnt > 0 THEN RETURN TRUE END IF 

   --SELECT COUNT(*) INTO l_cnt FROM ooefl_t #ooefl_t
    --WHERE ooeflent = ps_keys
      --AND ooefl001 = 'SITE-01'

   SELECT COUNT(*) INTO li_cnt FROM ooab_t 
    WHERE ooabent = ps_keys
      AND ooabsite = 'SITE-01'
      
   IF li_cnt > 0 THEN RETURN TRUE END IF 

   RETURN FALSE 
   
END FUNCTION]]>
  </point>
  <point name="function.azzi500_del_appdate" order="6" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL azzi500_del_appdate(ps_keys)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/06/15 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi500_del_appdate(ps_keys)
   DEFINE ps_keys   LIKE type_t.num5
   DEFINE li_count  LIKE type_t.num5

   CALL cl_progress_bar(36)
   
   DELETE FROM gzxa_t WHERE gzxaent = ps_keys AND (gzxa001 = 'tiptop' OR gzxa001 = 'topstd' )
   CALL cl_progress_ing("detlet data gzxa_t")
   DELETE FROM gzxb_t WHERE gzxbent = ps_keys AND gzxb001 = '00000' 
   CALL cl_progress_ing("detlet data gzxb_t")
   DELETE FROM gzxc_t WHERE gzxcent = ps_keys AND gzxc001 = '00000' 
   CALL cl_progress_ing("detlet data gzxc_t")
   DELETE FROM gzxd_t WHERE gzxdent = ps_keys AND (gzxd001 = 'tiptop' OR gzxd001 = 'topstd' )   
   CALL cl_progress_ing("detlet data gzxd_t")
   DELETE FROM gzya_t WHERE gzyaent = ps_keys AND gzya001 = 'admin'
   CALL cl_progress_ing("detlet data gzya_t")
   DELETE FROM gzyal_t WHERE gzyalent = ps_keys AND gzyal001 = 'admin'
   CALL cl_progress_ing("detlet data gzyalent")
   DELETE FROM gzyb_t WHERE gzybent = ps_keys AND gzyb001 = 'admin' 
   CALL cl_progress_ing("detlet data gzyb_t")
   DELETE FROM gzyc_t WHERE gzycent = ps_keys AND gzyc001 = 'admin'
   CALL cl_progress_ing("detlet data gzyc_t")
   DELETE FROM ooag_t 
    WHERE ooagent = ps_keys 
      AND ooag001 = '00000' AND ooag002 = '2'
      AND ooag003 = 'SITE-01'
      AND ooag004 = 'SITE-01' 
      AND ooag011 = 'tiptop'
   CALL cl_progress_ing("detlet data ooag_t")
   DELETE FROM ooce_t WHERE ooceent = ps_keys  #aooi010
   CALL cl_progress_ing("detlet data ooce_t")
   DELETE FROM oocg_t WHERE oocgent = ps_keys  #aooi020
   CALL cl_progress_ing("detlet data oocg_t")
   DELETE FROM ooci_t WHERE oocient = ps_keys  #aooi030
   CALL cl_progress_ing("detlet data ooci_t")
   DELETE FROM oock_t WHERE oockent = ps_keys  #aooi040
   CALL cl_progress_ing("detlet data oock_t")
   DELETE FROM ooga_t WHERE oogaent = ps_keys  #aooi400
   CALL cl_progress_ing("detlet data ooga_t")
   DELETE FROM ooct_t WHERE ooctent = ps_keys  #aooi240
   CALL cl_progress_ing("detlet data ooct_t")
   DELETE FROM oocm_t WHERE oocment = ps_keys  #aooi050
   CALL cl_progress_ing("detlet data oocm_t")
   DELETE FROM oocn_t WHERE oocnent = ps_keys  #aooi060
   CALL cl_progress_ing("detlet data oocn_t")
   DELETE FROM ooai_t WHERE ooaient = ps_keys  #aooi140
   CALL cl_progress_ing("detlet data ooai_t")
   DELETE FROM oocs_t WHERE oocsent = ps_keys  #aooi230
   CALL cl_progress_ing("detlet data oocs_t")
   DELETE FROM ooaa_t WHERE ooaaent = ps_keys  #aoos010
   CALL cl_progress_ing("detlet data ooaa_t")
   DELETE FROM gzsb_t WHERE gzsbent = ps_keys 
   CALL cl_progress_ing("detlet data gzsb_t")
   DELETE FROM gzxq_t WHERE gzxqent = ps_keys 
   CALL cl_progress_ing("detlet data gzxq_t")
   DELETE FROM oocel_t WHERE oocelent = ps_keys #aooi010
   CALL cl_progress_ing("detlet data oocel_t")
   DELETE FROM oocgl_t WHERE oocglent = ps_keys #aooi020
   CALL cl_progress_ing("detlet data oocgl_t")
   DELETE FROM oocil_t WHERE oocilent = ps_keys #aooi040
   CALL cl_progress_ing("detlet data oocil_t")
   DELETE FROM oockl_t WHERE oocklent = ps_keys #aooi040
   CALL cl_progress_ing("detlet data oockl_t")
   DELETE FROM oocal_t WHERE oocalent = ps_keys #aooi240
   CALL cl_progress_ing("detlet data oocal_t")
   DELETE FROM oocml_t WHERE oocmlent = ps_keys #aooi050
   CALL cl_progress_ing("detlet data oocml_t")
   DELETE FROM oocnl_t WHERE oocnlent = ps_keys #aooi060
   CALL cl_progress_ing("detlet data oocnl_t")
   DELETE FROM ooail_t WHERE ooailent = ps_keys #aooi140
   CALL cl_progress_ing("detlet data ooail_t")
   DELETE FROM oocsl_t WHERE oocslent = ps_keys #aooi230
   CALL cl_progress_ing("detlet data oocsl_t")
   DELETE FROM gzwe_t WHERE gzweent = ps_keys   #azzi880
   CALL cl_progress_ing("detlet data gzwe_t")
   DELETE FROM gzwel_t WHERE gzwelent = ps_keys #azzi880 多語言選單
   CALL cl_progress_ing("detlet data gzwel_t")
   DELETE FROM ooef_t WHERE ooefent = ps_keys AND ooef001 = 'SITE-01'
   CALL cl_progress_ing("detlet data ooef_t")
   IF SQLCA.sqlcode THEN 
      IF sqlca.sqlerrd[2] = "-4098" THEN 
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = "-4098"
         LET g_errparam.popup  = TRUE 
         LET g_errparam.sqlerr = sqlca.sqlerrd[2]
         CALL cl_err()
      END IF 
   END IF 
   DELETE FROM ooefl_t WHERE ooeflent = ps_keys AND ooefl001 = 'SITE-01'
   CALL cl_progress_ing("detlet data ooefl_t")
   DELETE FROM ooab_t WHERE ooabent = ps_keys AND ooabsite = 'SITE-01'
   CALL cl_progress_ing("detlet data ooab_t")   
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF cl_null(p_wc2) THEN
      LET p_wc2 = "1=1"
   END IF]]>
  </point>
  <point name="construct.c.page1.gzou003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzda001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzou003  #顯示到畫面上

            NEXT FIELD gzou003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.gzou006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzda001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzou006  #顯示到畫面上

            NEXT FIELD gzou006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzoucrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzoucrtdp  #顯示到畫面上

            NEXT FIELD gzoucrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzoucrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzoucrtid  #顯示到畫面上

            NEXT FIELD gzoucrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzoumodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzoumodid  #顯示到畫面上

            NEXT FIELD gzoumodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzouowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzouowndp  #顯示到畫面上

            NEXT FIELD gzouowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzouownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzouownid  #顯示到畫面上

            NEXT FIELD gzouownid                     #返回原欄位

]]>
  </point>
  <point name="detail_show.azzi085" order="" ver="2" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #+ 此段落由子樣板a41產生
               #使用JSON格式組合參數與作業編號(串查)
               LET la_param.prog     = 'azzi085'
               LET la_param.param[1] = g_gzou_d[l_ac].gzou003

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)

]]>
  </point>
  <point name="detail_show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="detail_show.body1_info.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou1_info_d[l_ac].gzoumodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzou1_info_d[l_ac].gzoumodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou1_info_d[l_ac].gzoumodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou1_info_d[l_ac].gzouownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzou1_info_d[l_ac].gzouownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou1_info_d[l_ac].gzouownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou1_info_d[l_ac].gzouowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzou1_info_d[l_ac].gzouowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou1_info_d[l_ac].gzouowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou1_info_d[l_ac].gzoucrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzou1_info_d[l_ac].gzoucrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou1_info_d[l_ac].gzoucrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou1_info_d[l_ac].gzoucrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzou1_info_d[l_ac].gzoucrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou1_info_d[l_ac].gzoucrtdp_desc
]]>
  </point>
  <point name="detail_show.reference" order="" ver="5" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_gzou_d[l_ac].gzou001
   CALL ap_ref_array2(g_ref_fields," SELECT gzoul003 FROM gzoul_t WHERE gzoul001 = ? AND gzoul002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzou_d[l_ac].gzoul003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_gzou_d[l_ac].gzoul003]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL azzi500_set_combo_gzou005()
   CALL cl_set_combo_dbno('gzou003') 
   CALL cl_set_combo_dbno('gzou006')]]>
  </point>
  <point name="input.a.page1.gzou001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzou_d[l_ac].gzou001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzou_d[l_ac].gzou001 != g_gzou_d_t.gzou001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzou_t WHERE "||"gzou001 = '"||g_gzou_d[l_ac].gzou001 ||"'",'std-00004',0) THEN 
                     IF l_cmd = 'a' THEN 
                        LET g_gzou_d[l_ac].gzou001 = ""

                     ELSE 
                        LET g_gzou_d[l_ac].gzou001 = g_gzou_d_t.gzou001
                     END IF 

                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.gzou003" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_gzou_d[l_ac].gzou003 != g_gzou_d_t.gzou003)) THEN 
                  IF l_cmd = 'a' THEN 
                      IF cl_null(g_gzou_d[l_ac].gzou003) THEN 
                         INITIALIZE g_errparam TO NULL
                         LET g_errparam.code = "azz-00234"  #本號主資料庫不可以null
                         LET g_errparam.extend = ''
                         LET g_errparam.popup = TRUE
                         CALL cl_err()
                         NEXT FIELD gzou003 
                      END IF 
                  END IF 

                  CALL azzi500_check_exist_db(g_gzou_d[l_ac].gzou003)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD gzou003
                  END IF
               END IF]]>
  </point>
  <point name="input.a.page1.gzou006" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_gzou_d[l_ac].gzou006) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzou_d[l_ac].gzou006 != g_gzou_d_t.gzou006))) THEN 
                  CALL azzi500_check_exist_db(g_gzou_d[l_ac].gzou006)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD gzou006
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.gzou001_2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzou2_d[l_ac].gzou001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzou2_d[l_ac].gzou001 != g_gzou2_d_t.gzou001))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzou_t WHERE "||"gzou001 = '"||g_gzou2_d[l_ac].gzou001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.gzoucrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou2_d[l_ac].gzoucrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzou2_d[l_ac].gzoucrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou2_d[l_ac].gzoucrtdp_desc
]]>
  </point>
  <point name="input.a.page2.gzoucrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou2_d[l_ac].gzoucrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzou2_d[l_ac].gzoucrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou2_d[l_ac].gzoucrtid_desc
]]>
  </point>
  <point name="input.a.page2.gzoumodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou2_d[l_ac].gzoumodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzou2_d[l_ac].gzoumodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou2_d[l_ac].gzoumodid_desc
]]>
  </point>
  <point name="input.a.page2.gzouowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou2_d[l_ac].gzouowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzou2_d[l_ac].gzouowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou2_d[l_ac].gzouowndp_desc
]]>
  </point>
  <point name="input.a.page2.gzouownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzou2_d[l_ac].gzouownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzou2_d[l_ac].gzouownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzou2_d[l_ac].gzouownid_desc
]]>
  </point>
  <point name="input.b.page1.gzou003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page1.gzou005" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.gzou006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_gzou_d[l_ac].gzou004 = "N" THEN 
               LET g_gzou_d[l_ac].gzou006 = ""
               CALL cl_set_comp_entry("gzou006",FALSE) 
            ELSE 
               CALL cl_set_comp_entry("gzou006",TRUE)
            END IF]]>
  </point>
  <point name="input.body.a_insert" order="" ver="11" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_transaction_end('Y','0')

               IF g_dbs <> g_gzou_d[g_detail_idx].gzou003 THEN
                  #連結到新的指定資料庫內才可以建置資料
                  CALL cl_db_connect(g_gzou_d[g_detail_idx].gzou003,FALSE)
                  LET li_changedb = TRUE
               ELSE
                  LET li_changedb = FALSE
               END IF
               #15/06/11 count 系統資料跟應用資料 有資料跳出訊息提示:是否准許刪除已存在的資料，然後重新insert
               IF azzi500_cnt_appdate(gs_keys[1]) THEN 
                  LET ls_msg = cl_getmsg("azz-00339",g_dlang)
                  LET ls_msg = cl_str_replace(ls_msg,"%1",gs_keys[1]) #目前企業編號%1存在相關的應用資料及系統資料，是否准許刪除後，重新新增相關的應用資料及系統資料
                  IF cl_ask_promp(ls_msg) THEN
                     CALL azzi500_del_appdate(gs_keys[1])
                  END IF  
               END IF 
               
               #開始收集錯誤
               CALL cl_err_collect_init() 
               #15/02/11 把ins_tempsite 改到s_azzi800_ins_tempsite()
               #15/03/11 把ins_appdata 改到s_azzi500_ins_appdata()
               CALL s_azzi800_ins_tempsite(gs_keys[1])                     #系統資料
               CALL s_azzi500_ins_appdata(g_gzou_d[g_detail_idx].gzou001)  #應用資料
               #CALL azzi500_ins_tempsite(gs_keys[1])                      #系統資料
               #CALL azzi500_ins_appdata(g_gzou_d[g_detail_idx].gzou001)   #應用資料
               #顯示錯誤
               CALL cl_err_collect_show()
               CALL azzi500_ins_azzi850(g_gzou_d[g_detail_idx].gzou001)  #額外新增到azzi850
               #建置完成後要中斷新資料庫連線
               IF li_changedb THEN
                  CALL cl_db_disconnect_current()
               END IF
               #連回原本的資料庫連線 這樣 transaction 才不會crash() 
               SET CONNECTION g_dbs
               CALL s_transaction_begin()
               CALL azzi500_enterprise_login_url()]]>
  </point>
  <point name="input.body.before_bak" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_gzou_d[l_ac].gzou004 = "N" THEN 
                  CALL cl_set_comp_entry("gzou006",FALSE)  
            ELSE 
                  CALL cl_set_comp_entry("gzou006",TRUE)
            END IF]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF  NOT cl_null(g_gzou_d[l_ac].gzou001) THEN
                  CALL n_gzoul(g_gzou_d[l_ac].gzou001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzou_d[l_ac].gzou001
                  CALL ap_ref_array2(g_ref_fields," SELECT gzoul003 FROM gzoul_t WHERE gzoul001 = ? AND gzoul002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_gzou_d[l_ac].gzoul003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_gzou_d[l_ac].gzoul003
               END IF]]>
  </point>
  <point name="input.g.page1.gzou004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           IF g_gzou_d[l_ac].gzou004 = "N" THEN 
               LET g_gzou_d[l_ac].gzou006 = ""
               CALL cl_set_comp_entry("gzou006",FALSE) 
            ELSE 
               CALL cl_set_comp_entry("gzou006",TRUE)
            END IF]]>
  </point>
  <point name="input.g.page1.gzou006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="menu.detail_show.page1_sub.azzi085" order="" ver="2" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #+ 此段落由子樣板a41產生
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'azzi085'
               LET la_param.param[1] = g_gzou_d[l_ac].gzou003

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)

]]>
  </point>
  <point name="menu.detail_show.page1_sub.prog_azzi085" order="" ver="2" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #+ 此段落由子樣板a41產生
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'azzi085'
               LET la_param.param[1] = g_gzou_d[l_ac].gzou003

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)

]]>
  </point>
  <point name="menu.enterprise_login_url" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL azzi500_enterprise_login_url()]]>
  </point>
  <point name="modify.define" order="" ver="11" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE li_changedb  LIKE type_t.num5
   DEFINE ls_msg                  STRING]]>
  </point>
  <point name="modify.define_sql" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_allow_delete = FALSE ]]>
  </point>
  <point name="ui_dialog.b_dialog" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #鎖住delete 不可刪除
            CALL cl_set_act_visible("delete", FALSE) ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <section id="azzi500.b_fill" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi500_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE t0.gzoustus,t0.gzou001,t0.gzou003,t0.gzou004,t0.gzou006,t0.gzou005,t0.gzou001, 
       t0.gzoumodid,t0.gzoumoddt,t0.gzouownid,t0.gzouowndp,t0.gzoucrtid,t0.gzoucrtdp,t0.gzoucrtdt ,t1.ooag011 , 
       t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 FROM gzou_t t0",
               " LEFT JOIN gzoul_t ON gzou001 = gzoul001 AND gzoul002 = '",g_dlang,"'",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.gzoumodid  ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.gzouownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.gzouowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.gzoucrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.gzoucrtdp AND t5.ooefl002='"||g_dlang||"' ",
 
               " WHERE 1=1 AND (", p_wc2, ") " 
   #add-point:b_fill段sql wc
   {<point name="b_fill.sql_wc"/>}
   #end add-point
   LET g_sql = g_sql, cl_sql_add_filter("gzou_t"),
                      " ORDER BY t0.gzou001"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"gzou_t")            #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE azzi500_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR azzi500_pb
   
   OPEN b_fill_curs
 
   CALL g_gzou_d.clear()
   CALL g_gzou1_info_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_gzou_d[l_ac].gzoustus,g_gzou_d[l_ac].gzou001,g_gzou_d[l_ac].gzou003,g_gzou_d[l_ac].gzou004, 
       g_gzou_d[l_ac].gzou006,g_gzou_d[l_ac].gzou005,g_gzou1_info_d[l_ac].gzou001,g_gzou1_info_d[l_ac].gzoumodid, 
       g_gzou1_info_d[l_ac].gzoumoddt,g_gzou1_info_d[l_ac].gzouownid,g_gzou1_info_d[l_ac].gzouowndp, 
       g_gzou1_info_d[l_ac].gzoucrtid,g_gzou1_info_d[l_ac].gzoucrtdp,g_gzou1_info_d[l_ac].gzoucrtdt, 
       g_gzou1_info_d[l_ac].gzoumodid_desc,g_gzou1_info_d[l_ac].gzouownid_desc,g_gzou1_info_d[l_ac].gzouowndp_desc, 
       g_gzou1_info_d[l_ac].gzoucrtid_desc,g_gzou1_info_d[l_ac].gzoucrtdp_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL azzi500_detail_show()      
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
 
      LET l_ac = l_ac + 1
      
   END FOREACH
 
   LET g_error_show = 0
   
 
   
   CALL g_gzou_d.deleteElement(g_gzou_d.getLength())   
   CALL g_gzou1_info_d.deleteElement(g_gzou1_info_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_gzou_d.getLength()
      LET g_gzou1_info_d[l_ac].gzou001 = g_gzou_d[l_ac].gzou001 
 
      #add-point:b_fill段key值相關欄位
      {<point name="b_fill.keys.fill"/>}
      #end add-point
   END FOR
   
   IF g_cnt > g_gzou_d.getLength() THEN
      LET l_ac = g_gzou_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_gzou_d.getLength()
      LET g_gzou_d_mask_o[l_ac].* =  g_gzou_d[l_ac].*
      CALL azzi500_gzou_t_mask()
      LET g_gzou_d_mask_n[l_ac].* =  g_gzou_d[l_ac].*
   END FOR
   
   LET g_gzou1_info_d_mask_o.* =  g_gzou1_info_d.*
   FOR l_ac = 1 TO g_gzou1_info_d.getLength()
      LET g_gzou1_info_d_mask_o[l_ac].* =  g_gzou1_info_d[l_ac].*
      CALL azzi500_gzou_t_mask()
      LET g_gzou1_info_d_mask_n[l_ac].* =  g_gzou1_info_d[l_ac].*
   END FOR
 
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_gzou_d.getLength()
   DISPLAY g_detail_idx TO FORMONLY.idx
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE azzi500_pb
   
END FUNCTION
]]>
  </section>
  <section id="azzi500.default_search" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi500_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzou001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
      #預設查詢條件
      LET g_wc2 = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc2) THEN
         LET g_wc2 = " 1=1"
      END IF
   END IF
 
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi500.delete" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi500_delete()
   DEFINE li_idx          LIKE type_t.num10
   DEFINE li_ac_t         LIKE type_t.num10
   DEFINE li_detail_tmp   LIKE type_t.num10
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point 
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_ac_t = l_ac
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_gzou_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT azzi500_lock_b("gzou_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_gzou_d.getLength()
      IF g_gzou_d[li_idx].gzou001 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM gzou_t
          WHERE  
                gzou001 = g_gzou_d[li_idx].gzou001
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzou_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            LET l_ac = li_idx
            LET g_detail_multi_table_t.gzoul001 = g_gzou_d[l_ac].gzou001
LET g_detail_multi_table_t.gzoul002 = g_dlang
LET g_detail_multi_table_t.gzoul003 = g_gzou_d[l_ac].gzoul003
 
            
 
            INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gzoul001'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gzoul001
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzoul_t')
 
            
 
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzou_d_t.gzou001
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL azzi500_delete_b('gzou_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   LET l_ac = li_ac_t
   
   #刷新資料
   CALL azzi500_b_fill(g_wc2)
            
END FUNCTION
]]>
  </section>
  <section id="azzi500.delete_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi500_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "gzou_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      IF ps_table <> 'gzou_t' THEN
         #add-point:delete_b段刪除前
         {<point name="delete_b.b_delete" mark="Y"/>}
         #end add-point     
         
         DELETE FROM gzou_t
          WHERE 
            gzou001 = ps_keys_bak[1]
         
         #add-point:delete_b段刪除中
         {<point name="delete_b.m_delete"/>}
         #end add-point  
            
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = FALSE 
            CALL cl_err()
         END IF
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gzou_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_gzou1_info_d.deleteElement(li_idx) 
      END IF 
 
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi500.description" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:11,PR版次:11) Build-000283
#+ 
#+ Filename...: azzi500
#+ Description: 企業編號維護作業
#+ Creator....: 00845(2013-06-01 00:00:00)
#+ Modifier...: 01856(2015-06-23 17:53:58) -SD/PR-
]]>
  </section>
  <section id="azzi500.detail_show" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION azzi500_detail_show()
   #add-point:show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #應用 a12 樣板自動產生(Version:3)
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body1_info.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="azzi500.global" ver="11" status="" src="s" readonly="">
    <![CDATA[#應用 i02 樣板自動產生(Version:13)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_gzou_d RECORD
       gzoustus LIKE gzou_t.gzoustus, 
   gzou001 LIKE gzou_t.gzou001, 
   gzoul003 LIKE gzoul_t.gzoul003, 
   gzou003 LIKE gzou_t.gzou003, 
   gzou004 LIKE gzou_t.gzou004, 
   gzou006 LIKE gzou_t.gzou006, 
   gzou005 LIKE gzou_t.gzou005
       END RECORD
PRIVATE TYPE type_g_gzou1_info_d RECORD
       gzou001 LIKE gzou_t.gzou001, 
   gzoumodid LIKE gzou_t.gzoumodid, 
   gzoumodid_desc LIKE type_t.chr500, 
   gzoumoddt DATETIME YEAR TO SECOND, 
   gzouownid LIKE gzou_t.gzouownid, 
   gzouownid_desc LIKE type_t.chr500, 
   gzouowndp LIKE gzou_t.gzouowndp, 
   gzouowndp_desc LIKE type_t.chr500, 
   gzoucrtid LIKE gzou_t.gzoucrtid, 
   gzoucrtid_desc LIKE type_t.chr500, 
   gzoucrtdp LIKE gzou_t.gzoucrtdp, 
   gzoucrtdp_desc LIKE type_t.chr500, 
   gzoucrtdt DATETIME YEAR TO SECOND
       END RECORD
 
 
DEFINE g_detail_multi_table_t    RECORD
      gzoul001 LIKE gzoul_t.gzoul001,
      gzoul002 LIKE gzoul_t.gzoul002,
      gzoul003 LIKE gzoul_t.gzoul003
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_gzou_d          DYNAMIC ARRAY OF type_g_gzou_d #單身變數
DEFINE g_gzou_d_t        type_g_gzou_d                  #單身備份
DEFINE g_gzou_d_o        type_g_gzou_d                  #單身備份
DEFINE g_gzou_d_mask_o   DYNAMIC ARRAY OF type_g_gzou_d #單身變數
DEFINE g_gzou_d_mask_n   DYNAMIC ARRAY OF type_g_gzou_d #單身變數
DEFINE g_gzou1_info_d   DYNAMIC ARRAY OF type_g_gzou1_info_d
DEFINE g_gzou1_info_d_t type_g_gzou1_info_d
DEFINE g_gzou1_info_d_o type_g_gzou1_info_d
DEFINE g_gzou1_info_d_mask_o DYNAMIC ARRAY OF type_g_gzou1_info_d
DEFINE g_gzou1_info_d_mask_n DYNAMIC ARRAY OF type_g_gzou1_info_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num10             #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="azzi500.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION azzi500_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point   
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL azzi500_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="azzi500.insert" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi500_insert()
   #add-point:delete段define
   {<point name="insert.define" edit="s"/>}
   #end add-point                
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL azzi500_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="azzi500.insert_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi500_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "gzou_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO gzou_t
                  (
                   gzou001
                   ,gzoustus,gzou003,gzou004,gzou006,gzou005,gzoumodid,gzoumoddt,gzouownid,gzouowndp,gzoucrtid,gzoucrtdp,gzoucrtdt) 
            VALUES(
                   ps_keys[1]
                   ,g_gzou_d[l_ac].gzoustus,g_gzou_d[l_ac].gzou003,g_gzou_d[l_ac].gzou004,g_gzou_d[l_ac].gzou006, 
                       g_gzou_d[l_ac].gzou005,g_gzou1_info_d[l_ac].gzoumodid,g_gzou1_info_d[l_ac].gzoumoddt, 
                       g_gzou1_info_d[l_ac].gzouownid,g_gzou1_info_d[l_ac].gzouowndp,g_gzou1_info_d[l_ac].gzoucrtid, 
                       g_gzou1_info_d[l_ac].gzoucrtdp,g_gzou1_info_d[l_ac].gzoucrtdt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzou_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi500.lock_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi500_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point
   
   #先刷新資料
   #CALL azzi500_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "gzou_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi500_bcl USING 
                                       g_gzou_d[g_detail_idx].gzou001
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi500_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi500.main" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzoustus,gzou001,gzou003,gzou004,gzou006,gzou005,gzou001,gzoumodid,gzoumoddt, 
       gzouownid,gzouowndp,gzoucrtid,gzoucrtdp,gzoucrtdt FROM gzou_t WHERE gzou001=? FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi500_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi500 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi500_init()   
 
      #進入選單 Menu (="N")
      CALL azzi500_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi500
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="azzi500.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/azz/azzi500_mask.4gl"
]]>
  </section>
  <section id="azzi500.modify" ver="24" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi500_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num10
   DEFINE  l_i                    LIKE type_t.num10
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num10
   DEFINE  li_reproduce_target    LIKE type_t.num10
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point 
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzou_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzou_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi500_b_fill(g_wc2)
            LET g_detail_cnt = g_gzou_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_gzou_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_gzou_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_gzou_d[l_ac].gzou001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzou_d_t.* = g_gzou_d[l_ac].*  #BACKUP
               LET g_gzou_d_o.* = g_gzou_d[l_ac].*  #BACKUP
               IF NOT azzi500_lock_b("gzou_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi500_bcl INTO g_gzou_d[l_ac].gzoustus,g_gzou_d[l_ac].gzou001,g_gzou_d[l_ac].gzou003, 
                      g_gzou_d[l_ac].gzou004,g_gzou_d[l_ac].gzou006,g_gzou_d[l_ac].gzou005,g_gzou1_info_d[l_ac].gzou001, 
                      g_gzou1_info_d[l_ac].gzoumodid,g_gzou1_info_d[l_ac].gzoumoddt,g_gzou1_info_d[l_ac].gzouownid, 
                      g_gzou1_info_d[l_ac].gzouowndp,g_gzou1_info_d[l_ac].gzoucrtid,g_gzou1_info_d[l_ac].gzoucrtdp, 
                      g_gzou1_info_d[l_ac].gzoucrtdt
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_gzou_d_t.gzou001 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzou_d_mask_o[l_ac].* =  g_gzou_d[l_ac].*
                  CALL azzi500_gzou_t_mask()
                  LET g_gzou_d_mask_n[l_ac].* =  g_gzou_d[l_ac].*
                  
                  CALL azzi500_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.gzoul001 = g_gzou_d[l_ac].gzou001
LET g_detail_multi_table_t.gzoul002 = g_dlang
LET g_detail_multi_table_t.gzoul003 = g_gzou_d[l_ac].gzoul003
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'gzoul001'
            LET l_var_keys[01] = g_gzou_d[l_ac].gzou001
            LET l_field_keys[02] = 'gzoul002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'gzoul_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzou_d_t.* TO NULL
            INITIALIZE g_gzou_d_o.* TO NULL
            INITIALIZE g_gzou_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_gzou1_info_d[l_ac].gzouownid = g_user
      LET g_gzou1_info_d[l_ac].gzouowndp = g_dept
      LET g_gzou1_info_d[l_ac].gzoucrtid = g_user
      LET g_gzou1_info_d[l_ac].gzoucrtdp = g_dept 
      LET g_gzou1_info_d[l_ac].gzoucrtdt = cl_get_current()
      LET g_gzou1_info_d[l_ac].gzoumodid = g_user
      LET g_gzou1_info_d[l_ac].gzoumoddt = cl_get_current()
      LET g_gzou_d[l_ac].gzoustus = ''
 
 
            #自定義預設值(單身2)
                  LET g_gzou_d[l_ac].gzoustus = "Y"
      LET g_gzou_d[l_ac].gzou004 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body.before_bak"/>}
            #end add-point
            LET g_gzou_d_t.* = g_gzou_d[l_ac].*     #新輸入資料
            LET g_gzou_d_o.* = g_gzou_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi500_set_entry_b("a")
            CALL azzi500_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzou_d[li_reproduce_target].* = g_gzou_d[li_reproduce].*
               LET g_gzou1_info_d[li_reproduce_target].* = g_gzou1_info_d[li_reproduce].*
 
               LET g_gzou_d[g_gzou_d.getLength()].gzou001 = NULL
 
            END IF
            LET g_detail_multi_table_t.gzoul001 = g_gzou_d[l_ac].gzou001
LET g_detail_multi_table_t.gzoul002 = g_dlang
LET g_detail_multi_table_t.gzoul003 = g_gzou_d[l_ac].gzoul003
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzou_t 
             WHERE  gzou001 = g_gzou_d[l_ac].gzou001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzou_d[g_detail_idx].gzou001
               CALL azzi500_insert_b('gzou_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_gzou_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzou_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi500_b_fill(g_wc2)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzou_d[l_ac].gzou001 = g_detail_multi_table_t.gzoul001 AND
         g_gzou_d[l_ac].gzoul003 = g_detail_multi_table_t.gzoul003 THEN
         ELSE 
            LET l_var_keys[01] = g_gzou_d[l_ac].gzou001
            LET l_field_keys[01] = 'gzoul001'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzoul001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzoul002'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzoul002
            LET l_vars[01] = g_gzou_d[l_ac].gzoul003
            LET l_fields[01] = 'gzoul003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzoul_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ##ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (gzou001 = '", g_gzou_d[l_ac].gzou001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM gzou_t
                WHERE  
                      gzou001 = g_gzou_d_t.gzou001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "gzou_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gzoul001'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gzoul001
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzoul_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  #修改歷程記錄(刪除)
                  CALL azzi500_set_pk_array()
                  IF NOT cl_log_modified_record('','') THEN 
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF 
               CLOSE azzi500_bcl
               #add-point:單身關閉bcl
               {<point name="input.body.close"/>}
               #end add-point
               LET l_count = g_gzou_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzou_d_t.gzou001
 
               #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL azzi500_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2
               {<point name="input.body.after_delete"/>}
               #end add-point
                              CALL azzi500_delete_b('gzou_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_gzou_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoustus
            #add-point:BEFORE FIELD gzoustus
            {<point name="input.b.page1.gzoustus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzoustus
            
            #add-point:AFTER FIELD gzoustus
            {<point name="input.a.page1.gzoustus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzoustus
            #add-point:ON CHANGE gzoustus
            {<point name="input.g.page1.gzoustus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou001
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_gzou_d[l_ac].gzou001,"0","0","30000","1","azz-00087",1) THEN
               NEXT FIELD gzou001
            END IF 
 
 
            #add-point:AFTER FIELD gzou001
            {<point name="input.a.page1.gzou001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou001
            #add-point:BEFORE FIELD gzou001
            {<point name="input.b.page1.gzou001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzou001
            #add-point:ON CHANGE gzou001
            {<point name="input.g.page1.gzou001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoul003
            #add-point:BEFORE FIELD gzoul003
            {<point name="input.b.page1.gzoul003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzoul003
            
            #add-point:AFTER FIELD gzoul003
            {<point name="input.a.page1.gzoul003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzoul003
            #add-point:ON CHANGE gzoul003
            {<point name="input.g.page1.gzoul003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou003
            #add-point:BEFORE FIELD gzou003
            {<point name="input.b.page1.gzou003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou003
            
            #add-point:AFTER FIELD gzou003
            {<point name="input.a.page1.gzou003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzou003
            #add-point:ON CHANGE gzou003
            {<point name="input.g.page1.gzou003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou004
            #add-point:BEFORE FIELD gzou004
            {<point name="input.b.page1.gzou004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou004
            
            #add-point:AFTER FIELD gzou004
            {<point name="input.a.page1.gzou004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzou004
            #add-point:ON CHANGE gzou004
            {<point name="input.g.page1.gzou004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou006
            #add-point:BEFORE FIELD gzou006
            {<point name="input.b.page1.gzou006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou006
            
            #add-point:AFTER FIELD gzou006
            {<point name="input.a.page1.gzou006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzou006
            #add-point:ON CHANGE gzou006
            {<point name="input.g.page1.gzou006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou005
            #add-point:BEFORE FIELD gzou005
            {<point name="input.b.page1.gzou005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou005
            
            #add-point:AFTER FIELD gzou005
            {<point name="input.a.page1.gzou005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzou005
            #add-point:ON CHANGE gzou005
            {<point name="input.g.page1.gzou005" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.gzoustus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzoustus
            #add-point:ON ACTION controlp INFIELD gzoustus
            {<point name="input.c.page1.gzoustus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzou001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou001
            #add-point:ON ACTION controlp INFIELD gzou001
            {<point name="input.c.page1.gzou001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzoul003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzoul003
            #add-point:ON ACTION controlp INFIELD gzoul003
            {<point name="input.c.page1.gzoul003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzou003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou003
            #add-point:ON ACTION controlp INFIELD gzou003
            {<point name="input.c.page1.gzou003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzou004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou004
            #add-point:ON ACTION controlp INFIELD gzou004
            {<point name="input.c.page1.gzou004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzou006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou006
            #add-point:ON ACTION controlp INFIELD gzou006
            {<point name="input.c.page1.gzou006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzou005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou005
            #add-point:ON ACTION controlp INFIELD gzou005
            {<point name="input.c.page1.gzou005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_gzou_d[l_ac].* = g_gzou_d_t.*
               CLOSE azzi500_bcl
               #add-point:單身取消時
               {<point name="input.body.cancel"/>}
               #end add-point
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_gzou_d[l_ac].gzou001 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzou_d[l_ac].* = g_gzou_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身)
               LET g_gzou1_info_d[l_ac].gzoumodid = g_user 
LET g_gzou1_info_d[l_ac].gzoumoddt = cl_get_current()
LET g_gzou1_info_d[l_ac].gzoumodid_desc = cl_get_username(g_gzou1_info_d[l_ac].gzoumodid)
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL azzi500_gzou_t_mask_restore('restore_mask_o')
 
               UPDATE gzou_t SET (gzoustus,gzou001,gzou003,gzou004,gzou006,gzou005,gzoumodid,gzoumoddt, 
                   gzouownid,gzouowndp,gzoucrtid,gzoucrtdp,gzoucrtdt) = (g_gzou_d[l_ac].gzoustus,g_gzou_d[l_ac].gzou001, 
                   g_gzou_d[l_ac].gzou003,g_gzou_d[l_ac].gzou004,g_gzou_d[l_ac].gzou006,g_gzou_d[l_ac].gzou005, 
                   g_gzou1_info_d[l_ac].gzoumodid,g_gzou1_info_d[l_ac].gzoumoddt,g_gzou1_info_d[l_ac].gzouownid, 
                   g_gzou1_info_d[l_ac].gzouowndp,g_gzou1_info_d[l_ac].gzoucrtid,g_gzou1_info_d[l_ac].gzoucrtdp, 
                   g_gzou1_info_d[l_ac].gzoucrtdt)
                WHERE 
                  gzou001 = g_gzou_d_t.gzou001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzou_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzou_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzou_d[g_detail_idx].gzou001
               LET gs_keys_bak[1] = g_gzou_d_t.gzou001
               CALL azzi500_update_b('gzou_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzou_d[l_ac].gzou001 = g_detail_multi_table_t.gzoul001 AND
         g_gzou_d[l_ac].gzoul003 = g_detail_multi_table_t.gzoul003 THEN
         ELSE 
            LET l_var_keys[01] = g_gzou_d[l_ac].gzou001
            LET l_field_keys[01] = 'gzoul001'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzoul001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzoul002'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzoul002
            LET l_vars[01] = g_gzou_d[l_ac].gzoul003
            LET l_fields[01] = 'gzoul003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzoul_t')
         END IF 
 
                     #修改歷程記錄(修改)
                     LET g_log1 = util.JSON.stringify(g_gzou_d_t)
                     LET g_log2 = util.JSON.stringify(g_gzou_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL azzi500_gzou_t_mask_restore('restore_mask_n')
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL azzi500_unlock_b("gzou_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_gzou_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzou_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_gzou1_info_d TO s_detail1_info.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL azzi500_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1_info")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body1_info.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()      
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         #LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD gzoustus
            WHEN "s_detail1_info"
               NEXT FIELD gzou001_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         CANCEL DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
    
   #新增後取消
   IF l_cmd = 'a' THEN
      #當取消或無輸入資料按確定時刪除對應資料
      IF INT_FLAG OR cl_null(g_gzou_d[g_detail_idx].gzou001) THEN
         CALL g_gzou_d.deleteElement(g_detail_idx)
         CALL g_gzou1_info_d.deleteElement(g_detail_idx)
 
      END IF
   END IF
   
   #修改後取消
   IF l_cmd = 'u' AND INT_FLAG THEN
      LET g_gzou_d[g_detail_idx].* = g_gzou_d_t.*
   END IF
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE azzi500_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="azzi500.modify_detail_chk" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身輸入判定(因應modify_detail)
PRIVATE FUNCTION azzi500_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define" edit="s"/>}
   #end add-point
   #add-point:modify_detail_chk段define(客製用)
   {<point name="modify_detail_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   #根據sr名稱確定該page第一個欄位的名稱
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "gzoustus"
      WHEN "s_detail1_info"
         LET ls_return = "gzou001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="azzi500.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[ 
]]>
  </section>
  <section id="azzi500.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="azzi500.query" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi500_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point 
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_gzou_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON gzoustus,gzou001,gzoul003,gzou003,gzou004,gzou006,gzou005,gzoumodid,gzoumoddt, 
          gzouownid,gzouowndp,gzoucrtid,gzoucrtdp,gzoucrtdt 
 
         FROM s_detail1[1].gzoustus,s_detail1[1].gzou001,s_detail1[1].gzoul003,s_detail1[1].gzou003, 
             s_detail1[1].gzou004,s_detail1[1].gzou006,s_detail1[1].gzou005,s_detail1_info[1].gzoumodid, 
             s_detail1_info[1].gzoumoddt,s_detail1_info[1].gzouownid,s_detail1_info[1].gzouowndp,s_detail1_info[1].gzoucrtid, 
             s_detail1_info[1].gzoucrtdp,s_detail1_info[1].gzoucrtdt 
      
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<gzoucrtdt>>----
         AFTER FIELD gzoucrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gzoumoddt>>----
         AFTER FIELD gzoumoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzoucnfdt>>----
         
         #----<<gzoupstdt>>----
 
 
      
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoustus
            #add-point:BEFORE FIELD gzoustus
            {<point name="query.b.page1.gzoustus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzoustus
            
            #add-point:AFTER FIELD gzoustus
            {<point name="query.a.page1.gzoustus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzoustus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzoustus
            #add-point:ON ACTION controlp INFIELD gzoustus
            {<point name="query.c.page1.gzoustus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou001
            #add-point:BEFORE FIELD gzou001
            {<point name="query.b.page1.gzou001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou001
            
            #add-point:AFTER FIELD gzou001
            {<point name="query.a.page1.gzou001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzou001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou001
            #add-point:ON ACTION controlp INFIELD gzou001
            {<point name="query.c.page1.gzou001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoul003
            #add-point:BEFORE FIELD gzoul003
            {<point name="query.b.page1.gzoul003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzoul003
            
            #add-point:AFTER FIELD gzoul003
            {<point name="query.a.page1.gzoul003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzoul003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzoul003
            #add-point:ON ACTION controlp INFIELD gzoul003
            {<point name="query.c.page1.gzoul003" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.gzou003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou003
            #add-point:ON ACTION controlp INFIELD gzou003
            {<point name="construct.c.page1.gzou003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou003
            #add-point:BEFORE FIELD gzou003
            {<point name="query.b.page1.gzou003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou003
            
            #add-point:AFTER FIELD gzou003
            {<point name="query.a.page1.gzou003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou004
            #add-point:BEFORE FIELD gzou004
            {<point name="query.b.page1.gzou004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou004
            
            #add-point:AFTER FIELD gzou004
            {<point name="query.a.page1.gzou004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzou004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou004
            #add-point:ON ACTION controlp INFIELD gzou004
            {<point name="query.c.page1.gzou004" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.gzou006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou006
            #add-point:ON ACTION controlp INFIELD gzou006
            {<point name="construct.c.page1.gzou006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou006
            #add-point:BEFORE FIELD gzou006
            {<point name="query.b.page1.gzou006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou006
            
            #add-point:AFTER FIELD gzou006
            {<point name="query.a.page1.gzou006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzou005
            #add-point:BEFORE FIELD gzou005
            {<point name="query.b.page1.gzou005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzou005
            
            #add-point:AFTER FIELD gzou005
            {<point name="query.a.page1.gzou005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.gzou005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzou005
            #add-point:ON ACTION controlp INFIELD gzou005
            {<point name="query.c.page1.gzou005" />}
            #END add-point
 
  
         
                  #Ctrlp:construct.c.page1_info.gzoumodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzoumodid
            #add-point:ON ACTION controlp INFIELD gzoumodid
            {<point name="construct.c.page1_info.gzoumodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoumodid
            #add-point:BEFORE FIELD gzoumodid
            {<point name="query.b.page1_info.gzoumodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzoumodid
            
            #add-point:AFTER FIELD gzoumodid
            {<point name="query.a.page1_info.gzoumodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoumoddt
            #add-point:BEFORE FIELD gzoumoddt
            {<point name="query.b.page1_info.gzoumoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.page1_info.gzouownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzouownid
            #add-point:ON ACTION controlp INFIELD gzouownid
            {<point name="construct.c.page1_info.gzouownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzouownid
            #add-point:BEFORE FIELD gzouownid
            {<point name="query.b.page1_info.gzouownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzouownid
            
            #add-point:AFTER FIELD gzouownid
            {<point name="query.a.page1_info.gzouownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1_info.gzouowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzouowndp
            #add-point:ON ACTION controlp INFIELD gzouowndp
            {<point name="construct.c.page1_info.gzouowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzouowndp
            #add-point:BEFORE FIELD gzouowndp
            {<point name="query.b.page1_info.gzouowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzouowndp
            
            #add-point:AFTER FIELD gzouowndp
            {<point name="query.a.page1_info.gzouowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1_info.gzoucrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzoucrtid
            #add-point:ON ACTION controlp INFIELD gzoucrtid
            {<point name="construct.c.page1_info.gzoucrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoucrtid
            #add-point:BEFORE FIELD gzoucrtid
            {<point name="query.b.page1_info.gzoucrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzoucrtid
            
            #add-point:AFTER FIELD gzoucrtid
            {<point name="query.a.page1_info.gzoucrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1_info.gzoucrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzoucrtdp
            #add-point:ON ACTION controlp INFIELD gzoucrtdp
            {<point name="construct.c.page1_info.gzoucrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoucrtdp
            #add-point:BEFORE FIELD gzoucrtdp
            {<point name="query.b.page1_info.gzoucrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzoucrtdp
            
            #add-point:AFTER FIELD gzoucrtdp
            {<point name="query.a.page1_info.gzoucrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzoucrtdt
            #add-point:BEFORE FIELD gzoucrtdt
            {<point name="query.b.page1_info.gzoucrtdt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         CANCEL DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   ELSE
      LET g_error_show = 1
      LET g_detail_idx = 1
   END IF
    
   CALL azzi500_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="azzi500.set_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi500_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="azzi500.set_no_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi500_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point   
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="azzi500.set_pk_array" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION azzi500_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzou_d[l_ac].gzou001
   LET g_pk_array[1].column = 'gzou001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi500.state_change" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="azzi500.ui_dialog" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION azzi500_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point 
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_gzou_d.clear()
         CALL g_gzou1_info_d.clear()
 
         LET g_wc2 = ' 1=2'
         LET g_action_choice = ""
         CALL azzi500_init()
      END IF
   
      CALL azzi500_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_gzou_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:2)
   CALL azzi500_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作
                  {<point name="menu.detail_show.page1_sub.detail_qrystr" />}
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:2)
               ON ACTION prog_azzi085
                  LET g_action_choice="prog_azzi085"
                  IF cl_auth_chk_act("prog_azzi085") THEN
                     
                     #add-point:ON ACTION prog_azzi085
                     {<point name="menu.detail_show.page1_sub.prog_azzi085" />}
                     #END add-point
                     
                  END IF
 
 
 
               END MENU
 
 
               #add-point:ON ACTION detail_qrystr
               {<point name="menu.detail_show.page1.detail_qrystr" />}
               #END add-point
 
 
 
               
         END DISPLAY
      
         DISPLAY ARRAY g_gzou1_info_d TO s_detail1_info.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body1_info.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body1_info.before_display2"/>}
               #end add-point
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1_info")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:2)
   CALL azzi500_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row1_info"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL DIALOG.setSelectionMode("s_detail1_info", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi500_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi500_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi500_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi500_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION enterprise_login_url
            LET g_action_choice="enterprise_login_url"
            IF cl_auth_chk_act("enterprise_login_url") THEN
               
               #add-point:ON ACTION enterprise_login_url
               {<point name="menu.enterprise_login_url" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi500_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail1_info",1)
 
 
 
            END IF
 
 
 
      
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_gzou_d)
               LET g_export_id[1]   = "s_detail1"
               LET g_export_node[2] = base.typeInfo.create(g_gzou1_info_d)
               LET g_export_id[2]   = "s_detail1_info"
 
               #add-point:ON ACTION exporttoexcel
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            CANCEL DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            CANCEL DIALOG
            
         
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL azzi500_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi500_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi500_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="azzi500.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi500_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE azzi500_bcl
   #END IF
   
 
   
   #add-point:unlock_b段結束前
   {<point name="unlock_b.after"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi500.update_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi500_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point     
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #比對新舊值, 判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #若key無變動, 不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #若key有變動, 則連動其他table的資料   
   #判斷是否是同一群組的table
   LET ls_group = "gzou_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "gzou_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE gzou_t 
         SET (gzou001
              ,gzoustus,gzou003,gzou004,gzou006,gzou005,gzoumodid,gzoumoddt,gzouownid,gzouowndp,gzoucrtid,gzoucrtdp,gzoucrtdt) 
              = 
             (ps_keys[1]
              ,g_gzou_d[l_ac].gzoustus,g_gzou_d[l_ac].gzou003,g_gzou_d[l_ac].gzou004,g_gzou_d[l_ac].gzou006, 
                  g_gzou_d[l_ac].gzou005,g_gzou1_info_d[l_ac].gzoumodid,g_gzou1_info_d[l_ac].gzoumoddt, 
                  g_gzou1_info_d[l_ac].gzouownid,g_gzou1_info_d[l_ac].gzouowndp,g_gzou1_info_d[l_ac].gzoucrtid, 
                  g_gzou1_info_d[l_ac].gzoucrtdp,g_gzou1_info_d[l_ac].gzoucrtdt) 
         WHERE gzou001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzou_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzou_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
