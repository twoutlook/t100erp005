<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="azzi850" std_prog="azzi850" erpver="1.0" module="AZZ" ver="17" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="construct.c.gzya001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzya001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzya001  #顯示到畫面上

            NEXT FIELD gzya001                     #返回原欄位

]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzya_m.gzya001
   CALL ap_ref_array2(g_ref_fields," SELECT gzyal003 FROM gzyal_t WHERE gzyalent = '"||g_enterprise||"' AND gzyal001 = ? AND gzyal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzya_m.gzyal003 = g_rtn_fields[1] 
   DISPLAY g_gzya_m.gzyal003 TO gzyal003]]>
  </point>
  <point name="input.c.page1.gzyb002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzyb_d[l_ac].gzyb002             #給予default值

            #給予arg

            CALL q_gzzz001_1()                                           #呼叫開窗

            LET g_gzyb_d[l_ac].gzyb002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_gzyb_d[l_ac].gzyb002 TO gzyb002                    #顯示到畫面上

            NEXT FIELD gzyb002                                           #返回原欄位

]]>
  </point>
  <point name="input.a.page3.gzyc002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzya_m.gzya001) AND NOT cl_null(g_gzyb_d[g_detail_idx].gzyb002) AND NOT cl_null(g_gzyb3_d[g_detail_idx2].gzyc001) AND NOT cl_null(g_gzyb3_d[g_detail_idx2].gzyc002) AND NOT cl_null(g_gzyb3_d[g_detail_idx2].gzyc003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t OR g_gzyb_d[g_detail_idx].gzyb002 != g_gzyb_d[g_detail_idx].gzyb002 OR g_gzyb3_d[g_detail_idx2].gzyc001 != g_gzyb3_d_t.gzyc001 OR g_gzyb3_d[g_detail_idx2].gzyc002 != g_gzyb3_d_t.gzyc002 OR g_gzyb3_d[g_detail_idx2].gzyc003 != g_gzyb3_d_t.gzyc003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzyc_t WHERE "||"gzycent = '" ||g_enterprise|| "' AND "||"gzyc001 = '"||g_gzya_m.gzya001 ||"' AND "|| "gzyc002 = '"||g_gzyb_d[g_detail_idx].gzyb002 ||"' AND "|| "gzyc003 = '"||g_gzyb3_d[g_detail_idx2].gzyc001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.gzyc001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzya_m.gzya001) AND NOT cl_null(g_gzyb_d[g_detail_idx].gzyb002) AND NOT cl_null(g_gzyb3_d[g_detail_idx2].gzyc001) AND NOT cl_null(g_gzyb3_d[g_detail_idx2].gzyc002) AND NOT cl_null(g_gzyb3_d[g_detail_idx2].gzyc003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t OR g_gzyb_d[g_detail_idx].gzyb002 != g_gzyb_d[g_detail_idx].gzyb002 OR g_gzyb3_d[g_detail_idx2].gzyc001 != g_gzyb3_d_t.gzyc001 OR g_gzyb3_d[g_detail_idx2].gzyc002 != g_gzyb3_d_t.gzyc002 OR g_gzyb3_d[g_detail_idx2].gzyc003 != g_gzyb3_d_t.gzyc003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzyc_t WHERE "||"gzycent = '" ||g_enterprise|| "' AND "||"gzyc001 = '"||g_gzya_m.gzya001 ||"' AND "|| "gzyc002 = '"||g_gzyb_d[g_detail_idx].gzyb002 ||"' AND "|| "gzyc003 = '"||g_gzyb3_d[g_detail_idx2].gzyc001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.gzyb002_2" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzya_m.gzya001) AND NOT cl_null(g_gzyb2_d[g_detail_idx].gzyb002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t OR g_gzyb2_d[g_detail_idx].gzyb002 != g_gzyb2_d_t.gzyb002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzyb_t WHERE "||"gzybent = '" ||g_enterprise|| "' AND "||"gzyb001 = '"||g_gzya_m.gzya001 ||"' AND "|| "gzyb002 = '"||g_gzyb2_d[g_detail_idx].gzyb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.gzya001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzya_m.gzya001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzya_t WHERE "||"gzyaent = '" ||g_enterprise|| "' AND "||"gzya001 = '"||g_gzya_m.gzya001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="construct.c.page2.gzybownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzybownid  #顯示到畫面上

            NEXT FIELD gzybownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzybowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzybowndp  #顯示到畫面上

            NEXT FIELD gzybowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzybmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzybmodid  #顯示到畫面上

            NEXT FIELD gzybmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzybcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzybcrtid  #顯示到畫面上

            NEXT FIELD gzybcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.gzybcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzybcrtdp  #顯示到畫面上

            NEXT FIELD gzybcrtdp                     #返回原欄位

]]>
  </point>
  <point name="function.azzi850_p_process" order="1" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: qbe  批次處理
# Usage..........: CALL azzi850_p_process(ps_wc)
# Input parameter: ps_wc  qbe 條件 
# Return code....: none
################################################################################
PRIVATE FUNCTION azzi850_p_process(ps_wc)
   DEFINE ps_wc       STRING
   DEFINE ls_sql      STRING 
   DEFINE li_cnt      LIKE type_t.num5
   DEFINE lc_gzzz001  LIKE gzzz_t.gzzz001 
   DEFINE l_gzyb_d    type_g_gzyb_d 
   DEFINE l_gzyb_d2   type_g_gzyb2_d
   DEFINE lc_count    LIKE type_t.num10
   DEFINE lc_gzzj001   LIKE gzzj_t.gzzj001
   DEFINE lc_gzzj003   LIKE gzzj_t.gzzj003
   DEFINE lc_gzzol003  LIKE gzzol_t.gzzol003
   
   LET l_gzyb_d2.gzybownid = g_user
   LET l_gzyb_d2.gzybowndp = g_dept
   LET l_gzyb_d2.gzybcrtid = g_user
   LET l_gzyb_d2.gzybcrtdp = g_dept 
   LET l_gzyb_d2.gzybcrtdt = cl_get_current()
   LET l_gzyb_d2.gzybmodid = g_user
   LET l_gzyb_d2.gzybmoddt = cl_get_current()

   LET ls_sql = "SELECT COUNT(*) FROM gzzz_t WHERE ",  ps_wc

   PREPARE azzi850_p_count_pre FROM ls_sql
   EXECUTE azzi850_p_count_pre INTO lc_count

   IF cl_null(lc_count) THEN
      LET lc_count = 0
   END IF
   IF lc_count = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE   
      CALL cl_progress_bar(lc_count)
   END IF 
   
   LET ls_sql = "SELECT gzzz001 FROM gzzz_t WHERE ",  ps_wc 
   PREPARE azzi850_p_pre FROM ls_sql
   DECLARE azzi850_p_curs CURSOR FOR azzi850_p_pre

   FOREACH azzi850_p_curs INTO l_gzyb_d.gzyb002
       CALL cl_progress_ing("r.r azzp185 " || g_gzya_m.gzya001 || " " || l_gzyb_d.gzyb002)

       SELECT COUNT(*) INTO li_cnt FROM gzyb_t
        WHERE gzybent = g_enterprise
          AND gzyb001 = g_gzya_m.gzya001
          AND gzyb002 = l_gzyb_d.gzyb002
       IF li_cnt > 0 THEN 
       ELSE
          LET l_gzyb_d.gzyb003 = "0"
          LET l_gzyb_d.gzyb004 = "0"
          LET l_gzyb_d.gzyb005 = "0"
          LET l_gzyb_d.gzyb005 = "0"
          LET l_gzyb_d.gzyb006 = "0"
          LET l_gzyb_d.gzyb007 = "0"  
          
          INSERT INTO gzyb_t
                  (gzybent,gzyb001,gzyb002,
                   gzyb003,gzyb004,gzyb005
                   ,gzybownid,gzybowndp,gzybcrtid,gzybcrtdp,gzybcrtdt,
                   gzybmodid,gzybmoddt) 
            VALUES(g_enterprise,g_gzya_m.gzya001,l_gzyb_d.gzyb002,
                   l_gzyb_d.gzyb003,l_gzyb_d.gzyb004,l_gzyb_d.gzyb005,
                   l_gzyb_d2.gzybownid,l_gzyb_d2.gzybowndp,l_gzyb_d2.gzybcrtid,l_gzyb_d2.gzybcrtdp,l_gzyb_d2.gzybcrtdt,
                   l_gzyb_d2.gzybmodid,l_gzyb_d2.gzybmoddt)                
       END IF
       RUN "r.r azzp185 " || g_gzya_m.gzya001 || " " || l_gzyb_d.gzyb002 #WITHOUT WAITING        
   END FOREACH 
   #資料同步
   SLEEP 1
   CALL azzi850_b_fill()
   #填充下層單身資料
   CALL azzi850_b_fill2('2')
   #填充下層單身資料
   CALL azzi850_b_fill2('3')
   
   #程式名稱 模組名稱 原始程式
   FOR li_cnt = 1 TO g_gzyb_d.getLength()
       SELECT gzzal003,gzzj001,gzzj003,gzzz002
       INTO g_gzyb_d[li_cnt].gzyb002_desc,lc_gzzj001,lc_gzzj003,g_gzyb_d[li_cnt].gzza001_desc
       FROM gzzz_t
        INNER JOIN gzzj_t
         ON  gzzz005 = gzzj001
        LEFT JOIN gzzal_t ON gzzz001 = gzzal001 
         AND gzzal002 = g_dlang 
       WHERE gzzz001 = g_gzyb_d[li_cnt].gzyb002  
       #SELECT gzzal003,gzzol003,gzzz002  
       #INTO g_gzyb_d[l_ac].gzyb002_desc,g_gzyb_d[l_ac].gzzol003_desc,g_gzyb_d[l_ac].gzza001_desc      
       #FROM  gzzz_t
       # LEFT JOIN gzzal_t ON gzzz001 = gzzal001
       #      AND gzzal002 = g_dlang
       #LEFT JOIN gzzol_t ON gzzz005 = gzzol001
       #     AND gzzol002 = g_dlang
       #  WHERE gzzz001 = g_gzyb_d[l_ac].gzyb002 
       SELECT gzzol003 INTO lc_gzzol003 FROM gzzol_t
        WHERE gzzol001 = lc_gzzj003
         AND gzzol002 = g_dlang
           
       CASE
         WHEN lc_gzzj001[1,1] = "B"    # 行業共用模組
            LET g_gzyb_d[li_cnt].gzzol003_desc = gs_gzze003_b,lc_gzzol003 CLIPPED

         WHEN lc_gzzj001[1,1] = "C"    # 客製標準模組
            LET g_gzyb_d[li_cnt].gzzol003_desc = gs_gzze003_c,lc_gzzol003 CLIPPED

         WHEN lc_gzzj001[1,1] = "D"    # 行業別客製模組
            LET g_gzyb_d[li_cnt].gzzol003_desc = gs_gzze003_d,lc_gzzol003 CLIPPED

         OTHERWISE   # 註冊模組
            LET g_gzyb_d[li_cnt].gzzol003_desc = lc_gzzol003 CLIPPED
      END CASE
         LET lc_gzzol003 = ""
   END FOR
    
END FUNCTION]]>
  </point>
  <point name="function.azzi850_chk_gzyd003_pk" order="2" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢核gzyd003 不可以設定PK 為遮罩欄位
# Memo...........:
# Usage..........: CALL azzi850_chk_gzyd003_pk()
#                  RETURNING TRUE/FALSE,lc_dzeb001
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/11/18 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_chk_gzyd003_pk()
   DEFINE lc_dzeb001 LIKE dzeb_t.dzeb001
   DEFINE lc_dzeb004 LIKE dzeb_t.dzeb004
   DEFINE li_chk     LIKE type_t.num5

   LET li_chk = FALSE 
   SELECT dzeb001,dzeb004 INTO lc_dzeb001,lc_dzeb004 FROM dzeb_t
    WHERE dzeb002 =  g_gzyb4_d[g_detail_idx2].gzyd003  

   IF lc_dzeb004 = 'Y' THEN 
      LET li_chk = TRUE  
   END IF 
   RETURN li_chk,lc_dzeb001 
END FUNCTION]]>
  </point>
  <point name="function.azzi850_execute_azzp185" order="3" ver="12" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 執行 azzp185
# Memo...........:
# Usage..........: CALL azzi850_execute_azzp185(pc_gzyb002)
# Input parameter: pc_gzyb002 作業編號
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_execute_azzp185(pc_gzyb002)
   DEFINE pc_gzyb002 LIKE gzyb_t.gzyb002
   DEFINE lc_gzyb001    LIKE gzyb_t.gzyb001
   DEFINE lc_gzyb002    LIKE gzyb_t.gzyb002
   DEFINE li_enterprise LIKE type_t.num5
   DEFINE ls_sql        STRING
   DEFINE la_gzzr002    DYNAMIC ARRAY OF LIKE gzzr_t.gzzr002
   DEFINE lc_gzyc004    LIKE gzyc_t.gzyc004
   DEFINE lc_gzyc005    LIKE gzyc_t.gzyc005
   DEFINE lc_gzzzstus   LIKE gzzz_t.gzzzstus
   DEFINE lc_gzzz002    LIKE gzzz_t.gzzz002
   DEFINE li_cnt        LIKE type_t.num5
   DEFINE li_cntzy      LIKE type_t.num5   
   DEFINE lc_gzybcrtdt  LIKE gzyb_t.gzybcrtdt
   
   LET g_cnt_gzzc = 0

   #由作業名稱轉換為程式名稱
   SELECT gzzzstus,gzzz002 INTO lc_gzzzstus,lc_gzzz002 FROM gzzz_t
    WHERE gzzz001 = pc_gzyb002
   IF SQLCA.SQLCODE OR lc_gzzzstus = "N" THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "azz-00090"  #作業編號不存在或已經為無效資料
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF 
   
   CALL azzi850_qry_gzzr(lc_gzzz002) RETURNING la_gzzr002
   
   FOR li_cnt = 1 TO la_gzzr002.getLength()
       SELECT COUNT(*) INTO li_cntzy FROM gzyc_t
         WHERE gzycent = g_enterprise AND gzyc001 = g_gzya_m.gzya001  AND gzyc002 = pc_gzyb002
           AND gzyc003 = la_gzzr002[li_cnt]

       IF li_cntzy < 1 THEN
          LET g_cnt_gzzc = g_cnt_gzzc + 1
            INSERT INTO gzyc_t(gzycent,gzyc001,gzyc002,gzyc003,gzyc004,gzyc005)
             VALUES(g_enterprise,g_gzya_m.gzya001,pc_gzyb002,la_gzzr002[li_cnt],
                    'Y','F')
            IF SQLCA.SQLCODE THEN 
               #DISPLAY "Info:新增 ", g_enterprise , " ",lc_gzyb001 ," ",  lc_gzyb002 ," " ,la_gzzr002[li_cnt] ,"重複"
            END IF
       END IF
   END FOR
         
   DISPLAY "Info:新增:",g_gzya_m.gzya001 ," ", pc_gzyb002, " " ,g_cnt_gzzc USING "<<<<<","筆資料" 
   
   #CALL FGL_SETENV("T100RUNWAIT","1")
   #填充下層單身資料
   CALL azzi850_b_fill2('2') #取gzyc
   #填充下層單身資料
   CALL azzi850_b_fill2('3') #取gzyd
END FUNCTION]]>
  </point>
  <point name="function.azzi850_get_gzyd003_fmt" order="4" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL azzi850_get_gzyd003_fmt()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/6 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_get_gzyd003_fmt()
   DEFINE r_dzeb007      LIKE dzeb_t.dzeb007
   
   SELECT gztd003 INTO r_dzeb007 FROM dzeb_t
    LEFT JOIN gztd_t ON gztd001 = dzeb006
    INNER JOIN dzac_t ON dzeb002 = dzac002 AND dzeb001 = dzac005   
    WHERE dzac001 = g_gzyb_d[g_detail_idx].gzza001_desc
      AND dzeb002 = g_gzyb4_d[g_detail_idx2].gzyd003
   
   RETURN r_dzeb007
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001" order="5" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 查詢報表欄位查詢
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: p_arg1         報表元件代號
#                : p_arg2         排除欄位
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001()
   DEFINE p_arg1      LIKE gzgf_t.gzgf001   #報表元件代號 
   DEFINE p_arg2      STRING
   DEFINE lwin_curr      ui.Window
   DEFINE lfrm_curr      ui.Form
   DEFINE ls_path        STRING

   WHENEVER ERROR CALL cl_err_msg_log

   OPEN WINDOW w_azzi850_s01 WITH FORM cl_ap_formpath("azz","azzi850_s01")
      ATTRIBUTE(STYLE="openwin")
   LET lwin_curr = ui.Window.getCurrent()
   LET lfrm_curr = lwin_curr.getForm()
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   LET ls_path = os.Path.join(ls_path,"toolbar_openwin.4tb")
   CALL lfrm_curr.loadToolBar(ls_path)
   IF g_qryparam.state = 'i' THEN
      LET gi_multi_sel = FALSE
   ELSE
      LET gi_multi_sel = TRUE
   END IF 
   
   LET gi_need_cons = g_qryparam.reqry
   LET gs_default1 = g_qryparam.default1 
       
   CALL azzi850_q_gzgg001_init()
   CALL azzi850_q_gzgg001_sel()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
   END IF 
 
   CLOSE WINDOW w_azzi850_s01       
       
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_init" order="6" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 查詢報表欄位查詢
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_init()
   DEFINE l_qry_text LIKE dzcal_t.dzcal003
   DEFINE l_qry_id   LIKE dzca_t.dzca001
   DEFINE l_text     STRING

   IF NOT (gi_multi_sel) THEN
      CALL cl_set_comp_visible("check", FALSE)
      CALL cl_set_toolbaritem_visible("selectall, selectnone, selectpageall, selectpagenone", FALSE)
   END IF
 
   IF (gi_multi_sel) THEN
      #lib尚未修正
      #CALL cl_set_comp_font_color("oea01", "red")
   END IF

   LET INT_FLAG = FALSE         #避免被其他函式影響
   LET g_page_idx = 0
   LET g_page_last = 0
#   LET g_sel_limit = 200     #選擇筆數的上限
   LET g_sel_limit = cl_get_para(g_enterprise, g_site,"E-SYS-0003")     #選擇筆數的上限
   LET gi_page_count = cl_get_para(g_enterprise, g_site,"E-SYS-0002")
   LET gi_cons_where = " 1=1"   #預設查詢全部資料
   LET gi_cons_where_old = NULL
   LET gi_reconstruct = FALSE
   INITIALIZE gs_pageswitch TO NULL
   INITIALIZE gs_action TO NULL
   INITIALIZE g_qryparam.return1 TO NULL  

   CALL gr_qry.clear()
#   CALL gr_qry_sel.clear()
 
   #動態設定comboBox項目
   ### 此開窗無comboBox的欄位 ###
 
   #設定開窗識別碼的說明
#   LET gwin_curr_s = ui.Window.forName("w_qry")
#   SELECT dzca001,dzcal003 INTO l_qry_id,l_qry_text FROM dzca_t
#      LEFT JOIN dzcal_t ON dzcal001=dzca001 AND dzcal002=g_lang 
#      WHERE dzca001="q_gzgg001"
#   LET l_text = l_qry_text,"(",l_qry_id,")"
#   CALL gwin_curr_s.setText(l_text)
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_sel" order="7" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 查詢報表欄位查詢
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_sel()

   WHILE TRUE
      CALL azzi850_q_gzgg001_prep_result_set()
      IF (gi_multi_sel) THEN
         CALL azzi850_q_gzgg001_input_array()
      ELSE
         CALL azzi850_q_gzgg001_display_array()
      END IF
 
      IF gs_action = "exit" THEN
         EXIT WHILE
      END IF
   END WHILE
   
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_prep_result_set" order="8" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_prep_result_set()
 
   CALL gr_qry.clear()
   CALL gr_qry_sel.clear()
 
   IF (gi_need_cons) OR (gi_reconstruct) THEN
 
      #避免使用預先查詢時,按重新整理的時候,進入CONSTRUCT段
      LET gi_need_cons = FALSE
 
      LET gi_reconstruct = FALSE
      LET gi_cons_where_old = NULL
      DISPLAY "" TO formonly.index
      CONSTRUCT gi_cons_where ON gzgf001, gzdel003, gzgg001, gzge003 
         FROM s_qry[1].gzgf001_1, s_qry[1].gzdel003_2, s_qry[1].gzgg001_3, s_qry[1].gzge003_4 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         LET gi_cons_where = " 1=1"
      END IF
   END IF
 
   IF cl_null(gs_pageswitch) THEN
      LET gs_pageswitch = "first"
   END IF
   CALL azzi850_q_gzgg001_pagedata_fill(gs_pageswitch)
   INITIALIZE gs_pageswitch TO NULL
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_input_array" order="9" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 查詢報表欄位查詢
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_input_array()
   DEFINE li_ac     LIKE type_t.num5
   DEFINE ldig_curr ui.Dialog
   DEFINE l_msg     STRING           
   DEFINE l_chk     LIKE type_t.num5 
 
   DIALOG ATTRIBUTES(UNBUFFERED)
      INPUT ARRAY gr_qry FROM s_qry.*
         ATTRIBUTES(COUNT=g_data_cnt, 
                    APPEND ROW=FALSE, INSERT ROW=FALSE, DELETE ROW=FALSE) 
         
         BEFORE INPUT
            CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr) 
            
         BEFORE ROW
            LET li_ac = DIALOG.getCurrentRow("s_qry") 
            
         ON CHANGE check   #改變勾選狀態
            CALL azzi850_q_gzgg001_qry_check("", gr_qry[li_ac].check, li_ac, li_ac)
      END INPUT
 
      BEFORE DIALOG
         LET ldig_curr = ui.Dialog.getCurrent()
 
      ON ACTION accept
         CALL azzi850_q_gzgg001_get_multiret()
         LET gs_action = "exit"
         EXIT DIALOG
         
      ON ACTION cancel
         LET g_qryparam.return1 = NULL
         
         LET gs_action = "exit"
         LET INT_FLAG = TRUE
         EXIT DIALOG
         
      ON ACTION pg_first
         CALL azzi850_q_gzgg001_pagedata_fill("first")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_prev
         CALL azzi850_q_gzgg001_pagedata_fill("prev")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_next
         CALL azzi850_q_gzgg001_pagedata_fill("next")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_last
         CALL azzi850_q_gzgg001_pagedata_fill("last")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      #重新整理
      ON ACTION refresh
         CALL azzi850_q_gzgg001_pagedata_fill("first")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         EXIT DIALOG
         
      #重新查詢
      ON ACTION reconstruct
         LET gi_reconstruct = TRUE
         CALL gr_qry.clear()
         CALL gr_qry_sel.clear()
         CALL azzi850_q_gzgg001_data_count("0")    #總筆數
         EXIT DIALOG
         
      #全部選取
      ON ACTION selectall
         # 連未選擇的頁面都必須選擇
         CALL azzi850_q_gzgg001_qry_check("selectall", "Y", 1, gr_qry.getLength()) 
         
      #全部取消選取
      ON ACTION selectnone
         CALL azzi850_q_gzgg001_qry_check("selectnone", "N", 1, gr_qry.getLength()) 
         
      #此頁全選
      ON ACTION selectpageall
         CALL azzi850_q_gzgg001_qry_check("selectpageall", "Y", 1, gr_qry.getLength()) 
         
      #此頁取消選取
      ON ACTION selectpagenone
         CALL azzi850_q_gzgg001_qry_check("selectpagenone", "N", 1, gr_qry.getLength()) 
         
      ON ACTION exporttoexcel
         MESSAGE ""
 
      #開窗程式串查沒有設定   
   END DIALOG
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_display_array" order="10" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 查詢報表欄位查詢
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_display_array()
 
   DEFINE li_ac       LIKE type_t.num5
   DEFINE ldig_curr   ui.Dialog
   DEFINE l_msg       STRING           
   DEFINE l_chk       LIKE type_t.num5 
   
   DIALOG ATTRIBUTES(UNBUFFERED)
      DISPLAY ARRAY gr_qry TO s_qry.*
         ATTRIBUTES(COUNT=g_data_cnt)
         BEFORE ROW
            LET li_ac = DIALOG.getCurrentRow("s_qry")
      END DISPLAY
 
      BEFORE DIALOG
         LET ldig_curr = ui.Dialog.getCurrent()
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
 
      ON ACTION accept
         IF li_ac > 0 THEN
            LET g_qryparam.return1 = gr_qry[li_ac].gzgg001_3 
          
         ELSE
            LET g_qryparam.return1 = gs_default1 

         END IF
         LET gs_action = "exit"
         EXIT DIALOG
         
      ON ACTION CANCEL
         LET g_qryparam.return1 = gs_default1 
         LET gs_action = "exit"
         LET INT_FLAG = TRUE
         EXIT DIALOG
         
      ON ACTION pg_first
         CALL azzi850_q_gzgg001_pagedata_fill("first")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_prev
         CALL azzi850_q_gzgg001_pagedata_fill("prev")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_next
         CALL azzi850_q_gzgg001_pagedata_fill("next")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION pg_last
         CALL azzi850_q_gzgg001_pagedata_fill("last")
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         NEXT FIELD CURRENT
         
      ON ACTION refresh       #重新整理
         CALL azzi850_q_gzgg001_pagedata_fill("first") 
         CALL azzi850_q_gzgg001_set_pagebutton(ldig_curr)
         EXIT DIALOG
         
      ON ACTION reconstruct   #重新查詢 
         LET gi_reconstruct = TRUE
         CALL gr_qry.clear()
         CALL azzi850_q_gzgg001_data_count("0")    #總筆數
         EXIT DIALOG
         
      ON ACTION exporttoexcel
         MESSAGE ""
 
      #開窗程式串查沒有設定
 
         
   END DIALOG
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_pagedata_fill" order="11" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 準備查詢畫面的資料集
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_pagedata_fill(ps_page_action)
   DEFINE ps_page_action STRING
   DEFINE ls_sql         STRING
   DEFINE ls_where       STRING
   DEFINE li_i           LIKE type_t.num10
   DEFINE li_j           LIKE type_t.num10
   DEFINE l_datarange    STRING   #第m-n筆
   DEFINE l_str          STRING   #字串
   DEFINE l_str1         STRING
   DEFINE l_str2         STRING
 
   CASE ps_page_action
      WHEN "first"
         LET g_page_idx = 1
      WHEN "prev"
         LET g_page_idx = g_page_idx - 1
      WHEN "next"
         LET g_page_idx = g_page_idx + 1
      WHEN "last"
         LET g_page_idx = g_page_last
   END CASE
 
   IF g_page_idx > 0 THEN
      LET g_pagestart_s = (g_page_idx - 1) * gi_page_count + 1
   END IF
 
   CALL azzi850_q_gzgg001_sqlwhere() RETURNING ls_where
   #全部選取
   LET ls_sql = 
   #"SELECT DISTINCT  'Y',  gzgf001,gzdel003,gzgg001,gzge003 
   "SELECT DISTINCT  'Y',  gzgf001,gzdel003,gzgg001,NVL(gzge003,dzebl003) 
  FROM  gzgg_t LEFT OUTER JOIN gzgf_t ON gzgf000 = gzgg000 LEFT OUTER JOIN gzdel_t ON gzgf001 = gzdel001 AND gzdel002 = '",g_lang,"'  LEFT OUTER JOIN gzge_t ON gzgg000 = gzge000 AND gzgg001 = gzge001 AND gzge002 =  '",g_lang,"'",  
  " LEFT OUTER JOIN dzebl_t ON dzebl001 = gzgg001 AND dzebl002 =  '",g_lang,"'", 
  " WHERE  1=1  AND ", ls_where CLIPPED, "
  ORDER BY gzgf001"
   DECLARE lcurs_qry_all CURSOR FROM ls_sql
 
   #此頁
   #@如果不需要複選資料,則不要設定check的預設值(將'N'刪除)
   LET ls_sql = 
   "SELECT 'N', gzgf001_1, gzdel003_2, gzgg001_3, gzge003_4, RANK ",
  #FROM ( SELECT gzgf001_1, gzdel003_2, gzgg001_3, gzge003_4, RANK() OVER(ORDER BY gzgf001_1, gzdel003_2, gzgg001_3, gzge003_4) AS RANK  FROM (SELECT DISTINCT  gzgf001 gzgf001_1, gzdel003 gzdel003_2, gzgg001 gzgg001_3, gzge003 gzge003_4 
  " FROM ( SELECT gzgf001_1, gzdel003_2, gzgg001_3, gzge003_4, RANK() OVER(ORDER BY gzgf001_1, gzdel003_2, gzgg001_3, gzge003_4) AS RANK  FROM (SELECT DISTINCT  gzgf001 gzgf001_1, gzdel003 gzdel003_2, gzgg001 gzgg001_3, NVL(gzge003,dzebl003) gzge003_4 
  FROM  gzgg_t LEFT OUTER JOIN gzgf_t ON gzgf000 = gzgg000 LEFT OUTER JOIN gzdel_t ON gzgf001 = gzdel001 AND gzdel002 = '",g_lang,"'  LEFT OUTER JOIN gzge_t ON gzgg000 = gzge000 AND gzgg001 = gzge001 AND gzge002 =  '",g_lang,"'",
  " LEFT OUTER JOIN dzebl_t ON dzebl001 = gzgg001 AND dzebl002 =  '",g_lang,"'",   
  " WHERE  1=1  AND ", ls_where CLIPPED, "
  ORDER BY gzgf001))",
   " WHERE RANK >= ", g_pagestart_s," AND RANK < ", g_pagestart_s + gi_page_count
 
   DECLARE lcurs_qry CURSOR FROM ls_sql
 
   CALL gr_qry.clear()
 
   LET li_i = 1
   FOREACH lcurs_qry INTO gr_qry[li_i].*
      LET l_str1 = gr_qry[li_i].gzgf001_1, gr_qry[li_i].gzdel003_2, gr_qry[li_i].gzgg001_3, gr_qry[li_i].gzge003_4
      FOR li_j = 1 TO gr_qry_sel.getLength()
         LET l_str2 = gr_qry_sel[li_j].gzgf001_1, gr_qry_sel[li_j].gzdel003_2, gr_qry_sel[li_j].gzgg001_3, gr_qry_sel[li_j].gzge003_4
         IF l_str1 = l_str2 THEN
            LET gr_qry[li_i].check = gr_qry_sel[li_j].check
         END IF
      END FOR
      LET li_i = li_i + 1
   END FOREACH
   CALL gr_qry.deleteElement(li_i)
 
   IF gi_cons_where <> gi_cons_where_old OR cl_null(gi_cons_where) OR cl_null(gi_cons_where_old) THEN   #查詢條件改變
      LET gi_cons_where_old = gi_cons_where
      #CALL azzi850_q_gzgg001_data_count("db")  #查詢資料的總筆數,給下一段計算第m-n筆
   END IF
 
   CALL azzi850_q_gzgg001_data_count("db") #查詢資料的總筆數,給下一段計算第m-n筆
 
   #第m-n筆
   IF g_page_idx > 0 THEN
      LET li_i = g_data_cnt MOD gi_page_count
      #現在在最後一頁，而且不是滿頁的狀況
      IF g_page_idx = g_page_last AND li_i > 0 THEN
         LET l_str = g_pagestart_s - 1 + li_i
      ELSE
         LET l_str = g_pagestart_s - 1 + gi_page_count
      END IF
      LET l_datarange = g_pagestart_s
      LET l_datarange = l_datarange CLIPPED, " - ", l_str
   ELSE
      LET l_datarange = ""
   END IF
   DISPLAY l_datarange TO formonly.index
 
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_data_count" order="12" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_data_count(p_data_cnt)
   DEFINE p_data_cnt  STRING     #總筆數計算方式 "db":資料庫中的資料/非"db"則以此值為總筆數
   DEFINE ls_sql      STRING
   DEFINE ls_where    STRING
   DEFINE ls_sql_1    STRING
 
 
   IF p_data_cnt = "db" THEN
      CALL azzi850_q_gzgg001_sqlwhere() RETURNING ls_where
      LET ls_sql = "SELECT COUNT(1) FROM (", "SELECT DISTINCT  'Y',  gzgf001,gzdel003,gzgg001,gzge003 
  FROM  gzgg_t LEFT OUTER JOIN gzgf_t ON gzgf000 = gzgg000 LEFT OUTER JOIN gzdel_t ON gzgf001 = gzdel001 AND gzdel002 = '",g_lang,"'  LEFT OUTER JOIN gzge_t ON gzgg000 = gzge000 AND gzgg001 = gzge001 AND gzge002 =  '",g_lang,"'  
  WHERE  1=1  AND ", ls_where CLIPPED, "
  ORDER BY gzgf001", ")"
      LET ls_sql_1 = "SELECT DISTINCT  'Y',  gzgf001,gzdel003,gzgg001,gzge003 
  FROM  gzgg_t LEFT OUTER JOIN gzgf_t ON gzgf000 = gzgg000 LEFT OUTER JOIN gzdel_t ON gzgf001 = gzdel001 AND gzdel002 = '",g_lang,"'  LEFT OUTER JOIN gzge_t ON gzgg000 = gzge000 AND gzgg001 = gzge001 AND gzge002 =  '",g_lang,"'  
  WHERE  1=1  AND ", ls_where CLIPPED, "
  ORDER BY gzgf001"
      CALL azzi850_q_gzgg001_sql_verify(ls_sql_1)
      PREPARE qry_count FROM ls_sql
      EXECUTE qry_count INTO g_data_cnt
   ELSE
      LET g_data_cnt = p_data_cnt
   END IF
 
   IF g_data_cnt > 0 THEN
      IF g_data_cnt MOD gi_page_count = 0 THEN
         LET g_page_last = g_data_cnt / gi_page_count   #總筆數 / 每頁顯現資料筆數
      ELSE
         LET g_page_last = g_data_cnt / gi_page_count + 1
      END IF
   ELSE
      LET g_page_last = 0
   END IF
  
   DISPLAY g_data_cnt TO formonly.count    #顯示總筆數
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_sql_verify" order="13" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 進行SQL驗證
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_sql_verify(p_sql)
   DEFINE p_sql      STRING
   DEFINE l_sql      STRING
   DEFINE l_sql_msg  STRING
   
   TRY
      LET l_sql = "SELECT COUNT(1) FROM (",p_sql,")"
       
      #實際進行驗證
      EXECUTE IMMEDIATE l_sql

      MESSAGE 'Verify OK!' 
   CATCH
      DISPLAY ":SQLCA.SQLCODE=",SQLCA.SQLCODE,SQLERRMESSAGE
      LET l_sql_msg = ":SQLCA.SQLCODE=",SQLCA.SQLCODE,ASCII 10," \ sql = ",l_sql,ASCII 10," \ SQLERRMESSAGE=",SQLERRMESSAGE
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = l_sql_msg 
      LET g_errparam.code   =  "adz-00024" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END TRY 
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_sqlwhere" order="14" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_sqlwhere()
 
   DEFINE ls_where   STRING
 
   LET ls_where = gi_cons_where CLIPPED   #gi_cons_where 螢幕抓取的where 條件
 
   #在input段開窗的時候自動加入<inwc></inwc>之間的where條件 cch_20130605
   IF  g_qryparam.state = "i" THEN
      LET ls_where = ls_where," ","AND gzgfstus = 'Y' AND gzgf004 = 'default' AND gzgf005 = 'default'  AND gzgg002 = '",g_lang,"'",
                     " AND gzgf001 LIKE '",g_qryparam.arg1 CLIPPED,"'"
      IF NOT cl_null(g_qryparam.arg2) THEN               
         LET ls_where = ls_where," AND gzgg001 NOT IN ",g_qryparam.arg2
      END IF                          
   END IF
   
   IF NOT cl_null(g_qryparam.where) THEN
      LET ls_where = ls_where, " AND ", g_qryparam.where CLIPPED   # g_qryparam.where查詢資料的條件
   END IF
   RETURN ls_where
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_set_pagebutton" order="15" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 設定上下頁按鈕狀態
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_set_pagebutton(pdig_curr)
   DEFINE pdig_curr ui.Dialog
 
   CALL pdig_curr.setActionActive("pg_first", 0)
   CALL pdig_curr.setActionActive("pg_prev", 0)
   CALL pdig_curr.setActionActive("pg_next", 0)
   CALL pdig_curr.setActionActive("pg_last", 0)
 
   IF g_page_idx > 1 THEN
      CALL pdig_curr.setActionActive("pg_first", 1)
      CALL pdig_curr.setActionActive("pg_prev", 1)
   END IF
 
   IF g_page_idx < g_page_last THEN
      CALL pdig_curr.setActionActive("pg_next", 1)
      CALL pdig_curr.setActionActive("pg_last", 1)
   END IF
   
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_get_multiret" order="16" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 查詢報表欄位查詢
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_get_multiret()
 
   DEFINE li_i   LIKE type_t.num10
 
   IF g_qryparam.state = "c" THEN
      LET g_qryparam.return1 = ""
      FOR li_i = 1 TO gr_qry_sel.getLength()
         IF gr_qry_sel[li_i].check = "Y" THEN
            #@因為複選資料(display array)只能回傳一個欄位的組合字串.這裡不處理多欄位的回傳,以序號最小的回傳欄位為回傳值
            IF cl_null(g_qryparam.return1) THEN
               LET g_qryparam.return1 = gr_qry_sel[li_i].gzgg001_3 

            ELSE
               LET g_qryparam.return1 = g_qryparam.return1 , "|", gr_qry_sel[li_i].gzgg001_3 
 
            END IF
         END IF
      END FOR
   END IF
 
   IF g_qryparam.state = "m" THEN
      CALL g_qryparam.str_array.clear()
 
      FOR li_i = 1 TO gr_qry_sel.getLength()
         #DISPLAY "gr_qry_sel[",li_i,"] = ",gr_qry_sel[li_i].*
         
         LET g_qryparam.str_array[li_i] = gr_qry_sel[li_i].gzgg001_3
         #DISPLAY "g_qryparam.str_array[",li_i,"] = ",g_qryparam.str_array[li_i]
      END FOR
   END IF
 
END FUNCTION]]>
  </point>
  <point name="function.azzi850_q_gzgg001_qry_check" order="17" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 查詢報表欄位查詢
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/7 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_q_gzgg001_qry_check(p_mode,p_check,p_start,p_end)
   DEFINE p_mode   STRING                 #選取方式
   DEFINE p_check  LIKE type_t.chr1    #選取狀態 Y/N
   DEFINE p_start  LIKE type_t.num10   #此頁選取範圍第一筆
   DEFINE p_end    LIKE type_t.num10   #此頁選取範圍最後一筆
   DEFINE li_i     LIKE type_t.num10
   DEFINE li_j     LIKE type_t.num10
   DEFINE l_check  LIKE type_t.chr1
   DEFINE l_str1   STRING
   DEFINE l_str2   STRING
 
   CASE
      #全部選取
      WHEN p_mode = "selectall"
         IF g_data_cnt > g_sel_limit THEN   #選取資料筆數超出系統容許上限
            #qry-005:選取資料筆數超出系統容許上限%1
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = g_sel_limit
            LET g_errparam.code   =  "9035" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         ELSE
            FOR li_i = p_start TO p_end
               LET gr_qry[li_i].check = "Y"
            END FOR
 
            CALL gr_qry_sel.clear()
            LET li_i = 1
            FOREACH lcurs_qry_all INTO gr_qry_sel[li_i].*
               LET li_i = li_i + 1
            END FOREACH
            CALL gr_qry_sel.deleteElement(li_i)
         END IF
      #全部取消選取
      WHEN p_mode = "selectnone"
         CALL gr_qry_sel.clear()
         FOR li_i = p_start TO p_end
            LET gr_qry[li_i].check = "N"
         END FOR
      #改變單筆資料的選取狀態/此頁全選/此頁取消選取
      WHEN p_end > 0 AND (cl_null(p_mode) OR p_mode = "selectpageall" OR p_mode = "selectpagenone")
         FOR li_i = p_start TO p_end
         	  #將所有欄位值串在一起,以利做開窗record唯一值判斷
            #要和已被選取的陣列(gr_qry_sel)做唯一值判斷比較
         	  LET l_str1 = gr_qry[li_i].gzgf001_1, gr_qry[li_i].gzdel003_2, gr_qry[li_i].gzgg001_3, gr_qry[li_i].gzge003_4
         	  
            IF p_check = "Y" THEN
               IF gr_qry_sel.getLength() >= g_sel_limit THEN   #選取資料筆數超出系統容許上限
                  LET gr_qry[li_i].check = "N"
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_sel_limit
                  LET g_errparam.code   =  "9035" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  EXIT FOR
               ELSE
                  LET l_check = "Y"
                  LET gr_qry[li_i].check = "Y"             #此頁全選時,用程式批次改變值
                  FOR li_j = 1 TO gr_qry_sel.getLength()   #勾選清單中有此筆資料
                     LET l_str2 = gr_qry_sel[li_j].gzgf001_1, gr_qry_sel[li_j].gzdel003_2, gr_qry_sel[li_j].gzgg001_3, gr_qry_sel[li_j].gzge003_4
                     IF l_str1 = l_str2 THEN
                        LET l_check = ""
                        EXIT FOR
                     END IF
                  END FOR
                  IF l_check = "Y" THEN  #加入勾選清單
                     LET li_j = gr_qry_sel.getLength() + 1
                     LET gr_qry_sel[li_j].* = gr_qry[li_i].*
                  END IF
               END IF
            ELSE
               LET gr_qry[li_i].check = "N"             #此頁取消選取時,用程式批次改變值
               FOR li_j = 1 TO gr_qry_sel.getLength()   #刪除勾選清單中的此筆資料
                  LET l_str2 = gr_qry_sel[li_j].gzgf001_1, gr_qry_sel[li_j].gzdel003_2, gr_qry_sel[li_j].gzgg001_3, gr_qry_sel[li_j].gzge003_4
                  IF l_str1 = l_str2 THEN
                      CALL gr_qry_sel.deleteElement(li_j)
                     EXIT FOR
                  END IF
               END FOR
            END IF
         END FOR
   END CASE
   
END FUNCTION]]>
  </point>
  <point name="function.azzi850_get_gzgf014" order="18" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得XG排除欄位
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/11/10 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_get_gzgf014(p_gzgf001)
   DEFINE p_gzgf001      LIKE gzgf_t.gzgf001
   DEFINE r_str          STRING
   DEFINE l_sql          STRING
   DEFINE l_tmp          STRING
   DEFINE l_gzgf014      LIKE gzgf_t.gzgf014  
   DEFINE l_gzgf015      LIKE gzgf_t.gzgf015  
   DEFINE l_gzgf016      LIKE gzgf_t.gzgf016  
   DEFINE l_gzgf014_str  STRING  
   DEFINE l_gzgf015_str  STRING  
   DEFINE l_gzgf016_str  STRING  
   
   LET r_str = ""
   LET l_sql = " SELECT gzgf014,gzgf015,gzgf016 FROM gzgf_t ",
               " WHERE gzgf001 LIKE '",p_gzgf001 CLIPPED,"'",
               " AND gzgf004 = 'default' AND gzgf005 = 'default' "
   DECLARE azzi850_gzgf014_cus CURSOR FROM l_sql
   
   
   FOREACH azzi850_gzgf014_cus INTO l_gzgf014,l_gzgf015,l_gzgf016
      LET l_gzgf014_str = l_gzgf014
      WHILE TRUE
         IF NOT cl_null(l_gzgf014) THEN
            IF l_gzgf014_str.getIndexOf(",",1) > 0 THEN
               LET l_tmp = l_gzgf014_str.subString(1,l_gzgf014_str.getIndexOf(",",1)-1)
               LET l_gzgf014_str = l_gzgf014_str.subString(l_gzgf014_str.getIndexOf(",",1)+1,l_gzgf014_str.getLength())
               LET r_str = r_str,"'",l_tmp CLIPPED,"',"
            ELSE
               LET r_str = r_str,"'",l_gzgf014_str CLIPPED,"',"
               EXIT WHILE                
            END IF
         ELSE
            EXIT WHILE         
         END IF
      END WHILE

      LET l_gzgf015_str = l_gzgf015
      WHILE TRUE
         IF NOT cl_null(l_gzgf015) THEN
            IF l_gzgf015_str.getIndexOf(",",1) > 0 THEN
               LET l_tmp = l_gzgf015_str.subString(1,l_gzgf015_str.getIndexOf(",",1)-1)
               LET l_gzgf015_str = l_gzgf015_str.subString(l_gzgf015_str.getIndexOf(",",1)+1,l_gzgf015_str.getLength())
               LET r_str = r_str,"'",l_tmp CLIPPED,"',"
            ELSE
               LET r_str = r_str,"'",l_gzgf015_str CLIPPED,"',"
               EXIT WHILE                
            END IF
         ELSE
            EXIT WHILE         
         END IF
      END WHILE
      
      LET l_gzgf016_str = l_gzgf016
      WHILE TRUE
         IF NOT cl_null(l_gzgf016) THEN
            IF l_gzgf016_str.getIndexOf(",",1) > 0 THEN
               LET l_tmp = l_gzgf016_str.subString(1,l_gzgf016_str.getIndexOf(",",1)-1)
               LET l_gzgf016_str = l_gzgf016_str.subString(l_gzgf016_str.getIndexOf(",",1)+1,l_gzgf016_str.getLength())
               LET r_str = r_str,"'",l_tmp CLIPPED,"',"
            ELSE
               LET r_str = r_str,"'",l_gzgf016_str CLIPPED,"',"
               EXIT WHILE                
            END IF
         ELSE
            EXIT WHILE         
         END IF
      END WHILE
   END FOREACH
   
   IF NOT cl_null(r_str) THEN
      LET r_str = r_str.subString(1,r_str.getLength()-1)
      LET r_str = "(",r_str,")"
      #DISPLAY "排除欄位:",r_str 
   END IF
   
   RETURN r_str
END FUNCTION]]>
  </point>
  <point name="function.azzi850_chk_gzyd003_fk" order="19" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢核 gzyd003 FK
# Memo...........:
# Usage..........: CALL azzi850_chk_gzyd003_fk(pc_dzeb001)
#                  RETURNING li_chk
# Input parameter: pc_dzeb001
# Return code....: li_chk
# Date & Author..: 2014/11/18 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_chk_gzyd003_fk(pc_dzeb001)
   DEFINE pc_dzeb001 LIKE dzeb_t.dzeb001
   DEFINE lc_dzed004 LIKE dzed_t.dzed004
   DEFINE li_chk     LIKE type_t.num5
   DEFINE l_token     base.StringTokenizer
   DEFINE ls_token   STRING 
   
   LET li_chk = FALSE 
   
   DECLARE azzi850_chk_gzyd003_fk_pre CURSOR FOR 
    SELECT dzed004 FROM dzed_t
     WHERE dzed001 = pc_dzeb001 
      AND dzed003 = 'F'

   FOREACH azzi850_chk_gzyd003_fk_pre INTO lc_dzed004
     LET l_token = base.StringTokenizer.create(lc_dzed004,",")
     WHILE l_token.hasMoreTokens()
       LET ls_token = l_token.nextToken()
       IF ls_token = g_gzyb4_d[g_detail_idx2].gzyd003 THEN 
          LET li_chk = TRUE 
          EXIT WHILE  
       END IF 
     END WHILE  
   END FOREACH 
   
   CLOSE azzi850_chk_gzyd003_fk_pre
   RETURN li_chk
END FUNCTION]]>
  </point>
  <point name="function.azzi850_chk_gzyd003" order="20" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 規則設計器中設定的PK與FK欄位也不可設定遮罩
# Memo...........:
# Usage..........: CALL azzi850_chk_gzyd003(pc_dzeb001)
#                  RETURNING 回传参数
# Input parameter: pc_dzeb001
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2014/11/19 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_chk_gzyd003(pc_dzeb001)
   DEFINE pc_dzeb001  LIKE dzeb_t.dzeb001 #表格編號
   DEFINE lc_dzag002  LIKE dzag_t.dzag002
   DEFINE li_max      LIKE type_t.num5
   DEFINE li_cnt      LIKE type_t.num5
   DEFINE lc_dzag008  LIKE dzag_t.dzag008
   DEFINE lc_dzag010  LIKE dzag_t.dzag010
   DEFINE li_chk      LIKE type_t.num5
   DEFINE l_token     base.StringTokenizer
   DEFINE l_token2    base.StringTokenizer
   DEFINE ls_token    STRING 

   LET li_chk = FALSE 
   SELECT MAX(dzag003) INTO li_max
    FROM dzag_t WHERE dzag001 = g_gzyb_d[g_detail_idx].gzza001_desc

   LET li_chk = FALSE
   SELECT dzag008,dzag010 INTO lc_dzag008,lc_dzag010 FROM dzag_t
    WHERE dzag001 = g_gzyb_d[g_detail_idx].gzza001_desc
     AND  dzag002 = pc_dzeb001 
     AND  dzag003 = li_max 

   IF NOT cl_null(lc_dzag008) THEN 
      LET l_token = base.StringTokenizer.create(lc_dzag008,",")
      WHILE l_token.hasMoreTokens()
         LET ls_token = l_token.nextToken()
         IF ls_token = g_gzyb4_d[g_detail_idx2].gzyd003 THEN 
            LET li_chk = TRUE 
            EXIT WHILE  
         END IF 
      END WHILE  
   END IF
   IF li_chk THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "azz-00266" #規則設計器中設定的PK欄位，不可設定遮罩
      LET g_errparam.extend = ls_token
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE
   END IF  

   LET li_chk =  FALSE  
   IF NOT cl_null(lc_dzag010) THEN 
      LET l_token2 = base.StringTokenizer.create(lc_dzag010,",")
      WHILE l_token2.hasMoreTokens()
         LET ls_token = l_token2.nextToken()
         IF ls_token = g_gzyb4_d[g_detail_idx2].gzyd003 THEN 
            LET li_chk = TRUE 
            EXIT WHILE  
         END IF 
      END WHILE 
   END IF 

   IF li_chk THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "azz-00267" #規則設計器中設定的FK欄位，不可設定遮罩
      LET g_errparam.extend = ls_token
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE
   END IF

   RETURN TRUE 
END FUNCTION]]>
  </point>
  <point name="function.azzi850_chk_gzyd003_lang" order="21" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢核多語言欄位不可以遮罩
# Memo...........:
# Usage..........: CALL azzi850_chk_gzyd003_lang()
#                  RETURNING 回传参数
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/11/19 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_chk_gzyd003_lang()
    DEFINE lc_dzeb008 LIKE dzeb_t.dzeb008

   SELECT dzeb008 INTO lc_dzeb008 FROM dzea_t
    INNER JOIN dzeb_t ON dzea001 = dzeb001 
     AND dzeb002 = g_gzyb4_d[g_detail_idx2].gzyd003 AND dzea004 ='L'

   IF lc_dzeb008 >= 80 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "azz-00265" #多語言欄位不可設定遮罩
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE
   END IF 
   RETURN TRUE 
END FUNCTION]]>
  </point>
  <point name="function.azzi850_qry_gzzr" order="22" ver="12" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 撈取gzzr
# Memo...........:
# Usage..........: azzi850_qry_gzzr(lc_gzzr001)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 日期 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_qry_gzzr(lc_gzzr001)
   DEFINE lc_gzzr001 LIKE gzzr_t.gzzr001
   DEFINE la_gzzr002 DYNAMIC ARRAY OF LIKE gzzr_t.gzzr002
   DEFINE ls_sql     STRING
   DEFINE li_cnt     LIKE type_t.num5
   #gzzr005  #功能權限識別碼 (1:功能/2:權限/3:都有)
   LET ls_sql = "SELECT gzzr002 FROM gzzr_t ",
                " WHERE gzzr001 = '",lc_gzzr001 CLIPPED,"' ",
                  " AND (gzzr005 = '2' OR gzzr005 = '3')"

   DECLARE azzp185_qry_gzzr_cs CURSOR FROM ls_sql

   #存在本作業權限項目時, 展開營運據點(全部)
   CALL la_gzzr002.clear()
   LET li_cnt = 1
   FOREACH azzp185_qry_gzzr_cs INTO la_gzzr002[li_cnt]
      IF la_gzzr002[li_cnt] IS NULL THEN
         CALL la_gzzr002.deleteElement(li_cnt)
      END IF
      LET li_cnt = la_gzzr002.getLength() + 1
   END FOREACH
   CALL la_gzzr002.deleteElement(li_cnt)

   CLOSE azzp185_qry_gzzr_cs
   FREE azzp185_qry_gzzr_cs

   RETURN la_gzzr002
END FUNCTION]]>
  </point>
  <point name="function.azzi850_upd_action_batch" order="23" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 批次更新action 新增或刪除
# Memo...........:
# Usage..........: CALL azzi850_upd_action_batch()
#                  RETURNING 回传参数
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/12/05 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_upd_action_batch()
   DEFINE lwin_curr      ui.Window
   DEFINE lfrm_curr      ui.Form
   DEFINE ls_path        STRING
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5 
   DEFINE  li_cnt                LIKE type_t.num5  
   DEFINE  li_rec_b              LIKE type_t.num5
   DEFINE  l_ac_act              LIKE type_t.num5
   DEFINE  li_detail_idx         LIKE type_t.num5
   DEFINE  li_count              LIKE type_t.num5
   
   WHENEVER ERROR CALL cl_err_msg_log

   OPEN WINDOW w_azzi850_s02 WITH FORM cl_ap_formpath("azz","azzi850_s02")
      ATTRIBUTE(STYLE="openwin")

    #瀏覽頁簽資料初始化
   LET lwin_curr = ui.Window.getCurrent()
   LET lfrm_curr = lwin_curr.getForm()
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   LET ls_path = os.Path.join(ls_path,"toolbar_i.4tb")
   CALL lfrm_curr.loadToolBar(ls_path)

   
   DISPLAY g_gzya_m.gzya001 TO gzyc001
   LET li_rec_b = 0 
   CALL g_gzyc_d.clear()
    
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
     INPUT ARRAY g_gzyc_d FROM s_detail1_s02.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
        
         BEFORE INPUT

            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzyc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            IF li_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac_act)
            END IF
            LET li_rec_b = g_gzyc_d.getLength()

         BEFORE ROW
 
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_act = ARR_CURR()
            LET li_detail_idx = l_ac_act

            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac_act TO FORMONLY.idx
            DISPLAY g_gzyc_d.getLength() TO FORMONLY.cnt

            LET li_rec_b = g_gzyc_d.getLength()
            
            IF li_rec_b >= l_ac_act 
               AND g_gzyc_d[l_ac_act].gzyc003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzyc_d_t.* = g_gzyc_d[l_ac_act].*  #BACKUP
               LET g_gzyc_d_o.* = g_gzyc_d[l_ac_act].*  #BACKUP    
               CALL cl_show_fld_cont()
               
            ELSE
               LET l_cmd='a'
            END IF

         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzyc_d[l_ac_act].* TO NULL 
            INITIALIZE g_gzyc_d_t.* TO NULL 
            INITIALIZE g_gzyc_d_o.* TO NULL 
            #公用欄位給值(單身)
            LET g_gzyc_d[l_ac_act].choice = 'Y'

            LET g_gzyc_d_t.* = g_gzyc_d[l_ac_act].*     #新輸入資料
            LET g_gzyc_d_o.* = g_gzyc_d[l_ac_act].*     #新輸入資料
            CALL cl_show_fld_cont()
    
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               LET li_rec_b = li_rec_b + 1
               DISPLAY g_gzyc_d.getLength() TO FORMONLY.cnt
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
  
               LET li_rec_b = li_rec_b-1
               DISPLAY g_gzyc_d.getLength() TO FORMONLY.cnt
               LET l_count = g_gzyc_d.getLength()
            END IF 
              
         AFTER DELETE 
            IF l_cmd = 'd' THEN 

            ELSE
            END IF
            #如果是最後一筆
            IF l_ac_act = (g_gzyc_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac_act-1)
            END IF
 
         BEFORE FIELD gzyc003

         AFTER FIELD gzyc003
         
           LET li_count = 0 
           #開始比對 重複的就不加進來
           IF g_gzyc_d.getLength() <> 1 THEN 
              FOR li_cnt = 1 TO g_gzyc_d.getLength()
                  IF g_gzyc_d[l_ac_act].gzyc003 = g_gzyc_d[li_cnt].gzyc003 THEN 
                     LET li_count = li_count + 1 
                     IF li_count > 1 THEN 
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = 'INSERT' 
                        LET g_errparam.code   = "std-00006" 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err()
                        NEXT FIELD gzyc003  
                     END IF   
                  END IF 
              END FOR        
           END IF
           # 假如是 gzyc003_desc 是NULL 取標準action           
           IF g_gzyc_d[l_ac_act].gzyc003_desc IS NULL THEN 
              LET g_ref_fields[1] = "standard"
              LET g_ref_fields[2] = g_gzyc_d[l_ac_act].gzyc003
              CALL ap_ref_array2(g_ref_fields,"SELECT gzzq004 FROM gzzq_t WHERE gzzq001=? AND gzzq002=? AND gzzq003='"||g_lang||"'","") RETURNING g_rtn_fields
              LET g_gzyc_d[l_ac_act].gzyc003_desc = '', g_rtn_fields[1] , ''
              DISPLAY g_gzyc_d[l_ac_act].gzyc003_desc TO gzyc003_desc 
           END IF  
         ON CHANGE gzyc003

         ON ACTION controlp INFIELD gzyc003
        
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            #LET g_qryparam.default1 = g_gzyb_d[l_ac].gzyb002             #給予default值
            CALL q_gzzq001()                                           #呼叫開窗
            LET g_gzyc_d[l_ac_act].gzyc003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_gzyc_d[l_ac_act].gzyc003_desc = g_qryparam.return2
            DISPLAY g_gzyc_d[l_ac_act].gzyc003 TO gzyc003                    #顯示到畫面上
            NEXT FIELD gzyc003                                           #返回原欄位

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               LET g_gzyc_d[l_ac_act].* = g_gzyc_d_t.*

               EXIT DIALOG 
            END IF
             
         AFTER ROW
               
         AFTER INPUT

         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzyc_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzyc_d.getLength()+1
            
      END INPUT

      ON ACTION ACCEPT

         ACCEPT DIALOG

      ON ACTION CANCEL       #在dialog button (放棄)
         IF cl_ask_confirm("azz-00281") THEN 
            LET INT_FLAG = TRUE 
            EXIT DIALOG
         ELSE
            CONTINUE DIALOG
         END IF 
 
      ON ACTION CLOSE        #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION EXIT         #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG

   IF INT_FLAG THEN
      LET INT_FLAG = 0
   ELSE
      IF g_gzyc_d.getLength() > 0 THEN
         CALL cl_progress_bar(g_gzyc_d.getLength())         
         #批次更新新增或刪除action
         CALL azzi850_upd_action_batch_do() 
         #填充下層單身資料
         CALL azzi850_b_fill2('2')
         #填充下層單身資料
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = "azz-00280" 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()          
      END IF   
   END IF 
 
   CLOSE WINDOW w_azzi850_s02  
END FUNCTION]]>
  </point>
  <point name="function.azzi850_upd_action_batch_do" order="24" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: ACTION 開始新增或取消
# Memo...........:
# Usage..........: CALL azzi850_upd_action_batch_do()
#                  RETURNING 
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/12/05 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi850_upd_action_batch_do()
   DEFINE li_cnt     LIKE type_t.num5
   DEFINE li_cnt2    LIKE type_t.num5
   DEFINE ls_sql     STRING 
   DEFINE lc_gzyb002 LIKE gzyb_t.gzyb002 #作業編號

   FOR li_cnt = 1 TO g_gzyc_d.getLength()
       CALL cl_progress_ing("processing..." || g_gzyc_d[li_cnt].gzyc003) 
       IF cl_null(g_gzyc_d[li_cnt].gzyc003) THEN
         CONTINUE FOR
       END IF

           DECLARE azzi950_upd_action_batch_cs CURSOR FOR 
            SELECT gzyb002 FROM gzyb_t 
             WHERE gzybent = g_enterprise 
              AND gzyb001 = g_gzya_m.gzya001 #職能角色

        FOREACH azzi950_upd_action_batch_cs INTO lc_gzyb002

           CASE
                  #新增 action 
              WHEN g_gzyc_d[li_cnt].choice = "Y"  
                 SELECT COUNT(*) INTO li_cnt2 FROM gzyc_t 
                  WHERE gzycent = g_enterprise 
                   AND gzyc001 = g_gzya_m.gzya001         #職能角色
                   AND gzyc002 = lc_gzyb002               #作業編號
                   AND gzyc003 = g_gzyc_d[li_cnt].gzyc003 #功能編號 action id    
                   
                   IF li_cnt2 > 0 THEN # 大於0 表示有這筆action 就UPDATE

                       UPDATE gzyc_t SET gzyc004 = 'Y' 
                        WHERE gzycent = g_enterprise 
                         AND gzyc001 = g_gzya001_t 
                         AND gzyc002 = lc_gzyb002  
                         AND gzyc003 = g_gzyc_d[li_cnt].gzyc003

                        IF SQLCA.SQLCODE THEN 
                           DISPLAY "Warning :",SQLCA.SQLCODE  , "更新action錯誤 職能角色:",g_gzya_m.gzya001 ," 作業編號:",lc_gzyb002 , " 功能編號:",g_gzyc_d[li_cnt].gzyc003
                        END IF
                        CONTINUE FOREACH 
                     END IF 

                     # li_cnt2 = 0 回到 gzzr_t 撈取是否有此筆資料，有就 insert 沒有就不理
                     SELECT gzzr002 INTO g_gzyc_d[li_cnt].gzyc003 FROM gzzz_t
                      INNER JOIN gzyb_t ON gzzz001 = gzyb002
                       AND gzybent = g_enterprise AND gzyb001 = g_gzya_m.gzya001
                      INNER JOIN gzzr_t ON gzzr001 = gzzz002 
                       AND gzzr002 = g_gzyc_d[li_cnt].gzyc003 and gzzr005 = '3'  #gzzr005 功能權限識別碼 (1:功能/2:權限/3:都有)
                      WHERE gzyb002 = lc_gzyb002 

                      IF SQLCA.SQLCODE THEN 
                         CONTINUE FOREACH 
                      END IF 
                 
                      INSERT INTO gzyc_t(gzycent,gzyc001,gzyc002,gzyc003,gzyc004,gzyc005)
                       VALUES(g_enterprise,g_gzya_m.gzya001,lc_gzyb002,g_gzyc_d[li_cnt].gzyc003,'Y','F') 

                      IF SQLCA.SQLCODE THEN
                        DISPLAY "Warning :",SQLCA.SQLCODE  , " 新增action錯誤 職能角色:",g_gzya_m.gzya001 ," 作業編號:",lc_gzyb002 ," 功能編號:" ,g_gzyc_d[li_cnt].gzyc003
                      END IF 
                 
                 #取消 action 
                 WHEN g_gzyc_d[li_cnt].choice = "N"  
                    UPDATE gzyc_t SET gzyc004 = 'N'                    
                     WHERE gzycent = g_enterprise 
                      AND gzyc001 = g_gzya001_t 
                      AND gzyc002 = lc_gzyb002  
                      AND gzyc003 = g_gzyc_d[li_cnt].gzyc003
                   
                   IF SQLCA.SQLCODE THEN
                      DISPLAY "Warning :SQLCA.SQLCODE ",SQLCA.SQLCODE ," SQLCA.SQLERRD[3] ",SQLCA.SQLERRD[3] , " 取消action錯誤 職能角色:",g_gzya_m.gzya001 , " 作業編號:",lc_gzyb002 ," 功能編號:" ,g_gzyc_d[li_cnt].gzyc003
                   END IF
              END CASE
          END FOREACH 
   END FOR 
END FUNCTION]]>
  </point>
  <point name="b_fill2.fill2" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_ref_fields[1] = g_gzyb_d[g_detail_idx].gzyb002
            LET g_ref_fields[2] = g_gzyb3_d[l_ac].gzyc003
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzq004 FROM gzzq_t WHERE gzzq001=? AND gzzq002=? AND gzzq003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzyb3_d[l_ac].gzyc003_desc = '', g_rtn_fields[1] , ''
            IF cl_null(g_gzyb3_d[l_ac].gzyc003_desc) THEN
               LET g_ref_fields[1] = "standard"
               LET g_ref_fields[2] = g_gzyb3_d[l_ac].gzyc003
               CALL ap_ref_array2(g_ref_fields,"SELECT gzzq004 FROM gzzq_t WHERE gzzq001=? AND gzzq002=? AND gzzq003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_gzyb3_d[l_ac].gzyc003_desc = '', g_rtn_fields[1] , ''
            END IF ]]>
  </point>
  <point name="construct.a.page4.gzyd004" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.c.gzyacrtdp" order="" ver="15" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzyacrtdp  #顯示到畫面上
            NEXT FIELD gzyacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzyacrtid" order="" ver="15" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzyacrtid  #顯示到畫面上
            NEXT FIELD gzyacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzyamodid" order="" ver="15" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzyamodid  #顯示到畫面上
            NEXT FIELD gzyamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzyaowndp" order="" ver="15" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzyaowndp  #顯示到畫面上
            NEXT FIELD gzyaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.gzyaownid" order="" ver="15" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzyaownid  #顯示到畫面上
            NEXT FIELD gzyaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.gzyb002" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gzyb002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzyb002  #顯示到畫面上
            NEXT FIELD gzyb002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.gzyd003" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            IF l_xg_cnt > 0 THEN             
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               
               #LET g_qryparam.default1 = g_gzyb4_d[l_ac].gzyd003             #給予default值
               
               #給予arg
               CALL azzi850_get_gzgf014(l_gzgf001) RETURNING l_str 
               LET g_qryparam.arg1 = l_gzgf001
               LET g_qryparam.arg2 = l_str
               CALL azzi850_q_gzgg001()
               LET g_gzyb4_d[l_ac].gzyd003 = g_qryparam.return1              
               LET g_gzyb4_d[l_ac].gzyd004 = "1"              
               DISPLAY g_gzyb4_d[l_ac].gzyd003 TO gzyd003                 
               DISPLAY g_gzyb4_d[l_ac].gzyd004 TO gzyd004              
            ELSE   
               ###非XG            
               #開窗c段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_gzyd003()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO gzyd003  #顯示到畫面上
               NEXT FIELD gzyd003                     #返回原欄位
            END IF
]]>
  </point>
  <point name="cs.before_construct" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_ac = 1]]>
  </point>
  <point name="cs.body3.before_construct" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL cl_set_comp_visible("gzyd005",TRUE)            
            LET l_xg_cnt = 0
            LET l_gzgf001 = g_gzyb_d[1].gzza001_desc CLIPPED,"%"
            SELECT COUNT(gzgf001) INTO l_xg_cnt FROM gzgf_t
             WHERE gzgf001 LIKE l_gzgf001
               AND gzgf004 = 'default' AND gzgf005 = 'default'
            IF l_xg_cnt > 0 THEN
               CALL cl_set_comp_visible("gzyd005",TRUE) 
            ELSE
               CALL cl_set_comp_visible("gzyd005",FALSE)                         
            END IF]]>
  </point>
  <point name="cs.define" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_xg_cnt    LIKE type_t.num5                #檢查XG樣板
   DEFINE l_gzgf001   LIKE gzgf_t.gzgf001
   DEFINE l_str       STRING
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE l_dzeb007              LIKE dzeb_t.dzeb007   ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_gzya_m.gzya001 = "admin-01" THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00166"
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN
      END IF ]]>
  </point>
  <point name="global.variable" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[###XG欄位開窗(s)
#開窗畫面顯示欄位 type 宣告
 TYPE type_gr_qry RECORD
         check       LIKE type_t.chr1,
         gzgf001_1   LIKE gzgf_t.gzgf001, 
         gzdel003_2  LIKE gzdel_t.gzdel003, 
         gzgg001_3   LIKE gzgg_t.gzgg001, 
         gzge003_4   LIKE gzge_t.gzge003
       END RECORD
       
DEFINE gr_qry            DYNAMIC ARRAY OF type_gr_qry
DEFINE gr_qry_sel        DYNAMIC ARRAY OF type_gr_qry  #多選時記錄已勾選的資料

DEFINE gi_multi_sel      LIKE type_t.num5   #是否需要複選資料(TRUE/FALSE)
DEFINE gi_need_cons      LIKE type_t.num5   #是否需要CONSTRUCT(TRUE/FALSE)
DEFINE gi_cons_where     STRING                #暫存CONSTRUCT區塊的WHERE條件
DEFINE gi_cons_where_old STRING                #暫存CONSTRUCT區塊的WHERE條件(舊的,用來比對條件是否改變)
 
DEFINE gs_default1       STRING 

DEFINE gi_page_count     LIKE type_t.num10  #每頁顯現資料筆數
DEFINE gs_pageswitch     STRING                #選擇的頁面
DEFINE gs_action         STRING
DEFINE gi_reconstruct    LIKE type_t.num5   #重新查詢
DEFINE g_pagestart_s     LIKE type_t.num5
DEFINE g_data_cnt        LIKE type_t.num5
DEFINE g_page_idx        LIKE type_t.num5   #目前所在頁數
DEFINE g_page_last       LIKE type_t.num5   #最後一頁
DEFINE g_sel_limit       LIKE type_t.num5   #選擇筆數的上限
DEFINE gwin_curr_s       ui.Window  
###XG欄位開窗(e)  

#單身 type 宣告
 TYPE type_g_gzyc_d        RECORD
   gzyc003      LIKE gzyc_t.gzyc003, 
   gzyc003_desc LIKE type_t.chr500, 
   choice       LIKE type_t.chr1

       END RECORD
DEFINE g_gzyc_d          DYNAMIC ARRAY OF type_g_gzyc_d
DEFINE g_gzyc_d_o        type_g_gzyc_d
DEFINE g_gzyc_d_t        type_g_gzyc_d 
DEFINE g_cnt_gzzc        LIKE type_t.num5
DEFINE gs_gzze003_b      LIKE gzze_t.gzze003
DEFINE gs_gzze003_c      LIKE gzze_t.gzze003
DEFINE gs_gzze003_d      LIKE gzze_t.gzze003]]>
  </point>
  <point name="init.init" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_datamask("gzyd005")

   SELECT gzze003 INTO gs_gzze003_b FROM gzze_t
    WHERE gzze001 = "lib-488"
      AND gzze002 = g_dlang

   SELECT gzze003 INTO gs_gzze003_c FROM gzze_t
    WHERE gzze001 = "lib-486"
      AND gzze002 = g_dlang

   SELECT gzze003 INTO gs_gzze003_d FROM gzze_t
    WHERE gzze001 = "lib-487"
      AND gzze002 = g_dlang]]>
  </point>
  <point name="input.a.gzyal003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[              IF NOT cl_null(g_gzya_m.gzyal003) THEN
               IF NOT cl_chk_tworcn(g_lang,g_gzya_m.gzyal003,20) THEN
                  NEXT FIELD gzyal003
               END IF 
            END IF]]>
  </point>
  <point name="input.a.page1.gzyb002" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_gzyb_d[l_ac].gzyb002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_gzyb_d[l_ac].gzyb002
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_gzza001_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'azz-00083'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_gzyb_d[l_ac].gzyb002_desc = "" 
                  LET g_gzyb_d[l_ac].gzzol003_desc = ""
                  LET g_gzyb_d[l_ac].gzza001_desc = ""
                  NEXT FIELD CURRENT  
               END IF
              
 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzyb_d[l_ac].gzyb002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzyb_d[l_ac].gzyb002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzyb_d[l_ac].gzyb002_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzya_m.gzya001) AND NOT cl_null(g_gzyb_d[g_detail_idx].gzyb002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t OR g_gzyb_d[g_detail_idx].gzyb002 != g_gzyb_d_t.gzyb002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzyb_t WHERE "||"gzybent = '" ||g_enterprise|| "' AND "||"gzyb001 = '"||g_gzya_m.gzya001 ||"' AND "|| "gzyb002 = '"||g_gzyb_d[g_detail_idx].gzyb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  
               SELECT gzzal003,gzzj001,gzzj003,gzzz002
                INTO g_gzyb_d[l_ac].gzyb002_desc,lc_gzzj001,lc_gzzj003,g_gzyb_d[l_ac].gzza001_desc
                 FROM gzzz_t
                  INNER JOIN gzzj_t ON  gzzz005 = gzzj001
                    LEFT JOIN gzzal_t ON gzzz001 = gzzal001 AND gzzal002 = g_dlang 
                 WHERE gzzz001 = g_gzyb_d[l_ac].gzyb002  

               SELECT gzzol003 INTO lc_gzzol003 FROM gzzol_t
                WHERE gzzol001 = lc_gzzj003
                 AND gzzol002 = g_dlang
           
               CASE
                 WHEN lc_gzzj001[1,1] = "B"    # 行業共用模組
                    LET g_gzyb_d[l_ac].gzzol003_desc = gs_gzze003_b,lc_gzzol003 CLIPPED

                 WHEN lc_gzzj001[1,1] = "C"    # 客製標準模組
                    LET g_gzyb_d[l_ac].gzzol003_desc = gs_gzze003_c,lc_gzzol003 CLIPPED

                 WHEN lc_gzzj001[1,1] = "D"    # 行業別客製模組
                    LET g_gzyb_d[l_ac].gzzol003_desc = gs_gzze003_d,lc_gzzol003 CLIPPED

                 OTHERWISE   # 註冊模組
                     LET g_gzyb_d[l_ac].gzzol003_desc = lc_gzzol003 CLIPPED
                END CASE
               
                  LET lc_gzyb002 = g_gzyb_d[l_ac].gzyb002
                  #比對 gzyc是否有資料沒有進行補action
                  IF g_gzyb3_d.getLength() = 0 THEN 
                     CALL azzi850_execute_azzp185(lc_gzyb002)
                  ELSE
                     #取gzyc action 筆數 
                     SELECT COUNT(*) INTO li_cnt FROM gzyc_t
                      WHERE gzycent = g_enterprise 
                       AND gzyc001 = g_gzya_m.gzya001 
                       AND gzyc002 = lc_gzyb002 
                  
                     #取gzzr action 筆數      
                     SELECT COUNT(*) INTO li_cnt2 FROM gzzr_t
                      WHERE gzzr001 = g_gzyb_d[l_ac].gzza001_desc  
                       AND (gzzr005 = '2' OR gzzr005 = '3') 
                     #比對gzyc < gzzr 進行補action                      
                     IF li_cnt < li_cnt2 THEN 
                        CALL azzi850_execute_azzp185(lc_gzyb002)
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code   = "azz-00297"
                        LET g_errparam.popup  = TRUE
                        LET g_errparam.replace[1] = g_cnt_gzzc
                        CALL cl_err()  
                     END IF # li_cnt <> li_cnt2            
                   END IF #g_gzyb3_d.getLength()
               END IF  
            END IF
]]>
  </point>
  <point name="input.a.page3.gzyc003" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzya_m.gzya001) AND NOT cl_null(g_gzyb_d[g_detail_idx].gzyb002) AND NOT cl_null(g_gzyb3_d[g_detail_idx2].gzyc003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t OR g_gzyb_d[g_detail_idx].gzyb002 != g_gzyb_d[g_detail_idx].gzyb002 OR g_gzyb3_d[g_detail_idx2].gzyc003 != g_gzyb3_d_t.gzyc003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzyc_t WHERE "||"gzycent = '" ||g_enterprise|| "' AND "||"gzyc001 = '"||g_gzya_m.gzya001 ||"' AND "|| "gzyc002 = '"||g_gzyb_d[g_detail_idx].gzyb002 ||"' AND "|| "gzyc003 = '"||g_gzyb3_d[g_detail_idx2].gzyc003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF g_gzyb3_d[g_detail_idx2].gzyc003 = "query" OR g_gzyb3_d[g_detail_idx2].gzyc003 = "modify"
               OR g_gzyb3_d[g_detail_idx2].gzyc003 = "delete" THEN

               IF g_gzyb3_d[g_detail_idx2].gzyc005 <> "F" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = "azz-00301"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup  = TRUE
                  LET g_errparam.replace[1] = g_gzyb3_d[g_detail_idx2].gzyc003
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page3.gzyc005" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_gzyb3_d[g_detail_idx2].gzyc003 = "query" OR g_gzyb3_d[g_detail_idx2].gzyc003 = "modify"
               OR g_gzyb3_d[g_detail_idx2].gzyc003 = "delete" THEN

               IF g_gzyb3_d[g_detail_idx2].gzyc005 <> "F" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = "azz-00301"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup  = TRUE
                  LET g_errparam.replace[1] = g_gzyb3_d[g_detail_idx2].gzyc003
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page4.gzyd003" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            ###XG欄位設定(s)
            IF l_xg_cnt > 0 THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t OR g_gzyb_d[g_detail_idx].gzyb002 != g_gzyb_d[g_detail_idx].gzyb002 OR g_gzyb4_d[g_detail_idx2].gzyd003 != g_gzyb4_d_t.gzyd003)) THEN
                  IF NOT cl_null(g_gzyb4_d[g_detail_idx2].gzyd003) THEN               
                     #欄位隨便輸入，不在設定中
                     SELECT COUNT(gzgg001) INTO l_cnt FROM gzgg_t WHERE gzgg001 = g_gzyb4_d[g_detail_idx2].gzyd003
                     IF l_cnt < 1 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code   = "azz-00263"
                        LET g_errparam.extend = ""
                        LET g_errparam.popup  = TRUE
                        LET g_errparam.replace[1] = g_gzyb4_d[g_detail_idx2].gzyd003
                        CALL cl_err()     
                        
                        NEXT FIELD CURRENT
                     END IF
                  END IF   
               END IF                     
               LET g_gzyb4_d[g_detail_idx2].gzyd004 = "1"
               LET g_gzyb4_d[g_detail_idx2].gzyd005 = NULL
            ELSE            
            ###不是XG欄位設定(e)
               IF NOT cl_null(g_gzya_m.gzya001) AND NOT cl_null(g_gzyb_d[g_detail_idx].gzyb002) AND NOT cl_null(g_gzyb4_d[g_detail_idx2].gzyd003) THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzya_m.gzya001 != g_gzya001_t OR g_gzyb_d[g_detail_idx].gzyb002 != g_gzyb_d[g_detail_idx].gzyb002 OR g_gzyb4_d[g_detail_idx2].gzyd003 != g_gzyb4_d_t.gzyd003)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzyd_t WHERE "||"gzydent = '" ||g_enterprise|| "' AND "||"gzyd001 = '"||g_gzya_m.gzya001 ||"' AND "|| "gzyd002 = '"||g_gzyb_d[g_detail_idx].gzyb002 ||"' AND "|| "gzyd003 = '"||g_gzyb4_d[g_detail_idx2].gzyd003 ||"'",'std-00004',0) THEN 
                        NEXT FIELD CURRENT
                     END IF
                     #檢核gzyd003 不可以設定PK 為遮罩欄位
                     CALL azzi850_chk_gzyd003_pk() RETURNING li_chk,lc_dzeb001
                     IF li_chk THEN 
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "azz-00215"
                        LET g_errparam.extend = ""
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
   
                        NEXT FIELD CURRENT
                     END IF 
                     #檢核gzyd003 不可以設定FK 為遮罩欄位
                     IF azzi850_chk_gzyd003_fk(lc_dzeb001) THEN 
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "azz-00264"
                        LET g_errparam.extend = ""
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
   
                        NEXT FIELD CURRENT
                     END IF

                     #規則設計器中設定的PK與FK欄位也不可設定遮罩   
                     IF NOT azzi850_chk_gzyd003(lc_dzeb001) THEN 
                        NEXT FIELD CURRENT
                     END IF
#14//11/25 start     
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzyb4_d[g_detail_idx2].gzyd003
                  CALL ap_ref_array2(g_ref_fields," SELECT dzebl003 FROM dzebl_t WHERE dzebl001 = ? AND dzebl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
                  LET g_gzyb4_d[g_detail_idx2].gzyd003_desc = g_rtn_fields[1]

                  
#                     #檢核 多語言欄位 不可以遮罩
#                     IF NOT azzi850_chk_gzyd003_lang() THEN 
#                        NEXT FIELD CURRENT
#                     END IF
#
#                     #Q類的reference欄位(_desc的欄位)不可設遮罩
#                     IF g_gzyb_d[g_detail_idx].gzza001_desc[4,4] = 'q' THEN 
#                        LET ls_gzyd003 = g_gzyb4_d[g_detail_idx2].gzyd003
#                        IF ls_gzyd003.getIndexOf("_desc",1) THEN 
#                           INITIALIZE g_errparam TO NULL
#                           LET g_errparam.code   = "azz-00268"
#                           LET g_errparam.popup  = TRUE
#                           LET g_errparam.replace[1] = g_gzyb4_d[g_detail_idx2].gzyd003
#                           LET ls_gzyd003 = ls_gzyd003.subString(1,ls_gzyd003.getIndexOf("_desc",1)-1)
#                           LET g_errparam.replace[2] = ls_gzyd003
#                           CALL cl_err()
#                           NEXT FIELD CURRENT
#                        END IF 
#                     END IF
##14//11/25 end
                  END IF
               END IF
            END IF   

#            CALL cl_set_comp_entry("gzyd005",TRUE)]]>
  </point>
  <point name="input.a.page4.gzyd004" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #1:不可視
            #2:部分加密
            #3:不可修改 
            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzyb4_d[g_detail_idx2].gzyd004 != g_gzyb4_d_t.gzyd004)) THEN 
               IF g_gzyb4_d[g_detail_idx2].gzyd004 = "2" THEN #2:部分加密
                  #2:遮罩,欄位是數值/日期格式不可使用遮罩                  
                  CALL azzi850_get_gzyd003_fmt() RETURNING l_dzeb007
                  #DISPLAY "gzyd003_fmt:",l_dzeb007
                  IF l_dzeb007 = "number" OR l_dzeb007 = "date" OR l_dzeb007 = "timestamp" THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code   = "azz-00261"
                     LET g_errparam.extend = ""
                     LET g_errparam.popup  = TRUE
                     LET g_errparam.replace[1] = g_gzyb4_d[g_detail_idx2].gzyd003
                     CALL cl_err()     
                     
                     NEXT FIELD gzyd004               
                  END IF
                  LET li_chk_mask = TRUE
                  IF cl_null(g_gzyb4_d[g_detail_idx2].gzyd005) THEN 
                     NEXT FIELD gzyd005  
                  END IF  
               END IF    
            END IF
            #是報表:只能設定不可視
            #1:不可視欄位→不可維護欄位加密方法
            IF g_gzyb4_d[g_detail_idx2].gzyd004 = "1" THEN
               CALL cl_set_comp_entry("gzyd005",FALSE)
               LET g_gzyb4_d[g_detail_idx2].gzyd005 = NULL 
            END IF
            
            #不可修改
            IF g_gzyb4_d[g_detail_idx2].gzyd004 = "3" THEN
               CALL cl_set_comp_entry("gzyd005",FALSE)
               LET g_gzyb4_d[g_detail_idx2].gzyd005 = NULL 
            END IF
]]>
  </point>
  <point name="input.a.page4.gzyd005" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_gzyb4_d[g_detail_idx2].gzyd004 = "2" THEN 

               IF cl_null(g_gzyb4_d[g_detail_idx2].gzyd005) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "azz-00211"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
 
                  NEXT FIELD gzyd005  
               END IF
               LET li_chk_mask = TRUE               
            END IF]]>
  </point>
  <point name="input.after_input" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF li_chk_mask THEN 
      #EX: r.r adzp155 azz azzi900
      SELECT gzza004 INTO lc_gzza004 FROM gzza_t
       WHERE gzza001 = g_gzyb_d[l_ac].gzza001_desc
      LET ls_str = lc_gzza004 
      LET ls_str =  ls_str.subString(ls_str.getIndexOf("$",2)+1,ls_str.getIndexOf("$",2)+3)
      RUN "r.r adzp155 " || DOWNSHIFT(ls_str) ||" " || g_gzyb_d[l_ac].gzza001_desc WITHOUT WAITING 
      LET li_chk_mask = FALSE  
   END IF]]>
  </point>
  <point name="input.b.page4.gzyd004" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL cl_set_comp_entry("gzyd005",TRUE)]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #LET lc_gzyb002 = g_gzyb_d[l_ac].gzyb002
               #CALL azzi850_execute_azzp185(lc_gzyb002)]]>
  </point>
  <point name="input.body.after_row2" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #DISPLAY "li_chk_ac:",li_chk_act
            IF li_chk_act THEN 
               IF g_gzyb3_d.getLength() = 0 THEN 
                  CALL azzi850_execute_azzp185(lc_gzyb002)
               ELSE
                  #取gzyc action 筆數 
                  SELECT COUNT(*) INTO li_cnt FROM gzyc_t
                   WHERE gzycent = g_enterprise 
                    AND gzyc001 = g_gzya_m.gzya001 
                    AND gzyc002 = lc_gzyb002 
                  
                  #取gzzr action 筆數      
                  SELECT COUNT(*) INTO li_cnt2 FROM gzzr_t
                   WHERE gzzr001 = g_gzyb_d[l_ac].gzza001_desc
                    AND (gzzr005 = '2' OR gzzr005 = '3')                     
                     
                  #比對gzyc < gzzr 進行補action                      
                  IF li_cnt < li_cnt2 THEN 
                     CALL azzi850_execute_azzp185(lc_gzyb002)
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code   = "azz-00297"
                     LET g_errparam.popup  = TRUE
                     LET g_errparam.replace[1] = g_cnt_gzzc
                     CALL cl_err()  
                  END IF # li_cnt <> li_cnt2            
               END IF #g_gzyb3_d.getLength()
               LET li_chk_act = FALSE
            END IF ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET lc_gzyb002 = g_gzyb_d[l_ac].gzyb002 
               LET li_chk_act = TRUE]]>
  </point>
  <point name="input.body.b_delete" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET li_chk_act = FALSE
               IF g_gzyb_d[l_ac].gzyb002 = "azzp185" OR g_gzyb_d[l_ac].gzyb002 = "azzi850" THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  "azz-00165"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE 
               END IF ]]>
  </point>
  <point name="input.body.b_update" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #確認修改後，重新刷新action 權限
               ]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_gzyb_d[l_ac].gzyb003 = "0"
            LET g_gzyb_d[l_ac].gzyb004 = "0"  
            LET g_gzyb_d[l_ac].gzyb005 = "0" 
            LET g_gzyb_d[l_ac].gzyb006 = "0"
            LET g_gzyb_d[l_ac].gzyb007 = "0"
            FOR li_cnt = 1 TO g_gzyb3_d.getLength()
                CLEAR g_gzyb3_d[li_cnt].*
            END FOR
            FOR li_cnt = 1 TO g_gzyb4_d.getLength()
                CLEAR g_gzyb4[li_cnt].*
            END FOR             
            CALL g_gzyb3_d.clear()
            CALL g_gzyb4_d.clear()           ]]>
  </point>
  <point name="input.body4.b_delete" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_gzyb4_d[g_detail_idx2].gzyd004 = "2" THEN #2:部分加密
                  LET li_chk_mask = TRUE 
               END IF]]>
  </point>
  <point name="input.body4.before_input" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_xg_cnt = 0
            LET l_gzgf001 = g_gzyb_d[g_detail_idx].gzza001_desc CLIPPED,"%"
            SELECT COUNT(gzgf001) INTO l_xg_cnt FROM gzgf_t
             WHERE gzgf001 LIKE l_gzgf001
               AND gzgf004 = 'default' AND gzgf005 = 'default'
            #XG不顯示欄位加密方法   
            IF l_xg_cnt > 0 THEN
               #交叉表不能維護不可視欄位
               SELECT COUNT(gzgf001) INTO l_xg_p_cnt FROM gzgf_t 
                WHERE gzgf001 LIKE l_gzgf001 AND gzgf006="5"
                  AND gzgf004 = 'default' AND gzgf005 = 'default'
               IF l_xg_p_cnt > 0  THEN
                  INITIALIZE g_errparam TO NULL                  
                  LET g_errparam.code   = "azz-00262"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup  = TRUE
                  LET g_errparam.replace[1] = g_gzyb_d[g_detail_idx].gzyb002
                  CALL cl_err()
                  RETURN                  
               END IF               
#               LET g_gzyb4_d[l_ac].gzyd004 = "1"
               CALL cl_set_comp_entry("gzyd004",FALSE)   #141112 add
               #CALL cl_set_comp_entry("gzyd005",FALSE)
               CALL cl_set_comp_visible("gzyd005",FALSE)
            ELSE 
               CALL cl_set_comp_entry("gzyd004",TRUE)   #141113 add
               CALL cl_set_comp_visible("gzyd005",TRUE)
            END IF]]>
  </point>
  <point name="input.body4.before_input2" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_comp_visible("gzyd005",TRUE)]]>
  </point>
  <point name="input.c.page4.gzyd003" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生
            IF l_xg_cnt > 0 THEN             
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               
               #LET g_qryparam.default1 = g_gzyb4_d[l_ac].gzyd003             #給予default值
               
               #給予arg
               CALL azzi850_get_gzgf014(l_gzgf001) RETURNING l_str 
               LET g_qryparam.arg1 = l_gzgf001
               LET g_qryparam.arg2 = l_str
               CALL azzi850_q_gzgg001()
               LET g_gzyb4_d[l_ac].gzyd003 = g_qryparam.return1              
               LET g_gzyb4_d[l_ac].gzyd004 = "1"              
               DISPLAY g_gzyb4_d[l_ac].gzyd003 TO gzyd003                 
               DISPLAY g_gzyb4_d[l_ac].gzyd004 TO gzyd004               
               NEXT FIELD gzyd003   #141112                       
#               NEXT FIELD gzyd004                       
            ELSE   
            ###非XG
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_gzyb4_d[l_ac].gzyd003             #給予default值
               
               #給予arg
               LET g_qryparam.arg1 = g_gzyb_d[g_detail_idx].gzza001_desc
               
               
               CALL q_dzeb002_8()                                #呼叫開窗
               
               LET g_gzyb4_d[l_ac].gzyd003 = g_qryparam.return1              
               
               DISPLAY g_gzyb4_d[l_ac].gzyd003 TO gzyd003              #
               NEXT FIELD gzyd003                          #返回原欄位
            END IF
            

]]>
  </point>
  <point name="input.define" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE lc_gzyb002 LIKE gzyb_t.gzyb002
   DEFINE l_dzeb007              LIKE dzeb_t.dzeb007
   DEFINE l_xg_cnt               LIKE type_t.num5                #檢查XG樣板
   DEFINE l_xg_p_cnt             LIKE type_t.num5                #檢查XG交叉表樣板    
   DEFINE l_gzgf001              LIKE gzgf_t.gzgf001
   DEFINE l_str                  STRING   
   DEFINE li_chk                 LIKE type_t.num5
   DEFINE lc_dzeb001             LIKE dzeb_t.dzeb001
   DEFINE ls_gzyd003             STRING 
   DEFINE li_chk_act             LIKE type_t.num5  #確認修改後，重新刷新action 權限
   DEFINE li_cnt                 LIKE type_t.num5
   DEFINE li_cnt2                LIKE type_t.num5
   DEFINE lc_gzzj001   LIKE gzzj_t.gzzj001
   DEFINE lc_gzzj003   LIKE gzzj_t.gzzj003
   DEFINE lc_gzzol003  LIKE gzzol_t.gzzol003
   DEFINE li_chk_mask  LIKE type_t.num5
   DEFINE lc_gzza004   LIKE gzza_t.gzza004
   DEFINE ls_str       STRING ]]>
  </point>
  <point name="input.detail_input.page1.add_by_qbe" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL azzi850_01() RETURNING l_wc
               IF NOT INT_FLAG THEN 
                  CALL azzi850_p_process(l_wc)
                  LET INT_FLAG = FALSE
                  EXIT DIALOG                  
               END IF  ]]>
  </point>
  <point name="input.detail_input.page1.upd_action_batch" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #進行批次更新 action 新增或刪除  
               CALL azzi850_upd_action_batch()
               EXIT DIALOG]]>
  </point>
  <point name="input.m.before_input" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF  NOT cl_null(g_gzya_m.gzya001) THEN
                  CALL n_gzyal(g_gzya_m.gzya001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzya_m.gzya001
                  CALL ap_ref_array2(g_ref_fields," SELECT gzyal003 FROM gzyal_t WHERE gzyalent='"||g_enterprise||"' AND  gzyal001 = ? AND gzyal002 = '"||g_lang||"'","") RETURNING g_rtn_fields
                  LET g_gzya_m.gzyal003 = g_rtn_fields[1]
                  DISPLAY BY NAME  g_gzya_m.gzyal003
        
               END IF   ]]>
  </point>
  <point name="menu.add_by_qbe" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_gzya_m.gzya001 IS NULL THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "std-00003" 
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err()
                  CONTINUE DIALOG
                  #RETURN
               END IF
               CALL azzi850_01() RETURNING l_wc
               IF NOT INT_FLAG THEN 
                  CALL azzi850_p_process(l_wc)
                  LET INT_FLAG = FALSE                  
               END IF ]]>
  </point>
  <point name="show.after" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.body.reference" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      SELECT gzzal003,gzzj001,gzzj003,gzzz002
       
       INTO g_gzyb_d[l_ac].gzyb002_desc,lc_gzzj001,lc_gzzj003,g_gzyb_d[l_ac].gzza001_desc
       FROM gzzz_t
        INNER JOIN gzzj_t
         ON  gzzz005 = gzzj001
        LEFT JOIN gzzal_t ON gzzz001 = gzzal001 
         AND gzzal002 = g_dlang 
       WHERE gzzz001 = g_gzyb_d[l_ac].gzyb002  
       #SELECT gzzal003,gzzol003,gzzz002  
       #INTO g_gzyb_d[l_ac].gzyb002_desc,g_gzyb_d[l_ac].gzzol003_desc,g_gzyb_d[l_ac].gzza001_desc      
       #FROM  gzzz_t
       # LEFT JOIN gzzal_t ON gzzz001 = gzzal001
       #      AND gzzal002 = g_dlang
       #LEFT JOIN gzzol_t ON gzzz005 = gzzol001
       #     AND gzzol002 = g_dlang
       #  WHERE gzzz001 = g_gzyb_d[l_ac].gzyb002 

       SELECT gzzol003 INTO lc_gzzol003 FROM gzzol_t
        WHERE gzzol001 = lc_gzzj003
         AND gzzol002 = g_dlang
          
       CASE
         WHEN lc_gzzj001[1,1] = "B"    # 行業共用模組
            LET g_gzyb_d[l_ac].gzzol003_desc = gs_gzze003_b,lc_gzzol003 CLIPPED

         WHEN lc_gzzj001[1,1] = "C"    # 客製標準模組
            LET g_gzyb_d[l_ac].gzzol003_desc = gs_gzze003_c,lc_gzzol003 CLIPPED

         WHEN lc_gzzj001[1,1] = "D"    # 行業別客製模組
            LET g_gzyb_d[l_ac].gzzol003_desc = gs_gzze003_d,lc_gzzol003 CLIPPED

         OTHERWISE   # 註冊模組
            LET g_gzyb_d[l_ac].gzzol003_desc = lc_gzzol003 CLIPPED
      END CASE
      LET lc_gzzol003 = ""]]>
  </point>
  <point name="show.body2.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="show.body3.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[     # T100改呼叫 s_azzi903_get_gzzq() 
     CALL s_azzi903_get_gzzq(g_gzyb_d[g_detail_idx].gzyb002,g_gzyb3_d[l_ac].gzyc003) 
          RETURNING  g_gzyb3_d[l_ac].gzyc003_desc,ls_comment,ls_standard
       DISPLAY BY NAME g_gzyb3_d[l_ac].gzyc003_desc]]>
  </point>
  <point name="show.define" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #DEFINE ls_return    STRING 
   DEFINE ls_comment   STRING 
   DEFINE ls_standard  STRING 
   DEFINE lc_gzzj001   LIKE gzzj_t.gzzj001
   DEFINE lc_gzzj003   LIKE gzzj_t.gzzj003
   DEFINE lc_gzzol003  LIKE gzzol_t.gzzol003]]>
  </point>
  <point name="show.other" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.body4.before_display" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_dialog.define" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_wc STRING]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    ]]>
  </point>
  <section id="azzi850.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION azzi850_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.b_fill" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi850_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_gzyb_d.clear()    #g_gzyb_d 單頭及單身 
   CALL g_gzyb2_d.clear()
   CALL g_gzyb3_d.clear()
   CALL g_gzyb4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF azzi850_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE gzyb002,gzyb003,gzyb004,gzyb005,gzyb006,gzyb007,gzyb002,gzybownid, 
             gzybowndp,gzybcrtid,gzybcrtdp,gzybcrtdt,gzybmodid,gzybmoddt ,t1.gzzal003 ,t2.ooag011 ,t3.ooefl003 , 
             t4.ooag011 ,t5.ooefl003 ,t6.ooag011 FROM gzyb_t",   
                     " INNER JOIN gzya_t ON gzya001 = gzyb001 ",
 
                     #"",
                     " LEFT JOIN gzyc_t ON gzybent = gzycent AND gzyb001 = gzyc001 AND gzyb002 = gzyc002 ",
               " LEFT JOIN gzyd_t ON gzybent = gzydent AND gzyb001 = gzyd001 AND gzyb002 = gzyd002 ",
                     "",
                                    " LEFT JOIN gzzal_t t1 ON t1.gzzal001=gzyb002 AND t1.gzzal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=gzybownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=gzybowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=gzybcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=gzybcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=gzybmodid  ",
 
                     " WHERE gzybent=? AND gzyb001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
   IF NOT cl_null(g_wc2_table3) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table3 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY gzyb_t.gzyb002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi850_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR azzi850_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_gzya_m.gzya001
                                               
      FOREACH b_fill_cs INTO g_gzyb_d[l_ac].gzyb002,g_gzyb_d[l_ac].gzyb003,g_gzyb_d[l_ac].gzyb004,g_gzyb_d[l_ac].gzyb005, 
          g_gzyb_d[l_ac].gzyb006,g_gzyb_d[l_ac].gzyb007,g_gzyb2_d[l_ac].gzyb002,g_gzyb2_d[l_ac].gzybownid, 
          g_gzyb2_d[l_ac].gzybowndp,g_gzyb2_d[l_ac].gzybcrtid,g_gzyb2_d[l_ac].gzybcrtdp,g_gzyb2_d[l_ac].gzybcrtdt, 
          g_gzyb2_d[l_ac].gzybmodid,g_gzyb2_d[l_ac].gzybmoddt,g_gzyb_d[l_ac].gzyb002_desc,g_gzyb2_d[l_ac].gzybownid_desc, 
          g_gzyb2_d[l_ac].gzybowndp_desc,g_gzyb2_d[l_ac].gzybcrtid_desc,g_gzyb2_d[l_ac].gzybcrtdp_desc, 
          g_gzyb2_d[l_ac].gzybmodid_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_gzyb_d.deleteElement(g_gzyb_d.getLength())
   CALL g_gzyb2_d.deleteElement(g_gzyb2_d.getLength())
   CALL g_gzyb3_d.deleteElement(g_gzyb3_d.getLength())
   CALL g_gzyb4_d.deleteElement(g_gzyb4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE azzi850_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_gzyb_d.getLength()
      LET g_gzyb_d_mask_o[l_ac].* =  g_gzyb_d[l_ac].*
      CALL azzi850_gzyb_t_mask()
      LET g_gzyb_d_mask_n[l_ac].* =  g_gzyb_d[l_ac].*
   END FOR
   
   LET g_gzyb2_d_mask_o.* =  g_gzyb2_d.*
   FOR l_ac = 1 TO g_gzyb2_d.getLength()
      LET g_gzyb2_d_mask_o[l_ac].* =  g_gzyb2_d[l_ac].*
      CALL azzi850_gzyb_t_mask()
      LET g_gzyb2_d_mask_n[l_ac].* =  g_gzyb2_d[l_ac].*
   END FOR
   LET g_gzyb3_d_mask_o.* =  g_gzyb3_d.*
   FOR l_ac = 1 TO g_gzyb3_d.getLength()
      LET g_gzyb3_d_mask_o[l_ac].* =  g_gzyb3_d[l_ac].*
      CALL azzi850_gzyc_t_mask()
      LET g_gzyb3_d_mask_n[l_ac].* =  g_gzyb3_d[l_ac].*
   END FOR
   LET g_gzyb4_d_mask_o.* =  g_gzyb4_d.*
   FOR l_ac = 1 TO g_gzyb4_d.getLength()
      LET g_gzyb4_d_mask_o[l_ac].* =  g_gzyb4_d[l_ac].*
      CALL azzi850_gzyd_t_mask()
      LET g_gzyb4_d_mask_n[l_ac].* =  g_gzyb4_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.b_fill2" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION azzi850_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF azzi850_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_gzyb_d.getLength() > 0 THEN
               CALL g_gzyb3_d.clear()
 
         LET g_sql = "SELECT  UNIQUE gzyc004,gzyc003,gzyc005  FROM gzyc_t",    
                     "",
                     
                     " WHERE gzycent=? AND gzyc001=? AND gzyc002=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  gzyc_t.gzyc003" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi850_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR azzi850_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_gzyb3_d[l_ac].gzyc004,g_gzyb3_d[l_ac].gzyc003,g_gzyb3_d[l_ac].gzyc005  

            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_gzyb3_d.deleteElement(g_gzyb3_d.getLength())
 
      END IF
   END IF
 
   IF azzi850_fill_chk(3) THEN
      IF (pi_idx = 3 OR pi_idx = 0 ) AND g_gzyb_d.getLength() > 0 THEN
               CALL g_gzyb4_d.clear()
 
         LET g_sql = "SELECT  UNIQUE gzyd003,gzyd004,gzyd005 ,t7.dzebl003 FROM gzyd_t",    
                     "",
                                    " LEFT JOIN dzebl_t t7 ON t7.dzebl001=gzyd003 AND t7.dzebl002='"||g_dlang||"' ",
 
                     " WHERE gzydent=? AND gzyd001=? AND gzyd002=?"
         
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  gzyd_t.gzyd003" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill3" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi850_pb3 FROM g_sql
         DECLARE b_fill_curs3 CURSOR FOR azzi850_pb3
         
         OPEN b_fill_curs3 USING g_enterprise,g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002
         LET l_ac = 1
         FOREACH b_fill_curs3 INTO g_gzyb4_d[l_ac].gzyd003,g_gzyb4_d[l_ac].gzyd004,g_gzyb4_d[l_ac].gzyd005, 
             g_gzyb4_d[l_ac].gzyd003_desc 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill3"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_gzyb4_d.deleteElement(g_gzyb4_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_gzyb3_d_mask_o.* =  g_gzyb3_d.*
   FOR l_ac = 1 TO g_gzyb3_d.getLength()
      LET g_gzyb3_d_mask_o[l_ac].* =  g_gzyb3_d[l_ac].*
      CALL azzi850_gzyc_t_mask()
      LET g_gzyb3_d_mask_n[l_ac].* =  g_gzyb3_d[l_ac].*
   END FOR
   LET g_gzyb4_d_mask_o.* =  g_gzyb4_d.*
   FOR l_ac = 1 TO g_gzyb4_d.getLength()
      LET g_gzyb4_d_mask_o[l_ac].* =  g_gzyb4_d[l_ac].*
      CALL azzi850_gzyd_t_mask()
      LET g_gzyb4_d_mask_n[l_ac].* =  g_gzyb4_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL azzi850_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.browser_fill" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi850_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE gzya001 ",
                      " FROM gzya_t ",
                      " ",
                      " LEFT JOIN gzyb_t ON gzybent = gzyaent AND gzya001 = gzyb001 ", "  ",
                      #add-point:browser_fill段sql(gzyb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
                      " LEFT JOIN gzyc_t ON gzycent = gzyaent AND gzyb001 = gzyc001 AND gzyb002 = gzyc002", "  ",
                      #add-point:browser_fill段sql(gzyc_t1)
                      {<point name="browser_fill.cnt.join.gzyc_t1"/>}
                      #end add-point
 
                      " LEFT JOIN gzyd_t ON gzydent = gzyaent AND gzyb001 = gzyd001 AND gzyb002 = gzyd002", "  ",
                      #add-point:browser_fill段sql(gzyd_t1)
                      {<point name="browser_fill.cnt.join.gzyd_t1"/>}
                      #end add-point
 
 
                      " LEFT JOIN gzyal_t ON gzyalent = '"||g_enterprise||"' AND gzya001 = gzyal001 AND gzyal002 = '",g_dlang,"' ", 
                      " ", 
                      " WHERE gzyaent = '" ||g_enterprise|| "' AND gzybent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzya_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE gzya001 ",
                      " FROM gzya_t ", 
                      "  ",
                      "  LEFT JOIN gzyal_t ON gzyalent = '"||g_enterprise||"' AND gzya001 = gzyal001 AND gzyal002 = '",g_dlang,"' ",
                      " WHERE gzyaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("gzya_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_gzya_m.* TO NULL
      CALL g_gzyb_d.clear()        
      CALL g_gzyb2_d.clear() 
      CALL g_gzyb3_d.clear() 
      CALL g_gzyb4_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.gzya001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.gzyastus,t0.gzya001,t1.gzyal003 ",
               " FROM gzya_t t0",
               "  ",
               "  LEFT JOIN gzyb_t ON gzybent = gzyaent AND gzya001 = gzyb001 ", "  ", 
               #add-point:browser_fill段sql(gzyb_t1)
               {<point name="browser_fill.join.gzyb_t1"/>}
               #end add-point
 
               "  LEFT JOIN gzyc_t ON gzycent = gzyaent AND gzyb001 = gzyc001 AND gzyb002 = gzyc002", "  ", 
               #add-point:browser_fill段sql(gzyc_t1)
               {<point name="browser_fill.join.gzyc_t1"/>}
               #end add-point
 
               "  LEFT JOIN gzyd_t ON gzydent = gzyaent AND gzyb001 = gzyd001 AND gzyb002 = gzyd002", "  ", 
               #add-point:browser_fill段sql(gzyd_t1)
               {<point name="browser_fill.join.gzyd_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN gzyal_t t1 ON t1.gzyalent='"||g_enterprise||"' AND t1.gzyal001=t0.gzya001 AND t1.gzyal002='"||g_lang||"' ",
 
               " WHERE t0.gzyaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("gzya_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY gzya001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"gzya_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzya001,g_browser[g_cnt].b_gzya001_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL azzi850_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_gzya001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.construct" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi850_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzya_m.* TO NULL
   CALL g_gzyb_d.clear()        
   CALL g_gzyb2_d.clear() 
   CALL g_gzyb3_d.clear() 
   CALL g_gzyb4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzya001,gzyal003,gzyastus,gzyaownid,gzyaowndp,gzyacrtid,gzyacrtdp,gzyacrtdt, 
          gzyamodid,gzyamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<gzyacrtdt>>----
         AFTER FIELD gzyacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gzyamoddt>>----
         AFTER FIELD gzyamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzyacnfdt>>----
         
         #----<<gzyapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.gzya001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzya001
            #add-point:ON ACTION controlp INFIELD gzya001
            {<point name="construct.c.gzya001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzya001
            #add-point:BEFORE FIELD gzya001
            {<point name="construct.b.gzya001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzya001
            
            #add-point:AFTER FIELD gzya001
            {<point name="construct.a.gzya001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyal003
            #add-point:BEFORE FIELD gzyal003
            {<point name="construct.b.gzyal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyal003
            
            #add-point:AFTER FIELD gzyal003
            {<point name="construct.a.gzyal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzyal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyal003
            #add-point:ON ACTION controlp INFIELD gzyal003
            {<point name="construct.c.gzyal003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyastus
            #add-point:BEFORE FIELD gzyastus
            {<point name="construct.b.gzyastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyastus
            
            #add-point:AFTER FIELD gzyastus
            {<point name="construct.a.gzyastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzyastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyastus
            #add-point:ON ACTION controlp INFIELD gzyastus
            {<point name="construct.c.gzyastus" />}
            #END add-point
 
         #Ctrlp:construct.c.gzyaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyaownid
            #add-point:ON ACTION controlp INFIELD gzyaownid
            {<point name="construct.c.gzyaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyaownid
            #add-point:BEFORE FIELD gzyaownid
            {<point name="construct.b.gzyaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyaownid
            
            #add-point:AFTER FIELD gzyaownid
            {<point name="construct.a.gzyaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzyaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyaowndp
            #add-point:ON ACTION controlp INFIELD gzyaowndp
            {<point name="construct.c.gzyaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyaowndp
            #add-point:BEFORE FIELD gzyaowndp
            {<point name="construct.b.gzyaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyaowndp
            
            #add-point:AFTER FIELD gzyaowndp
            {<point name="construct.a.gzyaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzyacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyacrtid
            #add-point:ON ACTION controlp INFIELD gzyacrtid
            {<point name="construct.c.gzyacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyacrtid
            #add-point:BEFORE FIELD gzyacrtid
            {<point name="construct.b.gzyacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyacrtid
            
            #add-point:AFTER FIELD gzyacrtid
            {<point name="construct.a.gzyacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzyacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyacrtdp
            #add-point:ON ACTION controlp INFIELD gzyacrtdp
            {<point name="construct.c.gzyacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyacrtdp
            #add-point:BEFORE FIELD gzyacrtdp
            {<point name="construct.b.gzyacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyacrtdp
            
            #add-point:AFTER FIELD gzyacrtdp
            {<point name="construct.a.gzyacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyacrtdt
            #add-point:BEFORE FIELD gzyacrtdt
            {<point name="construct.b.gzyacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.gzyamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyamodid
            #add-point:ON ACTION controlp INFIELD gzyamodid
            {<point name="construct.c.gzyamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyamodid
            #add-point:BEFORE FIELD gzyamodid
            {<point name="construct.b.gzyamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyamodid
            
            #add-point:AFTER FIELD gzyamodid
            {<point name="construct.a.gzyamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyamoddt
            #add-point:BEFORE FIELD gzyamoddt
            {<point name="construct.b.gzyamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON gzyb002,gzyb003,gzyb004,gzyb005,gzyb006,gzyb007,gzybownid,gzybowndp, 
          gzybcrtid,gzybcrtdp,gzybcrtdt,gzybmodid,gzybmoddt
           FROM s_detail1[1].gzyb002,s_detail1[1].gzyb003,s_detail1[1].gzyb004,s_detail1[1].gzyb005, 
               s_detail1[1].gzyb006,s_detail1[1].gzyb007,s_detail2[1].gzybownid,s_detail2[1].gzybowndp, 
               s_detail2[1].gzybcrtid,s_detail2[1].gzybcrtdp,s_detail2[1].gzybcrtdt,s_detail2[1].gzybmodid, 
               s_detail2[1].gzybmoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<gzybcrtdt>>----
         AFTER FIELD gzybcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gzybmoddt>>----
         AFTER FIELD gzybmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzybcnfdt>>----
         
         #----<<gzybpstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.gzyb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb002
            #add-point:ON ACTION controlp INFIELD gzyb002
            {<point name="construct.c.page1.gzyb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb002
            #add-point:BEFORE FIELD gzyb002
            {<point name="construct.b.page1.gzyb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb002
            
            #add-point:AFTER FIELD gzyb002
            {<point name="construct.a.page1.gzyb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb003
            #add-point:BEFORE FIELD gzyb003
            {<point name="construct.b.page1.gzyb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb003
            
            #add-point:AFTER FIELD gzyb003
            {<point name="construct.a.page1.gzyb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzyb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb003
            #add-point:ON ACTION controlp INFIELD gzyb003
            {<point name="construct.c.page1.gzyb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb004
            #add-point:BEFORE FIELD gzyb004
            {<point name="construct.b.page1.gzyb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb004
            
            #add-point:AFTER FIELD gzyb004
            {<point name="construct.a.page1.gzyb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzyb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb004
            #add-point:ON ACTION controlp INFIELD gzyb004
            {<point name="construct.c.page1.gzyb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb005
            #add-point:BEFORE FIELD gzyb005
            {<point name="construct.b.page1.gzyb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb005
            
            #add-point:AFTER FIELD gzyb005
            {<point name="construct.a.page1.gzyb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzyb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb005
            #add-point:ON ACTION controlp INFIELD gzyb005
            {<point name="construct.c.page1.gzyb005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb006
            #add-point:BEFORE FIELD gzyb006
            {<point name="construct.b.page1.gzyb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb006
            
            #add-point:AFTER FIELD gzyb006
            {<point name="construct.a.page1.gzyb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzyb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb006
            #add-point:ON ACTION controlp INFIELD gzyb006
            {<point name="construct.c.page1.gzyb006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb007
            #add-point:BEFORE FIELD gzyb007
            {<point name="construct.b.page1.gzyb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb007
            
            #add-point:AFTER FIELD gzyb007
            {<point name="construct.a.page1.gzyb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzyb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb007
            #add-point:ON ACTION controlp INFIELD gzyb007
            {<point name="construct.c.page1.gzyb007" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.gzybownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzybownid
            #add-point:ON ACTION controlp INFIELD gzybownid
            {<point name="construct.c.page2.gzybownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzybownid
            #add-point:BEFORE FIELD gzybownid
            {<point name="construct.b.page2.gzybownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzybownid
            
            #add-point:AFTER FIELD gzybownid
            {<point name="construct.a.page2.gzybownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzybowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzybowndp
            #add-point:ON ACTION controlp INFIELD gzybowndp
            {<point name="construct.c.page2.gzybowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzybowndp
            #add-point:BEFORE FIELD gzybowndp
            {<point name="construct.b.page2.gzybowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzybowndp
            
            #add-point:AFTER FIELD gzybowndp
            {<point name="construct.a.page2.gzybowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzybcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzybcrtid
            #add-point:ON ACTION controlp INFIELD gzybcrtid
            {<point name="construct.c.page2.gzybcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzybcrtid
            #add-point:BEFORE FIELD gzybcrtid
            {<point name="construct.b.page2.gzybcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzybcrtid
            
            #add-point:AFTER FIELD gzybcrtid
            {<point name="construct.a.page2.gzybcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzybcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzybcrtdp
            #add-point:ON ACTION controlp INFIELD gzybcrtdp
            {<point name="construct.c.page2.gzybcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzybcrtdp
            #add-point:BEFORE FIELD gzybcrtdp
            {<point name="construct.b.page2.gzybcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzybcrtdp
            
            #add-point:AFTER FIELD gzybcrtdp
            {<point name="construct.a.page2.gzybcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzybcrtdt
            #add-point:BEFORE FIELD gzybcrtdt
            {<point name="construct.b.page2.gzybcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.gzybmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzybmodid
            #add-point:ON ACTION controlp INFIELD gzybmodid
            {<point name="construct.c.page2.gzybmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzybmodid
            #add-point:BEFORE FIELD gzybmodid
            {<point name="construct.b.page2.gzybmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzybmodid
            
            #add-point:AFTER FIELD gzybmodid
            {<point name="construct.a.page2.gzybmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzybmoddt
            #add-point:BEFORE FIELD gzybmoddt
            {<point name="construct.b.page2.gzybmoddt" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON gzyc004,gzyc003,gzyc005
           FROM s_detail3[1].gzyc004,s_detail3[1].gzyc003,s_detail3[1].gzyc005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyc004
            #add-point:BEFORE FIELD gzyc004
            {<point name="construct.b.page3.gzyc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyc004
            
            #add-point:AFTER FIELD gzyc004
            {<point name="construct.a.page3.gzyc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzyc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyc004
            #add-point:ON ACTION controlp INFIELD gzyc004
            {<point name="construct.c.page3.gzyc004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyc003
            #add-point:BEFORE FIELD gzyc003
            {<point name="construct.b.page3.gzyc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyc003
            
            #add-point:AFTER FIELD gzyc003
            {<point name="construct.a.page3.gzyc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzyc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyc003
            #add-point:ON ACTION controlp INFIELD gzyc003
            {<point name="construct.c.page3.gzyc003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyc005
            #add-point:BEFORE FIELD gzyc005
            {<point name="construct.b.page3.gzyc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyc005
            
            #add-point:AFTER FIELD gzyc005
            {<point name="construct.a.page3.gzyc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzyc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyc005
            #add-point:ON ACTION controlp INFIELD gzyc005
            {<point name="construct.c.page3.gzyc005" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON gzyd003,gzyd004,gzyd005
           FROM s_detail4[1].gzyd003,s_detail4[1].gzyd004,s_detail4[1].gzyd005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page4.gzyd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyd003
            #add-point:ON ACTION controlp INFIELD gzyd003
            {<point name="construct.c.page4.gzyd003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyd003
            #add-point:BEFORE FIELD gzyd003
            {<point name="construct.b.page4.gzyd003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyd003
            
            #add-point:AFTER FIELD gzyd003
            {<point name="construct.a.page4.gzyd003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyd004
            #add-point:BEFORE FIELD gzyd004
            {<point name="construct.b.page4.gzyd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyd004
            
            #add-point:AFTER FIELD gzyd004
            {<point name="construct.a.page4.gzyd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.gzyd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyd004
            #add-point:ON ACTION controlp INFIELD gzyd004
            {<point name="construct.c.page4.gzyd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyd005
            #add-point:BEFORE FIELD gzyd005
            {<point name="construct.b.page4.gzyd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyd005
            
            #add-point:AFTER FIELD gzyd005
            {<point name="construct.a.page4.gzyd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.gzyd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyd005
            #add-point:ON ACTION controlp INFIELD gzyd005
            {<point name="construct.c.page4.gzyd005" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "gzya_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "gzyb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.default_search" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi850_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzya001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "gzya_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "gzyb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.delete" ver="28" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi850_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_gzya_m.gzya001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.gzyal001 = g_gzya_m.gzya001
LET g_master_multi_table_t.gzyal003 = g_gzya_m.gzyal003
 
   
   CALL s_transaction_begin()
 
   OPEN azzi850_cl USING g_enterprise,g_gzya_m.gzya001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi850_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE azzi850_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi850_master_referesh USING g_gzya_m.gzya001 INTO g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid, 
       g_gzya_m.gzyaowndp,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid, 
       g_gzya_m.gzyamoddt,g_gzya_m.gzyaownid_desc,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyamodid_desc 

   
   #檢查是否允許此動作
   IF NOT azzi850_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gzya_m_mask_o.* =  g_gzya_m.*
   CALL azzi850_gzya_t_mask()
   LET g_gzya_m_mask_n.* =  g_gzya_m.*
   
   CALL azzi850_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL azzi850_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_gzya001_t = g_gzya_m.gzya001
 
 
      DELETE FROM gzya_t
       WHERE gzyaent = g_enterprise AND gzya001 = g_gzya_m.gzya001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_gzya_m.gzya001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzyb_t
       WHERE gzybent = g_enterprise AND gzyb001 = g_gzya_m.gzya001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM gzyc_t
       WHERE gzycent = g_enterprise AND
             gzyc001 = g_gzya_m.gzya001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM gzyd_t
       WHERE gzydent = g_enterprise AND
             gzyd001 = g_gzya_m.gzya001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE azzi850_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_gzyb_d.clear() 
      CALL g_gzyb2_d.clear()       
      CALL g_gzyb3_d.clear()       
      CALL g_gzyb4_d.clear()       
 
     
      CALL azzi850_ui_browser_refresh()  
      #CALL azzi850_ui_headershow()  
      #CALL azzi850_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL azzi850_browser_fill("")
         CALL azzi850_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'gzyalent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.gzyal001
   LET l_field_keys[02] = 'gzyal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzyal_t')
 
      
      #單身多語言刪除
      
 
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE azzi850_cl
 
   #功能已完成,通報訊息中心
   CALL azzi850_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="azzi850.delete_b" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi850_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM gzyb_t
       WHERE gzybent = g_enterprise AND
         gzyb001 = ps_keys_bak[1] AND gzyb002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gzyb_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_gzyb2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM gzyc_t
       WHERE gzycent = g_enterprise AND
             gzyc001 = ps_keys_bak[1] AND gzyc002 = ps_keys_bak[2] AND gzyc003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'3'" THEN 
         CALL g_gzyb3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM gzyd_t
       WHERE gzydent = g_enterprise AND
             gzyd001 = ps_keys_bak[1] AND gzyd002 = ps_keys_bak[2] AND gzyd003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'4'" THEN 
         CALL g_gzyb4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.description" ver="28" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:17,PR版次:17) Build-000409
#+ 
#+ Filename...: azzi850
#+ Description: 職能角色與權限維護作業
#+ Creator....: 00845(2013-10-21 10:24:02)
#+ Modifier...: 01856(2015-06-10 13:48:31) -SD/PR-
]]>
  </section>
  <section id="azzi850.detail_reproduce" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION azzi850_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzyb_t.*
 
   DEFINE l_detail2    RECORD LIKE gzyc_t.*
 
   DEFINE l_detail3    RECORD LIKE gzyd_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi850_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi850_detail AS ",
                "SELECT * FROM gzyb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi850_detail SELECT * FROM gzyb_t 
                                         WHERE gzybent = g_enterprise AND gzyb001 = g_gzya001_t
 
   
   #將key修正為調整後   
   UPDATE azzi850_detail 
      #更新key欄位
      SET gzyb001 = g_gzya_m.gzya001
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:3)
       , gzybownid = g_user 
       , gzybowndp = g_dept
       , gzybcrtid = g_user
       , gzybcrtdp = g_dept 
       , gzybcrtdt = ld_date
       , gzybmodid = g_user
       , gzybmoddt = ld_date
 
 
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO gzyb_t SELECT * FROM azzi850_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi850_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE azzi850_detail AS ",
      "SELECT * FROM gzyc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi850_detail SELECT * FROM gzyc_t
                                         WHERE gzycent = g_enterprise AND gzyc001 = g_gzya001_t
 
 
   #將key修正為調整後   
   UPDATE azzi850_detail SET gzyc001 = g_gzya_m.gzya001
 
  
   #將資料塞回原table   
   INSERT INTO gzyc_t SELECT * FROM azzi850_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi850_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE azzi850_detail AS ",
      "SELECT * FROM gzyd_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi850_detail SELECT * FROM gzyd_t
                                         WHERE gzydent = g_enterprise AND gzyd001 = g_gzya001_t
 
 
   #將key修正為調整後   
   UPDATE azzi850_detail SET gzyd001 = g_gzya_m.gzya001
 
  
   #將資料塞回原table   
   INSERT INTO gzyd_t SELECT * FROM azzi850_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi850_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzya001_t = g_gzya_m.gzya001
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION azzi850_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.fetch" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi850_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzya_m.gzya001 = g_browser[g_current_idx].b_gzya001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi850_master_referesh USING g_gzya_m.gzya001 INTO g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid, 
       g_gzya_m.gzyaowndp,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid, 
       g_gzya_m.gzyamoddt,g_gzya_m.gzyaownid_desc,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyamodid_desc 

   
   #遮罩相關處理
   LET g_gzya_m_mask_o.* =  g_gzya_m.*
   CALL azzi850_gzya_t_mask()
   LET g_gzya_m_mask_n.* =  g_gzya_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi850_set_act_visible()   
   CALL azzi850_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_gzya_m_t.* = g_gzya_m.*
   LET g_gzya_m_o.* = g_gzya_m.*
   
   LET g_data_owner = g_gzya_m.gzyaownid      
   LET g_data_dept  = g_gzya_m.gzyaowndp
   
   #重新顯示   
   CALL azzi850_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.fill_chk" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION azzi850_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.filter" ver="11" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION azzi850_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gzya001
                          FROM s_browse[1].b_gzya001
 
         BEFORE CONSTRUCT
               DISPLAY azzi850_filter_parser('gzya001') TO s_browse[1].b_gzya001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL azzi850_filter_show('gzya001')
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi850_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION azzi850_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = azzi850_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.global" ver="32" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:37)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzya_m        RECORD
       gzya001 LIKE gzya_t.gzya001, 
   gzyal003 LIKE type_t.chr500, 
   gzyastus LIKE gzya_t.gzyastus, 
   gzyaownid LIKE gzya_t.gzyaownid, 
   gzyaownid_desc LIKE type_t.chr80, 
   gzyaowndp LIKE gzya_t.gzyaowndp, 
   gyzaowndp_desc LIKE type_t.chr80, 
   gzyacrtid LIKE gzya_t.gzyacrtid, 
   gzyacrtid_desc LIKE type_t.chr80, 
   gzyacrtdp LIKE gzya_t.gzyacrtdp, 
   gzyacrtdp_desc LIKE type_t.chr80, 
   gzyacrtdt LIKE gzya_t.gzyacrtdt, 
   gzyamodid LIKE gzya_t.gzyamodid, 
   gzyamodid_desc LIKE type_t.chr80, 
   gzyamoddt LIKE gzya_t.gzyamoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzyb_d        RECORD
       gzyb002 LIKE gzyb_t.gzyb002, 
   gzyb002_desc LIKE type_t.chr500, 
   gzzol003_desc LIKE type_t.chr500, 
   gzza001_desc LIKE type_t.chr500, 
   gzyb003 LIKE gzyb_t.gzyb003, 
   gzyb004 LIKE gzyb_t.gzyb004, 
   gzyb005 LIKE gzyb_t.gzyb005, 
   gzyb006 LIKE gzyb_t.gzyb006, 
   gzyb007 LIKE gzyb_t.gzyb007
       END RECORD
PRIVATE TYPE type_g_gzyb2_d RECORD
       gzyb002 LIKE gzyb_t.gzyb002, 
   gzybownid LIKE gzyb_t.gzybownid, 
   gzybownid_desc LIKE type_t.chr500, 
   gzybowndp LIKE gzyb_t.gzybowndp, 
   gzybowndp_desc LIKE type_t.chr500, 
   gzybcrtid LIKE gzyb_t.gzybcrtid, 
   gzybcrtid_desc LIKE type_t.chr500, 
   gzybcrtdp LIKE gzyb_t.gzybcrtdp, 
   gzybcrtdp_desc LIKE type_t.chr500, 
   gzybcrtdt DATETIME YEAR TO SECOND, 
   gzybmodid LIKE gzyb_t.gzybmodid, 
   gzybmodid_desc LIKE type_t.chr500, 
   gzybmoddt DATETIME YEAR TO SECOND
       END RECORD
PRIVATE TYPE type_g_gzyb3_d RECORD
       gzyc004 LIKE gzyc_t.gzyc004, 
   gzyc003 LIKE gzyc_t.gzyc003, 
   gzyc003_desc LIKE type_t.chr500, 
   gzyc005 LIKE gzyc_t.gzyc005
       END RECORD
PRIVATE TYPE type_g_gzyb4_d RECORD
       gzyd003 LIKE gzyd_t.gzyd003, 
   gzyd003_desc LIKE type_t.chr500, 
   gzyd004 LIKE gzyd_t.gzyd004, 
   gzyd005 LIKE gzyd_t.gzyd005
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_gzya001 LIKE gzya_t.gzya001,
   b_gzya001_desc LIKE type_t.chr80
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_gzya_m          type_g_gzya_m
DEFINE g_gzya_m_t        type_g_gzya_m
DEFINE g_gzya_m_o        type_g_gzya_m
DEFINE g_gzya_m_mask_o   type_g_gzya_m #轉換遮罩前資料
DEFINE g_gzya_m_mask_n   type_g_gzya_m #轉換遮罩後資料
 
   DEFINE g_gzya001_t LIKE gzya_t.gzya001
 
 
DEFINE g_gzyb_d          DYNAMIC ARRAY OF type_g_gzyb_d
DEFINE g_gzyb_d_t        type_g_gzyb_d
DEFINE g_gzyb_d_o        type_g_gzyb_d
DEFINE g_gzyb_d_mask_o   DYNAMIC ARRAY OF type_g_gzyb_d #轉換遮罩前資料
DEFINE g_gzyb_d_mask_n   DYNAMIC ARRAY OF type_g_gzyb_d #轉換遮罩後資料
DEFINE g_gzyb2_d          DYNAMIC ARRAY OF type_g_gzyb2_d
DEFINE g_gzyb2_d_t        type_g_gzyb2_d
DEFINE g_gzyb2_d_o        type_g_gzyb2_d
DEFINE g_gzyb2_d_mask_o   DYNAMIC ARRAY OF type_g_gzyb2_d #轉換遮罩前資料
DEFINE g_gzyb2_d_mask_n   DYNAMIC ARRAY OF type_g_gzyb2_d #轉換遮罩後資料
DEFINE g_gzyb3_d          DYNAMIC ARRAY OF type_g_gzyb3_d
DEFINE g_gzyb3_d_t        type_g_gzyb3_d
DEFINE g_gzyb3_d_o        type_g_gzyb3_d
DEFINE g_gzyb3_d_mask_o   DYNAMIC ARRAY OF type_g_gzyb3_d #轉換遮罩前資料
DEFINE g_gzyb3_d_mask_n   DYNAMIC ARRAY OF type_g_gzyb3_d #轉換遮罩後資料
DEFINE g_gzyb4_d          DYNAMIC ARRAY OF type_g_gzyb4_d
DEFINE g_gzyb4_d_t        type_g_gzyb4_d
DEFINE g_gzyb4_d_o        type_g_gzyb4_d
DEFINE g_gzyb4_d_mask_o   DYNAMIC ARRAY OF type_g_gzyb4_d #轉換遮罩前資料
DEFINE g_gzyb4_d_mask_n   DYNAMIC ARRAY OF type_g_gzyb4_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      gzyal001 LIKE gzyal_t.gzyal001,
      gzyal003 LIKE gzyal_t.gzyal003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="azzi850.idx_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION azzi850_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gzyb_d.getLength() THEN
         LET g_detail_idx = g_gzyb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzyb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzyb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_gzyb2_d.getLength() THEN
         LET g_detail_idx = g_gzyb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzyb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzyb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx2 > g_gzyb3_d.getLength() THEN
         LET g_detail_idx2 = g_gzyb3_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_gzyb3_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_gzyb3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx2 > g_gzyb4_d.getLength() THEN
         LET g_detail_idx2 = g_gzyb4_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_gzyb4_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_gzyb4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.init" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi850_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('gzyastus','17','N,Y')
 
      CALL cl_set_combo_scc('gzyb003','154') 
   CALL cl_set_combo_scc('gzyb004','155') 
   CALL cl_set_combo_scc('gzyb005','156') 
   CALL cl_set_combo_scc('gzyb006','54') 
   CALL cl_set_combo_scc('gzyb007','54') 
   CALL cl_set_combo_scc('gzyc005','84') 
   CALL cl_set_combo_scc('gzyd004','85') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL azzi850_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="azzi850.input" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi850_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzya_m.gzya001,g_gzya_m.gzyal003,g_gzya_m.gzyastus,g_gzya_m.gzyaownid,g_gzya_m.gzyaownid_desc, 
       g_gzya_m.gzyaowndp,g_gzya_m.gyzaowndp_desc,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp, 
       g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid,g_gzya_m.gzyamodid_desc,g_gzya_m.gzyamoddt 

   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzyb002,gzyb003,gzyb004,gzyb005,gzyb006,gzyb007,gzyb002,gzybownid,gzybowndp, 
       gzybcrtid,gzybcrtdp,gzybcrtdt,gzybmodid,gzybmoddt FROM gzyb_t WHERE gzybent=? AND gzyb001=? AND  
       gzyb002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi850_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzyc004,gzyc003,gzyc005 FROM gzyc_t WHERE gzycent=? AND gzyc001=? AND  
       gzyc002=? AND gzyc003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi850_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzyd003,gzyd004,gzyd005 FROM gzyd_t WHERE gzydent=? AND gzyd001=? AND  
       gzyd002=? AND gzyd003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi850_bcl3 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi850_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi850_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gzya_m.gzya001,g_gzya_m.gzyal003,g_gzya_m.gzyastus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="azzi850.input.body" ver="33" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzyb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION upd_action_batch
            LET g_action_choice="upd_action_batch"
            IF cl_auth_chk_act("upd_action_batch") THEN
               
               #add-point:ON ACTION upd_action_batch
               {<point name="input.detail_input.page1.upd_action_batch" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzyb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi850_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_gzyb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            CALL azzi850_b_fill2('2')
CALL azzi850_b_fill2('3')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi850_cl USING g_enterprise,g_gzya_m.gzya001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi850_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi850_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzyb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzyb_d[l_ac].gzyb002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzyb_d_t.* = g_gzyb_d[l_ac].*  #BACKUP
               LET g_gzyb_d_o.* = g_gzyb_d[l_ac].*  #BACKUP
               CALL azzi850_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL azzi850_set_no_entry_b(l_cmd)
               IF NOT azzi850_lock_b("gzyb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi850_bcl INTO g_gzyb_d[l_ac].gzyb002,g_gzyb_d[l_ac].gzyb003,g_gzyb_d[l_ac].gzyb004, 
                      g_gzyb_d[l_ac].gzyb005,g_gzyb_d[l_ac].gzyb006,g_gzyb_d[l_ac].gzyb007,g_gzyb2_d[l_ac].gzyb002, 
                      g_gzyb2_d[l_ac].gzybownid,g_gzyb2_d[l_ac].gzybowndp,g_gzyb2_d[l_ac].gzybcrtid, 
                      g_gzyb2_d[l_ac].gzybcrtdp,g_gzyb2_d[l_ac].gzybcrtdt,g_gzyb2_d[l_ac].gzybmodid, 
                      g_gzyb2_d[l_ac].gzybmoddt
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_gzyb_d_t.gzyb002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzyb_d_mask_o[l_ac].* =  g_gzyb_d[l_ac].*
                  CALL azzi850_gzyb_t_mask()
                  LET g_gzyb_d_mask_n[l_ac].* =  g_gzyb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL azzi850_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzyb_d[l_ac].* TO NULL 
            INITIALIZE g_gzyb_d_t.* TO NULL 
            INITIALIZE g_gzyb_d_o.* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_gzyb2_d[l_ac].gzybownid = g_user
      LET g_gzyb2_d[l_ac].gzybowndp = g_dept
      LET g_gzyb2_d[l_ac].gzybcrtid = g_user
      LET g_gzyb2_d[l_ac].gzybcrtdp = g_dept 
      LET g_gzyb2_d[l_ac].gzybcrtdt = cl_get_current()
      LET g_gzyb2_d[l_ac].gzybmodid = g_user
      LET g_gzyb2_d[l_ac].gzybmoddt = cl_get_current()
 
 
            #自定義預設值
                  LET g_gzyb_d[l_ac].gzyb006 = "0"
      LET g_gzyb_d[l_ac].gzyb007 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_gzyb_d_t.* = g_gzyb_d[l_ac].*     #新輸入資料
            LET g_gzyb_d_o.* = g_gzyb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi850_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi850_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzyb_d[li_reproduce_target].* = g_gzyb_d[li_reproduce].*
               LET g_gzyb2_d[li_reproduce_target].* = g_gzyb2_d[li_reproduce].*
 
               LET g_gzyb_d[li_reproduce_target].gzyb002 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzyb_t 
             WHERE gzybent = g_enterprise AND gzyb001 = g_gzya_m.gzya001
 
               AND gzyb002 = g_gzyb_d[l_ac].gzyb002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               CALL azzi850_insert_b('gzyb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_gzyb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi850_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_gzya_m.gzya001
 
               LET gs_keys[gs_keys.getLength()+1] = g_gzyb_d_t.gzyb002
 
            
               #刪除同層單身
               IF NOT azzi850_delete_b('gzyb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi850_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT azzi850_key_delete_b(gs_keys,'gzyb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi850_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE azzi850_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_gzyb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gzyb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb002
            
            #add-point:AFTER FIELD gzyb002
            {<point name="input.a.page1.gzyb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb002
            #add-point:BEFORE FIELD gzyb002
            {<point name="input.b.page1.gzyb002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyb002
            #add-point:ON CHANGE gzyb002
            {<point name="input.g.page1.gzyb002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb003
            #add-point:BEFORE FIELD gzyb003
            {<point name="input.b.page1.gzyb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb003
            
            #add-point:AFTER FIELD gzyb003
            {<point name="input.a.page1.gzyb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyb003
            #add-point:ON CHANGE gzyb003
            {<point name="input.g.page1.gzyb003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb004
            #add-point:BEFORE FIELD gzyb004
            {<point name="input.b.page1.gzyb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb004
            
            #add-point:AFTER FIELD gzyb004
            {<point name="input.a.page1.gzyb004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyb004
            #add-point:ON CHANGE gzyb004
            {<point name="input.g.page1.gzyb004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb005
            #add-point:BEFORE FIELD gzyb005
            {<point name="input.b.page1.gzyb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb005
            
            #add-point:AFTER FIELD gzyb005
            {<point name="input.a.page1.gzyb005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyb005
            #add-point:ON CHANGE gzyb005
            {<point name="input.g.page1.gzyb005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb006
            #add-point:BEFORE FIELD gzyb006
            {<point name="input.b.page1.gzyb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb006
            
            #add-point:AFTER FIELD gzyb006
            {<point name="input.a.page1.gzyb006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyb006
            #add-point:ON CHANGE gzyb006
            {<point name="input.g.page1.gzyb006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyb007
            #add-point:BEFORE FIELD gzyb007
            {<point name="input.b.page1.gzyb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyb007
            
            #add-point:AFTER FIELD gzyb007
            {<point name="input.a.page1.gzyb007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyb007
            #add-point:ON CHANGE gzyb007
            {<point name="input.g.page1.gzyb007" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.gzyb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb002
            #add-point:ON ACTION controlp INFIELD gzyb002
            {<point name="input.c.page1.gzyb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzyb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb003
            #add-point:ON ACTION controlp INFIELD gzyb003
            {<point name="input.c.page1.gzyb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzyb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb004
            #add-point:ON ACTION controlp INFIELD gzyb004
            {<point name="input.c.page1.gzyb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzyb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb005
            #add-point:ON ACTION controlp INFIELD gzyb005
            {<point name="input.c.page1.gzyb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzyb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb006
            #add-point:ON ACTION controlp INFIELD gzyb006
            {<point name="input.c.page1.gzyb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzyb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyb007
            #add-point:ON ACTION controlp INFIELD gzyb007
            {<point name="input.c.page1.gzyb007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_gzyb_d[l_ac].* = g_gzyb_d_t.*
               CLOSE azzi850_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_gzyb_d[l_ac].gzyb002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzyb_d[l_ac].* = g_gzyb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               LET g_gzyb2_d[l_ac].gzybmodid = g_user 
LET g_gzyb2_d[l_ac].gzybmoddt = cl_get_current()
LET g_gzyb2_d[l_ac].gzybmodid_desc = cl_get_username(g_gzyb2_d[l_ac].gzybmodid)
      
               #將遮罩欄位還原
               CALL azzi850_gzyb_t_mask_restore('restore_mask_o')
      
               UPDATE gzyb_t SET (gzyb001,gzyb002,gzyb003,gzyb004,gzyb005,gzyb006,gzyb007,gzybownid, 
                   gzybowndp,gzybcrtid,gzybcrtdp,gzybcrtdt,gzybmodid,gzybmoddt) = (g_gzya_m.gzya001, 
                   g_gzyb_d[l_ac].gzyb002,g_gzyb_d[l_ac].gzyb003,g_gzyb_d[l_ac].gzyb004,g_gzyb_d[l_ac].gzyb005, 
                   g_gzyb_d[l_ac].gzyb006,g_gzyb_d[l_ac].gzyb007,g_gzyb2_d[l_ac].gzybownid,g_gzyb2_d[l_ac].gzybowndp, 
                   g_gzyb2_d[l_ac].gzybcrtid,g_gzyb2_d[l_ac].gzybcrtdp,g_gzyb2_d[l_ac].gzybcrtdt,g_gzyb2_d[l_ac].gzybmodid, 
                   g_gzyb2_d[l_ac].gzybmoddt)
                WHERE gzybent = g_enterprise AND gzyb001 = g_gzya_m.gzya001 
 
                  AND gzyb002 = g_gzyb_d_t.gzyb002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzyb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzyb_d[l_ac].* = g_gzyb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzyb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_gzyb_d[l_ac].* = g_gzyb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys_bak[1] = g_gzya001_t
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys_bak[2] = g_gzyb_d_t.gzyb002
               CALL azzi850_update_b('gzyb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL azzi850_gzyb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_gzyb_d[g_detail_idx].gzyb002 = g_gzyb_d_t.gzyb002 
 
                  ) THEN
                  LET gs_keys[01] = g_gzya_m.gzya001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_gzyb_d_t.gzyb002
 
                  CALL azzi850_key_update_b(gs_keys,'gzyb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gzya_m),util.JSON.stringify(g_gzyb_d_t)
               LET g_log2 = util.JSON.stringify(g_gzya_m),util.JSON.stringify(g_gzyb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL azzi850_unlock_b("gzyb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzyb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzyb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_gzyb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_gzyb_d[g_detail_idx].gzyb002) THEN
               NEXT FIELD gzyb002
            END IF
            #add-point:資料輸入前
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzyb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_gzyb3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzyb3_d[l_ac].* TO NULL 
            INITIALIZE g_gzyb3_d_t.* TO NULL 
            INITIALIZE g_gzyb3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_gzyb3_d[l_ac].gzyc004 = "Y"
 
            #add-point:modify段before備份
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_gzyb3_d_t.* = g_gzyb3_d[l_ac].*     #新輸入資料
            LET g_gzyb3_d_o.* = g_gzyb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi850_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi850_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzyb3_d[li_reproduce_target].* = g_gzyb3_d[li_reproduce].*
 
               LET g_gzyb3_d[li_reproduce_target].gzyc003 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 3
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi850_cl USING g_enterprise,g_gzya_m.gzya001
            OPEN azzi850_bcl USING g_enterprise,g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi850_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi850_cl
               CLOSE azzi850_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzyb3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzyb3_d[l_ac].gzyc003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_gzyb3_d_t.* = g_gzyb3_d[l_ac].*  #BACKUP
               LET g_gzyb3_d_o.* = g_gzyb3_d[l_ac].*  #BACKUP
               CALL azzi850_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL azzi850_set_no_entry_b(l_cmd)
               IF NOT azzi850_lock_b("gzyc_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi850_bcl2 INTO g_gzyb3_d[l_ac].gzyc004,g_gzyb3_d[l_ac].gzyc003,g_gzyb3_d[l_ac].gzyc005 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzyb3_d_mask_o[l_ac].* =  g_gzyb3_d[l_ac].*
                  CALL azzi850_gzyc_t_mask()
                  LET g_gzyb3_d_mask_n[l_ac].* =  g_gzyb3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL azzi850_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys[3] = g_gzyb3_d_t.gzyc003
 
               #刪除同層單身
               IF NOT azzi850_delete_b('gzyc_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi850_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE azzi850_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_gzyb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gzyb3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzyc_t 
             WHERE gzycent = g_enterprise AND gzyc001 = g_gzya_m.gzya001 AND gzyc002 = g_gzyb_d[g_detail_idx].gzyb002  
                 AND gzyc003 = g_gzyb3_d[g_detail_idx2].gzyc003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys[3] = g_gzyb3_d[g_detail_idx2].gzyc003
               CALL azzi850_insert_b('gzyc_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_gzyb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi850_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_gzyb3_d[l_ac].* = g_gzyb3_d_t.*
               CLOSE azzi850_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzyb3_d[l_ac].* = g_gzyb3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL azzi850_gzyc_t_mask_restore('restore_mask_o')
               
               UPDATE gzyc_t SET (gzyc001,gzyc002,gzyc004,gzyc003,gzyc005) = (g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002, 
                   g_gzyb3_d[l_ac].gzyc004,g_gzyb3_d[l_ac].gzyc003,g_gzyb3_d[l_ac].gzyc005) #自訂欄位頁簽 

                WHERE gzycent = g_enterprise AND gzyc001 = g_gzya001_t AND gzyc002 = g_gzyb_d[g_detail_idx].gzyb002  
                    AND gzyc003 = g_gzyb3_d_t.gzyc003
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzyc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzyb3_d[l_ac].* = g_gzyb3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzyc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzyb3_d[l_ac].* = g_gzyb3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys_bak[1] = g_gzya001_t
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys_bak[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys[3] = g_gzyb3_d[g_detail_idx2].gzyc003
               LET gs_keys_bak[3] = g_gzyb3_d_t.gzyc003
               CALL azzi850_update_b('gzyc_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL azzi850_gzyc_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gzya_m),util.JSON.stringify(g_gzyb3_d_t)
               LET g_log2 = util.JSON.stringify(g_gzya_m),util.JSON.stringify(g_gzyb3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyc004
            #add-point:BEFORE FIELD gzyc004
            {<point name="input.b.page3.gzyc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyc004
            
            #add-point:AFTER FIELD gzyc004
            {<point name="input.a.page3.gzyc004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyc004
            #add-point:ON CHANGE gzyc004
            {<point name="input.g.page3.gzyc004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyc003
            
            #add-point:AFTER FIELD gzyc003
            {<point name="input.a.page3.gzyc003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyc003
            #add-point:BEFORE FIELD gzyc003
            {<point name="input.b.page3.gzyc003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyc003
            #add-point:ON CHANGE gzyc003
            {<point name="input.g.page3.gzyc003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyc005
            #add-point:BEFORE FIELD gzyc005
            {<point name="input.b.page3.gzyc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyc005
            
            #add-point:AFTER FIELD gzyc005
            {<point name="input.a.page3.gzyc005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyc005
            #add-point:ON CHANGE gzyc005
            {<point name="input.g.page3.gzyc005" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.gzyc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyc004
            #add-point:ON ACTION controlp INFIELD gzyc004
            {<point name="input.c.page3.gzyc004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzyc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyc003
            #add-point:ON ACTION controlp INFIELD gzyc003
            {<point name="input.c.page3.gzyc003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzyc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyc005
            #add-point:ON ACTION controlp INFIELD gzyc005
            {<point name="input.c.page3.gzyc005" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3_after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzyb3_d[l_ac].* = g_gzyb3_d_t.*
               END IF
               CLOSE azzi850_bcl2
               CLOSE azzi850_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL azzi850_unlock_b("gzyc_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3_after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzyb3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzyb3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_gzyb4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_gzyb_d[g_detail_idx].gzyb002) THEN
               NEXT FIELD gzyb002
            END IF
            #add-point:資料輸入前
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzyb4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_gzyb4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzyb4_d[l_ac].* TO NULL 
            INITIALIZE g_gzyb4_d_t.* TO NULL 
            INITIALIZE g_gzyb4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
            
            #add-point:modify段before備份
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_gzyb4_d_t.* = g_gzyb4_d[l_ac].*     #新輸入資料
            LET g_gzyb4_d_o.* = g_gzyb4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi850_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi850_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzyb4_d[li_reproduce_target].* = g_gzyb4_d[li_reproduce].*
 
               LET g_gzyb4_d[li_reproduce_target].gzyd003 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 4
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi850_cl USING g_enterprise,g_gzya_m.gzya001
            OPEN azzi850_bcl USING g_enterprise,g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi850_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi850_cl
               CLOSE azzi850_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzyb4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzyb4_d[l_ac].gzyd003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_gzyb4_d_t.* = g_gzyb4_d[l_ac].*  #BACKUP
               LET g_gzyb4_d_o.* = g_gzyb4_d[l_ac].*  #BACKUP
               CALL azzi850_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL azzi850_set_no_entry_b(l_cmd)
               IF NOT azzi850_lock_b("gzyd_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi850_bcl3 INTO g_gzyb4_d[l_ac].gzyd003,g_gzyb4_d[l_ac].gzyd004,g_gzyb4_d[l_ac].gzyd005 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzyb4_d_mask_o[l_ac].* =  g_gzyb4_d[l_ac].*
                  CALL azzi850_gzyd_t_mask()
                  LET g_gzyb4_d_mask_n[l_ac].* =  g_gzyb4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL azzi850_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys[3] = g_gzyb4_d_t.gzyd003
 
               #刪除同層單身
               IF NOT azzi850_delete_b('gzyd_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi850_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE azzi850_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_gzyb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gzyb4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzyd_t 
             WHERE gzydent = g_enterprise AND gzyd001 = g_gzya_m.gzya001 AND gzyd002 = g_gzyb_d[g_detail_idx].gzyb002  
                 AND gzyd003 = g_gzyb4_d[g_detail_idx2].gzyd003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys[3] = g_gzyb4_d[g_detail_idx2].gzyd003
               CALL azzi850_insert_b('gzyd_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_gzyb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi850_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_gzyb4_d[l_ac].* = g_gzyb4_d_t.*
               CLOSE azzi850_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzyb4_d[l_ac].* = g_gzyb4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL azzi850_gzyd_t_mask_restore('restore_mask_o')
               
               UPDATE gzyd_t SET (gzyd001,gzyd002,gzyd003,gzyd004,gzyd005) = (g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002, 
                   g_gzyb4_d[l_ac].gzyd003,g_gzyb4_d[l_ac].gzyd004,g_gzyb4_d[l_ac].gzyd005) #自訂欄位頁簽 

                WHERE gzydent = g_enterprise AND gzyd001 = g_gzya001_t AND gzyd002 = g_gzyb_d[g_detail_idx].gzyb002  
                    AND gzyd003 = g_gzyb4_d_t.gzyd003
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzyd_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzyb4_d[l_ac].* = g_gzyb4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzyd_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzyb4_d[l_ac].* = g_gzyb4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzya_m.gzya001
               LET gs_keys_bak[1] = g_gzya001_t
               LET gs_keys[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys_bak[2] = g_gzyb_d[g_detail_idx].gzyb002
               LET gs_keys[3] = g_gzyb4_d[g_detail_idx2].gzyd003
               LET gs_keys_bak[3] = g_gzyb4_d_t.gzyd003
               CALL azzi850_update_b('gzyd_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL azzi850_gzyd_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gzya_m),util.JSON.stringify(g_gzyb4_d_t)
               LET g_log2 = util.JSON.stringify(g_gzya_m),util.JSON.stringify(g_gzyb4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyd003
            
            #add-point:AFTER FIELD gzyd003
            {<point name="input.a.page4.gzyd003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyd003
            #add-point:BEFORE FIELD gzyd003
            {<point name="input.b.page4.gzyd003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyd003
            #add-point:ON CHANGE gzyd003
            {<point name="input.g.page4.gzyd003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyd004
            #add-point:BEFORE FIELD gzyd004
            {<point name="input.b.page4.gzyd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyd004
            
            #add-point:AFTER FIELD gzyd004
            {<point name="input.a.page4.gzyd004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyd004
            #add-point:ON CHANGE gzyd004
            {<point name="input.g.page4.gzyd004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyd005
            #add-point:BEFORE FIELD gzyd005
            {<point name="input.b.page4.gzyd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyd005
            
            #add-point:AFTER FIELD gzyd005
            {<point name="input.a.page4.gzyd005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyd005
            #add-point:ON CHANGE gzyd005
            {<point name="input.g.page4.gzyd005" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page4.gzyd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyd003
            #add-point:ON ACTION controlp INFIELD gzyd003
            {<point name="input.c.page4.gzyd003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.gzyd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyd004
            #add-point:ON ACTION controlp INFIELD gzyd004
            {<point name="input.c.page4.gzyd004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.gzyd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyd005
            #add-point:ON ACTION controlp INFIELD gzyd005
            {<point name="input.c.page4.gzyd005" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4_after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzyb4_d[l_ac].* = g_gzyb4_d_t.*
               END IF
               CLOSE azzi850_bcl3
               CLOSE azzi850_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL azzi850_unlock_b("gzyd_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4_after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzyb4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzyb4_d.getLength()+1
 
      END INPUT
 
      DISPLAY ARRAY g_gzyb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL azzi850_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            CALL azzi850_b_fill2('2')
CALL azzi850_b_fill2('3')
 
            #add-point:page2, before row動作
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL azzi850_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
 
 
]]>
  </section>
  <section id="azzi850.input.head" ver="24" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_gzya_m.gzya001,g_gzya_m.gzyal003,g_gzya_m.gzyastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN azzi850_cl USING g_enterprise,g_gzya_m.gzya001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi850_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi850_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            LET g_master_multi_table_t.gzyal001 = g_gzya_m.gzya001
LET g_master_multi_table_t.gzyal003 = g_gzya_m.gzyal003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.gzyal001 = ''
LET g_master_multi_table_t.gzyal003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL azzi850_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL azzi850_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzya001
            #add-point:BEFORE FIELD gzya001
            {<point name="input.b.gzya001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzya001
            
            #add-point:AFTER FIELD gzya001
            {<point name="input.a.gzya001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzya001
            #add-point:ON CHANGE gzya001
            {<point name="input.g.gzya001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyal003
            #add-point:BEFORE FIELD gzyal003
            {<point name="input.b.gzyal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyal003
            
            #add-point:AFTER FIELD gzyal003
            {<point name="input.a.gzyal003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyal003
            #add-point:ON CHANGE gzyal003
            {<point name="input.g.gzyal003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzyastus
            #add-point:BEFORE FIELD gzyastus
            {<point name="input.b.gzyastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzyastus
            
            #add-point:AFTER FIELD gzyastus
            {<point name="input.a.gzyastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzyastus
            #add-point:ON CHANGE gzyastus
            {<point name="input.g.gzyastus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.gzya001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzya001
            #add-point:ON ACTION controlp INFIELD gzya001
            {<point name="input.c.gzya001" />}
            #END add-point
 
         #Ctrlp:input.c.gzyal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyal003
            #add-point:ON ACTION controlp INFIELD gzyal003
            {<point name="input.c.gzyal003" />}
            #END add-point
 
         #Ctrlp:input.c.gzyastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzyastus
            #add-point:ON ACTION controlp INFIELD gzyastus
            {<point name="input.c.gzyastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_gzya_m.gzya001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO gzya_t (gzyaent,gzya001,gzyastus,gzyaownid,gzyaowndp,gzyacrtid,gzyacrtdp, 
                   gzyacrtdt,gzyamodid,gzyamoddt)
               VALUES (g_enterprise,g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid,g_gzya_m.gzyaowndp, 
                   g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid,g_gzya_m.gzyamoddt)  

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_gzya_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzya_m.gzya001 = g_master_multi_table_t.gzyal001 AND
         g_gzya_m.gzyal003 = g_master_multi_table_t.gzyal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'gzyalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_gzya_m.gzya001
            LET l_field_keys[02] = 'gzyal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.gzyal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'gzyal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_gzya_m.gzyal003
            LET l_fields[01] = 'gzyal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzyal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi850_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL azzi850_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL azzi850_gzya_t_mask_restore('restore_mask_o')
               
               UPDATE gzya_t SET (gzya001,gzyastus,gzyaownid,gzyaowndp,gzyacrtid,gzyacrtdp,gzyacrtdt, 
                   gzyamodid,gzyamoddt) = (g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid,g_gzya_m.gzyaowndp, 
                   g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid,g_gzya_m.gzyamoddt) 

                WHERE gzyaent = g_enterprise AND gzya001 = g_gzya001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "gzya_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzya_m.gzya001 = g_master_multi_table_t.gzyal001 AND
         g_gzya_m.gzyal003 = g_master_multi_table_t.gzyal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'gzyalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_gzya_m.gzya001
            LET l_field_keys[02] = 'gzyal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.gzyal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'gzyal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_gzya_m.gzyal003
            LET l_fields[01] = 'gzyal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzyal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL azzi850_gzya_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_gzya_m_t)
               LET g_log2 = util.JSON.stringify(g_gzya_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_gzya001_t = g_gzya_m.gzya001
 
            
      END INPUT
   
]]>
  </section>
  <section id="azzi850.input.other" ver="10" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx2)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx2)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD gzya001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzyb002
               WHEN "s_detail2"
                  NEXT FIELD gzyb002_2
               WHEN "s_detail3"
                  NEXT FIELD gzyc004
               WHEN "s_detail4"
                  NEXT FIELD gzyd003
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.insert" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi850_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gzyb_d.clear()   
   CALL g_gzyb2_d.clear()  
   CALL g_gzyb3_d.clear()  
   CALL g_gzyb4_d.clear()  
 
 
   INITIALIZE g_gzya_m.* LIKE gzya_t.*             #DEFAULT 設定
   
   LET g_gzya001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_gzya_m.gzyaownid = g_user
      LET g_gzya_m.gzyaowndp = g_dept
      LET g_gzya_m.gzyacrtid = g_user
      LET g_gzya_m.gzyacrtdp = g_dept 
      LET g_gzya_m.gzyacrtdt = cl_get_current()
      LET g_gzya_m.gzyamodid = g_user
      LET g_gzya_m.gzyamoddt = cl_get_current()
      LET g_gzya_m.gzyastus = 'Y'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gzya_m.gzyastus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_gzya_m_t.* = g_gzya_m.*
      LET g_gzya_m_o.* = g_gzya_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_gzya_m.gzyastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
    
      CALL azzi850_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_gzya_m.* TO NULL
         INITIALIZE g_gzyb_d TO NULL
         INITIALIZE g_gzyb2_d TO NULL
         INITIALIZE g_gzyb3_d TO NULL
         INITIALIZE g_gzyb4_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL azzi850_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_gzyb_d.clear()
      #CALL g_gzyb2_d.clear()
      #CALL g_gzyb3_d.clear()
      #CALL g_gzyb4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi850_set_act_visible()   
   CALL azzi850_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gzya001_t = g_gzya_m.gzya001
 
   
   #組合新增資料的條件
   LET g_add_browse = " gzyaent = '" ||g_enterprise|| "' AND",
                      " gzya001 = '", g_gzya_m.gzya001, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi850_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE azzi850_cl
   
   CALL azzi850_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE azzi850_master_referesh USING g_gzya_m.gzya001 INTO g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid, 
       g_gzya_m.gzyaowndp,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid, 
       g_gzya_m.gzyamoddt,g_gzya_m.gzyaownid_desc,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyamodid_desc 

   
   #遮罩相關處理
   LET g_gzya_m_mask_o.* =  g_gzya_m.*
   CALL azzi850_gzya_t_mask()
   LET g_gzya_m_mask_n.* =  g_gzya_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzya_m.gzya001,g_gzya_m.gzyal003,g_gzya_m.gzyastus,g_gzya_m.gzyaownid,g_gzya_m.gzyaownid_desc, 
       g_gzya_m.gzyaowndp,g_gzya_m.gyzaowndp_desc,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp, 
       g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid,g_gzya_m.gzyamodid_desc,g_gzya_m.gzyamoddt 

   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL azzi850_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.insert_b" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi850_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO gzyb_t
                  (gzybent,
                   gzyb001,
                   gzyb002
                   ,gzyb003,gzyb004,gzyb005,gzyb006,gzyb007,gzybownid,gzybowndp,gzybcrtid,gzybcrtdp,gzybcrtdt,gzybmodid,gzybmoddt) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_gzyb_d[g_detail_idx].gzyb003,g_gzyb_d[g_detail_idx].gzyb004,g_gzyb_d[g_detail_idx].gzyb005, 
                       g_gzyb_d[g_detail_idx].gzyb006,g_gzyb_d[g_detail_idx].gzyb007,g_gzyb2_d[g_detail_idx].gzybownid, 
                       g_gzyb2_d[g_detail_idx].gzybowndp,g_gzyb2_d[g_detail_idx].gzybcrtid,g_gzyb2_d[g_detail_idx].gzybcrtdp, 
                       g_gzyb2_d[g_detail_idx].gzybcrtdt,g_gzyb2_d[g_detail_idx].gzybmodid,g_gzyb2_d[g_detail_idx].gzybmoddt) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gzyb_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_gzyb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO gzyc_t
                  (gzycent,
                   gzyc001,gzyc002,
                   gzyc003
                   ,gzyc004,gzyc005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_gzyb3_d[g_detail_idx2].gzyc004,g_gzyb3_d[g_detail_idx2].gzyc005)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'3'" THEN 
         CALL g_gzyb3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO gzyd_t
                  (gzydent,
                   gzyd001,gzyd002,
                   gzyd003
                   ,gzyd004,gzyd005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_gzyb4_d[g_detail_idx2].gzyd004,g_gzyb4_d[g_detail_idx2].gzyd005)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzyd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'4'" THEN 
         CALL g_gzyb4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION azzi850_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'gzyb_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete2" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzyc_t 
            WHERE gzycent = g_enterprise AND
                  gzyc001 = ps_keys_bak[1] AND gzyc002 = ps_keys_bak[2]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete2"/>}
      #end add-point
   END IF
 
   #如果是上層單身則進行delete
   IF ps_table = 'gzyb_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete3" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzyd_t 
            WHERE gzydent = g_enterprise AND
                  gzyd001 = ps_keys_bak[1] AND gzyd002 = ps_keys_bak[2]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete3"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete3"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION azzi850_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'gzyb_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update2" mark="Y"/>}
      #end add-point
      
      UPDATE gzyc_t 
         SET (gzyc001,gzyc002) 
              = 
             (g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002) 
         WHERE gzycent = g_enterprise AND
               gzyc001 = ps_keys_bak[1] AND gzyc002 = ps_keys_bak[2]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update2"/>}
      #end add-point
   END IF
 
   #如果是上層單身則進行update
   IF ps_table = 'gzyb_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update3" mark="Y"/>}
      #end add-point
      
      UPDATE gzyd_t 
         SET (gzyd001,gzyd002) 
              = 
             (g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002) 
         WHERE gzydent = g_enterprise AND
               gzyd001 = ps_keys_bak[1] AND gzyd002 = ps_keys_bak[2]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update3"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update3"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.lock_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi850_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL azzi850_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "gzyb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN azzi850_bcl USING g_enterprise,
                                       g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi850_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "gzyc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi850_bcl2 USING g_enterprise,
                                             g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002,
                                             g_gzyb3_d[g_detail_idx2].gzyc003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi850_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "gzyd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi850_bcl3 USING g_enterprise,
                                             g_gzya_m.gzya001,g_gzyb_d[g_detail_idx].gzyb002,
                                             g_gzyb4_d[g_detail_idx2].gzyd003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi850_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.main" ver="19" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT gzya001,'',gzyastus,gzyaownid,'',gzyaowndp,'',gzyacrtid,'',gzyacrtdp, 
       '',gzyacrtdt,gzyamodid,'',gzyamoddt", 
                      " FROM gzya_t",
                      " WHERE gzyaent= ? AND gzya001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi850_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.gzya001,t0.gzyastus,t0.gzyaownid,t0.gzyaowndp,t0.gzyacrtid,t0.gzyacrtdp, 
       t0.gzyacrtdt,t0.gzyamodid,t0.gzyamoddt,t1.ooag011 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011",
               " FROM gzya_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.gzyaownid  ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.gzyacrtid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.gzyacrtdp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.gzyamodid  ",
 
               " WHERE t0.gzyaent = '" ||g_enterprise|| "' AND t0.gzya001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi850_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi850 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi850_init()   
 
      #進入選單 Menu (="N")
      CALL azzi850_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi850
      
   END IF 
   
   CLOSE azzi850_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="azzi850.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/azz/azzi850_mask.4gl"
]]>
  </section>
  <section id="azzi850.modify" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi850_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_gzya_m_t.* = g_gzya_m.*
   LET g_gzya_m_o.* = g_gzya_m.*
   
   IF g_gzya_m.gzya001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_gzya001_t = g_gzya_m.gzya001
 
   CALL s_transaction_begin()
   
   OPEN azzi850_cl USING g_enterprise,g_gzya_m.gzya001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi850_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE azzi850_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi850_master_referesh USING g_gzya_m.gzya001 INTO g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid, 
       g_gzya_m.gzyaowndp,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid, 
       g_gzya_m.gzyamoddt,g_gzya_m.gzyaownid_desc,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyamodid_desc 

   
   #檢查是否允許此動作
   IF NOT azzi850_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gzya_m_mask_o.* =  g_gzya_m.*
   CALL azzi850_gzya_t_mask()
   LET g_gzya_m_mask_n.* =  g_gzya_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
 
   
   CALL azzi850_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
 
    
   WHILE TRUE
      LET g_gzya001_t = g_gzya_m.gzya001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gzya_m.gzyamodid = g_user 
LET g_gzya_m.gzyamoddt = cl_get_current()
LET g_gzya_m.gzyamodid_desc = cl_get_username(g_gzya_m.gzyamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL azzi850_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE gzya_t SET (gzyamodid,gzyamoddt) = (g_gzya_m.gzyamodid,g_gzya_m.gzyamoddt)
          WHERE gzyaent = g_enterprise AND gzya001 = g_gzya001_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzya_m.* = g_gzya_m_t.*
         CALL azzi850_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_gzya_m.gzya001 != g_gzya001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE gzyb_t SET gzyb001 = g_gzya_m.gzya001
 
          WHERE gzybent = g_enterprise AND gzyb001 = g_gzya001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE gzyc_t
            SET gzyc001 = g_gzya_m.gzya001
 
          WHERE gzycent = g_enterprise AND
                gzyc001 = g_gzya001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE gzyd_t
            SET gzyd001 = g_gzya_m.gzya001
 
          WHERE gzydent = g_enterprise AND
                gzyd001 = g_gzya001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyd_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzyd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi850_set_act_visible()   
   CALL azzi850_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " gzyaent = '" ||g_enterprise|| "' AND",
                      " gzya001 = '", g_gzya_m.gzya001, "' "
 
   #填到對應位置
   CALL azzi850_browser_fill("")
 
   CLOSE azzi850_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi850_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="azzi850.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION azzi850_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL azzi850_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_gzya_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi850.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="azzi850.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="azzi850.query" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi850_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzyb_d.clear()
   CALL g_gzyb2_d.clear()
   CALL g_gzyb3_d.clear()
   CALL g_gzyb4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL azzi850_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi850_browser_fill("")
      CALL azzi850_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL azzi850_filter_show('gzya001')
   CALL azzi850_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL azzi850_fetch("F") 
      #顯示單身筆數
      CALL azzi850_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.reproduce" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi850_reproduce()
   DEFINE l_newno     LIKE gzya_t.gzya001 
   DEFINE l_oldno     LIKE gzya_t.gzya001 
 
   DEFINE l_master    RECORD LIKE gzya_t.*
   DEFINE l_detail    RECORD LIKE gzyb_t.*
 
   DEFINE l_detail2    RECORD LIKE gzyc_t.*
 
   DEFINE l_detail3    RECORD LIKE gzyd_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_gzya_m.gzya001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_gzya001_t = g_gzya_m.gzya001
 
    
   LET g_gzya_m.gzya001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_gzya_m.gzyaownid = g_user
      LET g_gzya_m.gzyaowndp = g_dept
      LET g_gzya_m.gzyacrtid = g_user
      LET g_gzya_m.gzyacrtdp = g_dept 
      LET g_gzya_m.gzyacrtdt = cl_get_current()
      LET g_gzya_m.gzyamodid = g_user
      LET g_gzya_m.gzyamoddt = cl_get_current()
      LET g_gzya_m.gzyastus = 'Y'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_gzya_m.gzyastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL azzi850_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_gzya_m.* TO NULL
      INITIALIZE g_gzyb_d TO NULL
      INITIALIZE g_gzyb2_d TO NULL
      INITIALIZE g_gzyb3_d TO NULL
      INITIALIZE g_gzyb4_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL azzi850_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi850_set_act_visible()   
   CALL azzi850_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gzya001_t = g_gzya_m.gzya001
 
   
   #組合新增資料的條件
   LET g_add_browse = " gzyaent = '" ||g_enterprise|| "' AND",
                      " gzya001 = '", g_gzya_m.gzya001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi850_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL azzi850_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL azzi850_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION azzi850_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION azzi850_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION azzi850_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION azzi850_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi850_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzya001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi850_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_no_entry" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi850_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzya001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi850_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="azzi850.set_pk_array" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION azzi850_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzya_m.gzya001
   LET g_pk_array[1].column = 'gzya001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi850.show" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi850_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL azzi850_b_fill() #單身填充
      CALL azzi850_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL azzi850_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_gzya_m_mask_o.* =  g_gzya_m.*
   CALL azzi850_gzya_t_mask()
   LET g_gzya_m_mask_n.* =  g_gzya_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzya_m.gzya001,g_gzya_m.gzyal003,g_gzya_m.gzyastus,g_gzya_m.gzyaownid,g_gzya_m.gzyaownid_desc, 
       g_gzya_m.gzyaowndp,g_gzya_m.gyzaowndp_desc,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp, 
       g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid,g_gzya_m.gzyamodid_desc,g_gzya_m.gzyamoddt 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_gzya_m.gzyastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzyb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_gzyb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_gzyb3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_gzyb4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL azzi850_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="azzi850.state_change" ver="15" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION azzi850_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzya_m.gzya001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN azzi850_cl USING g_enterprise,g_gzya_m.gzya001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi850_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE azzi850_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE azzi850_master_referesh USING g_gzya_m.gzya001 INTO g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid, 
       g_gzya_m.gzyaowndp,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid, 
       g_gzya_m.gzyamoddt,g_gzya_m.gzyaownid_desc,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyamodid_desc 

 
   #檢查是否允許此動作
   IF NOT azzi850_action_chk() THEN
      CLOSE azzi850_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzya_m.gzya001,g_gzya_m.gzyal003,g_gzya_m.gzyastus,g_gzya_m.gzyaownid,g_gzya_m.gzyaownid_desc, 
       g_gzya_m.gzyaowndp,g_gzya_m.gyzaowndp_desc,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp, 
       g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid,g_gzya_m.gzyamodid_desc,g_gzya_m.gzyamoddt 

 
   CASE g_gzya_m.gzyastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzya_m.gzyastus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_gzya_m.gzyastus = lc_state OR cl_null(lc_state) THEN
      CLOSE azzi850_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_gzya_m.gzyamodid = g_user
   LET g_gzya_m.gzyamoddt = cl_get_current()
   LET g_gzya_m.gzyastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE gzya_t 
      SET (gzyastus,gzyamodid,gzyamoddt) 
        = (g_gzya_m.gzyastus,g_gzya_m.gzyamodid,g_gzya_m.gzyamoddt)     
    WHERE gzyaent = g_enterprise AND gzya001 = g_gzya_m.gzya001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE azzi850_master_referesh USING g_gzya_m.gzya001 INTO g_gzya_m.gzya001,g_gzya_m.gzyastus, 
          g_gzya_m.gzyaownid,g_gzya_m.gzyaowndp,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt, 
          g_gzya_m.gzyamodid,g_gzya_m.gzyamoddt,g_gzya_m.gzyaownid_desc,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp_desc, 
          g_gzya_m.gzyamodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_gzya_m.gzya001,g_gzya_m.gzyal003,g_gzya_m.gzyastus,g_gzya_m.gzyaownid,g_gzya_m.gzyaownid_desc, 
          g_gzya_m.gzyaowndp,g_gzya_m.gyzaowndp_desc,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp, 
          g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid,g_gzya_m.gzyamodid_desc,g_gzya_m.gzyamoddt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE azzi850_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi850_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi850.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION azzi850_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="azzi850.ui_browser_refresh" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi850_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzya001 = g_gzya_m.gzya001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.ui_detailshow" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION azzi850_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="azzi850.ui_dialog" ver="42" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION azzi850_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi850_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_gzya_m.* TO NULL
         CALL g_gzyb_d.clear()
         CALL g_gzyb2_d.clear()
         CALL g_gzyb3_d.clear()
         CALL g_gzyb4_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL azzi850_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL azzi850_fetch('') # reload data
               LET l_ac = 1
               CALL azzi850_ui_detailshow() #Setting the current row 
         
               CALL azzi850_idx_chk()
               #NEXT FIELD gzyb002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_gzyb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi850_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               CALL azzi850_b_fill2('2')
CALL azzi850_b_fill2('3')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL azzi850_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_gzyb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi850_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               CALL azzi850_b_fill2('2')
CALL azzi850_b_fill2('3')
 
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL azzi850_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #第二階單身段落
         DISPLAY ARRAY g_gzyb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi850_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx2 = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL azzi850_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第二階單身段落
         DISPLAY ARRAY g_gzyb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi850_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx2 = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL azzi850_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL azzi850_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi850_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi850_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL azzi850_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL azzi850_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL azzi850_set_act_visible()   
            CALL azzi850_set_act_no_visible()
            IF NOT (g_gzya_m.gzya001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " gzyaent = '" ||g_enterprise|| "' AND",
                                  " gzya001 = '", g_gzya_m.gzya001, "' "
 
               #填到對應位置
               CALL azzi850_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gzya_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzyb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL azzi850_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gzya_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzyb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi850_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL azzi850_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL azzi850_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL azzi850_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi850_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL azzi850_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi850_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL azzi850_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi850_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL azzi850_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi850_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL azzi850_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi850_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_gzyb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_gzyb2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_gzyb3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_gzyb4_d)
                  LET g_export_id[4]   = "s_detail4"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzyb002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi850_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi850_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi850_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi850_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi850_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi850_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION add_by_qbe
            LET g_action_choice="add_by_qbe"
            IF cl_auth_chk_act("add_by_qbe") THEN
               
               #add-point:ON ACTION add_by_qbe
               {<point name="menu.add_by_qbe" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL azzi850_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi850_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi850_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="azzi850.ui_headershow" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi850_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_gzya_m.gzya001 = g_browser[g_current_idx].b_gzya001   
 
   EXECUTE azzi850_master_referesh USING g_gzya_m.gzya001 INTO g_gzya_m.gzya001,g_gzya_m.gzyastus,g_gzya_m.gzyaownid, 
       g_gzya_m.gzyaowndp,g_gzya_m.gzyacrtid,g_gzya_m.gzyacrtdp,g_gzya_m.gzyacrtdt,g_gzya_m.gzyamodid, 
       g_gzya_m.gzyamoddt,g_gzya_m.gzyaownid_desc,g_gzya_m.gzyacrtid_desc,g_gzya_m.gzyacrtdp_desc,g_gzya_m.gzyamodid_desc 

   CALL azzi850_gzya_t_mask()
   CALL azzi850_show()
      
END FUNCTION
]]>
  </section>
  <section id="azzi850.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi850_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi850_bcl
   END IF
   
 
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi850_bcl2
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi850_bcl3
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi850.update_b" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi850_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzyb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL azzi850_gzyb_t_mask_restore('restore_mask_o')
               
      UPDATE gzyb_t 
         SET (gzyb001,
              gzyb002
              ,gzyb003,gzyb004,gzyb005,gzyb006,gzyb007,gzybownid,gzybowndp,gzybcrtid,gzybcrtdp,gzybcrtdt,gzybmodid,gzybmoddt) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzyb_d[g_detail_idx].gzyb003,g_gzyb_d[g_detail_idx].gzyb004,g_gzyb_d[g_detail_idx].gzyb005, 
                  g_gzyb_d[g_detail_idx].gzyb006,g_gzyb_d[g_detail_idx].gzyb007,g_gzyb2_d[g_detail_idx].gzybownid, 
                  g_gzyb2_d[g_detail_idx].gzybowndp,g_gzyb2_d[g_detail_idx].gzybcrtid,g_gzyb2_d[g_detail_idx].gzybcrtdp, 
                  g_gzyb2_d[g_detail_idx].gzybcrtdt,g_gzyb2_d[g_detail_idx].gzybmodid,g_gzyb2_d[g_detail_idx].gzybmoddt)  

         WHERE gzybent = g_enterprise AND gzyb001 = ps_keys_bak[1] AND gzyb002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL azzi850_gzyb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzyc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL azzi850_gzyc_t_mask_restore('restore_mask_o')
               
      UPDATE gzyc_t 
         SET (gzyc001,gzyc002,
              gzyc003
              ,gzyc004,gzyc005) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_gzyb3_d[g_detail_idx2].gzyc004,g_gzyb3_d[g_detail_idx2].gzyc005) 
         WHERE gzycent = g_enterprise AND gzyc001 = ps_keys_bak[1] AND gzyc002 = ps_keys_bak[2] AND gzyc003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL azzi850_gzyc_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzyd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL azzi850_gzyd_t_mask_restore('restore_mask_o')
               
      UPDATE gzyd_t 
         SET (gzyd001,gzyd002,
              gzyd003
              ,gzyd004,gzyd005) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_gzyb4_d[g_detail_idx2].gzyd004,g_gzyb4_d[g_detail_idx2].gzyd005) 
         WHERE gzydent = g_enterprise AND gzyd001 = ps_keys_bak[1] AND gzyd002 = ps_keys_bak[2] AND gzyd003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyd_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzyd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL azzi850_gzyd_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
