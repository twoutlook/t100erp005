<add_points prog="azzi903" std_prog="azzi903" erpver="1.0" module="AZZ" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.azzi903_check_gzzp001" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[# 資料必須為gzza001內存在的資料
PRIVATE FUNCTION azzi903_check_gzzp001()
DEFINE ls_str STRING  
   
   DEFINE l_cnt LIKE type_t.num5
   DEFINE li_code LIKE type_t.num5

   LET g_errno = NULL 
   

   SELECT COUNT(*) INTO l_cnt 
      FROM gzza_t WHERE gzza001 = g_gzzp_m.gzzp001
   #先檢查 gzza_t 
   IF l_cnt = 0 THEN 
       
      SELECT COUNT(*) INTO l_cnt 
        FROM gzde_t WHERE gzde001 = g_gzzp_m.gzzp001
      #在檢查 gzzp_t
      IF l_cnt = 0 THEN 
         LET g_errno = "azz-00085"
      END IF 
      
   END IF
END FUNCTION]]>
</point>
  <point name="function.azzi903_check_gzzp002" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#為 0:選單分類類別，則此處不管制輸入內容
#為 1:程式功能項目，則檢查必須存在於 gzzr_t.gzzr001 = gzzp001 時的 gzzr_t.gzzr002 項目清單內
#為 2:關聯作業項目，則檢查必須存在於 gzzz_t.gzzz001 內
PRIVATE FUNCTION azzi903_check_gzzp002()
DEFINE li_cnt LIKE type_t.num5
   DEFINE lc_gzzp005 LIKE gzzp_t.gzzp005
   DEFINE ls_sql STRING 
   LET g_errno = NULL 
   #DISPLAY "g_gzzp_m.gzzp005:",g_gzzp_m.gzzp005
   CASE 
      WHEN g_gzzp_m.gzzp005 = "1" #必在action 清單要有資料 azzp195
         LET ls_sql = "SELECT COUNT(*) FROM gzzr_t WHERE ", 
             "gzzr001 ='",g_gzzp_m.gzzp001,"'" ," AND gzzr002='",g_gzzp_m.gzzp002,"'"
        
      WHEN g_gzzp_m.gzzp005 = "2" #必在azzi910 要有資料
         LET ls_sql = "SELECT COUNT(*) FROM gzzz_t WHERE gzzz001 ='",g_gzzp_m.gzzp001,"'" 
      OTHERWISE 
         RETURN  
   END CASE 

   PREPARE chk_gzzp002_pre FROM ls_sql
   EXECUTE  chk_gzzp002_pre INTO li_cnt
   IF li_cnt = 0  THEN 
      IF g_gzzp_m.gzzp005 = "1" THEN 
         LET g_errno = "azz-00047" #1:程式功能項目，則必須存在於 程式 action 清單內
      ELSE 
         LET g_errno = "azz-00048" #2:關聯作業項目，則必須存在於 系統可執行的作業列表内
      END IF 
   
   END IF 
   
   FREE chk_gzzp002_pre
END FUNCTION]]>
</point>
  <point name="function.azzi903_check_gzzp005" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[#當上階功能為整單操作及明細操作或其子項目時，gzzp005只能選 0,1
#若為相關資料/作業/查詢/報表/嵾數  時，則只能選 0,2 其中之一
PRIVATE FUNCTION azzi903_check_gzzp005()
#0:選單分類類別
#1:程式功能項目
#2:關聯作業項目
   DEFINE ls_sql STRING 
   DEFINE li_cnt LIKE type_t.num5 

   LET g_errno = NULL    
   CASE 
      WHEN g_gzzp_m.gzzp003 = "full_operator" OR g_gzzp_m.gzzp003 = "detail_operator"
         IF g_gzzp_m.gzzp005 = "2" THEN 
             LET g_errno = "azz-00046"
          END IF 
     WHEN g_gzzp_m.gzzp003 = "relating_report" OR g_gzzp_m.gzzp003 = "relating_parameter" 
          OR g_gzzp_m.gzzp003 = "relating_query" OR g_gzzp_m.gzzp003 = "relating_job"
          OR g_gzzp_m.gzzp003 = "relating_data" 
          IF g_gzzp_m.gzzp005 = "1" THEN 
            LET g_errno = "azz-00045"   #若為相關資料/作業/查詢/報表/嵾數 只能選0:選單分類類別 / 2:關聯作業項目
          END IF
     WHEN g_gzzp_m.gzzp003 = "popup_action"
                 
     OTHERWISE 
         CALL azzi903_check_gzzp005_1(g_gzzp_m.gzzp001,g_gzzp_m.gzzp002)
   END CASE
END FUNCTION]]>
</point>
  <point name="function.azzi903_check_gzzp005_1" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[# 遞迴檢查樹狀資料
PRIVATE FUNCTION azzi903_check_gzzp005_1(pc_gzzp001,pc_gzzp002)
DEFINE ls_sql     STRING 
  DEFINE pc_gzzp001 LIKE gzzp_t.gzzp001
  DEFINE pc_gzzp002 LIKE gzzp_t.gzzp002
  DEFINE lc_gzzp002 LIKE gzzp_t.gzzp002
  DEFINE lc_gzzp003 LIKE gzzp_t.gzzp003
  DEFINE li_rtn     LIKE type_t.num5

  SELECT gzzp002,gzzp003 INTO lc_gzzp002,lc_gzzp003 FROM gzzp_t 
    WHERE gzzp001 = pc_gzzp001 AND gzzp002 = pc_gzzp002
 
    IF lc_gzzp002 = lc_gzzp003 THEN 
       CASE 
          WHEN lc_gzzp003 = "full_operator" OR lc_gzzp003 = "detail_operator"

               IF g_gzzp_m.gzzp005 = "2" THEN 
                  LET g_errno = "azz-00046"
               END IF
          WHEN lc_gzzp003 = "relating_report" OR lc_gzzp003 = "relating_parameter" 
              OR lc_gzzp003 = "relating_query" OR lc_gzzp003 = "relating_job"
              OR lc_gzzp003 = "relating_data" 
              IF g_gzzp_m.gzzp005 = "1" THEN 
                  LET g_errno = "azz-00045"   #若為相關資料/作業/查詢/報表/嵾數 只能選0:選單分類類別 / 2:關聯作業項目
              END IF
          WHEN g_gzzp_m.gzzp003 = "popup_action"
          
       END CASE  
    ELSE 

       LET pc_gzzp002 = lc_gzzp003 
       CALL azzi903_check_gzzp005_1(pc_gzzp001,pc_gzzp002)
    END IF
END FUNCTION]]>
</point>
  <point name="function.azzi903_gzzr_fill" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: azzi903_gzzr_fill()
#                 
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi903_gzzr_fill()
   DEFINE li_cnt LIKE type_t.num5
   DEFINE li_code LIKE type_t.num5
   DEFINE ls_sql STRING 
   DEFINE ls_comment  STRING
   DEFINE ls_standard  STRING

   LET li_code = s_azzi903_check_gzzp001(g_gzzp_m.gzzp001)
   #DISPLAY "li_code:",li_code
   CASE 
      WHEN li_code = 1 #主程式
         LET ls_sql = "SELECT gzzr001,gzzr002 FROM gzzr_t WHERE gzzr001 = ?" 

      WHEN li_code = 2 #子程式
         LET ls_sql = "SELECT UNIQUE gzzr004,gzzr002 FROM gzzr_t WHERE gzzr004 = ?"
      OTHERWISE 
         RETURN    
   END CASE 

   PREPARE azzi903_gzzr_pre FROM ls_sql
   DECLARE azzi903_gzzr_cur CURSOR FOR azzi903_gzzr_pre 
   OPEN azzi903_gzzr_cur USING g_gzzp_m.gzzp001
   CALL g_gzzr_d.clear()
   LET li_cnt = 1 
   FOREACH azzi903_gzzr_cur INTO g_gzzr_d[li_cnt].gzzr001,g_gzzr_d[li_cnt].gzzr002
      CALL s_azzi903_get_gzzq(g_gzzr_d[li_cnt].gzzr001,g_gzzr_d[li_cnt].gzzr002) 
           RETURNING g_gzzr_d[li_cnt].gzzr002_desc,ls_comment,ls_standard
     
      LET  li_cnt = li_cnt + 1 
   END FOREACH
   CALL g_gzzr_d.deleteElement(li_cnt)
   
   CLOSE azzi903_gzzr_cur
   FREE azzi903_gzzr_pre
END FUNCTION]]>
</point>
  <point name="browser_create.before_pre" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[     LET g_sql = " SELECT UNIQUE gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 FROM azzi903_tmp a ",
                  " WHERE ",
                  "a.gzzp001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(*) FROM azzi903_tmp b WHERE a.gzzp003 = b.gzzp002 ", 
                  " AND a.gzzp001 = b.gzzp001",
                  ") = 0 OR ", 
                  " a.gzzp002 = a.gzzp003 )", 
                  " ORDER BY a.gzzp004"]]>
</point>
  <point name="browser_create.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_expand.before_pre" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_expand.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="browser_fill.before_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      
   IF NOT g_init_sw  THEN   
      LET g_init_sw = TRUE
      RETURN 
   END IF 
   CALL g_gzzr_d.clear()]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="check.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="chk_hasC.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="construct.a.gzzp001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result #g_gzzp_m.gzzp001
            IF cl_null(ls_result) THEN 

               CALL cl_err('','azz-00094',0)               
               NEXT FIELD gzzp001
            END IF 

            LET li = 1
            #CALL gd_arr.clear()
            IF ls_result.getIndexOf("|",1) THEN 
               LET lst_values = base.StringTokenizer.create(ls_result, "|") 
               WHILE lst_values.hasMoreTokens() 
                     LET g_gzzp_m.gzzp001 = lst_values.nextToken()
                     CALL azzi903_check_gzzp001()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err('',g_errno,1)
                        NEXT FIELD gzzp001
                     END IF
                     LET gd_arr[li] = g_gzzp_m.gzzp001 
                     LET li = li + 1 
               END WHILE

            ELSE 
               LET g_gzzp_m.gzzp001 = ls_result
               CALL azzi903_check_gzzp001()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD gzzp001
               END IF 
               LET gd_arr[li] = g_gzzp_m.gzzp001 
               LET li = li + 1   
            END IF 
            ]]>
</point>
  <point name="construct.a.gzzp002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzp003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzp004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzp005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzpcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzpcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzpmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzpowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzpownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzpstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.gzzq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.a.lc_standard" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzp001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzp002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzp003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzp004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzp005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpcrtdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpmoddt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzpstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.gzzq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.b.lc_standard" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzp001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzza001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzp001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO gzza003 #模組編號 
               #DISPLAY g_qryparam.return3 TO gzza002 #程式類別 
               #DISPLAY g_qryparam.return4 TO gzzal003 #程式名稱 

            NEXT FIELD gzzp001                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzzp002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzp003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzp004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzp005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzza001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzp005  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO gzza003 #模組編號 
               #DISPLAY g_qryparam.return3 TO gzza002 #程式類別 
               #DISPLAY g_qryparam.return4 TO gzzal003 #程式名稱 

            NEXT FIELD gzzp005                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzzpcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzpcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzpmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzpowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzpownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzpstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.gzzq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="construct.c.lc_standard" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #   IF NOT g_wc.getIndexOf("and",1) THEN 
#       #azzp193 azzi900 4ad zh_TW  
#       IF ld_arr.getLength() > 0 THEN 
#          FOR li = 1 TO ld_arr.getLength()
#              LET ls_cmd = " azzp193 ",ld_arr[li]," 4ad ",g_lang
#              CALL cl_cmdrun(ls_cmd)
#              LET ls_cmd = " azzp193 ",ld_arr[li]," 4tm ",g_lang
#              CALL cl_cmdrun(ls_cmd) 
#          END  FOR 
#          
#       END IF 
#   END IF ]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DEFINE ls_cmd      STRING
   DEFINE lst_values  base.StringTokenizer 

   #DEFINE ld_arr    DYNAMIC ARRAY OF STRING  
   DEFINE li       LIKE type_t.num5 ]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF NOT cl_null(g_argv[1]) THEN
      LET gd_arr[1] = g_argv[1] 
      LET g_init_sw = TRUE
   END IF  ]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_init_sw = FALSE
   CALL gd_arr.clear()]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="delete.before_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE li_chk    LIKE type_t.num5 ]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[     #    IF g_gzzp_m.lc_standard = "Y" THEN
         #DELETE FROM gzzq_t 
         #   WHERE  gzzq001 = "standard"
         #   AND gzzq002 = g_gzzp_m.gzzp002 
     # ELSE 
         #DELETE FROM gzzq_t 
         #   WHERE  gzzq001 = g_gzzp_m.gzzp001
         #   AND gzzq002 = g_gzzp_m.gzzp002 
     # END IF 
     
     #  IF SQLCA.sqlcode THEN
     #    CALL cl_err("gzzp_t",SQLCA.sqlcode,0)
         #ROLLBACK WORK
     #  END IF 
   
   #是否重新產生4tm 4ad      
   LET g_status_sw = TRUE
   LET li_chk = FALSE 
   FOR li_cnt = 1 TO gd_arr.getLength() 
       IF g_gzzp_m.gzzp001  = gd_arr[li_cnt] THEN 
          LET li_chk = TRUE 
          EXIT FOR  
       END IF                       
   END FOR 
   IF NOT li_chk THEN 
      LET li_cnt = gd_arr.getLength() 
      LET li_cnt = li_cnt + 1 
      LET gd_arr[li_cnt] = g_gzzp_m.gzzp001  
   END IF     ]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="desc_show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DEFINE lc_gzzal003  LIKE gzzal_t.gzzal003]]>
</point>
  <point name="desc_show.show" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[       #  LET g_browser[l_ac].b_show = 
    #       g_browser[l_ac].b_gzzp001,
    #         '(',g_browser[l_ac].b_gzzp002,')'

   CALL s_azzi903_get_gzzq(g_browser[l_ac].b_gzzp001,g_browser[l_ac].b_gzzp002) RETURNING g_gzzp_m.gzzq004, g_gzzp_m.gzzq005,g_gzzp_m.lc_standard          
      IF g_browser[l_ac].b_gzzp002 = g_browser[l_ac].b_gzzp001 THEN 
         SELECT gzzal003 INTO lc_gzzal003 FROM gzzal_t WHERE gzzal001=g_browser[l_ac].b_gzzp002 AND gzzal002 = g_lang 
         #LET g_browser[l_ac].b_show = g_browser[l_ac].b_gzzp002,'(',lc_gzzal003,')' 
         LET g_browser[l_ac].b_show = lc_gzzal003 ,'(',g_browser[l_ac].b_gzzp002,')'
      ELSE 
         #LET g_browser[l_ac].b_show = g_browser[l_ac].b_gzzp002,'(',g_gzzp_m.gzzq004,')' 
         LET g_browser[l_ac].b_show =g_gzzp_m.gzzq004,'(',g_browser[l_ac].b_gzzp002 ,')'
      END IF ]]>
</point>
  <point name="fetch.after_fetch" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="fetch.before_refresh" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="fetch.befroe_fetch" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET ls_chk = g_browser[g_current_idx].b_id 
   #當游標點擊每一棵樹root 清空畫面
   IF ls_chk.getIndexOf('.',1) = 0 THEN
      CALL g_gzzr_d.clear()
      LET g_gzzp001 =  ""
   END IF]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="find_node.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[ TYPE type_g_gzzr_d        RECORD
   gzzr001 LIKE gzzr_t.gzzr001,
   gzzr002 LIKE gzzr_t.gzzr002,
   gzzr002_desc LIKE gzzq_t.gzzq004 
       END RECORD
DEFINE g_gzzr_d   DYNAMIC ARRAY OF type_g_gzzr_d 
DEFINE g_gzzp001    STRING 

DEFINE g_init_sw             LIKE type_t.num5        #程式一開始執行起始狀態
DEFINE gd_arr    DYNAMIC ARRAY OF STRING  

DEFINE g_status_sw             LIKE type_t.num5        #是否重新產生4tm 4ad]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_combo_scc('b_gzzp005','97')
   LET g_status_sw = FALSE]]>
</point>
  <point name="input.a.gzzp001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF  NOT cl_null(g_gzzp_m.gzzp001) THEN 
                CALL azzi903_check_gzzp001()
                IF NOT cl_null(g_errno) THEN
                   CALL cl_err('',g_errno,1)
                   NEXT FIELD gzzp001
                END IF
            END IF 
            #此段落由子樣板a05產生   
            IF  NOT cl_null(g_gzzp_m.gzzp001) AND NOT cl_null(g_gzzp_m.gzzp002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzzp_m.gzzp001 != g_gzzp001_t  OR g_gzzp_m.gzzp002 != g_gzzp002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzzp_t WHERE "||"gzzp001 = '"||g_gzzp_m.gzzp001 ||"' AND "|| "gzzp002 = '"||g_gzzp_m.gzzp002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzp_m.gzzp001
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzzp_m.gzzp001_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzzp_m.gzzp001_desc
]]>
</point>
  <point name="input.a.gzzp002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #此段落由子樣板a05產生
               IF NOT cl_null(g_gzzp_m.gzzp002) THEN 
                  CALL azzi903_check_gzzp002()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err('',g_errno,1)
                     NEXT FIELD gzzp002
                  END IF

               END IF
               IF  NOT cl_null(g_gzzp_m.gzzp001) AND NOT cl_null(g_gzzp_m.gzzp002) THEN 
                   IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzzp_m.gzzp001 != g_gzzp001_t  OR g_gzzp_m.gzzp002 != g_gzzp002_t ))) THEN 
                      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzzp_t WHERE "||"gzzp001 = '"||g_gzzp_m.gzzp001 ||"' AND "|| "gzzp002 = '"||g_gzzp_m.gzzp002 ||"'",'std-00004',0) THEN 
                         NEXT FIELD CURRENT
                     END IF
                   END IF
                   
                   CALL azzi903_check_gzzp005()
                   IF NOT cl_null(g_errno) THEN
                      CALL cl_err('',g_errno,1)
                      NEXT FIELD gzzp005
                   END IF     

                END IF

                CALL s_azzi903_get_gzzq(g_gzzp_m.gzzp001,g_gzzp_m.gzzp002) RETURNING g_gzzp_m.gzzq004, g_gzzp_m.gzzq005,g_gzzp_m.lc_standard
                DISPLAY g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.lc_standard TO  gzzq004 ,gzzq005,lc_standard
            
]]>
</point>
  <point name="input.a.gzzp003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF g_gzzp_m.gzzp003 <> g_gzzp_m.gzzp002 THEN 
               IF NOT ap_chk_isExist(g_gzzp_m.gzzp003,"SELECT COUNT(*) FROM gzzp_t WHERE gzzp002 = ?  AND gzzp001 = '"||g_gzzp_m.gzzp001||"'",'tree-002',1)  THEN
                  NEXT FIELD gzzp003
               END IF
            END IF
            IF  NOT cl_null(g_gzzp_m.gzzp001) AND NOT cl_null(g_gzzp_m.gzzp002) THEN 

               CALL azzi903_check_gzzp005()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err('',g_errno,1)
                     NEXT FIELD gzzp005
                  END IF     
            END IF

]]>
</point>
  <point name="input.a.gzzp004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.gzzp005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         IF  NOT cl_null(g_gzzp_m.gzzp001) AND NOT cl_null(g_gzzp_m.gzzp002) THEN 

               CALL azzi903_check_gzzp005()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err('',g_errno,1)
                     NEXT FIELD gzzp005
                  END IF     
            END IF
            IF  NOT cl_null(g_gzzp_m.gzzp001) THEN 
               #種類 gzzp005 = 2 (關聯作業項目)
               IF g_gzzp_m.gzzp005 = "2" THEN 
                  #功能名稱 = 程式編號必關閉gzzq004 gzzq005
                  LET g_gzzp_m.gzzq004 = g_gzzp_m.gzzp001
                  DISPLAY BY NAME g_gzzp_m.gzzq004
                  CALL cl_set_comp_entry("gzzq004,gzzq005",FALSE)
               ELSE 
                  LET g_gzzp_m.gzzq004 = ""
                  CALL cl_set_comp_entry("gzzq004,gzzq005",TRUE)    
               END IF 
            END IF ]]>
</point>
  <point name="input.a.gzzpcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzp_m.gzzpcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzzp_m.gzzpcrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzzp_m.gzzpcrtdp_desc
]]>
</point>
  <point name="input.a.gzzpcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzp_m.gzzpcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzzp_m.gzzpcrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzzp_m.gzzpcrtid_desc
]]>
</point>
  <point name="input.a.gzzpmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzp_m.gzzpmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzzp_m.gzzpmodid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzzp_m.gzzpmodid_desc
]]>
</point>
  <point name="input.a.gzzpowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzp_m.gzzpowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzzp_m.gzzpowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzzp_m.gzzpowndp_desc
]]>
</point>
  <point name="input.a.gzzpownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzp_m.gzzpownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzzp_m.gzzpownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzzp_m.gzzpownid_desc
]]>
</point>
  <point name="input.a.gzzpstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.gzzq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        IF NOT cl_null(g_gzzp_m.gzzp004) THEN
               IF NOT cl_chk_tworcn(g_lang,g_gzzp_m.gzzq004,20) THEN
                  NEXT FIELD gzzq004
               END IF 
            END IF]]>
</point>
  <point name="input.a.gzzq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.a.lc_standard" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        #種類 gzzp005 = 2 (關聯作業項目) 
            IF g_gzzp_m.gzzp005 = "2" THEN 
               #功能名稱 = 程式編號必關閉gzzq004 gzzq005
               LET g_gzzp_m.gzzq004 = g_gzzp_m.gzzp001
               DISPLAY BY NAME g_gzzp_m.gzzq004
               CALL cl_set_comp_entry("gzzq004,gzzq005",FALSE)
            ELSE 
               #LET g_gzzp_m.gzzq004 = ""
               CALL cl_set_comp_entry("gzzq004,gzzq005",TRUE)    
            END IF
            CALL DIALOG.setFieldTouched("gzzp003", TRUE)]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[    ]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.after_set_no_entry" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.b.gzzp001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.gzzp002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.gzzp003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#            IF  NOT cl_null(g_gzzp_m.gzzp001) AND NOT cl_null(g_gzzp_m.gzzp002) THEN 
#
#               CALL azzi903_check_gzzp005()
#                  IF NOT cl_null(g_errno) THEN
#                     CALL cl_err('',g_errno,1)
#                     NEXT FIELD gzzp005
#                  END IF     
#            END IF ]]>
</point>
  <point name="input.b.gzzp004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.gzzp005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.gzzpstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.gzzq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.gzzq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.b.lc_standard" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.gzzp001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzzp_m.gzzp001             #給予default值
            LET g_qryparam.default2 = "" #g_gzzp_m.gzza003 #模組編號
            LET g_qryparam.default3 = "" #g_gzzp_m.gzza002 #程式類別
            LET g_qryparam.default4 = "" #g_gzzp_m.gzzal003 #程式名稱

            #給予arg

            CALL q_gzza001_1()                                #呼叫開窗

            LET g_gzzp_m.gzzp001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_gzzp_m.gzza003 = g_qryparam.return2 #模組編號
            #LET g_gzzp_m.gzza002 = g_qryparam.return3 #程式類別
            #LET g_gzzp_m.gzzal003 = g_qryparam.return4 #程式名稱

            DISPLAY g_gzzp_m.gzzp001 TO gzzp001              #顯示到畫面上
            #DISPLAY g_gzzp_m.gzza003 TO gzza003 #模組編號
            #DISPLAY g_gzzp_m.gzza002 TO gzza002 #程式類別
            #DISPLAY g_gzzp_m.gzzal003 TO gzzal003 #程式名稱

            NEXT FIELD gzzp001                          #返回原欄位

]]>
</point>
  <point name="input.c.gzzp002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.gzzp003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.gzzp004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.gzzp005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzzp_m.gzzp005             #給予default值
            LET g_qryparam.default2 = "" #g_gzzp_m.gzza003 #模組編號
            LET g_qryparam.default3 = "" #g_gzzp_m.gzza002 #程式類別
            LET g_qryparam.default4 = "" #g_gzzp_m.gzzal003 #程式名稱

            #給予arg

            CALL q_gzza001()                                #呼叫開窗

            LET g_gzzp_m.gzzp005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_gzzp_m.gzza003 = g_qryparam.return2 #模組編號
            #LET g_gzzp_m.gzza002 = g_qryparam.return3 #程式類別
            #LET g_gzzp_m.gzzal003 = g_qryparam.return4 #程式名稱

            DISPLAY g_gzzp_m.gzzp005 TO gzzp005              #顯示到畫面上
            #DISPLAY g_gzzp_m.gzza003 TO gzza003 #模組編號
            #DISPLAY g_gzzp_m.gzza002 TO gzza002 #程式類別
            #DISPLAY g_gzzp_m.gzzal003 TO gzzal003 #程式名稱

            NEXT FIELD gzzp005                          #返回原欄位

]]>
</point>
  <point name="input.c.gzzpstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.gzzq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.gzzq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.c.lc_standard" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE li_stus   LIKE type_t.num5
   DEFINE li_chk    LIKE type_t.num5 
   DEFINE li_cnt    LIKE type_t.num5   ]]>
</point>
  <point name="input.g.gzzp001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.gzzp002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.gzzp003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.gzzp004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.gzzp005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.gzzpstus" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.gzzq004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.gzzq005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.g.lc_standard" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  #是否重新產生4tm 4ad 
                  LET g_status_sw = TRUE
                  LET li_chk = FALSE 
                  FOR li_cnt = 1 TO gd_arr.getLength() 
                      IF g_gzzp_m.gzzp001  = gd_arr[li_cnt] THEN 
                         LET li_chk = TRUE 
                         EXIT FOR  
                      END IF                       
                  END FOR 
                  IF NOT li_chk THEN 
                     LET li_cnt = gd_arr.getLength() 
                     LET li_cnt = li_cnt + 1 
                     LET gd_arr[li_cnt] = g_gzzp_m.gzzp001  
                  END IF
                  
                  IF g_gzzp_m.lc_standard = "Y" THEN 
                     LET li_stus = s_azzi903_ins_gzzq("standard",g_gzzp_m.gzzp002,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005) 
                  ELSE
                     LET li_stus = s_azzi903_ins_gzzq(g_gzzp_m.gzzp001,g_gzzp_m.gzzp002,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005)
                  END IF  
                  IF NOT li_stus THEN  
                     CONTINUE DIALOG
                  END IF ]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  
                  LET g_status_sw = TRUE
                  LET li_chk = FALSE 
                  FOR li_cnt = 1 TO gd_arr.getLength() 
                      IF g_gzzp_m.gzzp001  = gd_arr[li_cnt] THEN 
                         LET li_chk = TRUE 
                         EXIT FOR  
                      END IF                       
                  END FOR 
                  IF NOT li_chk THEN 
                     LET li_cnt = gd_arr.getLength() 
                     LET li_cnt = li_cnt + 1 
                     LET gd_arr[li_cnt] = g_gzzp_m.gzzp001  
                  END IF
                  
                  IF g_gzzp_m.lc_standard = "Y" THEN 
                     LET li_stus = s_azzi903_ins_gzzq("standard",g_gzzp_m.gzzp002,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005) 
                  ELSE
                     LET li_stus = s_azzi903_ins_gzzq(g_gzzp_m.gzzp001,g_gzzp_m.gzzp002,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005)
                  END IF
                  IF NOT li_stus THEN 
                     #ROLLBACK WORK
                  END IF
]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                     ]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                     ]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  ]]>
</point>
  <point name="input.master_input.update_gzzd" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               INITIALIZE g_ref_fields TO NULL

               IF g_gzzp_m.lc_standard = "Y" THEN 
                  CALL n_gzzq("standard",g_gzzp_m.gzzp002) 
                  LET g_ref_fields[1] = "standard"   
               ELSE
                  CALL n_gzzq(g_gzzp_m.gzzp001,g_gzzp_m.gzzp002) 
                  LET g_ref_fields[1] = g_gzzp_m.gzzp001
               END IF  
                
               LET g_ref_fields[2] = g_gzzp_m.gzzp002
               CALL ap_ref_array2(g_ref_fields," SELECT gzzq004,gzzq005 FROM gzzq_t WHERE gzzq001 = ? AND gzzq002 = ? AND gzzq003 = '"||g_lang||"'","") RETURNING g_rtn_fields
                
               LET g_gzzp_m.gzzq004 = g_rtn_fields[1]
               LET g_gzzp_m.gzzq005 = g_rtn_fields[2]
               DISPLAY "g_rtn_fields[1]:",g_gzzp_m.gzzq004
               DISPLAY "g_rtn_fields[2]:",g_gzzp_m.gzzq005
               DISPLAY BY NAME g_gzzp_m.gzzq004,g_gzzp_m.gzzq005
         ]]>
</point>
  <point name="input.master_input.update_gzzq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              INITIALIZE g_ref_fields TO NULL

               IF g_gzzp_m.lc_standard = "Y" THEN 
                  CALL n_gzzq("standard",g_gzzp_m.gzzp002) 
                  LET g_ref_fields[1] = "standard"   
               ELSE
                  CALL n_gzzq(g_gzzp_m.gzzp001,g_gzzp_m.gzzp002) 
                  LET g_ref_fields[1] = g_gzzp_m.gzzp001
               END IF  
                
               LET g_ref_fields[2] = g_gzzp_m.gzzp002
               CALL ap_ref_array2(g_ref_fields," SELECT gzzq004,gzzq005 FROM gzzq_t WHERE gzzq001 = ? AND gzzq002 = ? AND gzzq003 = '"||g_lang||"'","") RETURNING g_rtn_fields
                
               LET g_gzzp_m.gzzq004 = g_rtn_fields[1]
               LET g_gzzp_m.gzzq005 = g_rtn_fields[2]
               #DISPLAY "g_rtn_fields[1]:",g_gzzp_m.gzzq004
               #DISPLAY "g_rtn_fields[2]:",g_gzzp_m.gzzq005
               DISPLAY BY NAME g_gzzp_m.gzzq004,g_gzzp_m.gzzq005]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #T100 13/11/21 strat      
      IF g_status_sw THEN 
         IF cl_ask_confirm("azz-00098") THEN 
            LET ld_lng_type = s_azzi070_get_gzzy()

            #IF NOT g_wc.getIndexOf("and",1) THEN 
            #azzp193 azzi900 4ad zh_TW  
            IF gd_arr.getLength() > 0 THEN 
               FOR li = 1 TO gd_arr.getLength()
                   FOR lj = 1 TO ld_lng_type.getLength()
                       LET ls_cmd = " r.r azzp193 ",gd_arr[li]," 4ad ",ld_lng_type[lj].gzzy001
                       RUN ls_cmd 
                       LET ls_cmd = " r.r azzp193 ",gd_arr[li]," 4tm ",ld_lng_type[lj].gzzy001
                       RUN ls_cmd 
#                       LET la_param.prog = "azzp193" 
#                       LET la_param.param[1] = gd_arr[li] 
#                       LET la_param.param[2] = "4ad"
#                       LET la_param.param[3] = ld_lng_type[lj].gzzy001
#                       LET ls_js = util.JSON.stringify(la_param)
#                       CALL cl_cmdrun(ls_js)
#
#                       LET la_param.prog = "azzp193"
#                       LET la_param.param[1] = gd_arr[li]
#                       LET la_param.param[2] = "4tm"
#                       LET la_param.param[3] = ld_lng_type[lj].gzzy001
#                       LET ls_js = util.JSON.stringify(la_param)
#                       CALL cl_cmdrun(ls_js)
                       
                   END FOR
               END  FOR 
            END IF    
         END IF
      END IF       
     #T100 13/11/21 end  ]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DEFINE ld_lng_type   DYNAMIC ARRAY OF RECORD
      gzzy001 LIKE gzzy_t.gzzy001
   END RECORD 
   DEFINE ls_cmd STRING
   DEFINE li LIKE type_t.num5
   DEFINE lj LIKE type_t.num5
   DEFINE ls_msg STRING 
   DEFINE la_param  RECORD
             prog   STRING,  #要執行的程式
             actionid STRING,
             param  DYNAMIC ARRAY OF STRING  #額外傳的參數
                    END RECORD
   DEFINE  ls_js  STRING ]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="match_node.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu2.delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu2.insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu2.modify" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu2.output" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu2.query" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="menu2.reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="query.before_query" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL gd_arr.clear()]]>
</point>
  <point name="query.cancel" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_current_idx <= 0 THEN
         RETURN
      END IF ]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="reproduce.before_reproduce" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF g_gzzp001 <> g_gzzp_m.gzzp001 OR cl_null(g_gzzp001) THEN 
      #DISPLAY "here"
      CALL azzi903_gzzr_fill() 
   END IF 
   LET g_gzzp001 =  g_gzzp_m.gzzp001]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzp_m.gzzp001
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzzp_m.gzzp001_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_gzzp_m.gzzp001_desc

    CALL s_azzi903_get_gzzq(g_gzzp_m.gzzp001,g_gzzp_m.gzzp002) RETURNING g_gzzp_m.gzzq004, g_gzzp_m.gzzq005,g_gzzp_m.lc_standard
    LET g_gzzp_m.gzzp003_desc = g_gzzp_m.gzzq004
    ]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="statechange.active" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="statechange.inactive" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="tmp_tbl_chk.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_dialog.a_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               ]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      ]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                              IF NOT cl_null(g_argv[1]) THEN 
                  LET g_current_idx =  g_current_idx + 1
                  CALL DIALOG.setCurrentRow("s_browse",g_current_idx)
                  CALL azzi903_fetch('') 
               END IF ]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE li_detail_idx LIKE type_t.num5]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                        DISPLAY ARRAY g_gzzr_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b)  
         
               BEFORE DISPLAY 
                  CALL FGL_SET_ARR_CURR(li_detail_idx)      
              

               BEFORE ROW
                  LET li_detail_idx = DIALOG.getCurrentRow("s_detail1")
                  LET l_ac = li_detail_idx
                  DISPLAY li_detail_idx TO FORMONLY.idx
                  #CALL azzi902_ui_detailshow()

            END DISPLAY]]>
</point>
  <point name="ui_dialog.more_displayarray_in_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="azzi903.browser_create" ver="5" status="" src="s">
<![CDATA[PRIVATE FUNCTION azzi903_browser_create(p_type)
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create
   {<point name="browser_create.define"/>}
   #end add-point
   
   #先找出所有的帳別資料
   LET g_sql = " SELECT UNIQUE gzzp001 FROM azzi903_tmp ORDER BY gzzp001"
   PREPARE master_type FROM g_sql
   DECLARE master_typecur CURSOR FOR master_type
   
   INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   FOREACH master_typecur INTO g_browser[l_ac].b_gzzp001
      #確定root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      LET g_browser[l_ac].b_gzzp002  = g_browser[l_ac].b_gzzp001
      LET g_browser[l_ac].b_gzzp001 = g_browser[l_ac].b_gzzp001
      LET g_browser[l_ac].b_pid = "0" CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      #LET g_sql = " SELECT UNIQUE gzzp001,gzzp002,gzzp005,gzzp003,gzzp004,exp_code FROM azzi903_tmp a ", 

      LET g_sql = " SELECT UNIQUE gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 FROM azzi903_tmp a ",
                  
                  " WHERE ",
                  "a.gzzp001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(*) FROM azzi903_tmp b WHERE a.gzzp003 = b.gzzp002 ", 
                  " AND a.gzzp001 = b.gzzp001",
                  ") = 0 OR ", 
                  " a.gzzp002 = a.gzzp003 )", 
                  " ORDER BY a.gzzp002"
      #add-point:browser_create.before_pre
      {<point name="browser_create.before_pre"/>}
      #end add-point
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      OPEN master_getLV2cur USING g_browser[l_ac-1].b_gzzp001
      
      LET g_cnt = l_ac
      
      FOREACH master_getLV2cur INTO g_browser[g_cnt].b_gzzp001,g_browser[g_cnt].b_gzzp002,g_browser[g_cnt].b_gzzp005, 
          g_browser[g_cnt].b_gzzp003,g_browser[g_cnt].b_gzzp004 
         #去除多餘空白
         #LET g_browser[g_cnt].b_gzzp002 = g_browser[g_cnt].b_gzzp002 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         LET g_browser[g_cnt].b_expcode = 2
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = azzi903_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = azzi903_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = azzi903_find_node(g_cnt)
         #END CASE
         IF cl_null("gzzp003") THEN
            LET g_browser[g_cnt].b_hasC = FALSE
         ELSE
            LET g_browser[g_cnt].b_hasC = TRUE
         END IF
 
         LET g_cnt = g_cnt + 1
      END FOREACH
      LET l_ac = g_browser.getLength()
 
   END FOREACH
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_gzzp002) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL azzi903_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
 
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
 
   FREE tree_expand
   FREE master_getLV2
   
END FUNCTION
]]>
</section>
  <section id="azzi903.browser_expand" ver="4" status="" src="s">
<![CDATA[#+ Tree子節點展開
PRIVATE FUNCTION azzi903_browser_expand(p_id)
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         LIKE type_t.chr500
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   #add-point:browser_expand段define
   {<point name="browser_expand.define"/>}
   #end add-point
 
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_gzzp002
   LET l_typevalue = g_browser[p_id].b_gzzp001
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "azzi903_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "gzzp_t"
         LET ls_exp_code = "'2'"
   END CASE
   
   LET l_sql = " SELECT UNIQUE '','','','FALSE','','',",ls_exp_code,",gzzp001,gzzp002,gzzp005,gzzp003, 
       gzzp004",
               " FROM ",ls_source,
               
               " WHERE gzzp003 = '", l_keyvalue,
               "' AND gzzp002 <> gzzp003",
               " AND gzzp001 = '", l_typevalue,"'", 
                " ORDER BY gzzp002"
   
   #add-point:browser_expand段before_pre
   {<point name="browser_expand.before_pre"/>}
   #end add-point
   
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].* 
      #pid=父節點id
      LET g_browser[l_id].b_pid = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_gzzp002 = g_browser[l_id].b_gzzp002 CLIPPED
      CALL azzi903_desc_show(l_id)
      LET g_browser[l_id].b_hasC = azzi903_chk_hasC(l_id)
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
END FUNCTION
]]>
</section>
  <section id="azzi903.browser_fill" ver="5" status="" src="s">
<![CDATA[#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION azzi903_browser_fill(p_wc,p_type)
   DEFINE p_wc       STRING 
   DEFINE p_type     LIKE type_t.chr10
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10   
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   #add-point:browser_fill段fill資料前
   {<point name="browser_fill.before_fill"/>}
   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   LET l_cnt = 0
   LET l_cnt2 = 0
   
   DROP TABLE azzi903_tmp
   
   #Create temp table
   CREATE TEMP TABLE azzi903_tmp
   (
         gzzp001 VARCHAR(500),
   gzzp002 VARCHAR(500),
   gzzp005 VARCHAR(500),
   gzzp003 VARCHAR(500),
   gzzp004 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   #先確定搜尋範圍(若無條件搜尋則只找root出來)
   SELECT COUNT(*) INTO l_cnt FROM gzzp_t 
   
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT COUNT(*)",
               " FROM gzzp_t ",
               " WHERE  ",p_wc ,cl_sql_add_filter("gzzp_t")
              
   PREPARE master_cnt FROM g_sql
   DECLARE master_cntcur CURSOR FOR master_cnt
   OPEN master_cntcur
   FETCH master_cntcur INTO l_cnt2
   LET g_root_search = FALSE
   
   IF l_cnt2 = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code = "-100"
      LET g_errparam.popup = TRUE
      CALL cl_err("","-100",1)
      RETURN
   END IF
   
   IF l_cnt = l_cnt2 THEN
      #未輸入條件時則只查找root節點
      LET p_wc = " gzzp002 = gzzp003 "
      LET g_root_search = TRUE
   END IF
 
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 ",
               " FROM gzzp_t ",
               " WHERE  ",p_wc ,cl_sql_add_filter("gzzp_t")
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
 
   #搜尋建構樹所需的節點
   CASE p_type
      WHEN "1" #上推
         CALL azzi903_match_node(p_wc,p_type) 
      WHEN "2" #下展
         #CALL azzi903_find_speed_tbl(p_wc,p_type) 
         CALL azzi903_match_node(p_wc,p_type) 
      WHEN "3" #全部
         CALL azzi903_match_node(p_wc,p_type) 
   END CASE
 
   CALL azzi903_browser_create(p_type)
     
END FUNCTION
]]>
</section>
  <section id="azzi903.check" ver="2" status="" src="s">
<![CDATA[#+ 避免資料錯誤
PRIVATE FUNCTION azzi903_check(ps_id,ps_pid ,ps_type)
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING
   DEFINE ps_type     STRING
   DEFINE ls_pid      LIKE type_t.chr100
   DEFINE ls_id       LIKE type_t.chr100
   DEFINE ls_type     LIKE type_t.chr100
   DEFINE ls_return   LIKE type_t.num5
   #add-point:check段define
   {<point name="check.define"/>}
   #end add-point
   
   LET ls_return = FALSE
   LET ls_pid = ps_pid
   LET ls_type = ps_type
   
   #比對所有祖先節點
   WHILE TRUE
      
      SELECT gzzp003,gzzp002 INTO ls_pid,ls_id FROM gzzp_t
         WHERE gzzp002 = ls_pid
         AND gzzp001 = ls_type
 
      IF SQLCA.sqlcode OR ls_pid = ls_id THEN
         EXIT WHILE
      END IF
      
      IF ls_pid = ps_id THEN
         LET ls_return = TRUE
         EXIT WHILE
      END IF
      
   END WHILE
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="azzi903.chk_hasC" ver="4" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi903_chk_hasC(pi_id)
   DEFINE pi_id    LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define"/>}
   #end add-point
   
   LET g_sql = "SELECT COUNT(gzzp003) FROM azzi903_tmp ",
               " WHERE ",
                "gzzp003 = ? AND ",
                "exp_code <> '-1' AND gzzp002 <> gzzp003 "
                 ," AND ",
                "gzzp001 = ?"
 
   PREPARE azzi903_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(*) FROM gzzp_t ",
               " WHERE  ", 
               "gzzp002 <> gzzp003 AND ",
               "gzzp003 = ? ",
                " AND ",
               "gzzp001 = ?",
               cl_sql_add_filter("gzzp_t")
   
   PREPARE azzi903_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE azzi903_temp_chk 
           USING g_browser[pi_id].b_gzzp002
                 ,g_browser[pi_id].b_gzzp001
            INTO li_cnt
         FREE azzi903_temp_chk
      WHEN 2 
         EXECUTE azzi903_master_chk 
           USING g_browser[pi_id].b_gzzp002
                 ,g_browser[pi_id].b_gzzp001
            INTO li_cnt
         FREE azzi903_master_chk
   END CASE
    
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi903.construct" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi903_construct()
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM
   INITIALIZE g_gzzp_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_qryparam.state = "c"
    
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      CONSTRUCT BY NAME g_wc ON gzzp001,gzzp003,gzzp005,gzzp004,gzzp002,lc_standard,gzzq004,gzzq005, 
          gzzpstus,gzzpmodid,gzzpmoddt,gzzpownid,gzzpowndp,gzzpcrtid,gzzpcrtdp,gzzpcrtdt 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
            
         #此段落由子樣板a11產生
         ##----<<gzzpcrtdt>>----
         AFTER FIELD gzzpcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzpmoddt>>----
         AFTER FIELD gzzpmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzpcnfdt>>----
         
         #----<<gzzppstdt>>----
 
 
 
                  #Ctrlp:construct.c.gzzp001
         ON ACTION controlp INFIELD gzzp001
            #add-point:ON ACTION controlp INFIELD gzzp001
            {<point name="construct.c.gzzp001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp001
            #add-point:BEFORE FIELD gzzp001
            {<point name="construct.b.gzzp001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp001
            
            #add-point:AFTER FIELD gzzp001
            {<point name="construct.a.gzzp001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp003
            #add-point:BEFORE FIELD gzzp003
            {<point name="construct.b.gzzp003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp003
            
            #add-point:AFTER FIELD gzzp003
            {<point name="construct.a.gzzp003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzp003
         ON ACTION controlp INFIELD gzzp003
            #add-point:ON ACTION controlp INFIELD gzzp003
            {<point name="construct.c.gzzp003" />}
            #END add-point
 
         #Ctrlp:construct.c.gzzp005
         ON ACTION controlp INFIELD gzzp005
            #add-point:ON ACTION controlp INFIELD gzzp005
            {<point name="construct.c.gzzp005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp005
            #add-point:BEFORE FIELD gzzp005
            {<point name="construct.b.gzzp005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp005
            
            #add-point:AFTER FIELD gzzp005
            {<point name="construct.a.gzzp005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp004
            #add-point:BEFORE FIELD gzzp004
            {<point name="construct.b.gzzp004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp004
            
            #add-point:AFTER FIELD gzzp004
            {<point name="construct.a.gzzp004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzp004
         ON ACTION controlp INFIELD gzzp004
            #add-point:ON ACTION controlp INFIELD gzzp004
            {<point name="construct.c.gzzp004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp002
            #add-point:BEFORE FIELD gzzp002
            {<point name="construct.b.gzzp002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp002
            
            #add-point:AFTER FIELD gzzp002
            {<point name="construct.a.gzzp002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzp002
         ON ACTION controlp INFIELD gzzp002
            #add-point:ON ACTION controlp INFIELD gzzp002
            {<point name="construct.c.gzzp002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD lc_standard
            #add-point:BEFORE FIELD lc_standard
            {<point name="construct.b.lc_standard" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD lc_standard
            
            #add-point:AFTER FIELD lc_standard
            {<point name="construct.a.lc_standard" />}
            #END add-point
            
 
         #Ctrlp:construct.c.lc_standard
         ON ACTION controlp INFIELD lc_standard
            #add-point:ON ACTION controlp INFIELD lc_standard
            {<point name="construct.c.lc_standard" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzq004
            #add-point:BEFORE FIELD gzzq004
            {<point name="construct.b.gzzq004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzq004
            
            #add-point:AFTER FIELD gzzq004
            {<point name="construct.a.gzzq004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzq004
         ON ACTION controlp INFIELD gzzq004
            #add-point:ON ACTION controlp INFIELD gzzq004
            {<point name="construct.c.gzzq004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzq005
            #add-point:BEFORE FIELD gzzq005
            {<point name="construct.b.gzzq005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzq005
            
            #add-point:AFTER FIELD gzzq005
            {<point name="construct.a.gzzq005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzq005
         ON ACTION controlp INFIELD gzzq005
            #add-point:ON ACTION controlp INFIELD gzzq005
            {<point name="construct.c.gzzq005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpstus
            #add-point:BEFORE FIELD gzzpstus
            {<point name="construct.b.gzzpstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzpstus
            
            #add-point:AFTER FIELD gzzpstus
            {<point name="construct.a.gzzpstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzpstus
         ON ACTION controlp INFIELD gzzpstus
            #add-point:ON ACTION controlp INFIELD gzzpstus
            {<point name="construct.c.gzzpstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpmodid
            #add-point:BEFORE FIELD gzzpmodid
            {<point name="construct.b.gzzpmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzpmodid
            
            #add-point:AFTER FIELD gzzpmodid
            {<point name="construct.a.gzzpmodid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzpmodid
         ON ACTION controlp INFIELD gzzpmodid
            #add-point:ON ACTION controlp INFIELD gzzpmodid
            {<point name="construct.c.gzzpmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpmoddt
            #add-point:BEFORE FIELD gzzpmoddt
            {<point name="construct.b.gzzpmoddt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpownid
            #add-point:BEFORE FIELD gzzpownid
            {<point name="construct.b.gzzpownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzpownid
            
            #add-point:AFTER FIELD gzzpownid
            {<point name="construct.a.gzzpownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzpownid
         ON ACTION controlp INFIELD gzzpownid
            #add-point:ON ACTION controlp INFIELD gzzpownid
            {<point name="construct.c.gzzpownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpowndp
            #add-point:BEFORE FIELD gzzpowndp
            {<point name="construct.b.gzzpowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzpowndp
            
            #add-point:AFTER FIELD gzzpowndp
            {<point name="construct.a.gzzpowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzpowndp
         ON ACTION controlp INFIELD gzzpowndp
            #add-point:ON ACTION controlp INFIELD gzzpowndp
            {<point name="construct.c.gzzpowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpcrtid
            #add-point:BEFORE FIELD gzzpcrtid
            {<point name="construct.b.gzzpcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzpcrtid
            
            #add-point:AFTER FIELD gzzpcrtid
            {<point name="construct.a.gzzpcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzpcrtid
         ON ACTION controlp INFIELD gzzpcrtid
            #add-point:ON ACTION controlp INFIELD gzzpcrtid
            {<point name="construct.c.gzzpcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpcrtdp
            #add-point:BEFORE FIELD gzzpcrtdp
            {<point name="construct.b.gzzpcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzpcrtdp
            
            #add-point:AFTER FIELD gzzpcrtdp
            {<point name="construct.a.gzzpcrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzpcrtdp
         ON ACTION controlp INFIELD gzzpcrtdp
            #add-point:ON ACTION controlp INFIELD gzzpcrtdp
            {<point name="construct.c.gzzpcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpcrtdt
            #add-point:BEFORE FIELD gzzpcrtdt
            {<point name="construct.b.gzzpcrtdt" />}
            #END add-point
 
 
       
      END CONSTRUCT
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
         
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段before dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
      
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG
 
   END DIALOG
 
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi903.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數預設搜尋
PRIVATE FUNCTION azzi903_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzzp001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " gzzp002 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #CALL azzi903_browser_fill(g_wc,g_searchtype)
 
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="azzi903.delete" ver="5" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi903_delete(l_dialog)
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_dialog        ui.DIALOG
   DEFINE li_status       LIKE type_t.num5  #SQL實體資料刪除狀態
   DEFINE li_cnt          LIKE type_t.num5  #查看本階是否有兄弟資料
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
   
   IF g_gzzp_m.gzzp001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   #add-point:delete段before_delete
   {<point name="delete.before_delete"/>}
   #end add-point
 
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt, 
       g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt, 
       g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
    
   CALL azzi903_show()
   
   #Transaction開始
   CALL s_transaction_begin()
   
   
 
   OPEN azzi903_cl USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002
   IF STATUS THEN
      CALL cl_err("OPEN azzi903_cl:", STATUS, 1)
      CLOSE azzi903_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi903_cl INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard, 
       g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc, 
       g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt 

   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzzp_m.gzzp002,SQLCA.sqlcode,0)
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #先判斷是否有子節點(hasC) 詢問是否砍除全部
   IF g_browser[g_current_idx].b_hasC THEN
      IF cl_ask_delete_all_node() THEN
         LET li_status = azzi903_sql_delete(TRUE)
      ELSE
         LET li_status = FALSE
      END IF
   ELSE
      #如果沒有子節點,詢問是否刪除本筆資料
      IF cl_ask_delete() THEN
         LET li_status = azzi903_sql_delete(FALSE)
      ELSE
         LET li_status = FALSE
      END IF
   END IF
 
   #檢查實體砍除是否發生意外中止
   IF NOT li_status THEN
      CALL s_transaction_end("N","0")
      CLOSE azzi903_cl
      RETURN
   END IF
 
   #刪除節點與資料內容
   CALL l_dialog.deleteNode("s_browse",g_current_idx)  #deleteNode會順便幫忙做deleteElement
 
   #確認這一階還有沒有兄弟 (有:不異動上階屬性/否:上階hasC及exp設定成0)
   SELECT COUNT(*) INTO li_cnt
     FROM gzwe_t
    WHERE gzwe001 = g_gzwe_m.gzwe001
   IF li_cnt = 0 THEN
      LET g_browser[g_current_idx - 1].b_hasC = 0
      LET g_browser[g_current_idx - 1].b_exp = 0
   END IF
 
   #取得CurrentRow後,將CurrentRow放入右側MainLayout
   CALL azzi903_desc_show(g_current_idx -1)
 
   #add-point:單頭刪除後
   {<point name="delete.head.a_delete"/>}
   #end add-point
 
   CLOSE azzi903_cl
   CALL s_transaction_end("Y","0")
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzzp_m.gzzp002,"D")
    
END FUNCTION
]]>
</section>
  <section id="azzi903.desc_show" ver="2" status="" src="s">
<![CDATA[#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION azzi903_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5   
   #add-point:desc_show段define
   {<point name="desc_show.define"/>}
   #end add-point
 
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
 
END FUNCTION
]]>
</section>
  <section id="azzi903.description" ver="48" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000386
#+ 
#+ Filename...: azzi903
#+ Description: 功能及選單配置作業
#+ Creator....: 00845(2013/06/01)
#+ Modifier...: 01856(2013/11/18)
#+ Buildtype..: 應用 i05 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="azzi903.fetch" ver="5" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi903_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   DEFINE li_idx     LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   #add-point:fetch前
   {<point name="fetch.befroe_fetch"/>}
   #end add-point 
 
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf(".",1) = 0 THEN
      INITIALIZE g_gzzp_m.* TO NULL
      DISPLAY BY NAME g_gzzp_m.*
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   #   DISPLAY "" TO FORMONLY.h_index
      RETURN
   END IF
 
   #瀏覽頁筆數顯示
   LET li_idx = 1
   FOR li_idx = 1 TO g_browser_root.getLength()
      IF g_browser_root[li_idx] > g_current_idx THEN
       EXIT FOR
      END IF
   END FOR
   LET li_idx = g_current_idx - li_idx + 1
   #DISPLAY li_idx TO FORMONLY.h_index   #當下筆數
 
   IF p_flag = "/" THEN
      IF (NOT g_no_ask) THEN      
         CALL cl_getmsg("fetch",g_lang) RETURNING ls_msg
         LET INT_FLAG = 0
 
         PROMPT ls_msg CLIPPED,": " FOR g_jump
            #交談指令共用ACTION
            &include "common_action.4gl" 
         END PROMPT
 
         IF INT_FLAG THEN
            LET INT_FLAG = 0
         ELSE
            IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
               LET g_current_idx = g_jump
            END IF
            LET g_no_ask = FALSE  
         END IF           
      END IF
   END IF    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_gzzp_m.gzzp002 = g_browser[g_current_idx].b_gzzp002
   LET g_gzzp_m.gzzp003 = g_browser[g_current_idx].b_gzzp003
   LET g_gzzp_m.gzzp001 = g_browser[g_current_idx].b_gzzp001
    
   #add-point:fetch段refresh前
   {<point name="fetch.before_refresh"/>}
   #end add-point
    
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt, 
       g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt, 
       g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc 
   
   IF SQLCA.sqlcode THEN
       CALL cl_err("gzzp_t",SQLCA.sqlcode,1)
       INITIALIZE g_gzzp_m.* TO NULL
       RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段after_fetch
   {<point name="fetch.after_fetch"/>}
   #end add-point
 
   
   
   #保存單頭舊值
   LET g_gzzp_m_t.* = g_gzzp_m.*
   LET g_gzzp_m_o.* = g_gzzp_m.*
   
   #重新顯示
   CALL azzi903_show()
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
   
   
END FUNCTION
]]>
</section>
  <section id="azzi903.find_node" ver="3" status="" src="s">
<![CDATA[#+ 尋找符合條件的節點
PRIVATE FUNCTION azzi903_find_node(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   DEFINE ls_pid  STRING
   #add-point:find_node段define
   {<point name="find_node.define"/>}
   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT UNIQUE '','','','FALSE','','',exp_code,gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 ", 

               " FROM azzi903_tmp ",
               " WHERE gzzp003 = ? AND gzzp003 <> gzzp002",
               " ORDER BY gzzp002"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_browser[li_idx].b_gzzp002
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL azzi903_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = azzi903_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION
]]>
</section>
  <section id="azzi903.global" ver="7" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzzp_m RECORD
   gzzp001 LIKE gzzp_t.gzzp001, 
   gzzp001_desc LIKE type_t.chr80, 
   gzzp003 LIKE gzzp_t.gzzp003, 
   gzzp003_desc LIKE type_t.chr80, 
   gzzp005 LIKE gzzp_t.gzzp005, 
   gzzp004 LIKE gzzp_t.gzzp004, 
   gzzp002 LIKE gzzp_t.gzzp002, 
   gzzp002_desc LIKE type_t.chr80, 
   lc_standard LIKE type_t.chr80, 
   gzzq004 LIKE gzzq_t.gzzq004, 
   gzzq005 LIKE gzzq_t.gzzq005, 
   gzzpstus LIKE gzzp_t.gzzpstus, 
   gzzpmodid LIKE gzzp_t.gzzpmodid, 
   gzzpmodid_desc LIKE type_t.chr80, 
   gzzpmoddt DATETIME YEAR TO SECOND, 
   gzzpownid LIKE gzzp_t.gzzpownid, 
   gzzpownid_desc LIKE type_t.chr80, 
   gzzpowndp LIKE gzzp_t.gzzpowndp, 
   gzzpowndp_desc LIKE type_t.chr80, 
   gzzpcrtid LIKE gzzp_t.gzzpcrtid, 
   gzzpcrtid_desc LIKE type_t.chr80, 
   gzzpcrtdp LIKE gzzp_t.gzzpcrtdp, 
   gzzpcrtdp_desc LIKE type_t.chr80, 
   gzzpcrtdt DATETIME YEAR TO SECOND
                                  END RECORD
 
#模組變數(Module Variables)
DEFINE g_gzzp_m          type_g_gzzp_m
DEFINE g_gzzp_m_t        type_g_gzzp_m
DEFINE g_gzzp_m_o        type_g_gzzp_m
 
   DEFINE g_gzzp001_t LIKE gzzp_t.gzzp001
DEFINE g_gzzp002_t LIKE gzzp_t.gzzp002
 
 
#DEFINE g_gzzp002_t        LIKE gzzp_t.gzzp002
DEFINE g_gzzp003_t        LIKE gzzp_t.gzzp003
#DEFINE g_gzzp001_t      LIKE gzzp_t.gzzp001
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,    #外顯欄位
       b_pid           LIKE type_t.chr100,    #父節點id
       b_id            LIKE type_t.chr100,    #本身節點id
       b_exp           LIKE type_t.chr100,    #是否展開
       b_hasC          LIKE type_t.num5,      #是否有子節點
       b_isExp         LIKE type_t.num5,      #是否已展開
       b_expcode       LIKE type_t.num5,      #展開值
       #tree自定義欄位
          b_gzzp001 LIKE gzzp_t.gzzp001,
      b_gzzp002 LIKE gzzp_t.gzzp002,
      b_gzzp005 LIKE gzzp_t.gzzp005,
      b_gzzp003 LIKE gzzp_t.gzzp003,
      b_gzzp004 LIKE gzzp_t.gzzp004
                   END RECORD
 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER    #root資料所在
       
#多table用變數
 
DEFINE g_wc                  STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_curr_diag           ui.Dialog                #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5         
DEFINE gwin_curr             ui.Window                #Current Window
DEFINE gfrm_curr             ui.Form                  #Current Form
DEFINE g_page_action         STRING                   #page action
DEFINE g_header_hidden       LIKE type_t.num5         #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5         #隱藏工作Panel
DEFINE g_browser_cnt         LIKE type_t.num5         #total count
DEFINE g_page                STRING                   #第幾頁
DEFINE g_current_row         LIKE type_t.num5         #Browser所在筆數
DEFINE g_current_sw          LIKE type_t.num5         #Browser所在筆數用開關
 
DEFINE g_searchcol           LIKE type_t.chr200
DEFINE g_searchstr           LIKE type_t.chr200
DEFINE g_searchtype          LIKE type_t.chr200
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_root_search         BOOLEAN
DEFINE g_first               LIKE type_t.num5  #標示是否要啟動s_browse重查
DEFINE g_aw                  STRING            #確定當下點擊的單身
DEFINE g_log1                STRING            #log用
DEFINE g_log2                STRING            #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="azzi903.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi903_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point 
   
      CALL cl_set_combo_scc_part('gzzpstus','17','N,Y')
 
      CALL cl_set_combo_scc('gzzp005','97') 
 
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL azzi903_default_search()
    
END FUNCTION
]]>
</section>
  <section id="azzi903.input" ver="6" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi903_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_cmd_t         LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r' 
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF  
   
   CALL cl_set_head_visible("","YES")
 
   LET l_insert = FALSE
   LET g_action_choice = ""
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL azzi903_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi903_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002, 
       g_gzzp_m.lc_standard,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzpstus
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002, 
          g_gzzp_m.lc_standard,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzpstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_gzzq
            LET g_action_choice="update_gzzq"
            IF cl_auth_chk_act("update_gzzq") THEN
               
               #add-point:ON ACTION update_gzzq
               {<point name="input.master_input.update_gzzq" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            
            
            #add-point:input段define
            {<point name="input.action"/>}
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD gzzp001
            
            #add-point:AFTER FIELD gzzp001
            {<point name="input.a.gzzp001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp001
            #add-point:BEFORE FIELD gzzp001
            {<point name="input.b.gzzp001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzzp001
            #add-point:ON CHANGE gzzp001
            {<point name="input.g.gzzp001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp003
            
            #add-point:AFTER FIELD gzzp003
            {<point name="input.a.gzzp003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp003
            #add-point:BEFORE FIELD gzzp003
            {<point name="input.b.gzzp003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzzp003
            #add-point:ON CHANGE gzzp003
            {<point name="input.g.gzzp003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp005
            #add-point:BEFORE FIELD gzzp005
            {<point name="input.b.gzzp005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp005
            
            #add-point:AFTER FIELD gzzp005
            {<point name="input.a.gzzp005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzp005
            #add-point:ON CHANGE gzzp005
            {<point name="input.g.gzzp005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp004
            #add-point:BEFORE FIELD gzzp004
            {<point name="input.b.gzzp004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp004
            
            #add-point:AFTER FIELD gzzp004
            {<point name="input.a.gzzp004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzp004
            #add-point:ON CHANGE gzzp004
            {<point name="input.g.gzzp004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzp002
            
            #add-point:AFTER FIELD gzzp002
            {<point name="input.a.gzzp002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzp002
            #add-point:BEFORE FIELD gzzp002
            {<point name="input.b.gzzp002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzzp002
            #add-point:ON CHANGE gzzp002
            {<point name="input.g.gzzp002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD lc_standard
            #add-point:BEFORE FIELD lc_standard
            {<point name="input.b.lc_standard" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD lc_standard
            
            #add-point:AFTER FIELD lc_standard
            {<point name="input.a.lc_standard" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE lc_standard
            #add-point:ON CHANGE lc_standard
            {<point name="input.g.lc_standard" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzq004
            #add-point:BEFORE FIELD gzzq004
            {<point name="input.b.gzzq004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzq004
            
            #add-point:AFTER FIELD gzzq004
            {<point name="input.a.gzzq004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzq004
            #add-point:ON CHANGE gzzq004
            {<point name="input.g.gzzq004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzq005
            #add-point:BEFORE FIELD gzzq005
            {<point name="input.b.gzzq005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzq005
            
            #add-point:AFTER FIELD gzzq005
            {<point name="input.a.gzzq005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzq005
            #add-point:ON CHANGE gzzq005
            {<point name="input.g.gzzq005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzpstus
            #add-point:BEFORE FIELD gzzpstus
            {<point name="input.b.gzzpstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzpstus
            
            #add-point:AFTER FIELD gzzpstus
            {<point name="input.a.gzzpstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzpstus
            #add-point:ON CHANGE gzzpstus
            {<point name="input.g.gzzpstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.gzzp001
         ON ACTION controlp INFIELD gzzp001
            #add-point:ON ACTION controlp INFIELD gzzp001
            {<point name="input.c.gzzp001" />}
            #END add-point
 
         #Ctrlp:input.c.gzzp003
         ON ACTION controlp INFIELD gzzp003
            #add-point:ON ACTION controlp INFIELD gzzp003
            {<point name="input.c.gzzp003" />}
            #END add-point
 
         #Ctrlp:input.c.gzzp005
         ON ACTION controlp INFIELD gzzp005
            #add-point:ON ACTION controlp INFIELD gzzp005
            {<point name="input.c.gzzp005" />}
            #END add-point
 
         #Ctrlp:input.c.gzzp004
         ON ACTION controlp INFIELD gzzp004
            #add-point:ON ACTION controlp INFIELD gzzp004
            {<point name="input.c.gzzp004" />}
            #END add-point
 
         #Ctrlp:input.c.gzzp002
         ON ACTION controlp INFIELD gzzp002
            #add-point:ON ACTION controlp INFIELD gzzp002
            {<point name="input.c.gzzp002" />}
            #END add-point
 
         #Ctrlp:input.c.lc_standard
         ON ACTION controlp INFIELD lc_standard
            #add-point:ON ACTION controlp INFIELD lc_standard
            {<point name="input.c.lc_standard" />}
            #END add-point
 
         #Ctrlp:input.c.gzzq004
         ON ACTION controlp INFIELD gzzq004
            #add-point:ON ACTION controlp INFIELD gzzq004
            {<point name="input.c.gzzq004" />}
            #END add-point
 
         #Ctrlp:input.c.gzzq005
         ON ACTION controlp INFIELD gzzq005
            #add-point:ON ACTION controlp INFIELD gzzq005
            {<point name="input.c.gzzq005" />}
            #END add-point
 
         #Ctrlp:input.c.gzzpstus
         ON ACTION controlp INFIELD gzzpstus
            #add-point:ON ACTION controlp INFIELD gzzpstus
            {<point name="input.c.gzzpstus" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
           #避免資料錯誤的檢查
           IF azzi903_check(g_gzzp_m.gzzp002,g_gzzp_m.gzzp003
              ,g_gzzp_m.gzzp001
              ) THEN
              CALL cl_err("","tree-001",1)
              NEXT FIELD CURRENT
           END IF
 
            CALL cl_showmsg()   #錯誤訊息統整顯示
            DISPLAY BY NAME g_gzzp_m.gzzp002
 
            #實體新增/修改/複製段落的處理
            CASE
               WHEN p_cmd = "a" OR p_cmd = "r"
                  LET l_count = 1
 
                  SELECT COUNT(*) INTO l_count FROM gzzp_t
                   WHERE  gzzp001 = g_gzzp_m.gzzp001
                     AND gzzp002 = g_gzzp_m.gzzp002
 
                         #
                  IF l_count = 0 THEN
                     #add-point:單頭新增前
                     {<point name="input.head.b_insert" mark="Y"/>}
                     #end add-point
 
                     INSERT INTO gzzp_t (gzzp001,gzzp003,gzzp005,gzzp004,gzzp002,gzzpstus,gzzpownid, 
                         gzzpowndp,gzzpcrtid,gzzpcrtdp,gzzpcrtdt)
                     VALUES (g_gzzp_m.gzzp001,g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002, 
                         g_gzzp_m.gzzpstus,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid, 
                         g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt) 
 
                     #add-point:單頭新增中
                     {<point name="input.head.m_insert"/>}
                     #end add-point
 
                     IF SQLCA.sqlcode THEN
                        CALL cl_err("g_gzzp_m",SQLCA.sqlcode,1)  
                        CONTINUE DIALOG
                     END IF
                  
                     #提速檔資料建置
                     IF g_gzzp_m.gzzp002 <> g_gzzp_m.gzzp003 THEN
                        #CALL n_gzzps_generate_child(g_gzzp_m.gzzp002,g_gzzp_m.gzzp003)
                     END IF
                     
                     #add-point:單頭新增後
                     {<point name="input.head.a_insert"/>}
                     #end add-point
                     
                     #資料多語言用-增/改
                     
                     CALL s_transaction_end("Y","0")
                  ELSE
                     CALL cl_err( g_gzzp_m.gzzp002, "std-00006", 0 )
                     CALL s_transaction_end("N","0")
                  END IF 
 
               #修改段落
               WHEN p_cmd = "u"  
                  #add-point:單頭修改前
                  {<point name="input.head.b_update" mark="Y"/>}
                  #end add-point
                  UPDATE gzzp_t SET (gzzp001,gzzp003,gzzp005,gzzp004,gzzp002,gzzpstus,gzzpownid,gzzpowndp, 
                      gzzpcrtid,gzzpcrtdp,gzzpcrtdt) = (g_gzzp_m.gzzp001,g_gzzp_m.gzzp003,g_gzzp_m.gzzp005, 
                      g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp, 
                      g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt)
                   WHERE  gzzp001 = g_gzzp001_t #
                     AND gzzp002 = g_gzzp002_t
 
                  #add-point:單頭修改中
                  {<point name="input.head.m_update"/>}
                  #end add-point
                  CASE
                     WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                        CALL cl_err("gzzp_t","std-00009",1)
                        CALL s_transaction_end('N','0')
                     WHEN SQLCA.sqlcode #其他錯誤
                        CALL cl_err("gzzp_t",SQLCA.sqlcode,1)  
                        CALL s_transaction_end('N','0')
                     OTHERWISE
                        #add-point:單頭修改後
                        {<point name="input.head.a_update"/>}
                        #end add-point
    
                        #資料多語言用-增/改
                        
                        LET g_log1 = util.JSON.stringify(g_gzzp_m_t)
                        LET g_log2 = util.JSON.stringify(g_gzzp_m)
                        IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                           CALL s_transaction_end('N','0')
                        ELSE
                           CALL s_transaction_end('Y','0')
                        END IF
                  END CASE
 
               OTHERWISE 
            END CASE
 
           #controlp
      END INPUT
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      #在dialog button (放棄)
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close       
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
           
   END DIALOG
   
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point
    
END FUNCTION
]]>
</section>
  <section id="azzi903.insert" ver="6" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi903_insert(l_dialog)
   DEFINE l_dialog   ui.DIALOG
   DEFINE li_addpos  LIKE type_t.num5 #新增節點時產出的畫面實際位置
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
   
   LET g_gzzp001_t = g_gzzp_m.gzzp001
   LET g_gzzp002_t = g_gzzp_m.gzzp002
 
   LET g_gzzp002_t = g_gzzp_m.gzzp002
   LET g_gzzp001_t = g_gzzp_m.gzzp001
 
   #清畫面欄位內容
   CLEAR g_gzzp_m.*
 
   #add-point:單頭預設值
   {<point name="insert.before_insert"/>}
   #end add-point 
 
   INITIALIZE g_gzzp_m.* LIKE gzzp_t.*
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc,g_gzzp_m.gzzp005, 
       g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard,g_gzzp_m.gzzq004, 
       g_gzzp_m.gzzq005,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpmoddt, 
       g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt
   CALL s_transaction_begin()
 
   WHILE TRUE
      #給予pid,type預設值
      LET g_gzzp_m.gzzp003 = g_gzzp002_t
      LET g_gzzp_m.gzzp001 = g_gzzp001_t
      #此段落由子樣板a14產生    
      LET g_gzzp_m.gzzpownid = g_user
      LET g_gzzp_m.gzzpowndp = g_dept
      LET g_gzzp_m.gzzpcrtid = g_user
      LET g_gzzp_m.gzzpcrtdp = g_dept 
      LET g_gzzp_m.gzzpcrtdt = cl_get_current()
      LET g_gzzp_m.gzzpmodid = ""
      LET g_gzzp_m.gzzpmoddt = ""
      LET g_gzzp_m.gzzpstus = "N"
 
 
      
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
      
      #單頭預設值
            LET g_gzzp_m.lc_standard = "Y"
      LET g_gzzp_m.gzzpstus = "Y"
 
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL azzi903_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzzp_m.* = g_gzzp_m_t.*
         CALL azzi903_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ""
         LET g_errparam.code = 9001
         LET g_errparam.popup = FALSE
         CALL cl_err("",9001,0)
         EXIT WHILE
      ELSE
         #檢查是否還有子節點,若有則做插入節點
         IF g_browser[g_current_idx].b_hasC THEN
            IF g_browser[g_current_idx].b_exp THEN
               LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
               LET g_browser[li_addpos].b_gzzp003 = g_gzzp_m.gzzp003
               LET g_browser[li_addpos].b_gzzp002 = g_gzzp_m.gzzp002
               CALL azzi903_desc_show(li_addpos)
            END IF
         ELSE
            IF g_browser[g_current_idx].b_exp THEN
               #此處要改成已展開
               LET g_browser[g_current_idx].b_hasC = 1
               LET g_browser[g_current_idx].b_exp = 1
               LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
               LET g_browser[li_addpos].b_gzzp003 = g_gzzp_m.gzzp003
               LET g_browser[li_addpos].b_gzzp002 = g_gzzp_m.gzzp002
               CALL azzi903_desc_show(li_addpos)
            END IF
         END IF
      END IF
      
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
END FUNCTION
]]>
</section>
  <section id="azzi903.main" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT gzzp001,'',gzzp003,'',gzzp005,gzzp004,gzzp002,'','','','',gzzpstus,gzzpmodid, 
       '',gzzpmoddt,gzzpownid,'',gzzpowndp,'',gzzpcrtid,'',gzzpcrtdp,'',gzzpcrtdt", 
                      " FROM gzzp_t",
                      " WHERE gzzp001=? AND gzzp002=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi903_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzzp001,gzzp003,gzzp005,gzzp004,gzzp002,gzzpstus,gzzpmodid,gzzpmoddt, 
       gzzpownid,gzzpowndp,gzzpcrtid,gzzpcrtdp,gzzpcrtdt,t1.gzzal003 ,t2.ooag011 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011 ,t6.ooefl003",
               " FROM gzzp_t",
                              " LEFT JOIN gzzal_t t1 ON t1.gzzal001=gzzp001 AND t1.gzzal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=gzzpmodid  ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=gzzpownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=gzzpowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=gzzpcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=gzzpcrtdp AND t6.ooefl002='"||g_dlang||"' ",
 
               " WHERE  gzzp001 = ? AND gzzp002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi903_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi903 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi903_init()   
 
      #進入選單 Menu (="N")
      CALL azzi903_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi903
      
   END IF 
   
   CLOSE azzi903_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="azzi903.match_node" ver="5" status="" src="s">
<![CDATA[PRIVATE FUNCTION azzi903_match_node(p_wc,p_type)
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位
             gzzp001 VARCHAR(500),
   gzzp002 VARCHAR(500),
   gzzp005 VARCHAR(500),
   gzzp003 VARCHAR(500),
   gzzp004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
             gzzp001 VARCHAR(500),
   gzzp002 VARCHAR(500),
   gzzp005 VARCHAR(500),
   gzzp003 VARCHAR(500),
   gzzp004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD    
   #add-point:match_node段define
   {<point name="match_node.define"/>}
   #end add-point
 
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0" #展開值0則無法展開
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null("gzzp003") THEN
      LET ls_code = "0"
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO azzi903_tmp (gzzp001,gzzp002,gzzp005,gzzp003,gzzp004,exp_code) VALUES (?, 
       ?,?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end("Y","0")
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      EXECUTE master_tmp USING l_bstmp.*,ls_code
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 ",
                  " FROM gzzp_t ",
                  " WHERE  gzzp002 = ? ",
                  " AND gzzp001 = ? ",
                  cl_sql_add_filter("gzzp_t")
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].gzzp002) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].gzzp003
                                           ,l_child_list[1].gzzp001
                                           INTO l_bstmp.*
         IF SQLCA.sqlcode THEN
            FREE master_getparent_up
            EXIT WHILE
         END IF
         FREE master_getparent_up
      #確定該節點是否存在於temp table中
         
         IF STATUS = 0 AND azzi903_tmp_tbl_chk(l_bstmp.gzzp002,ls_code2
                     ,l_bstmp.gzzp001
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      
      END WHILE
   
   END FOREACH
   
   CLOSE master_tmp
   
   CALL s_transaction_end("Y","0")
 
END FUNCTION
]]>
</section>
  <section id="azzi903.modify" ver="6" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi903_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   IF g_gzzp_m.gzzp001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
   
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt, 
       g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt, 
       g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
 
   ERROR ""
  
   LET g_gzzp001_t = g_gzzp_m.gzzp001
   LET g_gzzp002_t = g_gzzp_m.gzzp002
 
   
   CALL s_transaction_begin()
   
   OPEN azzi903_cl USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002
   IF STATUS THEN
      CALL cl_err("OPEN azzi903_cl:", STATUS, 1)
      CLOSE azzi903_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi903_cl INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard, 
       g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc, 
       g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzzp_m.gzzp002,SQLCA.sqlcode,0)
      CLOSE azzi903_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   CALL azzi903_show()
   WHILE TRUE
      LET g_gzzp_m.gzzp001 = g_gzzp001_t
      LET g_gzzp_m.gzzp002 = g_gzzp002_t
 
      
      #寫入修改者/修改日期資訊
      LET g_gzzp_m.gzzpmodid = g_user 
LET g_gzzp_m.gzzpmoddt = cl_get_current()
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL azzi903_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzzp_m.* = g_gzzp_m_t.*
         CALL azzi903_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ""
         LET g_errparam.code = 9001
         LET g_errparam.popup = FALSE
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE gzzp_t SET (gzzpmodid,gzzpmoddt) = (g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt)
       WHERE  gzzp001 = g_gzzp001_t
         AND gzzp002 = g_gzzp002_t
 
      
      EXIT WHILE
  
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_gzzp_m.gzzp002,g_site) THEN 
   #   CALL s_transaction_end("N","0")
   #END IF
 
   CLOSE azzi903_cl
   CALL s_transaction_end("Y","0")
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzzp_m.gzzp002,"U")
   
   
END FUNCTION
]]>
</section>
  <section id="azzi903.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="azzi903.query" ver="3" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi903_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   #add-point:query段查詢前
   {<point name="query.before_query"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
 
   #CLEAR FORM
   #CALL g_browser.clear()
 
   DISPLAY " " TO FORMONLY.h_count
 
   CALL azzi903_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      #add-point:query段取消
      {<point name="query.cancel"/>}
      #end add-point
      #CALL azzi903_browser_fill(g_wc,g_searchtype)
      CALL azzi903_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_browser_cnt = 0
      LET g_current_idx = 1
      CALL g_browser.clear()
      LET g_first = 0  #設定重新查詢資料後顯示
   END IF
 
   LET g_searchtype = "3"
   LET g_searchcol = "0"
   CALL azzi903_browser_fill(g_wc,g_searchtype)
   
   #第一層模糊搜尋
   IF g_browser_cnt = 0 THEN
      LET g_wc = cl_wc_parser(g_wc)
      CALL azzi903_browser_fill(g_wc,g_searchtype)
   END IF
   
   #第二層速記碼搜尋
   #IF g_browser_cnt = 0 THEN
   #   CALL cl_err("","-100",1)
   #END IF
 
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code = "-100"
      LET g_errparam.popup = TRUE
      CALL cl_err("","-100",1)
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi903.reproduce" ver="6" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi903_reproduce(l_dialog)
   DEFINE l_dialog      ui.DIALOG
   DEFINE li_addpos     LIKE type_t.num5
   DEFINE l_newno           LIKE gzzp_t.gzzp001 
   DEFINE l_oldno           LIKE gzzp_t.gzzp001 
   DEFINE l_newno02     LIKE gzzp_t.gzzp002 
   DEFINE l_oldno02     LIKE gzzp_t.gzzp002 
 
   DEFINE l_master          RECORD LIKE gzzp_t.*
   DEFINE l_cnt             LIKE type_t.num5  
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #add-point:複製段開始前
   {<point name="reproduce.before_reproduce"/>}
   #end add-point
 
   #檢查PK欄位是否均有值,若全部為NULL時退出
   IF g_gzzp_m.gzzp001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
 
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt, 
       g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt, 
       g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
 
   #檢查如果有子節點(hasC=1)則顯示錯誤訊息後退出
 
   ERROR ""
 
   CALL cl_set_head_visible("","YES")
 
      LET g_gzzp_m.gzzp001_desc = ''
   DISPLAY BY NAME g_gzzp_m.gzzp001_desc
   LET g_gzzp_m.gzzp002_desc = ''
   DISPLAY BY NAME g_gzzp_m.gzzp002_desc
 
   LET g_gzzp_m.gzzp003 = ""
   LET g_gzzp_m.gzzp001 = ""
   #此段落由子樣板a14產生    
      LET g_gzzp_m.gzzpownid = g_user
      LET g_gzzp_m.gzzpowndp = g_dept
      LET g_gzzp_m.gzzpcrtid = g_user
      LET g_gzzp_m.gzzpcrtdp = g_dept 
      LET g_gzzp_m.gzzpcrtdt = cl_get_current()
      LET g_gzzp_m.gzzpmodid = ""
      LET g_gzzp_m.gzzpmoddt = ""
      LET g_gzzp_m.gzzpstus = "N"
 
 
   
   CALL s_transaction_begin()
 
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #直接呼叫輸入
   CALL azzi903_input("r")
 
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      LET g_gzzp_m.* = g_gzzp_m_t.*
      CALL azzi903_show()
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code = 9001
      LET g_errparam.popup = FALSE
      CALL cl_err("",9001,0)
   ELSE
      #檢查是否還有子節點,若有則做插入節點
      IF g_browser[g_current_idx].b_hasC THEN
         IF g_browser[g_current_idx].b_exp THEN
            LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
            CALL azzi903_desc_show(li_addpos)
         END IF
      ELSE
         IF g_browser[g_current_idx].b_exp THEN
            #此處要改成已展開
            LET g_browser[g_current_idx].b_hasC = 1
            LET g_browser[g_current_idx].b_exp = 1
            LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
            CALL azzi903_desc_show(li_addpos)
         END IF
      END IF
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi903.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi903_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1 
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point
   
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("gzzp001,gzzp002",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="azzi903.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi903_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point
    
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzzp001,gzzp002",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="azzi903.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi903_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzzp_m.gzzp001
   LET g_pk_array[1].column = 'gzzp001'
   LET g_pk_array[2].values = g_gzzp_m.gzzp002
   LET g_pk_array[2].column = 'gzzp002'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="azzi903.show" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi903_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()       
   
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_gzzp_m.gzzpownid_desc = cl_get_username(g_gzzp_m.gzzpownid)
      #LET g_gzzp_m.gzzpowndp_desc = cl_get_deptname(g_gzzp_m.gzzpowndp)
      #LET g_gzzp_m.gzzpcrtid_desc = cl_get_username(g_gzzp_m.gzzpcrtid)
      #LET g_gzzp_m.gzzpcrtdp_desc = cl_get_deptname(g_gzzp_m.gzzpcrtdp)
      #LET g_gzzp_m.gzzpmodid_desc = cl_get_username(g_gzzp_m.gzzpmodid)
      
 
 
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi903_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:reference段之後
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc,g_gzzp_m.gzzp005, 
       g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard,g_gzzp_m.gzzq004, 
       g_gzzp_m.gzzq005,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpmoddt, 
       g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt
 
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_gzzp_m.gzzpstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="azzi903.sql_delete" ver="4" status="" src="s">
<![CDATA[#+ 實體刪除FUNCTION 
PRIVATE FUNCTION azzi903_sql_delete(li_node)
   DEFINE li_node   LIKE type_t.num5  #TRUE:砍除Node Tree/FALSE:砍除Single Node
   DEFINE li_return LIKE type_t.num5
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
 
   LET li_return = TRUE
 
   #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi903_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
   #add-point:單頭刪除前
   {<point name="delete.head.b_delete" mark="Y"/>}
   #end add-point
 
   DELETE FROM gzzp_t
    WHERE  gzzp001 = g_gzzp_m.gzzp001
      AND gzzp002 = g_gzzp_m.gzzp002
 
 
   #add-point:單頭刪除中
   {<point name="delete.head.m_delete"/>}
   #end add-point
 
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzzp_t",SQLCA.sqlcode,0)
      CALL s_transaction_end("N","0")
   END IF
 
   
 
   RETURN li_return
 
END FUNCTION
]]>
</section>
  <section id="azzi903.state_change" ver="3" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION azzi903_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzzp_m.gzzp001 IS NULL
      OR g_gzzp_m.gzzp002 IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzzp_m.gzzpstus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE gzzp_t SET gzzpstus = lc_state 
    WHERE  gzzp001 = g_gzzp_m.gzzp001
      AND gzzp002 = g_gzzp_m.gzzp002
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_gzzp_m.gzzpstus = lc_state
      DISPLAY BY NAME g_gzzp_m.gzzpstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="azzi903.tmp_tbl_chk" ver="2" status="" src="s">
<![CDATA[#+ TEMP TABLE CHK
PRIVATE FUNCTION azzi903_tmp_tbl_chk(ps_id,pi_code,ps_type)
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10   
   #add-point:tmp_tbl_chk段define
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
   
   LET ls_id = ps_id
   LET ls_type = ps_type
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM azzi903_tmp ", 
               " WHERE gzzp002 = ? "
                ," AND gzzp001 = ? "
 
   PREPARE azzi903_get_cnt FROM g_sql
   EXECUTE azzi903_get_cnt USING ls_id 
                                           ,ls_type
                                     INTO li_cnt
   FREE azzi903_get_cnt
 
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
    
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM azzi903_tmp ",
                  " WHERE gzzp002 = ? " 
                   ," AND gzzp001 = ? "
 
      PREPARE azzi903_chk_exp FROM g_sql
      
      EXECUTE azzi903_chk_exp USING ls_id 
                                              ,ls_type
                                        INTO li_code
      FREE azzi903_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE azzi903_tmp SET (exp_code) = ('",pi_code,"') ",
                      " WHERE gzzp002 = ? "
                      ," AND gzzp001 = ? "
         PREPARE azzi903_upd_exp FROM g_sql
         EXECUTE azzi903_upd_exp USING ls_id 
                                                 ,ls_type
         FREE azzi903_upd_exp
      END IF
      
      RETURN FALSE
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi903.ui_dialog" ver="19" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION azzi903_ui_dialog()
   DEFINE li_exit      LIKE type_t.num5    #判別是否為離開作業
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
   
   #CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   #CALL gfrm_curr.setElementHidden("mainlayout",1)
   #CALL gfrm_curr.setElementHidden("worksheet",0)
   #LET g_main_hidden = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE li_exit = FALSE
 
      #當瀏覽頁簽被設定關閉時,使用MENU (開啟時使用DIALOG)
      IF g_worksheet_hidden = 1 THEN
 
         LET g_current_sw = FALSE
 
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = g_current_row
         LET g_current_sw = TRUE
         CALL cl_show_fld_cont() 
         IF g_current_idx > 0 THEN
         CALL azzi903_fetch("")    #當每次點任一筆資料都會需要用到
         END IF
 
         MENU
            #add-point:ui_dialog段其他頁簽的 display array(in menu)
            {<point name="ui_dialog.more_displayarray_in_menu"/>}
            #end add-point
            
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL azzi903_statechange()
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL azzi903_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL azzi903_fetch("") 
               LET g_current_row = g_current_idx
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
 
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
 
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi903_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi903_delete(DIALOG)
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi903_insert(DIALOG)
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi903_reproduce(DIALOG)
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi903_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
               
            END IF
 
 
 
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi903_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
 
         END MENU
 
      ELSE
         #第一次進入程式, 或啟動重新查詢
         IF g_first = 0 THEN 
            CALL azzi903_browser_fill(g_wc,g_searchtype)
            LET g_first = 1
         END IF
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
            INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol, 
                formonly.rdo_searchtype
               BEFORE INPUT
            END INPUT
            
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
 
               BEFORE DISPLAY
                  CALL DIALOG.setSelectionMode("s_browse",1) #設定為單選
 
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_row > 1 AND g_current_sw = FALSE THEN
                     CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                     LET g_current_idx = g_current_row
                  END IF
                  LET g_current_row = g_current_idx #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont() 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
 
                  CALL azzi903_fetch("")  #當每次點任一筆資料都會需要用到
 
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL azzi903_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
 
               ON COLLAPSE (g_row_index)
                  #樹關閉
 
            END DISPLAY
 
            #add-point:ui_dialog段其他頁簽的 display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            BEFORE DIALOG
               #action default動作(判定是否要先執行特定動作)
               #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi903_insert(DIALOG)
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_current_sw = FALSE
 
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_sw = FALSE THEN
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               IF g_current_idx > 0 THEN
               CALL azzi903_fetch("")            #當每次點任一筆資料都會需要用到
               END IF
               #add-point:ui_dialog,before dialog
               {<point name="ui_dialog.b_dialog"/>}
               #end add-point
 
            AFTER DIALOG 
               #add-point:ui_dialog,after dialog
               {<point name="ui_dialog.a_dialog"/>}
               #end add-point
 
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL azzi903_statechange()
               EXIT DIALOG
 
            #一般搜尋
            ON ACTION searchdata
               LET g_searchstr = GET_FLDBUF(searchstr)
               LET g_searchcol = GET_FLDBUF(cbo_searchcol)
               #若無輸入關鍵字則查找出所有資料
               IF g_searchcol="0" AND NOT cl_null(g_searchstr) THEN
                  CALL cl_err("searchcol:","std-00001",0)
                  CONTINUE DIALOG
               END IF 
               IF NOT cl_null(g_searchstr) THEN
                  LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
                  LET g_wc = g_wc.toLowerCase()
               ELSE
                  LET g_wc = " 1=1 "
               END IF
               LET g_first = 0 #啟動重查
               EXIT DIALOG
 
            #進階搜尋
            #ON ACTION advancesearch
 
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL azzi903_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/mainhidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi903_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi903_delete(DIALOG)
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi903_insert(DIALOG)
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi903_reproduce(DIALOG)
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi903_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
 
            
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi903_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            &include "main_menu.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION 
]]>
</section>
</add_points>