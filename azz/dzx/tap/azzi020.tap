<add_points prog="azzi020" std_prog="azzi020" erpver="1.0" module="AZZ" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.azzi020_send_mail" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 寄送mail
# Memo...........:
# Usage..........: CALL azzi020_send_mail()
#                  RETURNING 回传参数
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi020_send_mail()
   DEFINE ls_tmp       STRING 
   DEFINE li_result    LIKE type_t.num5
   DEFINE ls_file      STRING 
   DEFINE lc_channel   base.Channel
   DEFINE ls_text      STRING 
   DEFINE ls_path      STRING 
   
   #信件暫存檔案路徑
   LET ls_file = "FAQmail_",FGL_GETPID() USING "<<<<<",".txt"
   LET ls_file = os.Path.join(FGL_GETENV("TEMPDIR"),ls_file)

   IF os.Path.delete(ls_path) THEN END IF

   #信件檔案
   LET lc_channel = base.Channel.create()
   CALL lc_channel.openFile(ls_file CLIPPED, "w" )
   CALL lc_channel.setDelimiter("")
   LET ls_text = g_gzwk_m.gzwk006 ,"\n"
   CALL lc_channel.write(ls_text)
   CALL lc_channel.close()
   
   #信件主旨
   LET g_xml.subject = g_gzwk_m.gzwk004
   #信件本文
   LET g_xml.body = ls_file
   #DISPLAY "g_xml.body:",g_xml.body
   #寄信人
   LET g_xml.sender = "t100.digiwin@yahoo.com.tw"  #必須要寫@後面的mail address 
   #收件者
   LET g_xml.recipient = g_email_addr

   #寄發mail
   CALL cl_jmail() RETURNING ls_tmp
   IF ls_tmp.getIndexOf("successfully",1) THEN 
      CALL cl_ask_anykey()
   ELSE 
      CALL cl_ask_end2(2) RETURNING li_result 
   END IF 
END FUNCTION]]>
</point>
  <point name="construct.c.gzwk005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzwk005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwk005  #顯示到畫面上

            NEXT FIELD gzwk005                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzwk007" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzwk007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwk007  #顯示到畫面上

            NEXT FIELD gzwk007                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzwkcnfid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwkcnfid  #顯示到畫面上

            NEXT FIELD gzwkcnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzwkcrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwkcrtdp  #顯示到畫面上

            NEXT FIELD gzwkcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzwkcrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwkcrtid  #顯示到畫面上

            NEXT FIELD gzwkcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzwkmodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwkmodid  #顯示到畫面上

            NEXT FIELD gzwkmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzwkowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwkowndp  #顯示到畫面上

            NEXT FIELD gzwkowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.gzwkownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwkownid  #顯示到畫面上

            NEXT FIELD gzwkownid                     #返回原欄位

]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[DEFINE g_email_addr                LIKE type_t.chr30]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LOCATE g_gzwk_m.gzwk006 IN FILE    #設定第一筆以後clob資料的LOCATE.        ]]>
</point>
  <point name="input.a.gzwk001" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzwk_m.gzwk001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzwk_m.gzwk001 != g_gzwk001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzwk_t WHERE "||"gzwk001 = '"||g_gzwk_m.gzwk001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.gzwk005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwk005
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwk005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwk005_desc
]]>
</point>
  <point name="input.a.gzwk006" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_gzwk_m.gzwk006 IS NOT NULL THEN
               LET g_gzwk_m.gzwk007 = g_user
               LET g_gzwk_m.gzwk010 = cl_get_current()
            END IF]]>
</point>
  <point name="input.a.gzwk007" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwk007
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwk007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwk007_desc
]]>
</point>
  <point name="input.c.gzwk005" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzwk_m.gzwk005             #給予default值

            #給予arg

            CALL q_gzxa003_1()                                #呼叫開窗

            LET g_gzwk_m.gzwk005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_gzwk_m.gzwk005 TO gzwk005              #顯示到畫面上

            NEXT FIELD gzwk005                          #返回原欄位

]]>
</point>
  <point name="input.c.gzwk007" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzwk_m.gzwk007             #給予default值

            #給予arg

            CALL q_gzxa003_1()                                #呼叫開窗

            LET g_gzwk_m.gzwk007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_gzwk_m.gzwk007 TO gzwk007              #顯示到畫面上

            NEXT FIELD gzwk007                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[    DEFINE ls_msg    STRING ]]>
</point>
  <point name="input.master_input.send_mail" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               CALL cl_getmsg("azz-00197", g_lang) RETURNING ls_msg
               LET INT_FLAG = 0

               PROMPT ls_msg CLIPPED,": " FOR g_email_addr
                 #交談指令共用ACTION
                 &include "common_action.4gl"
               END PROMPT
               
               IF INT_FLAG THEN    
                  EXIT DIALOG  
                END IF

                CALL azzi020_send_mail()]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      LET g_gzwk_m.gzwk002 = "C"                    #預設分類為C: Coding問題
      LET g_gzwk_m.gzwk005 = g_user                 #提出員工編號
      LET g_gzwk_m.gzwk009 = cl_get_current()       #提出時間
      SELECT MAX(gzwk001)+1 INTO g_gzwk_m.gzwk001 FROM gzwk_t]]>
</point>
  <point name="menu.ff_expand" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               CALL cl_doc_show_expand()]]>
</point>
  <point name="menu.ff_next" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               DISPLAY cl_doc_set_pic_seq(TRUE) TO image_1]]>
</point>
  <point name="menu.ff_previous" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               DISPLAY cl_doc_set_pic_seq(FALSE) TO image_1]]>
</point>
  <point name="menu2.ff_expand" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               CALL cl_doc_show_expand()]]>
</point>
  <point name="menu2.ff_next" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               DISPLAY cl_doc_set_pic_seq(TRUE) TO image_1]]>
</point>
  <point name="menu2.ff_previous" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               DISPLAY cl_doc_set_pic_seq(FALSE) TO image_1]]>
</point>
  <point name="menu2.send_mail" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               CALL cl_getmsg("azz-00197", g_lang) RETURNING ls_msg
               LET INT_FLAG = 0

               PROMPT ls_msg CLIPPED,": " FOR g_email_addr
                 #交談指令共用ACTION
                 &include "common_action.4gl"
               END PROMPT
               
               IF NOT INT_FLAG THEN
                   CALL azzi020_send_mail()
                END IF ]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      #LET g_gzwk_m.gzwk009 = cl_get_current()
      LET g_gzwk_m.gzwk010 = cl_get_current()]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL azzi020_set_pk_array()
   DISPLAY cl_doc_get_pic() TO image_1]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwk005
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwk005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwk005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwk007
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwk007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwk007_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwkownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwkownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwkownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwkowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwkowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwkowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwkcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwkcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwkcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwkcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwkcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwkcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwkmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwkmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwkmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzwk_m.gzwkcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzwk_m.gzwkcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzwk_m.gzwkcnfid_desc
]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE ls_msg    STRING]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu2.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.menu.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.after_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.send_mail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.wc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.cnt_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_pre" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwk002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwk001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwk003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwkstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwkstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwk004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwk009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwk010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwk006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwk006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.gzwk006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwkownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwkowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwkcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwkcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwkmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.gzwkcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.gzwkcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before.input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzwk002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzwk003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwkstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzwkstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwkstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzwk004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzwk009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.gzwk010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.gzwk006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.gzwk006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwk002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwk001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwk003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwkstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwk004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwk009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwk010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.gzwk006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.void" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.valid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="azzi020.browser_fill" ver="4" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充(一般單檔)
PRIVATE FUNCTION azzi020_browser_fill(p_wc,ps_page_action) 
   DEFINE p_wc              STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_gzwk_m.* TO NULL
   INITIALIZE g_wc TO NULL
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET l_searchcol = "gzwk001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
 
   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   
   #add-point:browser_fill段wc控制
   {<point name="browser_fill.wc"/>}
   #end add-point
 
   LET g_sql = " SELECT COUNT(*) FROM gzwk_t ",
               "  ",
               "  ",
               " WHERE  ", 
               p_wc CLIPPED, cl_sql_add_filter("gzwk_t")
                
   #add-point:browser_fill段cnt_sql
   {<point name="browser_fill.cnt_sql"/>}
   #end add-point
				
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt
   FREE header_cnt_pre 
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1 THEN
      CALL cl_err(g_browser_cnt,'9035',1)
   END IF
   
      LET g_error_show = 0
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   LET g_wc = p_wc
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
 
   CASE ps_page_action
      
      WHEN "F" 
         LET g_pagestart = 1
      
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
      
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
            CALL cl_err(g_jump,'azz-998',0)
         END IF
         
      OTHERWISE
         
   END CASE
   
   LET l_sql_rank = "SELECT gzwkstus,gzwk001,gzwk002,gzwk003,RANK() OVER(ORDER BY gzwk001 ",
 
                    g_order,
                    ") AS RANK ",
                    " FROM gzwk_t ",
                    "  ",
                    "  ",
                    " WHERE  ", g_wc, cl_sql_add_filter("gzwk_t")
 
   #add-point:browser_fill段before_pre
   {<point name="browser_fill.before_pre"/>}
   #end add-point					
					
   #定義翻頁CURSOR
   LET g_sql= " SELECT gzwkstus,gzwk001,gzwk002,gzwk003 FROM (",l_sql_rank,") ",
              "  WHERE RANK >= ", g_pagestart,
              "    AND RANK <  ", (g_pagestart + g_max_browse) , 
              "  ORDER BY ",l_searchcol," ",g_order 
 
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzwk001,g_browser[g_cnt].b_gzwk002, 
       g_browser[g_cnt].b_gzwk003
      IF SQLCA.sqlcode THEN
         CALL cl_err("foreach:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
      
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      #LET g_browser[g_cnt].b_statepic = cl_get_actipic(g_browser[g_cnt].b_statepic)
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err("Max_Row:"||g_max_rec USING "<<<<<","std-00002",0)
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_current_cnt = g_rec_b
   LET g_cnt = 0
   
   CALL azzi020_fetch("") 
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
 
 
]]>
</section>
  <section id="azzi020.construct" ver="8" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi020_construct()
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_gzwk_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON gzwk002,gzwk001,gzwk003,gzwkstus,gzwk004,gzwk005,gzwk009,gzwk007,gzwk010, 
          gzwk006,gzwkownid,gzwkowndp,gzwkcrtid,gzwkcrtdp,gzwkcrtdt,gzwkmodid,gzwkmoddt,gzwkcnfid,gzwkcnfdt 

      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<gzwkownid>>----
         #ON ACTION controlp INFIELD gzwkownid
         #   CALL q_common('gzwk_t','gzwkownid',TRUE,FALSE,g_gzwk_m.gzwkownid) RETURNING ls_return
         #   DISPLAY ls_return TO gzwkownid
         #   NEXT FIELD gzwkownid  
         #
         ##----<<gzwkowndp>>----
         #ON ACTION controlp INFIELD gzwkowndp
         #   CALL q_common('gzwk_t','gzwkowndp',TRUE,FALSE,g_gzwk_m.gzwkowndp) RETURNING ls_return
         #   DISPLAY ls_return TO gzwkowndp
         #   NEXT FIELD gzwkowndp
         #
         ##----<<gzwkcrtid>>----
         #ON ACTION controlp INFIELD gzwkcrtid
         #   CALL q_common('gzwk_t','gzwkcrtid',TRUE,FALSE,g_gzwk_m.gzwkcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO gzwkcrtid
         #   NEXT FIELD gzwkcrtid
         #
         ##----<<gzwkcrtdp>>----
         #ON ACTION controlp INFIELD gzwkcrtdp
         #   CALL q_common('gzwk_t','gzwkcrtdp',TRUE,FALSE,g_gzwk_m.gzwkcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO gzwkcrtdp
         #   NEXT FIELD gzwkcrtdp
         #
         ##----<<gzwkmodid>>----
         #ON ACTION controlp INFIELD gzwkmodid
         #   CALL q_common('gzwk_t','gzwkmodid',TRUE,FALSE,g_gzwk_m.gzwkmodid) RETURNING ls_return
         #   DISPLAY ls_return TO gzwkmodid
         #   NEXT FIELD gzwkmodid
         #
         ##----<<gzwkcnfid>>----
         #ON ACTION controlp INFIELD gzwkcnfid
         #   CALL q_common('gzwk_t','gzwkcnfid',TRUE,FALSE,g_gzwk_m.gzwkcnfid) RETURNING ls_return
         #   DISPLAY ls_return TO gzwkcnfid
         #   NEXT FIELD gzwkcnfid
         #
         ##----<<gzwkpstid>>----
         ##ON ACTION controlp INFIELD gzwkpstid
         ##   CALL q_common('gzwk_t','gzwkpstid',TRUE,FALSE,g_gzwk_m.gzwkpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO gzwkpstid
         ##   NEXT FIELD gzwkpstid
         
         ##----<<gzwkcrtdt>>----
         AFTER FIELD gzwkcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzwkmoddt>>----
         AFTER FIELD gzwkmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzwkcnfdt>>----
         AFTER FIELD gzwkcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzwkpstdt>>----
         #AFTER FIELD gzwkpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #一般欄位
         #---------------------------<  Master  >---------------------------
         #----<<gzwk002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk002
            #add-point:BEFORE FIELD gzwk002
            {<point name="construct.b.gzwk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk002
            
            #add-point:AFTER FIELD gzwk002
            {<point name="construct.a.gzwk002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwk002
         ON ACTION controlp INFIELD gzwk002
            #add-point:ON ACTION controlp INFIELD gzwk002
            {<point name="construct.c.gzwk002" />}
            #END add-point
 
         #----<<gzwk001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk001
            #add-point:BEFORE FIELD gzwk001
            {<point name="construct.b.gzwk001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk001
            
            #add-point:AFTER FIELD gzwk001
            {<point name="construct.a.gzwk001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwk001
         ON ACTION controlp INFIELD gzwk001
            #add-point:ON ACTION controlp INFIELD gzwk001
            {<point name="construct.c.gzwk001" />}
            #END add-point
 
         #----<<gzwk003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk003
            #add-point:BEFORE FIELD gzwk003
            {<point name="construct.b.gzwk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk003
            
            #add-point:AFTER FIELD gzwk003
            {<point name="construct.a.gzwk003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwk003
         ON ACTION controlp INFIELD gzwk003
            #add-point:ON ACTION controlp INFIELD gzwk003
            {<point name="construct.c.gzwk003" />}
            #END add-point
 
         #----<<gzwkstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkstus
            #add-point:BEFORE FIELD gzwkstus
            {<point name="construct.b.gzwkstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkstus
            
            #add-point:AFTER FIELD gzwkstus
            {<point name="construct.a.gzwkstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwkstus
         ON ACTION controlp INFIELD gzwkstus
            #add-point:ON ACTION controlp INFIELD gzwkstus
            {<point name="construct.c.gzwkstus" />}
            #END add-point
 
         #----<<gzwk004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk004
            #add-point:BEFORE FIELD gzwk004
            {<point name="construct.b.gzwk004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk004
            
            #add-point:AFTER FIELD gzwk004
            {<point name="construct.a.gzwk004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwk004
         ON ACTION controlp INFIELD gzwk004
            #add-point:ON ACTION controlp INFIELD gzwk004
            {<point name="construct.c.gzwk004" />}
            #END add-point
 
         #----<<gzwk005>>----
         #Ctrlp:construct.c.gzwk005
         ON ACTION controlp INFIELD gzwk005
            #add-point:ON ACTION controlp INFIELD gzwk005
            {<point name="construct.c.gzwk005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk005
            #add-point:BEFORE FIELD gzwk005
            {<point name="construct.b.gzwk005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk005
            
            #add-point:AFTER FIELD gzwk005
            {<point name="construct.a.gzwk005" />}
            #END add-point
            
 
         #----<<gzwk005_desc>>----
         #----<<gzwk009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk009
            #add-point:BEFORE FIELD gzwk009
            {<point name="construct.b.gzwk009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk009
            
            #add-point:AFTER FIELD gzwk009
            {<point name="construct.a.gzwk009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwk009
         ON ACTION controlp INFIELD gzwk009
            #add-point:ON ACTION controlp INFIELD gzwk009
            {<point name="construct.c.gzwk009" />}
            #END add-point
 
         #----<<gzwk007>>----
         #Ctrlp:construct.c.gzwk007
         ON ACTION controlp INFIELD gzwk007
            #add-point:ON ACTION controlp INFIELD gzwk007
            {<point name="construct.c.gzwk007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk007
            #add-point:BEFORE FIELD gzwk007
            {<point name="construct.b.gzwk007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk007
            
            #add-point:AFTER FIELD gzwk007
            {<point name="construct.a.gzwk007" />}
            #END add-point
            
 
         #----<<gzwk007_desc>>----
         #----<<gzwk010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk010
            #add-point:BEFORE FIELD gzwk010
            {<point name="construct.b.gzwk010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk010
            
            #add-point:AFTER FIELD gzwk010
            {<point name="construct.a.gzwk010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwk010
         ON ACTION controlp INFIELD gzwk010
            #add-point:ON ACTION controlp INFIELD gzwk010
            {<point name="construct.c.gzwk010" />}
            #END add-point
 
         #----<<gzwk006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk006
            #add-point:BEFORE FIELD gzwk006
            {<point name="construct.b.gzwk006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk006
            
            #add-point:AFTER FIELD gzwk006
            {<point name="construct.a.gzwk006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzwk006
         ON ACTION controlp INFIELD gzwk006
            #add-point:ON ACTION controlp INFIELD gzwk006
            {<point name="construct.c.gzwk006" />}
            #END add-point
 
         #----<<gzwkownid>>----
         #Ctrlp:construct.c.gzwkownid
         ON ACTION controlp INFIELD gzwkownid
            #add-point:ON ACTION controlp INFIELD gzwkownid
            {<point name="construct.c.gzwkownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkownid
            #add-point:BEFORE FIELD gzwkownid
            {<point name="construct.b.gzwkownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkownid
            
            #add-point:AFTER FIELD gzwkownid
            {<point name="construct.a.gzwkownid" />}
            #END add-point
            
 
         #----<<gzwkownid_desc>>----
         #----<<gzwkowndp>>----
         #Ctrlp:construct.c.gzwkowndp
         ON ACTION controlp INFIELD gzwkowndp
            #add-point:ON ACTION controlp INFIELD gzwkowndp
            {<point name="construct.c.gzwkowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkowndp
            #add-point:BEFORE FIELD gzwkowndp
            {<point name="construct.b.gzwkowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkowndp
            
            #add-point:AFTER FIELD gzwkowndp
            {<point name="construct.a.gzwkowndp" />}
            #END add-point
            
 
         #----<<gzwkowndp_desc>>----
         #----<<gzwkcrtid>>----
         #Ctrlp:construct.c.gzwkcrtid
         ON ACTION controlp INFIELD gzwkcrtid
            #add-point:ON ACTION controlp INFIELD gzwkcrtid
            {<point name="construct.c.gzwkcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkcrtid
            #add-point:BEFORE FIELD gzwkcrtid
            {<point name="construct.b.gzwkcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkcrtid
            
            #add-point:AFTER FIELD gzwkcrtid
            {<point name="construct.a.gzwkcrtid" />}
            #END add-point
            
 
         #----<<gzwkcrtid_desc>>----
         #----<<gzwkcrtdp>>----
         #Ctrlp:construct.c.gzwkcrtdp
         ON ACTION controlp INFIELD gzwkcrtdp
            #add-point:ON ACTION controlp INFIELD gzwkcrtdp
            {<point name="construct.c.gzwkcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkcrtdp
            #add-point:BEFORE FIELD gzwkcrtdp
            {<point name="construct.b.gzwkcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkcrtdp
            
            #add-point:AFTER FIELD gzwkcrtdp
            {<point name="construct.a.gzwkcrtdp" />}
            #END add-point
            
 
         #----<<gzwkcrtdp_desc>>----
         #----<<gzwkcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkcrtdt
            #add-point:BEFORE FIELD gzwkcrtdt
            {<point name="construct.b.gzwkcrtdt" />}
            #END add-point
 
         #----<<gzwkmodid>>----
         #Ctrlp:construct.c.gzwkmodid
         ON ACTION controlp INFIELD gzwkmodid
            #add-point:ON ACTION controlp INFIELD gzwkmodid
            {<point name="construct.c.gzwkmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkmodid
            #add-point:BEFORE FIELD gzwkmodid
            {<point name="construct.b.gzwkmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkmodid
            
            #add-point:AFTER FIELD gzwkmodid
            {<point name="construct.a.gzwkmodid" />}
            #END add-point
            
 
         #----<<gzwkmodid_desc>>----
         #----<<gzwkmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkmoddt
            #add-point:BEFORE FIELD gzwkmoddt
            {<point name="construct.b.gzwkmoddt" />}
            #END add-point
 
         #----<<gzwkcnfid>>----
         #Ctrlp:construct.c.gzwkcnfid
         ON ACTION controlp INFIELD gzwkcnfid
            #add-point:ON ACTION controlp INFIELD gzwkcnfid
            {<point name="construct.c.gzwkcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkcnfid
            #add-point:BEFORE FIELD gzwkcnfid
            {<point name="construct.b.gzwkcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkcnfid
            
            #add-point:AFTER FIELD gzwkcnfid
            {<point name="construct.a.gzwkcnfid" />}
            #END add-point
            
 
         #----<<gzwkcnfid_desc>>----
         #----<<gzwkcnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkcnfdt
            #add-point:BEFORE FIELD gzwkcnfdt
            {<point name="construct.b.gzwkcnfdt" />}
            #END add-point
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
  
END FUNCTION
]]>
</section>
  <section id="azzi020.default_search" ver="3" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi020_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " gzwk001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="azzi020.delete" ver="8" status="" src="s">
<![CDATA[#+ 資料刪除 
PRIVATE FUNCTION azzi020_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   IF g_gzwk_m.gzwk001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   CALL azzi020_show()
   
   CALL s_transaction_begin()
    
   LET g_gzwk001_t = g_gzwk_m.gzwk001
 
   
   
 
   OPEN azzi020_cl USING 
                           g_gzwk_m.gzwk001
 
   IF STATUS THEN
      CALL cl_err("OPEN azzi020_cl:", STATUS, 0)
      CLOSE azzi020_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH azzi020_cl INTO g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003,g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004, 
       g_gzwk_m.gzwk005,g_gzwk_m.gzwk005_desc,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk007_desc, 
       g_gzwk_m.gzwk010,g_gzwk_m.gzwk006,g_gzwk_m.gzwkownid,g_gzwk_m.gzwkownid_desc,g_gzwk_m.gzwkowndp, 
       g_gzwk_m.gzwkowndp_desc,g_gzwk_m.gzwkcrtid,g_gzwk_m.gzwkcrtid_desc,g_gzwk_m.gzwkcrtdp,g_gzwk_m.gzwkcrtdp_desc, 
       g_gzwk_m.gzwkcrtdt,g_gzwk_m.gzwkmodid,g_gzwk_m.gzwkmodid_desc,g_gzwk_m.gzwkmoddt,g_gzwk_m.gzwkcnfid, 
       g_gzwk_m.gzwkcnfid_desc,g_gzwk_m.gzwkcnfdt
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzwk_m.gzwk001,SQLCA.sqlcode,0)
      RETURN
   END IF
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi020_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
      DELETE FROM gzwk_t 
       WHERE  gzwk001 = g_gzwk_m.gzwk001 
 
 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzwk_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
  
      
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      
      CLEAR FORM
      CALL azzi020_ui_browser_refresh()
      IF g_browser_cnt > 0 THEN
         CALL azzi020_browser_fill(g_wc,"")
         CALL azzi020_fetch("P")
      ELSE
         CALL azzi020_browser_fill(" 1=1 ","F")
      END IF
      
   END IF
 
   CLOSE azzi020_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzwk_m.gzwk001,"D")
 
END FUNCTION
]]>
</section>
  <section id="azzi020.description" ver="54" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000067
#+ 
#+ Filename...: azzi020
#+ Description: FAQ紀錄及查詢
#+ Creator....: 00845(2014/02/26)
#+ Modifier...: 00845(2014/05/06)
#+ Buildtype..: 應用 i01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="azzi020.fetch" ver="6" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi020_fetch(p_fl)
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   CASE p_fl
      WHEN "F" LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         LET g_current_idx = g_header_cnt        
      WHEN "/"
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count        #總筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   
   
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx)
 
   CALL cl_navigator_setting(g_browser_idx, g_current_cnt) 
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_gzwk_m.gzwk001 = g_browser[g_current_idx].b_gzwk001
 
                       
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi020_master_referesh USING g_gzwk_m.gzwk001 INTO g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003, 
       g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004,g_gzwk_m.gzwk005,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk010, 
       g_gzwk_m.gzwk006,g_gzwk_m.gzwkownid,g_gzwk_m.gzwkowndp,g_gzwk_m.gzwkcrtid,g_gzwk_m.gzwkcrtdp, 
       g_gzwk_m.gzwkcrtdt,g_gzwk_m.gzwkmodid,g_gzwk_m.gzwkmoddt,g_gzwk_m.gzwkcnfid,g_gzwk_m.gzwkcnfdt 

   IF SQLCA.sqlcode THEN
      CALL cl_err("gzwk_t",SQLCA.sqlcode,0)
      INITIALIZE g_gzwk_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #重新顯示
   CALL azzi020_show()
 
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
END FUNCTION
]]>
</section>
  <section id="azzi020.filter" ver="4" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION azzi020_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gzwk001,gzwk002,gzwk003
                          FROM s_browse[1].b_gzwk001,s_browse[1].b_gzwk002,s_browse[1].b_gzwk003
 
         BEFORE CONSTRUCT
               DISPLAY azzi020_filter_parser('gzwk001') TO s_browse[1].b_gzwk001
            DISPLAY azzi020_filter_parser('gzwk002') TO s_browse[1].b_gzwk002
            DISPLAY azzi020_filter_parser('gzwk003') TO s_browse[1].b_gzwk003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL azzi020_filter_show('gzwk001')
   CALL azzi020_filter_show('gzwk002')
   CALL azzi020_filter_show('gzwk003')
 
END FUNCTION
]]>
</section>
  <section id="azzi020.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi020_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="azzi020.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION azzi020_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = azzi020_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="azzi020.global" ver="7" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_gzwk_m RECORD
       gzwk002 LIKE gzwk_t.gzwk002, 
   gzwk001 LIKE gzwk_t.gzwk001, 
   gzwk003 LIKE gzwk_t.gzwk003, 
   gzwkstus LIKE gzwk_t.gzwkstus, 
   gzwk004 LIKE gzwk_t.gzwk004, 
   gzwk005 LIKE gzwk_t.gzwk005, 
   gzwk005_desc LIKE type_t.chr80, 
   gzwk009 DATETIME YEAR TO SECOND, 
   gzwk007 LIKE gzwk_t.gzwk007, 
   gzwk007_desc LIKE type_t.chr80, 
   gzwk010 DATETIME YEAR TO SECOND, 
   gzwk006 LIKE gzwk_t.gzwk006, 
   gzwkownid LIKE gzwk_t.gzwkownid, 
   gzwkownid_desc LIKE type_t.chr80, 
   gzwkowndp LIKE gzwk_t.gzwkowndp, 
   gzwkowndp_desc LIKE type_t.chr80, 
   gzwkcrtid LIKE gzwk_t.gzwkcrtid, 
   gzwkcrtid_desc LIKE type_t.chr80, 
   gzwkcrtdp LIKE gzwk_t.gzwkcrtdp, 
   gzwkcrtdp_desc LIKE type_t.chr80, 
   gzwkcrtdt DATETIME YEAR TO SECOND, 
   gzwkmodid LIKE gzwk_t.gzwkmodid, 
   gzwkmodid_desc LIKE type_t.chr80, 
   gzwkmoddt DATETIME YEAR TO SECOND, 
   gzwkcnfid LIKE gzwk_t.gzwkcnfid, 
   gzwkcnfid_desc LIKE type_t.chr80, 
   gzwkcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_gzwk_m        type_g_gzwk_m
DEFINE g_gzwk_m_t      type_g_gzwk_m                #備份舊值
   DEFINE g_gzwk001_t LIKE gzwk_t.gzwk001
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD                   #資料瀏覽之欄位  
         b_statepic     LIKE type_t.chr50,
            b_gzwk001 LIKE gzwk_t.gzwk001,
      b_gzwk002 LIKE gzwk_t.gzwk002,
      b_gzwk003 LIKE gzwk_t.gzwk003
         #,rank           LIKE type_t.num10
      END RECORD 
          
#無單頭append欄位定義
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
  
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING             #確定當下點擊的單身
 
#快速搜尋用
DEFINE g_searchcol           STRING             #查詢欄位代碼
DEFINE g_searchstr           STRING             #查詢欄位字串
DEFINE g_order               STRING             #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5   #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5   #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10  #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5   #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5   #Browser 總筆數(所有資料)
DEFINE g_tmp_page            LIKE type_t.num5   
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_chk                 BOOLEAN
DEFINE g_default             BOOLEAN            #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="azzi020.init" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi020_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
      CALL cl_set_combo_scc_part('gzwkstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('gzwk002','56') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL azzi020_default_search()
 
END FUNCTION
]]>
</section>
  <section id="azzi020.input" ver="9" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi020_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   CALL cl_set_head_visible("","YES")  
   
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL azzi020_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi020_set_no_entry(p_cmd)
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DISPLAY BY NAME g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003,g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004, 
       g_gzwk_m.gzwk005,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk010,g_gzwk_m.gzwk006
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003,g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004, 
          g_gzwk_m.gzwk005,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk010,g_gzwk_m.gzwk006 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION send_mail
            LET g_action_choice="send_mail"
            IF cl_auth_chk_act("send_mail") THEN
               
               #add-point:ON ACTION send_mail
               {<point name="input.master_input.send_mail" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            
            #add-point:input開始前
            {<point name="input.before.input"/>}
            #end add-point
   
         #---------------------------<  Master  >---------------------------
         #----<<gzwk002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk002
            #add-point:BEFORE FIELD gzwk002
            {<point name="input.b.gzwk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk002
            
            #add-point:AFTER FIELD gzwk002
            {<point name="input.a.gzwk002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk002
            #add-point:ON CHANGE gzwk002
            {<point name="input.g.gzwk002" />}
            #END add-point
 
         #----<<gzwk001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk001
            #add-point:BEFORE FIELD gzwk001
            {<point name="input.b.gzwk001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk001
            
            #add-point:AFTER FIELD gzwk001
            {<point name="input.a.gzwk001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk001
            #add-point:ON CHANGE gzwk001
            {<point name="input.g.gzwk001" />}
            #END add-point
 
         #----<<gzwk003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk003
            #add-point:BEFORE FIELD gzwk003
            {<point name="input.b.gzwk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk003
            
            #add-point:AFTER FIELD gzwk003
            {<point name="input.a.gzwk003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk003
            #add-point:ON CHANGE gzwk003
            {<point name="input.g.gzwk003" />}
            #END add-point
 
         #----<<gzwkstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwkstus
            #add-point:BEFORE FIELD gzwkstus
            {<point name="input.b.gzwkstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwkstus
            
            #add-point:AFTER FIELD gzwkstus
            {<point name="input.a.gzwkstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwkstus
            #add-point:ON CHANGE gzwkstus
            {<point name="input.g.gzwkstus" />}
            #END add-point
 
         #----<<gzwk004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk004
            #add-point:BEFORE FIELD gzwk004
            {<point name="input.b.gzwk004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk004
            
            #add-point:AFTER FIELD gzwk004
            {<point name="input.a.gzwk004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk004
            #add-point:ON CHANGE gzwk004
            {<point name="input.g.gzwk004" />}
            #END add-point
 
         #----<<gzwk005>>----
         #此段落由子樣板a02產生
         AFTER FIELD gzwk005
            
            #add-point:AFTER FIELD gzwk005
            {<point name="input.a.gzwk005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk005
            #add-point:BEFORE FIELD gzwk005
            {<point name="input.b.gzwk005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk005
            #add-point:ON CHANGE gzwk005
            {<point name="input.g.gzwk005" />}
            #END add-point
 
         #----<<gzwk005_desc>>----
         #----<<gzwk009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk009
            #add-point:BEFORE FIELD gzwk009
            {<point name="input.b.gzwk009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk009
            
            #add-point:AFTER FIELD gzwk009
            {<point name="input.a.gzwk009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk009
            #add-point:ON CHANGE gzwk009
            {<point name="input.g.gzwk009" />}
            #END add-point
 
         #----<<gzwk007>>----
         #此段落由子樣板a02產生
         AFTER FIELD gzwk007
            
            #add-point:AFTER FIELD gzwk007
            {<point name="input.a.gzwk007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk007
            #add-point:BEFORE FIELD gzwk007
            {<point name="input.b.gzwk007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk007
            #add-point:ON CHANGE gzwk007
            {<point name="input.g.gzwk007" />}
            #END add-point
 
         #----<<gzwk007_desc>>----
         #----<<gzwk010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk010
            #add-point:BEFORE FIELD gzwk010
            {<point name="input.b.gzwk010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk010
            
            #add-point:AFTER FIELD gzwk010
            {<point name="input.a.gzwk010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk010
            #add-point:ON CHANGE gzwk010
            {<point name="input.g.gzwk010" />}
            #END add-point
 
         #----<<gzwk006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzwk006
            #add-point:BEFORE FIELD gzwk006
            {<point name="input.b.gzwk006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwk006
            
            #add-point:AFTER FIELD gzwk006
            {<point name="input.a.gzwk006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwk006
            #add-point:ON CHANGE gzwk006
            {<point name="input.g.gzwk006" />}
            #END add-point
 
         #----<<gzwkownid>>----
         #----<<gzwkownid_desc>>----
         #----<<gzwkowndp>>----
         #----<<gzwkowndp_desc>>----
         #----<<gzwkcrtid>>----
         #----<<gzwkcrtid_desc>>----
         #----<<gzwkcrtdp>>----
         #----<<gzwkcrtdp_desc>>----
         #----<<gzwkcrtdt>>----
         #----<<gzwkmodid>>----
         #----<<gzwkmodid_desc>>----
         #----<<gzwkmoddt>>----
         #----<<gzwkcnfid>>----
         #----<<gzwkcnfid_desc>>----
         #----<<gzwkcnfdt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<gzwk002>>----
         #Ctrlp:input.c.gzwk002
         ON ACTION controlp INFIELD gzwk002
            #add-point:ON ACTION controlp INFIELD gzwk002
            {<point name="input.c.gzwk002" />}
            #END add-point
 
         #----<<gzwk001>>----
         #Ctrlp:input.c.gzwk001
         ON ACTION controlp INFIELD gzwk001
            #add-point:ON ACTION controlp INFIELD gzwk001
            {<point name="input.c.gzwk001" />}
            #END add-point
 
         #----<<gzwk003>>----
         #Ctrlp:input.c.gzwk003
         ON ACTION controlp INFIELD gzwk003
            #add-point:ON ACTION controlp INFIELD gzwk003
            {<point name="input.c.gzwk003" />}
            #END add-point
 
         #----<<gzwkstus>>----
         #Ctrlp:input.c.gzwkstus
         ON ACTION controlp INFIELD gzwkstus
            #add-point:ON ACTION controlp INFIELD gzwkstus
            {<point name="input.c.gzwkstus" />}
            #END add-point
 
         #----<<gzwk004>>----
         #Ctrlp:input.c.gzwk004
         ON ACTION controlp INFIELD gzwk004
            #add-point:ON ACTION controlp INFIELD gzwk004
            {<point name="input.c.gzwk004" />}
            #END add-point
 
         #----<<gzwk005>>----
         #Ctrlp:input.c.gzwk005
         ON ACTION controlp INFIELD gzwk005
            #add-point:ON ACTION controlp INFIELD gzwk005
            {<point name="input.c.gzwk005" />}
            #END add-point
 
         #----<<gzwk005_desc>>----
         #----<<gzwk009>>----
         #Ctrlp:input.c.gzwk009
         ON ACTION controlp INFIELD gzwk009
            #add-point:ON ACTION controlp INFIELD gzwk009
            {<point name="input.c.gzwk009" />}
            #END add-point
 
         #----<<gzwk007>>----
         #Ctrlp:input.c.gzwk007
         ON ACTION controlp INFIELD gzwk007
            #add-point:ON ACTION controlp INFIELD gzwk007
            {<point name="input.c.gzwk007" />}
            #END add-point
 
         #----<<gzwk007_desc>>----
         #----<<gzwk010>>----
         #Ctrlp:input.c.gzwk010
         ON ACTION controlp INFIELD gzwk010
            #add-point:ON ACTION controlp INFIELD gzwk010
            {<point name="input.c.gzwk010" />}
            #END add-point
 
         #----<<gzwk006>>----
         #Ctrlp:input.c.gzwk006
         ON ACTION controlp INFIELD gzwk006
            #add-point:ON ACTION controlp INFIELD gzwk006
            {<point name="input.c.gzwk006" />}
            #END add-point
 
         #----<<gzwkownid>>----
         #----<<gzwkownid_desc>>----
         #----<<gzwkowndp>>----
         #----<<gzwkowndp_desc>>----
         #----<<gzwkcrtid>>----
         #----<<gzwkcrtid_desc>>----
         #----<<gzwkcrtdp>>----
         #----<<gzwkcrtdp_desc>>----
         #----<<gzwkcrtdt>>----
         #----<<gzwkmodid>>----
         #----<<gzwkmodid_desc>>----
         #----<<gzwkmoddt>>----
         #----<<gzwkcnfid>>----
         #----<<gzwkcnfid_desc>>----
         #----<<gzwkcnfdt>>----
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()   #錯誤訊息統整顯示
 
            IF p_cmd <> "u" THEN
               LET l_count = 1  
 
               SELECT COUNT(*) INTO l_count FROM gzwk_t
                WHERE  gzwk001 = g_gzwk_m.gzwk001
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  INSERT INTO gzwk_t (gzwk002,gzwk001,gzwk003,gzwkstus,gzwk004,gzwk005,gzwk009,gzwk007, 
                      gzwk010,gzwk006,gzwkownid,gzwkowndp,gzwkcrtid,gzwkcrtdp,gzwkcrtdt,gzwkcnfid,gzwkcnfdt) 

                  VALUES (g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003,g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004, 
                      g_gzwk_m.gzwk005,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk010,g_gzwk_m.gzwk006, 
                      g_gzwk_m.gzwkownid,g_gzwk_m.gzwkowndp,g_gzwk_m.gzwkcrtid,g_gzwk_m.gzwkcrtdp,g_gzwk_m.gzwkcrtdt, 
                      g_gzwk_m.gzwkcnfid,g_gzwk_m.gzwkcnfdt) 
                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("gzwk_t",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL cl_err( "g_gzwk_m.gzwk001", "std-00006", 0 )
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE gzwk_t SET (gzwk002,gzwk001,gzwk003,gzwkstus,gzwk004,gzwk005,gzwk009,gzwk007,gzwk010, 
                   gzwk006,gzwkownid,gzwkowndp,gzwkcrtid,gzwkcrtdp,gzwkcrtdt,gzwkcnfid,gzwkcnfdt) = (g_gzwk_m.gzwk002, 
                   g_gzwk_m.gzwk001,g_gzwk_m.gzwk003,g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004,g_gzwk_m.gzwk005, 
                   g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk010,g_gzwk_m.gzwk006,g_gzwk_m.gzwkownid, 
                   g_gzwk_m.gzwkowndp,g_gzwk_m.gzwkcrtid,g_gzwk_m.gzwkcrtdp,g_gzwk_m.gzwkcrtdt,g_gzwk_m.gzwkcnfid, 
                   g_gzwk_m.gzwkcnfdt)
                WHERE  gzwk001 = g_gzwk001_t #
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzwk_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzwk_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                     #資料多語言用-增/改
                     
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            END IF
           #controlp
      END INPUT
          
      #add-point:input段more input 
      {<point name="input.more_input"/>}
      #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="azzi020.insert" ver="4" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi020_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM #清畫面欄位內容
 
   INITIALIZE g_gzwk_m.* LIKE gzwk_t.*             #DEFAULT 設定
   LET g_gzwk001_t = NULL
 
   
   CALL s_transaction_begin()
   
   WHILE TRUE
      #六階樹狀給值
 
      
      #公用欄位給值
      #此段落由子樣板a14產生    
      LET g_gzwk_m.gzwkownid = g_user
      LET g_gzwk_m.gzwkowndp = g_dept
      LET g_gzwk_m.gzwkcrtid = g_user
      LET g_gzwk_m.gzwkcrtdp = g_dept 
      LET g_gzwk_m.gzwkcrtdt = cl_get_current()
      LET g_gzwk_m.gzwkmodid = ""
      LET g_gzwk_m.gzwkmoddt = ""
      LET g_gzwk_m.gzwkstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gzwk_m.gzwkstus = "Y"
 
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      CALL azzi020_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzwk_m.* = g_gzwk_m_t.*
         CALL azzi020_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   LET g_gzwk001_t = g_gzwk_m.gzwk001
 
   
   LET g_state = "Y"
 
   LET g_wc = g_wc,  
              " OR ( ",
              " gzwk001 = '", g_gzwk_m.gzwk001 CLIPPED, "' "
 
              , ") "
 
END FUNCTION
]]>
</section>
  <section id="azzi020.main" ver="8" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT gzwk002,gzwk001,gzwk003,gzwkstus,gzwk004,gzwk005,'',gzwk009,gzwk007,'', 
       gzwk010,gzwk006,gzwkownid,'',gzwkowndp,'',gzwkcrtid,'',gzwkcrtdp,'',gzwkcrtdt,gzwkmodid,'',gzwkmoddt, 
       gzwkcnfid,'',gzwkcnfdt FROM gzwk_t WHERE gzwk001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE azzi020_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzwk002,gzwk001,gzwk003,gzwkstus,gzwk004,gzwk005,gzwk009,gzwk007,gzwk010, 
       gzwk006,gzwkownid,gzwkowndp,gzwkcrtid,gzwkcrtdp,gzwkcrtdt,gzwkmodid,gzwkmoddt,gzwkcnfid,gzwkcnfdt", 

               " FROM gzwk_t",
               " WHERE  gzwk001 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi020_master_referesh FROM g_sql
 
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi020 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi020_init()   
 
      #進入選單 Menu (="N")
      CALL azzi020_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi020
      
   END IF 
   
   CLOSE azzi020_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="azzi020.modify" ver="6" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi020_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   IF g_gzwk_m.gzwk001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
   
   EXECUTE azzi020_master_referesh USING g_gzwk_m.gzwk001 INTO g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003, 
       g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004,g_gzwk_m.gzwk005,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk010, 
       g_gzwk_m.gzwk006,g_gzwk_m.gzwkownid,g_gzwk_m.gzwkowndp,g_gzwk_m.gzwkcrtid,g_gzwk_m.gzwkcrtdp, 
       g_gzwk_m.gzwkcrtdt,g_gzwk_m.gzwkmodid,g_gzwk_m.gzwkmoddt,g_gzwk_m.gzwkcnfid,g_gzwk_m.gzwkcnfdt 

 
   ERROR ""
  
   LET g_gzwk001_t = g_gzwk_m.gzwk001
 
   
   CALL s_transaction_begin()
   
   OPEN azzi020_cl USING g_gzwk_m.gzwk001
   IF STATUS THEN
      CALL cl_err("OPEN azzi020_cl:", STATUS, 1)
      CLOSE azzi020_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi020_cl INTO g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003,g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004, 
       g_gzwk_m.gzwk005,g_gzwk_m.gzwk005_desc,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk007_desc, 
       g_gzwk_m.gzwk010,g_gzwk_m.gzwk006,g_gzwk_m.gzwkownid,g_gzwk_m.gzwkownid_desc,g_gzwk_m.gzwkowndp, 
       g_gzwk_m.gzwkowndp_desc,g_gzwk_m.gzwkcrtid,g_gzwk_m.gzwkcrtid_desc,g_gzwk_m.gzwkcrtdp,g_gzwk_m.gzwkcrtdp_desc, 
       g_gzwk_m.gzwkcrtdt,g_gzwk_m.gzwkmodid,g_gzwk_m.gzwkmodid_desc,g_gzwk_m.gzwkmoddt,g_gzwk_m.gzwkcnfid, 
       g_gzwk_m.gzwkcnfid_desc,g_gzwk_m.gzwkcnfdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzwk_t",SQLCA.sqlcode,0)
      CLOSE azzi020_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL azzi020_show()
   
   WHILE TRUE
      LET g_gzwk_m.gzwk001 = g_gzwk001_t
 
      
      #寫入修改者/修改日期資訊
      LET g_gzwk_m.gzwkmodid = g_user 
LET g_gzwk_m.gzwkmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      CALL azzi020_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzwk_m.* = g_gzwk_m_t.*
         CALL azzi020_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE gzwk_t SET (gzwkmodid,gzwkmoddt) = (g_gzwk_m.gzwkmodid,g_gzwk_m.gzwkmoddt)
       WHERE  gzwk001 = g_gzwk001_t
 
 
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_gzwk_m.gzwk001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE azzi020_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzwk_m.gzwk001,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
]]>
</section>
  <section id="azzi020.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="azzi020.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="azzi020.query" ver="4" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi020_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL g_browser.clear() 
 
   IF g_worksheet_hidden THEN  #browser panel折疊
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   IF g_header_hidden THEN    #單頭折疊
      CALL gfrm_curr.setElementHidden("vb_master",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_gzwk_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL azzi020_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi020_browser_fill(g_wc,"F")
      CALL azzi020_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   LET g_error_show = 1
   CALL azzi020_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL azzi020_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
</section>
  <section id="azzi020.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi020_reproduce()
   DEFINE l_newno     LIKE gzwk_t.gzwk001 
   DEFINE l_oldno     LIKE gzwk_t.gzwk001 
 
   DEFINE l_master    RECORD LIKE gzwk_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_gzwk_m.gzwk001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_gzwk001_t = g_gzwk_m.gzwk001
 
   
   LET g_gzwk_m.gzwk001 = ""
 
    
   CALL azzi020_set_entry("a")
   CALL azzi020_set_no_entry("a")
   
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_gzwk_m.gzwkownid = g_user
      LET g_gzwk_m.gzwkowndp = g_dept
      LET g_gzwk_m.gzwkcrtid = g_user
      LET g_gzwk_m.gzwkcrtdp = g_dept 
      LET g_gzwk_m.gzwkcrtdt = cl_get_current()
      LET g_gzwk_m.gzwkmodid = ""
      LET g_gzwk_m.gzwkmoddt = ""
      LET g_gzwk_m.gzwkstus = "N"
 
 
 
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL azzi020_input("r")
 
   
   
   IF INT_FLAG  THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   CALL s_transaction_begin()
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzwk_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " gzwk001 = '", g_gzwk_m.gzwk001 CLIPPED, "' "
 
              , ") "
   
   LET g_gzwk001_t = g_gzwk_m.gzwk001
 
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION
]]>
</section>
  <section id="azzi020.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi020_set_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("gzwk001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="azzi020.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi020_set_no_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzwk001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="azzi020.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi020_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzwk_m.gzwk001
   LET g_pk_array[1].column = 'gzwk001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="azzi020.show" ver="5" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示 
PRIVATE FUNCTION azzi020_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_gzwk_m_t.* = g_gzwk_m.*      #保存單頭舊值
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_gzwk_m.gzwkownid_desc = cl_get_username(g_gzwk_m.gzwkownid)
      #LET g_gzwk_m.gzwkowndp_desc = cl_get_deptname(g_gzwk_m.gzwkowndp)
      #LET g_gzwk_m.gzwkcrtid_desc = cl_get_username(g_gzwk_m.gzwkcrtid)
      #LET g_gzwk_m.gzwkcrtdp_desc = cl_get_deptname(g_gzwk_m.gzwkcrtdp)
      #LET g_gzwk_m.gzwkmodid_desc = cl_get_username(g_gzwk_m.gzwkmodid)
      #LET g_gzwk_m.gzwkcnfid_desc = cl_get_deptname(g_gzwk_m.gzwkcnfid)
      ##LET g_gzwk_m.gzwkpstid_desc = cl_get_deptname(g_gzwk_m.gzwkpstid)
      
 
 
    
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi020_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzwk_m.gzwk002,g_gzwk_m.gzwk001,g_gzwk_m.gzwk003,g_gzwk_m.gzwkstus,g_gzwk_m.gzwk004, 
       g_gzwk_m.gzwk005,g_gzwk_m.gzwk005_desc,g_gzwk_m.gzwk009,g_gzwk_m.gzwk007,g_gzwk_m.gzwk007_desc, 
       g_gzwk_m.gzwk010,g_gzwk_m.gzwk006,g_gzwk_m.gzwkownid,g_gzwk_m.gzwkownid_desc,g_gzwk_m.gzwkowndp, 
       g_gzwk_m.gzwkowndp_desc,g_gzwk_m.gzwkcrtid,g_gzwk_m.gzwkcrtid_desc,g_gzwk_m.gzwkcrtdp,g_gzwk_m.gzwkcrtdp_desc, 
       g_gzwk_m.gzwkcrtdt,g_gzwk_m.gzwkmodid,g_gzwk_m.gzwkmodid_desc,g_gzwk_m.gzwkmoddt,g_gzwk_m.gzwkcnfid, 
       g_gzwk_m.gzwkcnfid_desc,g_gzwk_m.gzwkcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_gzwk_m.gzwkstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="azzi020.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="azzi020.state_change" ver="3" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION azzi020_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzwk_m.gzwk001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzwk_m.gzwkstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE gzwk_t SET gzwkstus = lc_state 
    WHERE  gzwk001 = g_gzwk_m.gzwk001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_gzwk_m.gzwkstus = lc_state
      DISPLAY BY NAME g_gzwk_m.gzwkstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="azzi020.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi020_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzwk001 = g_gzwk_m.gzwk001 
 
	 THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser_cnt-1
   IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_idx = g_browser_cnt
   END IF
  
END FUNCTION
]]>
</section>
  <section id="azzi020.ui_dialog" ver="28" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION azzi020_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 1
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi020_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL azzi020_browser_fill(g_wc,"")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_gzwk001 = g_gzwk001_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
    
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL azzi020_fetch("")   
               END IF               
         
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL azzi020_statechange()
               
            ON ACTION first
               CALL azzi020_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL azzi020_fetch("N")
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL azzi020_fetch("/")
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               CALL azzi020_fetch("P")
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               CALL azzi020_fetch("L")  
               #CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               #CALL fgl_set_arr_curr(g_current_idx)
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL azzi020_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi020_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL azzi020_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
         #+ 此段落由子樣板a43產生
         ON ACTION ff_next
            LET g_action_choice="ff_next"
               
               #add-point:ON ACTION ff_next
               {<point name="menu2.ff_next" />}
               #END add-point
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi020_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi020_delete()
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION ff_expand
            LET g_action_choice="ff_expand"
               
               #add-point:ON ACTION ff_expand
               {<point name="menu2.ff_expand" />}
               #END add-point
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi020_insert()
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi020_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi020_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION send_mail
            LET g_action_choice="send_mail"
            IF cl_auth_chk_act("send_mail") THEN
               
               #add-point:ON ACTION send_mail
               {<point name="menu2.send_mail" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION ff_previous
            LET g_action_choice="ff_previous"
               
               #add-point:ON ACTION ff_previous
               {<point name="menu2.ff_previous" />}
               #END add-point
 
 
            
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi020_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi020_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi020_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL azzi020_fetch("")      
                  
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
            SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
         
            BEFORE DIALOG
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               LET g_curr_diag = ui.DIALOG.getCurrent()
               #LET g_page = "first" 
               #還原為原本指定筆數
               IF g_current_row > 1 THEN
                  #當刪除最後一筆資料時可能產生錯誤, 進行額外判斷
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  LET g_current_idx = g_current_row
                  CALL DIALOG.setCurrentRow("s_browse",g_current_idx)
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL azzi020_fetch("")   
               END IF               
               
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
            ON ACTION statechange
               CALL azzi020_statechange()
               LET g_action_choice="statechange"
               EXIT DIALOG
         
            #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL azzi020_filter()
               EXIT DIALOG
 
 
 
            
            ON ACTION first
               CALL azzi020_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL azzi020_fetch("N")
               LET g_current_row = g_current_idx
         
            ON ACTION jump
               CALL azzi020_fetch("/")
               LET g_current_row = g_current_idx
         
            ON ACTION previous
               CALL azzi020_fetch("P")
               LET g_current_row = g_current_idx
         
            ON ACTION last 
               CALL azzi020_fetch("L")  
               LET g_current_row = g_current_idx
         
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
         
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            #快速搜尋
               
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL azzi020_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi020_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL azzi020_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
         #+ 此段落由子樣板a43產生
         ON ACTION ff_next
            LET g_action_choice="ff_next"
               
               #add-point:ON ACTION ff_next
               {<point name="menu.ff_next" />}
               #END add-point
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi020_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi020_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION ff_expand
            LET g_action_choice="ff_expand"
               
               #add-point:ON ACTION ff_expand
               {<point name="menu.ff_expand" />}
               #END add-point
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi020_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi020_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi020_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION send_mail
            LET g_action_choice="send_mail"
            IF cl_auth_chk_act("send_mail") THEN
               
               #add-point:ON ACTION send_mail
               {<point name="menu.send_mail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION ff_previous
            LET g_action_choice="ff_previous"
               
               #add-point:ON ACTION ff_previous
               {<point name="menu.ff_previous" />}
               #END add-point
 
 
            
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi020_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi020_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi020_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>