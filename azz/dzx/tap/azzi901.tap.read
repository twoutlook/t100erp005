<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="azzi901" std_prog="azzi901" erpver="1.0" module="AZZ" ver="3" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.gzde001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzde001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzde001  #顯示到畫面上

            NEXT FIELD gzde001                     #返回原欄位

]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_gzdf_d[l_ac].gzdf002
   CALL ap_ref_array2(g_ref_fields," SELECT gzdfl003 FROM gzdfl_t WHERE gzdfl001 = ? AND gzdfl002 = '"||g_lang||"'","") RETURNING g_rtn_fields
   LET g_gzdf_d[l_ac].gzdfl003 = g_rtn_fields[1]
   DISPLAY BY NAME g_gzdf_d[l_ac].gzdfl003]]>
  </point>
  <point name="function.azzi901_check_gzde001" order="1" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 檢核 gzde001
PRIVATE FUNCTION azzi901_check_gzde001()
    DEFINE l_stus       LIKE type_t.chr1
   DEFINE ls_temp      STRING
   DEFINE ls_end_code  STRING
   DEFINE ls_chk_num   STRING  
   DEFINE ls_chk_prog  STRING 
   DEFINE ls_sql       STRING
   DEFINE li_cnt       LIKE type_t.num5
   DEFINE li_pos       LIKE type_t.num5
   DEFINE ls_module    STRING 
   
   LET g_errno = NULL
   LET ls_temp = g_gzde_m.gzde001
   LET ls_temp = ls_temp.trim()
   LET g_gzde_m.gzde001 = ls_temp
   LET li_pos = ls_temp.getIndexOf("_",1)
   IF li_pos = 0 THEN 
       #程式名稱_NN：最右側三碼固定為 底線 + 兩碼數字流水號
       CALL cl_err("","azz-00001",0) #不符合命名規則
       RETURN FALSE 
   END IF
   #取程式名稱第一碼到 第一個underline 之前
   LET ls_temp = ls_temp.subString(1,li_pos-1)
   #azzi900_01
   #azzi900_ic_01 #行業別程式
   #aiti001_x00   #X:報表元件-Xtragrid類
   #cl_set        #lib 元件
   #s_azzi900     #sub 元件
   #wssp001_01/cwssp001_01/wssp100_ph/bwssp600_ph_01    #wss 
   #不符合命名規則 ex  wss_abcde

   CASE 
      WHEN ls_temp = "cl" OR ls_temp = "s" OR ls_temp = "bcl" OR ls_temp = "bs" 
           #cl / s / bcl /  bs   開頭者不管制 (表示為 library或 SUB元件)
           LET g_gzde_m.gzde003 = "B"  # B(元件-LIB/SUB) 

           IF NOT azzi901_chk_dgenv() THEN
              #客製開發環境下，不可以建置標準程式 (%1)
              CALL cl_err_msg("","azz-00176",g_gzde_m.gzde001,1)
              RETURN FALSE  
           END IF 
 
      WHEN ls_temp = "ccl" OR ls_temp = "cs" 
           #ccl / cs 者，檢查DGENV 是否等於c，若不等於c，顯示錯誤訊息『標準開發環境下，不可以建置客製程式 (%1)』      
           #當前三碼為 cwss 檢查DGENV 是否等於c，若不等於c，顯示錯誤訊息『標準開發環境下，不可以建置客製程式 (%1)』

           IF azzi901_chk_dgenv() THEN
              #標準開發環境下，不可以建置客製程式 (%1)
              CALL cl_err_msg("","azz-00180",g_gzde_m.gzde001,1)
              RETURN FALSE  
           END IF 
           
      #wss處理
      #WHEN ls_temp.subString(1,3) = "wss" OR ls_temp.subString(1,3) = "bws" #當前三碼為 wss 或 bws  開頭者不管制 (表示為 WSS元件) 
 
      OTHERWISE 
        # 先註解140616  
        ##當首碼為 c /e 時，檢查DGENV 是否等於c，若不等於c，顯示錯誤訊息『標準開發環境下，不可以建置客製程式 (%1)』   
        ##IF ls_temp.subString(1,1) = "c" OR ls_temp.subString(1,1) = "e" THEN 
        ##   IF FGL_GETENV("DGENV") <> "c" THEN
        ##      CALL cl_err_msg("","azz-00180",g_gzde_m.gzde001,1)
        ##      RETURN FALSE 
        ##   END IF 
        ##END IF
        #
        
        ##(表示為子程式)  #要符合 "mmmkxxx_NN" 底線流水號 
        #去除最後一個 underline 後，取出主要程式名稱部分， 
        #A.檢查必須在gzza001存在，若不存在，顯示錯誤訊息『子程式(%1)的依附主程式%2目前並未註冊，請先進行主程式開發』

        #例如：axmt410_ic_01，去除最後一個 underline 則為 axmt410_ic ，若檢查不存在，錯誤訊息呈現如下
        #子程式(axmt410_ic_01) 的依附主程式axmt410_ic 目前並未註冊，請先進行主程式開發
        LET li_pos = s_azzp191_find_underline_pos(g_gzde_m.gzde001)
        IF li_pos = 0 THEN 
           CALL cl_err('',"azz-00066",1) #程式名稱_NN：最右側三碼固定為 底線 + 兩碼數字流水號
           RETURN FALSE 
        END IF

        #取程式名稱最後一個 underline 到最後
        LET ls_end_code = g_gzde_m.gzde001[li_pos+1,LENGTH(g_gzde_m.gzde001)]
        LET ls_temp = g_gzde_m.gzde001[1,li_pos - 1]
        ##(表示為子程式)  #要符合 "mmmkxxx_NN" 底線流水號 
        IF ls_temp.getIndexOf("_",1) THEN 
           LET ls_chk_num = ls_temp.subString(ls_temp.getIndexOf("_",1)-3,ls_temp.getIndexOf("_",1)-1)
           
           IF NOT ls_chk_num MATCHES '[01-9][01-9][01-9]' THEN 
              CALL cl_err("","azz-00001",0)    
              RETURN FALSE   
           END IF
           LET ls_chk_num = ls_temp.subString(ls_temp.getIndexOf("_",1)+1,ls_temp.getLength())
           #檢查行業別  
           IF s_azzi900_chk_industry(ls_chk_num) THEN 
               CALL cl_err("","azz-00001",0) 
               RETURN FALSE
            END IF
        ELSE 
           #檢查流水號
           LET ls_chk_num = ls_temp.subString(ls_temp.getLength()-2,ls_temp.getLength())
           IF NOT ls_chk_num MATCHES '[01-9][01-9][01-9]' THEN 
              CALL cl_err("","azz-00001",0)    
              RETURN FALSE   
           END IF
        END IF 
        #檢查程式類別
        IF cl_chk_progtype(UPSHIFT(ls_temp.subString(4,4))) THEN 
           CALL cl_err("","azz-00001",0)    
           RETURN FALSE 
        END IF 
        
        #要符合 "NN" 底線流水號  
        #若為2碼則必須符合兩碼都是數字，若不符合，顯示訊息為『子程式 (%1) 命名未符合最後兩碼需使用數字流水號的規則』
        #若為3碼則必須符合第一碼是x或g，後兩碼是數字，若不符合，顯示訊息為『報表元件(%1)命名未符合 _xNN 或 _gNN 的命名規則』
        CASE 
           #尾碼2碼
           WHEN ls_end_code.getLength() = 2
                IF NOT ls_end_code MATCHES '[01-9][01-9]' THEN 
                   CALL cl_err_msg("","azz-00183",g_gzde_m.gzde001,1)
                   RETURN FALSE   
                END IF
           #尾碼3碼     
           WHEN ls_end_code.getLength() = 3
                IF ls_end_code.subString(1,1) = "x" OR ls_end_code.subString(1,1) = "g" THEN
                   IF NOT ls_end_code MATCHES '[xg][01-9][01-9]' THEN
                      CALL cl_err_msg("","azz-00184",g_gzde_m.gzde001,1) #報表元件(%1)命名未符合 _xNN 或 _gNN 的命名規則
                      RETURN FALSE
                   END IF

                ELSE 
                    CALL cl_err_msg("","azz-00184",g_gzde_m.gzde001,1)   #報表元件(%1)命名未符合 _xNN 或 _gNN 的命名規則
                    RETURN FALSE
                END IF 
          OTHERWISE 
             #其他
             CALL cl_err("","azz-00001",0)
             RETURN FALSE
        END CASE 

        #若 DGENV = s ，則在新增時編號首碼只能輸入 a / b，否則顯示錯誤訊息『標準開發環境下，不可以建置客製程式 (%1)』
        IF azzi901_chk_dgenv() THEN 
           IF ls_temp.subString(1,1) = "a" OR ls_temp.subString(1,1) = "b" OR 
              ls_temp.subString(1,3) = "wss" THEN

           ELSE  
              CALL cl_err_msg("","azz-00180",g_gzde_m.gzde001,1) #標準開發環境下，不可以建置客製程式 (%1)
           RETURN FALSE
           END IF 
        ELSE
           #若 DGENV = c ，在新增時檢查首碼只能輸入 c/d/e ，修改時若本欄位沒有異動則不檢查
           IF ls_temp.subString(1,1) = "c" OR ls_temp.subString(1,1) = "d" OR ls_temp.subString(1,1) = "e" THEN 
           ELSE 
              CALL cl_err_msg("","azz-00176",g_gzde_m.gzde001,1) #客製開發環境下，不可以建置標準程式 (%1)
           RETURN FALSE
           END IF    
        END IF

        
        LET ls_temp = g_gzde_m.gzde001[1,li_pos - 1]

        #判斷 整合服務管理模組   
        IF ls_temp.subString(1,3) = "wss" OR ls_temp.subString(1,4) = "cwss" THEN 
           #確認gzza001 是否存在 如果存在取出module 組出實體檔案路徑判斷實體檔案是否存在
           LET ls_module = s_azzi900_chk_azzi700_prog(ls_temp)  
        ELSE 
           #確認gzza001 是否存在 如果存在取出module 組出實體檔案路徑判斷實體檔案是否存在
           LET ls_module = s_azzi900_chk_prog(ls_temp) 
        END IF
        
        IF cl_null(ls_module) THEN 
           CALL cl_err_msg("","azz-00181",g_gzde_m.gzde001||'|'||ls_temp,1) #子程序(%1)的依附主程序%2目前并未注册，请先进行主程序开发
           RETURN FALSE 
        END IF 
          
        #B.檢查必須實體檔案存在，若不存在，顯示錯誤訊息『子程式(%1)的依附主程式%2目前實體檔案不存在，請先進行主程式開發』 
        LET ls_temp = os.Path.join(os.Path.join(FGL_GETENV(UPSHIFT(ls_module)),"4gl"),ls_temp||".4gl")

        IF NOT os.Path.exists(ls_temp) THEN 
           CALL cl_err_msg("","azz-00182",g_gzde_m.gzde001||'|'||ls_temp,1)
           RETURN FALSE 
        END IF
   END CASE 

   #歸屬模組 gzde002
   #取前三碼
   LET ls_temp = g_gzde_m.gzde001[1,3] 
   #符合下列情況優先調整：cl_ / bcl 改為 LIB  且 ccl 改為 CLIB
   #s_ / bs_ 改為 SUB 且 cs_ 改為 CSUB
   #wss / bws 改為 WSS 且 cws 改為 CWSS
   #若為A/C/E 開頭，取前 3 碼存檔
   #若為 B/D 開頭，則查詢前三碼是否存在 gzzj001，若不存在，B改為 A 開頭，D改為C開頭存放


    #規格類別 gzde003
   #A.取前三碼等於 cl_ / bcl /ccl / s_ / bs_  / cs_ 設定為 B
   #B.取前三碼等於 wss 的設定為 W
   #C.取倒數第 4 – 3 碼，為 _x 設定為 X
   #D.取倒數第 4 – 3 碼，為 _g 設定為 G
   #E.剩餘的，指定為 S 

   CASE 
      WHEN ls_temp = "cl_" OR ls_temp = "bcl" OR ls_temp = "ccl" 
           LET g_gzde_m.gzde003 = "B"
           IF ls_temp = "ccl" THEN 
              LET g_gzde_m.gzde002 = "CLIB"
           ELSE 
              LET g_gzde_m.gzde002 = "LIB"   
           END IF 
      WHEN ls_temp.subString(1,2) = "s_" OR ls_temp = "bs_"  OR ls_temp = "cs_"
           LET g_gzde_m.gzde003 = "B"
           IF ls_temp = "cs_" THEN 
              LET g_gzde_m.gzde002 = "CSUB"
           ELSE 
              LET g_gzde_m.gzde002 = "SUB"   
           END IF 
      WHEN ls_temp = "wss" OR ls_temp = "bws" 
           LET g_gzde_m.gzde005 = "W"
           LET g_gzde_m.gzde003 = "W"
           IF ls_temp = "wss" THEN 
              LET g_gzde_m.gzde002 = "WSS"
              LET g_gzde_m.gzde006 = "a"
           ELSE 
              LET g_gzde_m.gzde002 = "CWSS"   
           END IF 

      OTHERWISE 
         LET g_gzde_m.gzde003 = "S"
         LET g_gzde_m.gzde005 = UPSHIFT(g_gzde_m.gzde001[4,4])  #程式類別
         IF ls_temp.subString(1,1) = "a" OR ls_temp.subString(1,1) = "c" THEN 
            LET g_gzde_m.gzde002 = UPSHIFT(ls_temp) 
         END IF
         IF ls_temp.subString(1,1) = "b" OR ls_temp.subString(1,1) = "d" THEN
            LET g_gzde_m.gzde002 = UPSHIFT(ls_temp)
            IF NOT s_azzi900_chk_gzzj(ls_temp) THEN 

               CASE 
                  WHEN ls_temp.subString(1,1) = "b"
                       LET g_gzde_m.gzde002 = "A",UPSHIFT(ls_temp.subString(2,3))
                  WHEN ls_temp.subString(1,1) = "d" 
                       LET g_gzde_m.gzde002 = "C",UPSHIFT(ls_temp.subString(2,3))
               END CASE 
            END IF  
             
         END IF      
   END CASE 

   CASE 
      WHEN ls_end_code.subString(1,1) = "x" 
           LET g_gzde_m.gzde003 = "X"
           LET g_gzde_m.gzde005 = "X"  

      WHEN ls_end_code.subString(1,1) = "g"     
           LET g_gzde_m.gzde003 = "G"
           LET g_gzde_m.gzde005 = "G"  
   END CASE 
   #確認dgenv 標準或客製
   IF azzi901_chk_dgenv() THEN 
      LET g_gzde_m.gzde008 = 'N' 
   ELSE 
      LET g_gzde_m.gzde008 = 'Y' 
   END IF 
   RETURN TRUE 
END FUNCTION]]>
  </point>
  <point name="function.azzi901_check_gzdf002" order="2" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 檢核gzdf002  規格編號 + _sXX  (2碼流水號)
PRIVATE FUNCTION azzi901_check_gzdf002()
   DEFINE ls_temp         STRING
   DEFINE ls_chk_str      STRING 
   DEFINE ls_chk_spec_no  STRING        #規格編號
   LET ls_temp = g_gzdf_d[l_ac].gzdf002
   LET ls_temp = ls_temp.trim()

   LET ls_chk_str = ls_temp.subString(ls_temp.getLength()-3,ls_temp.getLength())
   LET ls_chk_spec_no = ls_temp.subString(1,ls_temp.getLength()-4)
   LET g_errno = NULL
   
   # _sXX  (2碼流水號)
   IF NOT ls_chk_str MATCHES '[_][a-z][01-9][01-9]' THEN 
      LET g_errno = "azz-00068" 
      RETURN  
   END IF
 
   #規格編號   
   LET ls_chk_spec_no = ls_chk_spec_no.trim()
   IF ls_chk_spec_no != g_gzde_m.gzde001 THEN 
      LET g_errno = "azz-00068" 
      RETURN  
   END IF 
   
END FUNCTION]]>
  </point>
  <point name="function.azzi901_chk_gzde008" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢核客製模組
# Memo...........:
# Usage..........: CALL azzi901_chk_gzde008()
#                  
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi901_chk_gzde008()


   IF FGL_GETENV("DGENV") = 's' THEN 
      LET g_gzde_m.gzde008 = 'N' 
   END IF 
   
   IF FGL_GETENV("DGENV") = 'c' THEN
      LET g_gzde_m.gzde008 = 'Y' 
   END IF 

END FUNCTION]]>
  </point>
  <point name="function.azzi901_chk_dgenv" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 確認標準/客製
# Memo...........:
# Usage..........: CALL azzi901_chk_dgenv()
#                  RETURNING TRUE/FALSE
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi901_chk_dgenv()
   DEFINE li_chk LIKE type_t.num5

   IF FGL_GETENV("DGENV") = 's' THEN
      LET li_chk = TRUE 
   ELSE 
      LET li_chk = FALSE 
   END IF 
   RETURN li_chk
END FUNCTION]]>
  </point>
  <point name="construct.c.gzdecrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzdecrtdp  #顯示到畫面上

            NEXT FIELD gzdecrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzdecrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzdecrtid  #顯示到畫面上

            NEXT FIELD gzdecrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzdemodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzdemodid  #顯示到畫面上

            NEXT FIELD gzdemodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzdeowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzdeowndp  #顯示到畫面上

            NEXT FIELD gzdeowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzdeownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzdeownid  #顯示到畫面上

            NEXT FIELD gzdeownid                     #返回原欄位

]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #delete 模組link 的程式
      DELETE FROM gzzn_t
         WHERE  gzzn001 = g_gzde_m.gzde002 
           AND  gzzn002 = g_gzde_m.gzde001
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzdf_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
    
     #刪除子畫面規格編 多語言
      FOR li_cnt = 1 TO g_gzdf_d.getLength()
          DELETE  from gzdfl_t
             WHERE gzdfl001 =  g_gzdf_d[li_cnt].gzdf002
          
          IF SQLCA.sqlcode THEN
             CALL cl_err("gzdfl_t",SQLCA.sqlcode,0) 
             CALL s_transaction_end('N','0')
             RETURN
          END IF    
      END FOR 
      
      RUN " r.l " || DOWNSHIFT(g_gzde_m.gzde002) WITHOUT WAITING          ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE li_cnt      LIKE type_t.num5]]>
  </point>
  <point name="delete.lang.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #刪除子畫面規格編 多語言
      FOR li_cnt = 1 TO g_gzdf_d.getLength()
          DELETE  from gzdfl_t
             WHERE gzdfl001 =  g_gzdf_d[li_cnt].gzdf002
          
          IF SQLCA.sqlcode THEN
             CALL cl_err("gzdfl_t",SQLCA.sqlcode,0) 
             CALL s_transaction_end('N','0')
             RETURN
          END IF    
      END FOR ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_gzde003','91')
   IF FGL_GETENV("DGENV") = "s" THEN
      CALL cl_set_combo_module_reg("gzde002",1)
   ELSE
      CALL cl_set_combo_module("gzde002",1)
   END IF   ]]>
  </point>
  <point name="input.a.gzde001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzde_m.gzde001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzde_m.gzde001 != g_gzde001_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzde_t WHERE "||"gzde001 = '"||g_gzde_m.gzde001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
           IF NOT azzi901_check_gzde001() THEN 
              NEXT FIELD gzde001
           END IF 
]]>
  </point>
  <point name="input.a.gzde002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT azzi901_check_gzde001() THEN 
                  NEXT FIELD gzde002
               END IF ]]>
  </point>
  <point name="input.a.gzde003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT azzi901_check_gzde001() THEN 
               NEXT FIELD gzde003    
            END IF ]]>
  </point>
  <point name="input.a.gzde004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL azzi901_check_gzde001()
              
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD gzde003
               END IF]]>
  </point>
  <point name="input.a.gzde005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT azzi901_check_gzde001() THEN 
                  
            END IF 
              
]]>
  </point>
  <point name="input.a.gzde008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#             IF  NOT cl_null(g_gzde_m.gzde008) THEN 
#               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzde_m.gzde008 != g_gzde_m_t.gzde008 ))) THEN 
#
#                  IF NOT azzi901_chk_gzde008() THEN
#                     NEXT FIELD gzde008
#                  END IF
#               END IF
#            END IF]]>
  </point>
  <point name="input.a.gzdecrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdecrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdecrtdp_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdecrtdp_desc
]]>
  </point>
  <point name="input.a.gzdecrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdecrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdecrtid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdecrtid_desc
]]>
  </point>
  <point name="input.a.gzdel003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_gzde_m.gzdel003) THEN
               IF NOT cl_chk_tworcn(g_lang,g_gzde_m.gzdel003,20) THEN
                  NEXT FIELD gzdel003
               END IF
            END IF]]>
  </point>
  <point name="input.a.gzdemodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdemodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdemodid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdemodid_desc
]]>
  </point>
  <point name="input.a.gzdeowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdeowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdeowndp_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdeowndp_desc
]]>
  </point>
  <point name="input.a.gzdeownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdeownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdeownid_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdeownid_desc
]]>
  </point>
  <point name="input.a.page1.gzdf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzde_m.gzde001) AND NOT cl_null(g_gzdf_d[l_ac].gzdf002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzde_m.gzde001 != g_gzde001_t OR g_gzdf_d[l_ac].gzdf002 != g_gzdf_d_t.gzdf002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzdf_t WHERE "||"gzdf001 = '"||g_gzde_m.gzde001 ||"' AND "|| "gzdf002 = '"||g_gzdf_d[l_ac].gzdf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL s_azzi900_check_gzdf002(g_gzde_m.gzde001,g_gzdf_d[l_ac].gzdf002)
              
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD gzdf002
               END IF 

            END IF
            ]]>
  </point>
  <point name="input.a.page1.gzdfl003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_gzdf_d[l_ac].gzdfl003) THEN
               IF NOT cl_chk_tworcn(g_lang,g_gzdf_d[l_ac].gzdfl003,20) THEN
                  NEXT FIELD gzdfl003
               END IF
            END IF]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[             IF  NOT cl_null(g_gzdf_d[l_ac].gzdf002) THEN
                  CALL n_gzdfl(g_gzdf_d[l_ac].gzdf002) 
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzdf_d[l_ac].gzdf002
                  CALL ap_ref_array2(g_ref_fields," SELECT gzdfl003 FROM gzdfl_t WHERE gzdfl001 = ? AND gzdfl002 = '"||g_lang||"'","") RETURNING g_rtn_fields
                  LET g_gzdf_d[l_ac].gzdfl003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_gzdf_d[l_ac].gzdfl003
               END IF    ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  #新增模組link的程式
                  SELECT COUNT(*) INTO l_count FROM gzzn_t
                    WHERE  gzzn001 = g_gzde_m.gzde002
                    AND gzzn002 = g_gzde_m.gzde001

                  IF l_count = 0 THEN 
                     INSERT INTO gzzn_t(gzzn001,gzzn002,gzzn003,gzzn004)
                        VALUES(g_gzde_m.gzde002,g_gzde_m.gzde001,'Y','N')

                     RUN " r.l " || DOWNSHIFT(g_gzde_m.gzde002) WITHOUT WAITING   
                  END IF]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF  NOT cl_null(g_gzde_m.gzde001) THEN
                   CALL n_gzdel(g_gzde_m.gzde001)
                   INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_gzde_m.gzde001
               CALL ap_ref_array2(g_ref_fields,"SELECT gzdel003,gzdel004 FROM gzdel_t WHERE gzdel001=? AND gzdel002='"||g_lang||"'","") RETURNING g_rtn_fields
                   LET g_gzde_m.gzdel003 = g_rtn_fields[1]
                   LET g_gzde_m.gzdel004 = g_rtn_fields[2]
                   DISPLAY BY NAME g_gzde_m.gzdel003
                   DISPLAY BY NAME g_gzde_m.gzdel004
                END IF]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzde_m.gzde001
   CALL ap_ref_array2(g_ref_fields," SELECT gzdel003,gzdel004 FROM gzdel_t WHERE gzdel001 = ? AND gzdel002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzde_m.gzdel003 = g_rtn_fields[1] 
   LET g_gzde_m.gzdel004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_gzde_m.gzdel003,g_gzde_m.gzdel004
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdeownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdeownid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdeownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdeowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdeowndp_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdeowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdecrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdecrtid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdecrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdecrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdecrtdp_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdecrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzde_m.gzdemodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzde_m.gzdemodid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzde_m.gzdemodid_desc
]]>
  </point>
  <section id="azzi901.b_fill" ver="7" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi901_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_gzdf_d.clear()    #g_gzdf_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF azzi901_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE gzdf002,gzdf003  FROM gzdf_t",   
                  " INNER JOIN gzde_t ON gzde001 = gzdf001 ",
 
                  #" LEFT JOIN gzdfl_t ON gzdf002 = gzdfl001 AND gzdfl002 = '",g_lang,"'",
                  
                  " LEFT JOIN gzdfl_t ON gzdf002 = gzdfl001 AND gzdfl002 = '",g_lang,"'",
                  
                  " WHERE gzdf001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY gzdf_t.gzdf002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE azzi901_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR azzi901_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_gzde_m.gzde001
                                               
      FOREACH b_fill_cs INTO g_gzdf_d[l_ac].gzdf002,g_gzdf_d[l_ac].gzdf003
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_gzdf_d.deleteElement(g_gzdf_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE azzi901_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION azzi901_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL azzi901_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.browser_fill" ver="7" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi901_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzde_m.* TO NULL
   CALL g_gzdf_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "gzde001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE gzde001 ",
                      " FROM gzde_t ",
                      " ",
                      " LEFT JOIN gzdf_t ON gzde001 = gzdf001 ",
 
 
                      " LEFT JOIN gzdel_t ON gzde001 = gzdel001 AND gzdel002 = '",g_lang,"' ", 
                      " LEFT JOIN gzdfl_t ON gzdf002 = gzdfl001 AND gzdfl002 = '",g_lang,"' ", 
                      " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzde_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE gzde001 ",
                      " FROM gzde_t ", 
                      "  ",
                      "  LEFT JOIN gzdel_t ON gzde001 = gzdel001 AND gzdel002 = '",g_lang,"' ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("gzde_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照gzde001,'',gzde002,gzde003 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT gzdestus,gzde001,'',gzde002,gzde003,t1.gzdel003 ",
               " FROM gzde_t ",
               "  ",
               "  LEFT JOIN gzdf_t ON gzde001 = gzdf001 ",
 
 
               "  LEFT JOIN gzdel_t ON gzde001 = gzdel001 AND gzdel002 = '",g_lang,"' ",
               "  LEFT JOIN gzdfl_t ON gzdf002 = gzdfl001 AND gzdfl002 = '",g_lang,"' ",
                              " LEFT JOIN gzdel_t t1 ON t1.gzdel001=gzde001 AND t1.gzdel002='"||g_lang||"' ",
 
               " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("gzde_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzde001,g_browser[g_cnt].b_gzde001_desc, 
       g_browser[g_cnt].b_gzde002,g_browser[g_cnt].b_gzde003,g_browser[g_cnt].b_gzde001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION azzi901_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY gzde001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL azzi901_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.construct" ver="11" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi901_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzde_m.* TO NULL
   CALL g_gzdf_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzde001,gzdel003,gzdel004,gzde002,gzde008,gzde005,gzde003,gzde006,gzdestus, 
          gzdeownid,gzdeowndp,gzdecrtid,gzdecrtdp,gzdecrtdt,gzdemodid,gzdemoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<gzdecrtdt>>----
         AFTER FIELD gzdecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzdemoddt>>----
         AFTER FIELD gzdemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzdecnfdt>>----
         
         #----<<gzdepstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.gzde001
         ON ACTION controlp INFIELD gzde001
            #add-point:ON ACTION controlp INFIELD gzde001
            {<point name="construct.c.gzde001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde001
            #add-point:BEFORE FIELD gzde001
            {<point name="construct.b.gzde001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde001
            
            #add-point:AFTER FIELD gzde001
            {<point name="construct.a.gzde001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdel003
            #add-point:BEFORE FIELD gzdel003
            {<point name="construct.b.gzdel003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdel003
            
            #add-point:AFTER FIELD gzdel003
            {<point name="construct.a.gzdel003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzdel003
         ON ACTION controlp INFIELD gzdel003
            #add-point:ON ACTION controlp INFIELD gzdel003
            {<point name="construct.c.gzdel003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdel004
            #add-point:BEFORE FIELD gzdel004
            {<point name="construct.b.gzdel004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdel004
            
            #add-point:AFTER FIELD gzdel004
            {<point name="construct.a.gzdel004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzdel004
         ON ACTION controlp INFIELD gzdel004
            #add-point:ON ACTION controlp INFIELD gzdel004
            {<point name="construct.c.gzdel004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde002
            #add-point:BEFORE FIELD gzde002
            {<point name="construct.b.gzde002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde002
            
            #add-point:AFTER FIELD gzde002
            {<point name="construct.a.gzde002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzde002
         ON ACTION controlp INFIELD gzde002
            #add-point:ON ACTION controlp INFIELD gzde002
            {<point name="construct.c.gzde002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde008
            #add-point:BEFORE FIELD gzde008
            {<point name="construct.b.gzde008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde008
            
            #add-point:AFTER FIELD gzde008
            {<point name="construct.a.gzde008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzde008
         ON ACTION controlp INFIELD gzde008
            #add-point:ON ACTION controlp INFIELD gzde008
            {<point name="construct.c.gzde008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde005
            #add-point:BEFORE FIELD gzde005
            {<point name="construct.b.gzde005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde005
            
            #add-point:AFTER FIELD gzde005
            {<point name="construct.a.gzde005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzde005
         ON ACTION controlp INFIELD gzde005
            #add-point:ON ACTION controlp INFIELD gzde005
            {<point name="construct.c.gzde005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde003
            #add-point:BEFORE FIELD gzde003
            {<point name="construct.b.gzde003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde003
            
            #add-point:AFTER FIELD gzde003
            {<point name="construct.a.gzde003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzde003
         ON ACTION controlp INFIELD gzde003
            #add-point:ON ACTION controlp INFIELD gzde003
            {<point name="construct.c.gzde003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde006
            #add-point:BEFORE FIELD gzde006
            {<point name="construct.b.gzde006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde006
            
            #add-point:AFTER FIELD gzde006
            {<point name="construct.a.gzde006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzde006
         ON ACTION controlp INFIELD gzde006
            #add-point:ON ACTION controlp INFIELD gzde006
            {<point name="construct.c.gzde006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdestus
            #add-point:BEFORE FIELD gzdestus
            {<point name="construct.b.gzdestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdestus
            
            #add-point:AFTER FIELD gzdestus
            {<point name="construct.a.gzdestus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzdestus
         ON ACTION controlp INFIELD gzdestus
            #add-point:ON ACTION controlp INFIELD gzdestus
            {<point name="construct.c.gzdestus" />}
            #END add-point
 
         #Ctrlp:construct.c.gzdeownid
         ON ACTION controlp INFIELD gzdeownid
            #add-point:ON ACTION controlp INFIELD gzdeownid
            {<point name="construct.c.gzdeownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdeownid
            #add-point:BEFORE FIELD gzdeownid
            {<point name="construct.b.gzdeownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdeownid
            
            #add-point:AFTER FIELD gzdeownid
            {<point name="construct.a.gzdeownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzdeowndp
         ON ACTION controlp INFIELD gzdeowndp
            #add-point:ON ACTION controlp INFIELD gzdeowndp
            {<point name="construct.c.gzdeowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdeowndp
            #add-point:BEFORE FIELD gzdeowndp
            {<point name="construct.b.gzdeowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdeowndp
            
            #add-point:AFTER FIELD gzdeowndp
            {<point name="construct.a.gzdeowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzdecrtid
         ON ACTION controlp INFIELD gzdecrtid
            #add-point:ON ACTION controlp INFIELD gzdecrtid
            {<point name="construct.c.gzdecrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdecrtid
            #add-point:BEFORE FIELD gzdecrtid
            {<point name="construct.b.gzdecrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdecrtid
            
            #add-point:AFTER FIELD gzdecrtid
            {<point name="construct.a.gzdecrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzdecrtdp
         ON ACTION controlp INFIELD gzdecrtdp
            #add-point:ON ACTION controlp INFIELD gzdecrtdp
            {<point name="construct.c.gzdecrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdecrtdp
            #add-point:BEFORE FIELD gzdecrtdp
            {<point name="construct.b.gzdecrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdecrtdp
            
            #add-point:AFTER FIELD gzdecrtdp
            {<point name="construct.a.gzdecrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdecrtdt
            #add-point:BEFORE FIELD gzdecrtdt
            {<point name="construct.b.gzdecrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.gzdemodid
         ON ACTION controlp INFIELD gzdemodid
            #add-point:ON ACTION controlp INFIELD gzdemodid
            {<point name="construct.c.gzdemodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdemodid
            #add-point:BEFORE FIELD gzdemodid
            {<point name="construct.b.gzdemodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdemodid
            
            #add-point:AFTER FIELD gzdemodid
            {<point name="construct.a.gzdemodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdemoddt
            #add-point:BEFORE FIELD gzdemoddt
            {<point name="construct.b.gzdemoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON gzdf002,gzdfl003,gzdf003
           FROM s_detail1[1].gzdf002,s_detail1[1].gzdfl003,s_detail1[1].gzdf003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD gzdf002
            #add-point:BEFORE FIELD gzdf002
            {<point name="construct.b.page1.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf002
            
            #add-point:AFTER FIELD gzdf002
            {<point name="construct.a.page1.gzdf002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzdf002
         ON ACTION controlp INFIELD gzdf002
            #add-point:ON ACTION controlp INFIELD gzdf002
            {<point name="construct.c.page1.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdfl003
            #add-point:BEFORE FIELD gzdfl003
            {<point name="construct.b.page1.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdfl003
            
            #add-point:AFTER FIELD gzdfl003
            {<point name="construct.a.page1.gzdfl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzdfl003
         ON ACTION controlp INFIELD gzdfl003
            #add-point:ON ACTION controlp INFIELD gzdfl003
            {<point name="construct.c.page1.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdf003
            #add-point:BEFORE FIELD gzdf003
            {<point name="construct.b.page1.gzdf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf003
            
            #add-point:AFTER FIELD gzdf003
            {<point name="construct.a.page1.gzdf003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzdf003
         ON ACTION controlp INFIELD gzdf003
            #add-point:ON ACTION controlp INFIELD gzdf003
            {<point name="construct.c.page1.gzdf003" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.default_search" ver="6" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi901_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzde001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.delete" ver="14" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi901_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_gzde_m.gzde001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_master_multi_table_t.gzdel001 = g_gzde_m.gzde001
LET g_master_multi_table_t.gzdel003 = g_gzde_m.gzdel003
LET g_master_multi_table_t.gzdel004 = g_gzde_m.gzdel004
 
 
   CALL azzi901_show()
   
   CALL s_transaction_begin()
 
   OPEN azzi901_cl USING g_gzde_m.gzde001
   IF STATUS THEN
      CALL cl_err("OPEN azzi901_cl:", STATUS, 1)
      CLOSE azzi901_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi901_master_referesh USING g_gzde_m.gzde001 INTO g_gzde_m.gzde001,g_gzde_m.gzde002,g_gzde_m.gzde008, 
       g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus,g_gzde_m.gzde007,g_gzde_m.gzdeownid, 
       g_gzde_m.gzdeowndp,g_gzde_m.gzdecrtid,g_gzde_m.gzdecrtdp,g_gzde_m.gzdecrtdt,g_gzde_m.gzdemodid, 
       g_gzde_m.gzdemoddt,g_gzde_m.gzdeownid_desc,g_gzde_m.gzdeowndp_desc,g_gzde_m.gzdecrtid_desc,g_gzde_m.gzdecrtdp_desc, 
       g_gzde_m.gzdemodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzde_m.gzde001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi901_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_gzde001_t = g_gzde_m.gzde001
 
 
      DELETE FROM gzde_t
       WHERE  gzde001 = g_gzde_m.gzde001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_gzde_m.gzde001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzdf_t
       WHERE  gzdf001 = g_gzde_m.gzde001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzdf_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_gzdf_d.clear() 
 
     
      #CALL azzi901_ui_browser_refresh()  
      CALL azzi901_ui_headershow()  
      CALL azzi901_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL azzi901_browser_fill("")
         CALL azzi901_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL azzi901_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzdel001
   LET l_field_keys[01] = 'gzdel001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'gzdel002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzdel_t')
 
      
      #單身多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gzdfl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gzdfl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzdfl_t')
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE azzi901_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzde_m.gzde001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="azzi901.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi901_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM gzdf_t
       WHERE 
         gzdf001 = ps_keys_bak[1] AND gzdf002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.description" ver="55" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000278
#+ 
#+ Filename...: azzi901
#+ Description: 子程式及元件基本資料設定作業
#+ Creator....: 00845(2013/08/14)
#+ Modifier...: 01856(2014/05/19)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="azzi901.detail_reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION azzi901_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzdf_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi901_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi901_detail AS ",
                "SELECT * FROM gzdf_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi901_detail SELECT * FROM gzdf_t 
                                         WHERE  gzdf001 = g_gzde001_t
 
   
   #將key修正為調整後   
   UPDATE azzi901_detail 
      #更新key欄位
      SET gzdf001 = g_gzde_m.gzde001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO gzdf_t SELECT * FROM azzi901_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi901_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #此段落由子樣板a38產生
   DROP TABLE azzi901_detail_lang
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi901_detail_lang AS ",
                "SELECT * FROM gzdfl_t "
   PREPARE repro_gzdfl_t FROM ls_sql
   EXECUTE repro_gzdfl_t
   FREE repro_gzdfl_t
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi901_detail_lang SELECT * FROM gzdfl_t 
                                             WHERE  gzdfl001 = g_gzde001_t
 
   
   #將key修正為調整後   
   UPDATE azzi901_detail_lang 
      #更新key欄位
      SET gzdfl001 = g_gzde_m.gzde001
 
  
   #將資料塞回原table   
   INSERT INTO gzdfl_t SELECT * FROM azzi901_detail_lang
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi901_detail_lang
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzde001_t = g_gzde_m.gzde001
 
   
   DROP TABLE azzi901_detail
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION azzi901_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.fetch" ver="9" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi901_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzde_m.gzde001 = g_browser[g_current_idx].b_gzde001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi901_master_referesh USING g_gzde_m.gzde001 INTO g_gzde_m.gzde001,g_gzde_m.gzde002,g_gzde_m.gzde008, 
       g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus,g_gzde_m.gzde007,g_gzde_m.gzdeownid, 
       g_gzde_m.gzdeowndp,g_gzde_m.gzdecrtid,g_gzde_m.gzdecrtdp,g_gzde_m.gzdecrtdt,g_gzde_m.gzdemodid, 
       g_gzde_m.gzdemoddt,g_gzde_m.gzdeownid_desc,g_gzde_m.gzdeowndp_desc,g_gzde_m.gzdecrtid_desc,g_gzde_m.gzdecrtdp_desc, 
       g_gzde_m.gzdemodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzde_t",SQLCA.sqlcode,1)
      INITIALIZE g_gzde_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_gzde_m_t.* = g_gzde_m.*
   LET g_gzde_m_o.* = g_gzde_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL azzi901_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION azzi901_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.filter" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION azzi901_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gzde001,gzde002,gzde003
                          FROM s_browse[1].b_gzde001,s_browse[1].b_gzde002,s_browse[1].b_gzde003
 
         BEFORE CONSTRUCT
               DISPLAY azzi901_filter_parser('gzde001') TO s_browse[1].b_gzde001
            DISPLAY azzi901_filter_parser('gzde002') TO s_browse[1].b_gzde002
            DISPLAY azzi901_filter_parser('gzde003') TO s_browse[1].b_gzde003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL azzi901_filter_show('gzde001')
   CALL azzi901_filter_show('gzde002')
   CALL azzi901_filter_show('gzde003')
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi901_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION azzi901_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = azzi901_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.global" ver="10" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzde_m        RECORD
       gzde001 LIKE gzde_t.gzde001, 
   gzdel003 LIKE gzdel_t.gzdel003, 
   gzdel004 LIKE gzdel_t.gzdel004, 
   gzde002 LIKE gzde_t.gzde002, 
   gzde008 LIKE gzde_t.gzde008, 
   gzde005 LIKE gzde_t.gzde005, 
   gzde003 LIKE gzde_t.gzde003, 
   gzde006 LIKE gzde_t.gzde006, 
   gzdestus LIKE gzde_t.gzdestus, 
   gzde007 LIKE gzde_t.gzde007, 
   gzdeownid LIKE gzde_t.gzdeownid, 
   gzdeownid_desc LIKE type_t.chr80, 
   gzdeowndp LIKE gzde_t.gzdeowndp, 
   gzdeowndp_desc LIKE type_t.chr80, 
   gzdecrtid LIKE gzde_t.gzdecrtid, 
   gzdecrtid_desc LIKE type_t.chr80, 
   gzdecrtdp LIKE gzde_t.gzdecrtdp, 
   gzdecrtdp_desc LIKE type_t.chr80, 
   gzdecrtdt DATETIME YEAR TO SECOND, 
   gzdemodid LIKE gzde_t.gzdemodid, 
   gzdemodid_desc LIKE type_t.chr80, 
   gzdemoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzdf_d        RECORD
       gzdf002 LIKE gzdf_t.gzdf002, 
   gzdfl003 LIKE gzdfl_t.gzdfl003, 
   gzdf003 LIKE gzdf_t.gzdf003
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_gzde_m          type_g_gzde_m
DEFINE g_gzde_m_t        type_g_gzde_m
DEFINE g_gzde_m_o        type_g_gzde_m
 
   DEFINE g_gzde001_t LIKE gzde_t.gzde001
 
 
DEFINE g_gzdf_d          DYNAMIC ARRAY OF type_g_gzdf_d
DEFINE g_gzdf_d_t        type_g_gzdf_d
DEFINE g_gzdf_d_o        type_g_gzdf_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzde001 LIKE gzde_t.gzde001,
   b_gzde001_desc LIKE type_t.chr80,
      b_gzde002 LIKE gzde_t.gzde002,
      b_gzde003 LIKE gzde_t.gzde003
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzde001 LIKE gzde_t.gzde001,
   b_gzde001_desc LIKE type_t.chr80,
      b_gzde002 LIKE gzde_t.gzde002,
      b_gzde003 LIKE gzde_t.gzde003
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      gzdel001 LIKE gzdel_t.gzdel001,
      gzdel003 LIKE gzdel_t.gzdel003,
      gzdel004 LIKE gzdel_t.gzdel004
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      gzdfl001 LIKE gzdfl_t.gzdfl001,
      gzdfl002 LIKE gzdfl_t.gzdfl002,
      gzdfl003 LIKE gzdfl_t.gzdfl003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="azzi901.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION azzi901_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gzdf_d.getLength() THEN
         LET g_detail_idx = g_gzdf_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzdf_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzdf_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi901_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('gzdestus','17','N,Y')
 
      CALL cl_set_combo_scc('gzde005','99') 
   CALL cl_set_combo_scc('gzde003','91') 
   CALL cl_set_combo_scc('gzde006','79') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL azzi901_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="azzi901.input" ver="8" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi901_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzdf002,gzdf003 FROM gzdf_t WHERE gzdf001=? AND gzdf002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi901_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi901_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi901_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gzde_m.gzde001,g_gzde_m.gzdel003,g_gzde_m.gzdel004,g_gzde_m.gzde002,g_gzde_m.gzde008, 
       g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="azzi901.input.body" ver="9" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzdf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzdf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi901_b_fill()
            LET g_rec_b = g_gzdf_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi901_cl USING g_gzde_m.gzde001
            IF STATUS THEN
               CALL cl_err("OPEN azzi901_cl:", STATUS, 1)
               CLOSE azzi901_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzdf_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzdf_d[l_ac].gzdf002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzdf_d_t.* = g_gzdf_d[l_ac].*  #BACKUP
               LET g_gzdf_d_o.* = g_gzdf_d[l_ac].*  #BACKUP
               CALL azzi901_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL azzi901_set_no_entry_b(l_cmd)
               IF NOT azzi901_lock_b("gzdf_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi901_bcl INTO g_gzdf_d[l_ac].gzdf002,g_gzdf_d[l_ac].gzdf003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_gzdf_d_t.gzdf002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL azzi901_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.gzdfl001 = g_gzdf_d[l_ac].gzdf002
LET g_detail_multi_table_t.gzdfl002 = g_dlang
LET g_detail_multi_table_t.gzdfl003 = g_gzdf_d[l_ac].gzdfl003
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'gzdfl001'
            LET l_var_keys[01] = g_gzdf_d[l_ac].gzdf002
            LET l_field_keys[02] = 'gzdfl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'gzdfl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzdf_d[l_ac].* TO NULL 
            INITIALIZE g_gzdf_d_t.* TO NULL 
            INITIALIZE g_gzdf_d_o.* TO NULL 
                  LET g_gzdf_d[l_ac].gzdf003 = "N"
 
            LET g_gzdf_d_t.* = g_gzdf_d[l_ac].*     #新輸入資料
            LET g_gzdf_d_o.* = g_gzdf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi901_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi901_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzdf_d[li_reproduce_target].* = g_gzdf_d[li_reproduce].*
 
               LET g_gzdf_d[li_reproduce_target].gzdf002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            LET g_detail_multi_table_t.gzdfl001 = g_gzdf_d[l_ac].gzdf002
LET g_detail_multi_table_t.gzdfl002 = g_dlang
LET g_detail_multi_table_t.gzdfl003 = g_gzdf_d[l_ac].gzdfl003
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzdf_t 
             WHERE  gzdf001 = g_gzde_m.gzde001
 
               AND gzdf002 = g_gzdf_d[l_ac].gzdf002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzde_m.gzde001
               LET gs_keys[2] = g_gzdf_d[g_detail_idx].gzdf002
               CALL azzi901_insert_b('gzdf_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzdf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzdf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi901_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzdf_d[l_ac].gzdf002 = g_detail_multi_table_t.gzdfl001 AND
         g_gzdf_d[l_ac].gzdfl003 = g_detail_multi_table_t.gzdfl003 THEN
         ELSE 
            LET l_var_keys[01] = g_gzdf_d[l_ac].gzdf002
            LET l_field_keys[01] = 'gzdfl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzdfl002'
            LET l_vars[01] = g_gzdf_d[l_ac].gzdfl003
            LET l_fields[01] = 'gzdfl003'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzdfl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzdfl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzdfl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzdf_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzdf_d.deleteElement(l_ac)
               NEXT FIELD gzdf002
            END IF
         
            IF g_gzdf_d[l_ac].gzdf002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM gzdf_t
                WHERE  gzdf001 = g_gzde_m.gzde001 AND
 
                      gzdf002 = g_gzdf_d_t.gzdf002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzdf_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gzdfl001'
                  LET l_field_keys[02] = 'gzdfl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gzdfl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.gzdfl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzdfl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi901_bcl
               LET l_count = g_gzdf_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzde_m.gzde001
               LET gs_keys[2] = g_gzdf_d[g_detail_idx].gzdf002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL azzi901_delete_b('gzdf_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzdf002
            #add-point:BEFORE FIELD gzdf002
            {<point name="input.b.page1.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf002
            
            #add-point:AFTER FIELD gzdf002
            {<point name="input.a.page1.gzdf002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdf002
            #add-point:ON CHANGE gzdf002
            {<point name="input.g.page1.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdfl003
            #add-point:BEFORE FIELD gzdfl003
            {<point name="input.b.page1.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdfl003
            
            #add-point:AFTER FIELD gzdfl003
            {<point name="input.a.page1.gzdfl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdfl003
            #add-point:ON CHANGE gzdfl003
            {<point name="input.g.page1.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdf003
            #add-point:BEFORE FIELD gzdf003
            {<point name="input.b.page1.gzdf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf003
            
            #add-point:AFTER FIELD gzdf003
            {<point name="input.a.page1.gzdf003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdf003
            #add-point:ON CHANGE gzdf003
            {<point name="input.g.page1.gzdf003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.gzdf002
         ON ACTION controlp INFIELD gzdf002
            #add-point:ON ACTION controlp INFIELD gzdf002
            {<point name="input.c.page1.gzdf002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzdfl003
         ON ACTION controlp INFIELD gzdfl003
            #add-point:ON ACTION controlp INFIELD gzdfl003
            {<point name="input.c.page1.gzdfl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzdf003
         ON ACTION controlp INFIELD gzdf003
            #add-point:ON ACTION controlp INFIELD gzdf003
            {<point name="input.c.page1.gzdf003" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzdf_d[l_ac].* = g_gzdf_d_t.*
               CLOSE azzi901_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_gzdf_d[l_ac].gzdf002,-263,1)
               LET g_gzdf_d[l_ac].* = g_gzdf_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE gzdf_t SET (gzdf001,gzdf002,gzdf003) = (g_gzde_m.gzde001,g_gzdf_d[l_ac].gzdf002, 
                   g_gzdf_d[l_ac].gzdf003)
                WHERE  gzdf001 = g_gzde_m.gzde001 
 
                  AND gzdf002 = g_gzdf_d_t.gzdf002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzdf_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_gzdf_d[l_ac].* = g_gzdf_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzdf_t",SQLCA.sqlcode,1)
                     LET g_gzdf_d[l_ac].* = g_gzdf_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzde_m.gzde001
               LET gs_keys_bak[1] = g_gzde001_t
               LET gs_keys[2] = g_gzdf_d[g_detail_idx].gzdf002
               LET gs_keys_bak[2] = g_gzdf_d_t.gzdf002
               CALL azzi901_update_b('gzdf_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzdf_d[l_ac].gzdf002 = g_detail_multi_table_t.gzdfl001 AND
         g_gzdf_d[l_ac].gzdfl003 = g_detail_multi_table_t.gzdfl003 THEN
         ELSE 
            LET l_var_keys[01] = g_gzdf_d[l_ac].gzdf002
            LET l_field_keys[01] = 'gzdfl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzdfl002'
            LET l_vars[01] = g_gzdf_d[l_ac].gzdfl003
            LET l_fields[01] = 'gzdfl003'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzdfl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzdfl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzdfl_t')
         END IF 
 
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_gzde_m),util.JSON.stringify(g_gzdf_d_t)
               LET g_log2 = util.JSON.stringify(g_gzde_m),util.JSON.stringify(g_gzdf_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL azzi901_unlock_b("gzdf_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzdf_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzdf_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="azzi901.input.head" ver="12" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_gzde_m.gzde001,g_gzde_m.gzdel003,g_gzde_m.gzdel004,g_gzde_m.gzde002,g_gzde_m.gzde008, 
          g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.gzdel001 = g_gzde_m.gzde001
LET g_master_multi_table_t.gzdel003 = g_gzde_m.gzdel003
LET g_master_multi_table_t.gzdel004 = g_gzde_m.gzdel004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.gzdel001 = ''
LET g_master_multi_table_t.gzdel003 = ''
LET g_master_multi_table_t.gzdel004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzde001
            #add-point:BEFORE FIELD gzde001
            {<point name="input.b.gzde001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde001
            
            #add-point:AFTER FIELD gzde001
            {<point name="input.a.gzde001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzde001
            #add-point:ON CHANGE gzde001
            {<point name="input.g.gzde001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdel003
            #add-point:BEFORE FIELD gzdel003
            {<point name="input.b.gzdel003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdel003
            
            #add-point:AFTER FIELD gzdel003
            {<point name="input.a.gzdel003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdel003
            #add-point:ON CHANGE gzdel003
            {<point name="input.g.gzdel003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdel004
            #add-point:BEFORE FIELD gzdel004
            {<point name="input.b.gzdel004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdel004
            
            #add-point:AFTER FIELD gzdel004
            {<point name="input.a.gzdel004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdel004
            #add-point:ON CHANGE gzdel004
            {<point name="input.g.gzdel004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde002
            #add-point:BEFORE FIELD gzde002
            {<point name="input.b.gzde002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde002
            
            #add-point:AFTER FIELD gzde002
            {<point name="input.a.gzde002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzde002
            #add-point:ON CHANGE gzde002
            {<point name="input.g.gzde002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde008
            #add-point:BEFORE FIELD gzde008
            {<point name="input.b.gzde008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde008
            
            #add-point:AFTER FIELD gzde008
            {<point name="input.a.gzde008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzde008
            #add-point:ON CHANGE gzde008
            {<point name="input.g.gzde008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde005
            #add-point:BEFORE FIELD gzde005
            {<point name="input.b.gzde005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde005
            
            #add-point:AFTER FIELD gzde005
            {<point name="input.a.gzde005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzde005
            #add-point:ON CHANGE gzde005
            {<point name="input.g.gzde005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde003
            #add-point:BEFORE FIELD gzde003
            {<point name="input.b.gzde003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde003
            
            #add-point:AFTER FIELD gzde003
            {<point name="input.a.gzde003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzde003
            #add-point:ON CHANGE gzde003
            {<point name="input.g.gzde003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzde006
            #add-point:BEFORE FIELD gzde006
            {<point name="input.b.gzde006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzde006
            
            #add-point:AFTER FIELD gzde006
            {<point name="input.a.gzde006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzde006
            #add-point:ON CHANGE gzde006
            {<point name="input.g.gzde006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdestus
            #add-point:BEFORE FIELD gzdestus
            {<point name="input.b.gzdestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdestus
            
            #add-point:AFTER FIELD gzdestus
            {<point name="input.a.gzdestus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdestus
            #add-point:ON CHANGE gzdestus
            {<point name="input.g.gzdestus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.gzde001
         ON ACTION controlp INFIELD gzde001
            #add-point:ON ACTION controlp INFIELD gzde001
            {<point name="input.c.gzde001" />}
            #END add-point
 
         #Ctrlp:input.c.gzdel003
         ON ACTION controlp INFIELD gzdel003
            #add-point:ON ACTION controlp INFIELD gzdel003
            {<point name="input.c.gzdel003" />}
            #END add-point
 
         #Ctrlp:input.c.gzdel004
         ON ACTION controlp INFIELD gzdel004
            #add-point:ON ACTION controlp INFIELD gzdel004
            {<point name="input.c.gzdel004" />}
            #END add-point
 
         #Ctrlp:input.c.gzde002
         ON ACTION controlp INFIELD gzde002
            #add-point:ON ACTION controlp INFIELD gzde002
            {<point name="input.c.gzde002" />}
            #END add-point
 
         #Ctrlp:input.c.gzde008
         ON ACTION controlp INFIELD gzde008
            #add-point:ON ACTION controlp INFIELD gzde008
            {<point name="input.c.gzde008" />}
            #END add-point
 
         #Ctrlp:input.c.gzde005
         ON ACTION controlp INFIELD gzde005
            #add-point:ON ACTION controlp INFIELD gzde005
            {<point name="input.c.gzde005" />}
            #END add-point
 
         #Ctrlp:input.c.gzde003
         ON ACTION controlp INFIELD gzde003
            #add-point:ON ACTION controlp INFIELD gzde003
            {<point name="input.c.gzde003" />}
            #END add-point
 
         #Ctrlp:input.c.gzde006
         ON ACTION controlp INFIELD gzde006
            #add-point:ON ACTION controlp INFIELD gzde006
            {<point name="input.c.gzde006" />}
            #END add-point
 
         #Ctrlp:input.c.gzdestus
         ON ACTION controlp INFIELD gzdestus
            #add-point:ON ACTION controlp INFIELD gzdestus
            {<point name="input.c.gzdestus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_gzde_m.gzde001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO gzde_t (gzde001,gzde002,gzde008,gzde005,gzde003,gzde006,gzdestus,gzde007, 
                   gzdeownid,gzdeowndp,gzdecrtid,gzdecrtdp,gzdecrtdt)
               VALUES (g_gzde_m.gzde001,g_gzde_m.gzde002,g_gzde_m.gzde008,g_gzde_m.gzde005,g_gzde_m.gzde003, 
                   g_gzde_m.gzde006,g_gzde_m.gzdestus,g_gzde_m.gzde007,g_gzde_m.gzdeownid,g_gzde_m.gzdeowndp, 
                   g_gzde_m.gzdecrtid,g_gzde_m.gzdecrtdp,g_gzde_m.gzdecrtdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_gzde_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzde_m.gzde001 = g_master_multi_table_t.gzdel001 AND
         g_gzde_m.gzdel003 = g_master_multi_table_t.gzdel003 AND 
         g_gzde_m.gzdel004 = g_master_multi_table_t.gzdel004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzde_m.gzde001
            LET l_field_keys[01] = 'gzdel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzdel001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzdel002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzde_m.gzdel003
            LET l_fields[01] = 'gzdel003'
            LET l_vars[02] = g_gzde_m.gzdel004
            LET l_fields[02] = 'gzdel004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzdel_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi901_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE gzde_t SET (gzde001,gzde002,gzde008,gzde005,gzde003,gzde006,gzdestus,gzde007,gzdeownid, 
                   gzdeowndp,gzdecrtid,gzdecrtdp,gzdecrtdt) = (g_gzde_m.gzde001,g_gzde_m.gzde002,g_gzde_m.gzde008, 
                   g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus,g_gzde_m.gzde007, 
                   g_gzde_m.gzdeownid,g_gzde_m.gzdeowndp,g_gzde_m.gzdecrtid,g_gzde_m.gzdecrtdp,g_gzde_m.gzdecrtdt) 

                WHERE  gzde001 = g_gzde001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzde_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzde_m.gzde001 = g_master_multi_table_t.gzdel001 AND
         g_gzde_m.gzdel003 = g_master_multi_table_t.gzdel003 AND 
         g_gzde_m.gzdel004 = g_master_multi_table_t.gzdel004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzde_m.gzde001
            LET l_field_keys[01] = 'gzdel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzdel001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzdel002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzde_m.gzdel003
            LET l_fields[01] = 'gzdel003'
            LET l_vars[02] = g_gzde_m.gzdel004
            LET l_fields[02] = 'gzdel004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzdel_t')
         END IF 
 
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_gzde_m_t)
               LET g_log2 = util.JSON.stringify(g_gzde_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_gzde001_t = g_gzde_m.gzde001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="azzi901.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD gzde001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzdf002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.insert" ver="9" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi901_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gzdf_d.clear()   
 
 
   INITIALIZE g_gzde_m.* LIKE gzde_t.*             #DEFAULT 設定
   
   LET g_gzde001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_gzde_m.gzdeownid = g_user
      LET g_gzde_m.gzdeowndp = g_dept
      LET g_gzde_m.gzdecrtid = g_user
      LET g_gzde_m.gzdecrtdp = g_dept 
      LET g_gzde_m.gzdecrtdt = cl_get_current()
      LET g_gzde_m.gzdemodid = ""
      LET g_gzde_m.gzdemoddt = ""
      LET g_gzde_m.gzdestus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gzde_m.gzde008 = "N"
      LET g_gzde_m.gzdestus = "Y"
      LET g_gzde_m.gzde007 = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL azzi901_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzde_m.* = g_gzde_m_t.*
         CALL azzi901_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_gzdf_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_gzde001_t = g_gzde_m.gzde001
 
   
   LET g_wc = "(",g_wc,  
              " OR ( ",
              " gzde001 = '", g_gzde_m.gzde001 CLIPPED, "' "
 
              , ")) "
   
   CLOSE azzi901_cl
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.insert_b" ver="3" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi901_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO gzdf_t
                  (
                   gzdf001,
                   gzdf002
                   ,gzdf003) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzdf_d[g_detail_idx].gzdf003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzdf_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.lock_b" ver="5" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi901_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL azzi901_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "gzdf_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN azzi901_bcl USING 
                                       g_gzde_m.gzde001,g_gzdf_d[g_detail_idx].gzdf002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi901_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.main" ver="10" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT gzde001,'','',gzde002,gzde008,gzde005,gzde003,gzde006,gzdestus,gzde007, 
       gzdeownid,'',gzdeowndp,'',gzdecrtid,'',gzdecrtdp,'',gzdecrtdt,gzdemodid,'',gzdemoddt", 
                      " FROM gzde_t",
                      " WHERE gzde001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi901_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzde001,gzde002,gzde008,gzde005,gzde003,gzde006,gzdestus,gzde007,gzdeownid, 
       gzdeowndp,gzdecrtid,gzdecrtdp,gzdecrtdt,gzdemodid,gzdemoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 , 
       t4.ooefl003 ,t5.ooag011",
               " FROM gzde_t",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=gzdeownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=gzdeowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=gzdecrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=gzdecrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=gzdemodid  ",
 
               " WHERE  gzde001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi901_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi901 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi901_init()   
 
      #進入選單 Menu (="N")
      CALL azzi901_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi901
      
   END IF 
   
   CLOSE azzi901_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="azzi901.modify" ver="10" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi901_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_gzde_m.gzde001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_gzde001_t = g_gzde_m.gzde001
 
   CALL s_transaction_begin()
   
   OPEN azzi901_cl USING g_gzde_m.gzde001
   IF STATUS THEN
      CALL cl_err("OPEN azzi901_cl:", STATUS, 1)
      CLOSE azzi901_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi901_master_referesh USING g_gzde_m.gzde001 INTO g_gzde_m.gzde001,g_gzde_m.gzde002,g_gzde_m.gzde008, 
       g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus,g_gzde_m.gzde007,g_gzde_m.gzdeownid, 
       g_gzde_m.gzdeowndp,g_gzde_m.gzdecrtid,g_gzde_m.gzdecrtdp,g_gzde_m.gzdecrtdt,g_gzde_m.gzdemodid, 
       g_gzde_m.gzdemoddt,g_gzde_m.gzdeownid_desc,g_gzde_m.gzdeowndp_desc,g_gzde_m.gzdecrtid_desc,g_gzde_m.gzdecrtdp_desc, 
       g_gzde_m.gzdemodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzde_m.gzde001,SQLCA.sqlcode,0)
      CLOSE azzi901_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL azzi901_show()
   WHILE TRUE
      LET g_gzde001_t = g_gzde_m.gzde001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gzde_m.gzdemodid = g_user 
LET g_gzde_m.gzdemoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL azzi901_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzde_m.* = g_gzde_m_t.*
         CALL azzi901_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE gzde_t SET (gzdemodid,gzdemoddt) = (g_gzde_m.gzdemodid,g_gzde_m.gzdemoddt)
       WHERE  gzde001 = g_gzde001_t
 
                  
      #若單頭key欄位有變更
      IF g_gzde_m.gzde001 != g_gzde001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE gzdf_t SET gzdf001 = g_gzde_m.gzde001
 
          WHERE  gzdf001 = g_gzde001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("gzdf_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("gzdf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_gzde_m.gzde001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE azzi901_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzde_m.gzde001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="azzi901.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi901.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="azzi901.query" ver="4" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi901_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzdf_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL azzi901_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi901_browser_fill("")
      CALL azzi901_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL azzi901_filter_show('gzde001')
   CALL azzi901_filter_show('gzde002')
   CALL azzi901_filter_show('gzde003')
   CALL azzi901_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL azzi901_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.reproduce" ver="8" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi901_reproduce()
   DEFINE l_newno     LIKE gzde_t.gzde001 
   DEFINE l_oldno     LIKE gzde_t.gzde001 
 
   DEFINE l_master    RECORD LIKE gzde_t.*
   DEFINE l_detail    RECORD LIKE gzdf_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_gzde_m.gzde001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_gzde001_t = g_gzde_m.gzde001
 
    
   LET g_gzde_m.gzde001 = ""
 
    
   CALL azzi901_set_entry('a')
   CALL azzi901_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_gzde_m.gzdeownid = g_user
      LET g_gzde_m.gzdeowndp = g_dept
      LET g_gzde_m.gzdecrtid = g_user
      LET g_gzde_m.gzdecrtdp = g_dept 
      LET g_gzde_m.gzdecrtdt = cl_get_current()
      LET g_gzde_m.gzdemodid = ""
      LET g_gzde_m.gzdemoddt = ""
      LET g_gzde_m.gzdestus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL azzi901_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " gzde001 = '", g_gzde_m.gzde001 CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.set_entry" ver="4" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi901_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzde001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi901_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="azzi901.set_no_entry" ver="5" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi901_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzde001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi901_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="azzi901.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi901_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzde_m.gzde001
   LET g_pk_array[1].column = 'gzde001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi901.show" ver="8" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi901_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL azzi901_b_fill() #單身填充
      CALL azzi901_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_gzde_m.gzdeownid_desc = cl_get_username(g_gzde_m.gzdeownid)
      #LET g_gzde_m.gzdeowndp_desc = cl_get_deptname(g_gzde_m.gzdeowndp)
      #LET g_gzde_m.gzdecrtid_desc = cl_get_username(g_gzde_m.gzdecrtid)
      #LET g_gzde_m.gzdecrtdp_desc = cl_get_deptname(g_gzde_m.gzdecrtdp)
      #LET g_gzde_m.gzdemodid_desc = cl_get_username(g_gzde_m.gzdemodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi901_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzde_m.gzde001,g_gzde_m.gzdel003,g_gzde_m.gzdel004,g_gzde_m.gzde002,g_gzde_m.gzde008, 
       g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus,g_gzde_m.gzde007,g_gzde_m.gzdeownid, 
       g_gzde_m.gzdeownid_desc,g_gzde_m.gzdeowndp,g_gzde_m.gzdeowndp_desc,g_gzde_m.gzdecrtid,g_gzde_m.gzdecrtid_desc, 
       g_gzde_m.gzdecrtdp,g_gzde_m.gzdecrtdp_desc,g_gzde_m.gzdecrtdt,g_gzde_m.gzdemodid,g_gzde_m.gzdemodid_desc, 
       g_gzde_m.gzdemoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_gzde_m.gzdestus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzdf_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL azzi901_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi901.state_change" ver="5" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION azzi901_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzde_m.gzde001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzde_m.gzdestus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE gzde_t SET gzdestus = lc_state 
    WHERE  gzde001 = g_gzde_m.gzde001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_gzde_m.gzdestus = lc_state
      DISPLAY BY NAME g_gzde_m.gzdestus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi901.ui_browser_refresh" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi901_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzde001 = g_gzde_m.gzde001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION azzi901_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.ui_dialog" ver="17" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION azzi901_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi901_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL azzi901_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_gzde001 = g_gzde001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL azzi901_fetch('') # reload data
               LET l_ac = 1
               CALL azzi901_ui_detailshow() #Setting the current row 
      
               CALL azzi901_idx_chk()
               #NEXT FIELD gzdf002
         
         END DISPLAY
        
         DISPLAY ARRAY g_gzdf_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL azzi901_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL azzi901_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi901_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi901_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL azzi901_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL azzi901_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL azzi901_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL azzi901_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL azzi901_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL azzi901_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL azzi901_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi901_idx_chk()
            
         ON ACTION previous
            CALL azzi901_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi901_idx_chk()
            
         ON ACTION jump
            CALL azzi901_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi901_idx_chk()
            
         ON ACTION next
            CALL azzi901_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi901_idx_chk()
            
         ON ACTION last
            CALL azzi901_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi901_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzdf002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi901_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi901_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi901_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi901_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi901_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi901_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi901_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi901_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi901_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="azzi901.ui_headershow" ver="6" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi901_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_gzde_m.gzde001 = g_browser[g_current_idx].b_gzde001   
 
   EXECUTE azzi901_master_referesh USING g_gzde_m.gzde001 INTO g_gzde_m.gzde001,g_gzde_m.gzde002,g_gzde_m.gzde008, 
       g_gzde_m.gzde005,g_gzde_m.gzde003,g_gzde_m.gzde006,g_gzde_m.gzdestus,g_gzde_m.gzde007,g_gzde_m.gzdeownid, 
       g_gzde_m.gzdeowndp,g_gzde_m.gzdecrtid,g_gzde_m.gzdecrtdp,g_gzde_m.gzdecrtdt,g_gzde_m.gzdemodid, 
       g_gzde_m.gzdemoddt,g_gzde_m.gzdeownid_desc,g_gzde_m.gzdeowndp_desc,g_gzde_m.gzdecrtid_desc,g_gzde_m.gzdecrtdp_desc, 
       g_gzde_m.gzdemodid_desc
   CALL azzi901_show()
   
END FUNCTION
]]>
  </section>
  <section id="azzi901.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi901_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi901_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi901.update_b" ver="3" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi901_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzdf_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE gzdf_t 
         SET (gzdf001,
              gzdf002
              ,gzdf003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzdf_d[g_detail_idx].gzdf003) 
         WHERE  gzdf001 = ps_keys_bak[1] AND gzdf002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzdf_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzdf_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
