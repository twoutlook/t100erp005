<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="azzi900" std_prog="azzi900" erpver="1.0" module="AZZ" ver="3" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.gzza008" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzza001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzza008  #顯示到畫面上

            NEXT FIELD gzza008                     #返回原欄位

]]>
  </point>
  <point name="input.a.gzza008" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzza008
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzza_m.gzza008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzza_m.gzza008_desc
]]>
  </point>
  <point name="input.a.page4.gzdf001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_gzza_m.gzza001 IS NOT NULL AND g_gzzc4_d[g_detail_idx].gzdf001 IS NOT NULL AND g_gzzc4_d[g_detail_idx].gzdf002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzza_m.gzza001 != g_gzza001_t OR g_gzzc4_d[g_detail_idx].gzdf001 != g_gzzc4_d_t.gzdf001 OR g_gzzc4_d[g_detail_idx].gzdf002 != g_gzzc4_d_t.gzdf002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzdf_t WHERE "||"gzdf001 = '"||g_gzza_m.gzza001 ||"' AND "|| "gzdf002 = '"||g_gzzc4_d[g_detail_idx].gzdf001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="show.body3.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzc3_d[l_ac].gzzb002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzoi002 FROM gzoi_t WHERE gzoi001=? ","") RETURNING g_rtn_fields
            LET g_gzzc3_d[l_ac].gzzb002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzzc3_d[l_ac].gzzb002_desc
]]>
  </point>
  <point name="function.azzi900_gzzx_t" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a06產生
PRIVATE FUNCTION azzi900_gzzx_t(ps_type)
 

   DEFINE li_cnt    LIKE type_t.num10
   DEFINE ps_type   STRING  
   DEFINE ls_sql    STRING  

   IF ps_type = "s" THEN 
            LET ls_sql = 'SELECT gzzx002,gzzx003,gzzx004,gzzx005,gzzx006 FROM gzzx_t WHERE gzzx001=? ' 
      DECLARE gzzx_t_cl CURSOR FROM ls_sql 
      OPEN gzzx_t_cl USING g_gzza_m.gzza001
      FETCH gzzx_t_cl INTO g_gzza_m.gzzx002,g_gzza_m.gzzx003,g_gzza_m.gzzx004,g_gzza_m.gzzx005,g_gzza_m.gzzx006 

      IF SQLCA.sqlcode THEN
                  LET g_gzza_m.gzzx002 = NULL 
         LET g_gzza_m.gzzx003 = NULL 
         LET g_gzza_m.gzzx004 = NULL 
         LET g_gzza_m.gzzx005 = NULL 
         LET g_gzza_m.gzzx006  = NULL 

      END IF 
      RETURN 
   END IF 

      SELECT COUNT(*) INTO li_cnt FROM gzzx_t WHERE gzzx001 = g_gzza001_t
   
   IF li_cnt = 0 AND ps_type = "u" THEN 
            INSERT INTO gzzx_t 
      (gzzx001,gzzx002,gzzx003,gzzx004,gzzx005,gzzx006 )
      VALUES (g_gzza_m.gzza001,g_gzza_m.gzzx002,g_gzza_m.gzzx003,g_gzza_m.gzzx004,g_gzza_m.gzzx005,g_gzza_m.gzzx006 )
   END IF 

   IF li_cnt > 0 AND ps_type = "u" THEN 
            UPDATE gzzx_t SET 
      (gzzx001,gzzx002,gzzx003,gzzx004,gzzx005,gzzx006 ) = 
      (g_gzza_m.gzza001,g_gzza_m.gzzx002,g_gzza_m.gzzx003,g_gzza_m.gzzx004,g_gzza_m.gzzx005,g_gzza_m.gzzx006 ) 
      WHERE gzzx001 = g_gzza001_t

   END IF 

   IF li_cnt > 0 AND ps_type = "d" THEN 
            DELETE FROM gzzx_t
      WHERE gzzx001 = g_gzza001_t
   END IF 

   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   END IF 



END FUNCTION]]>
  </point>
  <point name="function.azzi900_read_define" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION azzi900_read_define(p_str,p_filepath)
   DEFINE p_str       LIKE type_t.chr1000
DEFINE p_filepath  STRING
DEFINE r_dzeb003   LIKE dzeb_t.dzeb003
DEFINE r_dzeb007   LIKE dzeb_t.dzeb007
DEFINE r_dzeb008   LIKE dzeb_t.dzeb008
DEFINE l_dzeb001   LIKE dzeb_t.dzeb001
DEFINE l_dzeb002   LIKE dzeb_t.dzeb002
DEFINE l_cnt       LIKE type_t.num5
DEFINE l_cnt2      LIKE type_t.num5
DEFINE l_ch        base.Channel
DEFINE l_buf       STRING
DEFINE l_buf2      STRING
DEFINE l_length    LIKE type_t.num5
DEFINE l_row       LIKE type_t.num5
#read
   LET l_ch = base.Channel.create()
   CALL l_ch.setDelimiter("")
   CALL l_ch.openFile(p_filepath,"r")
   LET l_row = 0
   WHILE TRUE
       CALL l_ch.readLine() RETURNING l_buf  #读一行资料
       IF l_ch.isEof() THEN EXIT WHILE END IF

       LET l_buf = DOWNSHIFT(l_buf)
       LET l_buf = l_buf.trim()

       #先判斷本行行頭是否以 # 或 -- 為開頭, 如果是就放棄這個找下個
       #補上 { 符號   請勿在行首放大括號
       IF l_buf.subString(1,1) = "#" OR l_buf.subString(1,2) = "--" OR
          l_buf.subString(1,1) = "{" THEN
          CONTINUE WHILE
       END IF

       #到 END MAIN 结束读取
       CALL l_buf.getIndexOf("end main",1) RETURNING l_cnt
       IF l_cnt > 0 THEN EXIT WHILE END IF

       #找到定义变量的行
       CALL l_buf.getIndexOf("DEFINE",1) RETURNING l_cnt
       IF l_cnt > 0 THEN
          CALL l_buf.getIndexOf(p_str,1) RETURNING l_cnt
          IF l_cnt > 0 THEN 
             #获得定义参考的表名和栏位名
             CALL l_buf.getIndexOf(".",1) RETURNING l_cnt     #小数点所在位置
             CALL l_buf.getIndexOf("LIKE",1) RETURNING l_cnt2 #LIKE所在位置

             #抓取小数点前面,LIKE后面的值->表
             LET l_buf2 = l_buf.subString(l_cnt2+5,l_cnt-1)
             LET l_dzeb001 = l_buf2.trim()

             #抓取小数点后面的值->栏位
             LET l_length  = l_buf.getLength()
             LET l_buf2 = l_buf.subString(l_cnt+1,l_length)  #小数点后所有字符
             CALL l_buf2.getIndexOf(" ",1)  RETURNING l_cnt2
             IF l_cnt2 = 0 THEN
                LET l_dzeb002 = l_buf2.trim()
             ELSE
                LET l_buf2 = l_buf2.subString(1,l_cnt2-1)
                LET l_dzeb002 = l_buf2.trim()
             END IF

             #找到资料退出
             EXIT WHILE
          END IF
       END IF

   END WHILE

   SELECT dzeb003,dzeb007,dzeb008
     INTO r_dzeb003,r_dzeb007,r_dzeb008
     FROM dzeb_t
    WHERE dzeb001=l_dzeb001  #表
      AND dzeb002=l_dzeb002  #栏位

   RETURN r_dzeb003,r_dzeb007,r_dzeb008

END FUNCTION]]>
  </point>
  <point name="function.azzi900_upd_para" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION azzi900_upd_para(p_gzza001)
DEFINE l_buf       STRING
DEFINE l_ch        base.Channel
DEFINE ls_cmd      STRING 
DEFINE l_str       STRING 
DEFINE l_chk      LIKE type_t.num5
DEFINE l_msg      STRING 
DEFINE p_gzza001   LIKE gzza_t.gzza001

   LET l_chk =  TRUE 
   LET ls_cmd =  " r.r azzp190 ",p_gzza001 
   #CALL cl_cmdrun_openpipe('r.r',ls_cmd,1) RETURNING l_chk,l_msg
   LET l_msg = ""
   LET l_str = ""
   LET l_ch = base.Channel.create()
   CALL l_ch.setDelimiter("")
   CALL l_ch.openPipe(ls_cmd,"r")   #執行指令

   WHILE TRUE
      CALL l_ch.readLine() RETURNING l_buf
      IF l_ch.isEof() THEN
        EXIT WHILE
      END IF
      DISPLAY l_buf   #顯示背景訊息
         #有錯誤訊息 
         #LET l_str = l_buf.toUpperCase() 
         IF l_buf.getIndexOf("WARNING" ,1) THEN
            LET l_chk = FALSE
            LET l_msg = "azz-00089" 
         END IF 
    END WHILE
    CALL l_ch.close()

    IF NOT l_chk THEN
       CALL cl_err(NULL,l_msg,0)   
    END IF

    RETURN l_chk

END FUNCTION]]>
  </point>
  <point name="function.azzi900_chk_progtype" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION azzi900_chk_progtype(ps_progtype)
   DEFINE ps_progtype LIKE gzcb_t.gzcb002 
   DEFINE li_cnt LIKE type_t.num5

   SELECT COUNT(*) INTO li_cnt FROM gzcb_t
     WHERE gzcb001 = 99 AND gzcb002 = ps_progtype 
   IF li_cnt > 0 THEN
      RETURN  FALSE  
   END IF 
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.azzi900_chk_industry" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# 檢核行業
PRIVATE FUNCTION azzi900_chk_industry(ps_industry)
DEFINE ps_industry LIKE gzoi_t.gzoi001 
   DEFINE li_cnt LIKE type_t.num5

   SELECT count(*) INTO li_cnt FROM  gzoi_t WHERE gzoi001 = ps_industry

   IF li_cnt > 0 THEN
      RETURN   FALSE 
   END IF 
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.azzi900_chk_module" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# 檢核模組
PRIVATE FUNCTION azzi900_chk_module(ps_module)
DEFINE ps_module LIKE gzzo_t.gzzo001 
   DEFINE li_cnt LIKE type_t.num5

   SELECT count(*) INTO li_cnt FROM  gzzo_t WHERE gzzo001 = ps_module
   #DISPLAY "li_cnt:",li_cnt
   IF li_cnt > 0 THEN
      RETURN   FALSE 
   END IF 
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.azzi900_chk_naming_rule" order="7" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# 檢核命名規則
PRIVATE FUNCTION azzi900_chk_naming_rule()
   DEFINE ls_prog        STRING 
   DEFINE ls_module      STRING 
   DEFINE ls_progtype    STRING 
   DEFINE ls_serial_num  STRING
   DEFINE ls_i           LIKE type_t.num5
   DEFINE ls_first_code  STRING
   DEFINE li_chk         LIKE type_t.num5
   
   LET ls_prog = g_gzza_m.gzza001
   LET ls_prog = ls_prog.trim()
   LET g_gzza_m.gzza001 = ls_prog
   LET ls_first_code = ls_prog.subString(1,1)

   ##gzza001 已經存在於 gzzz001 ，則不可給予新增，要顯示錯誤訊息：
   #『此編號已經使用於作業編號內 (gzzz001)，請重新選擇編號』
   IF NOT s_azzi900_chk_gzzz001(ls_prog) THEN 
      CALL cl_err("","azz-00154",0)
      RETURN FALSE 
   END IF 


    #若輸入的編號結尾三碼存在: _XX，且 XX (兩碼)不存在 行業別資料 gzoi001 中 => 顯示錯誤訊息『行業代碼 (%1) 不存在，請先檢視行業別設定』
      #存在；則認定為行業程式

      #A.如果程式碼開頭為 a ，取用 _ (underline) 前面的字段，
      # 檢查是否有程式存在 => 存在則通過檢查/不存在 => 顯示錯誤訊息『編號(%1)為行業%2引用程式使用，但查無主程式，建議編號修改為%3 』
      #例如：輸入編號 axmt500_ic，則檢查 axmt500(underline前字段) ，如果不存在，
      #顯示為『編號 (axmt500_ic)為行業ic 引用程式使用，但查無主程式，建議編號修改為 bxmt500_ic 』

      #B.如果程式碼開頭為 b，不檢查

      #C.如果程式碼開頭為e，顯示『客製程式 %1 歸屬於自訂模組，不需要使用行業編號規則，建議修改為 %2 』
      #例如：輸入編號為 emui300_ic，則一律顯示錯誤訊息『客製程式emui300_ic 歸屬於自訂模組，不需要使用行業編號規則，建議修改為emui300』

      #不存在：則認定為一般程式
        #A.如果程式碼開頭為b/d顯示『程式 %1 行業程式，需要使用行業編號規則，建議修改為 %2 』
        #例如：輸入編號為bici300，則一律顯示錯誤訊息『程式bici300 為行業程式，需要使用行業編號規則，建議修改為bici300_ic』
        #B.如果為 a/c/e 開頭，不檢查
      
   CASE 
      WHEN ls_prog.getLength() < 7
         CALL cl_err("","azz-00001",0) #作業名稱不符合命名規則
         RETURN FALSE
      WHEN ls_prog.getLength() > 7  
         #判定是否是行業程式
         IF ls_prog.subString(8,8) = "_" THEN  
            IF s_azzi900_chk_industry(ls_prog.subString(9,ls_prog.getLength())) THEN 
               CALL cl_err_msg("","azz-00172",ls_prog.subString(9,ls_prog.getLength()),1) #行業代碼 (%1) 不存在，請先檢視行業別設定
               RETURN FALSE
            END IF
            IF ls_prog.subString(9,ls_prog.getLength()) = "sd" THEN 
               CALL cl_err("","azz-00179",0)
               RETURN FALSE  
            END IF 
           # 存在；則認定為行業程式
           LET g_gzza_m.gzza015 = ls_prog.subString(9,ls_prog.getLength())
           CASE 
              #如果程式碼開頭為 a，取用_(underline)前面的字段，
              #檢查是否有程式存在 => 存在則通過檢查/不存在 => 顯示錯誤訊息
              WHEN ls_first_code = 'a'
              
                 IF NOT s_azzi900_chk_gzza001(ls_prog.subString(1,7)) THEN 
                    CALL cl_err_msg("","azz-00173",ls_prog||'|'||ls_prog.subString(9,ls_prog.getLength())||'|'||'b'||ls_prog.subString(2,ls_prog.getLength()),1) #編號(%1)為行業 %2 引用程式使用，但查無主程式，建議編號修改為%3
                    LET g_gzza_m.gzza015 = NULL
                    RETURN FALSE
                 END IF
                #程式碼開頭為e => 顯示錯誤訊息 
              WHEN ls_first_code = 'e'
                   CALL cl_err_msg("","azz-00174",ls_prog||'|'||ls_prog.subString(1,7),1) #客製程式 %1 歸屬於自訂模組，不需要使用行業編號規則，建議修改為 %2
                   LET g_gzza_m.gzza015 = NULL
                   RETURN FALSE          
           END CASE 
         ELSE 
            CALL cl_err("","azz-00001",0) #作業名稱不符合命名規則
            RETURN FALSE
         END IF 
      WHEN ls_prog.getLength() = 7  
         #則認定為一般程式
         CASE 
            #程式碼開頭為b/d顯示         
            WHEN ls_first_code = 'b' OR ls_first_code = 'd'
            #程式%1 行業程式，需要使用行業編號規則，建議修改為 %2
            CALL cl_err_msg("","azz-00175",ls_prog||'|'||ls_prog||"_ic",1)
            RETURN FALSE
         #如果為a/c/e 開頭，不檢查     
         END CASE 
   END CASE

   
   #若 DGENV = s ，則在新增時編號首碼只能輸入 a / b，否則顯示錯誤訊息『標準開發環境下，不可以建置客製程式 (%1)』
   IF FGL_GETENV("DGENV") = 's' THEN 
      IF ls_first_code = 'a' OR ls_first_code = 'b' THEN
      ELSE  
         CALL cl_err_msg("","azz-00180",ls_prog,1) #標準開發環境下，不可以建置客製程式 (%1)
         RETURN FALSE
      END IF 
   ELSE 
      #若 DGENV = c ，在新增時檢查首碼只能輸入 c/d/e ，修改時若本欄位沒有異動則不檢查
      IF ls_first_code = 'c' OR ls_first_code = 'd' OR ls_first_code = 'e' THEN 
      ELSE 
         CALL cl_err_msg("","azz-00176",ls_prog,1) #客製開發環境下，不可以建置標準程式 (%1)
         RETURN FALSE
      END IF 
   END IF
   

   #取前 3 碼進行模組檢查
   #A. 如果為 a / c / d / e 開頭，則若前三碼不存在 DOWNSHIFT(gzzj001) 內，則顯示錯誤訊息：『程式編號 (%1) 無法確認歸屬模組，請重新確認』
   #B. 如果為 b 開頭，則若前三碼不存在 DOWNSHIFT(gzzj001) 內，
   #   => b 開頭的換成  a  再檢查一次，若還是不存在，則顯示錯誤訊息：『程式編號 (%1) 無法確認歸屬模組，請重新確認』
   #      
   #  例如：bxmt100_ic 則檢查『BXM』->不存在，換成 A，再檢查『AXM』，存在則 ok，不存在則顯示錯誤訊息

   #當檢核完後自動填寫
   #A.模組編號 gzza003: 若程式編號為 a/c/e，則擷取前三碼並轉換為大寫，
   #                   若為 b，則先檢查前 3 碼是否存在 gzzj001，若存在則擷取前三碼並轉換為大寫，不存在則首碼換為 a 後轉換為大寫
   #
   LET ls_module =  ls_prog.subString(1,3)
   #檢查是否存在 gzzj
   IF NOT s_azzi900_chk_gzzj(UPSHIFT(ls_module)) THEN
      LET li_chk = FALSE 
      IF ls_first_code = 'b' THEN 
         LET ls_module =  'a',ls_prog.subString(2,3)
         LET li_chk = s_azzi900_chk_gzzj(UPSHIFT(ls_module))  
       
      END IF 
      IF NOT li_chk THEN 
         #則顯示錯誤訊息：『程式編號 (%1) 無法確認歸屬模組，請重新確認』
         CALL cl_err_msg("","azz-00171",ls_prog,1)
         RETURN FALSE    
      END IF 
   END IF
   #wss 先註解
   #IF ls_module = "wss" OR ls_module = "cwss" THEN 
   #   CALL cl_err("","azz-00220",0)
   #   RETURN FALSE 
   #END IF 
   #模組編號
   LET g_gzza_m.gzza003 = UPSHIFT(ls_module)

   #5-7碼要數字 ex azzi900
   LET ls_serial_num = ls_prog.subString(5,7)  
   IF NOT ls_serial_num MATCHES '[01-9][01-9][01-9]' THEN
      CALL cl_err("","azz-00001",0)
      RETURN FALSE 
   END IF  

   #程式類別 gzza002: 擷取第四碼，維持小寫
   LET ls_progtype = ls_prog.subString(4,4)
   IF cl_chk_progtype(UPSHIFT(ls_progtype)) THEN
      CALL cl_err("","azz-00219",0)
      RETURN FALSE 
   END IF 

   #程式類別
   LET g_gzza_m.gzza002 = UPSHIFT(ls_progtype)

   #系統執行指令 gzza004: 加上"$FGLRUN $模組名稱i/程式名稱
   LET g_gzza_m.gzza004 = "$FGLRUN $",os.Path.join((UPSHIFT(ls_module)||"i"),g_gzza_m.gzza001)
 
   #是否為客製程式 gzza011:若程式編號為 a/b 開頭，填入 N，若為 c/d/e 開頭則填入 Y
   CASE 
      WHEN ls_first_code = 'a' OR ls_first_code = 'b'
           LET g_gzza_m.gzza011 = 'N' 
      WHEN ls_first_code = 'c' OR ls_first_code = 'd' OR ls_first_code = 'e' 
           LET g_gzza_m.gzza011 = 'Y'      
   END CASE 

   #歸屬行業別
   IF cl_null(g_gzza_m.gzza015) OR (NOT cl_null(g_gzza_m.gzza015) AND g_gzza_m.gzza015 <> g_gzza_m_t.gzza015) THEN
      LET ls_i = 0
      LET ls_i = ls_prog.getIndexOf('_',1)
      IF ls_i > 0 THEN
         LET g_gzza_m.gzza015 = ls_prog.subString(ls_i+1,ls_prog.getLength())
      END IF
   END IF
   LET g_ref_fields[1] = g_gzza_m.gzza015
   CALL ap_ref_array2(g_ref_fields,"SELECT gzoi002 FROM gzoi_t WHERE gzoi001=? ","") RETURNING g_rtn_fields
   LET g_gzza_m.gzza015_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_gzza_m.gzza015_desc
   

   #只有a開頭才有引用程式編號
   #引用程式編號
   IF ls_first_code = 'a' THEN 
      IF cl_null(g_gzza_m.gzza008) OR (NOT cl_null(g_gzza_m.gzza008) AND ((g_gzza_m.gzza008 <> g_gzza_m_t.gzza008) OR cl_null(g_gzza_m_t.gzza008))) THEN
         LET ls_i = 0
         LET ls_i = ls_prog.getIndexOf('_',1)
         IF ls_i > 0 THEN
            LET g_gzza_m.gzza008 = ls_prog.subString(1,ls_i-1)
         END IF
         LET g_ref_fields[1] = g_gzza_m.gzza008
         CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
         LET g_gzza_m.gzza008_desc = g_rtn_fields[1]
         DISPLAY BY NAME g_gzza_m.gzza008_desc
      END IF
   ELSE 
      CALL cl_set_comp_entry("gzza008",FALSE)   
   END IF

   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.azzi900_view_structure_tree" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+ 查看程式結構樹
PRIVATE FUNCTION azzi900_view_structure_tree()
   DEFINE lc_gzzl002        LIKE gzzl_t.gzzl002
   DEFINE ls_structure_tree LIKE type_t.chr1000  

   DECLARE azzi900_view_structure_cs CURSOR FOR 
      
      SELECT  gzzl002 FROM  gzzl_t WHERE  gzzl001 = g_gzza_m.gzza001

      FOREACH azzi900_view_structure_cs INTO lc_gzzl002

         LET ls_structure_tree = ls_structure_tree,lc_gzzl002,"\n"       
      END FOREACH 
      
     MENU "Information" ATTRIBUTE (STYLE="dialog", COMMENT=ls_structure_tree CLIPPED, IMAGE="32/info.png")
      ON ACTION accept
         #LET li_result = TRUE
         EXIT MENU
      ON ACTION CLOSE 
         EXIT MENU
      ON IDLE g_idle_seconds
         CALL cl_on_idle()
         CONTINUE MENU

   END MENU
   CLOSE  azzi900_view_structure_cs
END FUNCTION]]>
  </point>
  <point name="function.azzi900_refresh_gzzc_b" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION azzi900_refresh_gzzc_b()
    DEFINE li LIKE type_t.num5
   
   DECLARE azzi900_b_fill_curs CURSOR FOR 
   　SELECT gzzc002,gzzc003,gzzc004,gzzc005,gzzc006,gzzc007 
   　　　FROM gzzc_t WHERE gzzc001　=　g_gzza_m.gzza001
   LET li = 1 
   CALL g_gzzc_d.clear() 
   FOREACH azzi900_b_fill_curs INTO g_gzzc_d[li].gzzc002 ,g_gzzc_d[li].gzzc003,g_gzzc_d[li].gzzc004,g_gzzc_d[li].gzzc005,g_gzzc_d[li].gzzc006,g_gzzc_d[li].gzzc007

     LET li = li + 1 
   END FOREACH

   CALL g_gzzc_d.deleteElement(li)
   CLOSE azzi900_b_fill_curs 
END FUNCTION]]>
  </point>
  <point name="function.azzi900_chk_gzza011" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 
#1. DGENV = s 時，都不可以設定為“Y”，若勾選則顯示錯誤訊息『必須到客戶環境中，才可設定為客製模式』，回復為 N 
#   DGENV = c 時，模組名稱首碼為 A / B 可以任意改動，C/D/E 若改為 “N” 時，顯示錯誤訊息『客製程式(%1)，不可取消客製屬性』，回復為 Y
 
#2. 從N變成 Y 後，變更  系統執行指令 gzza004:
#   若程式名稱為 a 開頭，則  將模組名稱首碼改為 C，調整 gzza004為 $FGLRUN $變更後的模組名稱i/程式名稱
#   若程式名稱為 b 開頭，且模組為A開頭的，臨時取模組編號但將首碼改為C(不存檔) ，調整 gzza004 為  $FGLRUN $變更後的模組名稱i/程式名稱
#                   且模組為B開頭的，臨時取模組編號但將首碼改為D(不存檔)，調整gzza004為$FGLRUN $變更後的模組名稱i/程式名稱
#
#   從Y變成 N 後，變更  系統執行指令 gzza004:
#   系統執行指令 gzza004: 加上"$FGLRUN $模組名稱i/程式名稱
# Memo...........:
# Usage..........: CALL azzi900_chk_gzza011()
#                  RETURNING 回传参数
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi900_chk_gzza011()
   DEFINE  ls_first_code STRING 
   DEFINE  ls_module     STRING
   DEFINE  li_chk        LIKE type_t.num5
   DEFINE  ls_prog       STRING 

   #若 DGENV = s ，則編號首碼只能輸入 a / b，若 DGENV = c 不檢查
   IF FGL_GETENV("DGENV") = 's' THEN 
      IF g_gzza_m.gzza011 = 'Y' THEN 
         #必須到客戶環境中，才可設定為客製模式 
         CALL cl_err("","azz-00177",1)
         LET g_gzza_m.gzza011 = 'N' 
         RETURN FALSE 
      END IF
      LET g_gzza_m.gzza004 = "$FGLRUN $",os.Path.join((UPSHIFT(g_gzza_m.gzza003)||"i"),g_gzza_m.gzza001)
   END IF 

   IF FGL_GETENV("DGENV") = 'c' THEN
      LET ls_first_code = g_gzza_m.gzza001[1,1] 
      #a開頭程式且s類的程式不可修改成客製 
      IF g_gzza_m.gzza001[4,4] = 's' AND ls_first_code = 'a' THEN 
         CALL cl_err("","azz-00195",1) #a開頭程式且s類的程式不可修改成客製
         RETURN FALSE
      END IF 
      IF g_gzza_m.gzza011 = 'N' THEN 
         #改為 “N” 時，顯示錯誤訊息『客製程式(%1)，不可取消客製屬性』，回復為 Y
         CALL cl_err_msg("","azz-00178",g_gzza_m.gzza011,1)
         LET g_gzza_m.gzza011 = 'Y' 
         RETURN FALSE
      END IF     
      #DISPLAY "ls_first_code:",ls_first_code 
      CASE 
         WHEN ls_first_code = 'a' 
            #LET g_gzza_m.gzza003 = 'C', g_gzza_m.gzza003[2,3]  
            #系統執行指令 gzza004: 加上"$FGLRUN $模組名稱i/程式名稱
            LET g_gzza_m.gzza004 = "$FGLRUN $",os.Path.join((UPSHIFT('C'||g_gzza_m.gzza003[2,3])||"i"),g_gzza_m.gzza001)
         WHEN ls_first_code = 'b'
            CASE
               WHEN g_gzza_m.gzza003[1,1] = 'A'
                  LET g_gzza_m.gzza004 = "$FGLRUN $",os.Path.join((UPSHIFT('C'||g_gzza_m.gzza003[2,3])||"i"),g_gzza_m.gzza001)
               WHEN g_gzza_m.gzza003[1,1] = 'B'
                  LET g_gzza_m.gzza004 = "$FGLRUN $",os.Path.join((UPSHIFT('D'||g_gzza_m.gzza003[2,3])||"i"),g_gzza_m.gzza001)
            END CASE 
      END CASE 
   END IF 
   
   RETURN TRUE 
END FUNCTION]]>
  </point>
  <point name="function.azzi900_ins_del_gzzb" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 完成後同時寫入 gzzb_t  (本程式編號 , 行業編號 , 對應標準程式編號 )
#                  若為 a 開頭程式，則必須找出對應的標準程式編號 (去除最後的 _XX 行業別編碼) 
#                  例如1： axmt410 則，標準程式編號為 axmt410 ，寫入 gzzb_t 內容為  (‘axmt410’  , ‘sd’ , ‘axmt410’ )  
#                  例如2：axmt410_ic 則，標準程式編號為 axmt410 (去除最後 underline 取前面) ，寫入 gzzb_t 內容為 ( ‘axmt410_ic’ , ‘ic’ , ‘axmt410’ )
#
#                  若為 b / c / d / e 開頭程式，則確認後方是否有 _XX 行業別編碼，依照行業編碼填寫。但是 對應標準程式編號 = 本程式編號
#                  例如：cxmt410_ic 則，標準程式編號為 cxmt410_ic，寫入 gzzb_t 內容為  ( ‘cxmt410_ic’ , ‘ic’ , ‘cxmt410_ic’ )
#                  例如：enum100 則標準程式編號相同為 enum100，寫入 gzzb_t 內容為 ( ‘enum100’ , ‘sd’ , ‘enum100’ )  因為不存在行業編號則設定為 sd
#                  (放棄時不寫入，刪除時一併刪除)
# Memo...........:
# Usage..........: CALL azzi900_ins_del_gzzb(p_cmd)
#                  RETURNING 
# Input parameter: p_cmd 新增/刪除 CHAR(1)
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi900_ins_del_gzzb(p_cmd)
   DEFINE p_cmd         LIKE type_t.chr1
   DEFINE li_idx        LIKE type_t.num5
   DEFINE pc_gzzb001    LIKE gzzb_t.gzzb001  #程式編號
   DEFINE pc_gzzb002    LIKE gzzb_t.gzzb002  #行業編號
   DEFINE pc_gzzb003    LIKE gzzb_t.gzzb003  #程式編號(標準)

   IF p_cmd = 'a' THEN 
      #找出underline的位置 確認行業程式或標準程式
      LET li_idx = s_azzp191_find_underline_pos(g_gzza_m.gzza001)

      CASE 
         WHEN g_gzza_m.gzza001[1,1] = 'a'
            #沒有underline  li_idx = 0 標準程式
            IF li_idx = 0 THEN 
               LET pc_gzzb001 = g_gzza_m.gzza001
               LET pc_gzzb002 = "sd"
               LET pc_gzzb003 = g_gzza_m.gzza001
            ELSE 
               #有underline  li_idx > 0   是行業程式
               LET pc_gzzb001 = g_gzza_m.gzza001
               LET pc_gzzb002 = g_gzza_m.gzza001[li_idx+1,li_idx+2] 
               LET pc_gzzb003 = g_gzza_m.gzza001[1,li_idx-1]
            END IF 
         OTHERWISE #b / c / d / e
            #沒有underline  li_idx = 0
            IF li_idx = 0 THEN 
               LET pc_gzzb001 = g_gzza_m.gzza001
               LET pc_gzzb002 = "sd"
               LET pc_gzzb003 = g_gzza_m.gzza001
            ELSE 
               LET pc_gzzb001 = g_gzza_m.gzza001
               LET pc_gzzb002 = g_gzza_m.gzza001[li_idx+1,li_idx+2] 
               LET pc_gzzb003 = g_gzza_m.gzza001
            END IF 
      END CASE 

        INSERT INTO gzzb_t (gzzb001,gzzb002,gzzb003)
           VALUES (pc_gzzb001,pc_gzzb002,pc_gzzb003) # DISK WRITE 

   ELSE
      # p_cmd = 'd'
        DELETE FROM gzzb_t 
           WHERE gzzb001 = g_gzza_m.gzza001
   
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.azzi900_detail_rep_adj_gzzc006" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 複製時調整gzzc006 參數
# Memo...........:
# Usage..........: CALL azzi900_detail_rep_adj_gzzc006()
#                  RETURNING 
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi900_detail_rep_adj_gzzc006()
   DEFINE ls_sql     STRING 
   DEFINE ls_tmp     STRING 
   DEFINE li_cnt     LIKE type_t.num5

   DECLARE azzi900_rep_adj_curs CURSOR FOR 
     SELECT gzzc006 FROM gzzc_t WHERE gzzc001 = g_gzza_m.gzza001
   LET li_cnt = 1 
   CALL g_gzzc_d.clear() 
   #取一筆之後離開foreach
   FOREACH azzi900_rep_adj_curs INTO g_gzzc_d[li_cnt].gzzc006 
      EXIT FOREACH 
   END FOREACH 
   
   LET ls_tmp =  g_gzzc_d[li_cnt].gzzc006 #/u1/t10dev/erp/azz/4gl/azzi900
   LET ls_tmp = ls_tmp.subString(1,ls_tmp.getIndexOf("4gl",1)-5)
   LET ls_tmp = os.path.join(os.path.join(os.Path.join(ls_tmp,DOWNSHIFT(g_gzza_m.gzza003)),"4gl"),g_gzza_m.gzza001)
   LET g_gzzc_d[li_cnt].gzzc006  = ls_tmp 
   UPDATE gzzc_t  
      SET gzzc006 = g_gzzc_d[li_cnt].gzzc006 
      WHERE gzzc001 = g_gzza_m.gzza001
END FUNCTION]]>
  </point>
  <point name="b_fill3.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="construct.c.gzza001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzza001()                           #呼叫開窗
               #DISPLAY g_qryparam.return1 TO gzza001  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO gzza003 #模組編號 
               DISPLAY g_qryparam.return3 TO gzza001 #程式類別 
               #DISPLAY g_qryparam.return4 TO gzzal003 #程式名稱 

            NEXT FIELD gzza001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzza003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzzo001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzza003  #顯示到畫面上

            NEXT FIELD gzza003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzzacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzacrtdp  #顯示到畫面上

            NEXT FIELD gzzacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzzacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzacrtid  #顯示到畫面上

            NEXT FIELD gzzacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzzamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzamodid  #顯示到畫面上

            NEXT FIELD gzzamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzzaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzaowndp  #顯示到畫面上

            NEXT FIELD gzzaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.gzzaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzaownid  #顯示到畫面上

            NEXT FIELD gzzaownid                     #返回原欄位

]]>
  </point>
  <point name="delete.body.a_delete3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #刪除子畫面規格編 多語言
      FOR li_cnt = 1 TO g_gzzc4_d.getLength()
          DELETE  from gzdfl_t
             WHERE gzdfl001 =  g_gzzc4_d[li_cnt].gzdf002
          
          IF SQLCA.sqlcode THEN
             CALL cl_err("gzdfl_t",SQLCA.sqlcode,0) 
             CALL s_transaction_end('N','0')
             RETURN
          END IF    
      END FOR   ]]>
  </point>
  <point name="delete.body.a_delete4" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #作業編號設定表
       DELETE FROM gzzz_t
          WHERE gzzz002 = g_gzza_m.gzza001 
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzz_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF    

       #菜單下拉式選單對應關聯作業對照表
       DELETE FROM gzzs_t
          WHERE gzzs001 = g_gzza_m.gzza001  
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzs_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF

       #程式與功能對照檔
       DELETE FROM gzzr_t
          WHERE gzzr001 = g_gzza_m.gzza001 
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzr_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF

       #ACTION多語言對照檔
       DELETE FROM gzzq_t
          WHERE gzzq001 = g_gzza_m.gzza001    
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzq_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF
       
       #階層式選單設定檔
       DELETE FROM gzzp_t
          WHERE gzzp001 = g_gzza_m.gzza001 
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzp_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF

       #階層式選單設定提速表  
       DELETE FROM gzzps_t
          WHERE gzzps001 = g_gzza_m.gzza001  
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzps_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF
       
       #程式連結成果資料明細表  
       DELETE FROM gzzl_t
          WHERE gzzl001 = g_gzza_m.gzza001    
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzl_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF
       
       #程式應用參數組設定表
       DELETE FROM gzzl_t
          WHERE gzzl001 = g_gzza_m.gzza001
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzl_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF
       
       #作業級畫面元件翻譯代換表 
       DELETE FROM gzzf_t
          WHERE gzzf001 = g_gzza_m.gzza001  
       IF SQLCA.sqlcode THEN
          CALL cl_err("gzzf_t",SQLCA.sqlcode,0) 
          CALL s_transaction_end('N','0')
          RETURN
       END IF      ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE ls_msg      STRING 
   DEFINE li_cnt      LIKE type_t.num5]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL azzi900_ins_del_gzzb('d') 

      IF SQLCA.sqlcode THEN
         CALL cl_err(g_gzza_m.gzza001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET ls_msg = cl_getmsg("azz-00127",g_lang)
      IF NOT cl_ask_promp(ls_msg) THEN 
         RETURN 
      END IF ]]>
  </point>
  <point name="delete.lang.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      #刪除子畫面規格編 多語言 
      FOR li_cnt = 1 TO g_gzzc4_d.getLength()
          DELETE  from gzdfl_t
             WHERE gzdfl001 =  g_gzzc4_d[li_cnt].gzdf002
          
          IF SQLCA.sqlcode THEN
             CALL cl_err("gzdfl_t",SQLCA.sqlcode,0) 
             CALL s_transaction_end('N','0')
             RETURN
          END IF    
      END FOR ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #複製時調整gzzc006 
   CALL azzi900_detail_rep_adj_gzzc006() ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF cl_null(g_gzza_m.gzza011) THEN 
      LET g_gzza_m.gzza011 = 'N'
   END IF]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_gzza007','93')
   IF FGL_GETENV("DGENV") = "s" THEN
      CALL cl_set_combo_module_reg("gzza003",1)
   ELSE   
      CALL cl_set_combo_module("gzza003",1)
   END IF]]>
  </point>
  <point name="input.a.gzza001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_gzza_m.gzza001 = DOWNSHIFT(g_gzza_m.gzza001)
            IF  NOT cl_null(g_gzza_m.gzza001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzza_m.gzza001 != g_gzza001_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzza_t WHERE "||"gzza001 = '"||g_gzza_m.gzza001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT azzi900_chk_naming_rule() THEN
                     NEXT FIELD gzza001
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.gzza003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.gzza011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[             IF  NOT cl_null(g_gzza_m.gzza011) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzza_m.gzza011 != g_gzza_m_t.gzza011 ))) THEN 

                  IF NOT azzi900_chk_gzza011() THEN
                     NEXT FIELD gzza011
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.gzza015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzza015
            CALL ap_ref_array2(g_ref_fields,"SELECT gzoi002 FROM gzoi_t WHERE gzoi001=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzza015_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzza015_desc
]]>
  </point>
  <point name="input.a.gzzacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzacrtdp_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzacrtdp_desc
]]>
  </point>
  <point name="input.a.gzzacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzacrtid_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzacrtid_desc
]]>
  </point>
  <point name="input.a.gzzal003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[             IF NOT cl_null(g_gzza_m.gzzal003) THEN
               IF NOT cl_chk_tworcn(g_lang,g_gzza_m.gzzal003,20) THEN
                  NEXT FIELD gzzal003
               END IF
            END IF ]]>
  </point>
  <point name="input.a.gzzamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzamodid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzamodid_desc
]]>
  </point>
  <point name="input.a.gzzaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzaowndp_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzaowndp_desc
]]>
  </point>
  <point name="input.a.gzzaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzaownid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzaownid_desc
]]>
  </point>
  <point name="input.a.page1.gzzc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzza_m.gzza001) AND NOT cl_null(g_gzzc_d[l_ac].gzzc002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzza_m.gzza001 != g_gzza001_t OR g_gzzc_d[l_ac].gzzc002 != g_gzzc_d_t.gzzc002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzzc_t WHERE "||"gzzc001 = '"||g_gzza_m.gzza001 ||"' AND "|| "gzzc002 = '"||g_gzzc_d[l_ac].gzzc002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.gzzk002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzza_m.gzza001) AND NOT cl_null(g_gzzc2_d[l_ac].gzzk002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzza_m.gzza001 != g_gzza001_t OR g_gzzc2_d[l_ac].gzzk002 != g_gzzc2_d_t.gzzk002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzzk_t WHERE "||"gzzk001 = '"||g_gzza_m.gzza001 ||"' AND "|| "gzzk002 = '"||g_gzzc2_d[l_ac].gzzk002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.gzzb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzza_m.gzza001) AND NOT cl_null(g_gzzc3_d[l_ac].gzzb002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzza_m.gzza001 != g_gzza001_t OR g_gzzc3_d[l_ac].gzzb002 != g_gzzc3_d_t.gzzb002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzzb_t WHERE "||"gzzb001 = '"||g_gzza_m.gzza001 ||"' AND "|| "gzzb002 = '"||g_gzzc3_d[l_ac].gzzb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                 
               END IF
               IF NOT azzi900_chk_gzzb002() THEN
                  LET g_gzzc3_d[l_ac].gzzb002_desc = ""
                  DISPLAY BY NAME g_gzzc3_d[l_ac].gzzb002_desc
                  NEXT FIELD gzzb002
               END IF
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_gzzc3_d[l_ac].gzzb002
               CALL ap_ref_array2(g_ref_fields,"SELECT gzoi002 FROM gzoi_t WHERE gzoi001=? ","") RETURNING g_rtn_fields
               LET g_gzzc3_d[l_ac].gzzb002_desc = g_rtn_fields[1] 
               DISPLAY BY NAME g_gzzc3_d[l_ac].gzzb002_desc
             END IF

]]>
  </point>
  <point name="input.a.page3.gzzb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF  NOT cl_null(g_gzza_m.gzza001) AND NOT cl_null(g_gzzc3_d[l_ac].gzzb002) THEN 
                IF NOT azzi900_chk_gzzb003() THEN
               
                   NEXT FIELD gzzb003
                END IF
            END IF ]]>
  </point>
  <point name="input.a.page4.gzdf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzza_m.gzza001) AND NOT cl_null(g_gzzc4_d[l_ac].gzdf002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzza_m.gzza001 != g_gzza001_t OR g_gzzc4_d[l_ac].gzdf002 != g_gzzc4_d_t.gzdf002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzdf_t WHERE "||"gzdf001 = '"||g_gzza_m.gzza001 ||"' AND "|| "gzdf002 = '"||g_gzzc4_d[l_ac].gzdf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL s_azzi900_check_gzdf002(g_gzza_m.gzza001,g_gzzc4_d[l_ac].gzdf002)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD gzdf002
               END IF
            END IF

]]>
  </point>
  <point name="input.after_define_sql3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page2.gzzk004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL DIALOG.setFieldTouched("s_detail2.gzzk004",TRUE)
            CALL ld_arr.clear()
            CALL s_azzi900_app_param_token(ld_arr,g_gzzc2_d[l_ac].gzzk004) RETURNING ld_arr     
            CALL azzi900_02(g_gzza_m.gzza001,ld_arr) RETURNING ls_str,li_rtn
            
            IF li_rtn THEN 
               LET g_gzzc2_d[l_ac].gzzk004 = ls_str  
            END IF]]>
  </point>
  <point name="input.body3.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzc3_d[l_ac].gzzb002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzoi002 FROM gzoi_t WHERE gzoi001=? ","") RETURNING g_rtn_fields
            LET g_gzzc3_d[l_ac].gzzb002_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_gzzc3_d[l_ac].gzzb002_desc]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE ld_arr DYNAMIC ARRAY OF RECORD 
       lc_gzzc002  LIKE gzzc_t.gzzc002,     #參數序號
       lc_value    LIKE type_t.chr20,       #參數數值
       li_entry    LIKE type_t.num5,        #是否可以輸入
       li_return   LIKE type_t.num5         #是否需要回傳
    END RECORD  
   DEFINE ls_str STRING 
   DEFINE li_rtn LIKE type_t.num5]]>
  </point>
  <point name="input.detail_input.page1.upd_para" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_gzza_m.gzza001) THEN 
                  IF azzi900_upd_para(g_gzza_m.gzza001) THEN 
                     CALL azzi900_refresh_gzzc_b()
                     EXIT DIALOG
                  END IF                 
               END IF    ]]>
  </point>
  <point name="input.detail_input.page3.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF  NOT cl_null(g_gzzc4_d[l_ac].gzdf002) THEN
                  CALL n_gzdfl(g_gzzc4_d[l_ac].gzdf002) 
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzzc4_d[l_ac].gzdf002
                  CALL ap_ref_array2(g_ref_fields," SELECT gzdfl003 FROM gzdfl_t WHERE gzdfl001 = ? AND gzdfl002 = '"||g_lang||"'","") RETURNING g_rtn_fields
                  LET g_gzzc4_d[l_ac].gzdfl003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_gzzc4_d[l_ac].gzdfl003
               END IF   ]]>
  </point>
  <point name="input.detail_input.page4.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF  NOT cl_null(g_gzzc4_d[l_ac].gzdf002) THEN
                  CALL n_gzdfl(g_gzzc4_d[l_ac].gzdf002) 
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzzc4_d[l_ac].gzdf002
                  CALL ap_ref_array2(g_ref_fields," SELECT gzdfl003 FROM gzdfl_t WHERE gzdfl001 = ? AND gzdfl002 = '"||g_lang||"'","") RETURNING g_rtn_fields
                  LET g_gzzc4_d[l_ac].gzdfl003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_gzzc4_d[l_ac].gzdfl003
               END IF ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL azzi900_ins_del_gzzb(p_cmd)]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF  NOT cl_null(g_gzza_m.gzza001) THEN
                  CALL n_gzzal(g_gzza_m.gzza001) 
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzza_m.gzza001
                  CALL ap_ref_array2(g_ref_fields," SELECT gzzal003,gzzal004 FROM gzzal_t WHERE gzzal001 = ? AND gzzal002 = '"||g_lang||"'","") RETURNING g_rtn_fields
                  LET g_gzza_m.gzzal003 = g_rtn_fields[1]
                  LET g_gzza_m.gzzal004 = g_rtn_fields[2]
                  DISPLAY BY NAME g_gzza_m.gzzal003
                  DISPLAY BY NAME g_gzza_m.gzzal004
               END IF        ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="menu.upd_para" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[              IF azzi900_upd_para(g_gzza_m.gzza001) THEN 
               END IF]]>
  </point>
  <point name="menu.view_structure_tree" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_gzza_m.gzza001) THEN 
                  CALL azzi900_01(g_gzza_m.gzza001)
               END IF    ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("gzza008",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzzc002",TRUE)
   END IF]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("gzzc002",FALSE)
   END IF]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_gzzc4_d[l_ac].gzdf002
   #LET g_ref_fields[2] = g_gzzc4_d[l_ac].gzdf002
   CALL ap_ref_array2(g_ref_fields," SELECT gzdfl003 FROM gzdfl_t WHERE gzdfl001 = ? AND gzdfl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzzc4_d[l_ac].gzdfl003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_gzzc4_d[l_ac].gzdfl003]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzza_m.gzza001
   CALL ap_ref_array2(g_ref_fields," SELECT gzzal003,gzzal004 FROM gzzal_t WHERE gzzal001 = ? AND gzzal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzza_m.gzzal003 = g_rtn_fields[1] 
   LET g_gzza_m.gzzal004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_gzza_m.gzzal003,g_gzza_m.gzzal004
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzza015
            CALL ap_ref_array2(g_ref_fields,"SELECT gzoi002 FROM gzoi_t WHERE gzoi001=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzza015_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzza015_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzza008
            CALL ap_ref_array2(g_ref_fields,"SELECT gzzal003 FROM gzzal_t WHERE gzzal001=? AND gzzal002='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_gzza_m.gzza008_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzza008_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzaownid_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzaowndp_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzacrtid_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzacrtdp_desc =  g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzza_m.gzzamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzza_m.gzzamodid_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_gzza_m.gzzamodid_desc
]]>
  </point>
  <section id="azzi900.b_fill" ver="6" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION azzi900_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_gzzc_d.clear()    #g_gzzc_d 單頭及單身 
   CALL g_gzzc2_d.clear()
   CALL g_gzzc4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF azzi900_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE gzzc002,gzzc003,gzzc004,gzzc005,gzzc006,gzzc007  FROM gzzc_t",   
                  " INNER JOIN gzza_t ON gzza001 = gzzc001 ",
 
                  #"",
                  
                  "",
                  
                  " WHERE gzzc001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY gzzc_t.gzzc002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE azzi900_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR azzi900_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_gzza_m.gzza001
                                               
      FOREACH b_fill_cs INTO g_gzzc_d[l_ac].gzzc002,g_gzzc_d[l_ac].gzzc003,g_gzzc_d[l_ac].gzzc004,g_gzzc_d[l_ac].gzzc005, 
          g_gzzc_d[l_ac].gzzc006,g_gzzc_d[l_ac].gzzc007
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF azzi900_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE gzzk002,gzzk003,gzzk004  FROM gzzk_t",   
                  " INNER JOIN gzza_t ON gzza001 = gzzk001 ",
 
                  "",
                  
                  
                  " WHERE gzzk001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY gzzk_t.gzzk002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE azzi900_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR azzi900_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_gzza_m.gzza001
                                               
      FOREACH b_fill_cs2 INTO g_gzzc2_d[l_ac].gzzk002,g_gzzc2_d[l_ac].gzzk003,g_gzzc2_d[l_ac].gzzk004 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF azzi900_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE gzdf002,gzdf003  FROM gzdf_t",   
                  " INNER JOIN gzza_t ON gzza001 = gzdf001 ",
 
                  " LEFT JOIN gzdfl_t ON gzdf002 = gzdfl001 AND gzdfl002 = '",g_lang,"'",
                  
                  
                  " WHERE gzdf001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY gzdf_t.gzdf002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE azzi900_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR azzi900_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_gzza_m.gzza001
                                               
      FOREACH b_fill_cs3 INTO g_gzzc4_d[l_ac].gzdf002,g_gzzc4_d[l_ac].gzdf003
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_gzzc_d.deleteElement(g_gzzc_d.getLength())
   CALL g_gzzc2_d.deleteElement(g_gzzc2_d.getLength())
   CALL g_gzzc4_d.deleteElement(g_gzzc4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE azzi900_pb
   FREE azzi900_pb2
 
   FREE azzi900_pb3
 
 
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION azzi900_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL azzi900_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.browser_fill" ver="6" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi900_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzza_m.* TO NULL
   CALL g_gzzc_d.clear()        
   CALL g_gzzc2_d.clear() 
   CALL g_gzzc4_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "gzza001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE gzza001 ",
                      " FROM gzza_t ",
                      " LEFT JOIN gzzx_t ON gzza001 = gzzx001 ",
                      " LEFT JOIN gzzc_t ON gzza001 = gzzc001 ",
                      " LEFT JOIN gzzk_t ON gzza001 = gzzk001", 
 
                      " LEFT JOIN gzdf_t ON gzza001 = gzdf001", 
 
 
 
                      " LEFT JOIN gzzal_t ON gzza001 = gzzal001 AND gzzal002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzza_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE gzza001 ",
                      " FROM gzza_t ", 
                      "  LEFT JOIN gzzx_t ON gzza001 = gzzx001 ",
                      "  LEFT JOIN gzzal_t ON gzza001 = gzzal001 AND gzzal002 = '",g_lang,"' ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("gzza_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照gzza001,'',gzza015,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT gzzastus,gzza001,'',gzza015,'',t1.gzzal003 ,t2.gzoi002 ",
               " FROM gzza_t ",
               "  LEFT JOIN gzzx_t ON gzza001 = gzzx001 ",
               "  LEFT JOIN gzzc_t ON gzza001 = gzzc001 ",
               "  LEFT JOIN gzzk_t ON gzza001 = gzzk001",
 
               "  LEFT JOIN gzdf_t ON gzza001 = gzdf001",
 
 
 
               "  LEFT JOIN gzzal_t ON gzza001 = gzzal001 AND gzzal002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN gzzal_t t1 ON t1.gzzal001=gzza001 AND t1.gzzal002='"||g_lang||"' ",
               " LEFT JOIN gzoi_t t2 ON t2.gzoi001=gzza015  ",
 
               " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("gzza_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzza001,g_browser[g_cnt].b_gzza001_desc, 
       g_browser[g_cnt].b_gzza015,g_browser[g_cnt].b_gzza015_desc,g_browser[g_cnt].b_gzza001_desc,g_browser[g_cnt].b_gzza015_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION azzi900_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY gzza001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL azzi900_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.construct" ver="12" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi900_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzza_m.* TO NULL
   CALL g_gzzc_d.clear()        
   CALL g_gzzc2_d.clear() 
   CALL g_gzzc4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzza001,gzzal003,gzzal004,gzza003,gzza011,gzza015,gzza008,gzzastus,gzzaownid, 
          gzzaowndp,gzzacrtid,gzzacrtdt,gzzacrtdp,gzzamodid,gzzamoddt,gzza012,gzza013,gzza014,gzza005, 
          gzza007,gzza002,gzza010,gzza009,gzza006,gzzx002,gzzx003,gzzx004,gzzx005,gzzx006
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<gzzacrtdt>>----
         AFTER FIELD gzzacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzamoddt>>----
         AFTER FIELD gzzamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzacnfdt>>----
         
         #----<<gzzapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.gzza001
         ON ACTION controlp INFIELD gzza001
            #add-point:ON ACTION controlp INFIELD gzza001
            {<point name="construct.c.gzza001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza001
            #add-point:BEFORE FIELD gzza001
            {<point name="construct.b.gzza001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza001
            
            #add-point:AFTER FIELD gzza001
            {<point name="construct.a.gzza001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzal003
            #add-point:BEFORE FIELD gzzal003
            {<point name="construct.b.gzzal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzal003
            
            #add-point:AFTER FIELD gzzal003
            {<point name="construct.a.gzzal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzal003
         ON ACTION controlp INFIELD gzzal003
            #add-point:ON ACTION controlp INFIELD gzzal003
            {<point name="construct.c.gzzal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzal004
            #add-point:BEFORE FIELD gzzal004
            {<point name="construct.b.gzzal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzal004
            
            #add-point:AFTER FIELD gzzal004
            {<point name="construct.a.gzzal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzal004
         ON ACTION controlp INFIELD gzzal004
            #add-point:ON ACTION controlp INFIELD gzzal004
            {<point name="construct.c.gzzal004" />}
            #END add-point
 
         #Ctrlp:construct.c.gzza003
         ON ACTION controlp INFIELD gzza003
            #add-point:ON ACTION controlp INFIELD gzza003
            {<point name="construct.c.gzza003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza003
            #add-point:BEFORE FIELD gzza003
            {<point name="construct.b.gzza003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza003
            
            #add-point:AFTER FIELD gzza003
            {<point name="construct.a.gzza003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza011
            #add-point:BEFORE FIELD gzza011
            {<point name="construct.b.gzza011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza011
            
            #add-point:AFTER FIELD gzza011
            {<point name="construct.a.gzza011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza011
         ON ACTION controlp INFIELD gzza011
            #add-point:ON ACTION controlp INFIELD gzza011
            {<point name="construct.c.gzza011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza015
            #add-point:BEFORE FIELD gzza015
            {<point name="construct.b.gzza015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza015
            
            #add-point:AFTER FIELD gzza015
            {<point name="construct.a.gzza015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza015
         ON ACTION controlp INFIELD gzza015
            #add-point:ON ACTION controlp INFIELD gzza015
            {<point name="construct.c.gzza015" />}
            #END add-point
 
         #Ctrlp:construct.c.gzza008
         ON ACTION controlp INFIELD gzza008
            #add-point:ON ACTION controlp INFIELD gzza008
            {<point name="construct.c.gzza008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza008
            #add-point:BEFORE FIELD gzza008
            {<point name="construct.b.gzza008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza008
            
            #add-point:AFTER FIELD gzza008
            {<point name="construct.a.gzza008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzastus
            #add-point:BEFORE FIELD gzzastus
            {<point name="construct.b.gzzastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzastus
            
            #add-point:AFTER FIELD gzzastus
            {<point name="construct.a.gzzastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzastus
         ON ACTION controlp INFIELD gzzastus
            #add-point:ON ACTION controlp INFIELD gzzastus
            {<point name="construct.c.gzzastus" />}
            #END add-point
 
         #Ctrlp:construct.c.gzzaownid
         ON ACTION controlp INFIELD gzzaownid
            #add-point:ON ACTION controlp INFIELD gzzaownid
            {<point name="construct.c.gzzaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzaownid
            #add-point:BEFORE FIELD gzzaownid
            {<point name="construct.b.gzzaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzaownid
            
            #add-point:AFTER FIELD gzzaownid
            {<point name="construct.a.gzzaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzaowndp
         ON ACTION controlp INFIELD gzzaowndp
            #add-point:ON ACTION controlp INFIELD gzzaowndp
            {<point name="construct.c.gzzaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzaowndp
            #add-point:BEFORE FIELD gzzaowndp
            {<point name="construct.b.gzzaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzaowndp
            
            #add-point:AFTER FIELD gzzaowndp
            {<point name="construct.a.gzzaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzacrtid
         ON ACTION controlp INFIELD gzzacrtid
            #add-point:ON ACTION controlp INFIELD gzzacrtid
            {<point name="construct.c.gzzacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzacrtid
            #add-point:BEFORE FIELD gzzacrtid
            {<point name="construct.b.gzzacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzacrtid
            
            #add-point:AFTER FIELD gzzacrtid
            {<point name="construct.a.gzzacrtid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzacrtdt
            #add-point:BEFORE FIELD gzzacrtdt
            {<point name="construct.b.gzzacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.gzzacrtdp
         ON ACTION controlp INFIELD gzzacrtdp
            #add-point:ON ACTION controlp INFIELD gzzacrtdp
            {<point name="construct.c.gzzacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzacrtdp
            #add-point:BEFORE FIELD gzzacrtdp
            {<point name="construct.b.gzzacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzacrtdp
            
            #add-point:AFTER FIELD gzzacrtdp
            {<point name="construct.a.gzzacrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzamodid
         ON ACTION controlp INFIELD gzzamodid
            #add-point:ON ACTION controlp INFIELD gzzamodid
            {<point name="construct.c.gzzamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzamodid
            #add-point:BEFORE FIELD gzzamodid
            {<point name="construct.b.gzzamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzamodid
            
            #add-point:AFTER FIELD gzzamodid
            {<point name="construct.a.gzzamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzamoddt
            #add-point:BEFORE FIELD gzzamoddt
            {<point name="construct.b.gzzamoddt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza012
            #add-point:BEFORE FIELD gzza012
            {<point name="construct.b.gzza012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza012
            
            #add-point:AFTER FIELD gzza012
            {<point name="construct.a.gzza012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza012
         ON ACTION controlp INFIELD gzza012
            #add-point:ON ACTION controlp INFIELD gzza012
            {<point name="construct.c.gzza012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza013
            #add-point:BEFORE FIELD gzza013
            {<point name="construct.b.gzza013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza013
            
            #add-point:AFTER FIELD gzza013
            {<point name="construct.a.gzza013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza013
         ON ACTION controlp INFIELD gzza013
            #add-point:ON ACTION controlp INFIELD gzza013
            {<point name="construct.c.gzza013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza014
            #add-point:BEFORE FIELD gzza014
            {<point name="construct.b.gzza014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza014
            
            #add-point:AFTER FIELD gzza014
            {<point name="construct.a.gzza014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza014
         ON ACTION controlp INFIELD gzza014
            #add-point:ON ACTION controlp INFIELD gzza014
            {<point name="construct.c.gzza014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza005
            #add-point:BEFORE FIELD gzza005
            {<point name="construct.b.gzza005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza005
            
            #add-point:AFTER FIELD gzza005
            {<point name="construct.a.gzza005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza005
         ON ACTION controlp INFIELD gzza005
            #add-point:ON ACTION controlp INFIELD gzza005
            {<point name="construct.c.gzza005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza007
            #add-point:BEFORE FIELD gzza007
            {<point name="construct.b.gzza007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza007
            
            #add-point:AFTER FIELD gzza007
            {<point name="construct.a.gzza007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza007
         ON ACTION controlp INFIELD gzza007
            #add-point:ON ACTION controlp INFIELD gzza007
            {<point name="construct.c.gzza007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza002
            #add-point:BEFORE FIELD gzza002
            {<point name="construct.b.gzza002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza002
            
            #add-point:AFTER FIELD gzza002
            {<point name="construct.a.gzza002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza002
         ON ACTION controlp INFIELD gzza002
            #add-point:ON ACTION controlp INFIELD gzza002
            {<point name="construct.c.gzza002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza010
            #add-point:BEFORE FIELD gzza010
            {<point name="construct.b.gzza010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza010
            
            #add-point:AFTER FIELD gzza010
            {<point name="construct.a.gzza010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza010
         ON ACTION controlp INFIELD gzza010
            #add-point:ON ACTION controlp INFIELD gzza010
            {<point name="construct.c.gzza010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza009
            #add-point:BEFORE FIELD gzza009
            {<point name="construct.b.gzza009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza009
            
            #add-point:AFTER FIELD gzza009
            {<point name="construct.a.gzza009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza009
         ON ACTION controlp INFIELD gzza009
            #add-point:ON ACTION controlp INFIELD gzza009
            {<point name="construct.c.gzza009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza006
            #add-point:BEFORE FIELD gzza006
            {<point name="construct.b.gzza006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza006
            
            #add-point:AFTER FIELD gzza006
            {<point name="construct.a.gzza006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzza006
         ON ACTION controlp INFIELD gzza006
            #add-point:ON ACTION controlp INFIELD gzza006
            {<point name="construct.c.gzza006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx002
            #add-point:BEFORE FIELD gzzx002
            {<point name="construct.b.gzzx002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx002
            
            #add-point:AFTER FIELD gzzx002
            {<point name="construct.a.gzzx002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzx002
         ON ACTION controlp INFIELD gzzx002
            #add-point:ON ACTION controlp INFIELD gzzx002
            {<point name="construct.c.gzzx002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx003
            #add-point:BEFORE FIELD gzzx003
            {<point name="construct.b.gzzx003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx003
            
            #add-point:AFTER FIELD gzzx003
            {<point name="construct.a.gzzx003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzx003
         ON ACTION controlp INFIELD gzzx003
            #add-point:ON ACTION controlp INFIELD gzzx003
            {<point name="construct.c.gzzx003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx004
            #add-point:BEFORE FIELD gzzx004
            {<point name="construct.b.gzzx004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx004
            
            #add-point:AFTER FIELD gzzx004
            {<point name="construct.a.gzzx004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzx004
         ON ACTION controlp INFIELD gzzx004
            #add-point:ON ACTION controlp INFIELD gzzx004
            {<point name="construct.c.gzzx004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx005
            #add-point:BEFORE FIELD gzzx005
            {<point name="construct.b.gzzx005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx005
            
            #add-point:AFTER FIELD gzzx005
            {<point name="construct.a.gzzx005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzx005
         ON ACTION controlp INFIELD gzzx005
            #add-point:ON ACTION controlp INFIELD gzzx005
            {<point name="construct.c.gzzx005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx006
            #add-point:BEFORE FIELD gzzx006
            {<point name="construct.b.gzzx006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx006
            
            #add-point:AFTER FIELD gzzx006
            {<point name="construct.a.gzzx006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzzx006
         ON ACTION controlp INFIELD gzzx006
            #add-point:ON ACTION controlp INFIELD gzzx006
            {<point name="construct.c.gzzx006" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON gzzc002,gzzc003,gzzc004,gzzc005,gzzc006,gzzc007
           FROM s_detail1[1].gzzc002,s_detail1[1].gzzc003,s_detail1[1].gzzc004,s_detail1[1].gzzc005, 
               s_detail1[1].gzzc006,s_detail1[1].gzzc007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD gzzc002
            #add-point:BEFORE FIELD gzzc002
            {<point name="construct.b.page1.gzzc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc002
            
            #add-point:AFTER FIELD gzzc002
            {<point name="construct.a.page1.gzzc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzzc002
         ON ACTION controlp INFIELD gzzc002
            #add-point:ON ACTION controlp INFIELD gzzc002
            {<point name="construct.c.page1.gzzc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc003
            #add-point:BEFORE FIELD gzzc003
            {<point name="construct.b.page1.gzzc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc003
            
            #add-point:AFTER FIELD gzzc003
            {<point name="construct.a.page1.gzzc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzzc003
         ON ACTION controlp INFIELD gzzc003
            #add-point:ON ACTION controlp INFIELD gzzc003
            {<point name="construct.c.page1.gzzc003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc004
            #add-point:BEFORE FIELD gzzc004
            {<point name="construct.b.page1.gzzc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc004
            
            #add-point:AFTER FIELD gzzc004
            {<point name="construct.a.page1.gzzc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzzc004
         ON ACTION controlp INFIELD gzzc004
            #add-point:ON ACTION controlp INFIELD gzzc004
            {<point name="construct.c.page1.gzzc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc005
            #add-point:BEFORE FIELD gzzc005
            {<point name="construct.b.page1.gzzc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc005
            
            #add-point:AFTER FIELD gzzc005
            {<point name="construct.a.page1.gzzc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzzc005
         ON ACTION controlp INFIELD gzzc005
            #add-point:ON ACTION controlp INFIELD gzzc005
            {<point name="construct.c.page1.gzzc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc006
            #add-point:BEFORE FIELD gzzc006
            {<point name="construct.b.page1.gzzc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc006
            
            #add-point:AFTER FIELD gzzc006
            {<point name="construct.a.page1.gzzc006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzzc006
         ON ACTION controlp INFIELD gzzc006
            #add-point:ON ACTION controlp INFIELD gzzc006
            {<point name="construct.c.page1.gzzc006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc007
            #add-point:BEFORE FIELD gzzc007
            {<point name="construct.b.page1.gzzc007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc007
            
            #add-point:AFTER FIELD gzzc007
            {<point name="construct.a.page1.gzzc007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzzc007
         ON ACTION controlp INFIELD gzzc007
            #add-point:ON ACTION controlp INFIELD gzzc007
            {<point name="construct.c.page1.gzzc007" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON gzzk002,gzzk003,gzzk004
           FROM s_detail2[1].gzzk002,s_detail2[1].gzzk003,s_detail2[1].gzzk004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD gzzk002
            #add-point:BEFORE FIELD gzzk002
            {<point name="construct.b.page2.gzzk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzk002
            
            #add-point:AFTER FIELD gzzk002
            {<point name="construct.a.page2.gzzk002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzzk002
         ON ACTION controlp INFIELD gzzk002
            #add-point:ON ACTION controlp INFIELD gzzk002
            {<point name="construct.c.page2.gzzk002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzk003
            #add-point:BEFORE FIELD gzzk003
            {<point name="construct.b.page2.gzzk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzk003
            
            #add-point:AFTER FIELD gzzk003
            {<point name="construct.a.page2.gzzk003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzzk003
         ON ACTION controlp INFIELD gzzk003
            #add-point:ON ACTION controlp INFIELD gzzk003
            {<point name="construct.c.page2.gzzk003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzk004
            #add-point:BEFORE FIELD gzzk004
            {<point name="construct.b.page2.gzzk004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzk004
            
            #add-point:AFTER FIELD gzzk004
            {<point name="construct.a.page2.gzzk004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzzk004
         ON ACTION controlp INFIELD gzzk004
            #add-point:ON ACTION controlp INFIELD gzzk004
            {<point name="construct.c.page2.gzzk004" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON gzdf002,gzdfl003,gzdf003
           FROM s_detail4[1].gzdf002,s_detail4[1].gzdfl003,s_detail4[1].gzdf003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD gzdf002
            #add-point:BEFORE FIELD gzdf002
            {<point name="construct.b.page4.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf002
            
            #add-point:AFTER FIELD gzdf002
            {<point name="construct.a.page4.gzdf002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.gzdf002
         ON ACTION controlp INFIELD gzdf002
            #add-point:ON ACTION controlp INFIELD gzdf002
            {<point name="construct.c.page4.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdfl003
            #add-point:BEFORE FIELD gzdfl003
            {<point name="construct.b.page4.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdfl003
            
            #add-point:AFTER FIELD gzdfl003
            {<point name="construct.a.page4.gzdfl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.gzdfl003
         ON ACTION controlp INFIELD gzdfl003
            #add-point:ON ACTION controlp INFIELD gzdfl003
            {<point name="construct.c.page4.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdf003
            #add-point:BEFORE FIELD gzdf003
            {<point name="construct.b.page4.gzdf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf003
            
            #add-point:AFTER FIELD gzdf003
            {<point name="construct.a.page4.gzdf003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.gzdf003
         ON ACTION controlp INFIELD gzdf003
            #add-point:ON ACTION controlp INFIELD gzdf003
            {<point name="construct.c.page4.gzdf003" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi900_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzza001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.delete" ver="18" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION azzi900_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_gzza_m.gzza001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_master_multi_table_t.gzzal001 = g_gzza_m.gzza001
LET g_master_multi_table_t.gzzal003 = g_gzza_m.gzzal003
LET g_master_multi_table_t.gzzal004 = g_gzza_m.gzzal004
 
 
   CALL azzi900_show()
   
   CALL s_transaction_begin()
 
   OPEN azzi900_cl USING g_gzza_m.gzza001
   IF STATUS THEN
      CALL cl_err("OPEN azzi900_cl:", STATUS, 1)
      CLOSE azzi900_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi900_master_referesh USING g_gzza_m.gzza001 INTO g_gzza_m.gzza001,g_gzza_m.gzza003,g_gzza_m.gzza011, 
       g_gzza_m.gzza015,g_gzza_m.gzza008,g_gzza_m.gzzastus,g_gzza_m.gzzaownid,g_gzza_m.gzzaowndp,g_gzza_m.gzzacrtid, 
       g_gzza_m.gzzacrtdt,g_gzza_m.gzzacrtdp,g_gzza_m.gzzamodid,g_gzza_m.gzzamoddt,g_gzza_m.gzza012, 
       g_gzza_m.gzza013,g_gzza_m.gzza014,g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza004, 
       g_gzza_m.gzza010,g_gzza_m.gzza009,g_gzza_m.gzza006,g_gzza_m.gzza016,g_gzza_m.gzza015_desc,g_gzza_m.gzza008_desc, 
       g_gzza_m.gzzaownid_desc,g_gzza_m.gzzaowndp_desc,g_gzza_m.gzzacrtid_desc,g_gzza_m.gzzacrtdp_desc, 
       g_gzza_m.gzzamodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzza_m.gzza001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi900_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_gzza001_t = g_gzza_m.gzza001
 
 
      DELETE FROM gzza_t
       WHERE  gzza001 = g_gzza_m.gzza001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_gzza_m.gzza001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzzc_t
       WHERE  gzzc001 = g_gzza_m.gzza001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzzc_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
                     CALL azzi900_gzzx_t('d')      
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM gzzk_t
       WHERE 
             gzzk001 = g_gzza_m.gzza001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzzk_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM gzdf_t
       WHERE 
             gzdf001 = g_gzza_m.gzza001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzdf_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_gzzc_d.clear() 
      CALL g_gzzc2_d.clear()       
      CALL g_gzzc4_d.clear()       
 
     
      #CALL azzi900_ui_browser_refresh()  
      CALL azzi900_ui_headershow()  
      CALL azzi900_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL azzi900_browser_fill("")
         CALL azzi900_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL azzi900_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzzal001
   LET l_field_keys[01] = 'gzzal001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'gzzal002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzzal_t')
 
      
      #單身多語言刪除
      
      
 
      INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'gzdfl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.gzdfl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzdfl_t')
 
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE azzi900_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzza_m.gzza001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="azzi900.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi900_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM gzzc_t
       WHERE 
         gzzc001 = ps_keys_bak[1] AND gzzc002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM gzzk_t
       WHERE 
         gzzk001 = ps_keys_bak[1] AND gzzk002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzzk_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM gzdf_t
       WHERE 
         gzdf001 = ps_keys_bak[1] AND gzdf002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzdf_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.description" ver="65" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000839
#+ 
#+ Filename...: azzi900
#+ Description: 程式基本資料設定作業
#+ Creator....: s003(2014/04/24)
#+ Modifier...: 01856(2014/06/27)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="azzi900.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION azzi900_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzzc_t.*
   DEFINE l_detail2    RECORD LIKE gzzk_t.*
 
   DEFINE l_detail3    RECORD LIKE gzdf_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi900_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi900_detail AS ",
                "SELECT * FROM gzzc_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi900_detail SELECT * FROM gzzc_t 
                                         WHERE  gzzc001 = g_gzza001_t
 
   
   #將key修正為調整後   
   UPDATE azzi900_detail 
      #更新key欄位
      SET gzzc001 = g_gzza_m.gzza001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO gzzc_t SELECT * FROM azzi900_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi900_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE azzi900_detail AS ",
      "SELECT * FROM gzzk_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi900_detail SELECT * FROM gzzk_t
                                         WHERE  gzzk001 = g_gzza001_t
 
 
   #將key修正為調整後   
   UPDATE azzi900_detail SET gzzk001 = g_gzza_m.gzza001
 
  
   #將資料塞回原table   
   INSERT INTO gzzk_t SELECT * FROM azzi900_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi900_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE azzi900_detail AS ",
      "SELECT * FROM gzdf_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi900_detail SELECT * FROM gzdf_t
                                         WHERE  gzdf001 = g_gzza001_t
 
 
   #將key修正為調整後   
   UPDATE azzi900_detail SET gzdf001 = g_gzza_m.gzza001
 
  
   #將資料塞回原table   
   INSERT INTO gzdf_t SELECT * FROM azzi900_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi900_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #此段落由子樣板a38產生
   DROP TABLE azzi900_detail_lang
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi900_detail_lang AS ",
                "SELECT * FROM gzdfl_t "
   PREPARE repro_gzdfl_t FROM ls_sql
   EXECUTE repro_gzdfl_t
   FREE repro_gzdfl_t
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi900_detail_lang SELECT * FROM gzdfl_t 
                                             WHERE  gzdfl001 = g_gzza001_t
 
   
   #將key修正為調整後   
   UPDATE azzi900_detail_lang 
      #更新key欄位
      SET gzdfl001 = g_gzza_m.gzza001
 
  
   #將資料塞回原table   
   INSERT INTO gzdfl_t SELECT * FROM azzi900_detail_lang
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi900_detail_lang
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzza001_t = g_gzza_m.gzza001
 
   
   DROP TABLE azzi900_detail
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.detail_show" ver="4" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION azzi900_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.fetch" ver="11" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi900_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzza_m.gzza001 = g_browser[g_current_idx].b_gzza001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi900_master_referesh USING g_gzza_m.gzza001 INTO g_gzza_m.gzza001,g_gzza_m.gzza003,g_gzza_m.gzza011, 
       g_gzza_m.gzza015,g_gzza_m.gzza008,g_gzza_m.gzzastus,g_gzza_m.gzzaownid,g_gzza_m.gzzaowndp,g_gzza_m.gzzacrtid, 
       g_gzza_m.gzzacrtdt,g_gzza_m.gzzacrtdp,g_gzza_m.gzzamodid,g_gzza_m.gzzamoddt,g_gzza_m.gzza012, 
       g_gzza_m.gzza013,g_gzza_m.gzza014,g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza004, 
       g_gzza_m.gzza010,g_gzza_m.gzza009,g_gzza_m.gzza006,g_gzza_m.gzza016,g_gzza_m.gzza015_desc,g_gzza_m.gzza008_desc, 
       g_gzza_m.gzzaownid_desc,g_gzza_m.gzzaowndp_desc,g_gzza_m.gzzacrtid_desc,g_gzza_m.gzzacrtdp_desc, 
       g_gzza_m.gzzamodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzza_t",SQLCA.sqlcode,1)
      INITIALIZE g_gzza_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
                  CALL azzi900_gzzx_t('s')
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_gzza_m_t.* = g_gzza_m.*
   LET g_gzza_m_o.* = g_gzza_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL azzi900_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION azzi900_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.filter" ver="6" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION azzi900_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gzza001,gzza015
                          FROM s_browse[1].b_gzza001,s_browse[1].b_gzza015
 
         BEFORE CONSTRUCT
               DISPLAY azzi900_filter_parser('gzza001') TO s_browse[1].b_gzza001
            DISPLAY azzi900_filter_parser('gzza015') TO s_browse[1].b_gzza015
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL azzi900_filter_show('gzza001')
   CALL azzi900_filter_show('gzza015')
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.filter_parser" ver="2" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi900_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.filter_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION azzi900_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = azzi900_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.global" ver="21" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzza_m        RECORD
       gzza001 LIKE gzza_t.gzza001, 
   gzzal003 LIKE gzzal_t.gzzal003, 
   gzzal004 LIKE gzzal_t.gzzal004, 
   gzza003 LIKE gzza_t.gzza003, 
   gzza011 LIKE gzza_t.gzza011, 
   gzza015 LIKE gzza_t.gzza015, 
   gzza015_desc LIKE type_t.chr80, 
   gzza008 LIKE gzza_t.gzza008, 
   gzza008_desc LIKE type_t.chr80, 
   gzzastus LIKE gzza_t.gzzastus, 
   gzzaownid LIKE gzza_t.gzzaownid, 
   gzzaownid_desc LIKE type_t.chr80, 
   gzzaowndp LIKE gzza_t.gzzaowndp, 
   gzzaowndp_desc LIKE type_t.chr80, 
   gzzacrtid LIKE gzza_t.gzzacrtid, 
   gzzacrtid_desc LIKE type_t.chr80, 
   gzzacrtdt DATETIME YEAR TO SECOND, 
   gzzacrtdp LIKE gzza_t.gzzacrtdp, 
   gzzacrtdp_desc LIKE type_t.chr80, 
   gzzamodid LIKE gzza_t.gzzamodid, 
   gzzamodid_desc LIKE type_t.chr80, 
   gzzamoddt DATETIME YEAR TO SECOND, 
   gzza012 LIKE gzza_t.gzza012, 
   gzza013 LIKE gzza_t.gzza013, 
   gzza014 LIKE gzza_t.gzza014, 
   gzza005 LIKE gzza_t.gzza005, 
   gzza007 LIKE gzza_t.gzza007, 
   gzza002 LIKE gzza_t.gzza002, 
   gzza004 LIKE gzza_t.gzza004, 
   gzza010 LIKE gzza_t.gzza010, 
   gzza009 LIKE gzza_t.gzza009, 
   gzza006 LIKE gzza_t.gzza006, 
   gzza016 LIKE gzza_t.gzza016, 
   gzzx002 LIKE gzzx_t.gzzx002, 
   gzzx003 LIKE gzzx_t.gzzx003, 
   gzzx004 LIKE gzzx_t.gzzx004, 
   gzzx005 LIKE gzzx_t.gzzx005, 
   gzzx006 LIKE gzzx_t.gzzx006
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzzc_d        RECORD
       gzzc002 LIKE gzzc_t.gzzc002, 
   gzzc003 LIKE gzzc_t.gzzc003, 
   gzzc004 LIKE gzzc_t.gzzc004, 
   gzzc005 LIKE gzzc_t.gzzc005, 
   gzzc006 LIKE gzzc_t.gzzc006, 
   gzzc007 LIKE gzzc_t.gzzc007
       END RECORD
PRIVATE TYPE type_g_gzzc2_d RECORD
       gzzk002 LIKE gzzk_t.gzzk002, 
   gzzk003 LIKE gzzk_t.gzzk003, 
   gzzk004 LIKE gzzk_t.gzzk004
       END RECORD
PRIVATE TYPE type_g_gzzc4_d RECORD
       gzdf002 LIKE gzdf_t.gzdf002, 
   gzdfl003 LIKE gzdfl_t.gzdfl003, 
   gzdf003 LIKE gzdf_t.gzdf003
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_gzza_m          type_g_gzza_m
DEFINE g_gzza_m_t        type_g_gzza_m
DEFINE g_gzza_m_o        type_g_gzza_m
 
   DEFINE g_gzza001_t LIKE gzza_t.gzza001
 
 
DEFINE g_gzzc_d          DYNAMIC ARRAY OF type_g_gzzc_d
DEFINE g_gzzc_d_t        type_g_gzzc_d
DEFINE g_gzzc_d_o        type_g_gzzc_d
DEFINE g_gzzc2_d   DYNAMIC ARRAY OF type_g_gzzc2_d
DEFINE g_gzzc2_d_t type_g_gzzc2_d
DEFINE g_gzzc2_d_o type_g_gzzc2_d
DEFINE g_gzzc4_d   DYNAMIC ARRAY OF type_g_gzzc4_d
DEFINE g_gzzc4_d_t type_g_gzzc4_d
DEFINE g_gzzc4_d_o type_g_gzzc4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzza001 LIKE gzza_t.gzza001,
   b_gzza001_desc LIKE type_t.chr80,
      b_gzza015 LIKE gzza_t.gzza015,
   b_gzza015_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_gzza001 LIKE gzza_t.gzza001,
   b_gzza001_desc LIKE type_t.chr80,
      b_gzza015 LIKE gzza_t.gzza015,
   b_gzza015_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      gzzal001 LIKE gzzal_t.gzzal001,
      gzzal003 LIKE gzzal_t.gzzal003,
      gzzal004 LIKE gzzal_t.gzzal004
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      gzdfl001 LIKE gzdfl_t.gzdfl001,
      gzdfl002 LIKE gzdfl_t.gzdfl002,
      gzdfl003 LIKE gzdfl_t.gzdfl003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="azzi900.idx_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION azzi900_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gzzc_d.getLength() THEN
         LET g_detail_idx = g_gzzc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzzc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzzc_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_gzzc2_d.getLength() THEN
         LET g_detail_idx = g_gzzc2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzzc2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzzc2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_gzzc4_d.getLength() THEN
         LET g_detail_idx = g_gzzc4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzzc4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzzc4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.init" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi900_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('gzzastus','17','N,Y')
 
      CALL cl_set_combo_scc('gzza012','96') 
   CALL cl_set_combo_scc('gzza013','95') 
   CALL cl_set_combo_scc('gzza005','96') 
   CALL cl_set_combo_scc('gzza002','99') 
   CALL cl_set_combo_scc('gzzc004','81') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL azzi900_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="azzi900.input" ver="9" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi900_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzzc002,gzzc003,gzzc004,gzzc005,gzzc006,gzzc007 FROM gzzc_t WHERE gzzc001=?  
       AND gzzc002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi900_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT gzzk002,gzzk003,gzzk004 FROM gzzk_t WHERE gzzk001=? AND gzzk002=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi900_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT gzdf002,gzdf003 FROM gzdf_t WHERE gzdf001=? AND gzdf002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi900_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi900_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi900_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gzza_m.gzza001,g_gzza_m.gzzal003,g_gzza_m.gzzal004,g_gzza_m.gzza003,g_gzza_m.gzza011, 
       g_gzza_m.gzza015,g_gzza_m.gzza008,g_gzza_m.gzzastus,g_gzza_m.gzza012,g_gzza_m.gzza013,g_gzza_m.gzza014, 
       g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza010,g_gzza_m.gzza009,g_gzza_m.gzza006, 
       g_gzza_m.gzzx002,g_gzza_m.gzzx003,g_gzza_m.gzzx004,g_gzza_m.gzzx005,g_gzza_m.gzzx006
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="azzi900.input.body" ver="9" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzzc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzzc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi900_b_fill()
            LET g_rec_b = g_gzzc_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi900_cl USING g_gzza_m.gzza001
            IF STATUS THEN
               CALL cl_err("OPEN azzi900_cl:", STATUS, 1)
               CLOSE azzi900_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzzc_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzzc_d[l_ac].gzzc002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzzc_d_t.* = g_gzzc_d[l_ac].*  #BACKUP
               LET g_gzzc_d_o.* = g_gzzc_d[l_ac].*  #BACKUP
               CALL azzi900_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL azzi900_set_no_entry_b(l_cmd)
               IF NOT azzi900_lock_b("gzzc_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi900_bcl INTO g_gzzc_d[l_ac].gzzc002,g_gzzc_d[l_ac].gzzc003,g_gzzc_d[l_ac].gzzc004, 
                      g_gzzc_d[l_ac].gzzc005,g_gzzc_d[l_ac].gzzc006,g_gzzc_d[l_ac].gzzc007
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_gzzc_d_t.gzzc002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL azzi900_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzzc_d[l_ac].* TO NULL 
            INITIALIZE g_gzzc_d_t.* TO NULL 
            INITIALIZE g_gzzc_d_o.* TO NULL 
            
            LET g_gzzc_d_t.* = g_gzzc_d[l_ac].*     #新輸入資料
            LET g_gzzc_d_o.* = g_gzzc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi900_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi900_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzzc_d[li_reproduce_target].* = g_gzzc_d[li_reproduce].*
 
               LET g_gzzc_d[li_reproduce_target].gzzc002 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzzc_t 
             WHERE  gzzc001 = g_gzza_m.gzza001
 
               AND gzzc002 = g_gzzc_d[l_ac].gzzc002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys[2] = g_gzzc_d[g_detail_idx].gzzc002
               CALL azzi900_insert_b('gzzc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzzc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzzc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi900_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzzc_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzzc_d.deleteElement(l_ac)
               NEXT FIELD gzzc002
            END IF
         
            IF g_gzzc_d[l_ac].gzzc002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM gzzc_t
                WHERE  gzzc001 = g_gzza_m.gzza001 AND
 
                      gzzc002 = g_gzzc_d_t.gzzc002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzzc_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi900_bcl
               LET l_count = g_gzzc_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys[2] = g_gzzc_d[g_detail_idx].gzzc002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL azzi900_delete_b('gzzc_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzzc002
            #add-point:BEFORE FIELD gzzc002
            {<point name="input.b.page1.gzzc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc002
            
            #add-point:AFTER FIELD gzzc002
            {<point name="input.a.page1.gzzc002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzc002
            #add-point:ON CHANGE gzzc002
            {<point name="input.g.page1.gzzc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc003
            #add-point:BEFORE FIELD gzzc003
            {<point name="input.b.page1.gzzc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc003
            
            #add-point:AFTER FIELD gzzc003
            {<point name="input.a.page1.gzzc003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzc003
            #add-point:ON CHANGE gzzc003
            {<point name="input.g.page1.gzzc003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc004
            #add-point:BEFORE FIELD gzzc004
            {<point name="input.b.page1.gzzc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc004
            
            #add-point:AFTER FIELD gzzc004
            {<point name="input.a.page1.gzzc004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzc004
            #add-point:ON CHANGE gzzc004
            {<point name="input.g.page1.gzzc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc005
            #add-point:BEFORE FIELD gzzc005
            {<point name="input.b.page1.gzzc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc005
            
            #add-point:AFTER FIELD gzzc005
            {<point name="input.a.page1.gzzc005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzc005
            #add-point:ON CHANGE gzzc005
            {<point name="input.g.page1.gzzc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc006
            #add-point:BEFORE FIELD gzzc006
            {<point name="input.b.page1.gzzc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc006
            
            #add-point:AFTER FIELD gzzc006
            {<point name="input.a.page1.gzzc006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzc006
            #add-point:ON CHANGE gzzc006
            {<point name="input.g.page1.gzzc006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzc007
            #add-point:BEFORE FIELD gzzc007
            {<point name="input.b.page1.gzzc007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzc007
            
            #add-point:AFTER FIELD gzzc007
            {<point name="input.a.page1.gzzc007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzc007
            #add-point:ON CHANGE gzzc007
            {<point name="input.g.page1.gzzc007" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.gzzc002
         ON ACTION controlp INFIELD gzzc002
            #add-point:ON ACTION controlp INFIELD gzzc002
            {<point name="input.c.page1.gzzc002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzzc003
         ON ACTION controlp INFIELD gzzc003
            #add-point:ON ACTION controlp INFIELD gzzc003
            {<point name="input.c.page1.gzzc003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzzc004
         ON ACTION controlp INFIELD gzzc004
            #add-point:ON ACTION controlp INFIELD gzzc004
            {<point name="input.c.page1.gzzc004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzzc005
         ON ACTION controlp INFIELD gzzc005
            #add-point:ON ACTION controlp INFIELD gzzc005
            {<point name="input.c.page1.gzzc005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzzc006
         ON ACTION controlp INFIELD gzzc006
            #add-point:ON ACTION controlp INFIELD gzzc006
            {<point name="input.c.page1.gzzc006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzzc007
         ON ACTION controlp INFIELD gzzc007
            #add-point:ON ACTION controlp INFIELD gzzc007
            {<point name="input.c.page1.gzzc007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzzc_d[l_ac].* = g_gzzc_d_t.*
               CLOSE azzi900_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_gzzc_d[l_ac].gzzc002,-263,1)
               LET g_gzzc_d[l_ac].* = g_gzzc_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE gzzc_t SET (gzzc001,gzzc002,gzzc003,gzzc004,gzzc005,gzzc006,gzzc007) = (g_gzza_m.gzza001, 
                   g_gzzc_d[l_ac].gzzc002,g_gzzc_d[l_ac].gzzc003,g_gzzc_d[l_ac].gzzc004,g_gzzc_d[l_ac].gzzc005, 
                   g_gzzc_d[l_ac].gzzc006,g_gzzc_d[l_ac].gzzc007)
                WHERE  gzzc001 = g_gzza_m.gzza001 
 
                  AND gzzc002 = g_gzzc_d_t.gzzc002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzzc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_gzzc_d[l_ac].* = g_gzzc_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzzc_t",SQLCA.sqlcode,1)
                     LET g_gzzc_d[l_ac].* = g_gzzc_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys_bak[1] = g_gzza001_t
               LET gs_keys[2] = g_gzzc_d[g_detail_idx].gzzc002
               LET gs_keys_bak[2] = g_gzzc_d_t.gzzc002
               CALL azzi900_update_b('gzzc_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_gzza_m),util.JSON.stringify(g_gzzc_d_t)
               LET g_log2 = util.JSON.stringify(g_gzza_m),util.JSON.stringify(g_gzzc_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL azzi900_unlock_b("gzzc_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzzc_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzzc_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_gzzc2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page2.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzzc2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi900_b_fill()
            LET g_rec_b = g_gzzc2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzzc2_d[l_ac].* TO NULL 
            INITIALIZE g_gzzc2_d_t.* TO NULL 
            INITIALIZE g_gzzc2_d_o.* TO NULL 
            
            LET g_gzzc2_d_t.* = g_gzzc2_d[l_ac].*     #新輸入資料
            LET g_gzzc2_d_o.* = g_gzzc2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi900_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi900_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzzc2_d[li_reproduce_target].* = g_gzzc2_d[li_reproduce].*
 
               LET g_gzzc2_d[li_reproduce_target].gzzk002 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi900_cl USING g_gzza_m.gzza001
            IF STATUS THEN
               CALL cl_err("OPEN azzi900_cl:", STATUS, 1)
               CLOSE azzi900_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzzc2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzzc2_d[l_ac].gzzk002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_gzzc2_d_t.* = g_gzzc2_d[l_ac].*  #BACKUP
               LET g_gzzc2_d_o.* = g_gzzc2_d[l_ac].*  #BACKUP
               CALL azzi900_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL azzi900_set_no_entry_b(l_cmd)
               IF NOT azzi900_lock_b("gzzk_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi900_bcl2 INTO g_gzzc2_d[l_ac].gzzk002,g_gzzc2_d[l_ac].gzzk003,g_gzzc2_d[l_ac].gzzk004 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL azzi900_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzzc2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzzc2_d.deleteElement(l_ac)
               NEXT FIELD gzzk002
            END IF
         
            IF g_gzzc2_d[l_ac].gzzk002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM gzzk_t
                WHERE  gzzk001 = g_gzza_m.gzza001 AND
                      gzzk002 = g_gzzc2_d_t.gzzk002
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzzc_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi900_bcl
               LET l_count = g_gzzc_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys[2] = g_gzzc2_d[g_detail_idx].gzzk002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL azzi900_delete_b('gzzk_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzzk_t 
             WHERE  gzzk001 = g_gzza_m.gzza001
               AND gzzk002 = g_gzzc2_d[l_ac].gzzk002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys[2] = g_gzzc2_d[g_detail_idx].gzzk002
               CALL azzi900_insert_b('gzzk_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzzc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzzk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi900_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzzc2_d[l_ac].* = g_gzzc2_d_t.*
               CLOSE azzi900_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_gzzc2_d[l_ac].* = g_gzzc2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE gzzk_t SET (gzzk001,gzzk002,gzzk003,gzzk004) = (g_gzza_m.gzza001,g_gzzc2_d[l_ac].gzzk002, 
                   g_gzzc2_d[l_ac].gzzk003,g_gzzc2_d[l_ac].gzzk004) #自訂欄位頁簽
                WHERE  gzzk001 = g_gzza_m.gzza001
                  AND gzzk002 = g_gzzc2_d_t.gzzk002 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzzk_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_gzzc2_d[l_ac].* = g_gzzc2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzzk_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_gzzc2_d[l_ac].* = g_gzzc2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys_bak[1] = g_gzza001_t
               LET gs_keys[2] = g_gzzc2_d[g_detail_idx].gzzk002
               LET gs_keys_bak[2] = g_gzzc2_d_t.gzzk002
               CALL azzi900_update_b('gzzk_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_gzza_m),util.JSON.stringify(g_gzzc2_d_t)
               LET g_log2 = util.JSON.stringify(g_gzza_m),util.JSON.stringify(g_gzzc2_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD gzzk002
            #add-point:BEFORE FIELD gzzk002
            {<point name="input.b.page2.gzzk002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzk002
            
            #add-point:AFTER FIELD gzzk002
            {<point name="input.a.page2.gzzk002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzk002
            #add-point:ON CHANGE gzzk002
            {<point name="input.g.page2.gzzk002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzk003
            #add-point:BEFORE FIELD gzzk003
            {<point name="input.b.page2.gzzk003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzk003
            
            #add-point:AFTER FIELD gzzk003
            {<point name="input.a.page2.gzzk003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzk003
            #add-point:ON CHANGE gzzk003
            {<point name="input.g.page2.gzzk003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzk004
            #add-point:BEFORE FIELD gzzk004
            {<point name="input.b.page2.gzzk004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzk004
            
            #add-point:AFTER FIELD gzzk004
            {<point name="input.a.page2.gzzk004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzk004
            #add-point:ON CHANGE gzzk004
            {<point name="input.g.page2.gzzk004" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.gzzk002
         ON ACTION controlp INFIELD gzzk002
            #add-point:ON ACTION controlp INFIELD gzzk002
            {<point name="input.c.page2.gzzk002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzzk003
         ON ACTION controlp INFIELD gzzk003
            #add-point:ON ACTION controlp INFIELD gzzk003
            {<point name="input.c.page2.gzzk003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzzk004
         ON ACTION controlp INFIELD gzzk004
            #add-point:ON ACTION controlp INFIELD gzzk004
            {<point name="input.c.page2.gzzk004" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzzc2_d[l_ac].* = g_gzzc2_d_t.*
               END IF
               CLOSE azzi900_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL azzi900_unlock_b("gzzk_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_gzzc2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzzc2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_gzzc4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page3.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzzc4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi900_b_fill()
            LET g_rec_b = g_gzzc4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzzc4_d[l_ac].* TO NULL 
            INITIALIZE g_gzzc4_d_t.* TO NULL 
            INITIALIZE g_gzzc4_d_o.* TO NULL 
                  LET g_gzzc4_d[l_ac].gzdf003 = "N"
 
            LET g_gzzc4_d_t.* = g_gzzc4_d[l_ac].*     #新輸入資料
            LET g_gzzc4_d_o.* = g_gzzc4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi900_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi900_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzzc4_d[li_reproduce_target].* = g_gzzc4_d[li_reproduce].*
 
               LET g_gzzc4_d[li_reproduce_target].gzdf002 = NULL
            END IF
            #公用欄位給值(單身3)
            
            LET g_detail_multi_table_t.gzdfl001 = g_gzzc4_d[l_ac].gzdf002
LET g_detail_multi_table_t.gzdfl002 = g_dlang
LET g_detail_multi_table_t.gzdfl003 = g_gzzc4_d[l_ac].gzdfl003
 
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi900_cl USING g_gzza_m.gzza001
            IF STATUS THEN
               CALL cl_err("OPEN azzi900_cl:", STATUS, 1)
               CLOSE azzi900_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzzc4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzzc4_d[l_ac].gzdf002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_gzzc4_d_t.* = g_gzzc4_d[l_ac].*  #BACKUP
               LET g_gzzc4_d_o.* = g_gzzc4_d[l_ac].*  #BACKUP
               CALL azzi900_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL azzi900_set_no_entry_b(l_cmd)
               IF NOT azzi900_lock_b("gzdf_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi900_bcl3 INTO g_gzzc4_d[l_ac].gzdf002,g_gzzc4_d[l_ac].gzdf003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL azzi900_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.gzdfl001 = g_gzzc4_d[l_ac].gzdf002
LET g_detail_multi_table_t.gzdfl002 = g_dlang
LET g_detail_multi_table_t.gzdfl003 = g_gzzc4_d[l_ac].gzdfl003
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'gzdfl001'
            LET l_var_keys[01] = g_gzzc4_d[l_ac].gzdf002
            LET l_field_keys[02] = 'gzdfl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'gzdfl_t') THEN
               RETURN 
            END IF 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzzc4_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzzc4_d.deleteElement(l_ac)
               NEXT FIELD gzdf002
            END IF
         
            IF g_gzzc4_d[l_ac].gzdf002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM gzdf_t
                WHERE  gzdf001 = g_gzza_m.gzza001 AND
                      gzdf002 = g_gzzc4_d_t.gzdf002
                  
               #add-point:單身3刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzzc_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE azzi900_bcl
               LET l_count = g_gzzc_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys[2] = g_gzzc4_d[g_detail_idx].gzdf002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL azzi900_delete_b('gzdf_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzdf_t 
             WHERE  gzdf001 = g_gzza_m.gzza001
               AND gzdf002 = g_gzzc4_d[l_ac].gzdf002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys[2] = g_gzzc4_d[g_detail_idx].gzdf002
               CALL azzi900_insert_b('gzdf_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_gzzc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("gzdf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi900_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzzc4_d[l_ac].gzdf002 = g_detail_multi_table_t.gzdfl001 AND
         g_gzzc4_d[l_ac].gzdfl003 = g_detail_multi_table_t.gzdfl003 THEN
         ELSE 
            LET l_var_keys[01] = g_gzzc4_d[l_ac].gzdf002
            LET l_field_keys[01] = 'gzdfl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzdfl002'
            LET l_vars[01] = g_gzzc4_d[l_ac].gzdfl003
            LET l_fields[01] = 'gzdfl003'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzdfl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzdfl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzdfl_t')
         END IF 
 
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_gzzc4_d[l_ac].* = g_gzzc4_d_t.*
               CLOSE azzi900_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_gzzc4_d[l_ac].* = g_gzzc4_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE gzdf_t SET (gzdf001,gzdf002,gzdf003) = (g_gzza_m.gzza001,g_gzzc4_d[l_ac].gzdf002, 
                   g_gzzc4_d[l_ac].gzdf003) #自訂欄位頁簽
                WHERE  gzdf001 = g_gzza_m.gzza001
                  AND gzdf002 = g_gzzc4_d_t.gzdf002 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzdf_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_gzzc4_d[l_ac].* = g_gzzc4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzdf_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_gzzc4_d[l_ac].* = g_gzzc4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzza_m.gzza001
               LET gs_keys_bak[1] = g_gzza001_t
               LET gs_keys[2] = g_gzzc4_d[g_detail_idx].gzdf002
               LET gs_keys_bak[2] = g_gzzc4_d_t.gzdf002
               CALL azzi900_update_b('gzdf_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_gzzc4_d[l_ac].gzdf002 = g_detail_multi_table_t.gzdfl001 AND
         g_gzzc4_d[l_ac].gzdfl003 = g_detail_multi_table_t.gzdfl003 THEN
         ELSE 
            LET l_var_keys[01] = g_gzzc4_d[l_ac].gzdf002
            LET l_field_keys[01] = 'gzdfl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzdfl002'
            LET l_vars[01] = g_gzzc4_d[l_ac].gzdfl003
            LET l_fields[01] = 'gzdfl003'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.gzdfl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.gzdfl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzdfl_t')
         END IF 
 
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_gzza_m),util.JSON.stringify(g_gzzc4_d_t)
               LET g_log2 = util.JSON.stringify(g_gzza_m),util.JSON.stringify(g_gzzc4_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD gzdf002
            #add-point:BEFORE FIELD gzdf002
            {<point name="input.b.page4.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf002
            
            #add-point:AFTER FIELD gzdf002
            {<point name="input.a.page4.gzdf002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdf002
            #add-point:ON CHANGE gzdf002
            {<point name="input.g.page4.gzdf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdfl003
            #add-point:BEFORE FIELD gzdfl003
            {<point name="input.b.page4.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdfl003
            
            #add-point:AFTER FIELD gzdfl003
            {<point name="input.a.page4.gzdfl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdfl003
            #add-point:ON CHANGE gzdfl003
            {<point name="input.g.page4.gzdfl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzdf003
            #add-point:BEFORE FIELD gzdf003
            {<point name="input.b.page4.gzdf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzdf003
            
            #add-point:AFTER FIELD gzdf003
            {<point name="input.a.page4.gzdf003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzdf003
            #add-point:ON CHANGE gzdf003
            {<point name="input.g.page4.gzdf003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page4.gzdf002
         ON ACTION controlp INFIELD gzdf002
            #add-point:ON ACTION controlp INFIELD gzdf002
            {<point name="input.c.page4.gzdf002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.gzdfl003
         ON ACTION controlp INFIELD gzdfl003
            #add-point:ON ACTION controlp INFIELD gzdfl003
            {<point name="input.c.page4.gzdfl003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.gzdf003
         ON ACTION controlp INFIELD gzdf003
            #add-point:ON ACTION controlp INFIELD gzdf003
            {<point name="input.c.page4.gzdf003" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzzc4_d[l_ac].* = g_gzzc4_d_t.*
               END IF
               CLOSE azzi900_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            CALL cl_multitable_unlock()
            CALL azzi900_unlock_b("gzdf_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_gzzc4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzzc4_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="azzi900.input.head" ver="14" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_gzza_m.gzza001,g_gzza_m.gzzal003,g_gzza_m.gzzal004,g_gzza_m.gzza003,g_gzza_m.gzza011, 
          g_gzza_m.gzza015,g_gzza_m.gzza008,g_gzza_m.gzzastus,g_gzza_m.gzza012,g_gzza_m.gzza013,g_gzza_m.gzza014, 
          g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza010,g_gzza_m.gzza009,g_gzza_m.gzza006, 
          g_gzza_m.gzzx002,g_gzza_m.gzzx003,g_gzza_m.gzzx004,g_gzza_m.gzzx005,g_gzza_m.gzzx006 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.gzzal001 = g_gzza_m.gzza001
LET g_master_multi_table_t.gzzal003 = g_gzza_m.gzzal003
LET g_master_multi_table_t.gzzal004 = g_gzza_m.gzzal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.gzzal001 = ''
LET g_master_multi_table_t.gzzal003 = ''
LET g_master_multi_table_t.gzzal004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzza001
            #add-point:BEFORE FIELD gzza001
            {<point name="input.b.gzza001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza001
            
            #add-point:AFTER FIELD gzza001
            {<point name="input.a.gzza001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza001
            #add-point:ON CHANGE gzza001
            {<point name="input.g.gzza001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzal003
            #add-point:BEFORE FIELD gzzal003
            {<point name="input.b.gzzal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzal003
            
            #add-point:AFTER FIELD gzzal003
            {<point name="input.a.gzzal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzal003
            #add-point:ON CHANGE gzzal003
            {<point name="input.g.gzzal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzal004
            #add-point:BEFORE FIELD gzzal004
            {<point name="input.b.gzzal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzal004
            
            #add-point:AFTER FIELD gzzal004
            {<point name="input.a.gzzal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzal004
            #add-point:ON CHANGE gzzal004
            {<point name="input.g.gzzal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza003
            #add-point:BEFORE FIELD gzza003
            {<point name="input.b.gzza003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza003
            
            #add-point:AFTER FIELD gzza003
            {<point name="input.a.gzza003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza003
            #add-point:ON CHANGE gzza003
            {<point name="input.g.gzza003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza011
            #add-point:BEFORE FIELD gzza011
            {<point name="input.b.gzza011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza011
            
            #add-point:AFTER FIELD gzza011
            {<point name="input.a.gzza011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza011
            #add-point:ON CHANGE gzza011
            {<point name="input.g.gzza011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza015
            
            #add-point:AFTER FIELD gzza015
            {<point name="input.a.gzza015" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza015
            #add-point:BEFORE FIELD gzza015
            {<point name="input.b.gzza015" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzza015
            #add-point:ON CHANGE gzza015
            {<point name="input.g.gzza015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza008
            
            #add-point:AFTER FIELD gzza008
            {<point name="input.a.gzza008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza008
            #add-point:BEFORE FIELD gzza008
            {<point name="input.b.gzza008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzza008
            #add-point:ON CHANGE gzza008
            {<point name="input.g.gzza008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzastus
            #add-point:BEFORE FIELD gzzastus
            {<point name="input.b.gzzastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzastus
            
            #add-point:AFTER FIELD gzzastus
            {<point name="input.a.gzzastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzastus
            #add-point:ON CHANGE gzzastus
            {<point name="input.g.gzzastus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza012
            #add-point:BEFORE FIELD gzza012
            {<point name="input.b.gzza012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza012
            
            #add-point:AFTER FIELD gzza012
            {<point name="input.a.gzza012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza012
            #add-point:ON CHANGE gzza012
            {<point name="input.g.gzza012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza013
            #add-point:BEFORE FIELD gzza013
            {<point name="input.b.gzza013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza013
            
            #add-point:AFTER FIELD gzza013
            {<point name="input.a.gzza013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza013
            #add-point:ON CHANGE gzza013
            {<point name="input.g.gzza013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza014
            #add-point:BEFORE FIELD gzza014
            {<point name="input.b.gzza014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza014
            
            #add-point:AFTER FIELD gzza014
            {<point name="input.a.gzza014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza014
            #add-point:ON CHANGE gzza014
            {<point name="input.g.gzza014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza005
            #add-point:BEFORE FIELD gzza005
            {<point name="input.b.gzza005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza005
            
            #add-point:AFTER FIELD gzza005
            {<point name="input.a.gzza005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza005
            #add-point:ON CHANGE gzza005
            {<point name="input.g.gzza005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza007
            #add-point:BEFORE FIELD gzza007
            {<point name="input.b.gzza007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza007
            
            #add-point:AFTER FIELD gzza007
            {<point name="input.a.gzza007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza007
            #add-point:ON CHANGE gzza007
            {<point name="input.g.gzza007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza002
            #add-point:BEFORE FIELD gzza002
            {<point name="input.b.gzza002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza002
            
            #add-point:AFTER FIELD gzza002
            {<point name="input.a.gzza002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza002
            #add-point:ON CHANGE gzza002
            {<point name="input.g.gzza002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza010
            #add-point:BEFORE FIELD gzza010
            {<point name="input.b.gzza010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza010
            
            #add-point:AFTER FIELD gzza010
            {<point name="input.a.gzza010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza010
            #add-point:ON CHANGE gzza010
            {<point name="input.g.gzza010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza009
            #add-point:BEFORE FIELD gzza009
            {<point name="input.b.gzza009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza009
            
            #add-point:AFTER FIELD gzza009
            {<point name="input.a.gzza009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza009
            #add-point:ON CHANGE gzza009
            {<point name="input.g.gzza009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzza006
            #add-point:BEFORE FIELD gzza006
            {<point name="input.b.gzza006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzza006
            
            #add-point:AFTER FIELD gzza006
            {<point name="input.a.gzza006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzza006
            #add-point:ON CHANGE gzza006
            {<point name="input.g.gzza006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx002
            #add-point:BEFORE FIELD gzzx002
            {<point name="input.b.gzzx002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx002
            
            #add-point:AFTER FIELD gzzx002
            {<point name="input.a.gzzx002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzx002
            #add-point:ON CHANGE gzzx002
            {<point name="input.g.gzzx002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx003
            #add-point:BEFORE FIELD gzzx003
            {<point name="input.b.gzzx003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx003
            
            #add-point:AFTER FIELD gzzx003
            {<point name="input.a.gzzx003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzx003
            #add-point:ON CHANGE gzzx003
            {<point name="input.g.gzzx003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx004
            #add-point:BEFORE FIELD gzzx004
            {<point name="input.b.gzzx004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx004
            
            #add-point:AFTER FIELD gzzx004
            {<point name="input.a.gzzx004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzx004
            #add-point:ON CHANGE gzzx004
            {<point name="input.g.gzzx004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx005
            #add-point:BEFORE FIELD gzzx005
            {<point name="input.b.gzzx005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx005
            
            #add-point:AFTER FIELD gzzx005
            {<point name="input.a.gzzx005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzx005
            #add-point:ON CHANGE gzzx005
            {<point name="input.g.gzzx005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzzx006
            #add-point:BEFORE FIELD gzzx006
            {<point name="input.b.gzzx006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzzx006
            
            #add-point:AFTER FIELD gzzx006
            {<point name="input.a.gzzx006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzzx006
            #add-point:ON CHANGE gzzx006
            {<point name="input.g.gzzx006" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.gzza001
         ON ACTION controlp INFIELD gzza001
            #add-point:ON ACTION controlp INFIELD gzza001
            {<point name="input.c.gzza001" />}
            #END add-point
 
         #Ctrlp:input.c.gzzal003
         ON ACTION controlp INFIELD gzzal003
            #add-point:ON ACTION controlp INFIELD gzzal003
            {<point name="input.c.gzzal003" />}
            #END add-point
 
         #Ctrlp:input.c.gzzal004
         ON ACTION controlp INFIELD gzzal004
            #add-point:ON ACTION controlp INFIELD gzzal004
            {<point name="input.c.gzzal004" />}
            #END add-point
 
         #Ctrlp:input.c.gzza003
         ON ACTION controlp INFIELD gzza003
            #add-point:ON ACTION controlp INFIELD gzza003
            {<point name="input.c.gzza003" />}
            #END add-point
 
         #Ctrlp:input.c.gzza011
         ON ACTION controlp INFIELD gzza011
            #add-point:ON ACTION controlp INFIELD gzza011
            {<point name="input.c.gzza011" />}
            #END add-point
 
         #Ctrlp:input.c.gzza015
         ON ACTION controlp INFIELD gzza015
            #add-point:ON ACTION controlp INFIELD gzza015
            {<point name="input.c.gzza015" />}
            #END add-point
 
         #Ctrlp:input.c.gzza008
         ON ACTION controlp INFIELD gzza008
            #add-point:ON ACTION controlp INFIELD gzza008
            {<point name="input.c.gzza008" />}
            #END add-point
 
         #Ctrlp:input.c.gzzastus
         ON ACTION controlp INFIELD gzzastus
            #add-point:ON ACTION controlp INFIELD gzzastus
            {<point name="input.c.gzzastus" />}
            #END add-point
 
         #Ctrlp:input.c.gzza012
         ON ACTION controlp INFIELD gzza012
            #add-point:ON ACTION controlp INFIELD gzza012
            {<point name="input.c.gzza012" />}
            #END add-point
 
         #Ctrlp:input.c.gzza013
         ON ACTION controlp INFIELD gzza013
            #add-point:ON ACTION controlp INFIELD gzza013
            {<point name="input.c.gzza013" />}
            #END add-point
 
         #Ctrlp:input.c.gzza014
         ON ACTION controlp INFIELD gzza014
            #add-point:ON ACTION controlp INFIELD gzza014
            {<point name="input.c.gzza014" />}
            #END add-point
 
         #Ctrlp:input.c.gzza005
         ON ACTION controlp INFIELD gzza005
            #add-point:ON ACTION controlp INFIELD gzza005
            {<point name="input.c.gzza005" />}
            #END add-point
 
         #Ctrlp:input.c.gzza007
         ON ACTION controlp INFIELD gzza007
            #add-point:ON ACTION controlp INFIELD gzza007
            {<point name="input.c.gzza007" />}
            #END add-point
 
         #Ctrlp:input.c.gzza002
         ON ACTION controlp INFIELD gzza002
            #add-point:ON ACTION controlp INFIELD gzza002
            {<point name="input.c.gzza002" />}
            #END add-point
 
         #Ctrlp:input.c.gzza010
         ON ACTION controlp INFIELD gzza010
            #add-point:ON ACTION controlp INFIELD gzza010
            {<point name="input.c.gzza010" />}
            #END add-point
 
         #Ctrlp:input.c.gzza009
         ON ACTION controlp INFIELD gzza009
            #add-point:ON ACTION controlp INFIELD gzza009
            {<point name="input.c.gzza009" />}
            #END add-point
 
         #Ctrlp:input.c.gzza006
         ON ACTION controlp INFIELD gzza006
            #add-point:ON ACTION controlp INFIELD gzza006
            {<point name="input.c.gzza006" />}
            #END add-point
 
         #Ctrlp:input.c.gzzx002
         ON ACTION controlp INFIELD gzzx002
            #add-point:ON ACTION controlp INFIELD gzzx002
            {<point name="input.c.gzzx002" />}
            #END add-point
 
         #Ctrlp:input.c.gzzx003
         ON ACTION controlp INFIELD gzzx003
            #add-point:ON ACTION controlp INFIELD gzzx003
            {<point name="input.c.gzzx003" />}
            #END add-point
 
         #Ctrlp:input.c.gzzx004
         ON ACTION controlp INFIELD gzzx004
            #add-point:ON ACTION controlp INFIELD gzzx004
            {<point name="input.c.gzzx004" />}
            #END add-point
 
         #Ctrlp:input.c.gzzx005
         ON ACTION controlp INFIELD gzzx005
            #add-point:ON ACTION controlp INFIELD gzzx005
            {<point name="input.c.gzzx005" />}
            #END add-point
 
         #Ctrlp:input.c.gzzx006
         ON ACTION controlp INFIELD gzzx006
            #add-point:ON ACTION controlp INFIELD gzzx006
            {<point name="input.c.gzzx006" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_gzza_m.gzza001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO gzza_t (gzza001,gzza003,gzza011,gzza015,gzza008,gzzastus,gzzaownid,gzzaowndp, 
                   gzzacrtid,gzzacrtdt,gzzacrtdp,gzza012,gzza013,gzza014,gzza005,gzza007,gzza002,gzza004, 
                   gzza010,gzza009,gzza006,gzza016)
               VALUES (g_gzza_m.gzza001,g_gzza_m.gzza003,g_gzza_m.gzza011,g_gzza_m.gzza015,g_gzza_m.gzza008, 
                   g_gzza_m.gzzastus,g_gzza_m.gzzaownid,g_gzza_m.gzzaowndp,g_gzza_m.gzzacrtid,g_gzza_m.gzzacrtdt, 
                   g_gzza_m.gzzacrtdp,g_gzza_m.gzza012,g_gzza_m.gzza013,g_gzza_m.gzza014,g_gzza_m.gzza005, 
                   g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza004,g_gzza_m.gzza010,g_gzza_m.gzza009, 
                   g_gzza_m.gzza006,g_gzza_m.gzza016) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_gzza_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
                              CALL azzi900_gzzx_t('u')
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzza_m.gzza001 = g_master_multi_table_t.gzzal001 AND
         g_gzza_m.gzzal003 = g_master_multi_table_t.gzzal003 AND 
         g_gzza_m.gzzal004 = g_master_multi_table_t.gzzal004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzza_m.gzza001
            LET l_field_keys[01] = 'gzzal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzzal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzzal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzza_m.gzzal003
            LET l_fields[01] = 'gzzal003'
            LET l_vars[02] = g_gzza_m.gzzal004
            LET l_fields[02] = 'gzzal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzzal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi900_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE gzza_t SET (gzza001,gzza003,gzza011,gzza015,gzza008,gzzastus,gzzaownid,gzzaowndp, 
                   gzzacrtid,gzzacrtdt,gzzacrtdp,gzza012,gzza013,gzza014,gzza005,gzza007,gzza002,gzza004, 
                   gzza010,gzza009,gzza006,gzza016) = (g_gzza_m.gzza001,g_gzza_m.gzza003,g_gzza_m.gzza011, 
                   g_gzza_m.gzza015,g_gzza_m.gzza008,g_gzza_m.gzzastus,g_gzza_m.gzzaownid,g_gzza_m.gzzaowndp, 
                   g_gzza_m.gzzacrtid,g_gzza_m.gzzacrtdt,g_gzza_m.gzzacrtdp,g_gzza_m.gzza012,g_gzza_m.gzza013, 
                   g_gzza_m.gzza014,g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza004, 
                   g_gzza_m.gzza010,g_gzza_m.gzza009,g_gzza_m.gzza006,g_gzza_m.gzza016)
                WHERE  gzza001 = g_gzza001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("gzza_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
                              CALL azzi900_gzzx_t('u')
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzza_m.gzza001 = g_master_multi_table_t.gzzal001 AND
         g_gzza_m.gzzal003 = g_master_multi_table_t.gzzal003 AND 
         g_gzza_m.gzzal004 = g_master_multi_table_t.gzzal004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzza_m.gzza001
            LET l_field_keys[01] = 'gzzal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzzal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzzal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzza_m.gzzal003
            LET l_fields[01] = 'gzzal003'
            LET l_vars[02] = g_gzza_m.gzzal004
            LET l_fields[02] = 'gzzal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzzal_t')
         END IF 
 
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_gzza_m_t)
               LET g_log2 = util.JSON.stringify(g_gzza_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_gzza001_t = g_gzza_m.gzza001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="azzi900.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD gzza001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzzc002
               WHEN "s_detail2"
                  NEXT FIELD gzzk002
               WHEN "s_detail4"
                  NEXT FIELD gzdf002
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.insert" ver="9" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi900_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gzzc_d.clear()   
   CALL g_gzzc2_d.clear()  
   CALL g_gzzc4_d.clear()  
 
 
   INITIALIZE g_gzza_m.* LIKE gzza_t.*             #DEFAULT 設定
   
   LET g_gzza001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_gzza_m.gzzaownid = g_user
      LET g_gzza_m.gzzaowndp = g_dept
      LET g_gzza_m.gzzacrtid = g_user
      LET g_gzza_m.gzzacrtdp = g_dept 
      LET g_gzza_m.gzzacrtdt = cl_get_current()
      LET g_gzza_m.gzzamodid = ""
      LET g_gzza_m.gzzamoddt = ""
      LET g_gzza_m.gzzastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gzza_m.gzza011 = "N"
      LET g_gzza_m.gzza015 = "sd"
      LET g_gzza_m.gzzastus = "Y"
      LET g_gzza_m.gzza012 = "2"
      LET g_gzza_m.gzza013 = "0"
      LET g_gzza_m.gzza014 = "2"
      LET g_gzza_m.gzza005 = "N"
      LET g_gzza_m.gzza007 = "Y"
      LET g_gzza_m.gzza010 = "N"
      LET g_gzza_m.gzza009 = "N"
      LET g_gzza_m.gzza006 = "N"
      LET g_gzza_m.gzza016 = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL azzi900_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzza_m.* = g_gzza_m_t.*
         CALL azzi900_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_gzzc_d.clear()
      CALL g_gzzc2_d.clear()
      CALL g_gzzc4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_gzza001_t = g_gzza_m.gzza001
 
   
   LET g_wc = "(",g_wc,  
              " OR ( ",
              " gzza001 = '", g_gzza_m.gzza001 CLIPPED, "' "
 
              , ")) "
   
   CLOSE azzi900_cl
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.insert_b" ver="3" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi900_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO gzzc_t
                  (
                   gzzc001,
                   gzzc002
                   ,gzzc003,gzzc004,gzzc005,gzzc006,gzzc007) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzzc_d[g_detail_idx].gzzc003,g_gzzc_d[g_detail_idx].gzzc004,g_gzzc_d[g_detail_idx].gzzc005, 
                       g_gzzc_d[g_detail_idx].gzzc006,g_gzzc_d[g_detail_idx].gzzc007)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzzc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO gzzk_t
                  (
                   gzzk001,
                   gzzk002
                   ,gzzk003,gzzk004) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzzc2_d[g_detail_idx].gzzk003,g_gzzc2_d[g_detail_idx].gzzk004)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzzk_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO gzdf_t
                  (
                   gzdf001,
                   gzdf002
                   ,gzdf003) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzzc4_d[g_detail_idx].gzdf003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzdf_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi900_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL azzi900_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "gzzc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN azzi900_bcl USING 
                                       g_gzza_m.gzza001,g_gzzc_d[g_detail_idx].gzzc002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi900_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "gzzk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi900_bcl2 USING 
                                             g_gzza_m.gzza001,g_gzzc2_d[g_detail_idx].gzzk002
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi900_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "gzdf_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi900_bcl3 USING 
                                             g_gzza_m.gzza001,g_gzzc4_d[g_detail_idx].gzdf002
      IF SQLCA.sqlcode THEN
         CALL cl_err("azzi900_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.main" ver="12" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT gzza001,'','',gzza003,gzza011,gzza015,'',gzza008,'',gzzastus,gzzaownid, 
       '',gzzaowndp,'',gzzacrtid,'',gzzacrtdt,gzzacrtdp,'',gzzamodid,'',gzzamoddt,gzza012,gzza013,gzza014, 
       gzza005,gzza007,gzza002,gzza004,gzza010,gzza009,gzza006,gzza016,'','','','',''", 
                      " FROM gzza_t",
                      " WHERE gzza001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi900_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzza001,gzza003,gzza011,gzza015,gzza008,gzzastus,gzzaownid,gzzaowndp, 
       gzzacrtid,gzzacrtdt,gzzacrtdp,gzzamodid,gzzamoddt,gzza012,gzza013,gzza014,gzza005,gzza007,gzza002, 
       gzza004,gzza010,gzza009,gzza006,gzza016,t1.gzoi002 ,t2.gzzal003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 , 
       t6.ooefl003 ,t7.ooag011",
               " FROM gzza_t",
                              " LEFT JOIN gzoi_t t1 ON t1.gzoi001=gzza015  ",
               " LEFT JOIN gzzal_t t2 ON t2.gzzal001=gzza008 AND t2.gzzal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=gzzaownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=gzzaowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=gzzacrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=gzzacrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=gzzamodid  ",
 
               " WHERE  gzza001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi900_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi900 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi900_init()   
 
      #進入選單 Menu (="N")
      CALL azzi900_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi900
      
   END IF 
   
   CLOSE azzi900_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="azzi900.modify" ver="18" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi900_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_gzza_m.gzza001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_gzza001_t = g_gzza_m.gzza001
 
   CALL s_transaction_begin()
   
   OPEN azzi900_cl USING g_gzza_m.gzza001
   IF STATUS THEN
      CALL cl_err("OPEN azzi900_cl:", STATUS, 1)
      CLOSE azzi900_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi900_master_referesh USING g_gzza_m.gzza001 INTO g_gzza_m.gzza001,g_gzza_m.gzza003,g_gzza_m.gzza011, 
       g_gzza_m.gzza015,g_gzza_m.gzza008,g_gzza_m.gzzastus,g_gzza_m.gzzaownid,g_gzza_m.gzzaowndp,g_gzza_m.gzzacrtid, 
       g_gzza_m.gzzacrtdt,g_gzza_m.gzzacrtdp,g_gzza_m.gzzamodid,g_gzza_m.gzzamoddt,g_gzza_m.gzza012, 
       g_gzza_m.gzza013,g_gzza_m.gzza014,g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza004, 
       g_gzza_m.gzza010,g_gzza_m.gzza009,g_gzza_m.gzza006,g_gzza_m.gzza016,g_gzza_m.gzza015_desc,g_gzza_m.gzza008_desc, 
       g_gzza_m.gzzaownid_desc,g_gzza_m.gzzaowndp_desc,g_gzza_m.gzzacrtid_desc,g_gzza_m.gzzacrtdp_desc, 
       g_gzza_m.gzzamodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzza_m.gzza001,SQLCA.sqlcode,0)
      CLOSE azzi900_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
                  CALL azzi900_gzzx_t('s')
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL azzi900_show()
   WHILE TRUE
      LET g_gzza001_t = g_gzza_m.gzza001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gzza_m.gzzamodid = g_user 
LET g_gzza_m.gzzamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL azzi900_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzza_m.* = g_gzza_m_t.*
         CALL azzi900_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE gzza_t SET (gzzamodid,gzzamoddt) = (g_gzza_m.gzzamodid,g_gzza_m.gzzamoddt)
       WHERE  gzza001 = g_gzza001_t
 
                  
      #若單頭key欄位有變更
      IF g_gzza_m.gzza001 != g_gzza001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE gzzc_t SET gzzc001 = g_gzza_m.gzza001
 
          WHERE  gzzc001 = g_gzza001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("gzzc_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("gzzc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE gzzk_t
            SET gzzk001 = g_gzza_m.gzza001
 
          WHERE 
                gzzk001 = g_gzza001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("gzzk_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("gzzk_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE gzdf_t
            SET gzdf001 = g_gzza_m.gzza001
 
          WHERE 
                gzdf001 = g_gzza001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("gzdf_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("gzdf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_gzza_m.gzza001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE azzi900_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzza_m.gzza001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="azzi900.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi900.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="azzi900.query" ver="6" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi900_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzzc_d.clear()
   CALL g_gzzc2_d.clear()
   CALL g_gzzc4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL azzi900_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi900_browser_fill("")
      CALL azzi900_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL azzi900_filter_show('gzza001')
   CALL azzi900_filter_show('gzza015')
   CALL azzi900_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL azzi900_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.reproduce" ver="7" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi900_reproduce()
   DEFINE l_newno     LIKE gzza_t.gzza001 
   DEFINE l_oldno     LIKE gzza_t.gzza001 
 
   DEFINE l_master    RECORD LIKE gzza_t.*
   DEFINE l_detail    RECORD LIKE gzzc_t.*
   DEFINE l_detail2    RECORD LIKE gzzk_t.*
 
   DEFINE l_detail3    RECORD LIKE gzdf_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_gzza_m.gzza001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_gzza001_t = g_gzza_m.gzza001
 
    
   LET g_gzza_m.gzza001 = ""
 
    
   CALL azzi900_set_entry('a')
   CALL azzi900_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_gzza_m.gzzaownid = g_user
      LET g_gzza_m.gzzaowndp = g_dept
      LET g_gzza_m.gzzacrtid = g_user
      LET g_gzza_m.gzzacrtdp = g_dept 
      LET g_gzza_m.gzzacrtdt = cl_get_current()
      LET g_gzza_m.gzzamodid = ""
      LET g_gzza_m.gzzamoddt = ""
      LET g_gzza_m.gzzastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL azzi900_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " gzza001 = '", g_gzza_m.gzza001 CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi900_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzza001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi900_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="azzi900.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi900_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzza001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi900_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="azzi900.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi900_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzza_m.gzza001
   LET g_pk_array[1].column = 'gzza001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi900.show" ver="11" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi900_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL azzi900_b_fill() #單身填充
      CALL azzi900_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_gzza_m.gzzaownid_desc = cl_get_username(g_gzza_m.gzzaownid)
      #LET g_gzza_m.gzzaowndp_desc = cl_get_deptname(g_gzza_m.gzzaowndp)
      #LET g_gzza_m.gzzacrtid_desc = cl_get_username(g_gzza_m.gzzacrtid)
      #LET g_gzza_m.gzzacrtdp_desc = cl_get_deptname(g_gzza_m.gzzacrtdp)
      #LET g_gzza_m.gzzamodid_desc = cl_get_username(g_gzza_m.gzzamodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi900_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzza_m.gzza001,g_gzza_m.gzzal003,g_gzza_m.gzzal004,g_gzza_m.gzza003,g_gzza_m.gzza011, 
       g_gzza_m.gzza015,g_gzza_m.gzza015_desc,g_gzza_m.gzza008,g_gzza_m.gzza008_desc,g_gzza_m.gzzastus, 
       g_gzza_m.gzzaownid,g_gzza_m.gzzaownid_desc,g_gzza_m.gzzaowndp,g_gzza_m.gzzaowndp_desc,g_gzza_m.gzzacrtid, 
       g_gzza_m.gzzacrtid_desc,g_gzza_m.gzzacrtdt,g_gzza_m.gzzacrtdp,g_gzza_m.gzzacrtdp_desc,g_gzza_m.gzzamodid, 
       g_gzza_m.gzzamodid_desc,g_gzza_m.gzzamoddt,g_gzza_m.gzza012,g_gzza_m.gzza013,g_gzza_m.gzza014, 
       g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza004,g_gzza_m.gzza010,g_gzza_m.gzza009, 
       g_gzza_m.gzza006,g_gzza_m.gzza016,g_gzza_m.gzzx002,g_gzza_m.gzzx003,g_gzza_m.gzzx004,g_gzza_m.gzzx005, 
       g_gzza_m.gzzx006
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_gzza_m.gzzastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzzc_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_gzzc2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_gzzc4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL azzi900_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi900.state_change" ver="4" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION azzi900_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzza_m.gzza001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzza_m.gzzastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE gzza_t SET gzzastus = lc_state 
    WHERE  gzza001 = g_gzza_m.gzza001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_gzza_m.gzzastus = lc_state
      DISPLAY BY NAME g_gzza_m.gzzastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi900.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi900_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzza001 = g_gzza_m.gzza001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION azzi900_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.ui_dialog" ver="17" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION azzi900_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi900_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL azzi900_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_gzza001 = g_gzza001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL azzi900_fetch('') # reload data
               LET l_ac = 1
               CALL azzi900_ui_detailshow() #Setting the current row 
      
               CALL azzi900_idx_chk()
               #NEXT FIELD gzzc002
         
         END DISPLAY
        
         DISPLAY ARRAY g_gzzc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL azzi900_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL azzi900_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #+ 此段落由子樣板a43產生
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                                 #+ 此段落由子樣板a43產生
               ON ACTION azzi650
                  LET g_action_choice="azzi650"
                  IF cl_auth_chk_act("azzi650") THEN
                     
                     #add-point:ON ACTION azzi650
                     {<point name="menu.detail_show.page1_sub.azzi650" />}
                     #END add-point
                     EXIT DIALOG
                  END IF
 
 
               END MENU
 
 
               #add-point:ON ACTION detail_qrystr
               {<point name="menu.detail_show.page1.detail_qrystr" />}
               #END add-point
 
 
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_gzzc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL azzi900_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL azzi900_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_gzzc4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL azzi900_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 3
               CALL azzi900_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi900_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi900_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL azzi900_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL azzi900_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL azzi900_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL azzi900_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL azzi900_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL azzi900_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL azzi900_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi900_idx_chk()
            
         ON ACTION previous
            CALL azzi900_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi900_idx_chk()
            
         ON ACTION jump
            CALL azzi900_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi900_idx_chk()
            
         ON ACTION next
            CALL azzi900_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi900_idx_chk()
            
         ON ACTION last
            CALL azzi900_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi900_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzzc002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi900_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi900_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION upd_para
            LET g_action_choice="upd_para"
            IF cl_auth_chk_act("upd_para") THEN
               
               #add-point:ON ACTION upd_para
               {<point name="menu.upd_para" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi900_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi900_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi900_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi900_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION view_structure_tree
            LET g_action_choice="view_structure_tree"
            IF cl_auth_chk_act("view_structure_tree") THEN
               
               #add-point:ON ACTION view_structure_tree
               {<point name="menu.view_structure_tree" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi900_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi900_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi900_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="azzi900.ui_headershow" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi900_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_gzza_m.gzza001 = g_browser[g_current_idx].b_gzza001   
 
   EXECUTE azzi900_master_referesh USING g_gzza_m.gzza001 INTO g_gzza_m.gzza001,g_gzza_m.gzza003,g_gzza_m.gzza011, 
       g_gzza_m.gzza015,g_gzza_m.gzza008,g_gzza_m.gzzastus,g_gzza_m.gzzaownid,g_gzza_m.gzzaowndp,g_gzza_m.gzzacrtid, 
       g_gzza_m.gzzacrtdt,g_gzza_m.gzzacrtdp,g_gzza_m.gzzamodid,g_gzza_m.gzzamoddt,g_gzza_m.gzza012, 
       g_gzza_m.gzza013,g_gzza_m.gzza014,g_gzza_m.gzza005,g_gzza_m.gzza007,g_gzza_m.gzza002,g_gzza_m.gzza004, 
       g_gzza_m.gzza010,g_gzza_m.gzza009,g_gzza_m.gzza006,g_gzza_m.gzza016,g_gzza_m.gzza015_desc,g_gzza_m.gzza008_desc, 
       g_gzza_m.gzzaownid_desc,g_gzza_m.gzzaowndp_desc,g_gzza_m.gzzacrtid_desc,g_gzza_m.gzzacrtdp_desc, 
       g_gzza_m.gzzamodid_desc
   CALL azzi900_show()
   
END FUNCTION
]]>
  </section>
  <section id="azzi900.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi900_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi900_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi900_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi900_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi900.update_b" ver="4" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi900_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzzc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE gzzc_t 
         SET (gzzc001,
              gzzc002
              ,gzzc003,gzzc004,gzzc005,gzzc006,gzzc007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzzc_d[g_detail_idx].gzzc003,g_gzzc_d[g_detail_idx].gzzc004,g_gzzc_d[g_detail_idx].gzzc005, 
                  g_gzzc_d[g_detail_idx].gzzc006,g_gzzc_d[g_detail_idx].gzzc007) 
         WHERE  gzzc001 = ps_keys_bak[1] AND gzzc002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzzc_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzzc_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzzk_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE gzzk_t 
         SET (gzzk001,
              gzzk002
              ,gzzk003,gzzk004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzzc2_d[g_detail_idx].gzzk003,g_gzzc2_d[g_detail_idx].gzzk004) 
         WHERE  gzzk001 = ps_keys_bak[1] AND gzzk002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzzk_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzzk_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzdf_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE gzdf_t 
         SET (gzdf001,
              gzdf002
              ,gzdf003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzzc4_d[g_detail_idx].gzdf003) 
         WHERE  gzdf001 = ps_keys_bak[1] AND gzdf002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("gzdf_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("gzdf_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
