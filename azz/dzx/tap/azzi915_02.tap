<add_points prog="azzi915_02" std_prog="azzi915_02" erpver="1.0" module="AZZ" ver="1" env="s" zone="t10dev" normal_style="N" booking="Y">
  <point name="free_style.variable" cite_std="N" status="" ver="1" src="s" new="N" order="0" cite_ver="" mark_hard="N">
<![CDATA[{<Module define>}
#單頭 type 宣告
 type type_g_gzxol_m        RECORD
       gzxol001 LIKE gzxol_t.gzxol001,
   gzxol002 LIKE gzxol_t.gzxol002,
   gzxol003 LIKE gzxol_t.gzxol003,
   gzxol004 LIKE gzxol_t.gzxol004,
   gzxol005 LIKE gzxol_t.gzxol005
       END RECORD
DEFINE g_gzxol_m        type_g_gzxol_m

DEFINE g_gzxol001_t   LIKE gzxol_t.gzxol001    #Key值備份
DEFINE g_gzxol002_t      LIKE gzxol_t.gzxol002    #Key值備份

DEFINE g_gzxol003_t      LIKE gzxol_t.gzxol003    #Key值備份

DEFINE g_gzxol004_t      LIKE gzxol_t.gzxol004    #Key值備份

DEFINE g_master_multi_table_t    RECORD
      gzxol001 LIKE gzxol_t.gzxol001,
      gzxol002 LIKE gzxol_t.gzxol002,
      gzxol003 LIKE gzxol_t.gzxol003,
      gzxol005 LIKE gzxol_t.gzxol005
      END RECORD

DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
{</Module define>}]]>
</point>
  <point name="function.azzi915_02" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" cite_ver="" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 新增/修改查詢方案群組
# Memo...........: 
# Usage..........: CALL azzi915_02(pc_gzxo001,pc_gzxo002,pc_gzxo003)
# Input parameter: pc_gzxo001   查詢方案群組編號
#                : pc_gzxo002   作業編號
#                : pc_gzxo003   員工編號
# Return code....: None
# Date & Author..: 2013/11/15 By Saki
# Modify.........:
################################################################################
PUBLIC FUNCTION azzi915_02(pc_gzxo001,pc_gzxo002,pc_gzxo003)
   #add-point:input段變數傳入
   {<point name="input.get_var"/>}
   DEFINE pc_gzxo001      LIKE gzxo_t.gzxo001
   DEFINE pc_gzxo002      LIKE gzxo_t.gzxo002
   DEFINE pc_gzxo003      LIKE gzxo_t.gzxo003
   #end add-point
   {<Local define>}
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE p_cmd           LIKE type_t.chr5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point

   #畫面開啟 (identifier)
   OPEN WINDOW w_azzi915_02 WITH FORM cl_ap_formpath("azz","azzi915_02")

   LET g_qryparam.state = "i"
   LET p_cmd = 'a'

   #輸入前處理
   #add-point:單頭前置處理
   {<point name="input.pre_input"/>}
   IF cl_null(pc_gzxo001) THEN
      LET p_cmd = "a"
   ELSE
      LET p_cmd = "u"
   END IF
   LET g_gzxol_m.gzxol001 = pc_gzxo001
   LET g_gzxol_m.gzxol002 = pc_gzxo002
   LET g_gzxol_m.gzxol003 = pc_gzxo003

   #gzxo001傳入NULL為新增, 在n_gzxol001前insert到gzxo_t, 最後若是取消再刪掉兩者資料
   #gzxo001若有值, 則先找出多語言顯示在畫面上
   IF p_cmd = "u" THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_gzxol_m.gzxol001
      LET g_ref_fields[2] = g_gzxol_m.gzxol002
      LET g_ref_fields[3] = g_gzxol_m.gzxol003
      CALL ap_ref_array2(g_ref_fields," SELECT gzxol005 FROM gzxol_t WHERE gzxol001 = ? AND gzxol002 = ? AND gzxol003 = ? AND gzxolent = '"||g_enterprise||"' AND  gzxol004 = '"||g_lang CLIPPED||"'","") RETURNING g_rtn_fields
      LET g_gzxol_m.gzxol005 = g_rtn_fields[1]
      DISPLAY BY NAME g_gzxol_m.gzxol005
   ELSE
      LET g_gzxol_m.gzxol005 = ""
   END IF
   #end add-point

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME g_gzxol_m.gzxol005 ATTRIBUTE(WITHOUT DEFAULTS)

         #自訂ACTION
         #add-point:單頭前置處理
         {<point name="input.action"/>}
         #end add-point
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN 
               #add-point:ON ACTION update_item
               IF NOT cl_null(g_gzxol_m.gzxol001) THEN
                  CALL n_gzxol(g_gzxol_m.gzxol001, g_gzxol_m.gzxol002, g_gzxol_m.gzxol003)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_gzxol_m.gzxol001
                  LET g_ref_fields[2] = g_gzxol_m.gzxol002
                  LET g_ref_fields[3] = g_gzxol_m.gzxol003
                  CALL ap_ref_array2(g_ref_fields," SELECT gzxol005 FROM gzxol_t WHERE gzxol001 = ? AND gzxol002 = ? AND gzxol003 = ? AND gzxolent = '"||g_enterprise||"' AND  gzxol004 = '"||g_lang CLIPPED||"'","") RETURNING g_rtn_fields
                  LET g_gzxol_m.gzxol005 = g_rtn_fields[1]
                  DISPLAY BY NAME g_gzxol_m.gzxol005
               END IF
               #END add-point
            END IF
         #自訂ACTION(master_input)


         BEFORE INPUT
            LET g_master_multi_table_t.gzxol001 = g_gzxol_m.gzxol001
            LET g_master_multi_table_t.gzxol002 = g_gzxol_m.gzxol002
            LET g_master_multi_table_t.gzxol003 = g_gzxol_m.gzxol003
            LET g_master_multi_table_t.gzxol005 = g_gzxol_m.gzxol005

            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #add-point:單頭輸入前處理
            {<point name="input.before_input"/>}
            #end add-point

         #---------------------------<  Master  >---------------------------
         #----<<gzxol001>>----
         #此段落由子樣板a01產生
         #----<<gzxol005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzxol005
            #add-point:BEFORE FIELD gzxol005
            {<point name="input.b.gzxol005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD gzxol005

            #add-point:AFTER FIELD gzxol005
            {<point name="input.a.gzxol005" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE gzxol005
            #add-point:ON CHANGE gzxol005
            {<point name="input.g.gzxol005" />}
            #END add-point

         AFTER INPUT
            #add-point:單頭輸入後處理
            {<point name="input.after_input"/>}
            IF INT_FLAG THEN
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
            IF p_cmd <> "u" THEN
               CALL azzi915_02_gzxo_insert() RETURNING g_gzxol_m.gzxol001
               IF cl_null(g_gzxol_m.gzxol001) THEN
                  CALL cl_err("g_gzxol_t", g_errno, 1)
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               ELSE
                  INITIALIZE l_var_keys TO NULL
                  INITIALIZE l_field_keys TO NULL
                  INITIALIZE l_vars TO NULL
                  INITIALIZE l_fields TO NULL
                  IF g_gzxol_m.gzxol001 = g_master_multi_table_t.gzxol001 AND
                     g_gzxol_m.gzxol002 = g_master_multi_table_t.gzxol002 AND
                     g_gzxol_m.gzxol003 = g_master_multi_table_t.gzxol003 AND
                     g_gzxol_m.gzxol005 = g_master_multi_table_t.gzxol005 THEN
                  ELSE
                     LET l_var_keys[01] = g_gzxol_m.gzxol001
                     LET l_field_keys[01] = 'gzxol001'
                     LET l_var_keys_bak[01] = g_master_multi_table_t.gzxol001
                     LET l_var_keys[02] = g_gzxol_m.gzxol002
                     LET l_field_keys[02] = 'gzxol002'
                     LET l_var_keys_bak[02] = g_master_multi_table_t.gzxol002
                     LET l_var_keys[03] = g_gzxol_m.gzxol003
                     LET l_field_keys[03] = 'gzxol003'
                     LET l_var_keys_bak[03] = g_master_multi_table_t.gzxol003
                     LET l_var_keys[04] = g_dlang
                     LET l_field_keys[04] = 'gzxol004'
                     LET l_var_keys_bak[04] = g_dlang
                     LET l_var_keys[05] = g_enterprise
                     LET l_field_keys[05] = 'gzxolent'
                     LET l_var_keys_bak[05] = g_enterprise
                     LET l_vars[01] = g_gzxol_m.gzxol005
                     LET l_fields[01] = 'gzxol005'
                     CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzxol_t')
                  END IF
               END IF
               CALL s_transaction_end('Y','0')
               LET p_cmd = 'u'
            ELSE
               INITIALIZE l_var_keys TO NULL
               INITIALIZE l_field_keys TO NULL
               INITIALIZE l_vars TO NULL
               INITIALIZE l_fields TO NULL
               IF g_gzxol_m.gzxol001 = g_master_multi_table_t.gzxol001 AND
                  g_gzxol_m.gzxol002 = g_master_multi_table_t.gzxol002 AND
                  g_gzxol_m.gzxol003 = g_master_multi_table_t.gzxol003 AND
                  g_gzxol_m.gzxol005 = g_master_multi_table_t.gzxol005 THEN
               ELSE
                  LET l_var_keys[01] = g_gzxol_m.gzxol001
                  LET l_field_keys[01] = 'gzxol001'
                  LET l_var_keys_bak[01] = g_master_multi_table_t.gzxol001
                  LET l_var_keys[02] = g_gzxol_m.gzxol002
                  LET l_field_keys[02] = 'gzxol002'
                  LET l_var_keys_bak[02] = g_master_multi_table_t.gzxol002
                  LET l_var_keys[03] = g_gzxol_m.gzxol003
                  LET l_field_keys[03] = 'gzxol003'
                  LET l_var_keys_bak[03] = g_master_multi_table_t.gzxol003
                  LET l_var_keys[04] = g_dlang
                  LET l_field_keys[04] = 'gzxol004'
                  LET l_var_keys_bak[04] = g_dlang
                  LET l_var_keys[05] = g_enterprise
                  LET l_field_keys[05] = 'gzxolent'
                  LET l_var_keys_bak[05] = g_enterprise
                  LET l_vars[01] = g_gzxol_m.gzxol005
                  LET l_fields[01] = 'gzxol005'
                  CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzxol_t')
               END IF
               CALL s_transaction_end('Y','0')
            END IF
            #end add-point

      END INPUT

      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point

      #公用action
      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG

   #add-point:畫面關閉前
   {<point name="input.before_close"/>}
   #end add-point

   #畫面關閉
   CLOSE WINDOW w_azzi915_02

   #add-point:input段after input
   {<point name="input.post_input"/>}
   #end add-point

END FUNCTION]]>
</point>
  <point name="function.azzi915_02_gzxo_insert" cite_std="N" status="u" ver="1" src="s" new="Y" order="2" cite_ver="" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 新增查詢方案群組
# Memo...........: 
# Usage..........: CALL azzi915_02_gzxo_insert()
# Input parameter: None
# Return code....: gzxo001   查詢方案群組編號
# Date & Author..: 2013/11/18 By Saki
# Modify.........:
################################################################################
PUBLIC FUNCTION azzi915_02_gzxo_insert()
   DEFINE   lc_gzxo001   LIKE gzxo_t.gzxo001
   DEFINE   lc_gzxo004   LIKE gzxo_t.gzxo004
   DEFINE   lr_gzxo      RECORD LIKE gzxo_t.*
   
   # 取編號
   SELECT MAX(gzxo001) + 1 INTO lc_gzxo001 FROM gzxo_t
    WHERE gzxoent = g_enterprise AND gzxo002 = g_gzxol_m.gzxol002 AND gzxo003 = g_gzxol_m.gzxol003
   IF cl_null(lc_gzxo001) THEN
      LET lc_gzxo001 = 1
      LET lc_gzxo004 = 1
   ELSE
      # 取順序
      SELECT MAX(gzxo004) + 1 INTO lc_gzxo004 FROM gzxo_t
       WHERE gzxoent = g_enterprise AND gzxo002 = g_gzxol_m.gzxol002 AND gzxo003 = g_gzxol_m.gzxol003
   END IF
   
   LET lr_gzxo.gzxo001 = lc_gzxo001
   LET lr_gzxo.gzxo002 = g_gzxol_m.gzxol002
   LET lr_gzxo.gzxo003 = g_gzxol_m.gzxol003
   LET lr_gzxo.gzxo004 = lc_gzxo004
   LET lr_gzxo.gzxoent = g_enterprise
   LET lr_gzxo.gzxostus = "Y"
   LET lr_gzxo.gzxoownid = g_user
   LET lr_gzxo.gzxoowndp = g_dept
   LET lr_gzxo.gzxocrtid = g_user
   LET lr_gzxo.gzxocrtdp = g_dept
   LET lr_gzxo.gzxocrtdt = cl_get_current()

   INSERT INTO gzxo_t(gzxostus,gzxoent,gzxo001,gzxo002,gzxo003,gzxo004,gzxoownid,gzxoowndp,gzxocrtid,gzxocrtdp,gzxocrtdt)
               VALUES(lr_gzxo.gzxostus,lr_gzxo.gzxoent,lr_gzxo.gzxo001,lr_gzxo.gzxo002,lr_gzxo.gzxo003,lr_gzxo.gzxo004,lr_gzxo.gzxoownid,lr_gzxo.gzxoowndp,lr_gzxo.gzxocrtid,lr_gzxo.gzxocrtdp,lr_gzxo.gzxocrtdt)
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN ""
   END IF
   
   RETURN lr_gzxo.gzxo001
END FUNCTION]]>
</point>
  <point name="main.memo" cite_std="N" status="" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
  <point name="main.import" cite_std="N" status="" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
  <point name="free_style.function" cite_std="N" status="" ver="" src="" new="Y" order="">
<![CDATA[]]>
</point>
</add_points>