<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="azzi801" std_prog="azzi801" erpver="1.0" module="AZZ" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="input.a.gzxd001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzxd_m.gzxd001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzxd_m.gzxd001 != g_gzxd001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxd_t WHERE "||"gzxdent = '" ||g_enterprise|| "' AND "||"gzxd001 = '"||g_gzxd_m.gzxd001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <section id="azzi801.browser_fill" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充(一般單檔)
PRIVATE FUNCTION azzi801_browser_fill(p_wc,ps_page_action) 
   DEFINE p_wc              STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_gzxd_m.* TO NULL
   INITIALIZE g_wc TO NULL
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET l_searchcol = "gzxd001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
 
   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   
   #add-point:browser_fill段wc控制
   {<point name="browser_fill.wc"/>}
   #end add-point
 
   LET g_sql = " SELECT COUNT(*) FROM gzxd_t ",
               "  ",
               "  ",
               " WHERE gzxdent = '" ||g_enterprise|| "' AND ", 
               p_wc CLIPPED, cl_sql_add_filter("gzxd_t")
                
   #add-point:browser_fill段cnt_sql
   {<point name="browser_fill.cnt_sql"/>}
   #end add-point
				
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt
   FREE header_cnt_pre 
   
   #若超過最大顯示筆數
   
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   LET g_wc = p_wc
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
 
   CASE ps_page_action
      
      WHEN "F" 
         LET g_pagestart = 1
      
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
      
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
            CALL cl_err(g_jump,'azz-998',0)
         END IF
         
      OTHERWISE
         
   END CASE
   
   LET l_sql_rank = "SELECT gzxdstus,gzxd001,RANK() OVER(ORDER BY gzxd001 ",
 
                    g_order,
                    ") AS RANK ",
                    " FROM gzxd_t ",
                    "  ",
                    "  ",
                    " WHERE gzxdent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("gzxd_t")
 
   #add-point:browser_fill段before_pre
   {<point name="browser_fill.before_pre"/>}
   #end add-point					
					
   #定義翻頁CURSOR
   LET g_sql= " SELECT gzxdstus,gzxd001 FROM (",l_sql_rank,") ",
              "  WHERE RANK >= ", g_pagestart,
              "    AND RANK <  ", (g_pagestart + g_max_browse) , 
              "  ORDER BY ",l_searchcol," ",g_order 
 
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzxd001
      IF SQLCA.sqlcode THEN
         CALL cl_err("foreach:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
      
      
      #LET g_browser[g_cnt].b_statepic = cl_get_actipic(g_browser[g_cnt].b_statepic)
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err("Max_Row:"||g_max_rec USING "<<<<<","std-00002",0)
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser_cnt
   LET g_rec_b = g_cnt - 1
   LET g_current_cnt = g_browser_cnt
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi801.construct" ver="5" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION azzi801_construct()
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_gzxd_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON gzxd001,gzxd002,passwd,gzxd004
      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         
      
         #一般欄位
         #---------------------------<  Master  >---------------------------
         #----<<gzxd001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzxd001
            #add-point:BEFORE FIELD gzxd001
            {<point name="construct.b.gzxd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxd001
            
            #add-point:AFTER FIELD gzxd001
            {<point name="construct.a.gzxd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzxd001
         ON ACTION controlp INFIELD gzxd001
            #add-point:ON ACTION controlp INFIELD gzxd001
            {<point name="construct.c.gzxd001" />}
            #END add-point
 
         #----<<gzxd002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzxd002
            #add-point:BEFORE FIELD gzxd002
            {<point name="construct.b.gzxd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxd002
            
            #add-point:AFTER FIELD gzxd002
            {<point name="construct.a.gzxd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzxd002
         ON ACTION controlp INFIELD gzxd002
            #add-point:ON ACTION controlp INFIELD gzxd002
            {<point name="construct.c.gzxd002" />}
            #END add-point
 
         #----<<passwd>>----
         #此段落由子樣板a01產生
         BEFORE FIELD passwd
            #add-point:BEFORE FIELD passwd
            {<point name="construct.b.passwd" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD passwd
            
            #add-point:AFTER FIELD passwd
            {<point name="construct.a.passwd" />}
            #END add-point
            
 
         #Ctrlp:construct.c.passwd
         ON ACTION controlp INFIELD passwd
            #add-point:ON ACTION controlp INFIELD passwd
            {<point name="construct.c.passwd" />}
            #END add-point
 
         #----<<gzxd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzxd004
            #add-point:BEFORE FIELD gzxd004
            {<point name="construct.b.gzxd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxd004
            
            #add-point:AFTER FIELD gzxd004
            {<point name="construct.a.gzxd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzxd004
         ON ACTION controlp INFIELD gzxd004
            #add-point:ON ACTION controlp INFIELD gzxd004
            {<point name="construct.c.gzxd004" />}
            #END add-point
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
  
END FUNCTION
]]>
  </section>
  <section id="azzi801.default_search" ver="3" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION azzi801_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " gzxd001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.delete" ver="4" status="" src="s">
    <![CDATA[#+ 資料刪除 
PRIVATE FUNCTION azzi801_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   IF g_gzxd_m.gzxd001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   CALL azzi801_show()
   
   CALL s_transaction_begin()
    
   LET g_gzxd001_t = g_gzxd_m.gzxd001
 
   
   
 
   OPEN azzi801_cl USING g_enterprise,
                           g_gzxd_m.gzxd001
 
   IF STATUS THEN
      CALL cl_err("OPEN azzi801_cl:", STATUS, 0)
      CLOSE azzi801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH azzi801_cl INTO g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.passwd,g_gzxd_m.gzxd004
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_gzxd_m.gzxd001,SQLCA.sqlcode,0)
      RETURN
   END IF
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi801_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
      DELETE FROM gzxd_t 
       WHERE gzxdent = g_enterprise AND gzxd001 = g_gzxd_m.gzxd001 
 
 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("gzxd_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
  
      
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      
      CLEAR FORM
      CALL azzi801_ui_browser_refresh()
      IF g_browser_cnt > 0 THEN
         CALL azzi801_browser_fill(g_wc,"")
         CALL azzi801_fetch("P")
      ELSE
         CALL azzi801_browser_fill(" 1=1 ","F")
      END IF
      
   END IF
 
   CLOSE azzi801_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzxd_m.gzxd001,"D")
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.description" ver="6" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000023
#+ 
#+ Filename...: azzi801
#+ Description: 登入密碼設定
#+ Creator....: 00845(2013/11/25)
#+ Modifier...: 00845(2013/11/25)
#+ Buildtype..: 應用 i01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="azzi801.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi801_fetch(p_fl)
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   CASE p_fl
      WHEN "F" LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         LET g_current_idx = g_header_cnt        
      WHEN "/"
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count        #總筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   
   
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
 
   CALL cl_navigator_setting(g_browser_idx, g_browser_cnt )
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_gzxd_m.gzxd001 = g_browser[g_current_idx].b_gzxd001
 
                       
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi801_master_referesh USING g_gzxd_m.gzxd001 INTO g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.gzxd004 

   IF SQLCA.sqlcode THEN
      CALL cl_err("gzxd_t",SQLCA.sqlcode,0)
      INITIALIZE g_gzxd_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #重新顯示
   CALL azzi801_show()
 
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi801_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION azzi801_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.global" ver="4" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_gzxd_m RECORD
       gzxd001 LIKE gzxd_t.gzxd001, 
   gzxd002 LIKE gzxd_t.gzxd002, 
   passwd LIKE type_t.chr80, 
   gzxd004 LIKE gzxd_t.gzxd004
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_gzxd_m        type_g_gzxd_m
DEFINE g_gzxd_m_t      type_g_gzxd_m                #備份舊值
   DEFINE g_gzxd001_t LIKE gzxd_t.gzxd001
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD                   #資料瀏覽之欄位  
         b_statepic     LIKE type_t.chr50,
            b_gzxd001 LIKE gzxd_t.gzxd001
         #,rank           LIKE type_t.num10
      END RECORD 
          
#無單頭append欄位定義
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
  
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING             #確定當下點擊的單身
 
#快速搜尋用
DEFINE g_searchcol           STRING             #查詢欄位代碼
DEFINE g_searchstr           STRING             #查詢欄位字串
DEFINE g_order               STRING             #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5   #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5   #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10  #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5   #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5   #Browser 總筆數(所有資料)
DEFINE g_tmp_page            LIKE type_t.num5   
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_chk                 BOOLEAN
DEFINE g_default             BOOLEAN            #是否有外部參數查詢
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="azzi801.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi801_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL azzi801_default_search()
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.input" ver="3" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION azzi801_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #切換畫面
   
   CALL cl_set_head_visible("","YES")  
   
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL azzi801_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi801_set_no_entry(p_cmd)
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DISPLAY BY NAME g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.passwd,g_gzxd_m.gzxd004
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.passwd,g_gzxd_m.gzxd004 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            
            #add-point:input開始前
            {<point name="input.before.input"/>}
            #end add-point
   
         #---------------------------<  Master  >---------------------------
         #----<<gzxd001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzxd001
            #add-point:BEFORE FIELD gzxd001
            {<point name="input.b.gzxd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxd001
            
            #add-point:AFTER FIELD gzxd001
            {<point name="input.a.gzxd001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzxd001
            #add-point:ON CHANGE gzxd001
            {<point name="input.g.gzxd001" />}
            #END add-point
 
         #----<<gzxd002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzxd002
            #add-point:BEFORE FIELD gzxd002
            {<point name="input.b.gzxd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxd002
            
            #add-point:AFTER FIELD gzxd002
            {<point name="input.a.gzxd002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzxd002
            #add-point:ON CHANGE gzxd002
            {<point name="input.g.gzxd002" />}
            #END add-point
 
         #----<<passwd>>----
         #此段落由子樣板a01產生
         BEFORE FIELD passwd
            #add-point:BEFORE FIELD passwd
            {<point name="input.b.passwd" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD passwd
            
            #add-point:AFTER FIELD passwd
            {<point name="input.a.passwd" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE passwd
            #add-point:ON CHANGE passwd
            {<point name="input.g.passwd" />}
            #END add-point
 
         #----<<gzxd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD gzxd004
            #add-point:BEFORE FIELD gzxd004
            {<point name="input.b.gzxd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxd004
            
            #add-point:AFTER FIELD gzxd004
            {<point name="input.a.gzxd004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzxd004
            #add-point:ON CHANGE gzxd004
            {<point name="input.g.gzxd004" />}
            #END add-point
 
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<gzxd001>>----
         #Ctrlp:input.c.gzxd001
         ON ACTION controlp INFIELD gzxd001
            #add-point:ON ACTION controlp INFIELD gzxd001
            {<point name="input.c.gzxd001" />}
            #END add-point
 
         #----<<gzxd002>>----
         #Ctrlp:input.c.gzxd002
         ON ACTION controlp INFIELD gzxd002
            #add-point:ON ACTION controlp INFIELD gzxd002
            {<point name="input.c.gzxd002" />}
            #END add-point
 
         #----<<passwd>>----
         #Ctrlp:input.c.passwd
         ON ACTION controlp INFIELD passwd
            #add-point:ON ACTION controlp INFIELD passwd
            {<point name="input.c.passwd" />}
            #END add-point
 
         #----<<gzxd004>>----
         #Ctrlp:input.c.gzxd004
         ON ACTION controlp INFIELD gzxd004
            #add-point:ON ACTION controlp INFIELD gzxd004
            {<point name="input.c.gzxd004" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()   #錯誤訊息統整顯示
 
            IF p_cmd <> "u" THEN
               LET l_count = 1  
 
               SELECT COUNT(*) INTO l_count FROM gzxd_t
                WHERE gzxdent = g_enterprise AND gzxd001 = g_gzxd_m.gzxd001
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  INSERT INTO gzxd_t (gzxdent,gzxd001,gzxd002,gzxd004)
                  VALUES (g_enterprise,g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.gzxd004) 
                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("gzxd_t",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL cl_err( "g_gzxd_m.gzxd001", "std-00006", 0 )
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE gzxd_t SET (gzxd001,gzxd002,gzxd004) = (g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.gzxd004) 

                WHERE gzxdent = g_enterprise AND gzxd001 = g_gzxd001_t #
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("gzxd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("gzxd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                     #資料多語言用-增/改
                     
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            END IF
           #controlp
      END INPUT
          
      #add-point:input段more input 
      {<point name="input.more_input"/>}
      #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.insert" ver="2" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION azzi801_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM #清畫面欄位內容
 
   INITIALIZE g_gzxd_m.* LIKE gzxd_t.*             #DEFAULT 設定
   LET g_gzxd001_t = NULL
 
   
   CALL s_transaction_begin()
   
   WHILE TRUE
      #六階樹狀給值
 
      
      #公用欄位給值
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      CALL azzi801_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzxd_m.* = g_gzxd_m_t.*
         CALL azzi801_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   LET g_gzxd001_t = g_gzxd_m.gzxd001
 
   
   LET g_state = "Y"
 
   LET g_wc = g_wc,  
              " OR ( gzxdent = '" ||g_enterprise|| "' AND",
              " gzxd001 = '", g_gzxd_m.gzxd001 CLIPPED, "' "
 
              , ") "
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.main" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT gzxd001,gzxd002,'',gzxd004 FROM gzxd_t WHERE gzxdent= ? AND gzxd001=?  
       FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE azzi801_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzxd001,gzxd002,gzxd004",
               " FROM gzxd_t",
               " WHERE gzxdent = '" ||g_enterprise|| "' AND gzxd001 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi801_master_referesh FROM g_sql
 
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi801 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi801_init()   
 
      #進入選單 Menu (="N")
      CALL azzi801_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi801
      
   END IF 
   
   CLOSE azzi801_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="azzi801.modify" ver="2" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION azzi801_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   IF g_gzxd_m.gzxd001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
   
   EXECUTE azzi801_master_referesh USING g_gzxd_m.gzxd001 INTO g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.gzxd004 

 
   ERROR ""
  
   LET g_gzxd001_t = g_gzxd_m.gzxd001
 
   
   CALL s_transaction_begin()
   
   OPEN azzi801_cl USING g_enterprise,g_gzxd_m.gzxd001
   IF STATUS THEN
      CALL cl_err("OPEN azzi801_cl:", STATUS, 1)
      CLOSE azzi801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi801_cl INTO g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.passwd,g_gzxd_m.gzxd004
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzxd_t",SQLCA.sqlcode,0)
      CLOSE azzi801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL azzi801_show()
   
   WHILE TRUE
      LET g_gzxd_m.gzxd001 = g_gzxd001_t
 
      
      #寫入修改者/修改日期資訊
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      CALL azzi801_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzxd_m.* = g_gzxd_m_t.*
         CALL azzi801_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
 
 
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_gzxd_m.gzxd001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE azzi801_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzxd_m.gzxd001,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
]]>
  </section>
  <section id="azzi801.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="azzi801.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="azzi801.query" ver="4" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi801_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
 
   CALL g_browser.clear() 
 
   IF g_worksheet_hidden THEN  #browser panel折疊
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   IF g_header_hidden THEN    #單頭折疊
      CALL gfrm_curr.setElementHidden("vb_master",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_gzxd_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL azzi801_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi801_browser_fill(g_wc,"F")
      CALL azzi801_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   LET g_error_show = 1
   CALL azzi801_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL azzi801_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="azzi801.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION azzi801_reproduce()
   DEFINE l_newno     LIKE gzxd_t.gzxd001 
   DEFINE l_oldno     LIKE gzxd_t.gzxd001 
 
   DEFINE l_master    RECORD LIKE gzxd_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   
   IF g_gzxd_m.gzxd001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_gzxd001_t = g_gzxd_m.gzxd001
 
   
   LET g_gzxd_m.gzxd001 = ""
 
    
   CALL azzi801_set_entry("a")
   CALL azzi801_set_no_entry("a")
   
   #公用欄位給予預設值
   
 
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL azzi801_input("r")
 
   
   
   IF INT_FLAG  THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   CALL s_transaction_begin()
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("gzxd_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " gzxd001 = '", g_gzxd_m.gzxd001 CLIPPED, "' "
 
              , ") "
   
   LET g_gzxd001_t = g_gzxd_m.gzxd001
 
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION
]]>
  </section>
  <section id="azzi801.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi801_set_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("gzxd001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi801_set_no_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzxd001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi801_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzxd_m.gzxd001
   LET g_pk_array[1].column = 'gzxd001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="azzi801.show" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示 
PRIVATE FUNCTION azzi801_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_gzxd_m_t.* = g_gzxd_m.*      #保存單頭舊值
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   
    
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi801_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzxd_m.gzxd001,g_gzxd_m.gzxd002,g_gzxd_m.passwd,g_gzxd_m.gzxd004
   
   #顯示狀態(stus)圖片
   
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="azzi801.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi801.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="azzi801.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi801_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzxd001 = g_gzxd_m.gzxd001 
 
	 THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser_cnt-1
   IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_idx = g_browser_cnt
   END IF
  
END FUNCTION
]]>
  </section>
  <section id="azzi801.ui_dialog" ver="5" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION azzi801_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 1
   
   
   #action default動作
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL azzi801_browser_fill(g_wc,"")
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_gzxd001 = g_gzxd001_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
    
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL azzi801_fetch("")   
               END IF               
         
            #ON ACTION statechange
            #   LET g_action_choice = "statechange"
            #   CALL azzi801_statechange()
               
            ON ACTION first
               CALL azzi801_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL azzi801_fetch("N")
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL azzi801_fetch("/")
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               CALL azzi801_fetch("P")
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               CALL azzi801_fetch("L")  
               #CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               #CALL fgl_set_arr_curr(g_current_idx)
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL azzi801_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi801_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL azzi801_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi801_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               EXIT MENU
            END IF
 
 
            
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi801_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi801_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi801_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL azzi801_fetch("")      
                  
               
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
         
            BEFORE DIALOG
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL azzi801_fetch("")   
               END IF               
               
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
            #ON ACTION statechange
            #   CALL azzi801_statechange()
            #   LET g_action_choice="statechange"
            #   EXIT DIALOG
         
            
            
            ON ACTION first
               CALL azzi801_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL azzi801_fetch("N")
               LET g_current_row = g_current_idx
         
            ON ACTION jump
               CALL azzi801_fetch("/")
               LET g_current_row = g_current_idx
         
            ON ACTION previous
               CALL azzi801_fetch("P")
               LET g_current_row = g_current_idx
         
            ON ACTION last 
               CALL azzi801_fetch("L")  
               LET g_current_row = g_current_idx
         
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
         
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
               
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            #快速搜尋
               
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL azzi801_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi801_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL azzi801_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi801_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
            
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi801_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi801_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi801_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
