#該程式已解開Section, 不再透過樣板產出!
{<section id="azzi310.description" >}
#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000056
#+ 
#+ Filename...: azzi310
#+ Description: 自定義查詢維護作業
#+ Creator....: 02286(2015-05-12 14:25:08)
#+ Modifier...: 02286(2015-07-08 17:14:10) -SD/PR-

{</section>}

{<section id="azzi310.global" >}
#應用 t01 樣板自動產生(Version:39)
#+ Modifier...: No.150924-00005#1   2015/9/24   chenjpa  调整打印格式
#                                                        1.打印:总和结果没有显示
#                                                        2.打印结果数据格式须右对齐
#                                                        3.打印:小计显示顺序有问题
#+ Modifier...: No.151016-00016#1   2015/10/16  chenjpa   修改参数设置
#+ Modifier...: No.151116-00008#1   2015/11/16  chenjpa   修改客制码的赋值方式
#+ Modifier...: No.151214-00004#1   2015/12/14  chenjpa   增加解析含有case when/decode/nvl关键字的sql
#+ Modifier...: No.151214-00004#1   2015/12/15  chenjpa   修正一个sql一个表多次使用问题
#+ Modifier...: No.151214-00004#1   2015/12/16  chenjpa   修正汇出excel内容被截断
{<point name="global.memo" />}
#+ Modifier...: No.160711-00011#1   2016/07/11   chenjpa  修正无法解析带算术运算符的栏位  
#+ Modifier...: No.160721-00005#1   2016/07/25   chenjpa  修正自定义栏位无法汇总的问题
#+ Modifier...: No.160805-00010#1   2016/08/05   chenjpa  1.aooi920调用azzi310提供接口，连续多次调用但是传的报表ID不一样，弹出qbe界面是一样
#                                                        2.视图名字超过15个字符会被截断
#+ Modifier...: No.160523-00002#1   2016/05/23   chenjpa  新增塞选视图view数据
#+ Modifier...: No.160523-00002#2   2016/06/15   chenjpa  新增串查
#+ Modifier...: No.160822-00021#1   2016/08/22   chenjpa  修改重新解析sql,保留单身原设定好的的数据
#+ Modifier...: No.160825-00014#1   2016/08/25   chenjpa  修改表头和表尾的位置
#+ Modifier...: No.160830-00018#1   2016/08/30   chenjpa  将自定义报表汇出excelhtml格式改成xml格式
#+ Modifier...: No.160901-00030#1   2016/09/01   chenjpa  增加串查传多个参数

IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzia_m        RECORD
       gzia001 LIKE gzia_t.gzia001, 
   gzia002 LIKE gzia_t.gzia002, 
   gzial003 LIKE gzial_t.gzial003, 
   gzia003 LIKE gzia_t.gzia003, 
   gzia005 LIKE gzia_t.gzia005, 
   gzia004 LIKE gzia_t.gzia004, 
   gzia006 LIKE gzia_t.gzia006, 
   gziastus LIKE gzia_t.gziastus, 
   gziaownid LIKE gzia_t.gziaownid, 
   gziaownid_desc LIKE type_t.chr80, 
   gziaowndp LIKE gzia_t.gziaowndp, 
   gziaowndp_desc LIKE type_t.chr80, 
   gziacrtid LIKE gzia_t.gziacrtid, 
   gziacrtid_desc LIKE type_t.chr80, 
   gziacrtdp LIKE gzia_t.gziacrtdp, 
   gziacrtdp_desc LIKE type_t.chr80, 
   gziacrtdt LIKE gzia_t.gziacrtdt, 
   gziamodid LIKE gzia_t.gziamodid, 
   gziamodid_desc LIKE type_t.chr80, 
   gziamoddt LIKE gzia_t.gziamoddt, 
   groupname LIKE type_t.chr500, 
   sumyname1 LIKE type_t.chr500, 
   comb_sumy LIKE type_t.chr500, 
   s_global_var LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzib_d        RECORD
       gzib002 LIKE gzib_t.gzib002, 
   gzib003 LIKE gzib_t.gzib003, 
   gzib002_desc LIKE type_t.chr500, 
   gzib005 LIKE gzib_t.gzib005, 
   gzib006 LIKE gzib_t.gzib006, 
   gzib004 LIKE gzib_t.gzib004
       END RECORD
PRIVATE TYPE type_g_gzib2_d RECORD
       gzie002 LIKE gzie_t.gzie002, 
   gzie003 LIKE gzie_t.gzie003, 
   gzie005 LIKE gzie_t.gzie005
       END RECORD
PRIVATE TYPE type_g_gzib3_d RECORD
       gzid002 LIKE gzid_t.gzid002, 
   gzid003 LIKE gzid_t.gzid003,
   gzig002 LIKE gzig_t.gzig002,   #151214-00004#2 add #增加资料表别名的信息，解决一表多用问题,gzig002存储的是真实表名,gzid003存储的是别名
   gzid004 LIKE gzid_t.gzid004, 
   gzidl004 LIKE type_t.chr500, 
   gzid005 LIKE gzid_t.gzid005, 
   gzid006 LIKE gzid_t.gzid006, 
   gzid007 LIKE gzid_t.gzid007, 
   gzid008 LIKE gzid_t.gzid008, 
   gzid009 LIKE gzid_t.gzid009, 
   gzid014 LIKE gzid_t.gzid014,  #160523-00002#2 add
   gzid015 LIKE gzid_t.gzid015,  #160523-00002#2 add
   gzid017 LIKE gzid_t.gzid017,  #160901-00030#1 add
   gzid010 LIKE gzid_t.gzid010, 
   gzid011 LIKE gzid_t.gzid011, 
   gzid012 LIKE gzid_t.gzid012
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_gzia001 LIKE gzia_t.gzia001
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_gzia_m          type_g_gzia_m
DEFINE g_gzia_m_t        type_g_gzia_m
DEFINE g_gzia_m_o        type_g_gzia_m
DEFINE g_gzia_m_mask_o   type_g_gzia_m #轉換遮罩前資料
DEFINE g_gzia_m_mask_n   type_g_gzia_m #轉換遮罩後資料
 
   DEFINE g_gzia001_t LIKE gzia_t.gzia001
 
 
DEFINE g_gzib_d          DYNAMIC ARRAY OF type_g_gzib_d
DEFINE g_gzib_d_t        type_g_gzib_d
DEFINE g_gzib_d_o        type_g_gzib_d
DEFINE g_gzib_d_mask_o   DYNAMIC ARRAY OF type_g_gzib_d #轉換遮罩前資料
DEFINE g_gzib_d_mask_n   DYNAMIC ARRAY OF type_g_gzib_d #轉換遮罩後資料
DEFINE g_gzib2_d          DYNAMIC ARRAY OF type_g_gzib2_d
DEFINE g_gzib2_d_t        type_g_gzib2_d
DEFINE g_gzib2_d_o        type_g_gzib2_d
DEFINE g_gzib2_d_mask_o   DYNAMIC ARRAY OF type_g_gzib2_d #轉換遮罩前資料
DEFINE g_gzib2_d_mask_n   DYNAMIC ARRAY OF type_g_gzib2_d #轉換遮罩後資料
DEFINE g_gzib3_d          DYNAMIC ARRAY OF type_g_gzib3_d
DEFINE g_gzib3_d_t        type_g_gzib3_d
DEFINE g_gzib3_d_o        type_g_gzib3_d
DEFINE g_gzib3_d_mask_o   DYNAMIC ARRAY OF type_g_gzib3_d #轉換遮罩前資料
DEFINE g_gzib3_d_mask_n   DYNAMIC ARRAY OF type_g_gzib3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      gzial001 LIKE gzial_t.gzial001,
      gzial003 LIKE gzial_t.gzial003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="azzi310.main" >}
#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT gzia001,gzia002,'',gzia003,gzia005,gzia004,gzia006,gziastus,gziaownid, 
       '',gziaowndp,'',gziacrtid,'',gziacrtdp,'',gziacrtdt,gziamodid,'',gziamoddt,'','','',''", 
                      " FROM gzia_t",
                      " WHERE gzia001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi310_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.gzia001,t0.gzia002,t0.gzia003,t0.gzia005,t0.gzia004,t0.gzia006,t0.gziastus, 
       t0.gziaownid,t0.gziaowndp,t0.gziacrtid,t0.gziacrtdp,t0.gziacrtdt,t0.gziamodid,t0.gziamoddt,t1.ooag011 , 
       t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011",
               " FROM gzia_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.gziaownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.gziaowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.gziacrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.gziacrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.gziamodid  ",
 
               " WHERE  t0.gzia001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi310_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi310 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi310_init()   
 
      #進入選單 Menu (="N")
      CALL azzi310_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi310
      
   END IF 
   
   CLOSE azzi310_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 

{</section>}

{<section id="azzi310.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi310_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('gziastus','17','N,Y')
 
      CALL cl_set_combo_scc('gzib006','128') 
   CALL cl_set_combo_scc('gzid005','191') 
   CALL cl_set_combo_scc('gzid010','174') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL azzi310_default_search()
    
END FUNCTION

{</section>}

{<section id="azzi310.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION azzi310_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
{<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
{<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi310_insert()
            #add-point:ON ACTION insert
{<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
{<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_gzia_m.* TO NULL
         CALL g_gzib_d.clear()
         CALL g_gzib2_d.clear()
         CALL g_gzib3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL azzi310_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
     
         DISPLAY ARRAY g_gzib_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi310_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
{<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL azzi310_idx_chk()
               #add-point:page1自定義行為
{<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_gzib2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
{<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL azzi310_idx_chk()
               #add-point:page2自定義行為
{<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
{<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_gzib3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
{<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL azzi310_idx_chk()
               #add-point:page3自定義行為
{<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
{<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            #CALL DIALOG.setArrayAttributes("s_detail3", g_detail3_attr) #test-
            CALL azzi310_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi310_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi310_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL azzi310_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL azzi310_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL azzi310_set_act_visible()   
            CALL azzi310_set_act_no_visible()
            IF NOT (g_gzia_m.gzia001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " ",
                                  " gzia001 = '", g_gzia_m.gzia001, "' "
 
               #填到對應位置
               CALL azzi310_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gzia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzib_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzie_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "gzid_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL azzi310_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gzia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzib_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzie_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "gzid_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi310_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL azzi310_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL azzi310_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi310_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL azzi310_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi310_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL azzi310_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi310_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL azzi310_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi310_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL azzi310_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi310_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_gzib_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_gzib2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_gzib3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel
{<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION groupup
#            LET g_action_choice="groupup"
#            IF cl_auth_chk_act("groupup") THEN
               
               #add-point:ON ACTION groupup
{<point name="menu.groupup" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi310_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi310_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION qbdup
#            LET g_action_choice="qbdup"
#            IF cl_auth_chk_act("qbdup") THEN
               
               #add-point:ON ACTION qbdup
{<point name="menu.qbdup" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION argup
#            LET g_action_choice="argup"
#            IF cl_auth_chk_act("argup") THEN
               
               #add-point:ON ACTION argup
{<point name="menu.argup" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION groupadd
#            LET g_action_choice="groupadd"
#            IF cl_auth_chk_act("groupadd") THEN
               
               #add-point:ON ACTION groupadd
{<point name="menu.groupadd" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION groupdown
#            LET g_action_choice="groupdown"
#            IF cl_auth_chk_act("groupdown") THEN
               
               #add-point:ON ACTION groupdown
{<point name="menu.groupdown" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi310_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION groupdel
#            LET g_action_choice="groupdel"
#            IF cl_auth_chk_act("groupdel") THEN
               
               #add-point:ON ACTION groupdel
{<point name="menu.groupdel" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi310_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi310_reproduce()
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION sqlbuilder
#            LET g_action_choice="sqlbuilder"
#            IF cl_auth_chk_act("sqlbuilder") THEN
               
               #add-point:ON ACTION sqlbuilder
{<point name="menu.sqlbuilder" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION sumydel
#            LET g_action_choice="sumydel"
#            IF cl_auth_chk_act("sumydel") THEN
               
               #add-point:ON ACTION sumydel
{<point name="menu.sumydel" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION argdown
#            LET g_action_choice="argdown"
#            IF cl_auth_chk_act("argdown") THEN
               
               #add-point:ON ACTION argdown
{<point name="menu.argdown" />}
               #END add-point
#               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION qbedown
#            LET g_action_choice="qbedown"
#            IF cl_auth_chk_act("qbedown") THEN
               
               #add-point:ON ACTION qbedown
{<point name="menu.qbedown" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi310_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION sqledit
#            LET g_action_choice="sqledit"
#            IF cl_auth_chk_act("sqledit") THEN
               
               #add-point:ON ACTION sqledit
{<point name="menu.sqledit" />}
               #END add-point
#               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION sqlverify
#            LET g_action_choice="sqlverify"
#            IF cl_auth_chk_act("sqlverify") THEN
               
               #add-point:ON ACTION sqlverify
{<point name="menu.sqlverify" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION sumyadd
#            LET g_action_choice="sumyadd"
#            IF cl_auth_chk_act("sumyadd") THEN
               
               #add-point:ON ACTION sumyadd
{<point name="menu.sumyadd" />}
               #END add-point
               
#            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
#         ON ACTION sqltest
#            LET g_action_choice="sqltest"
#            IF cl_auth_chk_act("sqltest") THEN
               
               #add-point:ON ACTION sqltest
{<point name="menu.sqltest" />}
               #END add-point
               
#            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL azzi310_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi310_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi310_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
        ON ACTION page_gp                #修改程序框架-增
           LET g_current_page=1
           
         ON ACTION page_sumy
           LET g_current_page=2
           
         ON ACTION page_arg
           LET g_current_page=3
           
        ON ACTION page_qbe
           LET g_current_page=4
        

         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
{<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="azzi310.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi310_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE gzia001 ",
                      " FROM gzia_t ",
                      " ",
                      " LEFT JOIN gzib_t ON gzia001 = gzib001 ", "  ",
                      #add-point:browser_fill段sql(gzib_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN gzie_t ON gzia001 = gzie001", "  ",
                      #add-point:browser_fill段sql(gzie_t1)
                      {<point name="browser_fill.cnt.join.gzie_t1"/>}
                      #end add-point
 
                      " LEFT JOIN gzid_t ON gzia001 = gzid001", "  ",
                      #add-point:browser_fill段sql(gzid_t1)
                      {<point name="browser_fill.cnt.join.gzid_t1"/>}
                      #end add-point
 
 
 
                      " LEFT JOIN gzial_t ON gzia001 = gzial001 AND gzial002 = '",g_dlang,"' ", 
                      " ", 
                      " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzia_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE gzia001 ",
                      " FROM gzia_t ", 
                      "  ",
                      "  LEFT JOIN gzial_t ON gzia001 = gzial001 AND gzial002 = '",g_dlang,"' ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("gzia_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_gzia_m.* TO NULL
      CALL g_gzib_d.clear()        
      CALL g_gzib2_d.clear() 
      CALL g_gzib3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.gzia001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.gziastus,t0.gzia001 ",
               " FROM gzia_t t0",
               "  ",
               "  LEFT JOIN gzib_t ON gzia001 = gzib001 ", "  ", 
               #add-point:browser_fill段sql(gzib_t1)
               {<point name="browser_fill.join.gzib_t1"/>}
               #end add-point
               "  LEFT JOIN gzie_t ON gzia001 = gzie001", "  ", 
               #add-point:browser_fill段sql(gzie_t1)
               {<point name="browser_fill.join.gzie_t1"/>}
               #end add-point
 
               "  LEFT JOIN gzid_t ON gzia001 = gzid001", "  ", 
               #add-point:browser_fill段sql(gzid_t1)
               {<point name="browser_fill.join.gzid_t1"/>}
               #end add-point
 
 
 
               "  ",
               
               " LEFT JOIN gzial_t ON gzia001 = gzial001 AND gzial002 = '",g_dlang,"' ",
               " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("gzia_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY gzia001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"gzia_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzia001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_gzia001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="azzi310.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi310_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_gzia_m.gzia001 = g_browser[g_current_idx].b_gzia001   
 
   EXECUTE azzi310_master_referesh USING g_gzia_m.gzia001 INTO g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzia003, 
       g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp, 
       g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt, 
       g_gzia_m.gziaownid_desc,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp_desc, 
       g_gzia_m.gziamodid_desc
   CALL azzi310_gzia_t_mask()
   CALL azzi310_show()
      
END FUNCTION

{</section>}

{<section id="azzi310.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION azzi310_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="azzi310.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi310_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzia001 = g_gzia_m.gzia001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="azzi310.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi310_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
{<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
{<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzia_m.* TO NULL
   CALL g_gzib_d.clear()        
   CALL g_gzib2_d.clear() 
   CALL g_gzib3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
{<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzia001,gzia002,gzial003,gzia003,gzia005,gzia004,gzia006,gziastus,gziaownid, 
          gziaowndp,gziacrtid,gziacrtdp,gziacrtdt,gziamodid,gziamoddt,groupname,sumyname1,comb_sumy, 
          s_global_var
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<gziacrtdt>>----
         AFTER FIELD gziacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gziamoddt>>----
         AFTER FIELD gziamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gziacnfdt>>----
         
         #----<<gziapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.gzia001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia001
            #add-point:ON ACTION controlp INFIELD gzia001
{<point name="construct.c.gzia001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia001
            #add-point:BEFORE FIELD gzia001
{<point name="construct.b.gzia001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia001
            
            #add-point:AFTER FIELD gzia001
{<point name="construct.a.gzia001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia002
            #add-point:BEFORE FIELD gzia002
{<point name="construct.b.gzia002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia002
            
            #add-point:AFTER FIELD gzia002
{<point name="construct.a.gzia002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzia002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia002
            #add-point:ON ACTION controlp INFIELD gzia002
{<point name="construct.c.gzia002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzial003
            #add-point:BEFORE FIELD gzial003
{<point name="construct.b.gzial003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzial003
            
            #add-point:AFTER FIELD gzial003
{<point name="construct.a.gzial003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzial003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzial003
            #add-point:ON ACTION controlp INFIELD gzial003
{<point name="construct.c.gzial003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia003
            #add-point:BEFORE FIELD gzia003
{<point name="construct.b.gzia003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia003
            
            #add-point:AFTER FIELD gzia003
{<point name="construct.a.gzia003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzia003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia003
            #add-point:ON ACTION controlp INFIELD gzia003
{<point name="construct.c.gzia003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia005
            #add-point:BEFORE FIELD gzia005
{<point name="construct.b.gzia005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia005
            
            #add-point:AFTER FIELD gzia005
{<point name="construct.a.gzia005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzia005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia005
            #add-point:ON ACTION controlp INFIELD gzia005
{<point name="construct.c.gzia005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia004
            #add-point:BEFORE FIELD gzia004
{<point name="construct.b.gzia004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia004
            
            #add-point:AFTER FIELD gzia004
{<point name="construct.a.gzia004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzia004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia004
            #add-point:ON ACTION controlp INFIELD gzia004
{<point name="construct.c.gzia004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia006
            #add-point:BEFORE FIELD gzia006
{<point name="construct.b.gzia006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia006
            
            #add-point:AFTER FIELD gzia006
{<point name="construct.a.gzia006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzia006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia006
            #add-point:ON ACTION controlp INFIELD gzia006
{<point name="construct.c.gzia006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziastus
            #add-point:BEFORE FIELD gziastus
{<point name="construct.b.gziastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gziastus
            
            #add-point:AFTER FIELD gziastus
{<point name="construct.a.gziastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gziastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gziastus
            #add-point:ON ACTION controlp INFIELD gziastus
{<point name="construct.c.gziastus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziaownid
            #add-point:BEFORE FIELD gziaownid
{<point name="construct.b.gziaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gziaownid
            
            #add-point:AFTER FIELD gziaownid
{<point name="construct.a.gziaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gziaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gziaownid
            #add-point:ON ACTION controlp INFIELD gziaownid
{<point name="construct.c.gziaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziaowndp
            #add-point:BEFORE FIELD gziaowndp
{<point name="construct.b.gziaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gziaowndp
            
            #add-point:AFTER FIELD gziaowndp
{<point name="construct.a.gziaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gziaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gziaowndp
            #add-point:ON ACTION controlp INFIELD gziaowndp
{<point name="construct.c.gziaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziacrtid
            #add-point:BEFORE FIELD gziacrtid
{<point name="construct.b.gziacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gziacrtid
            
            #add-point:AFTER FIELD gziacrtid
{<point name="construct.a.gziacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gziacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gziacrtid
            #add-point:ON ACTION controlp INFIELD gziacrtid
{<point name="construct.c.gziacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziacrtdp
            #add-point:BEFORE FIELD gziacrtdp
{<point name="construct.b.gziacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gziacrtdp
            
            #add-point:AFTER FIELD gziacrtdp
{<point name="construct.a.gziacrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gziacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gziacrtdp
            #add-point:ON ACTION controlp INFIELD gziacrtdp
{<point name="construct.c.gziacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziacrtdt
            #add-point:BEFORE FIELD gziacrtdt
{<point name="construct.b.gziacrtdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziamodid
            #add-point:BEFORE FIELD gziamodid
{<point name="construct.b.gziamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gziamodid
            
            #add-point:AFTER FIELD gziamodid
{<point name="construct.a.gziamodid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gziamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gziamodid
            #add-point:ON ACTION controlp INFIELD gziamodid
{<point name="construct.c.gziamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziamoddt
            #add-point:BEFORE FIELD gziamoddt
{<point name="construct.b.gziamoddt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD groupname
            #add-point:BEFORE FIELD groupname
{<point name="construct.b.groupname" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD groupname
            
            #add-point:AFTER FIELD groupname
{<point name="construct.a.groupname" />}
            #END add-point
            
 
         #Ctrlp:construct.c.groupname
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD groupname
            #add-point:ON ACTION controlp INFIELD groupname
{<point name="construct.c.groupname" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sumyname1
            #add-point:BEFORE FIELD sumyname1
{<point name="construct.b.sumyname1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sumyname1
            
            #add-point:AFTER FIELD sumyname1
{<point name="construct.a.sumyname1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.sumyname1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sumyname1
            #add-point:ON ACTION controlp INFIELD sumyname1
{<point name="construct.c.sumyname1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD comb_sumy
            #add-point:BEFORE FIELD comb_sumy
{<point name="construct.b.comb_sumy" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD comb_sumy
            
            #add-point:AFTER FIELD comb_sumy
{<point name="construct.a.comb_sumy" />}
            #END add-point
            
 
         #Ctrlp:construct.c.comb_sumy
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD comb_sumy
            #add-point:ON ACTION controlp INFIELD comb_sumy
{<point name="construct.c.comb_sumy" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD s_global_var
            #add-point:BEFORE FIELD s_global_var
{<point name="construct.b.s_global_var" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD s_global_var
            
            #add-point:AFTER FIELD s_global_var
{<point name="construct.a.s_global_var" />}
            #END add-point
            
 
         #Ctrlp:construct.c.s_global_var
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD s_global_var
            #add-point:ON ACTION controlp INFIELD s_global_var
{<point name="construct.c.s_global_var" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
#      CONSTRUCT g_wc2_table1 ON gzib002,gzib003,gzib005,gzib006,gzib004
#           FROM s_detail1[1].gzib002,s_detail1[1].gzib003,s_detail1[1].gzib005,s_detail1[1].gzib006, 
#               s_detail1[1].gzib004
                      
#         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzib002
            #add-point:BEFORE FIELD gzib002
{<point name="construct.b.page1.gzib002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzib002
            
            #add-point:AFTER FIELD gzib002
{<point name="construct.a.page1.gzib002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzib002
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzib002
            #add-point:ON ACTION controlp INFIELD gzib002
{<point name="construct.c.page1.gzib002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzib003
            #add-point:BEFORE FIELD gzib003
{<point name="construct.b.page1.gzib003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzib003
            
            #add-point:AFTER FIELD gzib003
{<point name="construct.a.page1.gzib003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzib003
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzib003
            #add-point:ON ACTION controlp INFIELD gzib003
{<point name="construct.c.page1.gzib003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzib005
            #add-point:BEFORE FIELD gzib005
{<point name="construct.b.page1.gzib005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzib005
            
            #add-point:AFTER FIELD gzib005
{<point name="construct.a.page1.gzib005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzib005
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzib005
            #add-point:ON ACTION controlp INFIELD gzib005
{<point name="construct.c.page1.gzib005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzib006
            #add-point:BEFORE FIELD gzib006
{<point name="construct.b.page1.gzib006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzib006
            
            #add-point:AFTER FIELD gzib006
{<point name="construct.a.page1.gzib006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzib006
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzib006
            #add-point:ON ACTION controlp INFIELD gzib006
{<point name="construct.c.page1.gzib006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzib004
            #add-point:BEFORE FIELD gzib004
{<point name="construct.b.page1.gzib004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzib004
            
            #add-point:AFTER FIELD gzib004
{<point name="construct.a.page1.gzib004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzib004
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzib004
            #add-point:ON ACTION controlp INFIELD gzib004
{<point name="construct.c.page1.gzib004" />}
            #END add-point
 
   
       
#      END CONSTRUCT
      
#      CONSTRUCT g_wc2_table2 ON gzie002,gzie003,gzie005
#           FROM s_detail2[1].gzie002,s_detail2[1].gzie003,s_detail2[1].gzie005
                      
#         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzie002
            #add-point:BEFORE FIELD gzie002
{<point name="construct.b.page2.gzie002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzie002
            
            #add-point:AFTER FIELD gzie002
{<point name="construct.a.page2.gzie002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzie002
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzie002
            #add-point:ON ACTION controlp INFIELD gzie002
{<point name="construct.c.page2.gzie002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzie003
            #add-point:BEFORE FIELD gzie003
{<point name="construct.b.page2.gzie003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzie003
            
            #add-point:AFTER FIELD gzie003
{<point name="construct.a.page2.gzie003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzie003
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzie003
            #add-point:ON ACTION controlp INFIELD gzie003
{<point name="construct.c.page2.gzie003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzie005
            #add-point:BEFORE FIELD gzie005
{<point name="construct.b.page2.gzie005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzie005
            
            #add-point:AFTER FIELD gzie005
{<point name="construct.a.page2.gzie005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.gzie005
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzie005
            #add-point:ON ACTION controlp INFIELD gzie005
{<point name="construct.c.page2.gzie005" />}
            #END add-point
 
   
       
#      END CONSTRUCT
 
#      CONSTRUCT g_wc2_table3 ON gzid002,gzid003,gzid004,gzid005,gzid006,gzid007,gzid008,gzid009,gzid010, 
#          gzid011,gzid012
#           FROM s_detail3[1].gzid002,s_detail3[1].gzid003,s_detail3[1].gzid004,s_detail3[1].gzid005, 
#               s_detail3[1].gzid006,s_detail3[1].gzid007,s_detail3[1].gzid008,s_detail3[1].gzid009,s_detail3[1].gzid010, 
#               s_detail3[1].gzid011,s_detail3[1].gzid012
#                      
#         BEFORE CONSTRUCT
            #add-point:cs段before_construct
{<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid002
            #add-point:BEFORE FIELD gzid002
{<point name="construct.b.page3.gzid002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid002
            
            #add-point:AFTER FIELD gzid002
{<point name="construct.a.page3.gzid002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid002
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid002
            #add-point:ON ACTION controlp INFIELD gzid002
{<point name="construct.c.page3.gzid002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid003
            #add-point:BEFORE FIELD gzid003
{<point name="construct.b.page3.gzid003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid003
            
            #add-point:AFTER FIELD gzid003
{<point name="construct.a.page3.gzid003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid003
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid003
            #add-point:ON ACTION controlp INFIELD gzid003
{<point name="construct.c.page3.gzid003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid004
            #add-point:BEFORE FIELD gzid004
{<point name="construct.b.page3.gzid004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid004
            
            #add-point:AFTER FIELD gzid004
{<point name="construct.a.page3.gzid004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid004
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid004
            #add-point:ON ACTION controlp INFIELD gzid004
{<point name="construct.c.page3.gzid004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid005
            #add-point:BEFORE FIELD gzid005
{<point name="construct.b.page3.gzid005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid005
            
            #add-point:AFTER FIELD gzid005
{<point name="construct.a.page3.gzid005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid005
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid005
            #add-point:ON ACTION controlp INFIELD gzid005
{<point name="construct.c.page3.gzid005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid006
            #add-point:BEFORE FIELD gzid006
{<point name="construct.b.page3.gzid006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid006
            
            #add-point:AFTER FIELD gzid006
{<point name="construct.a.page3.gzid006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid006
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid006
            #add-point:ON ACTION controlp INFIELD gzid006
{<point name="construct.c.page3.gzid006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid007
            #add-point:BEFORE FIELD gzid007
{<point name="construct.b.page3.gzid007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid007
            
            #add-point:AFTER FIELD gzid007
{<point name="construct.a.page3.gzid007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid007
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid007
            #add-point:ON ACTION controlp INFIELD gzid007
{<point name="construct.c.page3.gzid007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid008
            #add-point:BEFORE FIELD gzid008
{<point name="construct.b.page3.gzid008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid008
            
            #add-point:AFTER FIELD gzid008
{<point name="construct.a.page3.gzid008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid008
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid008
            #add-point:ON ACTION controlp INFIELD gzid008
{<point name="construct.c.page3.gzid008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid009
            #add-point:BEFORE FIELD gzid009
{<point name="construct.b.page3.gzid009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid009
            
            #add-point:AFTER FIELD gzid009
{<point name="construct.a.page3.gzid009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid009
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid009
            #add-point:ON ACTION controlp INFIELD gzid009
{<point name="construct.c.page3.gzid009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid010
            #add-point:BEFORE FIELD gzid010
{<point name="construct.b.page3.gzid010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid010
            
            #add-point:AFTER FIELD gzid010
{<point name="construct.a.page3.gzid010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid010
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid010
            #add-point:ON ACTION controlp INFIELD gzid010
{<point name="construct.c.page3.gzid010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid011
            #add-point:BEFORE FIELD gzid011
{<point name="construct.b.page3.gzid011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid011
            
            #add-point:AFTER FIELD gzid011
{<point name="construct.a.page3.gzid011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid011
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid011
            #add-point:ON ACTION controlp INFIELD gzid011
{<point name="construct.c.page3.gzid011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
#         BEFORE FIELD gzid012
            #add-point:BEFORE FIELD gzid012
{<point name="construct.b.page3.gzid012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
#         AFTER FIELD gzid012
            
            #add-point:AFTER FIELD gzid012
{<point name="construct.a.page3.gzid012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.gzid012
         #應用 a03 樣板自動產生(Version:2)
#         ON ACTION controlp INFIELD gzid012
            #add-point:ON ACTION controlp INFIELD gzid012
{<point name="construct.c.page3.gzid012" />}
            #END add-point
 
   
       
#      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
{<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
{<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "gzia_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "gzib_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "gzie_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "gzid_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
{<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="azzi310.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi310_query()
   DEFINE ls_wc STRING
   #add-point:query段define
{<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
{<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzib_d.clear()
   CALL g_gzib2_d.clear()
   CALL g_gzib3_d.clear()
 
   
   #add-point:query段other
{<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL azzi310_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi310_browser_fill("")
      CALL azzi310_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   #CALL FGL_SET_ARR_CURR(1)   #导致不停查询宕掉
   CALL azzi310_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL azzi310_fetch("F") 
      #顯示單身筆數
      CALL azzi310_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="azzi310.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi310_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
{<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
{<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            #CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            CALL cl_getmsg('fetch',g_dlang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzia_m.gzia001 = g_browser[g_current_idx].b_gzia001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi310_master_referesh USING g_gzia_m.gzia001 INTO g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzia003, 
       g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp, 
       g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt, 
       g_gzia_m.gziaownid_desc,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp_desc, 
       g_gzia_m.gziamodid_desc
   
   #遮罩相關處理
   LET g_gzia_m_mask_o.* =  g_gzia_m.*
   CALL azzi310_gzia_t_mask()
   LET g_gzia_m_mask_n.* =  g_gzia_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi310_set_act_visible()   
   CALL azzi310_set_act_no_visible()
   
   #add-point:fetch段action控制
{<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
{<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_gzia_m_t.* = g_gzia_m.*
   LET g_gzia_m_o.* = g_gzia_m.*
   
   LET g_data_owner = g_gzia_m.gziaownid      
   LET g_data_dept  = g_gzia_m.gziaowndp
   
   #重新顯示
   CALL azzi310_default()   
   CALL azzi310_show()
 
   
 
END FUNCTION

{</section>}

{<section id="azzi310.insert" >}
#+ 資料新增
PRIVATE FUNCTION azzi310_insert()
   #add-point:insert段define
{<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
{<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gzib_d.clear()   
   CALL g_gzib2_d.clear()  
   CALL g_gzib3_d.clear()  
 
 
   INITIALIZE g_gzia_m.* LIKE gzia_t.*             #DEFAULT 設定
   
   LET g_gzia001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
{<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_gzia_m.gziaownid = g_user
      LET g_gzia_m.gziaowndp = g_dept
      LET g_gzia_m.gziacrtid = g_user
      LET g_gzia_m.gziacrtdp = g_dept 
      LET g_gzia_m.gziacrtdt = cl_get_current()
      LET g_gzia_m.gziamodid = g_user
      LET g_gzia_m.gziamoddt = cl_get_current()
      LET g_gzia_m.gziastus = 'Y'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
{<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_gzia_m_t.* = g_gzia_m.*
      LET g_gzia_m_o.* = g_gzia_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_gzia_m.gziastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
    
      CALL azzi310_input("a")
      
      #add-point:單頭輸入後
{<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_gzia_m.* TO NULL
         INITIALIZE g_gzib_d TO NULL
         INITIALIZE g_gzib2_d TO NULL
         INITIALIZE g_gzib3_d TO NULL
 
         #add-point:取消新增後
{<point name="insert.cancel"/>}
         #end add-point 
         CALL azzi310_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_gzib_d.clear()
      #CALL g_gzib2_d.clear()
      #CALL g_gzib3_d.clear()
 
 
      LET g_rec_b = 0
      CALL azzi310_save()
      CALL s_transaction_end('Y','0')
      IF NOT INT_FLAG AND g_upd_flag='Y' THEN
          CALL azzi310_gen_include_4gl()
          LET g_upd_flag='Y'
       END IF
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi310_set_act_visible()   
   CALL azzi310_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gzia001_t = g_gzia_m.gzia001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " gzia001 = '", g_gzia_m.gzia001, "' "
 
                      
   #add-point:組合新增資料的條件後
{<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi310_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE azzi310_cl
   
   CALL azzi310_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE azzi310_master_referesh USING g_gzia_m.gzia001 INTO g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzia003, 
       g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp, 
       g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt, 
       g_gzia_m.gziaownid_desc,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp_desc, 
       g_gzia_m.gziamodid_desc
   
   #遮罩相關處理
   LET g_gzia_m_mask_o.* =  g_gzia_m.*
   CALL azzi310_gzia_t_mask()
   LET g_gzia_m_mask_n.* =  g_gzia_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
       g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaownid_desc, 
       g_gzia_m.gziaowndp,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp, 
       g_gzia_m.gziacrtdp_desc,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamodid_desc,g_gzia_m.gziamoddt, 
       g_gzia_m.groupname,g_gzia_m.sumyname1,g_gzia_m.comb_sumy,g_gzia_m.s_global_var
   
   #add-point:新增結束後
{<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL azzi310_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="azzi310.modify" >}
#+ 資料修改
PRIVATE FUNCTION azzi310_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
 
 
   #add-point:modify段define
{<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
{<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_gzia_m_t.* = g_gzia_m.*
   LET g_gzia_m_o.* = g_gzia_m.*
   
   IF g_gzia_m.gzia001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_gzia001_t = g_gzia_m.gzia001
 
   CALL s_transaction_begin()
   
   OPEN azzi310_cl USING g_gzia_m.gzia001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi310_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE azzi310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi310_master_referesh USING g_gzia_m.gzia001 INTO g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzia003, 
       g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp, 
       g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt, 
       g_gzia_m.gziaownid_desc,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp_desc, 
       g_gzia_m.gziamodid_desc
   
   #檢查是否允許此動作
   IF NOT azzi310_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gzia_m_mask_o.* =  g_gzia_m.*
   CALL azzi310_gzia_t_mask()
   LET g_gzia_m_mask_n.* =  g_gzia_m.*
   
   
   
   #add-point:modify段show之前
{<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
 
 
   
   CALL azzi310_show()
   #add-point:modify段show之後
{<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
 
 
    
   WHILE TRUE
      LET g_gzia001_t = g_gzia_m.gzia001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gzia_m.gziamodid = g_user 
LET g_gzia_m.gziamoddt = cl_get_current()
LET g_gzia_m.gziamodid_desc = cl_get_username(g_gzia_m.gziamodid)
      
      #add-point:modify段修改前
{<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL azzi310_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
{<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE gzia_t SET (gziamodid,gziamoddt) = (g_gzia_m.gziamodid,g_gzia_m.gziamoddt)
          WHERE  gzia001 = g_gzia001_t
          
         CALL azzi310_save()
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzia_m.* = g_gzia_m_t.*
         CALL azzi310_default() #修改程序框架
         CALL azzi310_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_gzia_m.gzia001 != g_gzia001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE gzib_t SET gzib001 = g_gzia_m.gzia001
 
          WHERE  gzib001 = g_gzia001_t
 
            
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzib_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzib_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE gzie_t
            SET gzie001 = g_gzia_m.gzia001
 
          WHERE 
                gzie001 = g_gzia001_t
 
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzie_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzie_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE gzid_t
            SET gzid001 = g_gzia_m.gzia001
 
          WHERE 
                gzid001 = g_gzia001_t
 
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzid_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzid_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')

      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi310_set_act_visible()   
   CALL azzi310_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " gzia001 = '", g_gzia_m.gzia001, "' "
 
   #填到對應位置
   CALL azzi310_browser_fill("")
 
   CLOSE azzi310_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi310_msgcentre_notify('modify')
 
END FUNCTION   

{</section>}

{<section id="azzi310.input" >}
#+ 資料輸入
PRIVATE FUNCTION azzi310_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
{<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
{<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
       g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaownid_desc, 
       g_gzia_m.gziaowndp,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp, 
       g_gzia_m.gziacrtdp_desc,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamodid_desc,g_gzia_m.gziamoddt, 
       g_gzia_m.groupname,g_gzia_m.sumyname1,g_gzia_m.comb_sumy,g_gzia_m.s_global_var
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
{<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzib002,gzib003,gzib005,gzib006,gzib004 FROM gzib_t WHERE gzib001=? AND  
       gzib002=? FOR UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi310_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
{<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT gzie002,gzie003,gzie005 FROM gzie_t WHERE gzie001=? AND gzie002=? FOR  
       UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi310_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
{<point name="input.define_sql3" mark="Y"/>}
   #end add-point  
   #160901-00030#1mod add->gzid017   
   LET g_forupd_sql = "SELECT gzid002,gzid003,gzid004,gzid005,gzid006,gzid007,NVL(gzid008,'N'),gzid009,gzid010, 
       gzid011,NVL(gzid012,'N'),NVL(gzid014,'N'),gzid015,gzid017 FROM gzid_t WHERE gzid001=? AND gzid002=? FOR UPDATE"  #160523-00002#2 add gzid014,gzid015 160901-00030#1 add gzid017
   #add-point:input段define_sql
{<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi310_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
{<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi310_set_entry(p_cmd)
   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi310_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
       g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.groupname,g_gzia_m.sumyname1,g_gzia_m.comb_sumy 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
{<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="azzi310.input.head" >}
      #單頭段
#      INPUT BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
#          g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.groupname,g_gzia_m.sumyname1, 
#          g_gzia_m.comb_sumy 
       
      INPUT BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
          g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus
         
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
{<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
        ON ACTION sqledit                       #修改程序框架-添加
        #160926-00005#1 add(s)
           IF  p_cmd ='a' AND NOT cl_null(g_gzia_m.gzia001) THEN  
               IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzia_t WHERE "||"gzia001 = '"||g_gzia_m.gzia001 ||"'",'std-00004',0) THEN 
                  NEXT FIELD CURRENT
              END IF                  
           END IF
         #160926-00005#1 add(e)
           IF g_gzia_m.gzia005 <1 OR g_gzia_m.gzia005 >g_max_count THEN     #151016-00016#1 mod 5000->g_max_count
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'azz-00923'
              LET g_errparam.extend =''
              LET g_errparam.replace[1]=g_max_count
              LET g_errparam.popup = false
              CALL cl_err()
              NEXT FIELD gzia005
            END IF
           LET g_gzia006_t=g_gzia_m.gzia006
           LET g_action_choice="sqledit"
            IF cl_auth_chk_act("sqledit") THEN              
               CALL azzi310_set_entry(p_cmd)   
               NEXT FIELD gzia006
            END IF
 
         ON ACTION sqlverify
          #IF g_gzia_m.gzia006 != g_gzia_m_t.gzia006 OR g_gzia_m_t.gzia006 IS NULL THEN
            LET g_action_choice="sqlverify"
            
            IF cl_auth_chk_act("sqlverify") THEN                           
               IF NOT azzi310_sqlverify(g_gzia_m.gzia006) THEN
                   LET g_chk_sql="N"
                   NEXT FIELD gzia006
               END IF
               LET g_chk_sql="Y"
               
               LET g_gzia006_t=g_gzia_m.gzia006
               CALL azzi310_parse_sqltable(p_cmd)
               CALL azzi310_parse_sql(p_cmd)
               IF p_cmd="a" THEN #160822-00021#1 mod
                  CALL azzi310_sumy2_default()
               END IF
               CASE g_current_page
                    WHEN 1  
                      CALL azzi310_grouplist_b_fill()
                      CALL azzi310_gziblist_b_fill()                    
                     WHEN 2
                       CALL azzi310_sumy1_b_fill()
                       CALL azzi310_sumy2_b_fill()
                     WHEN 3
                       CALL azzi310_gzielist_b_fill()
                     WHEN 4
                       CALL azzi310_gzidlist_b_fill() 
               END CASE   
              DISPLAY BY NAME g_gzia_m.gzia006               
            END IF
        # END IF
            
         ON ACTION sqlbuilder
          IF g_gzia_m.gzia005 <1 OR g_gzia_m.gzia005 >g_max_count THEN     #151016-00016#1 mod 5000->g_max_count
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'azz-00923'
              LET g_errparam.extend =''
              LET g_errparam.replace[1]=g_max_count
              LET g_errparam.popup = false
              CALL cl_err()
              NEXT FIELD gzia005
            END IF           
           LET g_gzia006_t=g_gzia_m.gzia006
            LET g_action_choice="sqlbuilder"
            IF cl_auth_chk_act("sqlbuilder") THEN  
               CALL sadzp190_rtn(g_prog) returning g_textedit1               
#               CALL azzi310_sqlbuilder()  
                IF NOT cl_null(g_textedit1) THEN
                   LET g_gzia_m.gzia006=g_textedit1
                END IF                   
            END IF
     
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN azzi310_cl USING g_gzia_m.gzia001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi310_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi310_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            LET g_gzia006_t=g_gzia_m.gzia006
            LET g_master_multi_table_t.gzial001 = g_gzia_m.gzia001
           LET g_master_multi_table_t.gzial003 = g_gzia_m.gzial003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.gzial001 = ''
               LET g_master_multi_table_t.gzial003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL azzi310_set_entry(p_cmd)
            #add-point:資料輸入前
{<point name="input.m.before_input"/>}
            #end add-point
            CALL azzi310_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia001
            #add-point:BEFORE FIELD gzia001
{<point name="input.b.gzia001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia001
            
            #add-point:AFTER FIELD gzia001
{<point name="input.a.gzia001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzia001
            #add-point:ON CHANGE gzia001
{<point name="input.g.gzia001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia002
            #add-point:BEFORE FIELD gzia002
{<point name="input.b.gzia002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia002
            
            #add-point:AFTER FIELD gzia002
{<point name="input.a.gzia002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzia002
            #add-point:ON CHANGE gzia002
{<point name="input.g.gzia002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzial003
            #add-point:BEFORE FIELD gzial003
{<point name="input.b.gzial003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzial003
            
            #add-point:AFTER FIELD gzial003
{<point name="input.a.gzial003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzial003
            #add-point:ON CHANGE gzial003
{<point name="input.g.gzial003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia003
            #add-point:BEFORE FIELD gzia003
{<point name="input.b.gzia003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia003
            
            #add-point:AFTER FIELD gzia003
{<point name="input.a.gzia003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzia003
            #add-point:ON CHANGE gzia003
{<point name="input.g.gzia003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia005
            #add-point:BEFORE FIELD gzia005
{<point name="input.b.gzia005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia005
            
            #add-point:AFTER FIELD gzia005
{<point name="input.a.gzia005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzia005
            #add-point:ON CHANGE gzia005
{<point name="input.g.gzia005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia004
            #add-point:BEFORE FIELD gzia004
{<point name="input.b.gzia004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia004
            
            #add-point:AFTER FIELD gzia004
{<point name="input.a.gzia004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzia004
            #add-point:ON CHANGE gzia004
{<point name="input.g.gzia004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzia006
            #add-point:BEFORE FIELD gzia006
{<point name="input.b.gzia006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzia006
            
            #add-point:AFTER FIELD gzia006
{<point name="input.a.gzia006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzia006
            #add-point:ON CHANGE gzia006
{<point name="input.g.gzia006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gziastus
            #add-point:BEFORE FIELD gziastus
{<point name="input.b.gziastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gziastus
            
            #add-point:AFTER FIELD gziastus
{<point name="input.a.gziastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gziastus
            #add-point:ON CHANGE gziastus
{<point name="input.g.gziastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD groupname
            #add-point:BEFORE FIELD groupname
{<point name="input.b.groupname" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD groupname
            
            #add-point:AFTER FIELD groupname
{<point name="input.a.groupname" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE groupname
            #add-point:ON CHANGE groupname
{<point name="input.g.groupname" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sumyname1
            #add-point:BEFORE FIELD sumyname1
{<point name="input.b.sumyname1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sumyname1
            
            #add-point:AFTER FIELD sumyname1
{<point name="input.a.sumyname1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sumyname1
            #add-point:ON CHANGE sumyname1
{<point name="input.g.sumyname1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD comb_sumy
            #add-point:BEFORE FIELD comb_sumy
{<point name="input.b.comb_sumy" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD comb_sumy
            
            #add-point:AFTER FIELD comb_sumy
{<point name="input.a.comb_sumy" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE comb_sumy
            #add-point:ON CHANGE comb_sumy
{<point name="input.g.comb_sumy" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.gzia001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia001
            #add-point:ON ACTION controlp INFIELD gzia001
{<point name="input.c.gzia001" />}
            #END add-point
 
         #Ctrlp:input.c.gzia002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia002
            #add-point:ON ACTION controlp INFIELD gzia002
{<point name="input.c.gzia002" />}
            #END add-point
 
         #Ctrlp:input.c.gzial003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzial003
            #add-point:ON ACTION controlp INFIELD gzial003
{<point name="input.c.gzial003" />}
            #END add-point
 
         #Ctrlp:input.c.gzia003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia003
            #add-point:ON ACTION controlp INFIELD gzia003
{<point name="input.c.gzia003" />}
            #END add-point
 
         #Ctrlp:input.c.gzia005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia005
            #add-point:ON ACTION controlp INFIELD gzia005
{<point name="input.c.gzia005" />}
            #END add-point
 
         #Ctrlp:input.c.gzia004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia004
            #add-point:ON ACTION controlp INFIELD gzia004
{<point name="input.c.gzia004" />}
            #END add-point
 
         #Ctrlp:input.c.gzia006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzia006
            #add-point:ON ACTION controlp INFIELD gzia006
{<point name="input.c.gzia006" />}
            #END add-point
 
         #Ctrlp:input.c.gziastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gziastus
            #add-point:ON ACTION controlp INFIELD gziastus
{<point name="input.c.gziastus" />}
            #END add-point
 
         #Ctrlp:input.c.groupname
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD groupname
            #add-point:ON ACTION controlp INFIELD groupname
{<point name="input.c.groupname" />}
            #END add-point
 
         #Ctrlp:input.c.sumyname1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sumyname1
            #add-point:ON ACTION controlp INFIELD sumyname1
{<point name="input.c.sumyname1" />}
            #END add-point
 
         #Ctrlp:input.c.comb_sumy
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD comb_sumy
            #add-point:ON ACTION controlp INFIELD comb_sumy
{<point name="input.c.comb_sumy" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_gzia_m.gzia001
                        
            #add-point:單頭INPUT後
{<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
{<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO gzia_t (gzia001,gzia002,gzia003,gzia005,gzia004,gzia006,gziastus,gziaownid, 
                   gziaowndp,gziacrtid,gziacrtdp,gziacrtdt,gziamodid,gziamoddt)
               VALUES (g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzia003,g_gzia_m.gzia005,g_gzia_m.gzia004, 
                   g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp,g_gzia_m.gziacrtid, 
                   g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_gzia_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
{<point name="input.head.m_insert"/>}
               #end add-point
               
               
         INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzia_m.gzia001 = g_master_multi_table_t.gzial001 AND
         g_gzia_m.gzial003 = g_master_multi_table_t.gzial003  THEN
         ELSE 
            LET l_var_keys[01] = g_gzia_m.gzia001
            LET l_field_keys[01] = 'gzial001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzial001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzial002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzia_m.gzial003
            LET l_fields[01] = 'gzial003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzial_t')
         END IF 
 
               
               #add-point:單頭新增後
{<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi310_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL azzi310_b_fill()
                  CALL azzi310_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
{<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
{<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL azzi310_gzia_t_mask_restore('restore_mask_o')
               
               UPDATE gzia_t SET (gzia001,gzia002,gzia003,gzia005,gzia004,gzia006,gziastus,gziaownid, 
                   gziaowndp,gziacrtid,gziacrtdp,gziacrtdt,gziamodid,gziamoddt) = (g_gzia_m.gzia001, 
                   g_gzia_m.gzia002,g_gzia_m.gzia003,g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006, 
                   g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp,g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp, 
                   g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt)
                WHERE  gzia001 = g_gzia001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "gzia_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
{<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzia_m.gzia001 = g_master_multi_table_t.gzial001 AND
         g_gzia_m.gzial003 = g_master_multi_table_t.gzial003  THEN
         ELSE 
            LET l_var_keys[01] = g_gzia_m.gzia001
            LET l_field_keys[01] = 'gzial001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzial001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzial002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzia_m.gzial003
            LET l_fields[01] = 'gzial003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzial_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL azzi310_gzia_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_gzia_m_t)
               LET g_log2 = util.JSON.stringify(g_gzia_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
{<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_gzia001_t = g_gzia_m.gzia001
 
            
      END INPUT
   

{</section>}

{<section id="azzi310.input.body" >}
      #Page1左边树结构--修改框架加
     DISPLAY ARRAY g_grouplist TO s_grouplist.* ATTRIBUTES(COUNT=g_grouplist.getLength())
         BEFORE DISPLAY
            CALL DIALOG.setSelectionMode("s_grouplist", 1)
            CALL azzi310_set_action_active_by_datasize("s_grouplist", "groupadd")
         BEFORE ROW
            LET g_grouplist_idx = DIALOG.getCurrentRow("s_grouplist")
            #是Table的話, 不給多選
            IF g_grouplist[g_grouplist_idx].groupisnode THEN
               CALL DIALOG.setSelectionMode("s_grouplist", 0)
            ELSE
               CALL DIALOG.setSelectionMode("s_grouplist", 1)
            END IF
         #功能鍵方式增加
         ON ACTION groupadd
            CALL azzi310_maintain_gzib(g_grouplist_idx, "add")
      END DISPLAY 
      
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzib_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
          ON ACTION groupdel
           CALL azzi310_maintain_gzib(g_gzib_d_idx, "del")
           #若刪除最後一筆, 則需手動讓指標跳到正確位置
           IF g_gzib_d_idx > g_gzib_d.getLength() THEN
              CALL DIALOG.setCurrentRow("s_detail1", g_gzib_d.getLength())
              LET g_gzib_d_idx = DIALOG.getCurrentRow("s_detail1")
              LET l_ac = ARR_CURR()
           END IF
               CALL azzi310_set_seqaction_active("s_detail1", "up_groupseq", "down_groupseq",g_gzib_d[g_gzib_d_idx].gzib003) #160926-00005#1 .3mod,增加第四个参数
               CALL azzi310_set_action_active_by_datasize("s_detail1", "del_group")
     
           
         ON ACTION groupup
             CALL azzi310_move_up_down("s_detail1", "up")
             LET g_gzib_d_idx = DIALOG.getCurrentRow("s_detail1")
             LET l_ac = ARR_CURR()
           
          ON ACTION groupdown
             CALL azzi310_move_up_down("s_detail1", "down")
             LET g_gzib_d_idx = DIALOG.getCurrentRow("s_detail1")
             LET l_ac = ARR_CURR()
         
         BEFORE INPUT
            #add-point:資料輸入前
{<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzib_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi310_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_gzib_d.getLength()
            #add-point:資料輸入前
{<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
{<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi310_cl USING g_gzia_m.gzia001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi310_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi310_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzib_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzib_d[l_ac].gzib002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzib_d_t.* = g_gzib_d[l_ac].*  #BACKUP
               LET g_gzib_d_o.* = g_gzib_d[l_ac].*  #BACKUP
               CALL azzi310_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL azzi310_set_no_entry_b(l_cmd)
               IF NOT azzi310_lock_b("gzib_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi310_bcl INTO g_gzib_d[l_ac].gzib002,g_gzib_d[l_ac].gzib003,g_gzib_d[l_ac].gzib005, 
                      g_gzib_d[l_ac].gzib006,g_gzib_d[l_ac].gzib004
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_gzib_d_t.gzib002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzib_d_mask_o[l_ac].* =  g_gzib_d[l_ac].*
                  CALL azzi310_gzib_t_mask()
                  LET g_gzib_d_mask_n[l_ac].* =  g_gzib_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL azzi310_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzib_d[l_ac].* TO NULL 
            INITIALIZE g_gzib_d_t.* TO NULL 
            INITIALIZE g_gzib_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
{<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_gzib_d_t.* = g_gzib_d[l_ac].*     #新輸入資料
            LET g_gzib_d_o.* = g_gzib_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi310_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi310_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzib_d[li_reproduce_target].* = g_gzib_d[li_reproduce].*
 
               LET g_gzib_d[li_reproduce_target].gzib002 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
{<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzib_t 
             WHERE  gzib001 = g_gzia_m.gzia001
 
               AND gzib002 = g_gzib_d[l_ac].gzib002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzia_m.gzia001
               LET gs_keys[2] = g_gzib_d[g_detail_idx].gzib002
               CALL azzi310_insert_b('gzib_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_gzib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzib_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi310_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
{<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_gzia_m.gzia001
 
               LET gs_keys[gs_keys.getLength()+1] = g_gzib_d_t.gzib002
 
            
               #刪除同層單身
               IF NOT azzi310_delete_b('gzib_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi310_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT azzi310_key_delete_b(gs_keys,'gzib_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi310_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE azzi310_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_gzib_d.getLength()
               
               #add-point:單身刪除後(<>d)
{<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gzib_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzib002
            #add-point:BEFORE FIELD gzib002
{<point name="input.b.page1.gzib002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzib002
            
            #add-point:AFTER FIELD gzib002
{<point name="input.a.page1.gzib002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzib002
            #add-point:ON CHANGE gzib002
{<point name="input.g.page1.gzib002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzib003
            #add-point:BEFORE FIELD gzib003
{<point name="input.b.page1.gzib003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzib003
            
            #add-point:AFTER FIELD gzib003
{<point name="input.a.page1.gzib003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzib003
            #add-point:ON CHANGE gzib003
{<point name="input.g.page1.gzib003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzib005
            #add-point:BEFORE FIELD gzib005
{<point name="input.b.page1.gzib005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzib005
            
            #add-point:AFTER FIELD gzib005
{<point name="input.a.page1.gzib005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzib005
            #add-point:ON CHANGE gzib005
{<point name="input.g.page1.gzib005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzib006
            #add-point:BEFORE FIELD gzib006
{<point name="input.b.page1.gzib006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzib006
            
            #add-point:AFTER FIELD gzib006
{<point name="input.a.page1.gzib006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzib006
            #add-point:ON CHANGE gzib006
{<point name="input.g.page1.gzib006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzib004
            #add-point:BEFORE FIELD gzib004
{<point name="input.b.page1.gzib004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzib004
            
            #add-point:AFTER FIELD gzib004
{<point name="input.a.page1.gzib004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzib004
            #add-point:ON CHANGE gzib004
{<point name="input.g.page1.gzib004" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.gzib002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzib002
            #add-point:ON ACTION controlp INFIELD gzib002
{<point name="input.c.page1.gzib002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzib003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzib003
            #add-point:ON ACTION controlp INFIELD gzib003
{<point name="input.c.page1.gzib003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzib005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzib005
            #add-point:ON ACTION controlp INFIELD gzib005
{<point name="input.c.page1.gzib005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzib006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzib006
            #add-point:ON ACTION controlp INFIELD gzib006
{<point name="input.c.page1.gzib006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzib004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzib004
            #add-point:ON ACTION controlp INFIELD gzib004
{<point name="input.c.page1.gzib004" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            LET l_in_row='N' #160926-00005#1 .3 add(e)
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_gzib_d[l_ac].* = g_gzib_d_t.*
               CLOSE azzi310_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_gzib_d[l_ac].gzib002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzib_d[l_ac].* = g_gzib_d_t.*
            ELSE
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL azzi310_gzib_t_mask_restore('restore_mask_o')
      
               UPDATE gzib_t SET (gzib001,gzib002,gzib003,gzib005,gzib006,gzib004) = (g_gzia_m.gzia001, 
                   g_gzib_d[l_ac].gzib002,g_gzib_d[l_ac].gzib003,g_gzib_d[l_ac].gzib005,g_gzib_d[l_ac].gzib006, 
                   g_gzib_d[l_ac].gzib004)
                WHERE  gzib001 = g_gzia_m.gzia001 
 
                  AND gzib002 = g_gzib_d_t.gzib002 #項次   
 
                  
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzib_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzib_d[l_ac].* = g_gzib_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzib_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_gzib_d[l_ac].* = g_gzib_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzia_m.gzia001
               LET gs_keys_bak[1] = g_gzia001_t
               LET gs_keys[2] = g_gzib_d[g_detail_idx].gzib002
               LET gs_keys_bak[2] = g_gzib_d_t.gzib002
               CALL azzi310_update_b('gzib_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL azzi310_gzib_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_gzib_d[g_detail_idx].gzib002 = g_gzib_d_t.gzib002 
 
                  ) THEN
                  LET gs_keys[01] = g_gzia_m.gzia001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_gzib_d_t.gzib002
 
                  CALL azzi310_key_update_b(gs_keys,'gzib_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gzia_m),util.JSON.stringify(g_gzib_d_t)
               LET g_log2 = util.JSON.stringify(g_gzia_m),util.JSON.stringify(g_gzib_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
{<point name="input.body.after_row"/>}
            #end add-point
            CALL azzi310_unlock_b("gzib_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
{<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_gzib_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzib_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
       INPUT g_comb_sumy FROM comb_sumy ATTRIBUTES(WITHOUT DEFAULTS)
         ON CHANGE comb_sumy
           IF g_sumylist2_idx>0 THEN 
            CALL azzi310_maintain_sumylist(g_sumylist2_idx, '', "upd")
         END IF 
            
       END INPUT
      
      
       #Page2左边树状结构-修改框架增加
       DISPLAY ARRAY g_sumylist1 TO s_sumylist1.* ATTRIBUTES(COUNT=g_sumylist1.getLength())
         BEFORE DISPLAY
            CALL DIALOG.setSelectionMode("s_sumylist1", 1)
            CALL azzi310_set_action_active_by_datasize("s_sumylist1", "sumyadd")
            CALL azzi310_set_action_active_by_datasize("s_sumylist2","sumydel")
         BEFORE ROW
            LET g_sumylist1_idx = DIALOG.getCurrentRow("s_sumylist1")
            #是Table的話, 不給多選
            IF g_sumylist1[g_sumylist1_idx].sumyisnode1 THEN
               CALL DIALOG.setSelectionMode("s_sumylist1", 0)
            ELSE
               CALL DIALOG.setSelectionMode("s_sumylist1", 1)
            END IF
         #140127 拖拉 add-(S)
         ON DRAG_START(dnd)
            IF azzi310_check_sumy_repeat(DIALOG.getCurrentRow("s_sumylist1")) THEN
               CALL dnd.setOperation(NULL)
            ELSE
               LET ls_area = "s_sumylist1"
            END IF

         ON DRAG_FINISHED(dnd)
            INITIALIZE ls_area TO NULL

         #拖拉方式刪除, 啟動動作在s_sumylist2
         ON DROP(dnd)
            IF ls_area = "s_sumylist2" THEN
               CALL dnd.dropInternal()
               CALL azzi310_maintain_sumylist(DIALOG.getCurrentRow("s_sumylist2"), '', "del")
               #CALL azzi310_refresh_seq("s_sumylist2")               
               #如果都刪光了, 就不要出現刪除功能鍵
               CALL azzi310_set_action_active_by_datasize("s_sumylist2", "sumydel")
            END IF
         
            
         #功能鍵方式增加
         ON ACTION sumyadd
            ##增加至彙總樹狀2
            CALL azzi310_maintain_sumylist(g_sumylist1_idx,'', "add")
      END DISPLAY
      
       #Page3右边树状结构-修改框架增加
       DISPLAY ARRAY g_sumylist2 TO s_sumylist2.* ATTRIBUTES(COUNT=g_sumylist2.getLength())
      
         BEFORE DISPLAY
            LET g_sumylist2_idx = DIALOG.getCurrentRow("s_sumylist2") 
            IF g_sumylist2[g_sumylist2_idx].sumyisnode2 THEN 
               CALL DIALOG.setSelectionMode("s_sumylist2", 0)
            ELSE
               CALL DIALOG.setSelectionMode("s_sumylist2", 1)
            END IF         
            CALL azzi310_set_action_active_by_datasize("s_sumylist2", "sumydel")    
                    
         BEFORE ROW
            LET g_sumylist2_idx = DIALOG.getCurrentRow("s_sumylist2") 
            IF g_sumylist2[g_sumylist2_idx].sumyisnode2 THEN 
               CALL DIALOG.setSelectionMode("s_sumylist2", 0)
               LET g_comb_sumy=""
            ELSE
               CALL DIALOG.setSelectionMode("s_sumylist2", 1)
               LET g_comb_sumy=g_sumylist2[g_sumylist2_idx].sumytype2
            END IF
            CALL azzi310_set_action_active_by_datasize("s_sumylist2", "sumydel")          
                
          
         ##140127 拖拉-(s)
         #拖拉方式增加, 結束動作在s_sumylist2的ON DROP
         ON DRAG_START(dnd)
            IF azzi310_check_sumy_repeat(DIALOG.getCurrentRow("s_sumylist2")) THEN
               CALL dnd.setOperation(NULL)
            ELSE
               LET ls_area = "s_sumylist2"
            END IF

         ON DRAG_FINISHED(dnd)
            INITIALIZE ls_area TO NULL

         #拖拉方式刪除, 啟動動作在s_sumylist1
         ON DROP(dnd)
            IF ls_area = "s_sumylist1" THEN
               CALL dnd.dropInternal()
               CALL azzi310_maintain_sumylist(DIALOG.getCurrentRow("s_sumylist2"), '', "add")
               #CALL azzi310_refresh_seq("s_sumylist2")               
               #如果都刪光了, 就不要出現刪除功能鍵
               CALL azzi310_set_action_active_by_datasize("s_sumylist2", "sumydel")
            END IF
         
         AFTER ROW      
             DISPLAY 1         
            
         ON ACTION sumydel
            CALL azzi310_maintain_sumylist(g_sumylist2_idx, '', "del")
            #CALL azzi310_refresh_seq("s_sumylist2")
            #若刪除最後一筆, 則需手動讓指標跳到正確位置
            IF g_sumylist2_idx > g_sumylist2.getLength() THEN
               CALL DIALOG.setCurrentRow("s_sumylist2", g_sumylist2.getLength())
               LET g_sumylist2_idx = DIALOG.getCurrentRow("s_sumylist2")
            END IF
            CALL azzi310_set_action_active_by_datasize("s_sumylist2", "sumydel")
      END DISPLAY 
      
      #Page3
      INPUT ARRAY g_gzib2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
       ON ACTION argup
            CALL azzi310_move_up_down("s_detail2", "up")
            LET g_gzib2_d_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = ARR_CURR()
        
        ON ACTION argdown
            CALL azzi310_move_up_down("s_detail2", "down")
            LET g_gzib2_d_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = ARR_CURR()  
         
         BEFORE INPUT
            #add-point:資料輸入前
{<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzib2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi310_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_gzib2_d.getLength()
            #add-point:資料輸入前
{<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzib2_d[l_ac].* TO NULL 
            INITIALIZE g_gzib2_d_t.* TO NULL 
            INITIALIZE g_gzib2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份
{<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_gzib2_d_t.* = g_gzib2_d[l_ac].*     #新輸入資料
            LET g_gzib2_d_o.* = g_gzib2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi310_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi310_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzib2_d[li_reproduce_target].* = g_gzib2_d[li_reproduce].*
 
               LET g_gzib2_d[li_reproduce_target].gzie002 = NULL
            END IF
            
            #add-point:modify段before insert
{<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
{<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2            
            CALL azzi310_set_seqaction_active("s_detail2", "argup", "argdown",g_gzib2_d[l_ac].gzie002)   #160926-00005#1 .3
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi310_cl USING g_gzia_m.gzia001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi310_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi310_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzib2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzib2_d[l_ac].gzie002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_gzib2_d_t.* = g_gzib2_d[l_ac].*  #BACKUP
               LET g_gzib2_d_o.* = g_gzib2_d[l_ac].*  #BACKUP
               CALL azzi310_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL azzi310_set_no_entry_b(l_cmd)
               IF NOT azzi310_lock_b("gzie_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi310_bcl2 INTO g_gzib2_d[l_ac].gzie002,g_gzib2_d[l_ac].gzie003,g_gzib2_d[l_ac].gzie005 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzib2_d_mask_o[l_ac].* =  g_gzib2_d[l_ac].*
                  CALL azzi310_gzie_t_mask()
                  LET g_gzib2_d_mask_n[l_ac].* =  g_gzib2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL azzi310_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
{<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
{<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_gzia_m.gzia001
               LET gs_keys[gs_keys.getLength()+1] = g_gzib2_d_t.gzie002
            
               #刪除同層單身
               IF NOT azzi310_delete_b('gzie_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi310_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT azzi310_key_delete_b(gs_keys,'gzie_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi310_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
{<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE azzi310_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
{<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_gzib_d.getLength()
               
               #add-point:單身刪除後(<>d)
{<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gzib2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
{<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzie_t 
             WHERE  gzie001 = g_gzia_m.gzia001
               AND gzie002 = g_gzib2_d[l_ac].gzie002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
{<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzia_m.gzia001
               LET gs_keys[2] = g_gzib2_d[g_detail_idx].gzie002
               CALL azzi310_insert_b('gzie_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
{<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_gzib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzie_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi310_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
{<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_gzib2_d[l_ac].* = g_gzib2_d_t.*
               CLOSE azzi310_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzib2_d[l_ac].* = g_gzib2_d_t.*
            ELSE
               #add-point:單身page2修改前
{<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL azzi310_gzie_t_mask_restore('restore_mask_o')
                              
               UPDATE gzie_t SET (gzie001,gzie002,gzie003,gzie005) = (g_gzia_m.gzia001,g_gzib2_d[l_ac].gzie002, 
                   g_gzib2_d[l_ac].gzie003,g_gzib2_d[l_ac].gzie005) #自訂欄位頁簽
                WHERE  gzie001 = g_gzia_m.gzia001
                  AND gzie002 = g_gzib2_d_t.gzie002 #項次 
                  
               #add-point:單身page2修改中
{<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzie_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzib2_d[l_ac].* = g_gzib2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzie_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzib2_d[l_ac].* = g_gzib2_d_t.*
                  OTHERWISE
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzia_m.gzia001
               LET gs_keys_bak[1] = g_gzia001_t
               LET gs_keys[2] = g_gzib2_d[g_detail_idx].gzie002
               LET gs_keys_bak[2] = g_gzib2_d_t.gzie002
               CALL azzi310_update_b('gzie_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL azzi310_gzie_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_gzib2_d[g_detail_idx].gzie002 = g_gzib2_d_t.gzie002 
                  ) THEN
                  LET gs_keys[01] = g_gzia_m.gzia001
                  LET gs_keys[gs_keys.getLength()+1] = g_gzib2_d_t.gzie002
                  CALL azzi310_key_update_b(gs_keys,'gzie_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gzia_m),util.JSON.stringify(g_gzib2_d_t)
               LET g_log2 = util.JSON.stringify(g_gzia_m),util.JSON.stringify(g_gzib2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
{<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzie002
            #add-point:BEFORE FIELD gzie002
{<point name="input.b.page2.gzie002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzie002
            
            #add-point:AFTER FIELD gzie002
{<point name="input.a.page2.gzie002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzie002
            #add-point:ON CHANGE gzie002
{<point name="input.g.page2.gzie002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzie003
            #add-point:BEFORE FIELD gzie003
{<point name="input.b.page2.gzie003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzie003
            
            #add-point:AFTER FIELD gzie003
{<point name="input.a.page2.gzie003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzie003
            #add-point:ON CHANGE gzie003
{<point name="input.g.page2.gzie003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzie005
            #add-point:BEFORE FIELD gzie005
{<point name="input.b.page2.gzie005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzie005
            
            #add-point:AFTER FIELD gzie005
{<point name="input.a.page2.gzie005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzie005
            #add-point:ON CHANGE gzie005
{<point name="input.g.page2.gzie005" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.gzie002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzie002
            #add-point:ON ACTION controlp INFIELD gzie002
{<point name="input.c.page2.gzie002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzie003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzie003
            #add-point:ON ACTION controlp INFIELD gzie003
{<point name="input.c.page2.gzie003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.gzie005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzie005
            #add-point:ON ACTION controlp INFIELD gzie005
{<point name="input.c.page2.gzie005" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
{<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzib2_d[l_ac].* = g_gzib2_d_t.*
               END IF
               CLOSE azzi310_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL azzi310_unlock_b("gzie_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
{<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_gzib2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzib2_d.getLength()+1
 
      END INPUT
      
      #160926-00005#1 .3 add(s)
     
#          ON ACTION qbeup
#            IF l_in_row='Y' THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   ='azz-01158' 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#               NEXT FIELD CURRENT
#            END IF
#            CALL azzi310_move_up_down("s_detail3", "up")
#           LET l_ac = ARR_CURR()
#           LET g_gzib3_d_idx = DIALOG.getCurrentRow("s_detail3")
#            
#         ON ACTION qbedown
#            IF l_in_row='Y' THEN
#               INITIALIZE g_errparam TO NULL 
#               LET g_errparam.extend = '' 
#               LET g_errparam.code   ='azz-01158' 
#               LET g_errparam.popup  = FALSE 
#               CALL cl_err()
#                NEXT FIELD CURRENT
#            END IF
#            CALL azzi310_move_up_down("s_detail3", "down")
#            LET l_ac = ARR_CURR()
#            LET g_gzib3_d_idx = DIALOG.getCurrentRow("s_detail3")
       
      #160926-00005#1 .3 add(e)
      
      INPUT ARRAY g_gzib3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
        ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN 
             
               IF  NOT cl_null(g_gzib3_d[l_ac].gzid002)THEN 
                  CALL n_gzidl(g_gzia_m.gzia001,g_gzib3_d[l_ac].gzid002) 
                  INITIALIZE g_ref_fields TO NULL 
                  LET g_ref_fields[1] = g_gzia_m.gzia001
                  LET g_ref_fields[2]=g_gzib3_d[l_ac].gzid002
                  CALL ap_ref_array2(g_ref_fields," SELECT gzidl004 FROM gzidl_t WHERE gzidl001 = ? AND gzidl002 = ? AND gzidl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_gzib3_d[l_ac].gzidl004 = g_rtn_fields[1]
                  DISPLAY BY NAME g_gzib3_d[l_ac].gzidl004
               END IF   
               
            END IF
           IF g_chk_sql="Y" THEN
              LET g_action_choice="sqlverify"
           END IF
           
          ON ACTION qbeup
          #160926-00005#1 .3 add(s)
          IF g_gzib3_d_t.* <> g_gzib3_d[l_ac].* AND l_change_row='N' THEN         
            IF l_in_row='Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   ='azz-01158' 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF                
         END IF 
         #160926-00005#1 .3 add(e)
            CALL azzi310_move_up_down("s_detail3", "up")
           LET l_ac = ARR_CURR()
           LET g_gzib3_d_idx = DIALOG.getCurrentRow("s_detail3")
      
         ON ACTION qbedown
         #160926-00005#1 .3 add(s)
         IF g_gzib3_d_t.* <> g_gzib3_d[l_ac].*  AND l_change_row='N' THEN
            IF l_in_row='Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   ='azz-01158' 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF
        END IF
      #160926-00005#1 .3 add(e)        
            CALL azzi310_move_up_down("s_detail3", "down")
            LET l_ac = ARR_CURR()
            LET g_gzib3_d_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_change_row='Y'
          
         ON ACTION data_replace_setting
             IF azzi310_03(g_gzia_m.gzia001,g_gzib3_d[l_ac].gzid002) THEN     #暂时mark
                 LET g_gzib3_d[l_ac].gzid012 = 'Y'
             ELSE
                 LET g_gzib3_d[l_ac].gzid012 = 'N'           
              END IF
             DISPLAY BY NAME g_gzib3_d[l_ac].gzid012
             
             
         BEFORE INPUT
            #add-point:資料輸入前
            #160926-00005#1 .3 add(s) 
{<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzib3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi310_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_gzib3_d.getLength()
            #add-point:資料輸入前
{<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzib3_d[l_ac].* TO NULL 
            INITIALIZE g_gzib3_d_t.* TO NULL 
            INITIALIZE g_gzib3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            LET g_gzib3_d[l_ac].gzid006 = "0"
            LET g_gzib3_d[l_ac].gzid007 = "0"
 
            #add-point:modify段before備份
{<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_gzib3_d_t.* = g_gzib3_d[l_ac].*     #新輸入資料
            LET g_gzib3_d_o.* = g_gzib3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi310_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL azzi310_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzib3_d[li_reproduce_target].* = g_gzib3_d[li_reproduce].*
 
               LET g_gzib3_d[li_reproduce_target].gzid002 = NULL
            END IF
            
            #add-point:modify段before insert
{<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
{<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3             
            CALL azzi310_set_seqaction_active("s_detail3", "qbeup", "qbedown",g_gzib3_d[l_ac].gzid007) #160926-00005#1 .3 add
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi310_cl USING g_gzia_m.gzia001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi310_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE azzi310_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_gzib3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzib3_d[l_ac].gzid002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_gzib3_d_t.* = g_gzib3_d[l_ac].*  #BACKUP
               LET g_gzib3_d_o.* = g_gzib3_d[l_ac].*  #BACKUP
               CALL azzi310_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL azzi310_set_no_entry_b(l_cmd)
               IF NOT azzi310_lock_b("gzid_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
               #160901-00030#1mod add->gzid017   
                  FETCH azzi310_bcl3 INTO g_gzib3_d[l_ac].gzid002,g_gzib3_d[l_ac].gzid003,g_gzib3_d[l_ac].gzid004, 
                      g_gzib3_d[l_ac].gzid005,g_gzib3_d[l_ac].gzid006,g_gzib3_d[l_ac].gzid007,g_gzib3_d[l_ac].gzid008, 
                      g_gzib3_d[l_ac].gzid009,g_gzib3_d[l_ac].gzid010,g_gzib3_d[l_ac].gzid011,g_gzib3_d[l_ac].gzid012 
                      ,g_gzib3_d[l_ac].gzid014,g_gzib3_d[l_ac].gzid015,g_gzib3_d[l_ac].gzid017 #160523-00002#2 add 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzib3_d_mask_o[l_ac].* =  g_gzib3_d[l_ac].*
                  CALL azzi310_gzid_t_mask()
                  LET g_gzib3_d_mask_n[l_ac].* =  g_gzib3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL azzi310_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()                 
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
{<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
{<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_gzia_m.gzia001
               LET gs_keys[gs_keys.getLength()+1] = g_gzib3_d_t.gzid002
            
               #刪除同層單身
               IF NOT azzi310_delete_b('gzid_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi310_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT azzi310_key_delete_b(gs_keys,'gzid_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi310_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中
{<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE azzi310_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身3刪除後
{<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_gzib_d.getLength()
               
               #add-point:單身刪除後(<>d)
{<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gzib3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
{<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzid_t 
             WHERE  gzid001 = g_gzia_m.gzia001
               AND gzid002 = g_gzib3_d[l_ac].gzid002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
{<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzia_m.gzia001
               LET gs_keys[2] = g_gzib3_d[g_detail_idx].gzid002
               CALL azzi310_insert_b('gzid_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
{<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_gzib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzid_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi310_b_fill()
               #資料多語言用-增/改
             INITIALIZE l_var_keys TO NULL
               INITIALIZE l_field_keys TO NULL
               INITIALIZE l_vars TO NULL
               INITIALIZE l_fields TO NULL
               INITIALIZE l_var_keys_bak TO NULL
               IF g_gzia_m.gzia001 = g_detail_multi_table_t.gzidl001 AND
                  g_gzib3_d[l_ac].gzid002 = g_detail_multi_table_t.gzidl002 AND
                  g_gzib3_d[l_ac].gzidl004 = g_detail_multi_table_t.gzidl004 THEN
               ELSE
                 LET l_var_keys[01] = g_gzia_m.gzia001
                 LET l_field_keys[01] = 'gzidl001'
                 LET l_var_keys_bak[01] = g_detail_multi_table_t.gzidl001
                 LET l_var_keys[02] = g_gzib3_d[l_ac].gzid002
                 LET l_field_keys[02] = 'gzidl002'
                 LET l_var_keys_bak[02] = g_detail_multi_table_t.gzidl002
                 LET l_var_keys[03] = g_dlang
                 LET l_field_keys[03] = 'gzidl003'
                 LET l_var_keys_bak[03] = g_detail_multi_table_t.gzidl003
                 LET l_vars[01] = g_gzib3_d[l_ac].gzidl004
                 LET l_fields[01] = 'gzidl004'
                CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzidl_t')
               END IF  
               #add-point:單身新增後
{<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_gzib3_d[l_ac].* = g_gzib3_d_t.*
               CLOSE azzi310_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzib3_d[l_ac].* = g_gzib3_d_t.*
            ELSE
               #add-point:單身page3修改前
{<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL azzi310_gzid_t_mask_restore('restore_mask_o')
               #160901-00030#1mod add->gzid017                  
               UPDATE gzid_t SET (gzid001,gzid002,gzid003,gzid004,gzid005,gzid006,gzid007,gzid008,gzid009, 
                   gzid010,gzid011,gzid012,gzid014,gzid015,gzid017) = (g_gzia_m.gzia001,g_gzib3_d[l_ac].gzid002,g_gzib3_d[l_ac].gzid003, #160523-00002#2 add gzid013,gzid015
                   g_gzib3_d[l_ac].gzid004,g_gzib3_d[l_ac].gzid005,g_gzib3_d[l_ac].gzid006,g_gzib3_d[l_ac].gzid007, 
                   g_gzib3_d[l_ac].gzid008,g_gzib3_d[l_ac].gzid009,g_gzib3_d[l_ac].gzid010,g_gzib3_d[l_ac].gzid011, 
                   g_gzib3_d[l_ac].gzid012,g_gzib3_d[l_ac].gzid014,g_gzib3_d[l_ac].gzid015,g_gzib3_d[l_ac].gzid017) #自訂欄位頁簽  #160523-00002#2 add gzid014,gzid015
                WHERE  gzid001 = g_gzia_m.gzia001
                  AND gzid002 = g_gzib3_d_t.gzid002 #項次 
                  
               #add-point:單身page3修改中
{<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzid_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzib3_d[l_ac].* = g_gzib3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzid_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_gzib3_d[l_ac].* = g_gzib3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzia_m.gzia001
               LET gs_keys_bak[1] = g_gzia001_t
               LET gs_keys[2] = g_gzib3_d[g_detail_idx].gzid002
               LET gs_keys_bak[2] = g_gzib3_d_t.gzid002
               CALL azzi310_update_b('gzid_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                 INITIALIZE l_var_keys TO NULL
               INITIALIZE l_field_keys TO NULL
               INITIALIZE l_vars TO NULL
               INITIALIZE l_fields TO NULL
               INITIALIZE l_var_keys_bak TO NULL
               IF g_gzia_m.gzia001 = g_detail_multi_table_t.gzidl001 AND
                  g_gzib3_d[l_ac].gzid002 = g_detail_multi_table_t.gzidl002 AND
                  g_gzib3_d[l_ac].gzidl004 = g_detail_multi_table_t.gzidl004 THEN
               ELSE
                 LET l_var_keys[01] = g_gzia_m.gzia001
                 LET l_field_keys[01] = 'gzidl001'
                 LET l_var_keys_bak[01] = g_detail_multi_table_t.gzidl001
                 LET l_var_keys[02] = g_gzib3_d[l_ac].gzid002
                 LET l_field_keys[02] = 'gzidl002'
                 LET l_var_keys_bak[02] = g_detail_multi_table_t.gzidl002
                 LET l_var_keys[03] = g_dlang
                 LET l_field_keys[03] = 'gzidl003'
                 LET l_var_keys_bak[03] = g_detail_multi_table_t.gzidl003
                 LET l_vars[01] = g_gzib3_d[l_ac].gzidl004
                 LET l_fields[01] = 'gzidl004'
                CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzidl_t')
               END IF     
               
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL azzi310_gzid_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_gzib3_d[g_detail_idx].gzid002 = g_gzib3_d_t.gzid002 
                  ) THEN
                  LET gs_keys[01] = g_gzia_m.gzia001
                  LET gs_keys[gs_keys.getLength()+1] = g_gzib3_d_t.gzid002
                  CALL azzi310_key_update_b(gs_keys,'gzid_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gzia_m),util.JSON.stringify(g_gzib3_d_t)
               LET g_log2 = util.JSON.stringify(g_gzia_m),util.JSON.stringify(g_gzib3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
{<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid002
            #add-point:BEFORE FIELD gzid002
{<point name="input.b.page3.gzid002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid002
            
            #add-point:AFTER FIELD gzid002
{<point name="input.a.page3.gzid002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid002
            #add-point:ON CHANGE gzid002
{<point name="input.g.page3.gzid002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid003
            #add-point:BEFORE FIELD gzid003
{<point name="input.b.page3.gzid003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid003
            
            #add-point:AFTER FIELD gzid003
{<point name="input.a.page3.gzid003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid003
            #add-point:ON CHANGE gzid003
{<point name="input.g.page3.gzid003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid004
            #add-point:BEFORE FIELD gzid004
{<point name="input.b.page3.gzid004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid004
            
            #add-point:AFTER FIELD gzid004
{<point name="input.a.page3.gzid004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid004
            #add-point:ON CHANGE gzid004
{<point name="input.g.page3.gzid004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid005
            #add-point:BEFORE FIELD gzid005
{<point name="input.b.page3.gzid005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid005
            
            #add-point:AFTER FIELD gzid005
{<point name="input.a.page3.gzid005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid005
            #add-point:ON CHANGE gzid005
{<point name="input.g.page3.gzid005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid006
            #add-point:BEFORE FIELD gzid006
{<point name="input.b.page3.gzid006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid006
            
            #add-point:AFTER FIELD gzid006
{<point name="input.a.page3.gzid006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid006
            #add-point:ON CHANGE gzid006
{<point name="input.g.page3.gzid006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid007
            #add-point:BEFORE FIELD gzid007
{<point name="input.b.page3.gzid007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid007
            
            #add-point:AFTER FIELD gzid007
{<point name="input.a.page3.gzid007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid007
            #add-point:ON CHANGE gzid007
{<point name="input.g.page3.gzid007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid008
            #add-point:BEFORE FIELD gzid008
{<point name="input.b.page3.gzid008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid008
            
            #add-point:AFTER FIELD gzid008
{<point name="input.a.page3.gzid008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid008
            #add-point:ON CHANGE gzid008
{<point name="input.g.page3.gzid008" />}
            #END add-point 

 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid009
            #add-point:BEFORE FIELD gzid009
{<point name="input.b.page3.gzid009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid009
            
            #add-point:AFTER FIELD gzid009
{<point name="input.a.page3.gzid009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid009
            #add-point:ON CHANGE gzid009
{<point name="input.g.page3.gzid009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid010
            #add-point:BEFORE FIELD gzid010
{<point name="input.b.page3.gzid010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid010
            
            #add-point:AFTER FIELD gzid010
{<point name="input.a.page3.gzid010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid010
            #add-point:ON CHANGE gzid010
{<point name="input.g.page3.gzid010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid011
            #add-point:BEFORE FIELD gzid011
{<point name="input.b.page3.gzid011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid011
            
            #add-point:AFTER FIELD gzid011
{<point name="input.a.page3.gzid011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid011
            #add-point:ON CHANGE gzid011
{<point name="input.g.page3.gzid011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD gzid012
            #add-point:BEFORE FIELD gzid012
{<point name="input.b.page3.gzid012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD gzid012
            
            #add-point:AFTER FIELD gzid012
{<point name="input.a.page3.gzid012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE gzid012
            #add-point:ON CHANGE gzid012
{<point name="input.g.page3.gzid012" />}
            #END add-point 
          
         
          
         BEFORE FIELD gzid014
            #add-point:BEFORE FIELD gzid014

            #END add-point
 
         AFTER FIELD gzid014
            
            #add-point:AFTER FIELD gzid014

            #END add-point
            

         ON CHANGE gzid014
            #add-point:ON CHANGE gzid014
             IF g_gzib3_d[l_ac].gzid014 = 'N' THEN 
                LET g_gzib3_d[l_ac].gzid015 = "" 
                DISPLAY BY NAME g_gzib3_d[l_ac].gzid015
             END IF
             CALL azzi310_set_entry_b(l_cmd)
             CALL azzi310_set_no_entry_b(l_cmd)
             
            #END add-point 
            

         BEFORE FIELD gzid015
            #add-point:BEFORE FIELD gzid015

            #END add-point

         AFTER FIELD gzid015
            
            #add-point:AFTER FIELD gzid015

            #END add-point
                  
         ON CHANGE gzid015
            #add-point:ON CHANGE gzid015
           IF g_gzib3_d[l_ac].gzid015 !=g_gzib3_d_t.gzid015 OR g_gzib3_d_t.gzid015 IS NULL THEN
           LET g_chkparam.arg1 = g_gzib3_d[l_ac].gzid015
            IF  NOT cl_chk_exist("v_gzzz001") THEN
             	 NEXT FIELD CURRENT
            END IF    
         END IF
           #160523-00002#2 add(e) 
           
           #END add-point
           
         #160901-00030#1 add(s)  
         BEFORE FIELD gzid017
            #add-point:BEFORE FIELD gzid015

            #END add-point

         AFTER FIELD gzid017
            
            #add-point:AFTER FIELD gzid015
            IF NOT cl_null(g_gzib3_d[l_ac].gzid017) THEN
               IF g_gzib3_d[l_ac].gzid017 !=g_gzib3_d_t.gzid017 OR g_gzib3_d_t.gzid017 IS NULL THEN
                  IF  NOT azzi310_chk_json(g_gzib3_d[l_ac].gzid017) THEN
                	    NEXT FIELD CURRENT
                  END IF    
               END IF
            END IF
            #END add-point
                  
         ON CHANGE gzid017
            #add-point:ON CHANGE gzid015
           IF NOT cl_null(g_gzib3_d[l_ac].gzid017) THEN
               IF g_gzib3_d[l_ac].gzid017 !=g_gzib3_d_t.gzid017 OR g_gzib3_d_t.gzid017 IS NULL THEN
                  IF  NOT azzi310_chk_json(g_gzib3_d[l_ac].gzid017) THEN
                	    NEXT FIELD CURRENT
                  END IF    
               END IF
            END IF
         #160901-00030#1 add(e) 
                   
                  #Ctrlp:input.c.page3.gzid002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid002
            #add-point:ON ACTION controlp INFIELD gzid002
{<point name="input.c.page3.gzid002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid003
            #add-point:ON ACTION controlp INFIELD gzid003
{<point name="input.c.page3.gzid003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid004
            #add-point:ON ACTION controlp INFIELD gzid004
{<point name="input.c.page3.gzid004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid005
            #add-point:ON ACTION controlp INFIELD gzid005
{<point name="input.c.page3.gzid005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid006
            #add-point:ON ACTION controlp INFIELD gzid006
{<point name="input.c.page3.gzid006" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid007
            #add-point:ON ACTION controlp INFIELD gzid007
{<point name="input.c.page3.gzid007" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid008
            #add-point:ON ACTION controlp INFIELD gzid008
{<point name="input.c.page3.gzid008" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid009
            #add-point:ON ACTION controlp INFIELD gzid009
{<point name="input.c.page3.gzid009" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid010
            #add-point:ON ACTION controlp INFIELD gzid010
{<point name="input.c.page3.gzid010" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid011
            #add-point:ON ACTION controlp INFIELD gzid011
{<point name="input.c.page3.gzid011" />}
            #END add-point
 
         #Ctrlp:input.c.page3.gzid012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD gzid012
            #add-point:ON ACTION controlp INFIELD gzid012
{<point name="input.c.page3.gzid012" />}
            #END add-point
 
        #160523-00002#2 add(s)
         ON ACTION controlp INFIELD gzid015
            #add-point:ON ACTION controlp INFIELD gzid015
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_gzib3_d[l_ac].gzid015
            CALL q_gzzz001_1()                           #呼叫開窗
            LET g_gzib3_d[l_ac].gzid015=g_qryparam.return1
            DISPLAY g_gzib3_d[l_ac].gzid015 TO gzid015 #顯示到畫面上
            NEXT FIELD gzid015
        #160523-00002#2 add(e)
        
         AFTER ROW
            #add-point:單身page3 after_row
{<point name="input.body3.after_row"/>}
            #end add-point
            
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzib3_d[l_ac].* = g_gzib3_d_t.*
               END IF
               CLOSE azzi310_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL azzi310_unlock_b("gzid_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
{<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_gzib3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzib3_d.getLength()+1
 
      END INPUT
 
      
 
 
 

{</section>}

{<section id="azzi310.input.other" >}
      
      #add-point:自定義input
{<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
{<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
{<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD gzia001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzib002
               WHEN "s_detail2"
                  NEXT FIELD gzie002
               WHEN "s_detail3"
                  NEXT FIELD gzid002
 
               #add-point:input段modify_detail 
{<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
{<point name="input.after_dialog"/>}
         #end add-point 

       #以下4个action通过修改框架增加
        ON ACTION page_gp  
            CALL azzi310_grouplist_b_fill()
            CALL azzi310_gziblist_b_fill()
            LET g_current_page=1
        
        ON ACTION page_sumy
            CALL azzi310_sumy1_b_fill()
            CALL azzi310_sumy2_b_fill()
            LET g_current_page=2
        
        ON ACTION page_arg
            CALL azzi310_gzielist_b_fill()
            LET g_current_page=3
            
        ON ACTION page_qbe
            CALL azzi310_gzidlist_b_fill()
            LET g_current_page=4            
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
{<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
{<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
{<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
{<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
{<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="azzi310.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi310_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL azzi310_b_fill() #單身填充
      CALL azzi310_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL azzi310_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_gzia_m_mask_o.* =  g_gzia_m.*
   CALL azzi310_gzia_t_mask()
   LET g_gzia_m_mask_n.* =  g_gzia_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
       g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaownid_desc, 
       g_gzia_m.gziaowndp,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp, 
       g_gzia_m.gziacrtdp_desc,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamodid_desc,g_gzia_m.gziamoddt, 
       g_gzia_m.groupname,g_gzia_m.sumyname1,g_gzia_m.comb_sumy,g_gzia_m.s_global_var
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_gzia_m.gziastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzib_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_gzib2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_gzib3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL azzi310_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="azzi310.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION azzi310_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="azzi310.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION azzi310_reproduce()
   DEFINE l_newno     LIKE gzia_t.gzia001 
   DEFINE l_oldno     LIKE gzia_t.gzia001 
 
   DEFINE l_master    RECORD LIKE gzia_t.*
   DEFINE l_detail    RECORD LIKE gzib_t.*
   DEFINE l_detail2    RECORD LIKE gzie_t.*
 
   DEFINE l_detail3    RECORD LIKE gzid_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_gzia_m.gzia001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_gzia001_t = g_gzia_m.gzia001
 
    
   LET g_gzia_m.gzia001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_gzia_m.gziaownid = g_user
      LET g_gzia_m.gziaowndp = g_dept
      LET g_gzia_m.gziacrtid = g_user
      LET g_gzia_m.gziacrtdp = g_dept 
      LET g_gzia_m.gziacrtdt = cl_get_current()
      LET g_gzia_m.gziamodid = g_user
      LET g_gzia_m.gziamoddt = cl_get_current()
      LET g_gzia_m.gziastus = 'Y'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_gzia_m.gziastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL azzi310_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_gzia_m.* TO NULL
      INITIALIZE g_gzib_d TO NULL
      INITIALIZE g_gzib2_d TO NULL
      INITIALIZE g_gzib3_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL azzi310_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi310_set_act_visible()   
   CALL azzi310_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gzia001_t = g_gzia_m.gzia001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " gzia001 = '", g_gzia_m.gzia001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi310_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL azzi310_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL azzi310_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="azzi310.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION azzi310_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzib_t.*
   DEFINE l_detail2    RECORD LIKE gzie_t.*
 
   DEFINE l_detail3    RECORD LIKE gzid_t.*
 
 
 
   #add-point:delete段define
{<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
{<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi310_detail
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi310_detail AS ",
                "SELECT * FROM gzib_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi310_detail SELECT * FROM gzib_t 
                                         WHERE  gzib001 = g_gzia001_t
 
   
   #將key修正為調整後   
   UPDATE azzi310_detail 
      #更新key欄位
      SET gzib001 = g_gzia_m.gzia001
 
      #更新共用欄位
      
 
   #add-point:單身修改前
{<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO gzib_t SELECT * FROM azzi310_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi310_detail
   
   #add-point:單身複製後1
{<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
{<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE azzi310_detail AS ",
      "SELECT * FROM gzie_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi310_detail SELECT * FROM gzie_t
                                         WHERE  gzie001 = g_gzia001_t
 
 
   #將key修正為調整後   
   UPDATE azzi310_detail SET gzie001 = g_gzia_m.gzia001
 
  
   #將資料塞回原table   
   INSERT INTO gzie_t SELECT * FROM azzi310_detail
   
   #add-point:單身複製中
{<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi310_detail
   
   #add-point:單身複製後
{<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
{<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE azzi310_detail AS ",
      "SELECT * FROM gzid_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi310_detail SELECT * FROM gzid_t
                                         WHERE  gzid001 = g_gzia001_t
 
 
   #將key修正為調整後   
   UPDATE azzi310_detail SET gzid001 = g_gzia_m.gzia001
 
  
   #將資料塞回原table   
   INSERT INTO gzid_t SELECT * FROM azzi310_detail
   
   #add-point:單身複製中
{<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi310_detail
   
   #add-point:單身複製後
{<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzia001_t = g_gzia_m.gzia001
 
   
END FUNCTION

{</section>}

{<section id="azzi310.delete" >}
#+ 資料刪除
PRIVATE FUNCTION azzi310_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
{<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
{<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_gzia_m.gzia001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.gzial001 = g_gzia_m.gzia001
LET g_master_multi_table_t.gzial003 = g_gzia_m.gzial003
 
   
   CALL s_transaction_begin()
 
   OPEN azzi310_cl USING g_gzia_m.gzia001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi310_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE azzi310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi310_master_referesh USING g_gzia_m.gzia001 INTO g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzia003, 
       g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp, 
       g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt, 
       g_gzia_m.gziaownid_desc,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp_desc, 
       g_gzia_m.gziamodid_desc
   
   #檢查是否允許此動作
   IF NOT azzi310_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gzia_m_mask_o.* =  g_gzia_m.*
   CALL azzi310_gzia_t_mask()
   LET g_gzia_m_mask_n.* =  g_gzia_m.*
   
   CALL azzi310_show()
   
   #add-point:delete段before ask
{<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
{<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL azzi310_set_pk_array()
      #add-point:相關文件刪除前
{<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_gzia001_t = g_gzia_m.gzia001
 
 
      DELETE FROM gzia_t
       WHERE  gzia001 = g_gzia_m.gzia001
 
       
      #add-point:單頭刪除中
{<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_gzia_m.gzia001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
{<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzib_t
       WHERE  gzib001 = g_gzia_m.gzia001
 
 
      #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzib_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
{<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM gzie_t
       WHERE 
             gzie001 = g_gzia_m.gzia001
      #add-point:單身刪除中
{<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
{<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM gzid_t
       WHERE 
             gzid001 = g_gzia_m.gzia001
      #add-point:單身刪除中
{<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzid_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete3"/>}
      #end add-point
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE azzi310_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_gzib_d.clear() 
      CALL g_gzib2_d.clear()       
      CALL g_gzib3_d.clear()       
      #清空其他数组--修改程序框架增加
      CALL g_grouplist.clear()
      CALL g_sumylist1.clear()
      CALL g_sumylist2.clear()
      CALL g_tab.clear()

     
      CALL azzi310_ui_browser_refresh()  
      #CALL azzi310_ui_headershow()  
      #CALL azzi310_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL azzi310_browser_fill("")
         CALL azzi310_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
{<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzial001
   LET l_field_keys[01] = 'gzial001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzial_t')
 
      
      #單身多語言刪除
      
      
 
      
 
 
 
   
      #add-point:多語言刪除
{<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE azzi310_cl
 
   #功能已完成,通報訊息中心
   CALL azzi310_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="azzi310.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION azzi310_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
{<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
{<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_gzib_d.clear()    #g_gzib_d 單頭及單身 
   CALL g_gzib2_d.clear()
   CALL g_gzib3_d.clear()
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF azzi310_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE gzib002,gzib003,gzib005,gzib006,gzib004  FROM gzib_t",   
                     " INNER JOIN gzia_t ON gzia001 = gzib001 ",
 
                     #"",
                     
                     "",
                     
                     " WHERE gzib001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
{<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
        # LET g_sql = g_sql, " ORDER BY gzib_t.gzib002"   #mark 修改程序框架
         
         #add-point:單身填充控制
{<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi310_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR azzi310_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_gzia_m.gzia001
 #160822-00021#1 mod(s)                                             
#      FOREACH b_fill_cs INTO g_gzib_d[l_ac].gzib002,g_gzib_d[l_ac].gzib003,g_gzib_d[l_ac].gzib005,g_gzib_d[l_ac].gzib006, 
#          g_gzib_d[l_ac].gzib004
      FOREACH b_fill_cs INTO l_gzib_d.gzib002,l_gzib_d.gzib003,l_gzib_d.gzib005,l_gzib_d.gzib006, 
          l_gzib_d.gzib004
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF azzi310_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE gzie002,gzie003,gzie005  FROM gzie_t",   
                     " INNER JOIN gzia_t ON gzia001 = gzie001 ",
 
                     "",
                     
                     
                     " WHERE gzie001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
{<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY gzie_t.gzie002"
         
         #add-point:單身填充控制
{<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi310_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR azzi310_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_gzia_m.gzia001
                                               
      FOREACH b_fill_cs2 INTO g_gzib2_d[l_ac].gzie002,g_gzib2_d[l_ac].gzie003,g_gzib2_d[l_ac].gzie005 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
{<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF azzi310_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
        #151214-00004#2 mod(s) #增加资料表别名的信息，解决一表多用问题
#         LET g_sql = "SELECT  UNIQUE gzid002,gzid003,gzid004,gzid005,gzid006,gzid007,gzid008,gzid009, 
#             gzid010,gzid011,gzid012  FROM gzid_t",  
         #160901-00030#1mod add->gzid017  
         #160926-00005#1.2 mod add NVL
         LET g_sql = "SELECT  UNIQUE gzid002,gzid003,gzig002,gzid004,gzid005,gzid006,gzid007,NVL(gzid008,'N'),gzid009, 
             NVL(gzid014,'N'),gzid015,gzid017,gzid010,gzid011,NVL(gzid012,'N') FROM gzid_t ", #160523-00002#2 add gzid014,gzid015
             #151214-00004#2 mod(e)
                     " INNER JOIN gzia_t ON gzia001 = gzid001 ",
 
                     " LEFT OUTER JOIN gzig_t ON gzig001=gzid001 AND DECODE(gzig003,' ',gzig002,'',gzig002,gzig003)=gzid003 ", #151214-00004#2 add  #增加资料表别名的信息，解决一表多用问题                   
                     
                     " WHERE gzid001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
{<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY gzid_t.gzid002"
         
         #add-point:單身填充控制
{<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi310_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR azzi310_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_gzia_m.gzia001
      #151214-00004#2 mod(s) #增加资料表别名的信息，解决一表多用问题                                     
#      FOREACH b_fill_cs3 INTO g_gzib3_d[l_ac].gzid002,g_gzib3_d[l_ac].gzid003,g_gzib3_d[l_ac].gzid004,
       FOREACH b_fill_cs3 INTO g_gzib3_d[l_ac].gzid002,g_gzib3_d[l_ac].gzid003,g_gzib3_d[l_ac].gzig002,g_gzib3_d[l_ac].gzid004,
      #151214-00004#2 mod(e) #160901-00030#1mod add->gzid017        
          g_gzib3_d[l_ac].gzid005,g_gzib3_d[l_ac].gzid006,g_gzib3_d[l_ac].gzid007,g_gzib3_d[l_ac].gzid008, 
          g_gzib3_d[l_ac].gzid009,g_gzib3_d[l_ac].gzid014,g_gzib3_d[l_ac].gzid015 #160523-00002#2 add gzid014,gzid015   
          ,g_gzib3_d[l_ac].gzid017
          ,g_gzib3_d[l_ac].gzid010,g_gzib3_d[l_ac].gzid011,g_gzib3_d[l_ac].gzid012
                

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
          IF cl_null(g_gzib3_d[l_ac].gzig002) THEN
             LET g_gzib3_d[l_ac].gzig002=g_gzib3_d[l_ac].gzid003
          END IF
{<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
#       CALL azzi310_gzib_b_fill()
#       CALL azzi310_gzie_b_fill()
#       CALL azzi310_gzid_b_fill()
{<point name="browser_fill.other_fill"/>}
   #end add-point
   
   #CALL g_gzib_d.deleteElement(g_gzib_d.getLength()) #160822-00021# mark
   CALL g_gzib2_d.deleteElement(g_gzib2_d.getLength())
   CALL g_gzib3_d.deleteElement(g_gzib3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE azzi310_pb
   FREE azzi310_pb2
 
   FREE azzi310_pb3
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_gzib_d.getLength()
      LET g_gzib_d_mask_o[l_ac].* =  g_gzib_d[l_ac].*
      CALL azzi310_gzib_t_mask()
      LET g_gzib_d_mask_n[l_ac].* =  g_gzib_d[l_ac].*
   END FOR
   
   LET g_gzib2_d_mask_o.* =  g_gzib2_d.*
   FOR l_ac = 1 TO g_gzib2_d.getLength()
      LET g_gzib2_d_mask_o[l_ac].* =  g_gzib2_d[l_ac].*
      CALL azzi310_gzie_t_mask()
      LET g_gzib2_d_mask_n[l_ac].* =  g_gzib2_d[l_ac].*
   END FOR
   LET g_gzib3_d_mask_o.* =  g_gzib3_d.*
   FOR l_ac = 1 TO g_gzib3_d.getLength()
      LET g_gzib3_d_mask_o[l_ac].* =  g_gzib3_d[l_ac].*
      CALL azzi310_gzid_t_mask()
      LET g_gzib3_d_mask_n[l_ac].* =  g_gzib3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION

{</section>}

{<section id="azzi310.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi310_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM gzib_t
       WHERE 
         gzib001 = ps_keys_bak[1] AND gzib002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gzib_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM gzie_t
       WHERE 
             gzie001 = ps_keys_bak[1] AND gzie002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_gzib2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM gzid_t
       WHERE 
             gzid001 = ps_keys_bak[1] AND gzid002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzid_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_gzib3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="azzi310.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi310_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
{<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
{<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO gzib_t
                  (
                   gzib001,
                   gzib002
                   ,gzib003,gzib005,gzib006,gzib004) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzib_d[g_detail_idx].gzib003,g_gzib_d[g_detail_idx].gzib005,g_gzib_d[g_detail_idx].gzib006, 
                       g_gzib_d[g_detail_idx].gzib004)
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzib_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gzib_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO gzie_t
                  (
                   gzie001,
                   gzie002
                   ,gzie003,gzie005) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzib2_d[g_detail_idx].gzie003,g_gzib2_d[g_detail_idx].gzie005)
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_gzib2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO gzid_t
                  (
                   gzid001,
                   gzid002
                   ,gzid003,gzid004,gzid005,gzid006,gzid007,gzid008,gzid009,gzid010,gzid011,gzid012,gzid014,gizd015,gzid017) #160523-00002#2 add gzid014,gzid015
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzib3_d[g_detail_idx].gzid003,g_gzib3_d[g_detail_idx].gzid004,g_gzib3_d[g_detail_idx].gzid005, 
                       g_gzib3_d[g_detail_idx].gzid006,g_gzib3_d[g_detail_idx].gzid007,g_gzib3_d[g_detail_idx].gzid008, 
                       g_gzib3_d[g_detail_idx].gzid009,g_gzib3_d[g_detail_idx].gzid010,g_gzib3_d[g_detail_idx].gzid011, 
                       g_gzib3_d[g_detail_idx].gzid012,g_gzib3_d[g_detail_idx].gzid014,g_gzib3_d[g_detail_idx].gzid015,#160523-00002#2 add gzid014,gzid015
                       g_gzib3_d[g_detail_idx].gzid017) #160901-00030#1mod add->gzid017   
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzid_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_gzib3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
{<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="azzi310.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi310_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
{<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
{<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzib_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL azzi310_gzib_t_mask_restore('restore_mask_o')
               
      UPDATE gzib_t 
         SET (gzib001,
              gzib002
              ,gzib003,gzib005,gzib006,gzib004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzib_d[g_detail_idx].gzib003,g_gzib_d[g_detail_idx].gzib005,g_gzib_d[g_detail_idx].gzib006, 
                  g_gzib_d[g_detail_idx].gzib004) 
         WHERE  gzib001 = ps_keys_bak[1] AND gzib002 = ps_keys_bak[2]
      #add-point:update_b段修改中
{<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzib_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzib_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL azzi310_gzib_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
{<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzie_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL azzi310_gzie_t_mask_restore('restore_mask_o')
               
      UPDATE gzie_t 
         SET (gzie001,
              gzie002
              ,gzie003,gzie005) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzib2_d[g_detail_idx].gzie003,g_gzib2_d[g_detail_idx].gzie005) 
         WHERE  gzie001 = ps_keys_bak[1] AND gzie002 = ps_keys_bak[2]
      #add-point:update_b段修改中
{<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzie_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzie_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL azzi310_gzie_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
{<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzid_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL azzi310_gzid_t_mask_restore('restore_mask_o')
               
     #160901-00030#1mod add->gzid017        
     UPDATE gzid_t 
         SET (gzid001,
              gzid002
              ,gzid003,gzid004,gzid005,gzid006,gzid007,gzid008,gzid009,gzid010,gzid011,gzid012,gzid014,gzid015,gzid017)  #160523-00002#2 add gzid014,gzid015
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzib3_d[g_detail_idx].gzid003,g_gzib3_d[g_detail_idx].gzid004,g_gzib3_d[g_detail_idx].gzid005, 
                  g_gzib3_d[g_detail_idx].gzid006,g_gzib3_d[g_detail_idx].gzid007,g_gzib3_d[g_detail_idx].gzid008, 
                  g_gzib3_d[g_detail_idx].gzid009,g_gzib3_d[g_detail_idx].gzid010,g_gzib3_d[g_detail_idx].gzid011, 
                  g_gzib3_d[g_detail_idx].gzid012,g_gzib3_d[g_detail_idx].gzid014,g_gzib3_d[g_detail_idx].gzid015,#160523-00002#2 add gzid014,gzid015
                  g_gzib3_d[g_detail_idx].gzid017) 
         WHERE  gzid001 = ps_keys_bak[1] AND gzid002 = ps_keys_bak[2]
      #add-point:update_b段修改中
{<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzid_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzid_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL azzi310_gzid_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
{<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
{<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="azzi310.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION azzi310_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="azzi310.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION azzi310_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="azzi310.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi310_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL azzi310_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "gzib_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN azzi310_bcl USING 
                                       g_gzia_m.gzia001,g_gzib_d[g_detail_idx].gzib002     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi310_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "gzie_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi310_bcl2 USING 
                                             g_gzia_m.gzia001,g_gzib2_d[g_detail_idx].gzie002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi310_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "gzid_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN azzi310_bcl3 USING 
                                             g_gzia_m.gzia001,g_gzib3_d[g_detail_idx].gzid002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi310_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="azzi310.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi310_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi310_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi310_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi310_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="azzi310.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi310_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzia001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="azzi310.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi310_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzia001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="azzi310.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi310_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
{<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
{<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
{<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
{<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="azzi310.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi310_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="azzi310.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION azzi310_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="azzi310.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION azzi310_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="azzi310.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION azzi310_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="azzi310.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION azzi310_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="azzi310.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION azzi310_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
{<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
{<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
{<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   #test
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzia001 = '", g_argv[01], "' AND "
   END IF
   #test
#   DISPLAY "arg1:",g_argv[01]
#   LET ls_js = g_argv[01]  #接收傳入的ls_js
#   CALL util.JSON.parse(ls_js,g_input)
#   LET g_gzia_m.gzia001=g_input.gzia001
#   IF NOT cl_null(ls_js) THEN
#      IF NOT cl_null(g_input.gzia001) THEN
#         LET ls_wc=ls_wc," gzia001 = '", g_input.gzia001, "' AND "
#      END IF
#      IF NOT cl_null(g_input.gzia005) THEN
#         LET ls_wc=ls_wc," gzia005 = '", g_input.gzia005, "' AND "
#      END IF
#      IF NOT cl_null(g_input.gziaownid) THEN
#         LET ls_wc=ls_wc," gziaownid = '", g_input.gziaownid, "' AND "
#      END IF
#   END IF
#   DISPLAY "ls_wc:",ls_wc
   #test
   
 
   
   #add-point:default_search段after sql
{<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "gzia_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "gzib_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "gzie_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "gzid_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
{<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="azzi310.state_change" >}
   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION azzi310_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzia_m.gzia001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN azzi310_cl USING g_gzia_m.gzia001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi310_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE azzi310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE azzi310_master_referesh USING g_gzia_m.gzia001 INTO g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzia003, 
       g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaowndp, 
       g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamoddt, 
       g_gzia_m.gziaownid_desc,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp_desc, 
       g_gzia_m.gziamodid_desc
 
   #檢查是否允許此動作
   IF NOT azzi310_action_chk() THEN
      CLOSE azzi310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
       g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaownid_desc, 
       g_gzia_m.gziaowndp,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp, 
       g_gzia_m.gziacrtdp_desc,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamodid_desc,g_gzia_m.gziamoddt, 
       g_gzia_m.groupname,g_gzia_m.sumyname1,g_gzia_m.comb_sumy,g_gzia_m.s_global_var
 
   CASE g_gzia_m.gziastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzia_m.gziastus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_gzia_m.gziastus = lc_state OR cl_null(lc_state) THEN
      CLOSE azzi310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_gzia_m.gziamodid = g_user
   LET g_gzia_m.gziamoddt = cl_get_current()
   LET g_gzia_m.gziastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE gzia_t 
      SET (gziastus,gziamodid,gziamoddt) 
        = (g_gzia_m.gziastus,g_gzia_m.gziamodid,g_gzia_m.gziamoddt)     
    WHERE  gzia001 = g_gzia_m.gzia001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE azzi310_master_referesh USING g_gzia_m.gzia001 INTO g_gzia_m.gzia001,g_gzia_m.gzia002, 
          g_gzia_m.gzia003,g_gzia_m.gzia005,g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid, 
          g_gzia_m.gziaowndp,g_gzia_m.gziacrtid,g_gzia_m.gziacrtdp,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid, 
          g_gzia_m.gziamoddt,g_gzia_m.gziaownid_desc,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid_desc, 
          g_gzia_m.gziacrtdp_desc,g_gzia_m.gziamodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_gzia_m.gzia001,g_gzia_m.gzia002,g_gzia_m.gzial003,g_gzia_m.gzia003,g_gzia_m.gzia005, 
          g_gzia_m.gzia004,g_gzia_m.gzia006,g_gzia_m.gziastus,g_gzia_m.gziaownid,g_gzia_m.gziaownid_desc, 
          g_gzia_m.gziaowndp,g_gzia_m.gziaowndp_desc,g_gzia_m.gziacrtid,g_gzia_m.gziacrtid_desc,g_gzia_m.gziacrtdp, 
          g_gzia_m.gziacrtdp_desc,g_gzia_m.gziacrtdt,g_gzia_m.gziamodid,g_gzia_m.gziamodid_desc,g_gzia_m.gziamoddt, 
          g_gzia_m.groupname,g_gzia_m.sumyname1,g_gzia_m.comb_sumy,g_gzia_m.s_global_var
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE azzi310_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi310_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 

{</section>}

{<section id="azzi310.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION azzi310_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gzib_d.getLength() THEN
         LET g_detail_idx = g_gzib_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzib_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzib_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_gzib2_d.getLength() THEN
         LET g_detail_idx = g_gzib2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzib2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzib2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_gzib3_d.getLength() THEN
         LET g_detail_idx = g_gzib3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzib3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzib3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="azzi310.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION azzi310_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL azzi310_detail_show()
   
END FUNCTION

{</section>}

{<section id="azzi310.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION azzi310_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="azzi310.status_show" >}
PRIVATE FUNCTION azzi310_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="azzi310.mask_functions" >}
&include "erp/azz/azzi310_mask.4gl"

{</section>}

{<section id="azzi310.signature" >}
   

{</section>}

{<section id="azzi310.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION azzi310_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzia_m.gzia001
   LET g_pk_array[1].column = 'gzia001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="azzi310.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="azzi310.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION azzi310_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL azzi310_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_gzia_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 

{</section>}

{<section id="azzi310.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION azzi310_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="azzi310.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

