#該程式未解開Section, 採用最新樣板產出!
{<section id="azzi903.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0013(2016-11-09 11:37:52), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000505
#+ Filename...: azzi903
#+ Description: 功能及選單配置作業
#+ Creator....: 00845(2013-06-01 00:00:00)
#+ Modifier...: 01856 -SD/PR-

{</section>}

{<section id="azzi903.global" >}
#應用 i05 樣板自動產生(Version:37)
#add-point:填寫註解說明
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用)
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
  
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzzp_m RECORD
   gzzp001 LIKE gzzp_t.gzzp001, 
   gzzp001_desc LIKE type_t.chr80, 
   gzzp003 LIKE gzzp_t.gzzp003, 
   gzzp003_desc LIKE type_t.chr80, 
   gzzp005 LIKE gzzp_t.gzzp005, 
   gzzp004 LIKE gzzp_t.gzzp004, 
   gzzp002 LIKE gzzp_t.gzzp002, 
   gzzp002_desc LIKE type_t.chr80, 
   lc_standard LIKE type_t.chr500, 
   gzzq004 LIKE gzzq_t.gzzq004, 
   gzzq005 LIKE gzzq_t.gzzq005, 
   gzzp006 LIKE gzzp_t.gzzp006, 
   gzzp007 LIKE gzzp_t.gzzp007, 
   gzzpstus LIKE gzzp_t.gzzpstus, 
   gzzpmodid LIKE gzzp_t.gzzpmodid, 
   gzzpmodid_desc LIKE type_t.chr80, 
   gzzpmoddt LIKE gzzp_t.gzzpmoddt, 
   gzzpownid LIKE gzzp_t.gzzpownid, 
   gzzpownid_desc LIKE type_t.chr80, 
   gzzpowndp LIKE gzzp_t.gzzpowndp, 
   gzzpowndp_desc LIKE type_t.chr80, 
   gzzpcrtid LIKE gzzp_t.gzzpcrtid, 
   gzzpcrtid_desc LIKE type_t.chr80, 
   gzzpcrtdp LIKE gzzp_t.gzzpcrtdp, 
   gzzpcrtdp_desc LIKE type_t.chr80, 
   gzzpcrtdt LIKE gzzp_t.gzzpcrtdt
                                  END RECORD
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
                                  
#模組變數(Module Variables)
DEFINE g_gzzp_m          type_g_gzzp_m
DEFINE g_gzzp_m_t        type_g_gzzp_m
DEFINE g_gzzp_m_o        type_g_gzzp_m
 
   DEFINE g_gzzp001_t LIKE gzzp_t.gzzp001
DEFINE g_gzzp002_t LIKE gzzp_t.gzzp002
 
 
#DEFINE g_gzzp002_t        LIKE gzzp_t.gzzp002
DEFINE g_gzzp003_t        LIKE gzzp_t.gzzp003
#DEFINE g_gzzp001_t      LIKE gzzp_t.gzzp001
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,    #外顯欄位
       b_pid           LIKE type_t.chr100,    #父節點id
       b_id            LIKE type_t.chr100,    #本身節點id
       b_exp           LIKE type_t.chr100,    #是否展開
       b_hasC          LIKE type_t.num5,      #是否有子節點
       b_isExp         LIKE type_t.num5,      #是否已展開
       b_expcode       LIKE type_t.num5,      #展開值
       #tree自定義欄位
          b_gzzp001 LIKE gzzp_t.gzzp001,
      b_gzzp002 LIKE gzzp_t.gzzp002,
      b_gzzp005 LIKE gzzp_t.gzzp005,
      b_gzzp003 LIKE gzzp_t.gzzp003,
      b_gzzp004 LIKE gzzp_t.gzzp004
                   END RECORD
 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER    #root資料所在
       
#多table用變數
 
DEFINE g_wc                  STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num10
DEFINE l_ac                  LIKE type_t.num10
DEFINE g_curr_diag           ui.Dialog                #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10         
DEFINE gwin_curr             ui.Window                #Current Window
DEFINE gfrm_curr             ui.Form                  #Current Form
DEFINE g_page_action         STRING                   #page action
DEFINE g_header_hidden       LIKE type_t.num5         #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5         #隱藏工作Panel
DEFINE g_browser_cnt         LIKE type_t.num10        #total count
DEFINE g_page                STRING                   #第幾頁
DEFINE g_current_row         LIKE type_t.num10        #Browser所在筆數
DEFINE g_current_sw          LIKE type_t.num10        #Browser所在筆數用開關
 
DEFINE g_searchcol           LIKE type_t.chr200
DEFINE g_searchstr           LIKE type_t.chr200
DEFINE g_searchtype          LIKE type_t.chr200
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_root_search         BOOLEAN
DEFINE g_first               LIKE type_t.num5  #標示是否要啟動s_browse重查
DEFINE g_aw                  STRING            #確定當下點擊的單身
DEFINE g_log1                STRING            #log用
DEFINE g_log2                STRING            #log用
DEFINE g_add_browse          STRING            #新增填充用WC
DEFINE g_add_idx             LIKE type_t.num5  #新增資料指標
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="azzi903.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT gzzp001,'',gzzp003,'',gzzp005,gzzp004,gzzp002,'','','','',gzzp006,gzzp007, 
       gzzpstus,gzzpmodid,'',gzzpmoddt,gzzpownid,'',gzzpowndp,'',gzzpcrtid,'',gzzpcrtdp,'',gzzpcrtdt", 
        
                      " FROM gzzp_t",
                      " WHERE gzzp001=? AND gzzp002=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi903_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.gzzp001,t0.gzzp003,t0.gzzp005,t0.gzzp004,t0.gzzp002,t0.gzzp006,t0.gzzp007, 
       t0.gzzpstus,t0.gzzpmodid,t0.gzzpmoddt,t0.gzzpownid,t0.gzzpowndp,t0.gzzpcrtid,t0.gzzpcrtdp,t0.gzzpcrtdt, 
       t1.gzzal003 ,t2.ooag011 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003",
               " FROM gzzp_t t0",
                              " LEFT JOIN gzzal_t t1 ON t1.gzzal001=gzzp001 AND t1.gzzal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=gzzpmodid  ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=gzzpownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=gzzpowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=gzzpcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=gzzpcrtdp AND t6.ooefl002='"||g_dlang||"' ",
 
               " WHERE  t0.gzzp001 = ? AND t0.gzzp002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi903_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi903 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi903_init()   
 
      #進入選單 Menu (="N")
      CALL azzi903_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi903
      
   END IF 
   
   CLOSE azzi903_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="azzi903.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi903_init()
   #add-point:init段define name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
      CALL cl_set_combo_scc_part('gzzpstus','17','N,Y')
 
      CALL cl_set_combo_scc('gzzp005','97') 
 
   LET g_add_idx = 1
   LET g_current_idx = 1
    
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   CALL azzi903_default_search()
    
END FUNCTION

{</section>}

{<section id="azzi903.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION azzi903_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_exit      LIKE type_t.num5    #判別是否為離開作業
   DEFINE la_param  RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_gzzp_m.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         LET g_first = 1
         CALL azzi903_init()
      END IF
 
      #當瀏覽頁簽被設定關閉時,使用MENU (開啟時使用DIALOG)
      IF g_worksheet_hidden = 1 THEN
 
         LET g_current_sw = FALSE
 
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = g_current_row
         LET g_current_sw = TRUE
         CALL cl_show_fld_cont() 
         IF g_current_idx > 0 THEN
         CALL azzi903_fetch("")    #當每次點任一筆資料都會需要用到
         END IF
 
         MENU
            #add-point:ui_dialog段其他頁簽的 display array(in menu) name="ui_dialog.more_displayarray_in_menu"
            {<point name="ui_dialog.more_displayarray_in_menu"/>}
            #end add-point
            
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL azzi903_statechange()
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL azzi903_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL azzi903_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL azzi903_fetch("") 
               LET g_current_row = g_current_idx
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
 
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
 
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi903_modify()
               #add-point:ON ACTION modify name="menu2.modify"
               {<point name="menu2.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi903_delete(DIALOG)
               #add-point:ON ACTION delete name="menu2.delete"
               {<point name="menu2.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi903_insert(DIALOG)
               #add-point:ON ACTION insert name="menu2.insert"
               {<point name="menu2.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu2.output"
               {<point name="menu2.output" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu2.quickprint"
               {<point name="menu2.quickprint" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi903_reproduce(DIALOG)
               #add-point:ON ACTION reproduce name="menu2.reproduce"
               {<point name="menu2.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi903_query()
               #add-point:ON ACTION query name="menu2.query"
               {<point name="menu2.query" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
 
            
 
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL azzi903_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.menu.related_document"
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.menu.agendum"
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.menu.followup"
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            
            &include "main_menu_exit_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
 
         END MENU
 
      ELSE
         #第一次進入程式, 或啟動重新查詢
         IF g_first = 0 THEN 
            CALL azzi903_browser_fill(g_wc,g_searchtype)
            LET g_first = 1
         END IF
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
            INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol, 
                formonly.rdo_searchtype
               BEFORE INPUT
            END INPUT
            
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
 
               BEFORE DISPLAY
                  CALL DIALOG.setSelectionMode("s_browse",1) #設定為單選
 
               BEFORE ROW
                  #add-point:ui_dialog段before row1 name="ui_dialog.before_row1"
                  {<point name="ui_dialog.before_row1"/>}
                  #end add-point
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_row > 1 AND g_current_sw = FALSE THEN
                     CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                     LET g_current_idx = g_current_row
                  END IF
                  #add-point:ui_dialog段before row2 name="ui_dialog.before_row2"
                  {<point name="ui_dialog.before_row2"/>}
                  #end add-point
                  LET g_current_row = g_current_idx #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont() 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
 
                  CALL azzi903_fetch("")  #當每次點任一筆資料都會需要用到
 
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL azzi903_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
 
               ON COLLAPSE (g_row_index)
                  #樹關閉
                  
               #add-point:ui_dialog段action name="ui_dialog.tree_action"
               {<point name="ui_dialog.tree_action"/>}
               #end add-point
 
            END DISPLAY
 
            #add-point:ui_dialog段其他頁簽的 display array name="ui_dialog.more_displayarray"
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            BEFORE DIALOG
               #action default動作(判定是否要先執行特定動作)
               #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi903_insert(DIALOG)
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_current_sw = FALSE
 
               #add-point:ui_dialog,before dialog1 name="ui_dialog.b_dialog1"
               {<point name="ui_dialog.b_dialog1"/>}
               #end add-point
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_sw = FALSE THEN
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               #add-point:ui_dialog,before dialog2 name="ui_dialog.b_dialog2"
               {<point name="ui_dialog.b_dialog2"/>}
               #end add-point
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               IF g_current_idx > 0 THEN
               CALL azzi903_fetch("")            #當每次點任一筆資料都會需要用到
               END IF
               #add-point:ui_dialog,before dialog name="ui_dialog.b_dialog"
               {<point name="ui_dialog.b_dialog"/>}
               #end add-point
 
            AFTER DIALOG 
               #add-point:ui_dialog,after dialog name="ui_dialog.a_dialog"
               {<point name="ui_dialog.a_dialog"/>}
               #end add-point
 
            ON ACTION statechange
               LET g_action_choice = "statechange"
               CALL azzi903_statechange()
 
            #一般搜尋
            ON ACTION searchdata
               LET g_searchstr = GET_FLDBUF(searchstr)
               LET g_searchcol = GET_FLDBUF(cbo_searchcol)
               #若無輸入關鍵字則查找出所有資料
               IF g_searchcol="0" AND NOT cl_null(g_searchstr) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "searchcol:" 
                  LET g_errparam.code = "std-00001" 
                  LET g_errparam.popup = FALSE 
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF 
               IF NOT cl_null(g_searchstr) THEN
                  LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
                  LET g_wc = g_wc.toLowerCase()
               ELSE
                  LET g_wc = " 1=1 "
               END IF
               LET g_first = 0 #啟動重查
               EXIT DIALOG
 
            #進階搜尋
            #ON ACTION advancesearch
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/mainhidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi903_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi903_delete(DIALOG)
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi903_insert(DIALOG)
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi903_reproduce(DIALOG)
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi903_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
 
            
            
            #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL azzi903_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi903_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            
            &include "main_menu_exit_dialog.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION 

{</section>}

{<section id="azzi903.browser_fill" >}
#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION azzi903_browser_fill(p_wc,p_type)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc       STRING 
   DEFINE p_type     LIKE type_t.chr10
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10   
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_fill"
   {<point name="browser_fill.before_fill"/>}
   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   LET l_cnt = 0
   LET l_cnt2 = 0
   
   DROP TABLE azzi903_tmp
   
   #Create temp table
   CREATE TEMP TABLE azzi903_tmp
   (
         gzzp001 VARCHAR(500),
   gzzp002 VARCHAR(500),
   gzzp005 VARCHAR(500),
   gzzp003 VARCHAR(500),
   gzzp004 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   #先確定搜尋範圍(若無條件搜尋則只找root出來)
   SELECT COUNT(1) INTO l_cnt FROM gzzp_t WHERE  1=1
   
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT COUNT(1)",
               " FROM gzzp_t ",
               "  ",
               " WHERE  ",p_wc ,cl_sql_add_filter("gzzp_t")
   #add-point:browser_fill段cnt wc name="browser_fill.cnt_wc"
   {<point name="browser_fill.cnt_wc"/>}
   #end add-point
              
   PREPARE master_cnt FROM g_sql
   DECLARE master_cntcur CURSOR FOR master_cnt
   OPEN master_cntcur
   IF SQLCA.SQLCODE THEN   #(ver:36)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN master_cntcur:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   FETCH master_cntcur INTO l_cnt2
   LET g_root_search = FALSE
   
   IF l_cnt2 = 0 THEN
      #INITIALIZE g_errparam TO NULL 
      #LET g_errparam.extend = "" 
      #LET g_errparam.code = "-100" 
      #LET g_errparam.popup = TRUE 
      #CALL cl_err()
      RETURN
   END IF
   
   IF l_cnt = l_cnt2 THEN
      #未輸入條件時則只查找root節點
      LET p_wc = " gzzp002 = gzzp003 "
      LET g_root_search = TRUE
   END IF
 
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 ",
               " FROM gzzp_t",
               "  ",
               " WHERE  ",p_wc ,cl_sql_add_filter("gzzp_t")
   #add-point:browser_fill段sql wc name="browser_fill.sql_wc"
   {<point name="browser_fill.sql_wc"/>}
   #end add-point
   #LET g_sql = cl_sql_add_tabid(g_sql,"gzzp_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
   
   #單筆update
   #LET g_sql = "SELECT '','','','','','','',gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 ",
   #            " FROM gzzp_t",
   #            "  ",
   #            " WHERE  ",
   #            " gzzp001 = ?"
   #            ," gzzp002 = ?"
 
                
   LET g_sql = " SELECT t0.gzzp001,t0.gzzp002,t0.gzzp005,t0.gzzp003,t0.gzzp004 ",
               " FROM gzzp_t t0",
               "  ",
               
               " WHERE  ",
               " gzzp001 = ?"
               ," AND gzzp002 = ?"
 
 
               
   #add-point:browser_fill段sql wc name="browser_fill.refresh"
   {<point name="browser_fill.refresh"/>}
   #end add-point
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_refresh FROM g_sql
   DECLARE master_refreshcur CURSOR FOR master_refresh
 
   #搜尋建構樹所需的節點
   CASE p_type
      WHEN "1" #上推
         CALL azzi903_match_node(p_wc,p_type) 
      WHEN "2" #下展
         #CALL azzi903_find_speed_tbl(p_wc,p_type) 
         CALL azzi903_match_node(p_wc,p_type) 
      WHEN "3" #全部
         CALL azzi903_match_node(p_wc,p_type) 
   END CASE
 
   CALL azzi903_browser_create(p_type)
     
END FUNCTION

{</section>}

{<section id="azzi903.match_node" >}
PRIVATE FUNCTION azzi903_match_node(p_wc,p_type)
   #add-point:match_node段define name="match_node.define_customerization"
   {<point name="match_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位
             gzzp001 VARCHAR(500),
   gzzp002 VARCHAR(500),
   gzzp005 VARCHAR(500),
   gzzp003 VARCHAR(500),
   gzzp004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
             gzzp001 VARCHAR(500),
   gzzp002 VARCHAR(500),
   gzzp005 VARCHAR(500),
   gzzp003 VARCHAR(500),
   gzzp004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD
   DEFINE li_cnt       LIKE type_t.num10   #(ver:35) add
   #add-point:match_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="match_node.define"
   {<point name="match_node.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="match_node.pre_function"
   {<point name="match_node.pre_function"/>}
   #end add-point
   
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0" #展開值0則無法展開
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null("gzzp003") THEN
      LET ls_code = "0"
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO azzi903_tmp (gzzp001,gzzp002,gzzp005,gzzp003,gzzp004,exp_code) VALUES (?, 
       ?,?,?,?,?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end("Y","0")
      RETURN
   END IF
 
   #(ver:35) ---modify start---
   FOREACH master_extcur INTO l_bstmp.*
      #(ver:35) add gzzp003
      IF azzi903_tmp_tbl_chk(l_bstmp.gzzp002,l_bstmp.gzzp003,ls_code   #(ver:35) add gzzp003
                  ,l_bstmp.gzzp001
                  ) THEN
         EXECUTE master_tmp USING l_bstmp.*,ls_code
      END IF
 
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
   END FOREACH
 
   #找出符合條件的節點的所有祖先並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code2 = "1"
      WHEN 2
         LET ls_code2 = "-1"
      WHEN 3
         LET ls_code2 = "1"
   END CASE
 
   WHILE TRUE
      IF l_child_list.getLength() <= 0 THEN
         EXIT WHILE
      END IF
 
      #若pid欄位存在才進行後續處理
      #擷取該節點的所有父節點
      IF cl_null(l_child_list[1].gzzp002) THEN
         IF l_child_list.getLength() = 1 THEN
            EXIT WHILE
         ELSE
            CALL l_child_list.deleteElement(1)
            CONTINUE WHILE
         END IF
      END IF
 
      #確認是否有父節點
      LET g_sql = " SELECT COUNT(1) ",
                  " FROM gzzp_t t0",
                  " WHERE  gzzp002 = ? ",
                  " AND gzzp001 = ? ",
                  cl_sql_add_filter("gzwe_t")
      PREPARE master_getparent_cnt FROM g_sql
      EXECUTE master_getparent_cnt USING l_child_list[1].gzzp003 INTO li_cnt
      IF li_cnt <= 0 THEN
         CALL l_child_list.deleteElement(1)
         CONTINUE WHILE
      END IF
 
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 ",
                  " FROM gzzp_t t0",
                  " WHERE  gzzp002 = ? ",
                  " AND gzzp001 = ? ",
                  cl_sql_add_filter("gzzp_t")
      PREPARE master_getparent_up FROM g_sql
      DECLARE master_getparent_up_cur CURSOR FOR master_getparent_up
      
   #  EXECUTE master_getparent_up USING l_child_list[1].gzzp003
   #                                    ,l_child_list[1].gzzp001
   #                                    INTO l_bstmp.*
      FOREACH master_getparent_up_cur USING l_child_list[1].gzzp003
                                        INTO l_bstmp.*
 
         IF SQLCA.SQLCODE THEN
            FREE master_getparent_up
            EXIT WHILE
         END IF
         #FREE master_getparent_up
      
         #確定該節點是否存在於temp table中
         IF STATUS = 0 AND azzi903_tmp_tbl_chk(l_bstmp.gzzp002,l_bstmp.gzzp003,ls_code2
                     ,l_bstmp.gzzp001
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
 
            #若已找到root，表示已到根結點
            IF l_bstmp.gzzp002 = l_bstmp.gzzp003 THEN
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
 
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
      END FOREACH
      CALL l_child_list.deleteElement(1)
   END WHILE
   #(ver:35) --- modify end ---
 
   CLOSE master_tmp
   
   CALL s_transaction_end("Y","0")
 
END FUNCTION

{</section>}

{<section id="azzi903.tmp_tbl_chk" >}
#+ TEMP TABLE CHK
#PRIVATE FUNCTION azzi903_tmp_tbl_chk(ps_id,pi_code,ps_type)
PRIVATE FUNCTION azzi903_tmp_tbl_chk(ps_id,ps_pid,pi_code,ps_type)   #(ver:35) modify
   #add-point:tmp_tbl_chk段define name="tmp_tbl_chk.define_customerization"
   {<point name="tmp_tbl_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING   #(ver:35) add
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_pid      LIKE type_t.chr500   #(ver:35) add
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10   
   #add-point:tmp_tbl_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="tmp_tbl_chk.define"
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="tmp_tbl_chk.pre_function"
   {<point name="tmp_tbl_chk.pre_function"/>}
   #end add-point
   
   LET ls_id = ps_id
   LET ls_pid = ps_pid   #(ver:35) add
   LET ls_type = ps_type
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(1) FROM azzi903_tmp ", 
               " WHERE gzzp002 = ? ",
                 " AND gzzp003 = ? "   #(ver:35) add
                ," AND gzzp001 = ? "
 
   PREPARE azzi903_get_cnt FROM g_sql
   EXECUTE azzi903_get_cnt USING ls_id ,ls_pid   #(ver:35) add ls_pid
                                           ,ls_type
                                     INTO li_cnt
   FREE azzi903_get_cnt
 
   IF li_cnt = 0 OR SQLCA.SQLCODE THEN
      RETURN TRUE
   ELSE
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM azzi903_tmp ",
                  " WHERE gzzp002 = ? ",
                    " AND gzzp003 = ? "   #(ver:35) add
                   ," AND gzzp001 = ? "
 
      PREPARE azzi903_chk_exp FROM g_sql
      EXECUTE azzi903_chk_exp USING ls_id ,ls_pid   #(ver;35) add ls_pid
                                              ,ls_type
                                        INTO li_code
      FREE azzi903_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE azzi903_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE gzzp002 = ? ",
                       " AND gzzp003 = ? "   #(ver:35) add
                      ," AND gzzp001 = ? "
         PREPARE azzi903_upd_exp FROM g_sql
         EXECUTE azzi903_upd_exp USING ls_id ,ls_pid   #(ver:35) add ls_pid
                                                 ,ls_type
         FREE azzi903_upd_exp
      END IF
      
      RETURN FALSE
   END IF
 
END FUNCTION

{</section>}

{<section id="azzi903.browser_expand" >}
#+ Tree子節點展開
PRIVATE FUNCTION azzi903_browser_expand(p_id)
   #add-point:browser_expand段define name="browser_expand.define_customerization"
   {<point name="browser_expand.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         STRING
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   DEFINE ls_ent_wc     LIKE type_t.chr500
   #add-point:browser_expand段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_expand.define"
   {<point name="browser_expand.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_expand.pre_function"
   {<point name="browser_expand.pre_function"/>}
   #end add-point
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_gzzp002
   LET l_typevalue = g_browser[p_id].b_gzzp001
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "azzi903_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "gzzp_t"
         LET ls_exp_code = "'2'"
         LET ls_ent_wc = "  "
   END CASE
    
   LET l_sql = " SELECT DISTINCT '','','','FALSE','','',",ls_exp_code,",gzzp001,gzzp002,gzzp005,gzzp003, 
       gzzp004 ",
               " FROM ",ls_source,
               
               " WHERE ",ls_ent_wc,"gzzp003 = '", l_keyvalue,
               "' AND gzzp002 <> gzzp003",
               " AND gzzp001 = '", l_typevalue,"'", 
               " ORDER BY gzzp002"
   
   #add-point:browser_expand段before_pre name="browser_expand.before_pre"
   {<point name="browser_expand.before_pre"/>}
   #end add-point
   
   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].* 
      #pid=父節點id
      LET g_browser[l_id].b_pid = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      CALL azzi903_desc_show(l_id)
      LET g_browser[l_id].b_hasC = azzi903_chk_hasC(l_id)
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
END FUNCTION

{</section>}

{<section id="azzi903.browser_create" >}
PRIVATE FUNCTION azzi903_browser_create(p_type)
   #add-point:browser_create name="browser_create.define_customerization"
   {<point name="browser_create.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_create.define"
   {<point name="browser_create.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="browser_create.pre_function"
   {<point name="browser_create.pre_function"/>}
   #end add-point
   
   #先找出所有的帳別資料
   LET g_sql = " SELECT DISTINCT gzzp001 FROM azzi903_tmp ORDER BY gzzp001"
   PREPARE master_type FROM g_sql
   DECLARE master_typecur CURSOR FOR master_type
   INITIALIZE g_browser_root TO NULL
   
   LET l_ac = 1
   FOREACH master_typecur INTO g_browser[l_ac].b_gzzp001
      #確定root節點所在
      LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      #此處為帳別部分(LV-1)
      LET g_browser[l_ac].b_gzzp002  = g_browser[l_ac].b_gzzp001
      LET g_browser[l_ac].b_gzzp001 = g_browser[l_ac].b_gzzp001
      LET g_browser[l_ac].b_pid = "0" CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = TRUE
      LET g_browser[l_ac].b_hasC = TRUE
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      
      #抓出LV2的所有資料
      #LET g_sql = " SELECT DISTINCT t0.gzzp001,t0.gzzp002,t0.gzzp005,t0.gzzp003,t0.gzzp004,exp_code FROM azzi903_tmp a ", 

      LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,gzzp001,gzzp002,gzzp005,gzzp003, 
          gzzp004 FROM azzi903_tmp a ",
                  
                  " WHERE ",
                  "a.gzzp001 = ? ",
                  " AND ",
                  " (( SELECT COUNT(1) FROM azzi903_tmp b WHERE a.gzzp003 = b.gzzp002 ", 
                  " AND a.gzzp001 = b.gzzp001",
                  ") = 0 OR ", 
                  " a.gzzp002 = a.gzzp003 )", 
                  " ORDER BY a.gzzp002"
      #add-point:browser_create.before_pre name="browser_create.before_pre"
      {<point name="browser_create.before_pre"/>}
      #end add-point
 
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      #OPEN master_getLV2cur USING g_browser[l_ac-1].b_gzzp001   #(ver:36)
 
      LET g_cnt = l_ac
      FOREACH master_getLV2cur   #(ver:36) #(ver:37)
         USING g_browser[l_ac-1].b_gzzp001   #(ver:36)
         INTO g_browser[g_cnt].*    #(ver:36)
         #(ver:36) ---add start---
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = "Browser Create FOREACH ERROR"
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.popup = TRUE
            CALL cl_err()
            RETURN
         END IF
         #(ver:36) --- add end ---
 
         #去除多餘空白
         #LET g_browser[g_cnt].b_gzzp002 = g_browser[g_cnt].b_gzzp002 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id  = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         #(ver:35) ---modify start---
         #LET g_browser[g_cnt].b_expcode = 2
         CASE g_browser[g_cnt].b_expcode
            WHEN 2
               LET g_browser[g_cnt].b_hasC = azzi903_chk_hasC(g_cnt)
            WHEN 1
               LET g_browser[g_cnt].b_hasC = azzi903_chk_hasC(g_cnt)
            WHEN 0
               LET g_browser[g_cnt].b_hasC = FALSE
            WHEN -1
               #向下查找到展開值不等於-1得節點(temp table中查找)
               LET g_cnt = azzi903_find_node(g_cnt)
         END CASE
         #(ver:35) --- modify end ---
         IF cl_null("gzzp003") THEN
            LET g_browser[g_cnt].b_hasC = FALSE
         ELSE
            LET g_browser[g_cnt].b_hasC = TRUE
         END IF
 
         LET g_cnt = g_cnt + 1
      END FOREACH
      LET l_ac = g_browser.getLength()
 
   END FOREACH
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_gzzp002) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL azzi903_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
 
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
 
   FREE tree_expand
   FREE master_getLV2
   
END FUNCTION

{</section>}

{<section id="azzi903.desc_show" >}
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION azzi903_desc_show(pi_ac)
   #add-point:desc_show段define name="desc_show.define_customerization"
   {<point name="desc_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10   
   #add-point:desc_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="desc_show.define"
   {<point name="desc_show.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="desc_show.pre_function"
   {<point name="desc_show.pre_function"/>}
   #end add-point
   
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理 name="desc_show.show"
   {<point name="desc_show.show"/>} 
   #end add-point
 
   LET l_ac = li_tmp
 
END FUNCTION

{</section>}

{<section id="azzi903.find_node" >}
#+ 尋找符合條件的節點
PRIVATE FUNCTION azzi903_find_node(pi_ac)
   #add-point:find_node段define name="find_node.define_customerization"
   {<point name="find_node.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_ac   LIKE type_t.num10
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_tmp  LIKE type_t.num10
   DEFINE ls_pid  STRING
   #add-point:find_node段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="find_node.define"
   {<point name="find_node.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="find_node.pre_function"
   {<point name="find_node.pre_function"/>}
   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,gzzp001,gzzp002,gzzp005,gzzp003,gzzp004 ", 

               " FROM azzi903_tmp ",
               " WHERE gzzp003 = ? AND gzzp003 <> gzzp002",
               " ORDER BY gzzp002"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
      #  OPEN master_getNodecur USING g_browser[li_idx].b_gzzp002   #(ver:36)
         FOREACH master_getNodecur USING g_browser[li_idx].b_gzzp002 INTO g_browser[g_browser.getLength()+1].*  
               #(ver:36)
 
            #(ver:36) ---start---
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH ",SQLERRMESSAGE
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               RETURN
            END IF
            #(ver:36) --- end ---
            CALL azzi903_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = azzi903_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION

{</section>}

{<section id="azzi903.chk_hasC" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi903_chk_hasC(pi_id)
   #add-point:chk_hasC段define name="chk_hasC.define_customerization"
   {<point name="chk_hasC.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_id    LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:chk_hasC段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="chk_hasC.define"
   {<point name="chk_hasC.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="chk_hasC.pre_function"
   {<point name="chk_hasC.pre_function"/>}
   #end add-point
   
   LET g_sql = "SELECT COUNT(gzzp003) FROM azzi903_tmp ",
               " WHERE ",
                "gzzp003 = ? AND ",
                "exp_code <> '-1' AND gzzp002 <> gzzp003 "
                 ," AND ",
                "gzzp001 = ?"
 
   PREPARE azzi903_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(1) FROM gzzp_t ",
               " WHERE  ", 
               "gzzp002 <> gzzp003 AND ",
               "gzzp003 = ? ",
                " AND ",
               "gzzp001 = ?",
               cl_sql_add_filter("gzzp_t")
   
   PREPARE azzi903_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE azzi903_temp_chk 
           USING g_browser[pi_id].b_gzzp002
                 ,g_browser[pi_id].b_gzzp001
            INTO li_cnt
         FREE azzi903_temp_chk
      WHEN 2 
         EXECUTE azzi903_master_chk 
           USING g_browser[pi_id].b_gzzp002
                 ,g_browser[pi_id].b_gzzp001
            INTO li_cnt
         FREE azzi903_master_chk
   END CASE
    
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION

{</section>}

{<section id="azzi903.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi903_construct()
   #add-point:cs段define name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
   
   #清除畫面
   CLEAR FORM
   INITIALIZE g_gzzp_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_qryparam.state = "c"
    
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      CONSTRUCT BY NAME g_wc ON gzzp001,gzzp003,gzzp005,gzzp004,gzzp002,lc_standard,gzzq004,gzzq005, 
          gzzp006,gzzp007,gzzpstus,gzzpmodid,gzzpmoddt,gzzpownid,gzzpowndp,gzzpcrtid,gzzpcrtdp,gzzpcrtdt  

      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.before_construct"
            {<point name="cs.before_construct"/>}
            #end add-point 
            
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<gzzpcrtdt>>----
         AFTER FIELD gzzpcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gzzpmoddt>>----
         AFTER FIELD gzzpmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzpcnfdt>>----
         
         #----<<gzzppstdt>>----
 
 
 
 
                  #Ctrlp:construct.c.gzzp001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp001
            #add-point:ON ACTION controlp INFIELD gzzp001 name="construct.c.gzzp001"
            {<point name="construct.c.gzzp001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp001
            #add-point:BEFORE FIELD gzzp001 name="construct.b.gzzp001"
            {<point name="construct.b.gzzp001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp001
            
            #add-point:AFTER FIELD gzzp001 name="construct.a.gzzp001"
            {<point name="construct.a.gzzp001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp003
            #add-point:BEFORE FIELD gzzp003 name="construct.b.gzzp003"
            {<point name="construct.b.gzzp003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp003
            
            #add-point:AFTER FIELD gzzp003 name="construct.a.gzzp003"
            {<point name="construct.a.gzzp003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzp003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp003
            #add-point:ON ACTION controlp INFIELD gzzp003 name="construct.c.gzzp003"
            {<point name="construct.c.gzzp003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.gzzp005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp005
            #add-point:ON ACTION controlp INFIELD gzzp005 name="construct.c.gzzp005"
            {<point name="construct.c.gzzp005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp005
            #add-point:BEFORE FIELD gzzp005 name="construct.b.gzzp005"
            {<point name="construct.b.gzzp005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp005
            
            #add-point:AFTER FIELD gzzp005 name="construct.a.gzzp005"
            {<point name="construct.a.gzzp005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp004
            #add-point:BEFORE FIELD gzzp004 name="construct.b.gzzp004"
            {<point name="construct.b.gzzp004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp004
            
            #add-point:AFTER FIELD gzzp004 name="construct.a.gzzp004"
            {<point name="construct.a.gzzp004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzp004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp004
            #add-point:ON ACTION controlp INFIELD gzzp004 name="construct.c.gzzp004"
            {<point name="construct.c.gzzp004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp002
            #add-point:BEFORE FIELD gzzp002 name="construct.b.gzzp002"
            {<point name="construct.b.gzzp002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp002
            
            #add-point:AFTER FIELD gzzp002 name="construct.a.gzzp002"
            {<point name="construct.a.gzzp002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzp002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp002
            #add-point:ON ACTION controlp INFIELD gzzp002 name="construct.c.gzzp002"
            {<point name="construct.c.gzzp002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD lc_standard
            #add-point:BEFORE FIELD lc_standard name="construct.b.lc_standard"
            {<point name="construct.b.lc_standard" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD lc_standard
            
            #add-point:AFTER FIELD lc_standard name="construct.a.lc_standard"
            {<point name="construct.a.lc_standard" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.lc_standard
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD lc_standard
            #add-point:ON ACTION controlp INFIELD lc_standard name="construct.c.lc_standard"
            {<point name="construct.c.lc_standard" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzq004
            #add-point:BEFORE FIELD gzzq004 name="construct.b.gzzq004"
            {<point name="construct.b.gzzq004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzq004
            
            #add-point:AFTER FIELD gzzq004 name="construct.a.gzzq004"
            {<point name="construct.a.gzzq004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzq004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzq004
            #add-point:ON ACTION controlp INFIELD gzzq004 name="construct.c.gzzq004"
            {<point name="construct.c.gzzq004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzq005
            #add-point:BEFORE FIELD gzzq005 name="construct.b.gzzq005"
            {<point name="construct.b.gzzq005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzq005
            
            #add-point:AFTER FIELD gzzq005 name="construct.a.gzzq005"
            {<point name="construct.a.gzzq005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzq005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzq005
            #add-point:ON ACTION controlp INFIELD gzzq005 name="construct.c.gzzq005"
            {<point name="construct.c.gzzq005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp006
            #add-point:BEFORE FIELD gzzp006 name="construct.b.gzzp006"
            {<point name="construct.b.gzzp006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp006
            
            #add-point:AFTER FIELD gzzp006 name="construct.a.gzzp006"
            {<point name="construct.a.gzzp006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzp006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp006
            #add-point:ON ACTION controlp INFIELD gzzp006 name="construct.c.gzzp006"
            {<point name="construct.c.gzzp006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp007
            #add-point:BEFORE FIELD gzzp007 name="construct.b.gzzp007"
            {<point name="construct.b.gzzp007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp007
            
            #add-point:AFTER FIELD gzzp007 name="construct.a.gzzp007"
            {<point name="construct.a.gzzp007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzp007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp007
            #add-point:ON ACTION controlp INFIELD gzzp007 name="construct.c.gzzp007"
            {<point name="construct.c.gzzp007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpstus
            #add-point:BEFORE FIELD gzzpstus name="construct.b.gzzpstus"
            {<point name="construct.b.gzzpstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzpstus
            
            #add-point:AFTER FIELD gzzpstus name="construct.a.gzzpstus"
            {<point name="construct.a.gzzpstus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzpstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzpstus
            #add-point:ON ACTION controlp INFIELD gzzpstus name="construct.c.gzzpstus"
            {<point name="construct.c.gzzpstus" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpmodid
            #add-point:BEFORE FIELD gzzpmodid name="construct.b.gzzpmodid"
            {<point name="construct.b.gzzpmodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzpmodid
            
            #add-point:AFTER FIELD gzzpmodid name="construct.a.gzzpmodid"
            {<point name="construct.a.gzzpmodid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzpmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzpmodid
            #add-point:ON ACTION controlp INFIELD gzzpmodid name="construct.c.gzzpmodid"
            {<point name="construct.c.gzzpmodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpmoddt
            #add-point:BEFORE FIELD gzzpmoddt name="construct.b.gzzpmoddt"
            {<point name="construct.b.gzzpmoddt" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpownid
            #add-point:BEFORE FIELD gzzpownid name="construct.b.gzzpownid"
            {<point name="construct.b.gzzpownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzpownid
            
            #add-point:AFTER FIELD gzzpownid name="construct.a.gzzpownid"
            {<point name="construct.a.gzzpownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzpownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzpownid
            #add-point:ON ACTION controlp INFIELD gzzpownid name="construct.c.gzzpownid"
            {<point name="construct.c.gzzpownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpowndp
            #add-point:BEFORE FIELD gzzpowndp name="construct.b.gzzpowndp"
            {<point name="construct.b.gzzpowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzpowndp
            
            #add-point:AFTER FIELD gzzpowndp name="construct.a.gzzpowndp"
            {<point name="construct.a.gzzpowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzpowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzpowndp
            #add-point:ON ACTION controlp INFIELD gzzpowndp name="construct.c.gzzpowndp"
            {<point name="construct.c.gzzpowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpcrtid
            #add-point:BEFORE FIELD gzzpcrtid name="construct.b.gzzpcrtid"
            {<point name="construct.b.gzzpcrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzpcrtid
            
            #add-point:AFTER FIELD gzzpcrtid name="construct.a.gzzpcrtid"
            {<point name="construct.a.gzzpcrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzpcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzpcrtid
            #add-point:ON ACTION controlp INFIELD gzzpcrtid name="construct.c.gzzpcrtid"
            {<point name="construct.c.gzzpcrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpcrtdp
            #add-point:BEFORE FIELD gzzpcrtdp name="construct.b.gzzpcrtdp"
            {<point name="construct.b.gzzpcrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzpcrtdp
            
            #add-point:AFTER FIELD gzzpcrtdp name="construct.a.gzzpcrtdp"
            {<point name="construct.a.gzzpcrtdp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzpcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzpcrtdp
            #add-point:ON ACTION controlp INFIELD gzzpcrtdp name="construct.c.gzzpcrtdp"
            {<point name="construct.c.gzzpcrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpcrtdt
            #add-point:BEFORE FIELD gzzpcrtdt name="construct.b.gzzpcrtdt"
            {<point name="construct.b.gzzpcrtdt" />}
            #END add-point
 
 
 
       
      END CONSTRUCT
  
      #add-point:cs段more_construct name="cs.more_construct"
      {<point name="cs.more_construct"/>}
      #end add-point
         
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段before dialog name="cs.before_dialog"
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
      
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG
 
   END DIALOG
 
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="azzi903.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi903_query()
   #add-point:query段define name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="query.before_query"
   {<point name="query.before_query"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
 
   #CLEAR FORM
   #CALL g_browser.clear()
 
   DISPLAY " " TO FORMONLY.h_count
 
   CALL azzi903_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      #add-point:query段取消 name="query.cancel"
      {<point name="query.cancel"/>}
      #end add-point
      #CALL azzi903_browser_fill(g_wc,g_searchtype)
      CALL azzi903_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_browser_cnt = 0
      LET g_current_idx = 1
      CALL g_browser.clear()
      LET g_first = 0  #設定重新查詢資料後顯示
   END IF
 
   LET g_searchtype = "3"
   LET g_searchcol = "0"
   CALL azzi903_browser_fill(g_wc,g_searchtype)
   
   IF g_browser_cnt > 0 THEN
      CALL azzi903_fetch("")
   ELSE
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #第一層模糊搜尋
   #IF g_browser_cnt = 0 THEN
   #   LET g_wc = cl_wc_parser(g_wc)
   #   CALL azzi903_browser_fill(g_wc,g_searchtype)
   #END IF
   
   #第二層速記碼搜尋
   #IF g_browser_cnt = 0 THEN
   #   INITIALIZE g_errparam TO NULL 
   #   LET g_errparam.extend = "" 
   #   LET g_errparam.code = "-100" 
   #   LET g_errparam.popup = TRUE 
   #   CALL cl_err()
   #END IF
 
END FUNCTION

{</section>}

{<section id="azzi903.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi903_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="fetch.befroe_fetch"
   {<point name="fetch.befroe_fetch"/>}
   #end add-point 
 
   LET ls_chk = g_browser[g_current_idx].b_id 
   IF ls_chk.getIndexOf(".",1) = 0 THEN
      INITIALIZE g_gzzp_m.* TO NULL
      DISPLAY BY NAME g_gzzp_m.*
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   #   DISPLAY "" TO FORMONLY.h_index
      RETURN
   END IF
 
   #瀏覽頁筆數顯示
   LET li_idx = 1
   FOR li_idx = 1 TO g_browser_root.getLength()
      IF g_browser_root[li_idx] > g_current_idx THEN
       EXIT FOR
      END IF
   END FOR
   LET li_idx = g_current_idx - li_idx + 1
   #DISPLAY li_idx TO FORMONLY.h_index   #當下筆數
 
   IF p_flag = "/" THEN
      IF (NOT g_no_ask) THEN      
         CALL cl_getmsg("fetch",g_lang) RETURNING ls_msg
         LET INT_FLAG = 0
 
         PROMPT ls_msg CLIPPED,": " FOR g_jump
            #交談指令共用ACTION
            &include "common_action.4gl" 
         END PROMPT
 
         IF INT_FLAG THEN
            LET INT_FLAG = 0
         ELSE
            IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
               LET g_current_idx = g_jump
            END IF
            LET g_no_ask = FALSE  
         END IF           
      END IF
   END IF    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_gzzp_m.gzzp002 = g_browser[g_current_idx].b_gzzp002
   LET g_gzzp_m.gzzp003 = g_browser[g_current_idx].b_gzzp003
   LET g_gzzp_m.gzzp001 = g_browser[g_current_idx].b_gzzp001
    
   #add-point:fetch段refresh前 name="fetch.before_refresh"
   {<point name="fetch.before_refresh"/>}
   #end add-point
    
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus, 
       g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc 
   
   IF SQLCA.SQLCODE THEN
       INITIALIZE g_errparam TO NULL 
       LET g_errparam.extend = "gzzp_t:",SQLERRMESSAGE 
       LET g_errparam.code = SQLCA.SQLCODE 
       LET g_errparam.popup = TRUE 
       CALL cl_err()
       INITIALIZE g_gzzp_m.* TO NULL
       RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser.getLength() = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段after_fetch name="fetch.after_fetch"
   {<point name="fetch.after_fetch"/>}
   #end add-point
 
   
   
   #保存單頭舊值
   LET g_gzzp_m_t.* = g_gzzp_m.*
   LET g_gzzp_m_o.* = g_gzzp_m.*
   
   #重新顯示
   CALL azzi903_show()
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
   
   
END FUNCTION

{</section>}

{<section id="azzi903.insert" >}
#+ 資料新增
PRIVATE FUNCTION azzi903_insert(l_dialog)
   #add-point:insert段define name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_dialog   ui.DIALOG
   DEFINE li_addpos  LIKE type_t.num10 #新增節點時產出的畫面實際位置
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   LET g_gzzp001_t = g_gzzp_m.gzzp001
   LET g_gzzp002_t = g_gzzp_m.gzzp002
 
   LET g_gzzp002_t = g_gzzp_m.gzzp002
   LET g_gzzp001_t = g_gzzp_m.gzzp001
 
   #清畫面欄位內容
   CLEAR g_gzzp_m.*
 
 
   #add-point:單頭預設值 name="insert.before_insert"
   {<point name="insert.before_insert"/>}
   #end add-point 
 
   INITIALIZE g_gzzp_m.* LIKE gzzp_t.*
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc,g_gzzp_m.gzzp005, 
       g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard,g_gzzp_m.gzzq004, 
       g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc, 
       g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt 

   CALL s_transaction_begin()
 
   #其他table資料備份(確定是否更改用)
   
 
   WHILE TRUE
      #給予pid,type預設值
      LET g_gzzp_m.gzzp003 = g_gzzp002_t
      LET g_gzzp_m.gzzp001 = g_gzzp001_t
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_gzzp_m.gzzpownid = g_user
      LET g_gzzp_m.gzzpowndp = g_dept
      LET g_gzzp_m.gzzpcrtid = g_user
      LET g_gzzp_m.gzzpcrtdp = g_dept 
      LET g_gzzp_m.gzzpcrtdt = cl_get_current()
      LET g_gzzp_m.gzzpmodid = g_user
      LET g_gzzp_m.gzzpmoddt = cl_get_current()
      LET g_gzzp_m.gzzpstus = 'Y'
 
 
 
      
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
      
      #單頭預設值
            LET g_gzzp_m.lc_standard = "Y"
      LET g_gzzp_m.gzzpstus = "Y"
 
     
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL azzi903_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzzp_m.* = g_gzzp_m_t.*
         CALL azzi903_show()
         INITIALIZE g_errparam TO NULL
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         EXIT WHILE
      ELSE
         #分兩種狀況-1.根節點, 2.非根節點
         IF g_gzzp_m.gzzp003 = g_gzzp_m.gzzp002 THEN
            #為根節點
            LET li_addpos = g_browser.getLength() + 1
            LET g_browser[li_addpos].b_gzzp003 = g_gzzp_m.gzzp003
            LET g_browser[li_addpos].b_gzzp002 = g_gzzp_m.gzzp002
            LET g_browser[li_addpos].b_exp  = FALSE
            LET g_browser[li_addpos].b_hasC = FALSE
            LET g_browser[li_addpos].b_id  = '0.add',g_add_idx USING "<<<"
            LET g_browser[li_addpos].b_pid = '0',g_add_idx USING "<<<"
            LET g_add_idx = g_add_idx + 1
            CALL azzi903_desc_show(li_addpos)
            LET g_current_idx = li_addpos
         ELSE
            #非根節點, 開始搜尋其父節點(已展開才做處理)
            LET li_cnt = g_cnt
            IF g_browser.getLength() > 0 THEN
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_gzzp002 = g_gzzp_m.gzzp003 THEN
                     LET li_addpos = l_dialog.appendNode("s_browse",li_idx)
                     LET g_cnt = li_addpos
                     LET g_browser[li_addpos].b_gzzp003 = g_gzzp_m.gzzp003
                     LET g_browser[li_addpos].b_gzzp002 = g_gzzp_m.gzzp002
                     EXECUTE master_refreshcur USING g_browser[li_addpos].b_gzzp001
                                                     ,g_browser[li_addpos].b_gzzp002
 
                                                INTO g_browser[g_cnt].b_gzzp001,g_browser[g_cnt].b_gzzp002, 
                                                    g_browser[g_cnt].b_gzzp005,g_browser[g_cnt].b_gzzp003, 
                                                    g_browser[g_cnt].b_gzzp004
                     LET g_browser[li_addpos].b_exp  = FALSE
                     LET g_browser[li_addpos].b_hasC = FALSE
                     LET g_browser[li_addpos].b_id  = g_browser[li_idx].b_id, '.add',g_add_idx USING "<<<"
                     LET g_browser[li_addpos].b_pid = g_browser[li_idx].b_id
                     LET g_add_idx = g_add_idx + 1
                     CALL azzi903_desc_show(li_addpos)
                     #打開父節點
                     LET g_browser[li_idx].b_hasC = TRUE
                     LET g_browser[li_idx].b_exp = TRUE
                     LET g_current_idx = li_addpos
                     EXIT FOR
                  END IF
               END FOR
            END IF
            LET g_cnt = li_cnt
         END IF
      END IF
      
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus, 
       g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc,g_gzzp_m.gzzp005, 
       g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard,g_gzzp_m.gzzq004, 
       g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc, 
       g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt 

   
   #功能已完成,通報訊息中心
   CALL azzi903_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="azzi903.modify" >}
#+ 資料修改
PRIVATE FUNCTION azzi903_modify()
   #add-point:modify段define name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   IF g_gzzp_m.gzzp001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF 
   
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus, 
       g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
 
   #檢查是否允許此動作
   IF NOT azzi903_action_chk() THEN
      RETURN
   END IF
  
   LET g_gzzp001_t = g_gzzp_m.gzzp001
   LET g_gzzp002_t = g_gzzp_m.gzzp002
 
   
   CALL s_transaction_begin()
   
   OPEN azzi903_cl USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002
   IF SQLCA.SQLCODE THEN   #(ver:36)
      CLOSE azzi903_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi903_cl:" 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi903_cl INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard, 
       g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid, 
       g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc, 
       g_gzzp_m.gzzpcrtdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.SQLCODE THEN
      CLOSE azzi903_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_gzzp_m.gzzp002,":",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   #其他table資料備份(確定是否更改用)
   
 
   CALL azzi903_show()
   WHILE TRUE
      LET g_gzzp_m.gzzp001 = g_gzzp001_t
      LET g_gzzp_m.gzzp002 = g_gzzp002_t
 
      
      #寫入修改者/修改日期資訊
      LET g_gzzp_m.gzzpmodid = g_user 
LET g_gzzp_m.gzzpmoddt = cl_get_current()
LET g_gzzp_m.gzzpmodid_desc = cl_get_username(g_gzzp_m.gzzpmodid)
 
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL azzi903_input("u")     #欄位更改
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzzp_m.* = g_gzzp_m_t.*
         CALL azzi903_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE gzzp_t SET (gzzpmodid,gzzpmoddt) = (g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt)
       WHERE  gzzp001 = g_gzzp001_t
         AND gzzp002 = g_gzzp002_t
 
      
      EXIT WHILE
  
   END WHILE
 
   CLOSE azzi903_cl
   CALL s_transaction_end("Y","0")
 
   #功能已完成,通報訊息中心
   CALL azzi903_msgcentre_notify('modify')
   
END FUNCTION

{</section>}

{<section id="azzi903.check" >}
#+ 避免資料錯誤
PRIVATE FUNCTION azzi903_check(ps_id,ps_pid ,ps_type)
   #add-point:check段define name="check.define_customerization"
   {<point name="check.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING
   DEFINE ps_type     STRING
   DEFINE ls_pid      LIKE type_t.chr100
   DEFINE ls_id       LIKE type_t.chr100
   DEFINE ls_type     LIKE type_t.chr100
   DEFINE ls_return   LIKE type_t.num5
   DEFINE ls_sql      STRING
   DEFINE li_cnt      LIKE type_t.num10
   #add-point:check段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="check.define"
   {<point name="check.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="check.pre_function"
   {<point name="check.pre_function"/>}
   #end add-point
   
   #從該節點往上檢查, 若出現ID重複的狀況代表會導致無限迴圈
   LET ls_sql = " SELECT gzzp002,gzzp003 FROM ",
                " (SELECT gzzp002,gzzp003 FROM gzzp_t WHERE  gzzp002<>gzzp003)",
                " WHERE gzzp002 = '",ps_id,"' OR gzzp003 = '",ps_id,"'",
                " START WITH gzzp002='",ps_pid,"'",
                " CONNECT BY PRIOR gzzp003=gzzp002 "
 
   PREPARE check_cnt FROM ls_sql
   DECLARE check_cntcur CURSOR FOR check_cnt
   OPEN check_cntcur
   IF SQLCA.SQLCODE THEN   #(ver:36)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN check_cntcur:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN FALSE
   END IF
 
   FETCH check_cntcur INTO li_cnt
 
   IF li_cnt > 0 THEN
      LET ls_return = TRUE
   ELSE
      LET ls_return = FALSE
   END IF
   
   RETURN ls_return 
   
END FUNCTION

{</section>}

{<section id="azzi903.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION azzi903_reproduce(l_dialog)
   #add-point:reproduce段define name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_dialog      ui.DIALOG
   DEFINE li_addpos     LIKE type_t.num10
   DEFINE l_newno           LIKE gzzp_t.gzzp001 
   DEFINE l_oldno           LIKE gzzp_t.gzzp001 
   DEFINE l_newno02     LIKE gzzp_t.gzzp002 
   DEFINE l_oldno02     LIKE gzzp_t.gzzp002 
 
   DEFINE l_master          RECORD LIKE gzzp_t.*
   DEFINE l_cnt             LIKE type_t.num10  
   DEFINE li_idx            LIKE type_t.num10  
   DEFINE li_cnt            LIKE type_t.num10  
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.before_reproduce"
   {<point name="reproduce.before_reproduce"/>}
   #end add-point
 
   #檢查PK欄位是否均有值,若全部為NULL時退出
   IF g_gzzp_m.gzzp001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF 
 
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus, 
       g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
 
   #檢查如果有子節點(hasC=1)則顯示錯誤訊息後退出
 
   ERROR ""
 
   CALL cl_set_head_visible("","YES")
 
      LET g_gzzp_m.gzzp001_desc = ''
   DISPLAY BY NAME g_gzzp_m.gzzp001_desc
   LET g_gzzp_m.gzzp002_desc = ''
   DISPLAY BY NAME g_gzzp_m.gzzp002_desc
 
 
   LET g_gzzp_m.gzzp001 = ""
   LET g_gzzp_m.gzzp002 = ""
 
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_gzzp_m.gzzpownid = g_user
      LET g_gzzp_m.gzzpowndp = g_dept
      LET g_gzzp_m.gzzpcrtid = g_user
      LET g_gzzp_m.gzzpcrtdp = g_dept 
      LET g_gzzp_m.gzzpcrtdt = cl_get_current()
      LET g_gzzp_m.gzzpmodid = g_user
      LET g_gzzp_m.gzzpmoddt = cl_get_current()
      LET g_gzzp_m.gzzpstus = 'Y'
 
 
 
   
   CALL s_transaction_begin()
   
   #其他table資料備份(確定是否更改用)
   
 
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #直接呼叫輸入
   CALL azzi903_input("r")
 
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
 
   IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzzp_m.* = g_gzzp_m_t.*
         CALL azzi903_show()
         INITIALIZE g_errparam TO NULL
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      ELSE
         #分兩種狀況-1.根節點, 2.非根節點
         IF g_gzzp_m.gzzp003 = g_gzzp_m.gzzp002 THEN
            #為根節點
            LET li_addpos = g_browser.getLength() + 1
            LET g_browser[li_addpos].b_gzzp003 = g_gzzp_m.gzzp003
            LET g_browser[li_addpos].b_gzzp002 = g_gzzp_m.gzzp002
            LET g_browser[li_addpos].b_exp  = FALSE
            LET g_browser[li_addpos].b_hasC = FALSE
            LET g_browser[li_addpos].b_id  = '0.add',g_add_idx USING "<<<"
            LET g_browser[li_addpos].b_pid = '0',g_add_idx USING "<<<"
            LET g_add_idx = g_add_idx + 1
            CALL azzi903_desc_show(li_addpos)
            LET g_current_idx = li_addpos
         ELSE
            #非根節點, 開始搜尋其父節點(已展開才做處理)
            LET li_cnt = g_cnt
            IF g_browser.getLength() > 0 THEN
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_gzzp002 = g_gzzp_m.gzzp003 THEN
                     LET li_addpos = l_dialog.appendNode("s_browse",li_idx)
                     LET g_cnt = li_addpos
                     LET g_browser[li_addpos].b_gzzp003 = g_gzzp_m.gzzp003
                     LET g_browser[li_addpos].b_gzzp002 = g_gzzp_m.gzzp002
                     EXECUTE master_refreshcur USING g_browser[li_addpos].b_gzzp001
                                                     ,g_browser[li_addpos].b_gzzp002
 
                                                INTO g_browser[g_cnt].b_gzzp001,g_browser[g_cnt].b_gzzp002, 
                                                    g_browser[g_cnt].b_gzzp005,g_browser[g_cnt].b_gzzp003, 
                                                    g_browser[g_cnt].b_gzzp004
                     LET g_browser[li_addpos].b_exp  = FALSE
                     LET g_browser[li_addpos].b_hasC = FALSE
                     LET g_browser[li_addpos].b_id  = g_browser[li_idx].b_id, '.add',g_add_idx USING "<<<"
                     LET g_browser[li_addpos].b_pid = g_browser[li_idx].b_id
                     LET g_add_idx = g_add_idx + 1
                     CALL azzi903_desc_show(li_addpos)
                     #打開父節點
                     LET g_browser[li_idx].b_hasC = TRUE
                     LET g_browser[li_idx].b_exp = TRUE
                     LET g_current_idx = li_addpos
                     EXIT FOR
                  END IF
               END FOR
            END IF
            LET g_cnt = li_cnt 
         END IF
      END IF
 
   #功能已完成,通報訊息中心
   CALL azzi903_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="azzi903.input" >}
#+ 資料輸入
PRIVATE FUNCTION azzi903_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_cmd_t         LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num10       #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num10       #檢查重複用
   DEFINE l_cnt           LIKE type_t.num10       #檢查重複用
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num10
   DEFINE l_i             LIKE type_t.num10
   DEFINE l_insert        LIKE type_t.num10
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc,g_gzzp_m.gzzp005, 
       g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard,g_gzzp_m.gzzq004, 
       g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc, 
       g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt 

 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r' 
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF  
   
   CALL cl_set_head_visible("","YES")
 
   LET l_insert = FALSE
   LET g_action_choice = ""
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL azzi903_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi903_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002, 
       g_gzzp_m.lc_standard,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus 

   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002, 
          g_gzzp_m.lc_standard,g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION cancel_std_act
            LET g_action_choice="cancel_std_act"
            IF cl_auth_chk_act("cancel_std_act") THEN
               
               #add-point:ON ACTION cancel_std_act name="input.master_input.cancel_std_act"
               {<point name="input.master_input.cancel_std_act" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_gzzq
            LET g_action_choice="update_gzzq"
            IF cl_auth_chk_act("update_gzzq") THEN
               
               #add-point:ON ACTION update_gzzq name="input.master_input.update_gzzq"
               {<point name="input.master_input.update_gzzq" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            #add-point:input段define name="input.action"
            {<point name="input.action"/>}
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp001
            
            #add-point:AFTER FIELD gzzp001 name="input.a.gzzp001"
            {<point name="input.a.gzzp001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp001
            #add-point:BEFORE FIELD gzzp001 name="input.b.gzzp001"
            {<point name="input.b.gzzp001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzp001
            #add-point:ON CHANGE gzzp001 name="input.g.gzzp001"
            {<point name="input.g.gzzp001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp003
            
            #add-point:AFTER FIELD gzzp003 name="input.a.gzzp003"
            {<point name="input.a.gzzp003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp003
            #add-point:BEFORE FIELD gzzp003 name="input.b.gzzp003"
            {<point name="input.b.gzzp003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzp003
            #add-point:ON CHANGE gzzp003 name="input.g.gzzp003"
            {<point name="input.g.gzzp003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp005
            #add-point:BEFORE FIELD gzzp005 name="input.b.gzzp005"
            {<point name="input.b.gzzp005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp005
            
            #add-point:AFTER FIELD gzzp005 name="input.a.gzzp005"
            {<point name="input.a.gzzp005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzp005
            #add-point:ON CHANGE gzzp005 name="input.g.gzzp005"
            {<point name="input.g.gzzp005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp004
            #add-point:BEFORE FIELD gzzp004 name="input.b.gzzp004"
            {<point name="input.b.gzzp004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp004
            
            #add-point:AFTER FIELD gzzp004 name="input.a.gzzp004"
            {<point name="input.a.gzzp004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzp004
            #add-point:ON CHANGE gzzp004 name="input.g.gzzp004"
            {<point name="input.g.gzzp004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp002
            
            #add-point:AFTER FIELD gzzp002 name="input.a.gzzp002"
            {<point name="input.a.gzzp002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp002
            #add-point:BEFORE FIELD gzzp002 name="input.b.gzzp002"
            {<point name="input.b.gzzp002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzp002
            #add-point:ON CHANGE gzzp002 name="input.g.gzzp002"
            {<point name="input.g.gzzp002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD lc_standard
            #add-point:BEFORE FIELD lc_standard name="input.b.lc_standard"
            {<point name="input.b.lc_standard" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD lc_standard
            
            #add-point:AFTER FIELD lc_standard name="input.a.lc_standard"
            {<point name="input.a.lc_standard" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE lc_standard
            #add-point:ON CHANGE lc_standard name="input.g.lc_standard"
            {<point name="input.g.lc_standard" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzq004
            #add-point:BEFORE FIELD gzzq004 name="input.b.gzzq004"
            {<point name="input.b.gzzq004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzq004
            
            #add-point:AFTER FIELD gzzq004 name="input.a.gzzq004"
            {<point name="input.a.gzzq004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzq004
            #add-point:ON CHANGE gzzq004 name="input.g.gzzq004"
            {<point name="input.g.gzzq004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzq005
            #add-point:BEFORE FIELD gzzq005 name="input.b.gzzq005"
            {<point name="input.b.gzzq005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzq005
            
            #add-point:AFTER FIELD gzzq005 name="input.a.gzzq005"
            {<point name="input.a.gzzq005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzq005
            #add-point:ON CHANGE gzzq005 name="input.g.gzzq005"
            {<point name="input.g.gzzq005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp006
            #add-point:BEFORE FIELD gzzp006 name="input.b.gzzp006"
            {<point name="input.b.gzzp006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp006
            
            #add-point:AFTER FIELD gzzp006 name="input.a.gzzp006"
            {<point name="input.a.gzzp006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzp006
            #add-point:ON CHANGE gzzp006 name="input.g.gzzp006"
            {<point name="input.g.gzzp006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzp007
            #add-point:BEFORE FIELD gzzp007 name="input.b.gzzp007"
            {<point name="input.b.gzzp007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzp007
            
            #add-point:AFTER FIELD gzzp007 name="input.a.gzzp007"
            {<point name="input.a.gzzp007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzp007
            #add-point:ON CHANGE gzzp007 name="input.g.gzzp007"
            {<point name="input.g.gzzp007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzpstus
            #add-point:BEFORE FIELD gzzpstus name="input.b.gzzpstus"
            {<point name="input.b.gzzpstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzpstus
            
            #add-point:AFTER FIELD gzzpstus name="input.a.gzzpstus"
            {<point name="input.a.gzzpstus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzpstus
            #add-point:ON CHANGE gzzpstus name="input.g.gzzpstus"
            {<point name="input.g.gzzpstus" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.gzzp001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp001
            #add-point:ON ACTION controlp INFIELD gzzp001 name="input.c.gzzp001"
            {<point name="input.c.gzzp001" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzp003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp003
            #add-point:ON ACTION controlp INFIELD gzzp003 name="input.c.gzzp003"
            {<point name="input.c.gzzp003" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzp005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp005
            #add-point:ON ACTION controlp INFIELD gzzp005 name="input.c.gzzp005"
            {<point name="input.c.gzzp005" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzp004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp004
            #add-point:ON ACTION controlp INFIELD gzzp004 name="input.c.gzzp004"
            {<point name="input.c.gzzp004" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzp002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp002
            #add-point:ON ACTION controlp INFIELD gzzp002 name="input.c.gzzp002"
            {<point name="input.c.gzzp002" />}
            #END add-point
 
 
         #Ctrlp:input.c.lc_standard
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD lc_standard
            #add-point:ON ACTION controlp INFIELD lc_standard name="input.c.lc_standard"
            {<point name="input.c.lc_standard" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzq004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzq004
            #add-point:ON ACTION controlp INFIELD gzzq004 name="input.c.gzzq004"
            {<point name="input.c.gzzq004" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzq005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzq005
            #add-point:ON ACTION controlp INFIELD gzzq005 name="input.c.gzzq005"
            {<point name="input.c.gzzq005" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzp006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp006
            #add-point:ON ACTION controlp INFIELD gzzp006 name="input.c.gzzp006"
            {<point name="input.c.gzzp006" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzp007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzp007
            #add-point:ON ACTION controlp INFIELD gzzp007 name="input.c.gzzp007"
            {<point name="input.c.gzzp007" />}
            #END add-point
 
 
         #Ctrlp:input.c.gzzpstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzpstus
            #add-point:ON ACTION controlp INFIELD gzzpstus name="input.c.gzzpstus"
            {<point name="input.c.gzzpstus" />}
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #避免資料錯誤的檢查
            IF azzi903_check(g_gzzp_m.gzzp002,g_gzzp_m.gzzp003
               ,g_gzzp_m.gzzp001
               ) THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code = "std-00020" 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF
 
            #CALL cl_err_collect_show()   #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_gzzp_m.gzzp002
 
            #實體新增/修改/複製段落的處理
            CASE
               WHEN p_cmd = "a" OR p_cmd = "r"
                  LET l_count = 1
 
                  SELECT COUNT(1) INTO l_count FROM gzzp_t
                   WHERE  gzzp001 = g_gzzp_m.gzzp001
                     AND gzzp002 = g_gzzp_m.gzzp002
 
                         #
                  IF l_count = 0 THEN
                     #add-point:單頭新增前 name="input.head.b_insert"
                     {<point name="input.head.b_insert" mark="Y"/>}
                     #end add-point
 
                     INSERT INTO gzzp_t (gzzp001,gzzp003,gzzp005,gzzp004,gzzp002,gzzp006,gzzp007,gzzpstus, 
                         gzzpmodid,gzzpmoddt,gzzpownid,gzzpowndp,gzzpcrtid,gzzpcrtdp,gzzpcrtdt)
                     VALUES (g_gzzp_m.gzzp001,g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002, 
                         g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt, 
                         g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp, 
                         g_gzzp_m.gzzpcrtdt) 
 
                     #add-point:單頭新增中 name="input.head.m_insert"
                     {<point name="input.head.m_insert"/>}
                     #end add-point
 
                     IF SQLCA.SQLCODE THEN
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "g_gzzp_m:",SQLERRMESSAGE 
                        LET g_errparam.code = SQLCA.SQLCODE 
                        LET g_errparam.popup = TRUE 
                        CALL cl_err()
                        CONTINUE DIALOG
                     END IF
                  
                     #提速檔資料建置
                     IF g_gzzp_m.gzzp002 <> g_gzzp_m.gzzp003 THEN
                        #CALL n_gzzps_generate_child(g_gzzp_m.gzzp002,g_gzzp_m.gzzp003)
                     END IF
                     
                     #add-point:單頭新增後 name="input.head.a_insert"
                     {<point name="input.head.a_insert"/>}
                     #end add-point
                     
                     #資料多語言用-增/改
                     
                     CALL s_transaction_end("Y","0")
                  ELSE
                     CALL s_transaction_end("N","0")
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend =  g_gzzp_m.gzzp002 
                     LET g_errparam.code =  "std-00006" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                  END IF 
 
               #修改段落
               WHEN p_cmd = "u"  
                  #add-point:單頭修改前 name="input.head.b_update"
                  {<point name="input.head.b_update" mark="Y"/>}
                  #end add-point
                  UPDATE gzzp_t SET (gzzp001,gzzp003,gzzp005,gzzp004,gzzp002,gzzp006,gzzp007,gzzpstus, 
                      gzzpmodid,gzzpmoddt,gzzpownid,gzzpowndp,gzzpcrtid,gzzpcrtdp,gzzpcrtdt) = (g_gzzp_m.gzzp001, 
                      g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006, 
                      g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid, 
                      g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt)
                   WHERE  gzzp001 = g_gzzp001_t #
                     AND gzzp002 = g_gzzp002_t
 
                  #add-point:單頭修改中 name="input.head.m_update"
                  {<point name="input.head.m_update"/>}
                  #end add-point
                  CASE
                     WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                        CALL s_transaction_end('N','0')
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "gzzp_t" 
                        LET g_errparam.code = "std-00009" 
                        LET g_errparam.popup = TRUE 
                        CALL cl_err()
                        
                     WHEN SQLCA.SQLCODE #其他錯誤
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = "gzzp_t:",SQLERRMESSAGE 
                        LET g_errparam.code = SQLCA.SQLCODE 
                        LET g_errparam.popup = TRUE 
                        CALL s_transaction_end('N','0')
                        CALL cl_err()
                        
                     OTHERWISE
                        #add-point:單頭修改後 name="input.head.a_update"
                        {<point name="input.head.a_update"/>}
                        #end add-point
    
                        #資料多語言用-增/改
                        
                        LET g_log1 = util.JSON.stringify(g_gzzp_m_t)
                        LET g_log2 = util.JSON.stringify(g_gzzp_m)
                        IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                           CALL s_transaction_end('N','0')
                        ELSE
                           CALL s_transaction_end('Y','0')
                        END IF
                  END CASE
 
               OTHERWISE 
            END CASE
 
           #controlp
      END INPUT
      
      #add-point:input段more input  name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      #在dialog button (放棄)
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close       
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
           
   END DIALOG
   
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point
    
END FUNCTION

{</section>}

{<section id="azzi903.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi903_show()
   #add-point:show段define name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
       
   
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL azzi903_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   #讀入ref值(單頭)
   #add-point:reference段之後 name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc,g_gzzp_m.gzzp005, 
       g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard,g_gzzp_m.gzzq004, 
       g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc, 
       g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt 

 
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_gzzp_m.gzzpstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
 
   #顯示有特殊格式設定的欄位或說明
   CALL cl_show_fld_cont()   
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="azzi903.delete" >}
#+ 資料刪除
PRIVATE FUNCTION azzi903_delete(l_dialog)
   #add-point:delete段define name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_dialog        ui.DIALOG
   DEFINE li_status       LIKE type_t.num5  #SQL實體資料刪除狀態
   DEFINE li_cnt          LIKE type_t.num10 #查看本階是否有兄弟資料
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_gzzp_m.gzzp001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:delete段before_delete name="delete.before_delete"
   {<point name="delete.before_delete"/>}
   #end add-point
 
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus, 
       g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
    
   #檢查是否允許此動作
   IF NOT azzi903_action_chk() THEN
      RETURN
   END IF
    
   CALL azzi903_show()
   
   #Transaction開始
   CALL s_transaction_begin()
   
   
 
   OPEN azzi903_cl USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002
   IF SQLCA.SQLCODE THEN   #(ver:36)
      CLOSE azzi903_cl
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi903_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:36)
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi903_cl INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard, 
       g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid, 
       g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc, 
       g_gzzp_m.gzzpcrtdt
   IF SQLCA.SQLCODE THEN
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_gzzp_m.gzzp002,":",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   #add-point:delete段before_delete name="delete.before_delete_ask"
   {<point name="delete.before_delete_ask"/>}
   #end add-point
 
   #(ver:35) ---modify start---
   #(ver:35) 為避免刪除全部子節點可能會對其他節點造成影響，現改為只刪除當下節點
   #先判斷是否有子節點(hasC) 詢問是否砍除全部
#  IF g_browser[g_current_idx].b_hasC THEN
#     IF cl_ask_delete_all_node() THEN
#        LET li_status = azzi903_sql_delete(TRUE)
#     ELSE
#        LET li_status = FALSE
#     END IF
#  ELSE
      #如果沒有子節點,詢問是否刪除本筆資料
      IF cl_ask_delete() THEN
         LET li_status = azzi903_sql_delete(FALSE)
      ELSE
         LET li_status = FALSE
      END IF
#  END IF
   #(ver:35) --- modify end ---
 
   #檢查實體砍除是否發生意外中止
   IF NOT li_status THEN
      CALL s_transaction_end("N","0")
      CLOSE azzi903_cl
      RETURN
   END IF
 
   #刪除節點與資料內容
   CALL l_dialog.deleteNode("s_browse",g_current_idx)  #deleteNode會順便幫忙做deleteElement
 
   #確認這一階還有沒有兄弟 (有:不異動上階屬性/否:上階hasC及exp設定成0)
   #SELECT COUNT(1) INTO li_cnt
   #  FROM gzzp_t
   # WHERE gzzp003 = g_gzzp_m.gzzp003
   #IF g_current_idx > 1 THEN
   #   IF li_cnt = 0  THEN
   #      LET g_browser[g_current_idx - 1].b_hasC = 0
   #      LET g_browser[g_current_idx - 1].b_exp = 0
   #   END IF
   #END IF
 
   #add-point:單頭刪除後 name="delete.head.a_delete"
   {<point name="delete.head.a_delete"/>}
   #end add-point
   
   IF g_current_idx > 1 THEN
      LET g_current_idx = g_current_idx - 1
   END IF
   
   IF g_browser.getLength() > 0 THEN
      CALL azzi903_fetch("")
   END IF
 
   LET g_log1 = util.JSON.stringify(g_gzzp_m)   #(ver:36)
   IF NOT cl_log_modified_record(g_log1,'') THEN   #(ver:36)
      CLOSE azzi903_cl
      CALL s_transaction_end('N','0')
   ELSE
      CLOSE azzi903_cl
      CALL s_transaction_end('Y','0')
   END IF
 
   #功能已完成,通報訊息中心
   CALL azzi903_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="azzi903.sql_delete" >}
#+ 實體刪除FUNCTION 
PRIVATE FUNCTION azzi903_sql_delete(li_node)
   #add-point:sql_delete段define name="sql_delet.define_customerization"
   {<point name="sql_delet.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_node         LIKE type_t.num5  #TRUE:砍除Node Tree/FALSE:砍除Single Node
   DEFINE li_return       LIKE type_t.num5
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE ls_sql          STRING
   DEFINE li_cnt          LIKE type_t.num10   #(ver:35) add
   #add-point:sql_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sql_delet.define"
   {<point name="sql_delet.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="sql_delet.pre_function"
   {<point name="sql_delet.pre_function"/>}
   #end add-point
   
   LET li_return = TRUE
 
   #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL azzi903_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
 
 
   #add-point:單頭刪除前 name="delete.head.b_delete"
   {<point name="delete.head.b_delete" mark="Y"/>}
   #end add-point
   
   IF li_node = TRUE THEN
      #砍除該節點以下所有節點
      LET ls_sql = " SELECT gzzp002,gzzp003 FROM ",
                   " (SELECT gzzp002,gzzp003 FROM gzzp_t WHERE  gzzp002<>gzzp003)",
                   " START WITH gzzp003='",g_gzzp_m.gzzp003,"'",
                   " CONNECT BY PRIOR gzzp002 = gzzp003"
 
   ELSE 
   
   END IF
 
   #刪除當下節點
   DELETE FROM gzzp_t
    WHERE  gzzp001 = g_gzzp_m.gzzp001
      AND gzzp002 = g_gzzp_m.gzzp002
 
 
   #add-point:單頭刪除中 name="delete.head.m_delete"
   {<point name="delete.head.m_delete"/>}
   #end add-point
 
   IF SQLCA.SQLCODE THEN
      CALL s_transaction_end("N","0")
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "gzzp_t:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
   END IF
 
   #(ver:35) ---modify start---
   # 若此節點還有存在在其他節點下，則多語言資料不可刪除
   LET li_cnt = 0
   LET ls_sql = " SELECT COUNT(1) FROM gzzp_t",
                 " WHERE  gzzp002 = '",g_gzzp_m.gzzp002,"'"
 
   PREPARE master_chk_node_exist FROM ls_sql
   EXECUTE master_chk_node_exist INTO li_cnt
   IF li_cnt <= 0 THEN
      
   END IF
   #(ver:35) --- modify end ---
 
   RETURN li_return
 
END FUNCTION

{</section>}

{<section id="azzi903.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi903_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1 
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("gzzp001,gzzp002",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="azzi903.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi903_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzzp001,gzzp002",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="azzi903.default_search" >}
#+ 外部參數預設搜尋
PRIVATE FUNCTION azzi903_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzzp001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " gzzp002 = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #CALL azzi903_browser_fill(g_wc,g_searchtype)
 
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="azzi903.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION azzi903_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzzp_m.gzzp001 IS NULL
      OR g_gzzp_m.gzzp002 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN azzi903_cl USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002
   IF STATUS THEN
      CLOSE azzi903_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi903_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001,g_gzzp_m.gzzp003, 
       g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus, 
       g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpcrtid, 
       g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpownid_desc, 
       g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc
   
 
   #檢查是否允許此動作
   IF NOT azzi903_action_chk() THEN
      CLOSE azzi903_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc,g_gzzp_m.gzzp005, 
       g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard,g_gzzp_m.gzzq004, 
       g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmodid_desc, 
       g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp,g_gzzp_m.gzzpowndp_desc, 
       g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc,g_gzzp_m.gzzpcrtdt 

 
   CASE g_gzzp_m.gzzpstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzzp_m.gzzpstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_gzzp_m.gzzpstus = lc_state OR cl_null(lc_state) THEN
      CLOSE azzi903_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_gzzp_m.gzzpmodid = g_user
   LET g_gzzp_m.gzzpmoddt = cl_get_current()
   LET g_gzzp_m.gzzpstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE gzzp_t 
      SET (gzzpstus,gzzpmodid,gzzpmoddt) 
        = (g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt)     
    WHERE  gzzp001 = g_gzzp_m.gzzp001
      AND gzzp002 = g_gzzp_m.gzzp002
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE azzi903_master_referesh USING g_gzzp_m.gzzp001,g_gzzp_m.gzzp002 INTO g_gzzp_m.gzzp001, 
          g_gzzp_m.gzzp003,g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007, 
          g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpowndp, 
          g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdt,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzpmodid_desc, 
          g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp_desc 

      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_gzzp_m.gzzp001,g_gzzp_m.gzzp001_desc,g_gzzp_m.gzzp003,g_gzzp_m.gzzp003_desc, 
          g_gzzp_m.gzzp005,g_gzzp_m.gzzp004,g_gzzp_m.gzzp002,g_gzzp_m.gzzp002_desc,g_gzzp_m.lc_standard, 
          g_gzzp_m.gzzq004,g_gzzp_m.gzzq005,g_gzzp_m.gzzp006,g_gzzp_m.gzzp007,g_gzzp_m.gzzpstus,g_gzzp_m.gzzpmodid, 
          g_gzzp_m.gzzpmodid_desc,g_gzzp_m.gzzpmoddt,g_gzzp_m.gzzpownid,g_gzzp_m.gzzpownid_desc,g_gzzp_m.gzzpowndp, 
          g_gzzp_m.gzzpowndp_desc,g_gzzp_m.gzzpcrtid,g_gzzp_m.gzzpcrtid_desc,g_gzzp_m.gzzpcrtdp,g_gzzp_m.gzzpcrtdp_desc, 
          g_gzzp_m.gzzpcrtdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE azzi903_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi903_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 

{</section>}

{<section id="azzi903.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION azzi903_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzzp_m.gzzp001
   LET g_pk_array[1].column = 'gzzp001'
   LET g_pk_array[2].values = g_gzzp_m.gzzp002
   LET g_pk_array[2].column = 'gzzp002'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="azzi903.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION azzi903_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL azzi903_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_gzzp_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="azzi903.action_chk" >}
PRIVATE FUNCTION azzi903_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>}
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="azzi903.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

