#該程式已解開Section, 不再透過樣板產出!
{<section id="azzi001.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000597
#+ 
#+ Filename...: azzi001
#+ Description: 系統流程圖維護作業
#+ Creator....: 01274(2014-09-18 11:47:24)
#+ Modifier...: 01274(2014-09-25 15:57:04) -SD/PR-
#+ Buildtype..: 應用 i01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="azzi001.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_gzba_m RECORD
       gzbal003 LIKE gzbal_t.gzbal003, 
   gzbal003_1 LIKE type_t.chr500, 
   gzba003 LIKE gzba_t.gzba003, 
   gzba001 LIKE gzba_t.gzba001, 
   gzba002 LIKE gzba_t.gzba002, 
   gzbastus LIKE gzba_t.gzbastus, 
   gzbaownid LIKE gzba_t.gzbaownid, 
   gzbaownid_desc LIKE type_t.chr80, 
   gzbacrtid LIKE gzba_t.gzbacrtid, 
   gzbacrtid_desc LIKE type_t.chr80, 
   gzbaowndp LIKE gzba_t.gzbaowndp, 
   gzbaowndp_desc LIKE type_t.chr80, 
   gzbacrtdp LIKE gzba_t.gzbacrtdp, 
   gzbacrtdp_desc LIKE type_t.chr80, 
   gzbacrtdt LIKE gzba_t.gzbacrtdt, 
   gzbamodid LIKE gzba_t.gzbamodid, 
   gzbamodid_desc LIKE type_t.chr80, 
   gzbamoddt LIKE gzba_t.gzbamoddt
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_gzba_m        type_g_gzba_m  #單頭變數宣告
DEFINE g_gzba_m_t      type_g_gzba_m  #單頭舊值宣告(系統還原用)
DEFINE g_gzba_m_o      type_g_gzba_m  #單頭舊值宣告(其他用途)
 
   DEFINE g_gzba001_t LIKE gzba_t.gzba001
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD  #查詢方案用陣列 
         b_statepic     LIKE type_t.chr50,
            b_gzba001 LIKE gzba_t.gzba001
      END RECORD 
   
 
   
DEFINE g_master_multi_table_t    RECORD
      gzbal001 LIKE gzbal_t.gzbal001,
      gzbal003 LIKE gzbal_t.gzbal003
      END RECORD
 
DEFINE g_wc                  STRING                        #儲存查詢條件
DEFINE g_wc_t                STRING                        #備份查詢條件
DEFINE g_wc_filter           STRING                        #儲存過濾查詢條件
DEFINE g_wc_filter_t         STRING                        #備份過濾查詢條件
DEFINE g_sql                 STRING                        #資料撈取用SQL(含reference)
DEFINE g_forupd_sql          STRING                        #資料鎖定用SQL
DEFINE g_cnt                 LIKE type_t.num10             #指標/統計用變數
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING                        #確認前一個動作是否為新增/複製
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #reference用陣列
DEFINE g_error_show          LIKE type_t.num5              #是否顯示資料過多的錯誤訊息
DEFINE g_aw                  STRING                        #確定當下點擊的單身(modify_detail用)
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #cl_log_modified_record用(舊值)
DEFINE g_log2                STRING                        #cl_log_modified_record用(新值)
 
#快速搜尋用
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5              #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5              #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10             #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5              #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser 總筆數(所有資料)
DEFINE g_row_index           LIKE type_t.num5              #階層樹狀用指標
DEFINE g_add_browse          STRING                        #新增填充用WC
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="azzi001.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
{<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT '','',gzba003,gzba001,gzba002,gzbastus,gzbaownid,'',gzbacrtid,'',gzbaowndp, 
       '',gzbacrtdp,'',gzbacrtdt,gzbamodid,'',gzbamoddt", 
                      " FROM gzba_t",
                      " WHERE gzbaent= ? AND gzba001=? FOR UPDATE"
   #add-point:SQL_define
{<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi001_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.gzba003,t0.gzba001,t0.gzba002,t0.gzbastus,t0.gzbaownid,t0.gzbacrtid, 
       t0.gzbaowndp,t0.gzbacrtdp,t0.gzbacrtdt,t0.gzbamodid,t0.gzbamoddt,t1.oofa011 ,t2.oofa011 ,t3.ooefl003 , 
       t4.ooefl003 ,t5.oofa011",
               " FROM gzba_t t0",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=t0.gzbaownid  ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=t0.gzbacrtid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.gzbaowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.gzbacrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=t0.gzbamodid  ",
 
               " WHERE t0.gzbaent = '" ||g_enterprise|| "' AND t0.gzba001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
{<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi001_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi001 WITH FORM cl_ap_formpath("azz","azzi001")
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi001_init()   
 
      #進入選單 Menu (="N")
      CALL azzi001_ui_dialog() 
      
      #add-point:畫面關閉前
{<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi001
      
   END IF 
   
   CLOSE azzi001_cl
   
   
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="azzi001.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi001_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   #定義combobox狀態
      CALL cl_set_combo_scc_part('gzbastus','17','N,Y')
 
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   #根據外部參數進行搜尋
   CALL azzi001_default_search()
 
END FUNCTION

{</section>}

{<section id="azzi001.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION azzi001_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5        #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5        #指標變數
   DEFINE ls_wc     STRING                  #wc用
   DEFINE la_param  RECORD                  #程式串查用變數
             prog   STRING,                 #串查程式名稱
             param  DYNAMIC ARRAY OF STRING #傳遞變數
                    END RECORD
   DEFINE ls_js     STRING                  #轉換後的json字串
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 1
   
   
   
   #action default動作
   #+ 此段落由子樣板a42產生
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi001_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL azzi001_browser_fill(g_wc,"")
      
      #判斷前一個動作是否為新增或複製, 若是的話切換到新增的筆數
      #IF g_state = "Y" THEN
      #   FOR li_idx = 1 TO g_browser.getLength()
      #      IF g_browser[li_idx].b_gzba001 = g_gzba001_t
 
      #         THEN
      #         LET g_current_row = li_idx
      #         EXIT FOR
      #      END IF
      #   END FOR
      #   LET g_state = ""
      #END IF
    
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL azzi001_fetch("")   
               END IF               
               #add-point:ui_dialog段 before menu
               {<point name="ui_dialog.before_menu"/>}
               #end add-point
            
            #狀態碼切換
            ON ACTION statechange
               CALL azzi001_statechange()
               LET g_action_choice="statechange"
               
            #第一筆資料
            ON ACTION first
               CALL azzi001_fetch("F") 
               LET g_current_row = g_current_idx
            
            #下一筆資料
            ON ACTION next
               CALL azzi001_fetch("N")
               LET g_current_row = g_current_idx
            
            #指定筆資料
            ON ACTION jump
               CALL azzi001_fetch("/")
               LET g_current_row = g_current_idx
            
            #上一筆資料
            ON ACTION previous
               CALL azzi001_fetch("P")
               LET g_current_row = g_current_idx
            
            #最後筆資料
            ON ACTION last 
               CALL azzi001_fetch("L")  
               LET g_current_row = g_current_idx
            
            #離開程式
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            #離開程式
            ON ACTION close
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU
            
            #主頁摺疊
            ON ACTION mainhidden       
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            #查詢方案用
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL azzi001_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            #查詢方案用
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi001_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CLEAR FORM
                  ELSE
                     CALL azzi001_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi001_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi001_delete()
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi001_insert()
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi001_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi001_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION save
            LET g_action_choice="save"
               
               #add-point:ON ACTION save
               {<point name="menu2.save" />}
               #END add-point
 
 
            
            
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi001_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi001_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi001_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL azzi001_fetch("")      
                  
               
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
         
            BEFORE DIALOG
 
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL azzi001_fetch("")   
               END IF               
               
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
            #狀態碼切換
            ON ACTION statechange
               LET g_action_choice="statechange"
               CALL azzi001_statechange()
               #EXIT DIALOG
         
            
            
            #第一筆資料
            ON ACTION first
               CALL azzi001_fetch("F") 
               LET g_current_row = g_current_idx
            
            #下一筆資料
            ON ACTION next
               CALL azzi001_fetch("N")
               LET g_current_row = g_current_idx
         
            #指定筆資料
            ON ACTION jump
               CALL azzi001_fetch("/")
               LET g_current_row = g_current_idx
         
            #上一筆資料
            ON ACTION previous
               CALL azzi001_fetch("P")
               LET g_current_row = g_current_idx
          
            #最後筆資料
            ON ACTION last 
               CALL azzi001_fetch("L")  
               LET g_current_row = g_current_idx
         
            #離開程式
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            #離開程式
            ON ACTION close
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            #主頁摺疊
            ON ACTION mainhidden       
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               #EXIT DIALOG
               
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            
            #查詢方案用
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL azzi001_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            #查詢方案用
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi001_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CLEAR FORM
                  ELSE
                     CALL azzi001_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi001_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi001_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi001_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi001_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi001_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION save
            LET g_action_choice="save"
               
               #add-point:ON ACTION save
               {<point name="menu.save" />}
               #END add-point
 
 
            
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi001_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi001_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi001_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
      #add-point:ui_dialog段 after dialog
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      
   END WHILE
 
END FUNCTION

{</section>}

{<section id="azzi001.browser_fill" >}
#+ 瀏覽頁簽資料填充(一般單檔)
PRIVATE FUNCTION azzi001_browser_fill(p_wc,ps_page_action) 
   DEFINE p_wc              STRING
   DEFINE ls_wc             STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET l_searchcol = "gzba001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
 
   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   
   #add-point:browser_fill段wc控制
   {<point name="browser_fill.wc"/>}
   #end add-point
 
   LET g_sql = " SELECT COUNT(*) FROM gzba_t ",
               "  ",
               "  LEFT JOIN gzbal_t ON gzbalent = '"||g_enterprise||"' AND gzba001 = gzbal001 AND gzbal002 = '",g_dlang,"' ",
               " WHERE gzbaent = '" ||g_enterprise|| "' AND ", 
               p_wc CLIPPED, cl_sql_add_filter("gzba_t")
                
   #add-point:browser_fill段cnt_sql
   {<point name="browser_fill.cnt_sql"/>}
   #end add-point
                
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt
   FREE header_cnt_pre 
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_browser_cnt 
      LET g_errparam.code   = 9035
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      LET g_browser_cnt = g_max_browse
   END IF
   
   
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_count
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
   
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM
      INITIALIZE g_gzba_m.* TO NULL
      CALL g_browser.clear()
      LET g_cnt = 1
      LET ls_wc = p_wc
   ELSE
      LET ls_wc = g_add_browse
      LET g_cnt = g_browser.getLength() + 1
      LET g_add_browse = ""
   END IF
   
   LET g_sql = " SELECT t0.gzbastus,t0.gzba001",
               " FROM gzba_t t0 ",
               "  ",
               
               " LEFT JOIN gzbal_t ON gzbalent = '"||g_enterprise||"' AND gzba001 = gzbal001 AND gzbal002 = '",g_dlang,"' ",
               " WHERE t0.gzbaent = '" ||g_enterprise|| "' AND ", ls_wc, cl_sql_add_filter("gzba_t")
   #add-point:browser_fill段fill_wc
   {<point name="browser_fill.fill_wc"/>}
   #end add-point 
   LET g_sql = g_sql, " ORDER BY ",l_searchcol," ",g_order
   #add-point:browser_fill段before_pre
   {<point name="browser_fill.before_pre"/>}
   #end add-point                    
 
   #LET g_sql = cl_sql_add_tabid(g_sql,"gzba_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   #CALL g_browser.clear()
   #LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzba001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "foreach:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
      
            #此段落由子樣板a24產生
      #browser段落顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser_cnt
   LET g_rec_b = g_cnt - 1
   LET g_current_cnt = g_browser_cnt
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
   
END FUNCTION
 
 

{</section>}

{<section id="azzi001.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi001_construct()
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define
{<point name="cs.define"/>}
   #end add-point
   
   #清空畫面&資料初始化
   CLEAR Undefined.*
   
   INITIALIZE g_gzba_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON gzbal003,gzbastus,gzbaownid,gzbacrtid, 
          gzbaowndp,gzbacrtdp,gzbacrtdt,gzbamodid,gzbamoddt
      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct
{<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         #共用欄位查詢處理
         ##----<<gzbacrtdt>>----
         AFTER FIELD gzbacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzbamoddt>>----
         AFTER FIELD gzbamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzbacnfdt>>----
         
         #----<<gzbapstdt>>----
 
 
      
         #一般欄位
                  #此段落由子樣板a01產生
         BEFORE FIELD gzbal003
            #add-point:BEFORE FIELD gzbal003
{<point name="construct.b.gzbal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbal003
            
            #add-point:AFTER FIELD gzbal003
{<point name="construct.a.gzbal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzbal003
         ON ACTION controlp INFIELD gzbal003
            #add-point:ON ACTION controlp INFIELD gzbal003
{<point name="construct.c.gzbal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbal003_1
            #add-point:BEFORE FIELD gzbal003_1
{<point name="construct.b.gzbal003_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbal003_1
            
            #add-point:AFTER FIELD gzbal003_1
{<point name="construct.a.gzbal003_1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzbal003_1
         ON ACTION controlp INFIELD gzbal003_1
            #add-point:ON ACTION controlp INFIELD gzbal003_1
{<point name="construct.c.gzbal003_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzba003
            #add-point:BEFORE FIELD gzba003
{<point name="construct.b.gzba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzba003
            
            #add-point:AFTER FIELD gzba003
{<point name="construct.a.gzba003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzba003
         ON ACTION controlp INFIELD gzba003
            #add-point:ON ACTION controlp INFIELD gzba003
{<point name="construct.c.gzba003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzba001
            #add-point:BEFORE FIELD gzba001
{<point name="construct.b.gzba001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzba001
            
            #add-point:AFTER FIELD gzba001
{<point name="construct.a.gzba001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzba001
         ON ACTION controlp INFIELD gzba001
            #add-point:ON ACTION controlp INFIELD gzba001
{<point name="construct.c.gzba001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzba002
            #add-point:BEFORE FIELD gzba002
{<point name="construct.b.gzba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzba002
            
            #add-point:AFTER FIELD gzba002
{<point name="construct.a.gzba002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzba002
         ON ACTION controlp INFIELD gzba002
            #add-point:ON ACTION controlp INFIELD gzba002
{<point name="construct.c.gzba002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbastus
            #add-point:BEFORE FIELD gzbastus
{<point name="construct.b.gzbastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbastus
            
            #add-point:AFTER FIELD gzbastus
{<point name="construct.a.gzbastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzbastus
         ON ACTION controlp INFIELD gzbastus
            #add-point:ON ACTION controlp INFIELD gzbastus
{<point name="construct.c.gzbastus" />}
            #END add-point
 
         #Ctrlp:construct.c.gzbaownid
         ON ACTION controlp INFIELD gzbaownid
            #add-point:ON ACTION controlp INFIELD gzbaownid
{<point name="construct.c.gzbaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbaownid
            #add-point:BEFORE FIELD gzbaownid
{<point name="construct.b.gzbaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbaownid
            
            #add-point:AFTER FIELD gzbaownid
{<point name="construct.a.gzbaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzbacrtid
         ON ACTION controlp INFIELD gzbacrtid
            #add-point:ON ACTION controlp INFIELD gzbacrtid
{<point name="construct.c.gzbacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbacrtid
            #add-point:BEFORE FIELD gzbacrtid
{<point name="construct.b.gzbacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbacrtid
            
            #add-point:AFTER FIELD gzbacrtid
{<point name="construct.a.gzbacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzbaowndp
         ON ACTION controlp INFIELD gzbaowndp
            #add-point:ON ACTION controlp INFIELD gzbaowndp
{<point name="construct.c.gzbaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbaowndp
            #add-point:BEFORE FIELD gzbaowndp
{<point name="construct.b.gzbaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbaowndp
            
            #add-point:AFTER FIELD gzbaowndp
{<point name="construct.a.gzbaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzbacrtdp
         ON ACTION controlp INFIELD gzbacrtdp
            #add-point:ON ACTION controlp INFIELD gzbacrtdp
{<point name="construct.c.gzbacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbacrtdp
            #add-point:BEFORE FIELD gzbacrtdp
{<point name="construct.b.gzbacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbacrtdp
            
            #add-point:AFTER FIELD gzbacrtdp
{<point name="construct.a.gzbacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbacrtdt
            #add-point:BEFORE FIELD gzbacrtdt
{<point name="construct.b.gzbacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.gzbamodid
         ON ACTION controlp INFIELD gzbamodid
            #add-point:ON ACTION controlp INFIELD gzbamodid
{<point name="construct.c.gzbamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbamodid
            #add-point:BEFORE FIELD gzbamodid
{<point name="construct.b.gzbamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbamodid
            
            #add-point:AFTER FIELD gzbamodid
{<point name="construct.a.gzbamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbamoddt
            #add-point:BEFORE FIELD gzbamoddt
{<point name="construct.b.gzbamoddt" />}
            #END add-point
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct
{<point name="cs.more_construct"/>}
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
{<point name="cs.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct
{<point name="cs.after_construct"/>}
   #end add-point
  
END FUNCTION

{</section>}

{<section id="azzi001.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi001_query()
   DEFINE ls_wc STRING
   #add-point:query段define
{<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
 
   CALL g_browser.clear() 
  
   INITIALIZE g_gzba_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   
   CALL azzi001_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi001_browser_fill(g_wc,"F")
      CALL azzi001_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   #根據條件從新抓取資料
   LET g_error_show = 1
   CALL azzi001_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL azzi001_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION

{</section>}

{<section id="azzi001.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi001_fetch(p_fl)
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   #根據傳入的條件決定抓取的資料
   CASE p_fl
      WHEN "F" 
         LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         #LET g_current_idx = g_header_cnt        
         LET g_current_idx = g_browser.getLength()    
      WHEN "/"
         #詢問要指定的筆數
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_current_idx 
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count        #總筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
   CALL cl_navigator_setting(g_browser_idx, g_browser_cnt )
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   #根據選定的筆數給予key欄位值
   LET g_gzba_m.gzba001 = g_browser[g_current_idx].b_gzba001
 
                       
   #讀取單頭所有欄位資料
   EXECUTE azzi001_master_referesh USING g_gzba_m.gzba001 INTO g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002, 
       g_gzba_m.gzbastus,g_gzba_m.gzbaownid,g_gzba_m.gzbacrtid,g_gzba_m.gzbaowndp,g_gzba_m.gzbacrtdp, 
       g_gzba_m.gzbacrtdt,g_gzba_m.gzbamodid,g_gzba_m.gzbamoddt,g_gzba_m.gzbaownid_desc,g_gzba_m.gzbacrtid_desc, 
       g_gzba_m.gzbaowndp_desc,g_gzba_m.gzbacrtdp_desc,g_gzba_m.gzbamodid_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "gzba_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      INITIALIZE g_gzba_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #保存單頭舊值
   LET g_gzba_m_t.* = g_gzba_m.*
   LET g_gzba_m_o.* = g_gzba_m.*
   
   LET g_data_owner = g_gzba_m.gzbaownid      
   LET g_data_dept  = g_gzba_m.gzbaowndp
   
   #重新顯示
   CALL azzi001_show()
 
   
 
END FUNCTION

{</section>}

{<section id="azzi001.insert" >}
#+ 資料新增
PRIVATE FUNCTION azzi001_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM #清畫面欄位內容
   INITIALIZE g_gzba_m.* LIKE gzba_t.*             #DEFAULT 設定
   LET g_gzba001_t = NULL
 
   CALL s_transaction_begin()
   
   WHILE TRUE
      
      #公用欄位給值
      #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_gzba_m.gzbaownid = g_user
      LET g_gzba_m.gzbaowndp = g_dept
      LET g_gzba_m.gzbacrtid = g_user
      LET g_gzba_m.gzbacrtdp = g_dept 
      LET g_gzba_m.gzbacrtdt = cl_get_current()
      LET g_gzba_m.gzbamodid = ""
      LET g_gzba_m.gzbamoddt = ""
      LET g_gzba_m.gzbastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      #顯示狀態(stus)圖片
            #此段落由子樣板a21產生
	  #根據狀態碼顯示對應圖片
      CASE g_gzba_m.gzbastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
     
      #資料輸入
      CALL azzi001_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         #取消
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         DISPLAY g_current_cnt TO FORMONLY.h_count     #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index     #當下筆數
         INITIALIZE g_gzba_m.* TO NULL
         CALL azzi001_show()
         RETURN
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_gzba001_t = g_gzba_m.gzba001
 
   
   #組合新增資料的條件
   LET g_add_browse = " gzbaent = '" ||g_enterprise|| "' AND",
                      " gzba001 = '", g_gzba_m.gzba001 CLIPPED, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi001_browser_fill("","")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
 
END FUNCTION

{</section>}

{<section id="azzi001.modify" >}
#+ 資料修改
PRIVATE FUNCTION azzi001_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   #先確定key值無遺漏
   IF g_gzba_m.gzba001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF 
 
   ERROR ""
  
   #備份key值
   LET g_gzba001_t = g_gzba_m.gzba001
 
   
   CALL s_transaction_begin()
   
   #先lock資料
   OPEN azzi001_cl USING g_enterprise,g_gzba_m.gzba001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi001_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE azzi001_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi001_master_referesh USING g_gzba_m.gzba001 INTO g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002, 
       g_gzba_m.gzbastus,g_gzba_m.gzbaownid,g_gzba_m.gzbacrtid,g_gzba_m.gzbaowndp,g_gzba_m.gzbacrtdp, 
       g_gzba_m.gzbacrtdt,g_gzba_m.gzbamodid,g_gzba_m.gzbamoddt,g_gzba_m.gzbaownid_desc,g_gzba_m.gzbacrtid_desc, 
       g_gzba_m.gzbaowndp_desc,g_gzba_m.gzbacrtdp_desc,g_gzba_m.gzbamodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "gzba_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      CLOSE azzi001_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   #顯示資料
   CALL azzi001_show()
   
   WHILE TRUE
      LET g_gzba_m.gzba001 = g_gzba001_t
 
      
      #寫入修改者/修改日期資訊
      LET g_gzba_m.gzbamodid = g_user 
LET g_gzba_m.gzbamoddt = cl_get_current()
LET g_gzba_m.gzbamodid_desc = cl_get_username(g_gzba_m.gzbamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      #資料輸入
      CALL azzi001_input("u")     
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzba_m.* = g_gzba_m_t.*
         CALL azzi001_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE gzba_t SET (gzbamodid,gzbamoddt) = (g_gzba_m.gzbamodid,g_gzba_m.gzbamoddt)
       WHERE gzbaent = g_enterprise AND gzba001 = g_gzba001_t
 
 
      EXIT WHILE
      
   END WHILE
   
   CLOSE azzi001_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U(暫時無用)
   #CALL cl_flow_notify(g_gzba_m.gzba001,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   

{</section>}

{<section id="azzi001.input" >}
#+ 資料輸入
PRIVATE FUNCTION azzi001_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
{<point name="input.define"/>}
   #end add-point
 
   #切換至輸入畫面
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzba_m.gzbal003,g_gzba_m.gzbal003_1,g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002, 
       g_gzba_m.gzbastus,g_gzba_m.gzbaownid,g_gzba_m.gzbaownid_desc,g_gzba_m.gzbacrtid,g_gzba_m.gzbacrtid_desc, 
       g_gzba_m.gzbaowndp,g_gzba_m.gzbaowndp_desc,g_gzba_m.gzbacrtdp,g_gzba_m.gzbacrtdp_desc,g_gzba_m.gzbacrtdt, 
       g_gzba_m.gzbamodid,g_gzba_m.gzbamodid_desc,g_gzba_m.gzbamoddt
   
   CALL cl_set_head_visible("","YES")  
   
   #a-新增,r-複製,u-修改
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL azzi001_set_entry(p_cmd)
   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi001_set_no_entry(p_cmd)
   #add-point:資料輸入前
{<point name="input.before_input"/>}
   #end add-point
   
   DISPLAY BY NAME g_gzba_m.gzbal003,g_gzba_m.gzbal003_1,g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002, 
       g_gzba_m.gzbastus
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_gzba_m.gzbal003,g_gzba_m.gzbal003_1,g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002, 
          g_gzba_m.gzbastus, l_flow_wc
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
{<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            LET g_master_multi_table_t.gzbal001 = g_gzba_m.gzba001
LET g_master_multi_table_t.gzbal003 = g_gzba_m.gzbal003
 
            #add-point:input開始前
{<point name="input.before.input"/>}
            #end add-point
   
                  #此段落由子樣板a01產生
         BEFORE FIELD gzbal003
            #add-point:BEFORE FIELD gzbal003
{<point name="input.b.gzbal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbal003
            
            #add-point:AFTER FIELD gzbal003
{<point name="input.a.gzbal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzbal003
            #add-point:ON CHANGE gzbal003
{<point name="input.g.gzbal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbal003_1
            #add-point:BEFORE FIELD gzbal003_1
{<point name="input.b.gzbal003_1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbal003_1
            
            #add-point:AFTER FIELD gzbal003_1
{<point name="input.a.gzbal003_1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzbal003_1
            #add-point:ON CHANGE gzbal003_1
{<point name="input.g.gzbal003_1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzba003
            #add-point:BEFORE FIELD gzba003
{<point name="input.b.gzba003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzba003
            
            #add-point:AFTER FIELD gzba003
{<point name="input.a.gzba003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzba003
            #add-point:ON CHANGE gzba003
{<point name="input.g.gzba003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzba001
            #add-point:BEFORE FIELD gzba001
{<point name="input.b.gzba001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzba001
            
            #add-point:AFTER FIELD gzba001
{<point name="input.a.gzba001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzba001
            #add-point:ON CHANGE gzba001
{<point name="input.g.gzba001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzba002
            #add-point:BEFORE FIELD gzba002
{<point name="input.b.gzba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzba002
            
            #add-point:AFTER FIELD gzba002
{<point name="input.a.gzba002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzba002
            #add-point:ON CHANGE gzba002
{<point name="input.g.gzba002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzbastus
            #add-point:BEFORE FIELD gzbastus
{<point name="input.b.gzbastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzbastus
            
            #add-point:AFTER FIELD gzbastus
{<point name="input.a.gzbastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzbastus
            #add-point:ON CHANGE gzbastus
{<point name="input.g.gzbastus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.gzbal003
         ON ACTION controlp INFIELD gzbal003
            #add-point:ON ACTION controlp INFIELD gzbal003
{<point name="input.c.gzbal003" />}
            #END add-point
 
         #Ctrlp:input.c.gzbal003_1
         ON ACTION controlp INFIELD gzbal003_1
            #add-point:ON ACTION controlp INFIELD gzbal003_1
{<point name="input.c.gzbal003_1" />}
            #END add-point
 
         #Ctrlp:input.c.gzba003
         ON ACTION controlp INFIELD gzba003
            #add-point:ON ACTION controlp INFIELD gzba003
{<point name="input.c.gzba003" />}
            #END add-point
 
         #Ctrlp:input.c.gzba001
         ON ACTION controlp INFIELD gzba001
            #add-point:ON ACTION controlp INFIELD gzba001
{<point name="input.c.gzba001" />}
            #END add-point
 
         #Ctrlp:input.c.gzba002
         ON ACTION controlp INFIELD gzba002
            #add-point:ON ACTION controlp INFIELD gzba002
{<point name="input.c.gzba002" />}
            #END add-point
 
         #Ctrlp:input.c.gzbastus
         ON ACTION controlp INFIELD gzbastus
            #add-point:ON ACTION controlp INFIELD gzbastus
{<point name="input.c.gzbastus" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            #若點選cancel則離開dialog
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
  
            IF p_cmd <> "u" THEN
               #當p_cmd不為u代表為新增/複製
               LET l_count = 1  
 
               #確定新增的資料不存在(不重複)
               SELECT COUNT(*) INTO l_count FROM gzba_t
                WHERE gzbaent = g_enterprise AND gzba001 = g_gzba_m.gzba001
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
{<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  #將新增的單頭資料寫入資料庫
                  INSERT INTO gzba_t (gzbaent,gzba003,gzba001,gzba002,gzbastus,gzbaownid,gzbacrtid,gzbaowndp, 
                      gzbacrtdp,gzbacrtdt)
                  VALUES (g_enterprise,g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002,g_gzba_m.gzbastus, 
                      g_gzba_m.gzbaownid,g_gzba_m.gzbacrtid,g_gzba_m.gzbaowndp,g_gzba_m.gzbacrtdp,g_gzba_m.gzbacrtdt)  

                  
                  #add-point:單頭新增中
{<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  #若寫入錯誤則提示錯誤訊息並返回輸入頁面
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzba_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                           INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzba_m.gzba001 = g_master_multi_table_t.gzbal001 AND
         g_gzba_m.gzbal003 = g_master_multi_table_t.gzbal003  THEN
         ELSE 
            LET l_var_keys[01] = g_gzba_m.gzba001
            LET l_field_keys[01] = 'gzbal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzbal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzbal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzba_m.gzbal003
            LET l_fields[01] = 'gzbal003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'gzbalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzbal_t')
         END IF 
 
                  
                  #add-point:單頭新增後
{<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend =  "g_gzba_m.gzba001" 
                  LET g_errparam.code   = "std-00006" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
{<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE gzba_t SET (gzba003,gzba001,gzba002,gzbastus,gzbaownid,gzbacrtid,gzbaowndp,gzbacrtdp, 
                   gzbacrtdt) = (g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002,g_gzba_m.gzbastus, 
                   g_gzba_m.gzbaownid,g_gzba_m.gzbacrtid,g_gzba_m.gzbaowndp,g_gzba_m.gzbacrtdp,g_gzba_m.gzbacrtdt) 

                WHERE gzbaent = g_enterprise AND gzba001 = g_gzba001_t #
 
               #add-point:單頭修改中
{<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzba_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzba_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzba_m.gzba001 = g_master_multi_table_t.gzbal001 AND
         g_gzba_m.gzbal003 = g_master_multi_table_t.gzbal003  THEN
         ELSE 
            LET l_var_keys[01] = g_gzba_m.gzba001
            LET l_field_keys[01] = 'gzbal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzbal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzbal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzba_m.gzbal003
            LET l_fields[01] = 'gzbal003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'gzbalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzbal_t')
         END IF 
 
                     #add-point:單頭修改後
{<point name="input.head.a_update"/>}
                     #end add-point
                     #紀錄資料更動
                     LET g_log1 = util.JSON.stringify(g_gzba_m_t)
                     LET g_log2 = util.JSON.stringify(g_gzba_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            END IF
           #controlp
      END INPUT
      
      #add-point:input段more input 
{<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG
         #CALL cl_err_collect_init()
         #add-point:input段before_dialog 
{<point name="input.before_dialog"/>}
         #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         LET l_save_cnt = l_save_cnt + 1
         CALL azzi001_submit_wc("l_flow_wc", "getData", l_save_cnt)
         NEXT FIELD l_flow_wc
         
      #放棄輸入
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close 
         LET INT_FLAG = TRUE 
         EXIT DIALOG
    
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
{<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="azzi001.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION azzi001_reproduce()
   DEFINE l_newno     LIKE gzba_t.gzba001 
   DEFINE l_oldno     LIKE gzba_t.gzba001 
 
   DEFINE l_master    RECORD LIKE gzba_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
{<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   
   #先確定key值無遺漏
   IF g_gzba_m.gzba001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   #備份key值
   LET g_gzba001_t = g_gzba_m.gzba001
 
   
   #清空key值
   LET g_gzba_m.gzba001 = ""
 
    
   CALL azzi001_set_entry("a")
   CALL azzi001_set_no_entry("a")
   
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      #公用欄位新增給值
      LET g_gzba_m.gzbaownid = g_user
      LET g_gzba_m.gzbaowndp = g_dept
      LET g_gzba_m.gzbacrtid = g_user
      LET g_gzba_m.gzbacrtdp = g_dept 
      LET g_gzba_m.gzbacrtdt = cl_get_current()
      LET g_gzba_m.gzbamodid = ""
      LET g_gzba_m.gzbamoddt = ""
      #LET g_gzba_m.gzbastus = "N" #161018-00026#1
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
{<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
	  #根據狀態碼顯示對應圖片
      CASE g_gzba_m.gzbastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #資料輸入
   CALL azzi001_input("r")
 
   #清空key欄位的desc
   
    
   IF INT_FLAG THEN
      #取消
      LET INT_FLAG = 0
      CALL azzi001_delete1(g_gzba_m.gzba001,false) #161018-00026#1           
      INITIALIZE g_gzba_m.* TO NULL
      #LET g_gzba_m.gzba001 = g_gzba001_t #161018-00026#1 
      LET g_curr_gzba001 = g_gzba001_t #161018-00026#1
      CALL azzi001_show()  
      
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()

      RETURN
   END IF
   
   #CALL s_transaction_begin()   #161018-00026#1 mark
   
   #add-point:單頭複製前
{<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   #add-point:單頭複製中
{<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "gzba_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:單頭複製後
{<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_gzba001_t = g_gzba_m.gzba001
 
   
   #組合新增資料的條件
   LET g_add_browse = " gzbaent = '" ||g_enterprise|| "' AND",
                      " gzba001 = '", g_gzba_m.gzba001 CLIPPED, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi001_browser_fill("","")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
{<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION

{</section>}

{<section id="azzi001.show" >}
#+ 資料顯示 
PRIVATE FUNCTION azzi001_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   
 
    
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi001_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzba_m.gzbal003,g_gzba_m.gzbal003_1,g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002, 
       g_gzba_m.gzbastus,g_gzba_m.gzbaownid,g_gzba_m.gzbaownid_desc,g_gzba_m.gzbacrtid,g_gzba_m.gzbacrtid_desc, 
       g_gzba_m.gzbaowndp,g_gzba_m.gzbaowndp_desc,g_gzba_m.gzbacrtdp,g_gzba_m.gzbacrtdp_desc,g_gzba_m.gzbacrtdt, 
       g_gzba_m.gzbamodid,g_gzba_m.gzbamodid_desc,g_gzba_m.gzbamoddt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
	  #根據狀態碼顯示對應圖片
      CASE g_gzba_m.gzbastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="azzi001.delete" >}
#+ 資料刪除 
PRIVATE FUNCTION azzi001_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   #先確定key值無遺漏
   IF g_gzba_m.gzba001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
    
   LET g_gzba001_t = g_gzba_m.gzba001
 
   
   LET g_master_multi_table_t.gzbal001 = g_gzba_m.gzba001
LET g_master_multi_table_t.gzbal003 = g_gzba_m.gzbal003
 
 
   OPEN azzi001_cl USING g_enterprise,g_gzba_m.gzba001
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi001_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      CLOSE azzi001_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi001_master_referesh USING g_gzba_m.gzba001 INTO g_gzba_m.gzba003,g_gzba_m.gzba001,g_gzba_m.gzba002, 
       g_gzba_m.gzbastus,g_gzba_m.gzbaownid,g_gzba_m.gzbacrtid,g_gzba_m.gzbaowndp,g_gzba_m.gzbacrtdp, 
       g_gzba_m.gzbacrtdt,g_gzba_m.gzbamodid,g_gzba_m.gzbamoddt,g_gzba_m.gzbaownid_desc,g_gzba_m.gzbacrtid_desc, 
       g_gzba_m.gzbaowndp_desc,g_gzba_m.gzbacrtdp_desc,g_gzba_m.gzbamodid_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = g_gzba_m.gzba001 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #將最新資料顯示到畫面上
   CALL azzi001_show()
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi001_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
      DELETE FROM gzba_t 
       WHERE gzbaent = g_enterprise AND gzba001 = g_gzba_m.gzba001 
 
 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzba_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
      END IF
  
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzbal001
   LET l_field_keys[01] = 'gzbal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzbal_t')
 
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      CLEAR FORM
      CALL azzi001_ui_browser_refresh()
      
      #確保畫面上保有資料
      IF g_browser_cnt > 0 THEN
         #CALL azzi001_browser_fill(g_wc,"")
         CALL azzi001_fetch("P")
      ELSE
         #CALL azzi001_browser_fill(" 1=2","F")
         CLEAR FORM
      END IF
      
   END IF
 
   CLOSE azzi001_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzba_m.gzba001,"D")
 
END FUNCTION

{</section>}

{<section id="azzi001.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi001_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzba001 = g_gzba_m.gzba001
 
         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser.getLength()
   #IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
   #   LET g_current_idx = g_browser_cnt
   #END IF
  
END FUNCTION

{</section>}

{<section id="azzi001.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi001_set_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("gzba001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="azzi001.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi001_set_no_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzba001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="azzi001.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION azzi001_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
 
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #根據外部參數(g_argv)組合wc
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzba001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      #若有外部參數則根據該參數組合
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=1
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="azzi001.state_change" >}
   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION azzi001_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzba_m.gzba001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzba_m.gzbastus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
    
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE gzba_t SET gzbastus = lc_state 
    WHERE gzbaent = g_enterprise AND gzba001 = g_gzba_m.gzba001
 
  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_gzba_m.gzbastus = lc_state
      DISPLAY BY NAME g_gzba_m.gzbastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 

{</section>}

{<section id="azzi001.signature" >}
   

{</section>}

{<section id="azzi001.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi001_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzba_m.gzba001
   LET g_pk_array[1].column = 'gzba001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="azzi001.other_dialog" readonly="Y" >}
 

{</section>}

{<section id="azzi001.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

