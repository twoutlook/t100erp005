#該程式已解開Section, 不再透過樣板產出!
{<section id="azzi301.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000030
#+ 
#+ Filename...: azzi301
#+ Description: Genero Report 樣板設定作業
#+ Creator....: 04010(2014/04/10)
#+ Modifier...: 04010(2014/07/07)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="azzi301.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzgd_m        RECORD
       gzgd001 LIKE gzgd_t.gzgd001, 
   gzgd001_desc LIKE type_t.chr80, 
   gzgd002 LIKE gzgd_t.gzgd002, 
   gzgd005 LIKE gzgd_t.gzgd005, 
   gzgd005_desc LIKE type_t.chr80, 
   gzgd004 LIKE gzgd_t.gzgd004, 
   gzgd004_desc LIKE type_t.chr80, 
   gzgd003 LIKE gzgd_t.gzgd003, 
   gzgd011 LIKE gzgd_t.gzgd011, 
   gzgd009 LIKE gzgd_t.gzgd009, 
   gzgd010 LIKE gzgd_t.gzgd010,
   gzgd014 LIKE gzgd_t.gzgd014,
   gzgd008 LIKE gzgd_t.gzgd008, 
   gzgd012 LIKE gzgd_t.gzgd012,
   gzgd013 LIKE gzgd_t.gzgd013,
   gzgdstus LIKE gzgd_t.gzgdstus
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzgd_d        RECORD
       gzgd006 LIKE gzgd_t.gzgd006, 
   gzgd007 LIKE gzgd_t.gzgd007, 
   gzgdl002 LIKE type_t.chr500, 
   gzgdownid LIKE gzgd_t.gzgdownid, 
   gzgdownid_desc LIKE type_t.chr500, 
   gzgdowndp LIKE gzgd_t.gzgdowndp, 
   gzgdowndp_desc LIKE type_t.chr500, 
   gzgdcrtid LIKE gzgd_t.gzgdcrtid, 
   gzgdcrtid_desc LIKE type_t.chr500, 
   gzgdcrtdp LIKE gzgd_t.gzgdcrtdp, 
   gzgdcrtdp_desc LIKE type_t.chr500, 
   gzgdcrtdt DATETIME YEAR TO SECOND, 
   gzgdmodid LIKE gzgd_t.gzgdmodid, 
   gzgdmodid_desc LIKE type_t.chr500, 
   gzgdmoddt DATETIME YEAR TO SECOND, 
   gzgd000 LIKE gzgd_t.gzgd000
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_gzgd_m          type_g_gzgd_m
DEFINE g_gzgd_m_t        type_g_gzgd_m
DEFINE g_gzgd_m_o        type_g_gzgd_m
 
   DEFINE g_gzgd001_t LIKE gzgd_t.gzgd001
DEFINE g_gzgd002_t LIKE gzgd_t.gzgd002
DEFINE g_gzgd005_t LIKE gzgd_t.gzgd005
DEFINE g_gzgd004_t LIKE gzgd_t.gzgd004
DEFINE g_gzgd003_t LIKE gzgd_t.gzgd003

DEFINE g_gzgd000 LIKE gzgd_t.gzgd000 
 
DEFINE g_gzgd_d          DYNAMIC ARRAY OF type_g_gzgd_d
DEFINE g_gzgd_d_t        type_g_gzgd_d
DEFINE g_gzgd_d_o        type_g_gzgd_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
       b_gzgd001      LIKE gzgd_t.gzgd001,
       b_gzgd001_desc LIKE type_t.chr80,
       b_gzgd002      LIKE gzgd_t.gzgd002,
       b_gzgdl002     LIKE type_t.chr80,
       b_gzgd003      LIKE gzgd_t.gzgd003,
       b_gzgd004      LIKE gzgd_t.gzgd004,
       b_gzgd004_desc LIKE type_t.chr500,
       b_gzgd005      LIKE gzgd_t.gzgd005,
       b_gzgd005_desc LIKE type_t.chr500
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="azzi301.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化
{<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT gzgd001,'',gzgd002,gzgd005,'',gzgd004,'',gzgd003,gzgd011,gzgd009,gzgd010,gzgd014,gzgd008,gzgd012,gzgd013,gzgdstus ",
                       " FROM gzgd_t WHERE gzgd001=? AND gzgd002=? AND gzgd003=? AND gzgd004=? AND gzgd005=? FOR UPDATE"
   #add-point:SQL_define
{<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi301_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE gzgd001,gzgd002,gzgd005,gzgd004,gzgd003,gzgd011,gzgd009,gzgd010,gzgd014,gzgd008,gzgd012,gzgd013,gzgdstus",
               " FROM gzgd_t",
               
               " WHERE  gzgd001 = ? AND gzgd002 = ? AND gzgd003 = ? AND gzgd004 = ? AND gzgd005 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
{<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE azzi301_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi301 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi301_init()   
 
      #進入選單 Menu (="N")
      CALL azzi301_ui_dialog() 
      
      #add-point:畫面關閉前
{<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi301
      
   END IF 
   
   CLOSE azzi301_cl
   
   
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="azzi301.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi301_init()
   #add-point:init段define
{<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   CALL cl_set_combo_scc_part('gzgdstus','17','N,Y')
   CALL cl_set_combo_scc('gzgd010','145')
   CALL cl_set_combo_scc('gzgd014','164')
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
{<point name="init.init"/>}
   #end add-point
   
   CALL azzi301_default_search()
    
END FUNCTION

{</section>}

{<section id="azzi301.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION azzi301_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL azzi301_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()      
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_gzgd001 = g_gzgd001_t
               AND g_browser[li_idx].b_gzgd002 = g_gzgd002_t
               AND g_browser[li_idx].b_gzgd003 = g_gzgd003_t
               AND g_browser[li_idx].b_gzgd004 = g_gzgd004_t
               AND g_browser[li_idx].b_gzgd005 = g_gzgd005_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL azzi301_fetch('') # reload data
               LET g_detail_idx = 1
               CALL azzi301_ui_detailshow() #Setting the current row 
         
         END DISPLAY 
 
         DISPLAY ARRAY g_gzgd_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL azzi301_ui_detailshow()
               
               #add-point:page1自定義行為
{<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
                              #此段落i02,i07樣板使用, 但目前不支援批次修改狀態, 先註解
			   ##此段落由子樣板a22產生
               ##目前選取的stus為
               #IF . = "" THEN
               #   
               #END IF
               ##stus - Start - 
               ##目前選取的stus為}
               #IF . = "}" THEN
               #   }
               #END IF        
               ##stus -  End  -               
    
 
 
               
            
 
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi301_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi301_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
         
         ON ACTION first
            CALL azzi301_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL azzi301_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL azzi301_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL azzi301_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL azzi301_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
                
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzgd006
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
      
         ON ACTION statechange
            CALL azzi301_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG      
      
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL azzi301_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL azzi301_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ""
                  LET g_errparam.code = "-100"
                  LET g_errparam.popup = TRUE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "-100"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLEAR FORM
               ELSE
                  CALL azzi301_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi301_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi301_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi301_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi301_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi301_reproduce()
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi301_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi301_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
{<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi301_set_pk_array()
            #add-point:ON ACTION agendum
{<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi301_set_pk_array()
            #add-point:ON ACTION followup
{<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION

{</section>}

{<section id="azzi301.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION azzi301_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00005"
      LET g_errparam.extend = "searchcol"
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY gzgd001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL azzi301_browser_fill("F")
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="azzi301.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi301_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
{<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
{<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "gzgd001,gzgd003,gzgd002"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE gzgd001 ",
                      ", gzgd002 ",
                      ", gzgd003 ",
                      ", gzgd004 ",
                      ", gzgd005 ",
                      ", gzgdstus ",
                      " FROM gzgd_t ",
                      " ",
                      " ",
 
                      " WHERE  ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzgd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE gzgd001 ",
                      ", gzgd002 ",
                      ", gzgd003 ",
                      ", gzgd004 ",
                      ", gzgd005 ",
                      ", gzgdstus ",
                      " FROM gzgd_t ",
                      " ",
                      " ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("gzgd_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = '9035'
      LET g_errparam.extend = g_browser_cnt
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF   
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
    IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   
   #依照gzgd001,gzgd002,gzgd003,gzgd004,gzgd005 Browser欄位定義(取代原本bs_sql功能)
   #LET g_sql  = "SELECT DISTINCT gzgd001,gzgd002,gzgd003,gzgd004,gzgd005",
   #             " FROM gzgd_t ",                
   #             " WHERE  ", l_wc," AND ",l_wc2, cl_sql_add_filter("gzgd_t")

   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照gzgd001,gzgd002,gzgd003,gzgd004,gzgd005 Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql  = "SELECT DISTINCT gzgd001,'',gzgd002,gzgd003,gzgd004,'',gzgd005,'',gzgdstus ",
                       " FROM gzgd_t left join gzgdl_t on gzgd000 = gzgdl000 AND gzgdl001 = '" ||g_lang|| "'",
                       " ",
                       " WHERE ", g_wc," AND ",g_wc2, cl_sql_add_filter("gzgd_t")
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT gzgd001,'',gzgd002,gzgd003,gzgd004,'',gzgd005,'',gzgdstus ",
                       " FROM gzgd_t left join gzgdl_t on gzgd000 = gzgdl000 AND gzgdl001 = '" ||g_lang|| "'", 
                       " WHERE ", g_wc, cl_sql_add_filter("gzgd_t")               
   END IF
  
   #add-point:browser_fill,sql_rank前
{<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   #LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
   LET l_sql_rank = "SELECT gzgdstus,gzgd001,'',gzgd002,gzgd003,gzgd004,'',gzgd005,'',DENSE_RANK() OVER(ORDER BY gzgd001 ", 
       g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT gzgdstus,gzgd001,'',gzgd002,gzgd003,gzgd004,'',gzgd005,'' FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart, 
              " AND RANK < ", g_pagestart + g_max_browse,
              " ORDER BY ",l_searchcol, " ", g_order                
   #add-point:browser_fill,pre前
{<point name="browser_fill.before_pre"/>}
   #end add-point
    
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzgd001,g_browser[g_cnt].b_gzgd001_desc,g_browser[g_cnt].b_gzgd002,g_browser[g_cnt].b_gzgd003, 
       g_browser[g_cnt].b_gzgd004,g_browser[g_cnt].b_gzgd004_desc,g_browser[g_cnt].b_gzgd005,g_browser[g_cnt].b_gzgd005_desc       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_gzgd001
      CALL ap_ref_array2(g_ref_fields,"SELECT gzdel003 FROM gzdel_t WHERE gzdel001=? AND gzdel002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_gzgd001_desc = '', g_rtn_fields[1] , ''

      INITIALIZE g_ref_fields TO NULL
      SELECT gzgd000 INTO g_ref_fields[1] FROM gzgd_t WHERE gzgd001 = g_browser[g_cnt].b_gzgd001 AND gzgd002 = g_browser[g_cnt].b_gzgd002 
      AND gzgd003 = g_browser[g_cnt].b_gzgd003 AND gzgd004 = g_browser[g_cnt].b_gzgd004 AND gzgd005 = g_browser[g_cnt].b_gzgd005 AND gzgd006 = 1
      
      CALL ap_ref_array2(g_ref_fields,"SELECT gzgdl002 FROM gzgdl_t WHERE gzgdl000=? AND gzgdl001='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_gzgdl002 = '', g_rtn_fields[1] , ''

      IF g_browser[g_cnt].b_gzgd005 = "default" THEN 
          LET g_browser[g_cnt].b_gzgd005_desc = cl_getmsg("azz-00665",g_lang)
      ELSE
          INITIALIZE g_ref_fields TO NULL    
          LET g_ref_fields[1] = g_browser[g_cnt].b_gzgd005
          CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
          LET g_browser[g_cnt].b_gzgd005_desc = '', g_rtn_fields[1] , ''
      END IF 

      IF g_browser[g_cnt].b_gzgd004 = "default" THEN 
          LET g_browser[g_cnt].b_gzgd004_desc = cl_getmsg("azz-00666",g_lang)
      ELSE    
          INITIALIZE g_ref_fields TO NULL
          LET g_ref_fields[1] = g_browser[g_cnt].b_gzgd004
          CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
          LET g_browser[g_cnt].b_gzgd004_desc = '', g_rtn_fields[1] , ''
      END IF
      
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE      
      
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_gzgd_m.* TO NULL
      CALL g_gzgd_d.clear()
 
      #add-point:browser_fill段after_clear
{<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      ##環境是客製，資料是標準就不開放修改功能-(s)  
#      IF FGL_GETENV("DGENV")="c" AND g_gzgd_m.gzgd003="s" THEN     #150608-00030#2 mark
      #150608-00030#2 mark(s)
#      IF FGL_GETENV("DGENV")="c" THEN      #150608-00030#2 add
#         CALL cl_set_act_visible("statechange,modify,delete", FALSE)
#      ELSE
      #150608-00030#2 mark(e)
         CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
#      END IF #150608-00030#2 mark 
   END IF
   
END FUNCTION

{</section>}

{<section id="azzi301.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi301_ui_headershow()
   #add-point:ui_headershow段define
{<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_gzgd_m.gzgd001 = g_browser[g_current_idx].b_gzgd001   
   LET g_gzgd_m.gzgd002 = g_browser[g_current_idx].b_gzgd002   
   LET g_gzgd_m.gzgd003 = g_browser[g_current_idx].b_gzgd003   
   LET g_gzgd_m.gzgd004 = g_browser[g_current_idx].b_gzgd004   
   LET g_gzgd_m.gzgd005 = g_browser[g_current_idx].b_gzgd005   
 
   EXECUTE azzi301_master_referesh USING g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd003,g_gzgd_m.gzgd004, 
       g_gzgd_m.gzgd005 INTO g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003, 
       g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus
   IF g_gzgd_m.gzgdstus IS NULL THEN LET g_gzgd_m.gzgdstus = "Y" END IF    
   CALL azzi301_show()
   
END FUNCTION

{</section>}

{<section id="azzi301.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION azzi301_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="azzi301.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi301_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzgd001 = g_gzgd_m.gzgd001 
         AND g_browser[l_i].b_gzgd002 = g_gzgd_m.gzgd002 
         AND g_browser[l_i].b_gzgd003 = g_gzgd_m.gzgd003 
         AND g_browser[l_i].b_gzgd004 = g_gzgd_m.gzgd004 
         AND g_browser[l_i].b_gzgd005 = g_gzgd_m.gzgd005 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="azzi301.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi301_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
{<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_gzgd_m.* TO NULL
   CALL g_gzgd_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
{<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzgd001,gzgd001_desc,gzgd002,gzgd005,gzgd005_desc,gzgd004,gzgd004_desc, 
          gzgd003,gzgd011,gzgd009,gzgd010,gzgd014,gzgd008,gzgd012,gzgd013,gzgdstus
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #此段落由子樣板a01產生
         BEFORE FIELD gzgd001
            #add-point:BEFORE FIELD gzgd001
{<point name="construct.b.gzgd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd001
            
            #add-point:AFTER FIELD gzgd001
{<point name="construct.a.gzgd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd001
         ON ACTION controlp INFIELD gzgd001
            #add-point:ON ACTION controlp INFIELD gzgd001
{<point name="construct.c.gzgd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd002
            #add-point:BEFORE FIELD gzgd002
{<point name="construct.b.gzgd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd002
            
            #add-point:AFTER FIELD gzgd002
{<point name="construct.a.gzgd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd002
         ON ACTION controlp INFIELD gzgd002
            #add-point:ON ACTION controlp INFIELD gzgd002
{<point name="construct.c.gzgd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd005
            #add-point:BEFORE FIELD gzgd005
{<point name="construct.b.gzgd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd005
            
            #add-point:AFTER FIELD gzgd005
{<point name="construct.a.gzgd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd005
         ON ACTION controlp INFIELD gzgd005
            #add-point:ON ACTION controlp INFIELD gzgd005
{<point name="construct.c.gzgd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd004
            #add-point:BEFORE FIELD gzgd004
{<point name="construct.b.gzgd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd004
            
            #add-point:AFTER FIELD gzgd004
{<point name="construct.a.gzgd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd004
         ON ACTION controlp INFIELD gzgd004
            #add-point:ON ACTION controlp INFIELD gzgd004
{<point name="construct.c.gzgd004" />}
            #END add-point
            
         ON ACTION controlp INFIELD gzgd013
            ### 報表紙張大小開窗 ### start ###
            INITIALIZE g_qryparam.* TO NULL  
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_paper_size
            LET g_qryparam.where = "1=1"
            CALL q_gzgi001()
            LET g_gzgd_m.gzgd013 = g_qryparam.return1
            DISPLAY g_gzgd_m.gzgd013 TO gzgd013
            ### 報表紙張大小開窗 ### end ###            
         
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd003
            #add-point:BEFORE FIELD gzgd003
{<point name="construct.b.gzgd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd003
            
            #add-point:AFTER FIELD gzgd003
{<point name="construct.a.gzgd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd003
         ON ACTION controlp INFIELD gzgd003
            #add-point:ON ACTION controlp INFIELD gzgd003
{<point name="construct.c.gzgd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd008
            #add-point:BEFORE FIELD gzgd008
{<point name="construct.b.gzgd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd008
            
            #add-point:AFTER FIELD gzgd008
{<point name="construct.a.gzgd008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd008
         ON ACTION controlp INFIELD gzgd008
            #add-point:ON ACTION controlp INFIELD gzgd008
{<point name="construct.c.gzgd008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd012
            #add-point:BEFORE FIELD gzgd012
{<point name="construct.b.gzgd012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd012
            
            #add-point:AFTER FIELD gzgd012
{<point name="construct.a.gzgd012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd012
         ON ACTION controlp INFIELD gzgd012
            #add-point:ON ACTION controlp INFIELD gzgd012
{<point name="construct.c.gzgd012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd011
            #add-point:BEFORE FIELD gzgd011
{<point name="construct.b.gzgd011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd011
            
            #add-point:AFTER FIELD gzgd011
{<point name="construct.a.gzgd011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd011
         ON ACTION controlp INFIELD gzgd011
            #add-point:ON ACTION controlp INFIELD gzgd011
{<point name="construct.c.gzgd011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd009
            #add-point:BEFORE FIELD gzgd009
{<point name="construct.b.gzgd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd009
            
            #add-point:AFTER FIELD gzgd009
{<point name="construct.a.gzgd009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.gzgd009
         ON ACTION controlp INFIELD gzgd009
            #add-point:ON ACTION controlp INFIELD gzgd009
{<point name="construct.c.gzgd009" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
#      CONSTRUCT g_wc2_table1 ON gzgd006,gzgd007,l_gzgdl002,gzgdownid,gzgdowndp,gzgdcrtid,    #170320-00042#1 mark
      CONSTRUCT g_wc2_table1 ON gzgd006,gzgd007,gzgdl002,gzgdownid,gzgdowndp,gzgdcrtid,       #170320-00042#1 add
          gzgdcrtdp,gzgdcrtdt,gzgdmodid,gzgdmoddt
#           FROM s_detail1[1].gzgd006,s_detail1[1].gzgd007,s_detail1[1].l_gzgdl002,           #170320-00042#1 mark
           FROM s_detail1[1].gzgd006,s_detail1[1].gzgd007,s_detail1[1].gzgdl002,              #170320-00042#1 add
               s_detail1[1].gzgdownid,s_detail1[1].gzgdowndp,s_detail1[1].gzgdcrtid, 
               s_detail1[1].gzgdcrtdp,s_detail1[1].gzgdcrtdt,s_detail1[1].gzgdmodid,s_detail1[1].gzgdmoddt 
               
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
{<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<gzgdcrtdt>>----
         AFTER FIELD gzgdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzgdmoddt>>----
         AFTER FIELD gzgdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzgdcnfdt>>----
         
         #----<<gzgdpstdt>>----
 
 
           
         #單身一般欄位開窗相關處理
                  #此段落由子樣板a01產生
         BEFORE FIELD gzgd006
            #add-point:BEFORE FIELD gzgd006
{<point name="construct.b.page1.gzgd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd006
            
            #add-point:AFTER FIELD gzgd006
{<point name="construct.a.page1.gzgd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgd006
         ON ACTION controlp INFIELD gzgd006
            #add-point:ON ACTION controlp INFIELD gzgd006
{<point name="construct.c.page1.gzgd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd007
            #add-point:BEFORE FIELD gzgd007
{<point name="construct.b.page1.gzgd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd007
            
            #add-point:AFTER FIELD gzgd007
{<point name="construct.a.page1.gzgd007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgd007
         ON ACTION controlp INFIELD gzgd007
            #add-point:ON ACTION controlp INFIELD gzgd007
{<point name="construct.c.page1.gzgd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgdownid
            #add-point:BEFORE FIELD gzgdownid
{<point name="construct.b.page1.gzgdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgdownid
            
            #add-point:AFTER FIELD gzgdownid
{<point name="construct.a.page1.gzgdownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgdownid
         ON ACTION controlp INFIELD gzgdownid
            #add-point:ON ACTION controlp INFIELD gzgdownid
{<point name="construct.c.page1.gzgdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgdowndp
            #add-point:BEFORE FIELD gzgdowndp
{<point name="construct.b.page1.gzgdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgdowndp
            
            #add-point:AFTER FIELD gzgdowndp
{<point name="construct.a.page1.gzgdowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgdowndp
         ON ACTION controlp INFIELD gzgdowndp
            #add-point:ON ACTION controlp INFIELD gzgdowndp
{<point name="construct.c.page1.gzgdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgdcrtid
            #add-point:BEFORE FIELD gzgdcrtid
{<point name="construct.b.page1.gzgdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgdcrtid
            
            #add-point:AFTER FIELD gzgdcrtid
{<point name="construct.a.page1.gzgdcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgdcrtid
         ON ACTION controlp INFIELD gzgdcrtid
            #add-point:ON ACTION controlp INFIELD gzgdcrtid
{<point name="construct.c.page1.gzgdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgdcrtdp
            #add-point:BEFORE FIELD gzgdcrtdp
{<point name="construct.b.page1.gzgdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgdcrtdp
            
            #add-point:AFTER FIELD gzgdcrtdp
{<point name="construct.a.page1.gzgdcrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgdcrtdp
         ON ACTION controlp INFIELD gzgdcrtdp
            #add-point:ON ACTION controlp INFIELD gzgdcrtdp
{<point name="construct.c.page1.gzgdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgdcrtdt
            #add-point:BEFORE FIELD gzgdcrtdt
{<point name="construct.b.page1.gzgdcrtdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgdmodid
            #add-point:BEFORE FIELD gzgdmodid
{<point name="construct.b.page1.gzgdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgdmodid
            
            #add-point:AFTER FIELD gzgdmodid
{<point name="construct.a.page1.gzgdmodid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgdmodid
         ON ACTION controlp INFIELD gzgdmodid
            #add-point:ON ACTION controlp INFIELD gzgdmodid
{<point name="construct.c.page1.gzgdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgdmoddt
            #add-point:BEFORE FIELD gzgdmoddt
{<point name="construct.b.page1.gzgdmoddt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd000
            #add-point:BEFORE FIELD gzgd000
{<point name="construct.b.page1.gzgd000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd000
            
            #add-point:AFTER FIELD gzgd000
{<point name="construct.a.page1.gzgd000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.gzgd000
         ON ACTION controlp INFIELD gzgd000
            #add-point:ON ACTION controlp INFIELD gzgd000
{<point name="construct.c.page1.gzgd000" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
{<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
{<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
{<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION

{</section>}

{<section id="azzi301.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi301_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzgd_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL azzi301_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL azzi301_browser_fill(g_wc)
      CALL azzi301_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL azzi301_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code = "-100"
      LET g_errparam.popup = TRUE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "-100"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

   ELSE
      CALL azzi301_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION

{</section>}

{<section id="azzi301.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi301_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
{<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
{<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL azzi301_browser_fill(p_flag)
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzgd_m.gzgd001 = g_browser[g_current_idx].b_gzgd001
   LET g_gzgd_m.gzgd002 = g_browser[g_current_idx].b_gzgd002
   LET g_gzgd_m.gzgd003 = g_browser[g_current_idx].b_gzgd003
   LET g_gzgd_m.gzgd004 = g_browser[g_current_idx].b_gzgd004
   LET g_gzgd_m.gzgd005 = g_browser[g_current_idx].b_gzgd005
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi301_master_referesh USING g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd003,g_gzgd_m.gzgd004, 
       g_gzgd_m.gzgd005 INTO g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003,    
       g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "gzgd_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_gzgd_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #保存單頭舊值
   LET g_gzgd_m_t.* = g_gzgd_m.*
   LET g_gzgd_m_o.* = g_gzgd_m.*
   
   #重新顯示   
   IF g_gzgd_m.gzgdstus IS NULL THEN LET g_gzgd_m.gzgdstus = "Y" END IF 
   
   CALL azzi301_show()
 
   
 
END FUNCTION

{</section>}

{<section id="azzi301.insert" >}
#+ 資料新增
PRIVATE FUNCTION azzi301_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_gzgd_d.clear()
 
 
   INITIALIZE g_gzgd_m.* LIKE gzgd_t.*             #DEFAULT 設定
   LET g_gzgd001_t = NULL
   LET g_gzgd002_t = NULL
   LET g_gzgd003_t = NULL
   LET g_gzgd004_t = NULL
   LET g_gzgd005_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL azzi301_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzgd_m.* = g_gzgd_m_t.*
         CALL azzi301_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      END IF
      
      CALL g_gzgd_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_gzgd001_t = g_gzgd_m.gzgd001
   LET g_gzgd002_t = g_gzgd_m.gzgd002
   LET g_gzgd003_t = g_gzgd_m.gzgd003
   LET g_gzgd004_t = g_gzgd_m.gzgd004
   LET g_gzgd005_t = g_gzgd_m.gzgd005
 
   
   LET g_wc = "(",g_wc,  
              " OR (  ",
              " gzgd001 = '", g_gzgd_m.gzgd001 CLIPPED, "' "
              ," AND gzgd002 = '", g_gzgd_m.gzgd002 CLIPPED, "' "
              ," AND gzgd003 = '", g_gzgd_m.gzgd003 CLIPPED, "' "
              ," AND gzgd004 = '", g_gzgd_m.gzgd004 CLIPPED, "' "
              ," AND gzgd005 = '", g_gzgd_m.gzgd005 CLIPPED, "' "
 
              , ")) "
   
END FUNCTION

{</section>}

{<section id="azzi301.modify" >}
#+ 資料修改
PRIVATE FUNCTION azzi301_modify()
   #add-point:modify段define
{<point name="modify.define"/>}
   #end add-point    
   
   IF g_gzgd_m.gzgd001 IS NULL
   OR g_gzgd_m.gzgd002 IS NULL
   OR g_gzgd_m.gzgd003 IS NULL
   OR g_gzgd_m.gzgd004 IS NULL
   OR g_gzgd_m.gzgd005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

#150924-00008#2 mark(s)
#150608-00030#2 add(s)
#   IF FGL_GETENV("DGENV") ="c" AND g_gzgd_m.gzgd003 ="s"
#      AND g_gzgd_m.gzgd004 ="default" AND g_gzgd_m.gzgd005 ="default"
#   THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = "azz-00712"
#      LET g_errparam.extend = ""
#      LET g_errparam.popup = FALSE
#      CALL cl_err()
#
#      RETURN
#   END IF 
#150608-00030#2 add(e)
#150924-00008#2 mark(e)

   EXECUTE azzi301_master_referesh USING g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd003,g_gzgd_m.gzgd004, 
       g_gzgd_m.gzgd005 INTO g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003, 
       g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus 
 
   ERROR ""
  
   LET g_gzgd001_t = g_gzgd_m.gzgd001
   LET g_gzgd002_t = g_gzgd_m.gzgd002
   LET g_gzgd003_t = g_gzgd_m.gzgd003
   LET g_gzgd004_t = g_gzgd_m.gzgd004
   LET g_gzgd005_t = g_gzgd_m.gzgd005
 
   CALL s_transaction_begin()
   
   OPEN azzi301_cl USING g_gzgd_m.gzgd001
                                                       ,g_gzgd_m.gzgd002
                                                       ,g_gzgd_m.gzgd003
                                                       ,g_gzgd_m.gzgd004
                                                       ,g_gzgd_m.gzgd005
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN azzi301_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE azzi301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi301_cl INTO g_gzgd_m.gzgd001,g_gzgd_m.gzgd001_desc,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd005_desc, 
       g_gzgd_m.gzgd004,g_gzgd_m.gzgd004_desc,g_gzgd_m.gzgd003,g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012 
       ,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_gzgd_m.gzgd001
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE azzi301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL azzi301_show()
   WHILE TRUE
      LET g_gzgd001_t = g_gzgd_m.gzgd001
      LET g_gzgd002_t = g_gzgd_m.gzgd002
      LET g_gzgd003_t = g_gzgd_m.gzgd003
      LET g_gzgd004_t = g_gzgd_m.gzgd004
      LET g_gzgd005_t = g_gzgd_m.gzgd005
 
 
      #add-point:modify段修改前
{<point name="modify.before_input"/>}
      #end add-point
      
      CALL azzi301_input("u")     #欄位更改
      
      #add-point:modify段修改後
{<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzgd_m.* = g_gzgd_m_t.*
         CALL azzi301_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_gzgd_m.gzgd001 != g_gzgd001_t 
      OR g_gzgd_m.gzgd002 != g_gzgd002_t 
      OR g_gzgd_m.gzgd003 != g_gzgd003_t 
      OR g_gzgd_m.gzgd004 != g_gzgd004_t 
      OR g_gzgd_m.gzgd005 != g_gzgd005_t 
 
      THEN
         SELECT COUNT(*) INTO g_cnt FROM gzgd_t
          WHERE gzgd001 = g_gzgd_m.gzgd001 AND gzgd002 = g_gzgd_m.gzgd002
            AND gzgd003 = g_gzgd_m.gzgd003 AND gzgd004 = g_gzgd_m.gzgd004
            AND gzgd005 = g_gzgd_m.gzgd005
                  
         IF g_cnt > 0 THEN                        
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = -239
            LET g_errparam.extend =  ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            #NEXT FIELD gzgd001
         END IF      
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
{<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE gzgd_t SET gzgd001 = g_gzgd_m.gzgd001
                                       , gzgd002 = g_gzgd_m.gzgd002
                                       , gzgd003 = g_gzgd_m.gzgd003
                                       , gzgd004 = g_gzgd_m.gzgd004
                                       , gzgd005 = g_gzgd_m.gzgd005
 
          WHERE  gzgd001 = g_gzgd001_t
            AND gzgd002 = g_gzgd002_t
            AND gzgd003 = g_gzgd003_t
            AND gzgd004 = g_gzgd004_t
            AND gzgd005 = g_gzgd005_t
 
         #add-point:單頭(偽)修改中
{<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "gzgd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "gzgd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
{<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_gzgd_m.gzgd001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE azzi301_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzgd_m.gzgd001,'U')
 
   CALL azzi301_b_fill("1=1")
   
END FUNCTION   

{</section>}

{<section id="azzi301.input" >}
#+ 資料輸入
PRIVATE FUNCTION azzi301_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
{<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
{<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT gzgd006,gzgd007,'',gzgdownid,'',gzgdowndp,'',gzgdcrtid, 
       '',gzgdcrtdp,'',gzgdcrtdt,gzgdmodid,'',gzgdmoddt,gzgd000 FROM gzgd_t WHERE gzgd001=? AND  
       gzgd002=? AND gzgd003=? AND gzgd004=? AND gzgd005=? AND gzgd006=? FOR UPDATE" 
   #add-point:input段define_sql
{<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi301_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi301_set_entry(p_cmd)
   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
   #end add-point
   CALL azzi301_set_no_entry(p_cmd)
   #add-point:set_no_entry後
{<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003, 
       g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012
       ,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus

   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
{<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="azzi301.input.head" >}
   
      #單頭段
      INPUT BY NAME g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003, 
          g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013
          ,g_gzgd_m.gzgdstus          
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
   
            #IF l_cmd_t = 'r' THEN
            #   LET l_gzgd002 = "%",g_gzgd_m.gzgd002 CLIPPED,"%"
            #   SELECT COUNT(*) INTO g_cnt FROM 
            #   (SELECT DISTINCT gzgd001,gzgd002,gzgd003,gzgd004, gzgd005 FROM gzgd_t WHERE gzgd001 = g_gzgd_m.gzgd001 AND gzgd002 LIKE l_gzgd002 AND gzgd003 = g_gzgd_m.gzgd003 AND gzgd004 = g_gzgd_m.gzgd004 AND gzgd005 = g_gzgd_m.gzgd005) gzgdcnt #140613 二次開發 add 
            #   LET l_str = g_cnt
            #   LET l_str = l_str.trim()
            #   LET g_gzgd_m.gzgd002 = g_gzgd_m.gzgd002 CLIPPED, "_",l_str CLIPPED               
            #END IF
            #add-point:單頭input前
{<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD gzgd001
            
            #add-point:AFTER FIELD gzgd001
{<point name="input.a.gzgd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd001
            #add-point:BEFORE FIELD gzgd001
{<point name="input.b.gzgd001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd001
            #add-point:ON CHANGE gzgd001
{<point name="input.g.gzgd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd002
            #add-point:BEFORE FIELD gzgd002
{<point name="input.b.gzgd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd002
            
            #add-point:AFTER FIELD gzgd002
{<point name="input.a.gzgd002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd002
            #add-point:ON CHANGE gzgd002
{<point name="input.g.gzgd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd005
            
            #add-point:AFTER FIELD gzgd005
{<point name="input.a.gzgd005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd005
            #add-point:BEFORE FIELD gzgd005
{<point name="input.b.gzgd005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd005
            #add-point:ON CHANGE gzgd005
{<point name="input.g.gzgd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd004
            
            #add-point:AFTER FIELD gzgd004
{<point name="input.a.gzgd004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd004
            #add-point:BEFORE FIELD gzgd004
{<point name="input.b.gzgd004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd004
            #add-point:ON CHANGE gzgd004
{<point name="input.g.gzgd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd003
            #add-point:BEFORE FIELD gzgd003
{<point name="input.b.gzgd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd003
            
            #add-point:AFTER FIELD gzgd003
{<point name="input.a.gzgd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd003
            #add-point:ON CHANGE gzgd003
{<point name="input.g.gzgd003" />}
            #END add-point
            
         BEFORE FIELD gzgd010
            IF cl_null(g_gzgd_m.gzgd009) THEN
                LET g_gzgd_m.gzgd009 = "N"
            END IF
            IF g_gzgd_m.gzgd009 = "Y" THEN   #150924-00008#2 mark      #170210-00053#2 remark
#            IF g_gzgd_m.gzgd009 = "Y" AND (FGL_GETENV("DGENV") <>"c" OR g_gzgd_m.gzgd003 <>"s" OR p_cmd <> 'u') THEN   #150924-00008#2 add #170210-00053#2 mark
                CALL cl_set_comp_entry("gzgd010",TRUE)
                CALL cl_set_comp_required("gzgd010", TRUE)  #預設為必填欄位
                IF cl_null(g_gzgd_m.gzgd010) THEN
                    LET g_gzgd_m.gzgd010 = "1" 
                END IF
            ELSE
                CALL cl_set_comp_entry("gzgd010",FALSE)
                CALL cl_set_comp_required("gzgd010", FALSE) #預設為非必填欄位
            END IF    
            
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd008
            #add-point:BEFORE FIELD gzgd008
{<point name="input.b.gzgd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd008
            
            #add-point:AFTER FIELD gzgd008
{<point name="input.a.gzgd008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd008
            #add-point:ON CHANGE gzgd008
{<point name="input.g.gzgd008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd012
            #add-point:BEFORE FIELD gzgd012
{<point name="input.b.gzgd012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd012
            
            #add-point:AFTER FIELD gzgd012
{<point name="input.a.gzgd012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd012
            #add-point:ON CHANGE gzgd012
{<point name="input.g.gzgd012" />}
            #END add-point

         ON CHANGE gzgd013
            IF NOT cl_null(g_gzgd_m.gzgd013) THEN
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt FROM gzgi_t WHERE gzgi001 = g_gzgd_m.gzgd013
               IF l_cnt <= 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "azz-00687"
                  LET g_errparam.extend = "searchcol"
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  NEXT FIELD papersize
               ELSE
                  #按下確定才複製資料及實體樣板
                  IF cl_ask_confirm("azz-00690") THEN
                     IF g_gzgd_m.gzgd013 != g_gzgd_m_t.gzgd013 OR g_gzgd_m_t.gzgd013 IS NULL THEN
                        CALL azzi301_cust_paper()
                     END IF   
                  ELSE
                     LET g_gzgd_m.gzgd013 = g_gzgd_m_t.gzgd013
                  END IF                  
               END IF
            END IF 
            
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd011
            #add-point:BEFORE FIELD gzgd011
{<point name="input.b.gzgd011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd011
            
            #add-point:AFTER FIELD gzgd011
{<point name="input.a.gzgd011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd011
            #add-point:ON CHANGE gzgd011
{<point name="input.g.gzgd011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd009
            #add-point:BEFORE FIELD gzgd009
{<point name="input.b.gzgd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd009
            
            #add-point:AFTER FIELD gzgd009
{<point name="input.a.gzgd009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd009
            #add-point:ON CHANGE gzgd009
{<point name="input.g.gzgd009" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.gzgd001
         ON ACTION controlp INFIELD gzgd001
            #add-point:ON ACTION controlp INFIELD gzgd001
{<point name="input.c.gzgd001" />}
            #END add-point
 
         #Ctrlp:input.c.gzgd002
         ON ACTION controlp INFIELD gzgd002
            #add-point:ON ACTION controlp INFIELD gzgd002
{<point name="input.c.gzgd002" />}
            #END add-point
 
         #Ctrlp:input.c.gzgd005
         ON ACTION controlp INFIELD gzgd005
            #add-point:ON ACTION controlp INFIELD gzgd005
{<point name="input.c.gzgd005" />}
            #END add-point
 
         #Ctrlp:input.c.gzgd004
         ON ACTION controlp INFIELD gzgd004
            #add-point:ON ACTION controlp INFIELD gzgd004
{<point name="input.c.gzgd004" />}
            #END add-point

         ON ACTION controlp INFIELD gzgd013
            ### 報表紙張大小開窗 ### start ###
            INITIALIZE g_qryparam.* TO NULL  
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_paper_size
            LET g_qryparam.where = "1=1"
            CALL q_gzgi001()
            LET g_gzgd_m.gzgd013 = g_qryparam.return1
            DISPLAY g_gzgd_m.gzgd013 TO gzgd013
            ### 報表紙張大小開窗 ### end ### 
            
         #Ctrlp:input.c.gzgd003
         ON ACTION controlp INFIELD gzgd003
            #add-point:ON ACTION controlp INFIELD gzgd003
{<point name="input.c.gzgd003" />}
            #END add-point
 
         #Ctrlp:input.c.gzgd008
         ON ACTION controlp INFIELD gzgd008
            #add-point:ON ACTION controlp INFIELD gzgd008
{<point name="input.c.gzgd008" />}
            #END add-point
 
         #Ctrlp:input.c.gzgd012
         ON ACTION controlp INFIELD gzgd012
            #add-point:ON ACTION controlp INFIELD gzgd012
{<point name="input.c.gzgd012" />}
            #END add-point
 
         #Ctrlp:input.c.gzgd011
         ON ACTION controlp INFIELD gzgd011
            #add-point:ON ACTION controlp INFIELD gzgd011
{<point name="input.c.gzgd011" />}
            #END add-point
 
         #Ctrlp:input.c.gzgd009
         ON ACTION controlp INFIELD gzgd009
            #add-point:ON ACTION controlp INFIELD gzgd009
{<point name="input.c.gzgd009" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            
            DISPLAY BY NAME g_gzgd_m.gzgd001             
                            ,g_gzgd_m.gzgd002   
                            ,g_gzgd_m.gzgd003   
                            ,g_gzgd_m.gzgd004   
                            ,g_gzgd_m.gzgd005   
 
 
            #IF p_cmd = 'u' THEN
               #add-point:單頭修改前
{<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
                 UPDATE gzgd_t SET (gzgd001,gzgd002,gzgd005,gzgd004,gzgd003,gzgd011,gzgd009,gzgd010,gzgd014,gzgd008,gzgd012,gzgd013,gzgdstus) =  
                                   (g_gzgd_m.gzgd001,
                                    g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003,g_gzgd_m.gzgd011, 
                                    g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus)
                  WHERE gzgd001 = g_gzgd001_t 
                    AND gzgd002 = g_gzgd002_t
                    AND gzgd003 = g_gzgd003_t
                    AND gzgd004 = g_gzgd004_t
                    AND gzgd005 = g_gzgd005_t
 
               #add-point:單頭修改中
{<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "gzgd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "gzgd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzgd_m.gzgd001
               LET gs_keys_bak[1] = g_gzgd001_t
               LET gs_keys[2] = g_gzgd_m.gzgd002
               LET gs_keys_bak[2] = g_gzgd002_t
               LET gs_keys[3] = g_gzgd_m.gzgd003
               LET gs_keys_bak[3] = g_gzgd003_t
               LET gs_keys[4] = g_gzgd_m.gzgd004
               LET gs_keys_bak[4] = g_gzgd004_t
               LET gs_keys[5] = g_gzgd_m.gzgd005
               LET gs_keys_bak[5] = g_gzgd005_t
               LET gs_keys[6] = g_gzgd_d[g_detail_idx].gzgd006
               LET gs_keys_bak[6] = g_gzgd_d_t.gzgd006
               CALL azzi301_update_b('gzgd_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_gzgd001_t = g_gzgd_m.gzgd001
                     LET g_gzgd002_t = g_gzgd_m.gzgd002
                     LET g_gzgd003_t = g_gzgd_m.gzgd003
                     LET g_gzgd004_t = g_gzgd_m.gzgd004
                     LET g_gzgd005_t = g_gzgd_m.gzgd005
 
                     #add-point:單頭修改後
{<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_gzgd_m_t)
                     LET g_log2 = util.JSON.stringify(g_gzgd_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
{<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi301_detail_reproduce()
               END IF
            END IF
         END IF   
           #controlp
                     
           LET g_gzgd001_t = g_gzgd_m.gzgd001
           LET g_gzgd002_t = g_gzgd_m.gzgd002
           LET g_gzgd003_t = g_gzgd_m.gzgd003
           LET g_gzgd004_t = g_gzgd_m.gzgd004
           LET g_gzgd005_t = g_gzgd_m.gzgd005
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_gzgd_d[1].gzgd006) THEN
           #   CALL g_gzgd_d.deleteElement(1)
           #   NEXT FIELD gzgd006
           #END IF
           
           IF g_gzgd_d.getLength() = 0 THEN
              NEXT FIELD gzgd006
           END IF
 
      END INPUT

{</section>}

{<section id="azzi301.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzgd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         

         #170320-00042#1 add(s)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               IF  NOT cl_null(g_gzgd_d[l_ac].gzgd000) THEN
                   CALL azzi301_ins_gzgdl(g_gzgd_d[l_ac].gzgd000)               
                   CALL n_gzgdl(g_gzgd_d[l_ac].gzgd000)
                   INITIALIZE g_ref_fields TO NULL 
                   LET g_ref_fields[1] = g_gzgd_d[l_ac].gzgd000
                   CALL ap_ref_array2(g_ref_fields," SELECT gzgdl002 FROM gzgdl_t WHERE gzgdl000 = ? AND gzgdl001 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
                   LET g_gzgd_d[l_ac].gzgdl002 = g_rtn_fields[1] 
                   DISPLAY BY NAME g_gzgd_d[l_ac].gzgdl002    
               END IF
            END IF         
         #170320-00042#1 add(e)
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzgd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi301_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            IF FGL_GETENV("DGENV") ="c" AND g_gzgd_m.gzgd003 ="s" AND p_cmd = 'u' THEN
               CALL cl_set_comp_entry("gzgd006,gzgd007",FALSE)           
            END IF            
            #add-point:資料輸入前
{<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN azzi301_cl USING 
                                               g_gzgd_m.gzgd001
                                               ,g_gzgd_m.gzgd002
                                               ,g_gzgd_m.gzgd003
                                               ,g_gzgd_m.gzgd004
                                               ,g_gzgd_m.gzgd005
 
                                               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN azzi301_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE azzi301_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_gzgd_d[l_ac].gzgd006 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzgd_d_t.* = g_gzgd_d[l_ac].*  #BACKUP
               LET g_gzgd_d_o.* = g_gzgd_d[l_ac].*  #BACKUP
               CALL azzi301_set_entry_b(l_cmd)
               #add-point:set_entry_b後
{<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL azzi301_set_no_entry_b(l_cmd)
               OPEN azzi301_bcl USING g_gzgd_m.gzgd001,
                                                g_gzgd_m.gzgd002,
                                                g_gzgd_m.gzgd003,
                                                g_gzgd_m.gzgd004,
                                                g_gzgd_m.gzgd005,
 
                                                g_gzgd_d_t.gzgd006
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN azzi301_bcl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE

                  FETCH azzi301_bcl INTO g_gzgd_d[l_ac].gzgd006,g_gzgd_d[l_ac].gzgd007,g_gzgd_d[l_ac].gzgdl002, 
                      g_gzgd_d[l_ac].gzgdownid,g_gzgd_d[l_ac].gzgdownid_desc, 
                      g_gzgd_d[l_ac].gzgdowndp,g_gzgd_d[l_ac].gzgdowndp_desc,g_gzgd_d[l_ac].gzgdcrtid, 
                      g_gzgd_d[l_ac].gzgdcrtid_desc,g_gzgd_d[l_ac].gzgdcrtdp,g_gzgd_d[l_ac].gzgdcrtdp_desc, 
                      g_gzgd_d[l_ac].gzgdcrtdt,g_gzgd_d[l_ac].gzgdmodid,g_gzgd_d[l_ac].gzgdmodid_desc, 
                      g_gzgd_d[l_ac].gzgdmoddt,g_gzgd_d[l_ac].gzgd000
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = SQLCA.sqlcode
                      LET g_errparam.extend = g_gzgd_d_t.gzgd006
                      LET g_errparam.popup = TRUE
                      CALL cl_err()

                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL azzi301_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_gzgd_d_t.* TO NULL
            INITIALIZE g_gzgd_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzgd_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生 
            CALL security.RandomGenerator.CreateUUIDString() RETURNING g_gzgd000
            LET g_gzgd_d[l_ac].gzgd000 = g_gzgd000             
            #LET g_gzgd_d[l_ac].gzgdownid = g_user  
            #LET g_gzgd_d[l_ac].gzgdowndp = g_dept  
            #LET g_gzgd_d[l_ac].gzgdcrtid = g_user
            #LET g_gzgd_d[l_ac].gzgdcrtdp = g_dept 
            #LET g_gzgd_d[l_ac].gzgdcrtdt = cl_get_current()
            #LET g_gzgd_d[l_ac].gzgdmodid = ""
            #LET g_gzgd_d[l_ac].gzgdmoddt = ""
 
            IF g_gzgd_d[l_ac].gzgd006 IS NULL THEN
               IF l_ac = 1 THEN
                  LET g_gzgd_d[l_ac].gzgd006 = 1
                  NEXT FIELD gzgd007
               ELSE
                  #NEXT FIELD gzgd006
                  SELECT max(gzgd006)+1
                  INTO g_gzgd_d[l_ac].gzgd006
                  FROM gzgd_t
                  WHERE gzgd001 = g_gzgd_m.gzgd001
                    AND gzgd002 = g_gzgd_m.gzgd002 AND gzgd003 = g_gzgd_m.gzgd003
                    AND gzgd004 = g_gzgd_m.gzgd004 AND gzgd005 = g_gzgd_m.gzgd005
                  NEXT FIELD gzgd007
               END IF
            ELSE
               NEXT FIELD gzgd006
            END IF    
            
            #一般欄位預設值
            #LET g_gzgd_d[l_ac].gzgdownid = g_user  
            #LET g_gzgd_d[l_ac].gzgdowndp = g_dept  
            #LET g_gzgd_d[l_ac].gzgdcrtid = g_user
            #LET g_gzgd_d[l_ac].gzgdcrtdp = g_dept 
            #LET g_gzgd_d[l_ac].gzgdcrtdt = cl_get_current()
            #LET g_gzgd_d[l_ac].gzgdmodid = ""
            #LET g_gzgd_d[l_ac].gzgdmoddt = ""            
            
            
            LET g_gzgd_d_t.* = g_gzgd_d[l_ac].*     #新輸入資料
            LET g_gzgd_d_o.* = g_gzgd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            IF l_ac<>0 THEN CALL azzi301_gzgdl002(l_ac) END IF 
            CALL azzi301_set_entry_b(l_cmd)
            #add-point:set_entry_b後
{<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL azzi301_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzgd_d[li_reproduce_target].* = g_gzgd_d[li_reproduce].*
 
               LET g_gzgd_d[g_gzgd_d.getLength()].gzgd006 = NULL
 
            END IF
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM gzgd_t 
             WHERE  gzgd001 = g_gzgd_m.gzgd001
               AND gzgd002 = g_gzgd_m.gzgd002
               AND gzgd003 = g_gzgd_m.gzgd003
               AND gzgd004 = g_gzgd_m.gzgd004
               AND gzgd005 = g_gzgd_m.gzgd005
 
               AND gzgd006 = g_gzgd_d[l_ac].gzgd006
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
{<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO gzgd_t
                           (gzgd000,
                            gzgd001,gzgd002,gzgd005,gzgd004,gzgd003,gzgd011,gzgd009,gzgd010,gzgd014,gzgd008,gzgd012,gzgd013,
                            gzgd006
                            ,gzgd007,gzgdownid,gzgdowndp,gzgdcrtid,gzgdcrtdp,gzgdcrtdt,gzgdmodid,gzgdmoddt,gzgdstus) 
                     VALUES(g_gzgd000,
                            g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003,g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,
                            g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013,
                            g_gzgd_d[l_ac].gzgd006,g_gzgd_d[l_ac].gzgd007,g_gzgd_d[l_ac].gzgdownid, 
                            g_gzgd_d[l_ac].gzgdowndp,g_gzgd_d[l_ac].gzgdcrtid,g_gzgd_d[l_ac].gzgdcrtdp, 
                            g_gzgd_d[l_ac].gzgdcrtdt,g_gzgd_d[l_ac].gzgdmodid,g_gzgd_d[l_ac].gzgdmoddt,g_gzgd_m.gzgdstus) 

               #add-point:單身新增中
{<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_gzgd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "gzgd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
{<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_gzgd_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_gzgd_d.deleteElement(l_ac)
               NEXT FIELD gzgd006
            END IF
            IF g_gzgd_d_t.gzgd006 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
{<point name="input.body.b_delete"/>}
               #end add-point
               
               #樣板多語言中仍有資料，詢問是否確認刪除  
               IF l_cnt > 0 THEN
                   IF NOT cl_ask_confirm_parm("azz-00660", g_gzgd_d[l_ac].gzgd000) THEN 
                      CANCEL DELETE
                   END IF
               ELSE
                   IF NOT cl_ask_del_detail() THEN
                      CANCEL DELETE
                   END IF　　                   
               END IF
               
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               IF azzi301_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE azzi301_bcl
               LET l_count = g_gzgd_d.getLength()
            END IF 
            
            #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
{<point name="input.body.after_delete"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzgd006
            #add-point:BEFORE FIELD gzgd006
{<point name="input.b.page1.gzgd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd006
            
            #add-point:AFTER FIELD gzgd006
{<point name="input.a.page1.gzgd006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd006
            #add-point:ON CHANGE gzgd006
{<point name="input.g.page1.gzgd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd007
            #add-point:BEFORE FIELD gzgd007
{<point name="input.b.page1.gzgd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd007
            
            #add-point:AFTER FIELD gzgd007
{<point name="input.a.page1.gzgd007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd007
            #add-point:ON CHANGE gzgd007
{<point name="input.g.page1.gzgd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzgd000
            #add-point:BEFORE FIELD gzgd000
{<point name="input.b.page1.gzgd000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzgd000
            
            #add-point:AFTER FIELD gzgd000
{<point name="input.a.page1.gzgd000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzgd000
            #add-point:ON CHANGE gzgd000
{<point name="input.g.page1.gzgd000" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.gzgd006
         ON ACTION controlp INFIELD gzgd006
            #add-point:ON ACTION controlp INFIELD gzgd006
{<point name="input.c.page1.gzgd006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.gzgd007
         ON ACTION controlp INFIELD gzgd007
            #add-point:ON ACTION controlp INFIELD gzgd007
{<point name="input.c.page1.gzgd007" />}
            #END add-point
            
         ON ACTION controlp INFIELD l_gzgdl002 
                       LET l_action_choice_t = g_action_choice 
                       CALL azzi301_ins_gzgdl(g_gzgd_d[g_detail_idx].gzgd000)
                       LET g_argv[1] = g_gzgd_d[g_detail_idx].gzgd000 CLIPPED
                       CALL azzi301_01(g_gzgd_d[g_detail_idx].gzgd000)
                       LET g_action_choice = l_action_choice_t
                       LET INT_FLAG = 0   
                           IF l_ac<>0 THEN CALL azzi301_gzgdl002(l_ac) END IF
                           IF NOT cl_null(g_gzgd_d[g_detail_idx].gzgd007) THEN 
                              NEXT FIELD CURRENT
                           ELSE   #否則離開input
                              CALL s_transaction_end('N','0')
                           END IF

         #Ctrlp:input.c.page1.gzgd000
         ON ACTION controlp INFIELD gzgd000
            #add-point:ON ACTION controlp INFIELD gzgd000
{<point name="input.c.page1.gzgd000" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_gzgd_d[l_ac].* = g_gzgd_d_t.*
               CLOSE azzi301_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_gzgd_d[l_ac].gzgd006
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_gzgd_d[l_ac].* = g_gzgd_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_gzgd_d[l_ac].gzgdmodid = g_user 
               LET g_gzgd_d[l_ac].gzgdmoddt = cl_get_current()
 
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE gzgd_t SET (gzgd001,gzgd002,gzgd003,gzgd004,gzgd005,gzgd006,gzgd007,gzgd009,gzgd010,gzgd014,gzgd008,
                                  gzgd012,gzgd013,gzgdstus,gzgdcrtid,gzgdcrtdp,gzgdcrtdt,gzgdmodid,gzgdmoddt) = 
                  (g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd003,g_gzgd_m.gzgd004,g_gzgd_m.gzgd005,g_gzgd_d[l_ac].gzgd006,  
                   g_gzgd_d[l_ac].gzgd007,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,
                   g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus,g_gzgd_d[l_ac].gzgdcrtid,g_gzgd_d[l_ac].gzgdcrtdp,g_gzgd_d[l_ac].gzgdcrtdt,
                   g_gzgd_d[l_ac].gzgdmodid,g_gzgd_d[l_ac].gzgdmoddt)
               WHERE gzgd001 = g_gzgd_m.gzgd001 
                 AND gzgd002 = g_gzgd_m.gzgd002 
                 AND gzgd003 = g_gzgd_m.gzgd003 
                 AND gzgd004 = g_gzgd_m.gzgd004 
                 AND gzgd005 = g_gzgd_m.gzgd005 
                 AND gzgd006 = g_gzgd_d_t.gzgd006 #項次 
 
                 
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "gzgd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "gzgd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzgd_m.gzgd001
               LET gs_keys_bak[1] = g_gzgd001_t
               LET gs_keys[2] = g_gzgd_m.gzgd002
               LET gs_keys_bak[2] = g_gzgd002_t
               LET gs_keys[3] = g_gzgd_m.gzgd003
               LET gs_keys_bak[3] = g_gzgd003_t
               LET gs_keys[4] = g_gzgd_m.gzgd004
               LET gs_keys_bak[4] = g_gzgd004_t
               LET gs_keys[5] = g_gzgd_m.gzgd005
               LET gs_keys_bak[5] = g_gzgd005_t
               LET gs_keys[6] = g_gzgd_d[g_detail_idx].gzgd006
               LET gs_keys_bak[6] = g_gzgd_d_t.gzgd006
               CALL azzi301_update_b('gzgd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_gzgd_m),util.JSON.stringify(g_gzgd_d_t)
                     LET g_log2 = util.JSON.stringify(g_gzgd_m),util.JSON.stringify(g_gzgd_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
            END IF

         AFTER ROW 
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
                INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

                LET INT_FLAG = 0
                IF p_cmd='u' THEN
                   LET g_gzgd_d[l_ac].* = g_gzgd_d_t.*
                ELSE
                   CALL g_gzgd_d.deleteElement(l_ac)
                   IF g_rec_b != 0 THEN
                      LET g_action_choice = "detail"
                      LET l_ac = l_ac_t
                   END IF
                END IF
                CLOSE azzi301_bcl
                CALL s_transaction_end('N','0')
                EXIT DIALOG
            END IF
            LET l_ac_t = l_ac 
            CLOSE azzi301_bcl
            CALL s_transaction_end('Y','0')
            ERROR "INSERT O.K"       
            
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            #IF g_gzgd_d.getLength() = 0 THEN
            #   NEXT FIELD gzgd006
            #END I
            IF cl_null(g_gzgd_d[1].gzgd006) THEN
               CALL g_gzgd_d.deleteElement(1)
               NEXT FIELD gzgd006
            END IF
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_gzgd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_gzgd_d.getLength()+1
            
      END INPUT
 
 
      
 
      
 
      
      #add-point:input段more_input
{<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
{<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD gzgd001
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzgd006
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
{<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="azzi301.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi301_show()
   #add-point:show段define
{<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
{<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL azzi301_b_fill(g_wc2) #單身填充
      CALL azzi301_b_fill2('0') #單身填充
   END IF
   
    CALL azzi301_desc("gzgd001",g_gzgd_m.gzgd001)
    CALL azzi301_desc("gzgd004",g_gzgd_m.gzgd004)
    CALL azzi301_desc("gzgd005",g_gzgd_m.gzgd005)   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi301_set_pk_array()
   #add-point:ON ACTION agendum
{<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
   LET g_gzgd_m_t.* = g_gzgd_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_gzgd_m.gzgd001,g_gzgd_m.gzgd001_desc,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd005_desc, 
       g_gzgd_m.gzgd004,g_gzgd_m.gzgd004_desc,g_gzgd_m.gzgd003,g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,
       g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012 ,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus
       
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_gzgd_m.gzgdstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      END CASE
     
   #CALL azzi301_show_paper_size() #141031 mark  
   CALL azzi301_b_fill(g_wc2_table1)                 #單身
   CALL azzi301_b_fill2('0') #單身填充
 
   CALL azzi301_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
{<point name="show.after"/>}
   #end add-point   
   
END FUNCTION

{</section>}

{<section id="azzi301.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION azzi301_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzgd_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION

{</section>}

{<section id="azzi301.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION azzi301_reproduce()
   DEFINE l_newno       LIKE gzgd_t.gzgd001 
   DEFINE l_oldno       LIKE gzgd_t.gzgd001 
   DEFINE l_newno02     LIKE gzgd_t.gzgd002 
   DEFINE l_oldno02     LIKE gzgd_t.gzgd002 
   DEFINE l_newno03     LIKE gzgd_t.gzgd003 
   DEFINE l_oldno03     LIKE gzgd_t.gzgd003 
   DEFINE l_newno04     LIKE gzgd_t.gzgd004 
   DEFINE l_oldno04     LIKE gzgd_t.gzgd004 
   DEFINE l_newno05     LIKE gzgd_t.gzgd005 
   DEFINE l_oldno05     LIKE gzgd_t.gzgd005 
   DEFINE l_master      RECORD LIKE gzgd_t.*
   DEFINE l_detail      RECORD LIKE gzgd_t.* 
   DEFINE l_cnt         LIKE type_t.num5
   #add-point:reproduce段define
{<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_gzgd_m.gzgd001 IS NULL
      OR g_gzgd_m.gzgd002 IS NULL
      OR g_gzgd_m.gzgd003 IS NULL
      OR g_gzgd_m.gzgd004 IS NULL
      OR g_gzgd_m.gzgd005 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   LET g_gzgd001_t = g_gzgd_m.gzgd001
   LET g_gzgd002_t = g_gzgd_m.gzgd002
   LET g_gzgd003_t = g_gzgd_m.gzgd003
   LET g_gzgd004_t = g_gzgd_m.gzgd004
   LET g_gzgd005_t = g_gzgd_m.gzgd005
 
   
   LET g_gzgd_m.gzgd001 = ""
   LET g_gzgd_m.gzgd002 = ""
   LET g_gzgd_m.gzgd003 = ""
   IF FGL_GETENV("DGENV") ="c" THEN
     LET g_gzgd_m.gzgd003 ="c"
   ELSE
      LET g_gzgd_m.gzgd003 ="s"
   END IF   
   LET g_gzgd_m.gzgd004 = ""
   LET g_gzgd_m.gzgd005 = ""
 
   LET g_gzgd_m.gzgd001_desc = ""
   DISPLAY BY NAME g_gzgd_m.gzgd001_desc
   LET g_gzgd_m.gzgd004_desc = ""
   DISPLAY BY NAME g_gzgd_m.gzgd004_desc
   LET g_gzgd_m.gzgd005_desc = ""
   DISPLAY BY NAME g_gzgd_m.gzgd005_desc
   
   CALL azzi301_set_entry('a')
   CALL azzi301_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
{<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL azzi301_input("r")
  
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(", g_wc,  
              " OR (",
              " gzgd001 = '", l_newno CLIPPED, "' "
              ," AND gzgd002 = '", l_newno02 CLIPPED, "' "
              ," AND gzgd003 = '", l_newno03 CLIPPED, "' "
              ," AND gzgd004 = '", l_newno04 CLIPPED, "' "
              ," AND gzgd005 = '", l_newno05 CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
{<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="azzi301.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION azzi301_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzgd_t.*
 
 
   #add-point:delete段define
{<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi301_detail
   
   #add-point:單身複製前1
{<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE azzi301_detail AS ",
                "SELECT * FROM gzgd_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO azzi301_detail SELECT * FROM gzgd_t 
                                         WHERE  gzgd001 = g_gzgd001_t
                                         AND gzgd002 = g_gzgd002_t
                                         AND gzgd003 = g_gzgd003_t
                                         AND gzgd004 = g_gzgd004_t
                                         AND gzgd005 = g_gzgd005_t
 
   
   #將key修正為調整後   
   UPDATE azzi301_detail 
      #更新key欄位
      SET gzgd001 = g_gzgd_m.gzgd001
          , gzgd002 = g_gzgd_m.gzgd002
          , gzgd003 = g_gzgd_m.gzgd003
          , gzgd004 = g_gzgd_m.gzgd004
          , gzgd005 = g_gzgd_m.gzgd005
#          , gzgd008 = "N"               #161115-00047#1 mark
          #161115-00047#1 add(s)
          , gzgd008 = g_gzgd_m.gzgd008
          , gzgd009 = g_gzgd_m.gzgd009
          , gzgd010 = g_gzgd_m.gzgd010
          , gzgd011 = g_gzgd_m.gzgd011
          , gzgd012 = g_gzgd_m.gzgd012
          , gzgd013 = g_gzgd_m.gzgd013
          , gzgd014 = g_gzgd_m.gzgd014
          , gzgdstus = g_gzgd_m.gzgdstus
          #161115-00047#1 add(e)
          
      #更新共用欄位
      #此段落由子樣板a13產生
       , gzgdownid = g_user
       , gzgdowndp = g_dept
       , gzgdcrtid = g_user
       , gzgdcrtdp = g_dept 
       , gzgdcrtdt = ld_date
       , gzgdmodid = "" 
       , gzgdmoddt = "" 
 
   LET g_sql = " SELECT gzgd000, gzgd006,gzgd007 FROM gzgd_t ",     
               " WHERE gzgd001 = '",g_gzgd001_t,"' AND gzgd002 = '",g_gzgd002_t,"'",
               "   AND gzgd003 = '",g_gzgd003_t,"' AND gzgd004 = '",g_gzgd004_t,"'",
               "   AND gzgd005 = '",g_gzgd005_t,"'"
               
   PREPARE gzgd006_pre FROM g_sql
   DECLARE gzgd006_cur CURSOR FOR gzgd006_pre 
                                       
   FOREACH gzgd006_cur INTO l_gzgd000_t, l_gzgd006,l_gzgd007   
      CALL security.RandomGenerator.CreateUUIDString() RETURNING l_gzgd000
      LET l_str = l_gzgd007 CLIPPED
      LET l_str = cl_replace_str(l_str,g_gzgd_m_t.gzgd002 CLIPPED,g_gzgd_m.gzgd002 CLIPPED)
      LET l_gzgd007 = l_str CLIPPED      
      
      UPDATE azzi301_detail 
         SET gzgd000 = l_gzgd000,
             gzgd007 = l_gzgd007
       WHERE gzgd001 = g_gzgd_m.gzgd001
         AND gzgd002 = g_gzgd_m.gzgd002
         AND gzgd003 = g_gzgd_m.gzgd003
         AND gzgd004 = g_gzgd_m.gzgd004
         AND gzgd005 = g_gzgd_m.gzgd005
         AND gzgd006 = l_gzgd006


      LET l_gzgdl_cnt = 0          
      SELECT COUNT(*) INTO l_gzgdl_cnt FROM gzgdl_t WHERE gzgdl000 = l_gzgd000
      IF l_gzgdl_cnt = 0 THEN 
          LET l_gzgdl_cnt = 0
          SELECT COUNT(*) INTO l_gzgdl_cnt_1 FROM gzgdl_t WHERE gzgdl000 = l_gzgd000_t
          IF l_gzgdl_cnt_1 > 0 THEN  #有值才複製
              #抓出舊的gzgdl值
              LET lc_wc2=""
              LET lc_wc2="gzgdl000 = '",l_gzgd000_t,"'"
              LET g_sql = "SELECT gzgdl000,gzgdl001,gzgdl002",
                           "  FROM gzgdl_t",
                           " WHERE ",lc_wc2 CLIPPED,
                           " ORDER BY gzgdl000"
               PREPARE p_gzgdl_pb FROM g_sql
               DECLARE gzgdl_curs CURSOR FOR p_gzgdl_pb
             
               CALL g_gzgdl.clear()
             
               LET g_cnt = 1                              
               FOREACH gzgdl_curs INTO g_gzgdl[g_cnt].*                      
                  IF STATUS THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = STATUS
                     LET g_errparam.extend = 'FOREACH gzgdl:'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     EXIT FOREACH
                  END IF
                  LET g_cnt = g_cnt + 1
               END FOREACH
               CALL g_gzgdl.deleteElement(g_cnt)
               FOR l_i= 1 TO g_cnt 
                 INSERT INTO gzgdl_t VALUES (l_gzgd000,g_gzgdl[l_i].gzgdl001,g_gzgdl[l_i].gzgdl002)
               END  FOR 
          END IF   #IF l_gzgdl_cnt>0 THEN 第二個
      END IF  
   END FOREACH   
   
   #將資料塞回原table   
   INSERT INTO gzgd_t SELECT * FROM azzi301_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   
   #add-point:單身複製中1
{<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi301_detail
   
   #add-point:單身複製後1
{<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzgd001_t = g_gzgd_m.gzgd001
   LET g_gzgd002_t = g_gzgd_m.gzgd002
   LET g_gzgd003_t = g_gzgd_m.gzgd003
   LET g_gzgd004_t = g_gzgd_m.gzgd004
   LET g_gzgd005_t = g_gzgd_m.gzgd005
 
   CLOSE gzgd006_cur 
   CLOSE gzgdl_curs 
   DROP TABLE azzi301_detail
   
END FUNCTION

{</section>}

{<section id="azzi301.delete" >}
#+ 資料刪除
PRIVATE FUNCTION azzi301_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
{<point name="delete.define"/>}
   #end add-point     
   
   IF g_gzgd_m.gzgd001 IS NULL
   OR g_gzgd_m.gzgd002 IS NULL
   OR g_gzgd_m.gzgd003 IS NULL
   OR g_gzgd_m.gzgd004 IS NULL
   OR g_gzgd_m.gzgd005 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   ##客製不能改標準的資料 -(s) 
#   IF FGL_GETENV("DGENV") ="c" AND g_gzgd_m.gzgd003 ="s" THEN  #150608-00030#2 mark
   IF FGL_GETENV("DGENV") ="c" AND g_gzgd_m.gzgd003 ="s" AND g_gzgd_m.gzgd004 ="default" AND g_gzgd_m.gzgd005 ="default" THEN  #150608-00030#2 add
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "azz-00712"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF   
   ##客製不能改標準的資料 -(e)
   
   EXECUTE azzi301_master_referesh USING g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd003,g_gzgd_m.gzgd004, 
       g_gzgd_m.gzgd005 INTO g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd004,g_gzgd_m.gzgd003, 
       g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd008,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013,g_gzgd_m.gzgdstus 
   
   CALL azzi301_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN azzi301_cl USING g_gzgd_m.gzgd001
                                                       ,g_gzgd_m.gzgd002
                                                       ,g_gzgd_m.gzgd003
                                                       ,g_gzgd_m.gzgd004
                                                       ,g_gzgd_m.gzgd005
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN azzi301_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE azzi301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi301_cl INTO g_gzgd_m.gzgd001,g_gzgd_m.gzgd001_desc,g_gzgd_m.gzgd002,g_gzgd_m.gzgd005,g_gzgd_m.gzgd005_desc, 
       g_gzgd_m.gzgd004,g_gzgd_m.gzgd004_desc,g_gzgd_m.gzgd003,g_gzgd_m.gzgd011,g_gzgd_m.gzgd009,g_gzgd_m.gzgd010,g_gzgd_m.gzgd014,g_gzgd_m.gzgd012,g_gzgd_m.gzgd013
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_gzgd_m.gzgd001
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi301_set_pk_array()
      #add-point:相關文件刪除前
{<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM gzgd_t WHERE  gzgd001 = g_gzgd_m.gzgd001
                                                               AND gzgd002 = g_gzgd_m.gzgd002
                                                               AND gzgd003 = g_gzgd_m.gzgd003
                                                               AND gzgd004 = g_gzgd_m.gzgd004
                                                               AND gzgd005 = g_gzgd_m.gzgd005
 
                                                               
      #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "gzgd_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
{<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_gzgd_d.clear() 
 
     
      CALL azzi301_ui_browser_refresh()  
      CALL azzi301_ui_headershow()  
      CALL azzi301_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL azzi301_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL azzi301_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE azzi301_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzgd_m.gzgd001,'D')
    
END FUNCTION

{</section>}

{<section id="azzi301.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION azzi301_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_gzgd_d.clear()
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE gzgd006,gzgd007,gzgdl002,gzgdownid,'',gzgdowndp,'',gzgdcrtid,'',gzgdcrtdp,'',gzgdcrtdt,gzgdmodid,'', 
       gzgdmoddt,gzgd000,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 FROM gzgd_t",  
         
               "",
               " LEFT JOIN gzgdl_t ON gzgd000 = gzgdl000 AND gzgdl001 = '" ||g_lang|| "'",
               
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=gzgdownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=gzgdowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=gzgdcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=gzgdcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=gzgdmodid  ",
 
               " WHERE gzgd001=? AND gzgd002=? AND gzgd003=? AND gzgd004=? AND gzgd005=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("gzgd_t")
   END IF
   
   #add-point:b_fill段sql_after
{<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF azzi301_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY gzgd_t.gzgd006"
      
      #add-point:b_fill段fill_before
{<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE azzi301_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR azzi301_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_gzgd_m.gzgd001,g_gzgd_m.gzgd002,g_gzgd_m.gzgd003,g_gzgd_m.gzgd004,g_gzgd_m.gzgd005
                                               
      FOREACH b_fill_cs INTO g_gzgd_d[l_ac].gzgd006,g_gzgd_d[l_ac].gzgd007,g_gzgd_d[l_ac].gzgdl002, 
          g_gzgd_d[l_ac].gzgdownid,g_gzgd_d[l_ac].gzgdownid_desc, 
          g_gzgd_d[l_ac].gzgdowndp,g_gzgd_d[l_ac].gzgdowndp_desc,g_gzgd_d[l_ac].gzgdcrtid,g_gzgd_d[l_ac].gzgdcrtid_desc, 
          g_gzgd_d[l_ac].gzgdcrtdp,g_gzgd_d[l_ac].gzgdcrtdp_desc,g_gzgd_d[l_ac].gzgdcrtdt,g_gzgd_d[l_ac].gzgdmodid, 
          g_gzgd_d[l_ac].gzgdmodid_desc,g_gzgd_d[l_ac].gzgdmoddt,g_gzgd_d[l_ac].gzgd000
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         #此段落由子樣板a12產生
      #LET g_gzgd_d[l_ac].gzgdownid_desc = cl_get_username(g_gzgd_d[l_ac].gzgdownid)
      #LET g_gzgd_d[l_ac].gzgdowndp_desc = cl_get_deptname(g_gzgd_d[l_ac].gzgdowndp)
      #LET g_gzgd_d[l_ac].gzgdcrtid_desc = cl_get_username(g_gzgd_d[l_ac].gzgdcrtid)
      #LET g_gzgd_d[l_ac].gzgdcrtdp_desc = cl_get_deptname(g_gzgd_d[l_ac].gzgdcrtdp)
      #LET g_gzgd_d[l_ac].gzgdmodid_desc = cl_get_username(g_gzgd_d[l_ac].gzgdmodid)
      
 
 
         
 
        
         #add-point:單身資料抓取
{<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_gzgd_d.deleteElement(g_gzgd_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
{<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE azzi301_pb   
   
END FUNCTION

{</section>}

{<section id="azzi301.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION azzi301_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION

{</section>}

{<section id="azzi301.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION azzi301_before_delete()
   #add-point:before_delete段define
{<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
{<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   #DELETE FROM gzgd_t
   # WHERE  gzgd001 = g_gzgd_m.gzgd001 AND
   #                           gzgd002 = g_gzgd_m.gzgd002 AND
   #                           gzgd003 = g_gzgd_m.gzgd003 AND
   #                           gzgd004 = g_gzgd_m.gzgd004 AND
   #                           gzgd005 = g_gzgd_m.gzgd005 AND
 
   #       gzgd006 = g_gzgd_d_t.gzgd006
   DELETE FROM gzgd_t
    WHERE gzgd000 = g_gzgd_d[l_ac].gzgd000 
      
   #add-point:單筆刪除中
{<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "gzgd_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      DELETE FROM gzge_t 
            WHERE gzge000 = g_gzgd_d[l_ac].gzgd000
      IF SQLCA.sqlcode THEN
          #CALL cl_err3("del","gzge_t",g_gzgd_d[l_ac].gzgd000,'',SQLCA.sqlcode,"","",0)
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = SQLCA.sqlcode
          LET g_errparam.extend = "gzge_t"
          LET g_errparam.popup = FALSE          
          CALL cl_err()
          RETURN FALSE
      END IF 
   END IF
   
   #add-point:單筆刪除後
{<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION

{</section>}

{<section id="azzi301.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi301_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
{<point name="delete_b.define"/>}
   #end add-point     
 
   RETURN TRUE 
   
END FUNCTION

{</section>}

{<section id="azzi301.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi301_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION

{</section>}

{<section id="azzi301.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi301_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION

{</section>}

{<section id="azzi301.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi301_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL azzi301_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="azzi301.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi301_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION

{</section>}

{<section id="azzi301.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi301_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
{<point name="set_entry.define"/>}
   #end add-point       
 
   IF INFIELD(gzgd005) THEN
      IF g_gzgd_m.gzgd005 = 'default' THEN
         CALL cl_set_comp_entry("gzgd005",TRUE)
      END IF
   END IF
   
   IF INFIELD(gzgd004) THEN
      IF g_gzgd_m.gzgd004 = 'default' THEN
         CALL cl_set_comp_entry("gzgd004",TRUE)
      END IF
   END IF 
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzgd001,gzgd002,gzgd003,gzgd004,gzgd005,gzgd006",TRUE)
      #add-point:set_entry段欄位控制
{<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
{<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="azzi301.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi301_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
{<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      #CALL cl_set_comp_entry("gzgd001,gzgd002,gzgd003,gzgd004,gzgd005",FALSE)
      CALL cl_set_comp_entry("gzgd001",FALSE)
      #add-point:set_no_entry段欄位控制
{<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
{<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="azzi301.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi301_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="azzi301.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi301_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="azzi301.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION azzi301_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
{<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
{<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzgd001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " gzgd002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " gzgd003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " gzgd004 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " gzgd005 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " gzgd006 = '", g_argv[06], "' AND "
   END IF 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
{<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="azzi301.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION azzi301_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
{<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
{<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="azzi301.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION azzi301_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "gzgd006"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION

{</section>}

{<section id="azzi301.state_change" >}
    

{</section>}

{<section id="azzi301.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi301_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzgd_m.gzgd001
   LET g_pk_array[1].column = 'gzgd001'
   LET g_pk_array[2].values = g_gzgd_m.gzgd002
   LET g_pk_array[2].column = 'gzgd002'
   LET g_pk_array[3].values = g_gzgd_m.gzgd003
   LET g_pk_array[3].column = 'gzgd003'
   LET g_pk_array[4].values = g_gzgd_m.gzgd004
   LET g_pk_array[4].column = 'gzgd004'
   LET g_pk_array[5].values = g_gzgd_m.gzgd005
   LET g_pk_array[5].column = 'gzgd005'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="azzi301.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

