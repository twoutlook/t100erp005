#該程式未解開Section, 採用最新樣板產出!
{<section id="azzi070.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0013(2015-04-15 17:01:30), PR版次:0013(2016-09-13 15:50:19)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000238
#+ Filename...: azzi070
#+ Description: 模組設定作業
#+ Creator....: 01856(2013-12-11 00:00:00)
#+ Modifier...: 01856 -SD/PR- 01856
 
{</section>}
 
{<section id="azzi070.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#+ Modifier...: No.160318-00005#55  2016/03/31   pengxin   修正azzi902重复定义之错误讯息
#+ Modifier...: No.160506-00033#1   2016/05/06   By jrg542 azzi070 單身新增資料的時候，程式會掛掉
#+ Modifier...: No.160913-00020#2   2016/09/13   By jrg542 然後限制不可以設定 ATT/MTT 模組 (此模組編號產出的表格會被誤判為臨時表，不可以使用此編號，請重新選擇編號)
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzzj_m        RECORD
       gzzo006 LIKE gzzo_t.gzzo006, 
   gzzj001 LIKE gzzj_t.gzzj001, 
   gzzol003 LIKE gzzol_t.gzzol003, 
   gzzol004 LIKE gzzol_t.gzzol004, 
   gzzo007 LIKE gzzo_t.gzzo007, 
   gzzj002 LIKE gzzj_t.gzzj002, 
   gzzjstus LIKE gzzj_t.gzzjstus, 
   gzzo004 LIKE gzzo_t.gzzo004, 
   gzzo005 LIKE gzzo_t.gzzo005, 
   gzzo008 LIKE gzzo_t.gzzo008, 
   gzzjownid LIKE gzzj_t.gzzjownid, 
   gzzjownid_desc LIKE type_t.chr80, 
   gzzjowndp LIKE gzzj_t.gzzjowndp, 
   gzzjowndp_desc LIKE type_t.chr80, 
   gzzjcrtid LIKE gzzj_t.gzzjcrtid, 
   gzzjcrtid_desc LIKE type_t.chr80, 
   gzzjcrtdp LIKE gzzj_t.gzzjcrtdp, 
   gzzjcrtdp_desc LIKE type_t.chr80, 
   gzzjcrtdt LIKE gzzj_t.gzzjcrtdt, 
   gzzjmodid LIKE gzzj_t.gzzjmodid, 
   gzzjmodid_desc LIKE type_t.chr80, 
   gzzjmoddt LIKE gzzj_t.gzzjmoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzzn_d        RECORD
       gzzn003 LIKE gzzn_t.gzzn003, 
   gzzn002 LIKE gzzn_t.gzzn002, 
   gzzn002_desc LIKE type_t.chr500
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_gzzj001 LIKE gzzj_t.gzzj001,
   b_gzzj001_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_link   DYNAMIC ARRAY OF STRING 
DEFINE gs_gzze003_b   LIKE gzze_t.gzze003
DEFINE gs_gzze003_c   LIKE gzze_t.gzze003
DEFINE gs_gzze003_d   LIKE gzze_t.gzze003
#end add-point
       
#模組變數(Module Variables)
DEFINE g_gzzj_m          type_g_gzzj_m
DEFINE g_gzzj_m_t        type_g_gzzj_m
DEFINE g_gzzj_m_o        type_g_gzzj_m
DEFINE g_gzzj_m_mask_o   type_g_gzzj_m #轉換遮罩前資料
DEFINE g_gzzj_m_mask_n   type_g_gzzj_m #轉換遮罩後資料
 
   DEFINE g_gzzj001_t LIKE gzzj_t.gzzj001
 
 
DEFINE g_gzzn_d          DYNAMIC ARRAY OF type_g_gzzn_d
DEFINE g_gzzn_d_t        type_g_gzzn_d
DEFINE g_gzzn_d_o        type_g_gzzn_d
DEFINE g_gzzn_d_mask_o   DYNAMIC ARRAY OF type_g_gzzn_d #轉換遮罩前資料
DEFINE g_gzzn_d_mask_n   DYNAMIC ARRAY OF type_g_gzzn_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      gzzol001 LIKE gzzol_t.gzzol001,
      gzzol003 LIKE gzzol_t.gzzol003,
      gzzol004 LIKE gzzol_t.gzzol004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="azzi070.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT '',gzzj001,'','','',gzzj002,gzzjstus,'','','',gzzjownid,'',gzzjowndp, 
       '',gzzjcrtid,'',gzzjcrtdp,'',gzzjcrtdt,gzzjmodid,'',gzzjmoddt", 
                      " FROM gzzj_t",
                      " WHERE gzzj001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi070_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.gzzj001,t0.gzzj002,t0.gzzjstus,t0.gzzjownid,t0.gzzjowndp,t0.gzzjcrtid, 
       t0.gzzjcrtdp,t0.gzzjcrtdt,t0.gzzjmodid,t0.gzzjmoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011",
               " FROM gzzj_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.gzzjownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.gzzjowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.gzzjcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.gzzjcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.gzzjmodid  ",
 
               " WHERE  t0.gzzj001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE azzi070_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi070 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi070_init()   
 
      #進入選單 Menu (="N")
      CALL azzi070_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi070
      
   END IF 
   
   CLOSE azzi070_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="azzi070.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi070_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('gzzjstus','17','N,Y')
 
      CALL cl_set_combo_scc('gzzo006','107') 
   CALL cl_set_combo_scc('gzzj002','88') 
   CALL cl_set_combo_scc('gzzo008','109') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_azzi030_cb_gzha001("gzzo004")                    #佈景編號ComboBox
   CALL cl_set_combo_industry("gzzo007")
   SELECT gzze003 INTO gs_gzze003_b FROM gzze_t
    WHERE gzze001 = "lib-488"
      AND gzze002 = g_lang

   SELECT gzze003 INTO gs_gzze003_c FROM gzze_t
    WHERE gzze001 = "lib-486"
      AND gzze002 = g_lang

   SELECT gzze003 INTO gs_gzze003_d FROM gzze_t
    WHERE gzze001 = "lib-487"
      AND gzze002 = g_lang
   
   #end add-point
   
   #初始化搜尋條件
   CALL azzi070_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="azzi070.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION azzi070_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi070_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_gzzj_m.* TO NULL
         CALL g_gzzn_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL azzi070_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL azzi070_fetch('') # reload data
               LET l_ac = 1
               CALL azzi070_ui_detailshow() #Setting the current row 
         
               CALL azzi070_idx_chk()
               #NEXT FIELD gzzn002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_gzzn_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL azzi070_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL azzi070_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL azzi070_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi070_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi070_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL azzi070_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL azzi070_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL azzi070_set_act_visible()   
            CALL azzi070_set_act_no_visible()
            IF NOT (g_gzzj_m.gzzj001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " ",
                                  " gzzj001 = '", g_gzzj_m.gzzj001, "' "
 
               #填到對應位置
               CALL azzi070_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gzzj_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzzn_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL azzi070_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gzzj_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gzzn_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL azzi070_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL azzi070_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL azzi070_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL azzi070_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi070_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL azzi070_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi070_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL azzi070_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi070_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL azzi070_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi070_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL azzi070_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi070_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_gzzn_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzzn002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION createxcf_module
            LET g_action_choice="createxcf_module"
            IF cl_auth_chk_act("createxcf_module") THEN
               
               #add-point:ON ACTION createxcf_module name="menu.createxcf_module"
               CALL s_azzi030_createxcf_module(TRUE,g_gzzj_m.gzzj001,TRUE)   #產生模組xcf              
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi070_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi070_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi070_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi070_insert()
               #add-point:ON ACTION insert name="menu.insert"
 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION gen_module_link
            LET g_action_choice="gen_module_link"
            IF cl_auth_chk_act("gen_module_link") THEN
               
               #add-point:ON ACTION gen_module_link name="menu.gen_module_link"
               IF g_gzzj_m.gzzj001 IS NULL THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ""
                  LET g_errparam.code   = "std-00003"
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()
                  CONTINUE DIALOG
               END IF
               LET g_link[1] = g_gzzj_m.gzzj001
               CALL azzi070_gen_link() 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi070_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi070_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL azzi070_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi070_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi070_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="azzi070.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi070_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT gzzj001 ",
                      " FROM gzzj_t ",
                      " LEFT JOIN gzzo_t ON gzzj001 = gzzo001 ",
                      " LEFT JOIN gzzn_t ON gzzj001 = gzzn001 ", "  ",
                      #add-point:browser_fill段sql(gzzn_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " LEFT JOIN gzzol_t ON gzzj001 = gzzol001 AND gzzol002 = '",g_dlang,"' ", 
                      " ", 
 
 
                      " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzzj_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT gzzj001 ",
                      " FROM gzzj_t ", 
                      "  LEFT JOIN gzzo_t ON gzzj001 = gzzo001 ",
                      "  LEFT JOIN gzzol_t ON gzzj001 = gzzol001 AND gzzol002 = '",g_dlang,"' ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("gzzj_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_gzzj_m.* TO NULL
      CALL g_gzzn_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
 
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.gzzj001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.gzzjstus,t0.gzzj001,t1.gzzjl003 ",
                  " FROM gzzj_t t0",
                  "  LEFT JOIN gzzo_t ON gzzj001 = gzzo001 ",
                  "  LEFT JOIN gzzn_t ON gzzj001 = gzzn001 ", "  ", 
                  #add-point:browser_fill段sql(gzzn_t1) name="browser_fill.join.gzzn_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                                 " LEFT JOIN gzzjl_t t1 ON t1.gzzjl001=t0.gzzj001 AND t1.gzzjl002='"||g_lang||"' ",
 
               " LEFT JOIN gzzol_t ON gzzj001 = gzzol001 AND gzzol002 = '",g_dlang,"' ",
                  " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("gzzj_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.gzzjstus,t0.gzzj001,t1.gzzjl003 ",
                  " FROM gzzj_t t0",
                  "  LEFT JOIN gzzo_t ON gzzj001 = gzzo001 ",
                                 " LEFT JOIN gzzjl_t t1 ON t1.gzzjl001=t0.gzzj001 AND t1.gzzjl002='"||g_lang||"' ",
 
               " LEFT JOIN gzzol_t ON gzzj001 = gzzol001 AND gzzol002 = '",g_dlang,"' ",
                  " WHERE  ",l_wc, cl_sql_add_filter("gzzj_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
    LET g_sql = " SELECT DISTINCT t0.gzzjstus,t0.gzzj001,gzzj003 ",
                " FROM gzzj_t t0",
                "  ",
                "  LEFT JOIN gzzn_t ON gzzj001 = gzzn001 ",
               #"  "," LEFT JOIN gzzol_t t1 ON t1.gzzol001=t0.gzzj001 AND t1.gzzol002='"||g_lang||"' ",
 
               " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("gzzj_t")

   #end add-point
   LET g_sql = g_sql, " ORDER BY gzzj001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"gzzj_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gzzj001,g_browser[g_cnt].b_gzzj001_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
      LET g_browser[g_cnt].b_gzzj001_desc = azzi070_desc_show(g_browser[g_cnt].b_gzzj001,g_browser[g_cnt].b_gzzj001_desc)
         #end add-point
      
         #遮罩相關處理
         CALL azzi070_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_gzzj001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi070_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_gzzj_m.gzzj001 = g_browser[g_current_idx].b_gzzj001   
 
   EXECUTE azzi070_master_referesh USING g_gzzj_m.gzzj001 INTO g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus, 
       g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt, 
       g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt,g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjmodid_desc
                  CALL azzi070_gzzo_t('s')
   CALL azzi070_gzzj_t_mask()
   CALL azzi070_show()
      
END FUNCTION
 
{</section>}
 
{<section id="azzi070.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION azzi070_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi070_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   DEFINE ls_str STRING 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzzj001 = g_gzzj_m.gzzj001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   LET ls_str = g_gzzj_m.gzzj001
   IF ls_str.subString(1,1) = 'A' THEN 
      LET ls_str = 'C',ls_str.subString(2,3)
   ELSE 
      LET ls_str = 'D',ls_str.subString(2,3)
   END IF
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzzj001 = ls_str
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi070_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gzzj_m.* TO NULL
   CALL g_gzzn_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzzo006,gzzj001,gzzol003,gzzol004,gzzo007,gzzj002,gzzjstus,gzzo004,gzzo005, 
          gzzo008,gzzjownid,gzzjowndp,gzzjcrtid,gzzjcrtdp,gzzjcrtdt,gzzjmodid,gzzjmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<gzzjcrtdt>>----
         AFTER FIELD gzzjcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gzzjmoddt>>----
         AFTER FIELD gzzjmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzzjcnfdt>>----
         
         #----<<gzzjpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo006
            #add-point:BEFORE FIELD gzzo006 name="construct.b.gzzo006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo006
            
            #add-point:AFTER FIELD gzzo006 name="construct.a.gzzo006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzo006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo006
            #add-point:ON ACTION controlp INFIELD gzzo006 name="construct.c.gzzo006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzj001
            #add-point:BEFORE FIELD gzzj001 name="construct.b.gzzj001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzj001
            
            #add-point:AFTER FIELD gzzj001 name="construct.a.gzzj001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzj001
            #add-point:ON ACTION controlp INFIELD gzzj001 name="construct.c.gzzj001"
            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_gzzo001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzzj001  #顯示到畫面上

            NEXT FIELD gzzj001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzol003
            #add-point:BEFORE FIELD gzzol003 name="construct.b.gzzol003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzol003
            
            #add-point:AFTER FIELD gzzol003 name="construct.a.gzzol003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzol003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzol003
            #add-point:ON ACTION controlp INFIELD gzzol003 name="construct.c.gzzol003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzol004
            #add-point:BEFORE FIELD gzzol004 name="construct.b.gzzol004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzol004
            
            #add-point:AFTER FIELD gzzol004 name="construct.a.gzzol004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzol004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzol004
            #add-point:ON ACTION controlp INFIELD gzzol004 name="construct.c.gzzol004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo007
            #add-point:BEFORE FIELD gzzo007 name="construct.b.gzzo007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo007
            
            #add-point:AFTER FIELD gzzo007 name="construct.a.gzzo007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzo007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo007
            #add-point:ON ACTION controlp INFIELD gzzo007 name="construct.c.gzzo007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzj002
            #add-point:BEFORE FIELD gzzj002 name="construct.b.gzzj002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzj002
            
            #add-point:AFTER FIELD gzzj002 name="construct.a.gzzj002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzj002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzj002
            #add-point:ON ACTION controlp INFIELD gzzj002 name="construct.c.gzzj002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjstus
            #add-point:BEFORE FIELD gzzjstus name="construct.b.gzzjstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzjstus
            
            #add-point:AFTER FIELD gzzjstus name="construct.a.gzzjstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzjstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzjstus
            #add-point:ON ACTION controlp INFIELD gzzjstus name="construct.c.gzzjstus"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo004
            #add-point:BEFORE FIELD gzzo004 name="construct.b.gzzo004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo004
            
            #add-point:AFTER FIELD gzzo004 name="construct.a.gzzo004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzo004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo004
            #add-point:ON ACTION controlp INFIELD gzzo004 name="construct.c.gzzo004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo005
            #add-point:BEFORE FIELD gzzo005 name="construct.b.gzzo005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo005
            
            #add-point:AFTER FIELD gzzo005 name="construct.a.gzzo005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzo005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo005
            #add-point:ON ACTION controlp INFIELD gzzo005 name="construct.c.gzzo005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo008
            #add-point:BEFORE FIELD gzzo008 name="construct.b.gzzo008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo008
            
            #add-point:AFTER FIELD gzzo008 name="construct.a.gzzo008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzo008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo008
            #add-point:ON ACTION controlp INFIELD gzzo008 name="construct.c.gzzo008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjownid
            #add-point:BEFORE FIELD gzzjownid name="construct.b.gzzjownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzjownid
            
            #add-point:AFTER FIELD gzzjownid name="construct.a.gzzjownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzjownid
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzjownid
            #add-point:ON ACTION controlp INFIELD gzzjownid name="construct.c.gzzjownid"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjowndp
            #add-point:BEFORE FIELD gzzjowndp name="construct.b.gzzjowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzjowndp
            
            #add-point:AFTER FIELD gzzjowndp name="construct.a.gzzjowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzjowndp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzjowndp
            #add-point:ON ACTION controlp INFIELD gzzjowndp name="construct.c.gzzjowndp"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjcrtid
            #add-point:BEFORE FIELD gzzjcrtid name="construct.b.gzzjcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzjcrtid
            
            #add-point:AFTER FIELD gzzjcrtid name="construct.a.gzzjcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzjcrtid
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzjcrtid
            #add-point:ON ACTION controlp INFIELD gzzjcrtid name="construct.c.gzzjcrtid"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjcrtdp
            #add-point:BEFORE FIELD gzzjcrtdp name="construct.b.gzzjcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzjcrtdp
            
            #add-point:AFTER FIELD gzzjcrtdp name="construct.a.gzzjcrtdp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzjcrtdp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzjcrtdp
            #add-point:ON ACTION controlp INFIELD gzzjcrtdp name="construct.c.gzzjcrtdp"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjcrtdt
            #add-point:BEFORE FIELD gzzjcrtdt name="construct.b.gzzjcrtdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjmodid
            #add-point:BEFORE FIELD gzzjmodid name="construct.b.gzzjmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzjmodid
            
            #add-point:AFTER FIELD gzzjmodid name="construct.a.gzzjmodid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzzjmodid
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzjmodid
            #add-point:ON ACTION controlp INFIELD gzzjmodid name="construct.c.gzzjmodid"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjmoddt
            #add-point:BEFORE FIELD gzzjmoddt name="construct.b.gzzjmoddt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON gzzn003,gzzn002
           FROM s_detail1[1].gzzn003,s_detail1[1].gzzn002
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzn003
            #add-point:BEFORE FIELD gzzn003 name="construct.b.page1.gzzn003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzn003
            
            #add-point:AFTER FIELD gzzn003 name="construct.a.page1.gzzn003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gzzn003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzn003
            #add-point:ON ACTION controlp INFIELD gzzn003 name="construct.c.page1.gzzn003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzn002
            #add-point:BEFORE FIELD gzzn002 name="construct.b.page1.gzzn002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzn002
            
            #add-point:AFTER FIELD gzzn002 name="construct.a.page1.gzzn002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gzzn002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzn002
            #add-point:ON ACTION controlp INFIELD gzzn002 name="construct.c.page1.gzzn002"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "gzzj_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "gzzn_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION azzi070_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gzzj001
                          FROM s_browse[1].b_gzzj001
 
         BEFORE CONSTRUCT
               DISPLAY azzi070_filter_parser('gzzj001') TO s_browse[1].b_gzzj001
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL azzi070_filter_show('gzzj001')
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION azzi070_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION azzi070_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = azzi070_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi070_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzzn_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL azzi070_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL azzi070_browser_fill("")
      CALL azzi070_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL azzi070_filter_show('gzzj001')
   CALL azzi070_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL azzi070_fetch("F") 
      #顯示單身筆數
      CALL azzi070_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi070_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzzj_m.gzzj001 = g_browser[g_current_idx].b_gzzj001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi070_master_referesh USING g_gzzj_m.gzzj001 INTO g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus, 
       g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt, 
       g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt,g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjmodid_desc
   
   #遮罩相關處理
   LET g_gzzj_m_mask_o.* =  g_gzzj_m.*
   CALL azzi070_gzzj_t_mask()
   LET g_gzzj_m_mask_n.* =  g_gzzj_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi070_set_act_visible()   
   CALL azzi070_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
                  CALL azzi070_gzzo_t('s')
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_gzzj_m_t.* = g_gzzj_m.*
   LET g_gzzj_m_o.* = g_gzzj_m.*
   
   LET g_data_owner = g_gzzj_m.gzzjownid      
   LET g_data_dept  = g_gzzj_m.gzzjowndp
   
   #重新顯示   
   CALL azzi070_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.insert" >}
#+ 資料新增
PRIVATE FUNCTION azzi070_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE ls_str  STRING 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gzzn_d.clear()   
 
 
   INITIALIZE g_gzzj_m.* TO NULL             #DEFAULT 設定
   
   LET g_gzzj001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_gzzj_m.gzzjownid = g_user
      LET g_gzzj_m.gzzjowndp = g_dept
      LET g_gzzj_m.gzzjcrtid = g_user
      LET g_gzzj_m.gzzjcrtdp = g_dept 
      LET g_gzzj_m.gzzjcrtdt = cl_get_current()
      LET g_gzzj_m.gzzjmodid = g_user
      LET g_gzzj_m.gzzjmoddt = cl_get_current()
      LET g_gzzj_m.gzzjstus = 'Y'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gzzj_m.gzzjstus = "Y"
 
  
      #add-point:單頭預設值 name="insert.default"
      CASE
         WHEN FGL_GETENV("TOPIND") IS NOT NULL AND FGL_GETENV("TOPIND") <> "sd" 
            LET g_gzzj_m.gzzo006 = "B"   #行業狀況
            LET g_gzzj_m.gzzo007 = FGL_GETENV("TOPIND")
            LET g_gzzj_m.gzzj001 = "B"
            LET g_gzzj_m.gzzj002 = "ERP"
         WHEN FGL_GETENV("DGENV") = "c" 
            LET g_gzzj_m.gzzo006 = "E"   #客製狀況
            LET g_gzzj_m.gzzo007 = "sd"
            LET g_gzzj_m.gzzj001 = "E"
            LET g_gzzj_m.gzzj002 = "ERP"
         OTHERWISE
            LET g_gzzj_m.gzzo006 = "A"   #一般狀況
            LET g_gzzj_m.gzzo007 = "sd"
            LET g_gzzj_m.gzzj002 = "ERP"
            IF FGL_GETENV("ERPID") = "T100EXT" THEN
               LET g_gzzj_m.gzzj001 = "M"
            END IF
      END CASE
      LET g_gzzj_m.gzzo008 = "1"   #作業操作模式
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_gzzj_m_t.* = g_gzzj_m.*
      LET g_gzzj_m_o.* = g_gzzj_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_gzzj_m.gzzjstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
    
      CALL azzi070_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_gzzj_m.* TO NULL
         INITIALIZE g_gzzn_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL azzi070_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_gzzn_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi070_set_act_visible()   
   CALL azzi070_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gzzj001_t = g_gzzj_m.gzzj001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " gzzj001 = '", g_gzzj_m.gzzj001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   LET ls_str = g_gzzj_m.gzzj001
   IF ls_str.subString(1,1) = 'A' THEN 
      LET ls_str = 'C',ls_str.subString(2,3)
      LET g_add_browse = g_add_browse ," OR gzzj001='",ls_str,"'" 
   ELSE 
      LET ls_str = 'D',ls_str.subString(2,3)
      LET g_add_browse = g_add_browse ," OR gzzj001='",ls_str,"'" 
   END IF  
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi070_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE azzi070_cl
   
   CALL azzi070_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE azzi070_master_referesh USING g_gzzj_m.gzzj001 INTO g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus, 
       g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt, 
       g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt,g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjmodid_desc
                  CALL azzi070_gzzo_t('s')
   
   #遮罩相關處理
   LET g_gzzj_m_mask_o.* =  g_gzzj_m.*
   CALL azzi070_gzzj_t_mask()
   LET g_gzzj_m_mask_n.* =  g_gzzj_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzzj_m.gzzo006,g_gzzj_m.gzzj001,g_gzzj_m.gzzol003,g_gzzj_m.gzzol004,g_gzzj_m.gzzo007, 
       g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008,g_gzzj_m.gzzjownid, 
       g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmodid_desc, 
       g_gzzj_m.gzzjmoddt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_gzzj_m.gzzjownid      
   LET g_data_dept  = g_gzzj_m.gzzjowndp
   
   #功能已完成,通報訊息中心
   CALL azzi070_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.modify" >}
#+ 資料修改
PRIVATE FUNCTION azzi070_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_gzzj_m_t.* = g_gzzj_m.*
   LET g_gzzj_m_o.* = g_gzzj_m.*
   
   IF g_gzzj_m.gzzj001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_gzzj001_t = g_gzzj_m.gzzj001
 
   CALL s_transaction_begin()
   
   OPEN azzi070_cl USING g_gzzj_m.gzzj001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi070_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE azzi070_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi070_master_referesh USING g_gzzj_m.gzzj001 INTO g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus, 
       g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt, 
       g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt,g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjmodid_desc
   
   #檢查是否允許此動作
   IF NOT azzi070_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gzzj_m_mask_o.* =  g_gzzj_m.*
   CALL azzi070_gzzj_t_mask()
   LET g_gzzj_m_mask_n.* =  g_gzzj_m.*
   
                  CALL azzi070_gzzo_t('s')
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL azzi070_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_gzzj001_t = g_gzzj_m.gzzj001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gzzj_m.gzzjmodid = g_user 
LET g_gzzj_m.gzzjmoddt = cl_get_current()
LET g_gzzj_m.gzzjmodid_desc = cl_get_username(g_gzzj_m.gzzjmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL azzi070_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE gzzj_t SET (gzzjmodid,gzzjmoddt) = (g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt)
          WHERE  gzzj001 = g_gzzj001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_gzzj_m.* = g_gzzj_m_t.*
            CALL azzi070_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_gzzj_m.gzzj001 != g_gzzj_m_t.gzzj001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE gzzn_t SET gzzn001 = g_gzzj_m.gzzj001
 
          WHERE  gzzn001 = g_gzzj_m_t.gzzj001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "gzzn_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzzn_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi070_set_act_visible()   
   CALL azzi070_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " gzzj001 = '", g_gzzj_m.gzzj001, "' "
 
   #填到對應位置
   CALL azzi070_browser_fill("")
 
   CLOSE azzi070_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi070_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="azzi070.input" >}
#+ 資料輸入
PRIVATE FUNCTION azzi070_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE li_chk LIKE type_t.num5 
   DEFINE l_gzzj005   LIKE gzzo_t.gzzo005   #色調編號
   DEFINE ls_module   STRING 
   DEFINE ls_path     STRING
   DEFINE li_num      LIKE type_t.num5
   DEFINE li_cnt_chk  LIKE type_t.num5   
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzzj_m.gzzo006,g_gzzj_m.gzzj001,g_gzzj_m.gzzol003,g_gzzj_m.gzzol004,g_gzzj_m.gzzo007, 
       g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008,g_gzzj_m.gzzjownid, 
       g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmodid_desc, 
       g_gzzj_m.gzzjmoddt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT gzzn003,gzzn002 FROM gzzn_t WHERE gzzn001=? AND gzzn002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi070_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi070_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL azzi070_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gzzj_m.gzzo006,g_gzzj_m.gzzj001,g_gzzj_m.gzzol003,g_gzzj_m.gzzol004,g_gzzj_m.gzzo007, 
       g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="azzi070.input.head" >}
      #單頭段
      INPUT BY NAME g_gzzj_m.gzzo006,g_gzzj_m.gzzj001,g_gzzj_m.gzzol003,g_gzzj_m.gzzol004,g_gzzj_m.gzzo007, 
          g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
            IF  NOT cl_null(g_gzzj_m.gzzj001) THEN
                CALL n_gzzol(g_gzzj_m.gzzj001)     
                INITIALIZE g_ref_fields TO NULL
                LET g_ref_fields[1] = g_gzzj_m.gzzj001
                CALL ap_ref_array2(g_ref_fields," SELECT gzzol003,gzzol004 FROM gzzol_t WHERE gzzol001 = ? AND gzzol002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                LET g_gzzj_m.gzzol003 = g_rtn_fields[1]
                LET g_gzzj_m.gzzol004 = g_rtn_fields[2]
                DISPLAY BY NAME g_gzzj_m.gzzol003 
                DISPLAY BY NAME g_gzzj_m.gzzol004 
            END IF
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN azzi070_cl USING g_gzzj_m.gzzj001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi070_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE azzi070_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.gzzol001 = g_gzzj_m.gzzj001
LET g_master_multi_table_t.gzzol003 = g_gzzj_m.gzzol003
LET g_master_multi_table_t.gzzol004 = g_gzzj_m.gzzol004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.gzzol001 = ''
LET g_master_multi_table_t.gzzol003 = ''
LET g_master_multi_table_t.gzzol004 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL azzi070_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            CALL s_azzi030_cb_gzhc002("gzzo005",g_gzzj_m.gzzo004) RETURNING l_gzzj005  #色調編號ComboBox
            IF p_cmd = 'a' THEN 
               NEXT FIELD gzzo006
            END IF 
            #end add-point
            CALL azzi070_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo006
            #add-point:BEFORE FIELD gzzo006 name="input.b.gzzo006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo006
            
            #add-point:AFTER FIELD gzzo006 name="input.a.gzzo006"
            IF g_gzzj_m.gzzj001 IS NULL THEN
               IF FGL_GETENV("ERPID") = "T100EXT" THEN
                  LET g_gzzj_m.gzzj001 = "M"
               ELSE
                  IF FGL_GETENV("TOPIND") IS NOT NULL AND FGL_GETENV("TOPIND") <> "sd" THEN
                     LET g_gzzj_m.gzzj001 = "B",UPSHIFT(FGL_GETENV("TOPIND")) CLIPPED
                     SELECT COUNT(1) INTO li_cnt_chk FROM gzzj_t
                      WHERE gzzj001 = g_gzzj_m.gzzj001
                     IF li_cnt_chk = 1 THEN
                        LET g_gzzj_m.gzzj001 = "B"
                     END IF
                  ELSE
                     LET g_gzzj_m.gzzj001 = "A"
                  END IF
               END IF   
            ELSE
            END IF  
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzo006
            #add-point:ON CHANGE gzzo006 name="input.g.gzzo006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzj001
            #add-point:BEFORE FIELD gzzj001 name="input.b.gzzj001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzj001
            
            #add-point:AFTER FIELD gzzj001 name="input.a.gzzj001"
            #此段落由子樣板a05產生
            IF NOT cl_null(g_gzzj_m.gzzj001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzzj_m.gzzj001 != g_gzzj001_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzzj_t WHERE "||"gzzj001 = '"||g_gzzj_m.gzzj001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF

               CALL azzi070_check_gzzj001(p_cmd)
               IF NOT cl_null(g_errno) THEN
                  IF g_errno <> "showed" THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno

                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  END IF 
                  NEXT FIELD gzzj001
               ELSE
                  LET li_num = azzi070_chk_before_accept(p_cmd)
                  CASE
                     WHEN li_num = 1
                        LET g_gzzj_m.gzzo006 = ""
                        LET g_gzzj_m.gzzj001 = ""
                        NEXT FIELD gzzj001            
                     WHEN li_num = 2
                        NEXT FIELD gzzj002
                     WHEN li_num = 6
                        NEXT FIELD gzzo006 
                     WHEN li_num = 7
                        NEXT FIELD gzzo007 
                  END CASE   
               END IF
            END IF   
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzj001
            #add-point:ON CHANGE gzzj001 name="input.g.gzzj001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzol003
            #add-point:BEFORE FIELD gzzol003 name="input.b.gzzol003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzol003
            
            #add-point:AFTER FIELD gzzol003 name="input.a.gzzol003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzol003
            #add-point:ON CHANGE gzzol003 name="input.g.gzzol003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzol004
            #add-point:BEFORE FIELD gzzol004 name="input.b.gzzol004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzol004
            
            #add-point:AFTER FIELD gzzol004 name="input.a.gzzol004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzol004
            #add-point:ON CHANGE gzzol004 name="input.g.gzzol004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo007
            #add-point:BEFORE FIELD gzzo007 name="input.b.gzzo007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo007
            
            #add-point:AFTER FIELD gzzo007 name="input.a.gzzo007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzo007
            #add-point:ON CHANGE gzzo007 name="input.g.gzzo007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzj002
            #add-point:BEFORE FIELD gzzj002 name="input.b.gzzj002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzj002
            
            #add-point:AFTER FIELD gzzj002 name="input.a.gzzj002"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzj002
            #add-point:ON CHANGE gzzj002 name="input.g.gzzj002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzjstus
            #add-point:BEFORE FIELD gzzjstus name="input.b.gzzjstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzjstus
            
            #add-point:AFTER FIELD gzzjstus name="input.a.gzzjstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzjstus
            #add-point:ON CHANGE gzzjstus name="input.g.gzzjstus"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo004
            #add-point:BEFORE FIELD gzzo004 name="input.b.gzzo004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo004
            
            #add-point:AFTER FIELD gzzo004 name="input.a.gzzo004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzo004
            #add-point:ON CHANGE gzzo004 name="input.g.gzzo004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo005
            #add-point:BEFORE FIELD gzzo005 name="input.b.gzzo005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo005
            
            #add-point:AFTER FIELD gzzo005 name="input.a.gzzo005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzo005
            #add-point:ON CHANGE gzzo005 name="input.g.gzzo005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzo008
            #add-point:BEFORE FIELD gzzo008 name="input.b.gzzo008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzo008
            
            #add-point:AFTER FIELD gzzo008 name="input.a.gzzo008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzo008
            #add-point:ON CHANGE gzzo008 name="input.g.gzzo008"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.gzzo006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo006
            #add-point:ON ACTION controlp INFIELD gzzo006 name="input.c.gzzo006"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzj001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzj001
            #add-point:ON ACTION controlp INFIELD gzzj001 name="input.c.gzzj001"
#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzzj_m.gzzj001             #給予default值

            #給予arg

            CALL q_gzzo001()                                #呼叫開窗

            LET g_gzzj_m.gzzj001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_gzzj_m.gzzj001 TO gzzj001              #顯示到畫面上

            NEXT FIELD gzzj001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.gzzol003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzol003
            #add-point:ON ACTION controlp INFIELD gzzol003 name="input.c.gzzol003"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzol004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzol004
            #add-point:ON ACTION controlp INFIELD gzzol004 name="input.c.gzzol004"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzo007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo007
            #add-point:ON ACTION controlp INFIELD gzzo007 name="input.c.gzzo007"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzj002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzj002
            #add-point:ON ACTION controlp INFIELD gzzj002 name="input.c.gzzj002"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzjstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzjstus
            #add-point:ON ACTION controlp INFIELD gzzjstus name="input.c.gzzjstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzo004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo004
            #add-point:ON ACTION controlp INFIELD gzzo004 name="input.c.gzzo004"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzo005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo005
            #add-point:ON ACTION controlp INFIELD gzzo005 name="input.c.gzzo005"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzzo008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzo008
            #add-point:ON ACTION controlp INFIELD gzzo008 name="input.c.gzzo008"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_gzzj_m.gzzj001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
                        
            LET li_num = azzi070_chk_before_accept(p_cmd)
            CASE
               WHEN li_num = 1
                    NEXT FIELD gzzj001            
               WHEN li_num = 2
                    NEXT FIELD gzzj002
               WHEN li_num = 6
                    NEXT FIELD gzzo006 
               WHEN li_num = 7
                    NEXT FIELD gzzo007 
            END CASE 
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
                  IF NOT cl_ask_confirm("azz-00043") THEN #確認新增模組名稱
                     NEXT FIELD gzzj001  
                  END IF
               #end add-point
               
               INSERT INTO gzzj_t (gzzj001,gzzj002,gzzjstus,gzzjownid,gzzjowndp,gzzjcrtid,gzzjcrtdp, 
                   gzzjcrtdt,gzzjmodid,gzzjmoddt)
               VALUES (g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp, 
                   g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt)  
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_gzzj_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               CALL cl_set_combo_scc('gzzo006','107')
               UPDATE gzzj_t SET gzzj003 = g_gzzj_m.gzzj001
                WHERE gzzj001 = g_gzzj_m.gzzj001
               #end add-point
               
                              CALL azzi070_gzzo_t('i')
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzzj_m.gzzj001 = g_master_multi_table_t.gzzol001 AND
         g_gzzj_m.gzzol003 = g_master_multi_table_t.gzzol003 AND 
         g_gzzj_m.gzzol004 = g_master_multi_table_t.gzzol004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzzj_m.gzzj001
            LET l_field_keys[01] = 'gzzol001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzzol001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzzol002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzzj_m.gzzol003
            LET l_fields[01] = 'gzzol003'
            LET l_vars[02] = g_gzzj_m.gzzol004
            LET l_fields[02] = 'gzzol004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzzol_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
                CALL g_link.clear()
               LET ls_module = DOWNSHIFT(g_gzzj_m.gzzj001) #ex:azz
               LET ls_path = FGL_GETENV(g_gzzj_m.gzzj002) #$ERP 
               CASE 
                  WHEN ls_module.subString(1,1) = 'a'
                       
                       #建立標準目錄
                       CALL azzi070_gen_directory(ls_path,ls_module)
                       LET g_link[g_link.getLength()+1] = ls_module  
                       LET ls_module = 'c',ls_module.subString(2,3) 
                       LET g_link[g_link.getLength()+1] = ls_module
                       #建立客製目錄
                       CALL azzi070_gen_directory(ls_path,ls_module) 

                  WHEN ls_module.subString(1,1) = 'b'
                       #LET ls_path = FGL_GETENV(g_gzzj_m.gzzj002)
                       #建立標準目錄 bxx
                       CALL azzi070_gen_directory(ls_path,ls_module)
                       LET g_link[g_link.getLength()+1] = ls_module   
                       LET ls_module = 'd',ls_module.subString(2,3) 
                       #建立目錄 dxx 
                       CALL azzi070_gen_directory(ls_path,ls_module)
                       LET g_link[g_link.getLength()+1] = ls_module   
                  WHEN ls_module.subString(1,1) = 'e' 
                       #LET ls_path = FGL_GETENV(g_gzzj_m.gzzj002)
                       CALL azzi070_gen_directory(ls_path,ls_module)
                       LET g_link[g_link.getLength()+1] = ls_module 
                  WHEN ls_module.subString(1,1) = 'm'
                       #建立標準目錄
                       CALL azzi070_gen_directory(ls_path,ls_module)
                       LET g_link[g_link.getLength()+1] = ls_module  
                       LET ls_module = 'n',ls_module.subString(2,3) 
                       LET g_link[g_link.getLength()+1] = ls_module
                       #建立客製目錄
                       CALL azzi070_gen_directory(ls_path,ls_module) 
                  
                  WHEN g_gzzj_m.gzzj002 = "COM" 
                       LET ls_path = FGL_GETENV(g_gzzj_m.gzzj002)
                       #建立標準目錄 bxx
                       CALL azzi070_gen_directory(ls_path,ls_module) 
                       LET g_link[g_link.getLength()+1] = ls_module 
                       #建立客製目錄 cxxx
                       CALL azzi070_gen_directory(ls_path,'c'||ls_module)
                       LET g_link[g_link.getLength()+1] = 'c'||ls_module
               END CASE  
                  #CALL azzi070_gen_directory(ls_path,ls_module) #建立相關目錄
                  CALL azzi070_ins_upd_gzzt() 
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi070_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL azzi070_b_fill()
                  CALL azzi070_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL azzi070_gzzj_t_mask_restore('restore_mask_o')
               
               UPDATE gzzj_t SET (gzzj001,gzzj002,gzzjstus,gzzjownid,gzzjowndp,gzzjcrtid,gzzjcrtdp,gzzjcrtdt, 
                   gzzjmodid,gzzjmoddt) = (g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzjownid, 
                   g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid, 
                   g_gzzj_m.gzzjmoddt)
                WHERE  gzzj001 = g_gzzj001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "gzzj_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
                              CALL azzi070_gzzo_t('u')
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzzj_m.gzzj001 = g_master_multi_table_t.gzzol001 AND
         g_gzzj_m.gzzol003 = g_master_multi_table_t.gzzol003 AND 
         g_gzzj_m.gzzol004 = g_master_multi_table_t.gzzol004  THEN
         ELSE 
            LET l_var_keys[01] = g_gzzj_m.gzzj001
            LET l_field_keys[01] = 'gzzol001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzzol001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzzol002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzzj_m.gzzol003
            LET l_fields[01] = 'gzzol003'
            LET l_vars[02] = g_gzzj_m.gzzol004
            LET l_fields[02] = 'gzzol004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzzol_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL azzi070_gzzj_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_gzzj_m_t)
               LET g_log2 = util.JSON.stringify(g_gzzj_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_gzzj001_t = g_gzzj_m.gzzj001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="azzi070.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzzn_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzzn_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi070_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_gzzn_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN azzi070_cl USING g_gzzj_m.gzzj001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN azzi070_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE azzi070_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_gzzn_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gzzn_d[l_ac].gzzn002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzzn_d_t.* = g_gzzn_d[l_ac].*  #BACKUP
               LET g_gzzn_d_o.* = g_gzzn_d[l_ac].*  #BACKUP
               CALL azzi070_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL azzi070_set_no_entry_b(l_cmd)
               IF NOT azzi070_lock_b("gzzn_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi070_bcl INTO g_gzzn_d[l_ac].gzzn003,g_gzzn_d[l_ac].gzzn002
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_gzzn_d_t.gzzn002,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzzn_d_mask_o[l_ac].* =  g_gzzn_d[l_ac].*
                  CALL azzi070_gzzn_t_mask()
                  LET g_gzzn_d_mask_n[l_ac].* =  g_gzzn_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL azzi070_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzzn_d[l_ac].* TO NULL 
            INITIALIZE g_gzzn_d_t.* TO NULL 
            INITIALIZE g_gzzn_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_gzzn_d[l_ac].gzzn003 = "Y"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_gzzn_d_t.* = g_gzzn_d[l_ac].*     #新輸入資料
            LET g_gzzn_d_o.* = g_gzzn_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi070_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL azzi070_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzzn_d[li_reproduce_target].* = g_gzzn_d[li_reproduce].*
 
               LET g_gzzn_d[li_reproduce_target].gzzn002 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
         
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM gzzn_t 
             WHERE  gzzn001 = g_gzzj_m.gzzj001
 
               AND gzzn002 = g_gzzn_d[l_ac].gzzn002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzzj_m.gzzj001
               LET gs_keys[2] = g_gzzn_d[g_detail_idx].gzzn002
               CALL azzi070_insert_b('gzzn_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_gzzn_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzzn_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL azzi070_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_gzzj_m.gzzj001
 
               LET gs_keys[gs_keys.getLength()+1] = g_gzzn_d_t.gzzn002
 
            
               #刪除同層單身
               IF NOT azzi070_delete_b('gzzn_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi070_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT azzi070_key_delete_b(gs_keys,'gzzn_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE azzi070_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE azzi070_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_gzzn_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gzzn_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzn003
            #add-point:BEFORE FIELD gzzn003 name="input.b.page1.gzzn003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzn003
            
            #add-point:AFTER FIELD gzzn003 name="input.a.page1.gzzn003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzn003
            #add-point:ON CHANGE gzzn003 name="input.g.page1.gzzn003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzzn002
            
            #add-point:AFTER FIELD gzzn002 name="input.a.page1.gzzn002"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzn_d[l_ac].gzzn002
            CALL ap_ref_array2(g_ref_fields,"SELECT gzdel003 FROM gzdel_t WHERE gzdel001=? AND gzdel002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzzn_d[l_ac].gzzn002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzzn_d[l_ac].gzzn002_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzzj_m.gzzj001) AND NOT cl_null(g_gzzn_d[g_detail_idx].gzzn002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_gzzj_m.gzzj001 != g_gzzj001_t OR g_gzzn_d[g_detail_idx].gzzn002 != g_gzzn_d_t.gzzn002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzzn_t WHERE "||"gzzn001 = '"||g_gzzj_m.gzzj001 ||"' AND "|| "gzzn002 = '"||g_gzzn_d[g_detail_idx].gzzn002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #檢核有沒有在gzde_t註冊 azzi901
               CALL azzi070_check_gzzn002()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD gzzn002
               END IF
               #檢核是否存在該目錄下
               CALL azzi070_check_exist_4gl_file()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD gzzn002
               END IF
               #檢核是否含有MAIN
               #No.160506-00033#1 add s_azzi070_check_4gl() 由傳入一個參數，改成傳入兩個參數
               CALL s_azzi070_check_4gl(g_gzzj_m.gzzj001,g_gzzn_d[l_ac].gzzn002) RETURNING li_chk

               IF li_chk THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  "azz-00152"
                  LET g_errparam.extend = NULL
                  LET g_errparam.popup = TRUE
                  LET g_errparam.replace[1] =  g_gzzn_d[l_ac].gzzn002 CLIPPED
                  CALL cl_err()
   
                  NEXT FIELD gzzn002  
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzzn002
            #add-point:BEFORE FIELD gzzn002 name="input.b.page1.gzzn002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzzn002
            #add-point:ON CHANGE gzzn002 name="input.g.page1.gzzn002"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.gzzn003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzn003
            #add-point:ON ACTION controlp INFIELD gzzn003 name="input.c.page1.gzzn003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gzzn002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzzn002
            #add-point:ON ACTION controlp INFIELD gzzn002 name="input.c.page1.gzzn002"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_gzzn_d[l_ac].* = g_gzzn_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE azzi070_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_gzzn_d[l_ac].gzzn002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzzn_d[l_ac].* = g_gzzn_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL azzi070_gzzn_t_mask_restore('restore_mask_o')
      
               UPDATE gzzn_t SET (gzzn001,gzzn003,gzzn002) = (g_gzzj_m.gzzj001,g_gzzn_d[l_ac].gzzn003, 
                   g_gzzn_d[l_ac].gzzn002)
                WHERE  gzzn001 = g_gzzj_m.gzzj001 
 
                  AND gzzn002 = g_gzzn_d_t.gzzn002 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_gzzn_d[l_ac].* = g_gzzn_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzzn_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_gzzn_d[l_ac].* = g_gzzn_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzzn_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzzj_m.gzzj001
               LET gs_keys_bak[1] = g_gzzj001_t
               LET gs_keys[2] = g_gzzn_d[g_detail_idx].gzzn002
               LET gs_keys_bak[2] = g_gzzn_d_t.gzzn002
               CALL azzi070_update_b('gzzn_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL azzi070_gzzn_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_gzzn_d[g_detail_idx].gzzn002 = g_gzzn_d_t.gzzn002 
 
                  ) THEN
                  LET gs_keys[01] = g_gzzj_m.gzzj001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_gzzn_d_t.gzzn002
 
                  CALL azzi070_key_update_b(gs_keys,'gzzn_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gzzj_m),util.JSON.stringify(g_gzzn_d_t)
               LET g_log2 = util.JSON.stringify(g_gzzj_m),util.JSON.stringify(g_gzzn_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL azzi070_unlock_b("gzzn_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
 
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_gzzn_d[li_reproduce_target].* = g_gzzn_d[li_reproduce].*
 
               LET g_gzzn_d[li_reproduce_target].gzzn002 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_gzzn_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_gzzn_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="azzi070.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD gzzj001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzzn003
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   IF NOT INT_FLAG THEN 
      CALL azzi070_gen_q_total() 
      CALL azzi070_gen_link()
   END IF  
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi070_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE ls_str STRING 
   DEFINE lc_gzzj003 LIKE gzzj_t.gzzj003
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL azzi070_b_fill() #單身填充
      CALL azzi070_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL azzi070_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
  INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzzj_m.gzzj001
   CALL ap_ref_array2(g_ref_fields," SELECT gzzol004 FROM gzzol_t WHERE gzzol001 = ? AND gzzol002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_gzzj_m.gzzol004 = g_rtn_fields[2]
   DISPLAY BY NAME g_gzzj_m.gzzol004

   SELECT gzzj003 INTO lc_gzzj003 FROM gzzj_t 
    WHERE gzzj001 = g_gzzj_m.gzzj001
   LET g_gzzj_m.gzzol003 = azzi070_desc_show(g_gzzj_m.gzzj001,lc_gzzj003)

   IF (g_gzzj_m.gzzj001[1,1] = "C" OR g_gzzj_m.gzzj001[1,1] = "D" )AND g_gzzj_m.gzzo006 IS NULL THEN 
      
      IF g_gzzj_m.gzzj001[1,1] = "C" THEN 
         LET g_gzzj_m.gzzo006 = "C"
      ELSE 
         LET g_gzzj_m.gzzo006 = "D"
      END IF 
      CALL azzi070_show_gzzo007(g_gzzj_m.gzzj001)
   END IF 
   #end add-point
   
   #遮罩相關處理
   LET g_gzzj_m_mask_o.* =  g_gzzj_m.*
   CALL azzi070_gzzj_t_mask()
   LET g_gzzj_m_mask_n.* =  g_gzzj_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzzj_m.gzzo006,g_gzzj_m.gzzj001,g_gzzj_m.gzzol003,g_gzzj_m.gzzol004,g_gzzj_m.gzzo007, 
       g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008,g_gzzj_m.gzzjownid, 
       g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmodid_desc, 
       g_gzzj_m.gzzjmoddt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_gzzj_m.gzzjstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzzn_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_gzzn_d[l_ac].gzzn002
            #CALL ap_ref_array2(g_ref_fields,"SELECT gzdel003 FROM gzdel_t WHERE gzdel001=? AND gzdel002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_gzzn_d[l_ac].gzzn002_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_gzzn_d[l_ac].gzzn002_desc
            
   LET ls_str = g_gzzj_m.gzzj001
    IF ls_str.subString(1,1) = 'C' OR ls_str.subString(1,1) = 'A' THEN 
       LET g_gzzj_m.gzzj002 = "ERP"
    END IF

    LET g_gzzj_m.gzzj001 = ls_str 

      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL azzi070_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION azzi070_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION azzi070_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE gzzj_t.gzzj001 
   DEFINE l_oldno     LIKE gzzj_t.gzzj001 
 
   DEFINE l_master    RECORD LIKE gzzj_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE gzzn_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_gzzj_m.gzzj001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_gzzj001_t = g_gzzj_m.gzzj001
 
    
   LET g_gzzj_m.gzzj001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_gzzj_m.gzzjownid = g_user
      LET g_gzzj_m.gzzjowndp = g_dept
      LET g_gzzj_m.gzzjcrtid = g_user
      LET g_gzzj_m.gzzjcrtdp = g_dept 
      LET g_gzzj_m.gzzjcrtdt = cl_get_current()
      LET g_gzzj_m.gzzjmodid = g_user
      LET g_gzzj_m.gzzjmoddt = cl_get_current()
      LET g_gzzj_m.gzzjstus = 'Y'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_gzzj_m.gzzjstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL azzi070_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_gzzj_m.* TO NULL
      INITIALIZE g_gzzn_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL azzi070_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi070_set_act_visible()   
   CALL azzi070_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gzzj001_t = g_gzzj_m.gzzj001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " gzzj001 = '", g_gzzj_m.gzzj001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi070_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL azzi070_idx_chk()
   
   LET g_data_owner = g_gzzj_m.gzzjownid      
   LET g_data_dept  = g_gzzj_m.gzzjowndp
   
   #功能已完成,通報訊息中心
   CALL azzi070_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION azzi070_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzzn_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi070_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM gzzn_t
    WHERE  gzzn001 = g_gzzj001_t
 
    INTO TEMP azzi070_detail
 
   #將key修正為調整後   
   UPDATE azzi070_detail 
      #更新key欄位
      SET gzzn001 = g_gzzj_m.gzzj001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO gzzn_t SELECT * FROM azzi070_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi070_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzzj001_t = g_gzzj_m.gzzj001
 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.delete" >}
#+ 資料刪除
PRIVATE FUNCTION azzi070_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  lc_gzzj001      LIKE gzzj_t.gzzj001
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_gzzj_m.gzzj001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.gzzol001 = g_gzzj_m.gzzj001
LET g_master_multi_table_t.gzzol003 = g_gzzj_m.gzzol003
LET g_master_multi_table_t.gzzol004 = g_gzzj_m.gzzol004
 
   
   CALL s_transaction_begin()
 
   OPEN azzi070_cl USING g_gzzj_m.gzzj001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi070_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE azzi070_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi070_master_referesh USING g_gzzj_m.gzzj001 INTO g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus, 
       g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt, 
       g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt,g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjmodid_desc
                  CALL azzi070_gzzo_t('s')
   
   #檢查是否允許此動作
   IF NOT azzi070_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gzzj_m_mask_o.* =  g_gzzj_m.*
   CALL azzi070_gzzj_t_mask()
   LET g_gzzj_m_mask_n.* =  g_gzzj_m.*
   
   CALL azzi070_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      IF g_gzzj_m.gzzj001[1,1]  = 'C' OR g_gzzj_m.gzzj001[1,1] = 'D' THEN 
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_gzzj_m.gzzj001
         LET g_errparam.code   = "azz-00255" 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
         CALL cl_err()
      END IF 
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL azzi070_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
 
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_gzzj001_t = g_gzzj_m.gzzj001
 
 
      DELETE FROM gzzj_t
       WHERE  gzzj001 = g_gzzj_m.gzzj001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_gzzj_m.gzzj001,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM gzzn_t
       WHERE  gzzn001 = g_gzzj_m.gzzj001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
 
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzzn_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      DELETE FROM gzzt_t
       WHERE gzzt001 = g_gzzj_m.gzzj001

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzzt_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF 

      DELETE FROM gzzj_t
       WHERE gzzj003 = g_gzzj_m.gzzj001

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzzj_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      IF g_gzzj_m.gzzj002 = "ERP" THEN 
         CASE 
            WHEN g_gzzj_m.gzzj001[1,1]  = 'A'
               LET lc_gzzj001 = 'C',g_gzzj_m.gzzj001[2,3]
            WHEN g_gzzj_m.gzzj001[1,1] = 'B'
               LET lc_gzzj001 = 'D',g_gzzj_m.gzzj001[2,3]
         END CASE 

      ELSE 
         LET lc_gzzj001 = 'C',g_gzzj_m.gzzj001
      END IF 

      DELETE FROM gzzol_t 
       WHERE gzzol001 = lc_gzzj001

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzzol_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
      
      
      #end add-point
      
                     CALL azzi070_gzzo_t('d')      
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE azzi070_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_gzzn_d.clear() 
 
     
      CALL azzi070_ui_browser_refresh()  
      #CALL azzi070_ui_headershow()  
      #CALL azzi070_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzzol001
   LET l_field_keys[01] = 'gzzol001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzzol_t')
 
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL azzi070_browser_fill("")
         CALL azzi070_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE azzi070_cl
 
   #功能已完成,通報訊息中心
   CALL azzi070_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="azzi070.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION azzi070_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_gzzn_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF azzi070_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT gzzn003,gzzn002 ,t1.gzdel003 FROM gzzn_t",   
                     " INNER JOIN gzzj_t ON  gzzj001 = gzzn001 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN gzdel_t t1 ON t1.gzdel001=gzzn002 AND t1.gzdel002='"||g_lang||"' ",
 
                     " WHERE gzzn001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY gzzn_t.gzzn002"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi070_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR azzi070_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_gzzj_m.gzzj001
                                               
      FOREACH b_fill_cs INTO g_gzzn_d[l_ac].gzzn003,g_gzzn_d[l_ac].gzzn002,g_gzzn_d[l_ac].gzzn002_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         IF g_gzzj_m.gzzj001 = "QRY" OR g_gzzj_m.gzzj001 = "CQRY" THEN 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzzn_d[l_ac].gzzn002
            CALL ap_ref_array2(g_ref_fields,"SELECT dzcal003 FROM dzcal_t WHERE dzcal001=? AND dzcal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_gzzn_d[l_ac].gzzn002_desc = '', g_rtn_fields[1] , ''
           
         END IF 
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_gzzn_d.deleteElement(g_gzzn_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE azzi070_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_gzzn_d.getLength()
      LET g_gzzn_d_mask_o[l_ac].* =  g_gzzn_d[l_ac].*
      CALL azzi070_gzzn_t_mask()
      LET g_gzzn_d_mask_n[l_ac].* =  g_gzzn_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi070_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM gzzn_t
       WHERE 
         gzzn001 = ps_keys_bak[1] AND gzzn002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gzzn_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi070_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO gzzn_t
                  (
                   gzzn001,
                   gzzn002
                   ,gzzn003) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_gzzn_d[g_detail_idx].gzzn003)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzzn_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gzzn_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi070_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gzzn_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL azzi070_gzzn_t_mask_restore('restore_mask_o')
               
      UPDATE gzzn_t 
         SET (gzzn001,
              gzzn002
              ,gzzn003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gzzn_d[g_detail_idx].gzzn003) 
         WHERE  gzzn001 = ps_keys_bak[1] AND gzzn002 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzzn_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gzzn_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL azzi070_gzzn_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION azzi070_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION azzi070_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi070_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL azzi070_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "gzzn_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN azzi070_bcl USING 
                                       g_gzzj_m.gzzj001,g_gzzn_d[g_detail_idx].gzzn002     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "azzi070_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi070_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE azzi070_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi070_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzzj001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("gzzol003",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi070_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzzj001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      IF g_gzzj_m.gzzj001[1,1] = "C" OR g_gzzj_m.gzzj001[1,1] = "D" THEN 
         CALL cl_set_comp_entry("gzzol003",FALSE)
      ELSE 
         CALL cl_set_comp_entry("gzzol003",TRUE)   
      END IF 
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi070_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi070_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION azzi070_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION azzi070_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION azzi070_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION azzi070_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION azzi070_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzzj001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "gzzj_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "gzzn_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION azzi070_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gzzj_m.gzzj001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN azzi070_cl USING g_gzzj_m.gzzj001
   IF STATUS THEN
      CLOSE azzi070_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi070_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE azzi070_master_referesh USING g_gzzj_m.gzzj001 INTO g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus, 
       g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt, 
       g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt,g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjmodid_desc
                  CALL azzi070_gzzo_t('s')
 
   #檢查是否允許此動作
   IF NOT azzi070_action_chk() THEN
      CLOSE azzi070_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzzj_m.gzzo006,g_gzzj_m.gzzj001,g_gzzj_m.gzzol003,g_gzzj_m.gzzol004,g_gzzj_m.gzzo007, 
       g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008,g_gzzj_m.gzzjownid, 
       g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtid_desc, 
       g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmodid_desc, 
       g_gzzj_m.gzzjmoddt
 
   CASE g_gzzj_m.gzzjstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gzzj_m.gzzjstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_gzzj_m.gzzjstus = lc_state OR cl_null(lc_state) THEN
      CLOSE azzi070_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   
   #end add-point
   
   LET g_gzzj_m.gzzjmodid = g_user
   LET g_gzzj_m.gzzjmoddt = cl_get_current()
   LET g_gzzj_m.gzzjstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE gzzj_t 
      SET (gzzjstus,gzzjmodid,gzzjmoddt) 
        = (g_gzzj_m.gzzjstus,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt)     
    WHERE  gzzj001 = g_gzzj_m.gzzj001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE azzi070_master_referesh USING g_gzzj_m.gzzj001 INTO g_gzzj_m.gzzj001,g_gzzj_m.gzzj002, 
          g_gzzj_m.gzzjstus,g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp, 
          g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmoddt,g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp_desc, 
          g_gzzj_m.gzzjcrtid_desc,g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjmodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_gzzj_m.gzzo006,g_gzzj_m.gzzj001,g_gzzj_m.gzzol003,g_gzzj_m.gzzol004,g_gzzj_m.gzzo007, 
          g_gzzj_m.gzzj002,g_gzzj_m.gzzjstus,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008,g_gzzj_m.gzzjownid, 
          g_gzzj_m.gzzjownid_desc,g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjowndp_desc,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtid_desc, 
          g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdp_desc,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmodid,g_gzzj_m.gzzjmodid_desc, 
          g_gzzj_m.gzzjmoddt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE azzi070_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi070_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="azzi070.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION azzi070_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gzzn_d.getLength() THEN
         LET g_detail_idx = g_gzzn_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzzn_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzzn_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION azzi070_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL azzi070_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION azzi070_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="azzi070.status_show" >}
PRIVATE FUNCTION azzi070_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="azzi070.mask_functions" >}
&include "erp/azz/azzi070_mask.4gl"
 
{</section>}
 
{<section id="azzi070.signature" >}
   
 
{</section>}
 
{<section id="azzi070.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION azzi070_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzzj_m.gzzj001
   LET g_pk_array[1].column = 'gzzj001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="azzi070.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="azzi070.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION azzi070_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL azzi070_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_gzzj_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="azzi070.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION azzi070_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="azzi070.other_function" readonly="Y" >}
#+ complier
PRIVATE FUNCTION azzi070_gen_complier()
  DEFINE ls_cmd      STRING  
   DEFINE ls_module   STRING 
   DEFINE ls_path     STRING

   LET ls_module = g_gzzj_m.gzzj001
   LET ls_path = FGL_GETENV(ls_module)
   LET ls_path = os.Path.join(ls_path,"4gl")
   IF os.Path.chdir(ls_path) THEN END IF #到模組下42m目錄
   LET ls_cmd = "r.c ",DOWNSHIFT(g_gzzn_d[l_ac].gzzn002)
   DISPLAY ls_cmd
   RUN ls_cmd
END FUNCTION
# 產生目錄
PRIVATE FUNCTION azzi070_gen_directory(ls_path,ls_module)
   DEFINE ls_module     STRING 
   DEFINE ls_path       STRING 
   DEFINE ls_file       STRING
   DEFINE ld_lng_type   DYNAMIC ARRAY OF RECORD 
       gzzy001 LIKE gzzy_t.gzzy001
   END RECORD 

   #建立模組
   CALL s_azzi070_directory_process(ls_path,ls_module) 

   #建立模組下目錄
   #42f  42m  42r  42s  4ad  4fd  4gl  4pw	4rp  4tm  dzx  per  sch  str #xcf
   LET ls_path = os.Path.join(ls_path,ls_module)
   CALL s_azzi070_directory_process(ls_path,"42f")
   CALL s_azzi070_directory_process(ls_path,"42m")
   CALL s_azzi070_directory_process(ls_path,"42r")
   CALL s_azzi070_directory_process(ls_path,"42s")
   CALL s_azzi070_directory_process(ls_path,"4ad")
   CALL s_azzi070_directory_process(ls_path,"4fd")
   CALL s_azzi070_directory_process(ls_path,"4gl")
   CALL s_azzi070_directory_process(ls_path,"4pw")
   CALL s_azzi070_directory_process(ls_path,"4rp")
   CALL s_azzi070_directory_process(ls_path,"4tm")
   CALL s_azzi070_directory_process(ls_path,"dzx")
   CALL s_azzi070_directory_process(ls_path,"per")
   CALL s_azzi070_directory_process(ls_path,"sch")
   CALL s_azzi070_directory_process(ls_path,"str")
   #CALL s_azzi070_directory_process(ls_path,"xcf") #不建立 xcf #15/04/02 jrg542
   
   #4rp目錄下
   CALL s_azzi070_directory_process(os.Path.join(ls_path,"4rp"),"rdd")  #/u1/t10dev/erp/azz/4rp, rdd
   CALL s_azzi070_directory_process(os.Path.join(ls_path,"4rp"),"back") #/u1/t10dev/erp/azz/4rp, back
   #LET ls_path = os.Path.join(os.Path.join(ls_path,"4rp"),"back")
   CALL s_azzi070_directory_process(os.Path.join(os.Path.join(ls_path,"4rp"),"back"),"rdd") #/u1/t10dev/erp/azz/4rp/back ,rdd
   
   #dzx目錄下
   CALL s_azzi070_directory_process(os.Path.join(ls_path,"dzx"),"tab")
   CALL s_azzi070_directory_process(os.Path.join(ls_path,"dzx"),"tap")
   CALL s_azzi070_directory_process(os.Path.join(ls_path,"dzx"),"tbl")
   CALL s_azzi070_directory_process(os.Path.join(ls_path,"dzx"),"tgl")
   CALL s_azzi070_directory_process(os.Path.join(ls_path,"dzx"),"tsd")

   #建立42x檔案
   LET ls_file = ls_module,".42x"
   CALL azzi070_gen_42x(ls_file,os.Path.join(ls_path,"42m"))
   
   #建立 #$TOP/www/doc/erp 下的新模組目錄
   LET ls_path = os.Path.join(os.Path.join(os.Path.join(FGL_GETENV("TOP"),"www"),"doc"),"erp")
   CALL s_azzi070_directory_process(ls_path,ls_module)
   
   #建立4rp/語言別目錄  for 報表
   #環境變數$MNT4RP/4rp/語言別 目錄
   #LET ls_path = FGL_GETENV("MNT4RP") #tiptop_gr/t10dev
   LET ls_path = cl_rpt_get_env_global("MNT4RP")
   #先在立$MNT4RP/模組
   CALL s_azzi070_directory_process(ls_path,ls_module)  #$MNT4RP/模組(不管標準或客製，都會建立)
   LET ls_path = os.Path.join(ls_path,ls_module) 
   #建立該模組下4rp目錄
   CALL s_azzi070_directory_process(ls_path,"4rp")      #$MNT4RP/模組/4rp( 在4rp下 會建立該語言別)
   #建立com/inc/erp/模組目錄
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("COM"),"inc"),"erp")#
   CALL s_azzi070_directory_process(ls_path,ls_module)
   
END FUNCTION
#+ link
PRIVATE FUNCTION azzi070_gen_link()
DEFINE ls_cmd STRING 
  DEFINE li_cnt LIKE type_t.num5

   FOR li_cnt = 1 TO g_link.getLength()

       LET ls_cmd = "r.l ",DOWNSHIFT(g_link[li_cnt])
       DISPLAY ls_cmd
       RUN ls_cmd WITHOUT WAITING  
   END FOR 
  
   #LET ls_cmd = "r.l ",DOWNSHIFT(g_gzzj_m.gzzj001)
   #DISPLAY ls_cmd
   #RUN ls_cmd
END FUNCTION
# Azzi950 在新增單身項目的時候，除了要檢查該 4gl 是否存在於目錄下，
# 另外需要再增加檢查是否已經在 azzi901 註冊了。沒有註冊的話要提示他先註冊
PRIVATE FUNCTION azzi070_check_gzzn002()
   DEFINE li_cnt     LIKE type_t.num5  

   LET g_errno = NULL
   #LNG及QRY及ADZ 不檢查  
   IF g_gzzj_m.gzzj001 ="LNG" OR g_gzzj_m.gzzj001 = "QRY" OR g_gzzj_m.gzzj001 = "ADZ" THEN 
      RETURN 
   END IF

   SELECT COUNT(*) INTO li_cnt FROM gzde_t 
    WHERE gzde001 = g_gzzn_d[l_ac].gzzn002 
 
   IF li_cnt = 0 THEN 
      LET g_errno = "azz-00055"
      RETURN
   END IF
END FUNCTION
#  1).不允許空白
#  2).輸入值不可重複，錯誤訊息「本欄位為鍵值不可重複, 請重新輸入!」
#  3).新增時報錯恢復為空白,修改時報錯恢復為舊值

#  4).依照『模組類別』，
#    若模組類別為 B，則模組編號首碼為 B，總長度 3 碼大寫字元，不可含有數字及特殊符號
#    若模組類別為 E，則模組編號首碼為 E，總長度 3 碼大寫字元，不可含有數字及特殊符號
#    若模組類別為 A，則建議模組編號首碼為 A，但不強制一定是A，總長度 3 碼大寫字元，不可含有數字及特殊符號
#    (後方『功能類別』選定為 COM 時，必須回頭檢查首馬一定不可以為 A開頭，避免 naming rule 混亂)

#　5).首碼為 A，功能類別編號gzzj002 指定為『ERP』，非A時，指定為『COM』，
#    首碼為B/E 時，功能類別編號gzzj002 指定為『ERP』

#  6).模組編號不可使用AFG，或 AY 及 AZ 開頭 (AZZ除外，維護時不可顯示錯誤訊息)
#    錯誤訊息為『此模組編號 (%1) 為系統內部定義使用，不可使用，請選擇其他模組編號。』

#  7).若為模組編號為 A B 開頭且功能類別為 ERP 時，則增加給予table編號空間，取後兩碼，轉為小寫後寫入 gzzt001，
#                             若已經有存在，則顯示錯誤訊息：『此模組名稱的table命名區塊已被占用，請更換新模組名稱!』
#    若為B/E開頭，或功能類別為 COM的，則不給予table編號空間

#  8).完成後，抄寫建立模組編號表：gzzj_t (實際模組編號 , 功能類別 , 歸屬模組編號)
#    首碼為 A 且功能類別為 ERP 時，建立兩筆 例如 AIM 模組，建立 (AIM, ERP, AIM) 及 (CIM, ERP, AIM)  #第二筆表示會有客製目錄 CIM，但歸屬於 AIM模組
#    首碼為 B 且功能類別為 ERP 時，建立兩筆 例如 BIC 模組，建立 (BIC, ERP, BIC) 及 (DIC, ERP, BIC)  #第二筆表示會有客製目錄 DIC，但歸屬於 BIC模組
#    首碼為 E 且功能類別為 ERP 時，建立一筆 例如 ENU 模組，建立 (ENU, ERP, ENU) 
#    功能類別為 COM 時，建立兩筆 例如 WSS 模組，建立 (WSS, COM, WSS)  (CWSS, COM, WSS) 
#    表示會有客製目錄 BWSS/CWSS/DWSS，但歸屬於 WSS模組
#  9).依照項目 8 分別建立實體目錄，ERP均建置於 $ERP 下，COM則見至於 $COM 下
PRIVATE FUNCTION azzi070_check_gzzj001(p_cmd)
   DEFINE p_cmd     LIKE type_t.chr1
   DEFINE ls_str    STRING
   DEFINE ls_sql    STRING 
   DEFINE li_cnt    LIKE type_t.num5
   DEFINE ls_host   STRING
  
   LET g_errno = NULL 
   LET ls_str = g_gzzj_m.gzzj001


   #編號應為長度為3個大寫字元，不可為數字，盡量取用模組縮寫
   IF ls_str.getLength() != 3 THEN
      LET g_errno = "azz-00076"
      RETURN
   END IF

   IF NOT cl_chk_num(ls_str,"U") THEN 
      LET g_errno = "azz-00076"
      RETURN
   END IF
   
   #160913-00020 # start
   #後面兩碼不可以TT 開頭 ，避免與genero 搞混，因為 tt  開頭為genero 在oracle db 建立臨時表(暫存表) 是以tt開頭命名
   IF ls_str.subString(2,3) = "TT" THEN 
      LET g_errno = "azz-00415"
      RETURN
   END IF 
   #160913-00020 # end 

   #客製環境只能新增E開頭的,不對就退回
   IF FGL_GETENV("DGENV") = "c" THEN
      IF ls_str.subString(1,1) <> "E" THEN
         LET g_errno = "azz-00186" #模組類別:只能選(客製自訂模組)
      END IF
      RETURN
   ELSE
      #以下為標準
   END IF


   IF g_gzzj_m.gzzo006 IS NULL THEN
      LET g_gzzj_m.gzzo006 = "A"
      DISPLAY BY NAME g_gzzj_m.gzzo006
   END IF

   LET ls_host = cl_get_ap_hostname()

   IF g_gzzj_m.gzzo006 MATCHES "[ABE]" THEN
      #C/D/N 開頭的模組不可以手工新增，而是要新增 A/B/E(ERP) M/E(Light)
      IF NOT ls_str.subString(1,1) MATCHES "[ABEM]" AND NOT ls_host.getIndexOf("top18",1) THEN

         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00256"  #只能新增 A/B/E 開頭的模組

         LET g_errparam.popup = TRUE



         CALL cl_err()
         LET g_errno = "showed"
         RETURN
      END IF
   END IF

   #配合HRM導入T100進行開發，管制不可使用AH開頭的標準模組
   CASE
      WHEN ls_host.getIndexOf("hcm",1)   #管制HRM主機不可以亂開模組 "hcm-dvpt-ap"
         IF NOT ls_str.subString(1,2) = "AH" THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00346"
            LET g_errparam.popup = TRUE
            LET g_errparam.replace[1] = ls_str
            CALL cl_err()
            LET g_errno = "showed"
            RETURN
         END IF
      WHEN ls_host.getIndexOf("top38",1)  #管制TOP38主機不可以亂開模組
         IF NOT ls_str.subString(1,1) = "B" THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00170"
            LET g_errparam.popup = TRUE
            LET g_errparam.replace[1] = ls_str
            CALL cl_err()
            LET g_errno = "showed"
            RETURN
         END IF
      OTHERWISE
         IF ls_str.subString(1,2) = "AH" THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00345"
            LET g_errparam.popup = TRUE
            LET g_errparam.replace[1] = ls_str
            CALL cl_err()
            LET g_errno = "showed"
            RETURN
         END IF
   END CASE

   #模組編號不可使用AFG 註:內部有cfg 假設建立afg，也會新增一筆cfg 這樣會造成cfg跟內部有cfg 目錄衝突
   #錯誤訊息為『此模組編號 (%1) 為系統內部定義使用，不可使用，請選擇其他模組編號。』
   IF ls_str <> "AFG" AND (

     (FGL_GETENV("ERPID") = "T100ERP" AND NOT ls_str.subString(1,1) MATCHES "[M]") OR
     (FGL_GETENV("ERPID") = "T100EXT" AND ls_str.subString(1,1) MATCHES "[M]") ) THEN 
   ELSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "azz-00170"

      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = ls_str
      CALL cl_err()
      LET g_errno = "showed"
      RETURN
   END IF 

   #若為A開頭的，則取後兩碼，轉為小寫後檢查 gzzt001，是否已存在
   #若為模組編號為 A 或B開頭且功能類別為 ERP 時，則增加給予table編號空間，取後兩碼，轉為小寫後寫入 gzzt001，
   #                           若已經有存在，則顯示錯誤訊息：『此模組名稱的table命名區塊已被占用，請更換新模組名稱!』
   #若為E開頭，或功能類別為 COM的，則不給予table編號空間

   IF p_cmd = "a" AND ls_str.subString(1,1) MATCHES "[ABM]" THEN  
      LET ls_sql = " SELECT COUNT(*) FROM gzzt_t WHERE gzzt002 = '",DOWNSHIFT(ls_str.subString(2,3)),"'"

      PREPARE azzi070_chk_cnt_pre FROM ls_sql
      EXECUTE azzi070_chk_cnt_pre INTO li_cnt   
      FREE azzi070_chk_cnt_pre            
      IF li_cnt > 0 THEN 
         LET g_errno = "azz-00075" #此模組名稱的table命名區塊已被占用，請更換新模組名稱!
         RETURN 
      END IF  
   END IF   

   #首碼為A，功能類別編號gzzj002 指定為『ERP』，非A時，指定為『COM』，
   #首碼為B/E 時，功能類別編號gzzj002 指定為『ERP』


   IF ls_str.subString(1,1) MATCHES "[ABEM]" THEN
      IF g_gzzj_m.gzzj002 <> "ERP" THEN
         LET g_gzzj_m.gzzj002 = "ERP" 

         INITIALIZE g_errparam TO NULL
         LET g_errparam.replace[1] = "Auto-modified"
         LET g_errparam.code = "lib-00305"
         LET g_errparam.popup  = FALSE
         CALL cl_err()
      END IF
      CASE 
         WHEN ls_str.subString(1,1) MATCHES "[AM]"
            IF g_gzzj_m.gzzo006 <> "A" THEN
               LET g_gzzj_m.gzzo006 = "A"
               INITIALIZE g_errparam TO NULL
               LET g_errparam.replace[1] = "Auto-modified"
               LET g_errparam.code = "lib-00305"
               LET g_errparam.popup  = FALSE
               CALL cl_err()
            END IF
         WHEN ls_str.subString(1,1) MATCHES "[B]"
            IF g_gzzj_m.gzzo006 <> "B" THEN
               LET g_gzzj_m.gzzo006 = "B"   #模組類別 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.replace[1] = "Auto-modified"
#               LET g_errparam.code = "lib-00305"  #160318-00005#55  mark
               LET g_errparam.code = "std-00008"   #160318-00005#55  add
               LET g_errparam.popup  = FALSE
               CALL cl_err()
            END IF
         WHEN ls_str.subString(1,1) MATCHES "[E]"
            IF g_gzzj_m.gzzo006 <> "E" THEN
               LET g_gzzj_m.gzzo006 = "E"



               INITIALIZE g_errparam TO NULL
               LET g_errparam.replace[1] = "Auto-modified"
#               LET g_errparam.code = "lib-00305"   #160318-00005#55  mark
               LET g_errparam.code = "std-00008"   #160318-00005#55  add
               LET g_errparam.popup  = FALSE
               CALL cl_err()
            END IF
      END CASE
   ELSE 
      IF g_gzzj_m.gzzj002 <> "COM" THEN
         LET g_gzzj_m.gzzj002 = "COM"

         INITIALIZE g_errparam TO NULL
         LET g_errparam.replace[1] = "Auto-modified"
#         LET g_errparam.code = "lib-00305"   #160318-00005#55  mark
         LET g_errparam.code = "std-00008"    #160318-00005#55  add
         LET g_errparam.popup  = FALSE
         CALL cl_err()
      END IF
   END IF

   #依照『模組類別』，
   #  若模組類別為 B，則模組編號首碼為 B，總長度 3 碼大寫字元，不可含有數字及特殊符號
   #  若模組類別為 E，則模組編號首碼為 E，總長度 3 碼大寫字元，不可含有數字及特殊符號
   #  若模組類別為 A，則建議模組編號首碼為 A，但不強制一定是A，總長度 3 碼大寫字元，不可含有數字及特殊符號
   #  (後方『功能類別』選定為 COM 時，必須回頭檢查首馬一定不可以為 A開頭，避免 naming rule 混亂)
  
   #gzzo006 模組類別 A:標準產品模組 B:行業模組 C:客製產品模組 D:客製行業模組 E:客製自訂模組
   CALL azzi070_show_gzzo007(g_gzzj_m.gzzj001)
   LET g_gzzj_m.gzzj001 = ls_str  
  
END FUNCTION
#+ insert 或 update gzzt
PRIVATE FUNCTION azzi070_ins_upd_gzzt()
  #若為模組編號為 A 或B開頭且功能類別為 ERP 時，則增加給予table編號空間，取後兩碼，轉為小寫後寫入 gzzt001，
  #若已經有存在，則顯示錯誤訊息：『此模組名稱的table命名區塊已被占用，請更換新模組名稱!』
  #若為E開頭，或功能類別為 COM的，則不給予table編號空間
   DEFINE ps_cmd STRING 
   DEFINE ls_str STRING 
   DEFINE l_gzzt RECORD 
      gzzt001 LIKE gzzt_t.gzzt001, 
      gzzt002 LIKE gzzt_t.gzzt002 
   END RECORD
   DEFINE l_count LIKE type_t.num5
   DEFINE ls_msg STRING 

   LET l_gzzt.gzzt001 = g_gzzj_m.gzzj001
   LET ls_str = g_gzzj_m.gzzj001

   #IF ps_cmd = "a" THEN
      IF ls_str.subString(1,1) = 'A' OR ls_str.subString(1,1) = 'B' OR ls_str.subString(1,1) = 'M' THEN
         LET l_gzzt.gzzt002 = DOWNSHIFT(ls_str.subString(2,3))
         #模組可用表格代碼對照表
         INSERT INTO gzzt_t (gzzt001,gzzt002)
            VALUES (l_gzzt.gzzt001,l_gzzt.gzzt002) # DISK WRITE

         #先insert 標準   
         #CALL azzi070_ins_gzzj(g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzj001)   
         IF ls_str.subString(1,1) = 'A' OR ls_str.subString(1,1) = 'M' THEN 
            IF ls_str.subString(1,1) = 'A' THEN 
               #在insert 客製
               LET ls_str = 'C',ls_str.subString(2,3) 
               LET ls_msg = cl_getmsg("lib-486",g_dlang) 
            ELSE
               #在insert 客製
               LET ls_str = 'N',ls_str.subString(2,3) 
               LET ls_msg = cl_getmsg("lib-486",g_dlang)         
            END IF 
           
            CALL azzi070_ins_gzzj(ls_str,g_gzzj_m.gzzj002,g_gzzj_m.gzzj001,ls_msg) 
         ELSE 
            LET ls_str = 'D',ls_str.subString(2,3)
            LET ls_msg = cl_getmsg("lib-487",g_dlang)            
            #在insert 客製
            CALL azzi070_ins_gzzj(ls_str,g_gzzj_m.gzzj002,g_gzzj_m.gzzj001,ls_msg)  
         END IF 
   
      END IF 
      #ENU 不新增了 原在單頭新增時，就有INSERT
      #IF ls_str.subString(1,1) = 'E' THEN
      #   CALL azzi070_ins_gzzj(g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzj001) 
      #END IF 

      #功能類別
      IF g_gzzj_m.gzzj002 = "COM" THEN 
         #CALL azzi070_ins_gzzj(g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzj001) 
         LET ls_str = 'C',g_gzzj_m.gzzj001
         LET ls_msg = cl_getmsg("lib-486",g_dlang) 
         CALL azzi070_ins_gzzj(g_gzzj_m.gzzj001,g_gzzj_m.gzzj002,g_gzzj_m.gzzj001,ls_msg)  
      END IF 
END FUNCTION

PRIVATE FUNCTION azzi070_gen_q_total()
  IF g_gzzj_m.gzzj001 = "QRY" THEN
     CALL s_azzi070_gen_qry()
  END IF
END FUNCTION
#+ 建立xxx.42x
PRIVATE FUNCTION azzi070_gen_42x(ps_file,ps_path)
   DEFINE lch_channel   base.channel
   DEFINE l_read        base.Channel
   DEFINE ps_file   STRING 
   DEFINE ps_path   STRING 
   DEFINE ls_str    STRING 
   DEFINE ls_cmd    STRING 
   DEFINE ls_msg    STRING 

   LET lch_channel = base.Channel.create()
   LET l_read = base.Channel.create()
   CALL lch_channel.setDelimiter("")
   
   IF os.Path.chdir(ps_path) THEN END IF #到模組下42m目錄
   LET ps_path = os.Path.join(ps_path,ps_file)
   CALL lch_channel.openFile(ps_path,"w")  
   #fgllink -o aii.42x WSHelper.42m
   LET ls_cmd = "fgllink -o ",ps_file," WSHelper.42m "
   
   CALL l_read.openPipe(ls_cmd, "r")
   WHILE TRUE
      LET ls_str = l_read.readLine()
      IF l_read.isEof() THEN 
          EXIT WHILE 
      END IF
      LET ls_msg = ls_msg, ls_str
   END WHILE
   CALL lch_channel.close()
   CALL l_read.close()
END FUNCTION
################################################################################
# Descriptions...: 檢查檔案是否存在
# Memo...........:
# Usage..........: CALL azzi070_check_exist_4gl_file()
#                  RETURNING 
# Input parameter: 
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi070_check_exist_4gl_file()
   DEFINE ls_path    STRING
   LET g_errno = NULL 
   LET ls_path = FGL_GETENV(g_gzzj_m.gzzj001)
   LET ls_path = os.Path.join(ls_path,"4gl")
   LET ls_path = os.Path.join(ls_path,g_gzzn_d[l_ac].gzzn002||".4gl" )
   #DISPLAY "ls_path:",ls_path
   IF NOT os.Path.exists(ls_path) THEN 
      LET g_errno = "azz-00054"
      RETURN 
   END IF 
END FUNCTION
#+ 相關目錄建立處理
PRIVATE FUNCTION azzi070_directory_process(ps_path,ps_str)
   DEFINE ps_str  STRING
   DEFINE ps_path STRING  
   DEFINE ld_lng_type   DYNAMIC ARRAY OF RECORD 
       gzzy001 LIKE gzzy_t.gzzy001
   END RECORD 
   DEFINE li            LIKE type_t.num5

   LET ld_lng_type = s_azzi070_get_gzzy()
   IF os.Path.chdir(ps_path) THEN END IF 
   IF os.Path.mkdir(ps_str)  THEN #建立該目錄
   ELSE 
      DISPLAY "WARNING 無法建立該目錄" , " 路徑:",ps_path, "目錄:",ps_str ," 該目錄已經存在"
   END IF   

   #建立語言別目錄 
   IF ps_str = "4tm" OR ps_str = "sch" OR ps_str = "42s" OR ps_str = "4ad" OR 
      ps_str = "str" OR ps_str = "tbl" OR ps_str = "4rp" OR ps_str = "back" OR 
      ps_path.getIndexOf("www",1) THEN 
      
      LET ps_path = os.Path.join(ps_path,ps_str) 
      IF os.Path.chdir(ps_path) THEN END IF 
      FOR li = 1 TO ld_lng_type.getLength()
          IF os.Path.mkdir(ld_lng_type[li].gzzy001) THEN #建立對應語言別目錄
          ELSE 
             DISPLAY "WARNING 無法建立該語言別目錄:",ld_lng_type[li].gzzy001 , " 路徑:",ps_path , "目錄:",ps_str ," 該目錄已經存在"
          END IF 
      END FOR

   END IF  
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: azzi070_ins_gzzj(pc_gzzj001,pc_gzzj002,pc_gzzj003,pc_msg)
#                  
# Input parameter: pc_gzzj001 實際模組編號   
#                : pc_gzzj002 功能類別  
#                : pc_gzzj003 歸屬模組編號
#                : pc_msg     訊息
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi070_ins_gzzj(pc_gzzj001,pc_gzzj002,pc_gzzj003,pc_msg)
 # 抄寫建立模組編號表：gzzj_t (實際模組編號 , 功能類別 , 歸屬模組編號)
 # 首碼為 A 且功能類別為 ERP 時，建立兩筆 例如 AIM 模組，建立 (AIM, ERP, AIM) 及 (CIM, ERP, AIM)  #第二筆表示會有客製目錄 CIM，但歸屬於 AIM模組
 # 首碼為 B 且功能類別為 ERP 時，建立兩筆 例如 BIC 模組，建立 (BIC, ERP, BIC) 及 (DIC, ERP, BIC)  #第二筆表示會有客製目錄 DIC，但歸屬於 BIC模組
 # 首碼為 E 且功能類別為 ERP 時，建立一筆 例如 ENU 模組，建立 (ENU, ERP, ENU) 
 # 功能類別為 COM 時，建立兩筆 例如 WSS 模組，建立 (WSS, COM, WSS) (CWSS, COM, WSS) 
 # 表示會有客製目錄 BWSS/CWSS，但歸屬於 WSS模組  DEFINE pc_gzzj001  LIKE gzzj_t.gzzj001
  DEFINE pc_gzzj001  LIKE gzzj_t.gzzj001
  DEFINE pc_gzzj002  LIKE gzzj_t.gzzj002
  DEFINE pc_gzzj003  LIKE gzzj_t.gzzj003
  DEFINE pc_msg      LIKE type_t.chr80

  INSERT INTO gzzj_t (gzzj001,gzzj002,gzzj003,gzzjstus,gzzjownid,gzzjowndp,
                     gzzjcrtid,gzzjcrtdp,gzzjcrtdt)
     VALUES (pc_gzzj001,pc_gzzj002,pc_gzzj003,g_gzzj_m.gzzjstus,g_gzzj_m.gzzjownid,g_gzzj_m.gzzjowndp, 
             g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt) # DISK WRITE 
  
  LET pc_msg = pc_msg,g_gzzj_m.gzzol003
  INSERT INTO gzzol_t(gzzol001,gzzol002,gzzol003)VALUES(pc_gzzj001,g_dlang,pc_msg)
     
END FUNCTION

################################################################################
# Descriptions...: on accept 前檢查
# Memo...........:
# Usage..........: CALL azzi070_chk_before_accept(p_cmd)
#                  RETURNING number
# Input parameter: p_cmd a/u CHAR(1)
#                : 
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi070_chk_before_accept(p_cmd)
   DEFINE ls_str STRING 
   DEFINE p_cmd  LIKE type_t.chr1 

   LET ls_str = g_gzzj_m.gzzj001

   #判斷流程
   # 確認環境-是否為客製-是:1.判類別-gzzo006(模塊類別A標準/B行業/C標準客製/D行業客製)-是:不准動
   #                                                                                  否:判是新增還是修改-新增准做/修改不准
   #                        2.判功能類型:ERP/COM - 首碼為ABCDMN者為 ERP,非屬於者(LSQW)為COM
   #                     否:1.判類別 ABCD 時准予新增, 修改不准, E類全不准
   #                        2.判功能類型:ERP/COM - 首碼為ABCDMN者為 ERP,非屬於者(LSQW)為COM

   #假如環境變數=c 只能選客製自訂模組
   IF FGL_GETENV("DGENV") = 'c' THEN
      CASE 
         WHEN g_gzzj_m.gzzo006 MATCHES '[ABCD]'
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00186" #模組類別:只能選(客製自訂模組)
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()
            RETURN 6
         OTHERWISE
            IF p_cmd = 'a' THEN 
               #DGENV=c 時只能新增 E
               IF ls_str.subString(1,1) = 'E' THEN
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "azz-00254"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  RETURN 1
               END IF
            ELSE 
               #p_cmd = u 修改狀態不能異動 
               IF g_gzzj_m.gzzo006 != g_gzzj_m_t.gzzo006 THEN 
                  #CALL cl_err('',"azz-00189",1) #模組類別:(%1) 不能修改成(%2)
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "azz-00189"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  LET g_errparam.replace[1] = g_gzzj_m_t.gzzo006
                  LET g_errparam.replace[2] = g_gzzj_m.gzzo006
                  CALL cl_err()
                  RETURN 6 
               END IF 
            END IF 
      END CASE

      #檢核 gzzj002 功能類別
      #首碼為A，功能類別編號gzzj002 指定為『ERP』，非A時，指定為『COM』，

      #首碼為ABCDEMN時，功能類別編號gzzj002 指定為『ERP』,其他則應該為COM

      IF (g_gzzj_m.gzzj002 = "ERP" AND ls_str.subString(1,1) MATCHES "[ABCDEMN]" ) OR
         (g_gzzj_m.gzzj002 = "COM" AND NOT ls_str.subString(1,1) MATCHES "[ABCDEMN]" ) THEN
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00187"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_gzzj_m.gzzj002
         CALL cl_err()
         RETURN 2
      END IF   

   #環境變數=s 能選客製自訂模組 標準產品模組、行業模組
   ELSE 
      CASE 
         WHEN g_gzzj_m.gzzo006 MATCHES "[ABE]" 
            IF p_cmd = 'a' THEN
               #C/D 開頭的模組不可以手工新增，而是要新增 A/B/E(ERP) M/E(Light)

               IF (FGL_GETENV("ERPID") = "T100ERP" AND NOT ls_str.subString(1,1) MATCHES "[M]") OR
                  (FGL_GETENV("ERPID") = "T100EXT" AND ls_str.subString(1,1) MATCHES "[ME]") THEN
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "azz-00256"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  RETURN 1
               END IF
            ELSE 
               #p_cmd = u 修改狀態不能異動 
               IF g_gzzj_m.gzzo006 != g_gzzj_m_t.gzzo006 THEN 
                  #CALL cl_err('',"azz-00189",1) #模組類別:(%1) 不能修改成(%2)
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "azz-00189"
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  LET g_errparam.replace[1] = g_gzzj_m_t.gzzo006
                  LET g_errparam.replace[2] = g_gzzj_m.gzzo006
                  CALL cl_err()
                  RETURN 6 
               END IF    
            END IF

         OTHERWISE
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = "azz-00185"
           LET g_errparam.extend = ''
           LET g_errparam.popup = TRUE
           CALL cl_err()
           #模組類別 只能選(標準產品模組、行業模組)
           RETURN 6

      END CASE 
      #檢核 gzzj002 功能類別
      #首碼為A，功能類別編號gzzj002 指定為『ERP』，非A時，指定為『COM』，
      #首碼為B/E 時，功能類別編號gzzj002 指定為『ERP』

      IF (g_gzzj_m.gzzj002 = "ERP" AND ls_str.subString(1,1) MATCHES "[ABCDEMN]" ) OR


         (g_gzzj_m.gzzj002 = "COM" AND NOT ls_str.subString(1,1) MATCHES "[ABCDEMN]" ) THEN
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00187"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_gzzj_m.gzzj002
         CALL cl_err()
         RETURN 2
      END IF 
   END IF 

   #檢核 gzzo007 歸屬行業別
   CASE 

      WHEN g_gzzj_m.gzzo006 MATCHES "[AE]"  #類別屬於標準與客制新增
         IF g_gzzj_m.gzzo007 <> "sd" THEN #標準產品模組
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00188"
            LET g_errparam.extend = ""
            LET g_errparam.popup = TRUE
            LET g_errparam.replace[1] = g_gzzj_m.gzzo007
            CALL cl_err()
            RETURN 7
         END IF 

      WHEN g_gzzj_m.gzzo006 = "B" #行業模組
         IF g_gzzj_m.gzzo007 = "sd" THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00188"
            LET g_errparam.extend = ""
            LET g_errparam.popup = TRUE
            LET g_errparam.replace[1] = g_gzzj_m.gzzo007
            CALL cl_err()
            RETURN 7
         END IF
   END CASE
   RETURN 0
END FUNCTION
#此段落由子樣板a06產生
#次要單頭table相關處理
PRIVATE FUNCTION azzi070_gzzo_t(ps_type)
 
 
   DEFINE li_cnt    LIKE type_t.num10
   DEFINE ps_type   STRING  
   DEFINE ls_sql    STRING  
 
   IF ps_type = "s" THEN 
            LET ls_sql = 'SELECT gzzo006,gzzo007,gzzo004,gzzo005,gzzo008 FROM gzzo_t WHERE gzzo001=? ' 
      DECLARE gzzo_t_cl CURSOR FROM ls_sql 
      OPEN gzzo_t_cl USING g_gzzj_m.gzzj001
      FETCH gzzo_t_cl INTO g_gzzj_m.gzzo006,g_gzzj_m.gzzo007,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008 

      IF SQLCA.sqlcode THEN
         LET g_gzzj_m.gzzo006 = NULL
         LET g_gzzj_m.gzzo007 = NULL 
         LET g_gzzj_m.gzzo004 = NULL 
         LET g_gzzj_m.gzzo005 = NULL 
         LET g_gzzj_m.gzzo008  = NULL 

      END IF 
      RETURN 
   END IF 
 
   SELECT COUNT(*) INTO li_cnt FROM gzzo_t WHERE gzzo001 = g_gzzj001_t
   
   IF li_cnt = 0 AND ps_type = "u" THEN
     IF g_gzzj_m.gzzj001[1,1] = "C" OR g_gzzj_m.gzzj001[1,1] = "D" THEN 
        RETURN 
      END IF    
      INSERT INTO gzzo_t (gzzo001,gzzo002,gzzo003,gzzo004,gzzo005,gzzo006,gzzo007,gzzo008,
                          gzzostus,gzzoownid,gzzocrtid,gzzomodid,
                          gzzoowndp,gzzocrtdp,gzzocrtdt,gzzomoddt)
      VALUES (g_gzzj_m.gzzj001,'ERP','G',g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo006,
              g_gzzj_m.gzzo007,g_gzzj_m.gzzo008,'Y',g_gzzj_m.gzzjownid,g_gzzj_m.gzzjcrtid,g_gzzj_m.gzzjmodid,
              g_gzzj_m.gzzjowndp,g_gzzj_m.gzzjcrtdp,g_gzzj_m.gzzjcrtdt,g_gzzj_m.gzzjmoddt)
   END IF 
 
   IF li_cnt > 0 AND ps_type = "u" THEN 
      UPDATE gzzo_t SET 
      (gzzo001,gzzo006,gzzo007,gzzo004,gzzo005,gzzo008 ) = 
      (g_gzzj_m.gzzj001,g_gzzj_m.gzzo006,g_gzzj_m.gzzo007,g_gzzj_m.gzzo004,g_gzzj_m.gzzo005,g_gzzj_m.gzzo008 ) 
      WHERE gzzo001 = g_gzzj001_t
   END IF 
 
   IF li_cnt > 0 AND ps_type = "d" THEN 
      DELETE FROM gzzo_t
       WHERE gzzo001 = g_gzzj001_t
   END IF 
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "azzi070" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   END IF
 
END FUNCTION

################################################################################
# Descriptions...: 顯示模組名稱
# Memo...........:
# Usage..........: CALL azzi070_desc_show(ps_gzzj001,pc_gzzj003)
#                  
# Input parameter: ps_gzzj001 模組編號
#                : pc_gzzj003 歸屬模組
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi070_desc_show(ps_gzzj001,pc_gzzj003)
   DEFINE ps_gzzj001      STRING 
   DEFINE pc_gzzj003      LIKE gzzj_t.gzzj003
   DEFINE lc_gzzj001_desc LIKE type_t.chr80
   DEFINE ls_gzzol003    LIKE gzzol_t.gzzol003

   SELECT gzzol003 INTO ls_gzzol003 FROM gzzol_t
        WHERE gzzol001 = pc_gzzj003
         AND gzzol002 = g_lang

      CASE
         WHEN ps_gzzj001.subString(1,1) = "B"    # 行業共用模組
            LET lc_gzzj001_desc = gs_gzze003_b,ls_gzzol003 CLIPPED

         WHEN ps_gzzj001.subString(1,1) = "C"   # 客製標準模組
            LET lc_gzzj001_desc = gs_gzze003_c,ls_gzzol003 CLIPPED

         WHEN ps_gzzj001.subString(1,1) = "D"   # 行業別客製模組
            LET lc_gzzj001_desc = gs_gzze003_d,ls_gzzol003 CLIPPED

         OTHERWISE   # 註冊模組
            LET lc_gzzj001_desc = ls_gzzol003 CLIPPED
      END CASE

      RETURN lc_gzzj001_desc
END FUNCTION

################################################################################
# Descriptions...: 顯示歸屬行業編號
# Memo...........:
# Usage..........: CALL azzi070_show_gzzo007(ls_str)
#        
# Input parameter: ls_str
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi070_show_gzzo007(ls_str)
   DEFINE ls_str  STRING 
   DEFINE li_cnt  LIKE type_t.num5

   IF g_gzzj_m.gzzo006 MATCHES "[ACE]"  THEN  #標準產品模組 
      LET g_gzzj_m.gzzo007 = "sd" #標準行業
   ELSE                                       #行業模組
      LET g_gzzj_m.gzzo007 = DOWNSHIFT(ls_str.subString(2,3))
      SELECT COUNT(1) INTO li_cnt FROM gzoi_t WHERE gzoi001 = g_gzzj_m.gzzo007
      IF li_cnt = 0 THEN
         LET g_gzzj_m.gzzo007 = ""

      END IF
   END IF
END FUNCTION

 
{</section>}
 
