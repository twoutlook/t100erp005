#該程式已解開Section, 不再透過樣板產出!
{<section id="azzi880.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000154
#+ 
#+ Filename...: azzi880
#+ Description: 選單維護作業
#+ Creator....: 01856(2013/10/10)
#+ Modifier...: 01856(2014/07/10)
#+ Buildtype..: 應用 i05 樣板自動產生
#+ 以上段落由子樣板a00產生
 
{</section>}
 
{<section id="azzi880.global" >}

 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzwe_m RECORD
   gzwe001 LIKE gzwe_t.gzwe001, 
   gzwe002 LIKE gzwe_t.gzwe002, 
   gzwe003 LIKE gzwe_t.gzwe003, 
   gzwel003 LIKE gzwel_t.gzwel003, 
   gzwe004 LIKE gzwe_t.gzwe004, 
   gzweownid LIKE gzwe_t.gzweownid, 
   gzweownid_desc LIKE type_t.chr80, 
   gzweowndp LIKE gzwe_t.gzweowndp, 
   gzweowndp_desc LIKE type_t.chr80, 
   gzwecrtid LIKE gzwe_t.gzwecrtid, 
   gzwecrtid_desc LIKE type_t.chr80, 
   gzwecrtdp LIKE gzwe_t.gzwecrtdp, 
   gzwecrtdp_desc LIKE type_t.chr80, 
   gzwecrtdt DATETIME YEAR TO SECOND, 
   gzwemodid LIKE gzwe_t.gzwemodid, 
   gzwemodid_desc LIKE type_t.chr80, 
   gzwemoddt DATETIME YEAR TO SECOND
                                  END RECORD
 
#模組變數(Module Variables)
DEFINE g_gzwe_m          type_g_gzwe_m
DEFINE g_gzwe_m_t        type_g_gzwe_m
DEFINE g_gzwe_m_o        type_g_gzwe_m
 
   DEFINE g_gzwe001_t LIKE gzwe_t.gzwe001
DEFINE g_gzwe002_t LIKE gzwe_t.gzwe002
 
 
#DEFINE g_gzwe002_t        LIKE gzwe_t.gzwe002
#DEFINE g_gzwe001_t        LIKE gzwe_t.gzwe001
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,    #外顯欄位
       b_pid           LIKE type_t.chr100,    #父節點id
       b_id            LIKE type_t.chr100,    #本身節點id
       b_exp           LIKE type_t.chr100,    #是否展開
       b_hasC          LIKE type_t.num5,      #是否有子節點
       b_isExp         LIKE type_t.num5,      #是否已展開
       b_expcode       LIKE type_t.num5,      #展開值
       #tree自定義欄位
          b_gzwe001 LIKE gzwe_t.gzwe001,
      b_gzwe002 LIKE gzwe_t.gzwe002,
      b_gzwe003 LIKE gzwe_t.gzwe003,
      b_gzwe004 LIKE gzwe_t.gzwe004
                   END RECORD
 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER    #root資料所在
       
#多table用變數
DEFINE g_master_multi_table_t    RECORD
      gzwel001 LIKE gzwel_t.gzwel001,
      gzwel003 LIKE gzwel_t.gzwel003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_curr_diag           ui.Dialog                #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5         
DEFINE gwin_curr             ui.Window                #Current Window
DEFINE gfrm_curr             ui.Form                  #Current Form
DEFINE g_page_action         STRING                   #page action
DEFINE g_header_hidden       LIKE type_t.num5         #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5         #隱藏工作Panel
DEFINE g_browser_cnt         LIKE type_t.num5         #total count
DEFINE g_page                STRING                   #第幾頁
DEFINE g_current_row         LIKE type_t.num5         #Browser所在筆數
DEFINE g_current_sw          LIKE type_t.num5         #Browser所在筆數用開關
 
DEFINE g_searchcol           LIKE type_t.chr200
DEFINE g_searchstr           LIKE type_t.chr200
DEFINE g_searchtype          LIKE type_t.chr200
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_root_search         BOOLEAN
DEFINE g_first               LIKE type_t.num5  #標示是否要啟動s_browse重查
DEFINE g_aw                  STRING            #確定當下點擊的單身
DEFINE g_log1                STRING            #log用
DEFINE g_log2                STRING            #log用
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_chk                 LIKE type_t.num5  #標示是否有資料
DEFINE g_gzwe_arr DYNAMIC ARRAY OF RECORD
          pid      LIKE gzwe_t.gzwe001,  #上階目錄編號
          id       LIKE gzwe_t.gzwe002   #目錄編號
       END RECORD 
DEFINE gc_arr                DYNAMIC ARRAY OF RECORD
          pid      LIKE gzwe_t.gzwe001, #上階目錄編號
          id       LIKE gzwe_t.gzwe002  #目錄編號          
       END RECORD  
#end add-point
 
#add-point:傳入參數說明(global.argv)

#end add-point
 
{</section>}
 
{<section id="azzi880.main" >}
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define

   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化

   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define

   #end add-point
   LET g_forupd_sql = " SELECT gzwe001,gzwe002,gzwe003,'',gzwe004,gzweownid,'',gzweowndp,'',gzwecrtid, 
       '',gzwecrtdp,'',gzwecrtdt,gzwemodid,'',gzwemoddt", 
                      " FROM gzwe_t",
                      " WHERE gzweent = ? AND gzwe001=? AND gzwe002=? FOR UPDATE"
   #add-point:SQL_define

   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi880_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT gzwe001,gzwe002,gzwe003,gzwe004,gzweownid,gzweowndp,gzwecrtid,gzwecrtdp, 
       gzwecrtdt,gzwemodid,gzwemoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011",
               " FROM gzwe_t",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=gzweownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=gzweowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=gzwecrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=gzwecrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=gzwemodid  ",
 
               " WHERE  gzweent = ? AND gzwe001 = ? AND gzwe002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define

   #end add-point
   PREPARE azzi880_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call

      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi880 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi880_init()   
 
      #進入選單 Menu (="N")
      CALL azzi880_ui_dialog() 
      
      #add-point:畫面關閉前

      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi880
      
   END IF 
   
   CLOSE azzi880_cl
   
   
 
   #add-point:作業離開前

   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
 
{</section>}
 
{<section id="azzi880.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi880_init()
   #add-point:init段define
   
   #end add-point 
   
   
      CALL cl_set_combo_scc('gzwe004','87') 
 
   
   #add-point:畫面資料初始化
   #查t100debug
   LET g_t100debug = FGL_GETENV("T100DEBUG")
   #end add-point
   
   CALL azzi880_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="azzi880.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION azzi880_ui_dialog()
   DEFINE li_exit      LIKE type_t.num5    #判別是否為離開作業
   #add-point:ui_dialog段define
   
   #end add-point
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
   
   #CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   #CALL gfrm_curr.setElementHidden("mainlayout",1)
   #CALL gfrm_curr.setElementHidden("worksheet",0)
   #LET g_main_hidden = 1
   
   #add-point:ui_dialog段before dialog 
   
   #end add-point
   
   WHILE li_exit = FALSE
 
      #當瀏覽頁簽被設定關閉時,使用MENU (開啟時使用DIALOG)
      IF g_worksheet_hidden = 1 THEN
 
         LET g_current_sw = FALSE
 
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = g_current_row
         LET g_current_sw = TRUE
         CALL cl_show_fld_cont() 
         CALL azzi880_fetch("")    #當每次點任一筆資料都會需要用到
 
         MENU
            #add-point:ui_dialog段其他頁簽的 display array(in menu)
            
            #end add-point
            
            
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL azzi880_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL azzi880_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL azzi880_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL azzi880_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL azzi880_fetch("") 
               LET g_current_row = g_current_idx
 
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
 
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
 
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT MENU
         
            ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi880_modify()
               #add-point:ON ACTION modify
               
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi880_delete('')
               #add-point:ON ACTION delete
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi880_insert('')
               #add-point:ON ACTION insert
               
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi880_reproduce('')
               #add-point:ON ACTION reproduce
               
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi880_query()
               #add-point:ON ACTION query
               #假如是第一筆是作業直接顯示在右邊
               IF g_browser_cnt = 0 THEN
               ELSE
                  IF g_browser[g_current_idx].b_gzwe004 = "1" THEN 
                     CALL azzi880_fetch("")
                  END IF 
               END IF 
               
               #END add-point
               
            END IF
 
 
 
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi880_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi880_set_pk_array()
            #add-point:ON ACTION agendum
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi880_set_pk_array()
            #add-point:ON ACTION followup
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
 
         END MENU
 
      ELSE
         #第一次進入程式, 或啟動重新查詢
         IF g_first = 0 THEN 
            CALL azzi880_browser_fill(g_wc,g_searchtype)
            LET g_first = 1
         END IF
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
            INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol, 
                formonly.rdo_searchtype
               BEFORE INPUT
            END INPUT
            
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
 
               BEFORE DISPLAY
                  CALL DIALOG.setSelectionMode("s_browse",1) #設定為單選
 
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_row > 1 AND g_current_sw = FALSE THEN
                     CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                     LET g_current_idx = g_current_row
                  END IF
                  LET g_current_row = g_current_idx #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont() 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
 
                  CALL azzi880_fetch("")  #當每次點任一筆資料都會需要用到
 
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL azzi880_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
 
               ON COLLAPSE (g_row_index)
                  #樹關閉
 
            END DISPLAY
 
            #add-point:ui_dialog段其他頁簽的 display array
            
            #end add-point
 
            BEFORE DIALOG
               #action default動作(判定是否要先執行特定動作)
               #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL azzi880_insert(DIALOG)
            #add-point:ON ACTION insert
            
            #END add-point
         END IF
 
      #add-point:action default自訂
      
      #end add-point
      OTHERWISE
         
   END CASE
 
 
               LET g_curr_diag = ui.DIALOG.getCurrent()
               LET g_current_sw = FALSE
 
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_sw = FALSE THEN
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               CALL cl_show_fld_cont() 
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               CALL azzi880_fetch("")            #當每次點任一筆資料都會需要用到
               #add-point:ui_dialog,before dialog
               
               #end add-point
 
            AFTER DIALOG 
               #add-point:ui_dialog,after dialog
               
               #end add-point
 
 
            #一般搜尋
            ON ACTION searchdata
               LET g_searchstr = GET_FLDBUF(searchstr)
               LET g_searchcol = GET_FLDBUF(cbo_searchcol)
               #若無輸入關鍵字則查找出所有資料
               IF g_searchcol="0" AND NOT cl_null(g_searchstr) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00001"
                  LET g_errparam.extend = "searchcol:"
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
 
                  CONTINUE DIALOG
               END IF 
               IF NOT cl_null(g_searchstr) THEN
                  LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
                  LET g_wc = g_wc.toLowerCase()
               ELSE
                  LET g_wc = " 1=1 "
               END IF
               LET g_first = 0 #啟動重查
               EXIT DIALOG
 
            #進階搜尋
            #ON ACTION advancesearch
 
            #ACTION表單列
            ON ACTION first
               LET g_current_idx = 1
               CALL azzi880_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION next
               LET g_current_idx = g_current_idx + 1
               CALL azzi880_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION jump
               CALL azzi880_fetch("/")
               LET g_current_row = g_current_idx
 
            ON ACTION previous
               LET g_current_idx = g_current_idx - 1
               CALL azzi880_fetch("")
               LET g_current_row = g_current_idx
 
            ON ACTION last 
               LET g_current_idx = g_browser_cnt
               CALL azzi880_fetch("")
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/mainhidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT DIALOG
 
            ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden
               END IF
 
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi880_modify()
               #add-point:ON ACTION modify
               
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi880_delete(DIALOG)
               #add-point:ON ACTION delete
               
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi880_insert(DIALOG)
               #add-point:ON ACTION insert
               
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL azzi880_reproduce(DIALOG)
               #add-point:ON ACTION reproduce
               
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi880_query()
               #add-point:ON ACTION query
               IF g_browser_cnt = 0 THEN
               ELSE
                  IF g_browser[g_current_idx].b_gzwe004 = "1" THEN 
                     CALL azzi880_fetch("")
                  END IF 
               END IF 
               #END add-point
               
            END IF
 
 
 
            
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL azzi880_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi880_set_pk_array()
            #add-point:ON ACTION agendum
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi880_set_pk_array()
            #add-point:ON ACTION followup
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            &include "main_menu.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION 
 
{</section>}
 
{<section id="azzi880.browser_fill" >}
#+ 瀏覽頁簽where條件組成
PRIVATE FUNCTION azzi880_browser_fill(p_wc,p_type)
   DEFINE p_wc       STRING 
   DEFINE p_type     LIKE type_t.chr10
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10   
   #add-point:browser_fill段define

   #end add-point
   
   #add-point:browser_fill段fill資料前

   #end add-point
 
   CALL g_browser.clear()
   CLEAR FORM
   LET l_cnt = 0
   LET l_cnt2 = 0
   
   DROP TABLE azzi880_tmp
   
   #Create temp table
   CREATE TEMP TABLE azzi880_tmp
   (
         gzwe001 VARCHAR(500),
   gzwe002 VARCHAR(500),
   gzwe003 VARCHAR(500),
   gzwe004 VARCHAR(500),
      #僅含browser的欄位
      exp_code  VARCHAR(5)
   );
 
   #先確定搜尋範圍(若無條件搜尋則只找root出來)
   SELECT COUNT(*) INTO l_cnt FROM gzwe_t WHERE gzweent = g_enterprise
   
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT COUNT(*)",
               " FROM gzwe_t ",
               " WHERE gzweent= ",g_enterprise," AND ",p_wc ,cl_sql_add_filter("gzwe_t")
              
   PREPARE master_cnt FROM g_sql
   DECLARE master_cntcur CURSOR FOR master_cnt
   OPEN master_cntcur
   FETCH master_cntcur INTO l_cnt2
   LET g_root_search = FALSE
   
   IF l_cnt2 = 0 THEN
      IF g_chk THEN 
         RETURN
      END IF
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "-100"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
 
      RETURN
   END IF
   
   IF l_cnt = l_cnt2 THEN
      #未輸入條件時則只查找root節點
      LET p_wc = " gzwe002 = gzwe001 "
      LET g_root_search = TRUE
   END IF
 
   #取得符合p_wc的所有資料
   LET g_sql = "SELECT gzwe001,gzwe002,gzwe003,gzwe004 ",
               " FROM gzwe_t ",
               " WHERE gzweent= ",g_enterprise," AND ",p_wc ,cl_sql_add_filter("gzwe_t")
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料           
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
 
   #搜尋建構樹所需的節點
   CASE p_type
      WHEN "1" #上推
         CALL azzi880_match_node(p_wc,p_type) 
      WHEN "2" #下展
         #CALL azzi880_find_speed_tbl(p_wc,p_type) 
         CALL azzi880_match_node(p_wc,p_type) 
      WHEN "3" #全部
         CALL azzi880_match_node(p_wc,p_type) 
   END CASE
 
   CALL azzi880_browser_create(p_type)
     
END FUNCTION
 
{</section>}
 
{<section id="azzi880.match_node" >}
PRIVATE FUNCTION azzi880_match_node(p_wc,p_type)
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位
             gzwe001 VARCHAR(500),
   gzwe002 VARCHAR(500),
   gzwe003 VARCHAR(500),
   gzwe004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD 
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
             gzwe001 VARCHAR(500),
   gzwe002 VARCHAR(500),
   gzwe003 VARCHAR(500),
   gzwe004 VARCHAR(500)
          #僅含單身table的欄位
   END RECORD    
   #add-point:match_node段define

   #end add-point
 
   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0" #展開值0則無法展開
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE
   
   IF cl_null("gzwe001") THEN
      LET ls_code = "0"
   END IF 
   
   CALL s_transaction_begin()
 
   LET g_sql = " INSERT INTO azzi880_tmp (gzwe001,gzwe002,gzwe003,gzwe004,exp_code) VALUES (?,?,?,?, 
       ?)"
   PREPARE master_tmp FROM g_sql
   
   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end("Y","0")
      RETURN
   END IF
 
   FOREACH master_extcur INTO l_bstmp.*
      EXECUTE master_tmp USING l_bstmp.*,ls_code
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
       
      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE
      
      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT gzwe001,gzwe002,gzwe003,gzwe004 ",
                  " FROM gzwe_t ",
                  " WHERE gzweent = ? AND gzwe002 = ? ",
                  cl_sql_add_filter("gzwe_t")
      PREPARE master_getparent_up FROM g_sql
      
      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].gzwe002) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF
      
         EXECUTE master_getparent_up USING l_child_list[1].gzwe001
                                           INTO l_bstmp.*
         IF SQLCA.sqlcode THEN
            FREE master_getparent_up
            EXIT WHILE
         END IF
         FREE master_getparent_up
      #確定該節點是否存在於temp table中
         
         IF STATUS = 0 AND azzi880_tmp_tbl_chk(l_bstmp.gzwe002,ls_code2
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
         CALL l_child_list.deleteElement(1)
      
      END WHILE
   
   END FOREACH
   
   CLOSE master_tmp
   
   CALL s_transaction_end("Y","0")
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.tmp_tbl_chk" >}
#+ TEMP TABLE CHK
PRIVATE FUNCTION azzi880_tmp_tbl_chk(ps_id,pi_code)
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10   
   #add-point:tmp_tbl_chk段define

   #end add-point
   
   LET ls_id = ps_id
  
   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM azzi880_tmp ", 
               " WHERE gzweent = ? AND gzwe002 = ? "
 
   PREPARE azzi880_get_cnt FROM g_sql
   EXECUTE azzi880_get_cnt USING g_enterprise,ls_id  
                                     INTO li_cnt
   FREE azzi880_get_cnt
 
   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE
    
      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM azzi880_tmp ",
                 " WHERE gzweent = ? AND gzwe002 = ? "  
 
      PREPARE azzi880_chk_exp FROM g_sql
      
      EXECUTE azzi880_chk_exp USING g_enterprise,ls_id 
                                        INTO li_code
      FREE azzi880_chk_exp
      
      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE azzi880_tmp SET (exp_code) = ('",pi_code,"') ",
                      " WHERE gzweent = ? gzwe002 = ? "
         PREPARE azzi880_upd_exp FROM g_sql
         EXECUTE azzi880_upd_exp USING g_enterprise,ls_id 
         FREE azzi880_upd_exp
      END IF
      
      RETURN FALSE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.browser_expand" >}
#+ Tree子節點展開
PRIVATE FUNCTION azzi880_browser_expand(p_id)
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         LIKE type_t.chr500
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   #add-point:browser_expand段define

   #end add-point
 
   
   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF
   
   LET l_return = FALSE
 
   LET l_keyvalue = g_browser[p_id].b_gzwe002
   
   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "azzi880_tmp"
         LET ls_exp_code = "exp_code"
      WHEN 2
         LET ls_source = "gzwe_t"
         LET ls_exp_code = "'2'"
   END CASE
   
   LET l_sql = " SELECT DISTINCT '','','','FALSE','','',",ls_exp_code,",gzwe001,gzwe002,gzwe003,gzwe004", 
 
               " FROM ",ls_source,
               
               " WHERE gzweent = ",g_enterprise ," AND gzwe001 = '", l_keyvalue,
               "' AND gzwe002 <> gzwe001",
                " ORDER BY gzwe002"
   
   #add-point:browser_expand段before_pre
   LET l_sql = " SELECT DISTINCT '','','','FALSE','','',",ls_exp_code,",gzwe001,gzwe002,gzwe003,gzwe004",
               " FROM   ",ls_source,
               " WHERE gzweent = ",g_enterprise ," AND gzwe001 = '", l_keyvalue,
               "' AND   gzwe002 <> gzwe001",
               #此程式無root欄位:" AND   = '", l_typevalue,"'", 
               " ORDER BY gzwe003"
   #end add-point
   
   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand
  
   LET l_id = p_id + 1
   LET g_cnt = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].* 
      #pid=父節點id
      LET g_browser[l_id].b_pid = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_gzwe002 = g_browser[l_id].b_gzwe002 CLIPPED
      CALL azzi880_desc_show(l_id)
      LET g_browser[l_id].b_hasC = azzi880_chk_hasC(l_id)
      IF g_browser[l_id].b_gzwe004 = "0" THEN 
         LET g_browser[l_id].b_hasC = 1
      END IF 
      LET l_id = l_id + 1
      LET g_cnt = l_id
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1
      
      LET l_return = TRUE
   END FOREACH
   
   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.browser_create" >}
PRIVATE FUNCTION azzi880_browser_create(p_type)
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   #add-point:browser_create

   #end add-point
   
   #先找出所有的帳別資料
   
   
   LET l_ac = 1
      #確定root節點所在
      #此處為帳別部分(LV-1)
      
      #抓出LV2的所有資料
      #LET g_sql = " SELECT DISTINCT gzwe001,gzwe002,gzwe003,gzwe004,exp_code FROM azzi880_tmp a ",
      LET g_sql = " SELECT DISTINCT gzwe001,gzwe002,gzwe003,gzwe004 FROM azzi880_tmp a ",
                  
                  " WHERE ",
                  " (( SELECT COUNT(*) FROM azzi880_tmp b WHERE a.gzwe001 = b.gzwe002 ", 
                  ") = 0 OR ", 
                  " a.gzwe002 = a.gzwe001 )", 
                  " ORDER BY a.gzwe002"
      #add-point:browser_create.before_pre
     LET g_sql = " SELECT DISTINCT gzwe001,gzwe002,gzwe003,gzwe004 FROM azzi880_tmp a ",
                  " WHERE ",
                  #此程式無root欄位:"a. = ? ",
                  #此程式無root欄位:" AND ",
                  " (( SELECT COUNT(*) FROM azzi880_tmp b WHERE a.gzwe001 = b.gzwe002 ", 
                  #此程式無root欄位:" AND a. = b.",
                  ") = 0 OR ", 
                  " a.gzwe002 = a.gzwe001 )", 
                  " ORDER BY a.gzwe003 "
      #end add-point
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2
      
      #以下為一般資料root(LV-2)
      
      LET g_cnt = l_ac
      
      FOREACH master_getLV2cur INTO g_browser[g_cnt].b_gzwe001,g_browser[g_cnt].b_gzwe002,g_browser[g_cnt].b_gzwe003, 
          g_browser[g_cnt].b_gzwe004 
         #去除多餘空白
         #LET g_browser[g_cnt].b_gzwe002 = g_browser[g_cnt].b_gzwe002 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         LET g_browser[g_cnt].b_expcode = 2
         #CASE g_browser[g_cnt].b_expcode
         #   WHEN 2
         #      LET g_browser[g_cnt].b_hasC = azzi880_chk_hasC(g_cnt)
         #   WHEN 1
         #      LET g_browser[g_cnt].b_hasC = azzi880_chk_hasC(g_cnt)
         #   WHEN 0
         #      LET g_browser[g_cnt].b_hasC = FALSE
         #   WHEN -1
         #      #向下查找到展開值不等於-1得節點(temp table中查找)
         #      LET g_cnt = azzi880_find_node(g_cnt)
         #END CASE
         IF cl_null("gzwe001") THEN
            LET g_browser[g_cnt].b_hasC = FALSE
         ELSE
            LET g_browser[g_cnt].b_hasC = TRUE
         END IF
 
         LET g_cnt = g_cnt + 1
      END FOREACH
      LET l_ac = g_browser.getLength()
 
   
   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_gzwe002) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL azzi880_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)
 
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()
 
   FREE tree_expand
   FREE master_getLV2
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.desc_show" >}
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION azzi880_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5   
   #add-point:desc_show段define
   DEFINE lc_show     LIKE type_t.chr100
   #end add-point
 
   LET li_tmp = l_ac
   LET l_ac = pi_ac
   
   
   #add-point:browser_create段desc處理
      #LET g_browser[l_ac].b_show = 
      #     g_browser[l_ac].b_gzwe001,
      #       '(',g_browser[l_ac].b_gzwe002,')'

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[l_ac].b_gzwe002

      #依據節點型態，決定選單名稱的取得來源
      CASE
         WHEN g_browser[l_ac].b_gzwe004 = "0"   #目錄
            CALL ap_ref_array2(g_ref_fields," SELECT gzwel003 FROM gzwel_t WHERE gzwelent ="||g_enterprise||" AND  gzwel001 = ? AND gzwel002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
         WHEN g_browser[l_ac].b_gzwe004 = "1"   #作業
            CALL ap_ref_array2(g_ref_fields," SELECT gzzal003 FROM gzzal_t WHERE gzzal001 = ? AND gzzal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
      END CASE

      LET lc_show =  g_rtn_fields[1] 
      LET g_browser[l_ac].b_show = lc_show,'(', g_browser[l_ac].b_gzwe002,')'      
      

   #end add-point
 
   LET l_ac = li_tmp
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.find_node" >}
#+ 尋找符合條件的節點
PRIVATE FUNCTION azzi880_find_node(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   DEFINE ls_pid  STRING
   #add-point:find_node段define

   #end add-point
   
   LET ls_pid = g_browser[pi_ac].b_pid
   
   LET g_sql = " SELECT DISTINCT '','','','FALSE','','',exp_code,gzwe001,gzwe002,gzwe003,gzwe004 ",
               " FROM azzi880_tmp ",
               " WHERE gzweent =? AND gzwe001 = ? AND gzwe001 <> gzwe002",
               " ORDER BY gzwe002"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode
   
   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_enterprise,g_browser[li_idx].b_gzwe002
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL azzi880_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = azzi880_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF
   
   END WHILE
   
   FREE master_getNode
   
   RETURN g_browser.getLength()
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.chk_hasC" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi880_chk_hasC(pi_id)
   DEFINE pi_id    LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:chk_hasC段define

   #end add-point
   
   LET g_sql = "SELECT COUNT(gzwe001) FROM azzi880_tmp ",
               " WHERE ",
                "gzweent = ? AND gzwe001 = ? AND ",
                "exp_code <> '-1' AND gzwe002 <> gzwe001 "
 
   PREPARE azzi880_temp_chk FROM g_sql
 
   LET g_sql = "SELECT COUNT(*) FROM gzwe_t ",
               " WHERE  ", 
               "gzweent = ? AND gzwe001 = ? ",
               "gzwe001 = ? ",
               cl_sql_add_filter("gzwe_t")
   
   PREPARE azzi880_master_chk FROM g_sql
   
   CASE g_browser[pi_id].b_expcode 
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE azzi880_temp_chk 
           USING g_enterprise,g_browser[pi_id].b_gzwe002
            INTO li_cnt
         FREE azzi880_temp_chk
      WHEN 2 
         EXECUTE azzi880_master_chk 
           USING g_enterprise,g_browser[pi_id].b_gzwe002
            INTO li_cnt
         FREE azzi880_master_chk
   END CASE
    
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi880_construct()
   DEFINE ls_wc       STRING
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   #add-point:cs段define
   
   #end add-point
    
   #清除畫面
   CLEAR FORM
   INITIALIZE g_gzwe_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_qryparam.state = "c"
    
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      CONSTRUCT BY NAME g_wc ON gzwe001,gzwe002,gzwe003,gzwel003,gzwe004,gzweownid,gzweowndp,gzwecrtid, 
          gzwecrtdp,gzwecrtdt,gzwemodid,gzwemoddt 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            
            #end add-point 
            
         #此段落由子樣板a11產生
         ##----<<gzwecrtdt>>----
         AFTER FIELD gzwecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzwemoddt>>----
         AFTER FIELD gzwemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzwecnfdt>>----
         
         #----<<gzwepstdt>>----
 
 
 
                  #此段落由子樣板a01產生
         BEFORE FIELD gzwe001
            #add-point:BEFORE FIELD gzwe001
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe001
            
            #add-point:AFTER FIELD gzwe001
            
            #END add-point
            
 
         #Ctrlp:construct.c.gzwe001
         ON ACTION controlp INFIELD gzwe001
            #add-point:ON ACTION controlp INFIELD gzwe001
            
            #END add-point
 
         #Ctrlp:construct.c.gzwe002
         ON ACTION controlp INFIELD gzwe002
            #add-point:ON ACTION controlp INFIELD gzwe002
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_gzwe001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwe002  #顯示到畫面上

            NEXT FIELD gzwe002                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwe002
            #add-point:BEFORE FIELD gzwe002
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe002
            
            #add-point:AFTER FIELD gzwe002
            
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwe003
            #add-point:BEFORE FIELD gzwe003
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe003
            
            #add-point:AFTER FIELD gzwe003
            
            #END add-point
            
 
         #Ctrlp:construct.c.gzwe003
         ON ACTION controlp INFIELD gzwe003
            #add-point:ON ACTION controlp INFIELD gzwe003
            
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwel003
            #add-point:BEFORE FIELD gzwel003
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwel003
            
            #add-point:AFTER FIELD gzwel003
            
            #END add-point
            
 
         #Ctrlp:construct.c.gzwel003
         ON ACTION controlp INFIELD gzwel003
            #add-point:ON ACTION controlp INFIELD gzwel003
            
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwe004
            #add-point:BEFORE FIELD gzwe004
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe004
            
            #add-point:AFTER FIELD gzwe004
            
            #END add-point
            
 
         #Ctrlp:construct.c.gzwe004
         ON ACTION controlp INFIELD gzwe004
            #add-point:ON ACTION controlp INFIELD gzwe004
            
            #END add-point
 
         #Ctrlp:construct.c.gzweownid
         ON ACTION controlp INFIELD gzweownid
            #add-point:ON ACTION controlp INFIELD gzweownid
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzweownid  #顯示到畫面上

            NEXT FIELD gzweownid                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzweownid
            #add-point:BEFORE FIELD gzweownid
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzweownid
            
            #add-point:AFTER FIELD gzweownid
            
            #END add-point
            
 
         #Ctrlp:construct.c.gzweowndp
         ON ACTION controlp INFIELD gzweowndp
            #add-point:ON ACTION controlp INFIELD gzweowndp
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzweowndp  #顯示到畫面上

            NEXT FIELD gzweowndp                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzweowndp
            #add-point:BEFORE FIELD gzweowndp
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzweowndp
            
            #add-point:AFTER FIELD gzweowndp
            
            #END add-point
            
 
         #Ctrlp:construct.c.gzwecrtid
         ON ACTION controlp INFIELD gzwecrtid
            #add-point:ON ACTION controlp INFIELD gzwecrtid
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwecrtid  #顯示到畫面上

            NEXT FIELD gzwecrtid                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwecrtid
            #add-point:BEFORE FIELD gzwecrtid
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwecrtid
            
            #add-point:AFTER FIELD gzwecrtid
            
            #END add-point
            
 
         #Ctrlp:construct.c.gzwecrtdp
         ON ACTION controlp INFIELD gzwecrtdp
            #add-point:ON ACTION controlp INFIELD gzwecrtdp
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwecrtdp  #顯示到畫面上

            NEXT FIELD gzwecrtdp                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwecrtdp
            #add-point:BEFORE FIELD gzwecrtdp
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwecrtdp
            
            #add-point:AFTER FIELD gzwecrtdp
            
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwecrtdt
            #add-point:BEFORE FIELD gzwecrtdt
            
            #END add-point
 
         #Ctrlp:construct.c.gzwemodid
         ON ACTION controlp INFIELD gzwemodid
            #add-point:ON ACTION controlp INFIELD gzwemodid
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzwemodid  #顯示到畫面上

            NEXT FIELD gzwemodid                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwemodid
            #add-point:BEFORE FIELD gzwemodid
            
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwemodid
            
            #add-point:AFTER FIELD gzwemodid
            
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwemoddt
            #add-point:BEFORE FIELD gzwemoddt
            
            #END add-point
 
 
       
      END CONSTRUCT
  
      #add-point:cs段more_construct
      
      #end add-point
         
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段before dialog
         
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
      
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG
 
   END DIALOG
 
   #add-point:cs段after_construct
   
   #end add-point
   
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi880_query()
   DEFINE ls_wc STRING
   #add-point:query段define
 
   #end add-point
   
   #add-point:query段查詢前
   LET g_chk = TRUE
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
 
   #CLEAR FORM
   #CALL g_browser.clear()
 
   DISPLAY " " TO FORMONLY.h_count
 
   CALL azzi880_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      #add-point:query段取消

      #end add-point
      #CALL azzi880_browser_fill(g_wc,g_searchtype)
      CALL azzi880_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_browser_cnt = 0
      LET g_current_idx = 1
      CALL g_browser.clear()
      LET g_first = 0  #設定重新查詢資料後顯示
   END IF
 
   LET g_searchtype = "3"
   LET g_searchcol = "0"
   CALL azzi880_browser_fill(g_wc,g_searchtype)
   
   #第一層模糊搜尋
   IF g_browser_cnt = 0 THEN
      LET g_chk = FALSE #只呼叫一次錯誤訊息 -100 無符合條件資料 
      LET g_wc = cl_wc_parser(g_wc)
      CALL azzi880_browser_fill(g_wc,g_searchtype)
   END IF
   
   #第二層速記碼搜尋
   #IF g_browser_cnt = 0 THEN
   #   INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = "-100"
#      LET g_errparam.extend = ""
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#
   #END IF
 
#   IF g_browser_cnt = 0 THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = "-100"
#      LET g_errparam.extend = ""
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#
#   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi880_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   DEFINE li_idx     LIKE type_t.num5
   #add-point:fetch段define

   #end add-point
   
   #add-point:fetch前

   #end add-point 
 
 
   #瀏覽頁筆數顯示
   LET li_idx = 1
   FOR li_idx = 1 TO g_browser_root.getLength()
      IF g_browser_root[li_idx] > g_current_idx THEN
       EXIT FOR
      END IF
   END FOR
   LET li_idx = g_current_idx - li_idx + 1
   #DISPLAY li_idx TO FORMONLY.h_index   #當下筆數
 
   IF p_flag = "/" THEN
      IF (NOT g_no_ask) THEN      
         CALL cl_getmsg("fetch",g_lang) RETURNING ls_msg
         LET INT_FLAG = 0
 
         PROMPT ls_msg CLIPPED,": " FOR g_jump
            #交談指令共用ACTION
            &include "common_action.4gl" 
         END PROMPT
 
         IF INT_FLAG THEN
            LET INT_FLAG = 0
         ELSE
            IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
               LET g_current_idx = g_jump
            END IF
            LET g_no_ask = FALSE  
         END IF           
      END IF
   END IF    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_gzwe_m.gzwe002 = g_browser[g_current_idx].b_gzwe002
   LET g_gzwe_m.gzwe001 = g_browser[g_current_idx].b_gzwe001
    
   #add-point:fetch段refresh前
   #pk 因gzwe001,gzwe003 少給 g_gzwe_m.gzwe003 所以手動補加
   #pid:gzwe001 id:gzwe002     
   LET g_gzwe_m.gzwe003 = g_browser[g_current_idx].b_gzwe003
   #end add-point
    
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi880_master_referesh USING g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002 INTO g_gzwe_m.gzwe001,g_gzwe_m.gzwe002, 
       g_gzwe_m.gzwe003,g_gzwe_m.gzwe004,g_gzwe_m.gzweownid,g_gzwe_m.gzweowndp,g_gzwe_m.gzwecrtid,g_gzwe_m.gzwecrtdp, 
       g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid,g_gzwe_m.gzwemoddt,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp_desc, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwemodid_desc 
   
   IF SQLCA.sqlcode THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = SQLCA.sqlcode
       LET g_errparam.extend = "gzwe_t"
       LET g_errparam.popup = TRUE
       CALL cl_err()
 
       INITIALIZE g_gzwe_m.* TO NULL
       RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段after_fetch

   #end add-point
 
   
   
   #保存單頭舊值
   LET g_gzwe_m_t.* = g_gzwe_m.*
   LET g_gzwe_m_o.* = g_gzwe_m.*
   
   #重新顯示
   CALL azzi880_show()
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   DISPLAY g_browser.getLength() TO FORMONLY.h_count 
 
   
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.insert" >}
#+ 資料新增
PRIVATE FUNCTION azzi880_insert(l_dialog)
   DEFINE l_dialog   ui.DIALOG
   DEFINE li_addpos  LIKE type_t.num5 #新增節點時產出的畫面實際位置
   #add-point:insert段define
   DEFINE li_cnt LIKE type_t.num5
   #end add-point
   
   LET g_gzwe001_t = g_gzwe_m.gzwe001
   LET g_gzwe002_t = g_gzwe_m.gzwe002
 
   LET g_gzwe002_t = g_gzwe_m.gzwe002
 
   #清畫面欄位內容
   CLEAR g_gzwe_m.*
 
   #add-point:單頭預設值

   #end add-point 
 
   INITIALIZE g_gzwe_m.* LIKE gzwe_t.*
   DISPLAY BY NAME g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwel003,g_gzwe_m.gzwe004, 
       g_gzwe_m.gzweownid,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp,g_gzwe_m.gzweowndp_desc,g_gzwe_m.gzwecrtid, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid, 
       g_gzwe_m.gzwemodid_desc,g_gzwe_m.gzwemoddt
   CALL s_transaction_begin()
 
   WHILE TRUE
      #給予pid,type預設值
      LET g_gzwe_m.gzwe001 = g_gzwe002_t
      #此段落由子樣板a14產生    
      LET g_gzwe_m.gzweownid = g_user
      LET g_gzwe_m.gzweowndp = g_dept
      LET g_gzwe_m.gzwecrtid = g_user
      LET g_gzwe_m.gzwecrtdp = g_dept 
      LET g_gzwe_m.gzwecrtdt = cl_get_current()
      LET g_gzwe_m.gzwemodid = ""
      LET g_gzwe_m.gzwemoddt = ""
 
 
      
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
      
      #單頭預設值
      
     
      #add-point:單頭預設值
      #目錄的下階目錄時,顯示順序可否自動抓MAX+1
      SELECT COUNT (*) INTO li_cnt 
         FROM gzwe_t
            WHERE  gzwe002 =  g_gzwe_m.gzwe001
      #判斷是否上階 
      IF li_cnt > 0 THEN 
         SELECT MAX(gzwe003)+1 INTO g_gzwe_m.gzwe003 
            FROM gzwe_t
              WHERE  gzwe001 = g_gzwe_m.gzwe001 
         #下階 從1開始 (假設還沒開始)
         IF cl_null(g_gzwe_m.gzwe003) THEN 
            LET g_gzwe_m.gzwe003 = 1
         END IF    
      ELSE
         #root 從0開始 
         LET g_gzwe_m.gzwe003 = 0 
      END IF
      #end add-point 
 
      CALL azzi880_input("a")
      
      #add-point:單頭輸入後

      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzwe_m.* = g_gzwe_m_t.*
         CALL azzi880_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ""
         LET g_errparam.code = 9001
         LET g_errparam.popup = FALSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         EXIT WHILE
      ELSE
          #假如是第一筆root節點
         IF g_browser.getLength() = 0 THEN 
             LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx) 
             #LET g_browser[li_addpos].b_pid = g_current_idx
             LET g_browser[li_addpos].b_id = g_browser[li_addpos].b_pid,".",g_current_idx USING "<<<"
             LET g_browser[g_current_idx].b_hasC = 1
             LET g_browser[li_addpos].b_exp = FALSE
             LET g_browser[li_addpos].b_expcode = 2
             LET g_browser[li_addpos].b_gzwe001 = g_gzwe_m.gzwe001
             LET g_browser[li_addpos].b_gzwe002 = g_gzwe_m.gzwe002
             CALL azzi880_desc_show(li_addpos)   
 
         ELSE 
            #檢查是否還有子節點,若有則做插入節點
            IF g_browser[g_current_idx].b_hasC THEN
               IF g_browser[g_current_idx].b_exp THEN
                  #插入一筆 g_browser 陣列
                  LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
                  #b_pid 因insert時有值就不指定
                  LET g_browser[li_addpos].b_id = g_browser[li_addpos].b_pid||"."||li_addpos #tree 本節點
                  LET g_browser[li_addpos].b_exp = FALSE 
                  LET g_browser[li_addpos].b_gzwe001 = g_gzwe_m.gzwe001
                  LET g_browser[li_addpos].b_gzwe002 = g_gzwe_m.gzwe002
                  IF g_gzwe_m.gzwe004 = "0" THEN #目錄
                     LET g_browser[li_addpos].b_hasC = 1
                     LET g_browser[li_addpos].b_exp = TRUE 
                     LET g_browser[li_addpos].b_gzwe004 = "0"
                  ELSE 
                     LET g_browser[li_addpos].b_hasC = 0
                     LET g_browser[li_addpos].b_exp = FALSE
                     LET g_browser[li_addpos].b_gzwe004 = "1"   
                  END IF 
                  CALL azzi880_desc_show(li_addpos)
               END IF
            ELSE
               #本身節點可以展開
               IF g_browser[g_current_idx].b_exp THEN 
                  #此處要改成已展開
                  LET g_browser[g_current_idx].b_hasC = 1
                  LET g_browser[g_current_idx].b_exp = 1
                  LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
                  LET g_browser[li_addpos].b_id = g_browser[li_addpos].b_pid||"."||li_addpos #tree 本節點
                  LET g_browser[li_addpos].b_exp = FALSE 
                  IF g_gzwe_m.gzwe004 = "0" THEN #目錄
                     LET g_browser[li_addpos].b_hasC = 1
                     LET g_browser[li_addpos].b_exp = TRUE 
                     LET g_browser[li_addpos].b_gzwe004 = "0"
                  ELSE 
                     LET g_browser[li_addpos].b_hasC = 0
                     LET g_browser[li_addpos].b_exp = FALSE
                     LET g_browser[li_addpos].b_gzwe004 = "1"   
                  END IF
                  LET g_browser[li_addpos].b_gzwe001 = g_gzwe_m.gzwe001
                  LET g_browser[li_addpos].b_gzwe002 = g_gzwe_m.gzwe002
                  #左邊tree顯示
                  CALL azzi880_desc_show(li_addpos) 
                  END IF   
            END IF 
         END IF 
      END IF
      
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.modify" >}
#+ 資料修改
PRIVATE FUNCTION azzi880_modify()
   #add-point:modify段define

   #end add-point
   
   IF g_gzwe_m.gzwe001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
      RETURN
   END IF 
   
   EXECUTE azzi880_master_referesh USING g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002 INTO g_gzwe_m.gzwe001,g_gzwe_m.gzwe002, 
       g_gzwe_m.gzwe003,g_gzwe_m.gzwe004,g_gzwe_m.gzweownid,g_gzwe_m.gzweowndp,g_gzwe_m.gzwecrtid,g_gzwe_m.gzwecrtdp, 
       g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid,g_gzwe_m.gzwemoddt,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp_desc, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwemodid_desc
 
   ERROR ""
  
   LET g_gzwe001_t = g_gzwe_m.gzwe001
   LET g_gzwe002_t = g_gzwe_m.gzwe002
 
   
   CALL s_transaction_begin()
   
   OPEN azzi880_cl USING g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN azzi880_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()
 
      CLOSE azzi880_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi880_cl INTO g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwel003,g_gzwe_m.gzwe004, 
       g_gzwe_m.gzweownid,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp,g_gzwe_m.gzweowndp_desc,g_gzwe_m.gzwecrtid, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid, 
       g_gzwe_m.gzwemodid_desc,g_gzwe_m.gzwemoddt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_gzwe_m.gzwe002
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
      CLOSE azzi880_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   CALL azzi880_show()
   WHILE TRUE
      LET g_gzwe_m.gzwe001 = g_gzwe001_t
      LET g_gzwe_m.gzwe002 = g_gzwe002_t
 
      
      #寫入修改者/修改日期資訊
      LET g_gzwe_m.gzwemodid = g_user 
LET g_gzwe_m.gzwemoddt = cl_get_current()
 
 
      #add-point:modify段修改前

      #end add-point
      
      CALL azzi880_input("u")     #欄位更改
 
      #add-point:modify段修改後

      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_gzwe_m.* = g_gzwe_m_t.*
         CALL azzi880_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = ""
         LET g_errparam.code = 9001
         LET g_errparam.popup = FALSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE gzwe_t SET (gzwemodid,gzwemoddt) = (g_gzwe_m.gzwemodid,g_gzwe_m.gzwemoddt)
        WHERE gzweent = g_enterprise 
         AND gzwe001 = g_gzwe001_t
         AND gzwe002 = g_gzwe002_t
 
      IF g_gzwe_m.gzwe004 = "1" THEN 
         LET g_browser[g_current_idx].b_gzwe002 = g_gzwe_m.gzwe002 
      END IF        
        
 
      EXIT WHILE
  
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_gzwe_m.gzwe002,g_site) THEN 
   #   CALL s_transaction_end("N","0")
   #END IF
   
   
 
   CLOSE azzi880_cl
   CALL s_transaction_end("Y","0")
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_gzwe_m.gzwe002,"U")
   
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.check" >}
#+ 避免資料錯誤
PRIVATE FUNCTION azzi880_check(ps_id,ps_pid)
   DEFINE ps_id       STRING
   DEFINE ps_pid      STRING
   DEFINE ps_type     STRING
   DEFINE ls_pid      LIKE type_t.chr100
   DEFINE ls_id       LIKE type_t.chr100
   DEFINE ls_type     LIKE type_t.chr100
   DEFINE ls_return   LIKE type_t.num5
   #add-point:check段define

   #end add-point
   
   LET ls_return = FALSE
   LET ls_pid = ps_pid
   LET ls_type = ps_type
   
   #比對所有祖先節點
   WHILE TRUE
      
      SELECT gzwe001,gzwe002 INTO ls_pid,ls_id FROM gzwe_t
         WHERE gzweent = g_enterprise AND gzwe002 = ls_pid
 
      IF SQLCA.sqlcode OR ls_pid = ls_id THEN
         EXIT WHILE
      END IF
      
      IF ls_pid = ps_id THEN
         LET ls_return = TRUE
         EXIT WHILE
      END IF
      
   END WHILE
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION azzi880_reproduce(l_dialog)
   DEFINE l_dialog      ui.DIALOG
   DEFINE li_addpos     LIKE type_t.num5
   DEFINE l_newno           LIKE gzwe_t.gzwe001 
   DEFINE l_oldno           LIKE gzwe_t.gzwe001 
   DEFINE l_newno02     LIKE gzwe_t.gzwe002 
   DEFINE l_oldno02     LIKE gzwe_t.gzwe002 
 
   DEFINE l_master          RECORD LIKE gzwe_t.*
   DEFINE l_cnt             LIKE type_t.num5  
   #add-point:reproduce段define

   #end add-point   
 
   #add-point:複製段開始前

   #end add-point
 
   #檢查PK欄位是否均有值,若全部為NULL時退出
   IF g_gzwe_m.gzwe001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
      RETURN
   END IF 
 
   EXECUTE azzi880_master_referesh USING g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002 INTO g_gzwe_m.gzwe001,g_gzwe_m.gzwe002, 
       g_gzwe_m.gzwe003,g_gzwe_m.gzwe004,g_gzwe_m.gzweownid,g_gzwe_m.gzweowndp,g_gzwe_m.gzwecrtid,g_gzwe_m.gzwecrtdp, 
       g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid,g_gzwe_m.gzwemoddt,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp_desc, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwemodid_desc
 
   #檢查如果有子節點(hasC=1)則顯示錯誤訊息後退出
 
   ERROR ""
 
   CALL cl_set_head_visible("","YES")
 
   
   LET g_gzwe_m.gzwe001 = ""
   #此段落由子樣板a14產生    
      LET g_gzwe_m.gzweownid = g_user
      LET g_gzwe_m.gzweowndp = g_dept
      LET g_gzwe_m.gzwecrtid = g_user
      LET g_gzwe_m.gzwecrtdp = g_dept 
      LET g_gzwe_m.gzwecrtdt = cl_get_current()
      LET g_gzwe_m.gzwemodid = ""
      LET g_gzwe_m.gzwemoddt = ""
 
 
   
   CALL s_transaction_begin()
 
   #add-point:複製輸入前

   #end add-point
   
   #直接呼叫輸入
   CALL azzi880_input("r")
 
   #add-point:完成複製段落後

   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      LET g_gzwe_m.* = g_gzwe_m_t.*
      CALL azzi880_show()
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code = 9001
      LET g_errparam.popup = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 9001
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
   ELSE
     #檢查是否還有子節點,若有則做插入節點
      IF g_browser[g_current_idx].b_hasC THEN
         IF g_browser[g_current_idx].b_exp THEN
            #CALL azzi850_find_node_position() RETURNING li_pos
            LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx) #從這本身的parent節點，append一個新的節點 
            LET g_browser[li_addpos].b_pid = g_browser[g_current_idx].b_id
            LET g_browser[li_addpos].b_id = g_browser[li_addpos].b_pid,".",li_addpos USING "<<<"
            IF g_gzwe_m.gzwe004 = "0" THEN #目錄
               LET g_browser[li_addpos].b_hasC = 1 
               LET g_browser[li_addpos].b_exp = FALSE 
            ELSE 
               LET g_browser[li_addpos].b_hasC = 0
               LET g_browser[li_addpos].b_exp = FALSE 
            END IF 
            
            LET g_browser[li_addpos].b_expcode = 2
            LET g_browser[li_addpos].b_gzwe001 = g_gzwe_m.gzwe001
            LET g_browser[li_addpos].b_gzwe002 = g_gzwe_m.gzwe002
            LET g_browser[li_addpos].b_gzwe003 = g_gzwe_m.gzwe003
            LET g_browser[li_addpos].b_gzwe004 = g_gzwe_m.gzwe004
            CALL azzi880_desc_show(li_addpos)
         END IF
      ELSE
         IF g_browser[g_current_idx].b_exp THEN
            #此處要改成已展開
            LET g_browser[g_current_idx].b_hasC = 1
            LET g_browser[g_current_idx].b_exp = 1
            LET li_addpos = l_dialog.appendNode("s_browse",g_current_idx)
            LET g_browser[li_addpos].b_id = g_browser[li_addpos].b_pid||"."||li_addpos #tree 本節點
            LET g_browser[li_addpos].b_exp = FALSE 
            IF g_gzwe_m.gzwe004 = "0" THEN #目錄
               LET g_browser[li_addpos].b_hasC = 1
               LET g_browser[li_addpos].b_exp = TRUE 
               LET g_browser[li_addpos].b_gzwe004 = "0"
            ELSE 
               LET g_browser[li_addpos].b_hasC = 0
               LET g_browser[li_addpos].b_exp = FALSE
               LET g_browser[li_addpos].b_gzwe004 = "1"   
           END IF
           LET g_browser[li_addpos].b_gzwe001 = g_gzwe_m.gzwe001
           LET g_browser[li_addpos].b_gzwe002 = g_gzwe_m.gzwe002
           #左邊tree顯示  
           CALL azzi880_desc_show(li_addpos)
         END IF
      END IF
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.input" >}
#+ 資料輸入
PRIVATE FUNCTION azzi880_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_cmd_t         LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define

   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r' 
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF  
   
   CALL cl_set_head_visible("","YES")
 
   LET l_insert = FALSE
   LET g_action_choice = ""
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL azzi880_set_entry(p_cmd)
   #add-point:set_entry後

   #end add-point
   CALL azzi880_set_no_entry(p_cmd)
   #add-point:set_no_entry後

   #end add-point
 
   DISPLAY BY NAME g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwel003,g_gzwe_m.gzwe004 
 
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwel003,g_gzwe_m.gzwe004  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               IF  NOT cl_null(g_gzwe_m.gzwe002) THEN
                   CALL n_gzwel(g_gzwe_m.gzwe002)
                   INITIALIZE g_ref_fields TO NULL
                   LET g_ref_fields[1] = g_gzwe_m.gzwe002
                   CALL ap_ref_array2(g_ref_fields,"SELECT gzwel003 FROM gzwel_t WHERE gzwelent ="||g_enterprise||" AND gzwel001=? AND gzwel002='"||g_lang||"'","") RETURNING g_rtn_fields
                   LET g_gzwe_m.gzwel003 = g_rtn_fields[1]               
                   DISPLAY BY NAME g_gzwe_m.gzwel003
                END IF 
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            LET g_master_multi_table_t.gzwel001 = g_gzwe_m.gzwe002
LET g_master_multi_table_t.gzwel003 = g_gzwe_m.gzwel003
 
            
            #add-point:input段define
             CALL azzi880_chk_gzwe002() 
            #end add-point
          
                  #此段落由子樣板a01產生
         BEFORE FIELD gzwe001
            #add-point:BEFORE FIELD gzwe001

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe001
            
            #add-point:AFTER FIELD gzwe001
            IF g_gzwe_m.gzwe001 <> g_gzwe_m.gzwe002 THEN 
               IF NOT ap_chk_isExist(g_gzwe_m.gzwe001,"SELECT COUNT(*) FROM gzwe_t WHERE gzweent ="||g_enterprise||" AND gzwe002 = ? ",'tree-002',1)  THEN
                  NEXT FIELD gzwe001
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwe001
            #add-point:ON CHANGE gzwe001

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwe002
            #add-point:BEFORE FIELD gzwe002

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe002
            
            #add-point:AFTER FIELD gzwe002
            #此段落由子樣板a05產生
            IF NOT cl_null(g_gzwe_m.gzwe001) AND NOT cl_null(g_gzwe_m.gzwe002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_gzwe_m.gzwe001 != g_gzwe001_t  OR g_gzwe_m.gzwe002 != g_gzwe002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzwe_t WHERE gzweent ="||g_enterprise||" AND gzwe001 = '"||g_gzwe_m.gzwe001 ||"' AND "|| "gzwe002 = '"||g_gzwe_m.gzwe002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  CALL azzi880_chk_gzwe002()
               END IF
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_gzwe_m.gzwe002

               #依據節點型態，決定選單名稱的取得來源
               CASE
                  WHEN g_gzwe_m.gzwe004 = "0"   #目錄
                     CALL ap_ref_array2(g_ref_fields," SELECT gzwel003 FROM gzwel_t WHERE gzwelent ="||g_enterprise||" AND gzwel001 = ? AND gzwel002 = '"||g_dlang||"'","") RETURNING g_rtn_fields

                  WHEN g_gzwe_m.gzwe004 = "1"   #作業
                     CALL ap_ref_array2(g_ref_fields," SELECT gzzal003 FROM gzzal_t WHERE gzzal001 = ? AND gzzal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               END CASE
               LET g_gzwe_m.gzwel003 = g_rtn_fields[1]             
               DISPLAY g_gzwe_m.gzwel003 TO gzwel003
            END IF

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwe002
            #add-point:ON CHANGE gzwe002

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwe003
            #add-point:BEFORE FIELD gzwe003

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe003
            
            #add-point:AFTER FIELD gzwe003
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_gzwe_m.gzwe001) AND NOT cl_null(g_gzwe_m.gzwe003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzwe_m.gzwe001 != g_gzwe001_t  OR g_gzwe_m.gzwe002 != g_gzwe002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzwe_t WHERE gzweent ="||g_enterprise||" AND gzwe001 = '"||g_gzwe_m.gzwe001 ||"' AND "|| "gzwe003 = '"||g_gzwe_m.gzwe003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwe003
            #add-point:ON CHANGE gzwe003

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwel003
            #add-point:BEFORE FIELD gzwel003

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwel003
            
            #add-point:AFTER FIELD gzwel003
            IF NOT cl_null(g_gzwe_m.gzwel003) THEN
               IF NOT cl_chk_tworcn(g_lang,g_gzwe_m.gzwel003,20) THEN
                  NEXT FIELD gzwel003
               END IF
            END IF
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwel003
            #add-point:ON CHANGE gzwel003

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzwe004
            #add-point:BEFORE FIELD gzwe004

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzwe004
            
            #add-point:AFTER FIELD gzwe004

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzwe004
            #add-point:ON CHANGE gzwe004
            CALL azzi880_chk_gzwe002()
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.gzwe001
         ON ACTION controlp INFIELD gzwe001
            #add-point:ON ACTION controlp INFIELD gzwe001

            #END add-point
 
         #Ctrlp:input.c.gzwe002
         ON ACTION controlp INFIELD gzwe002
            #add-point:ON ACTION controlp INFIELD gzwe002
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzwe_m.gzwe002             #給予default值

            #給予arg

            CALL q_gzzz001_1()                                #呼叫開窗

            LET g_gzwe_m.gzwe002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_gzwe_m.gzwe002 TO gzwe002              #顯示到畫面上

            NEXT FIELD gzwe002                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.gzwe003
         ON ACTION controlp INFIELD gzwe003
            #add-point:ON ACTION controlp INFIELD gzwe003

            #END add-point
 
         #Ctrlp:input.c.gzwel003
         ON ACTION controlp INFIELD gzwel003
            #add-point:ON ACTION controlp INFIELD gzwel003

            #END add-point
 
         #Ctrlp:input.c.gzwe004
         ON ACTION controlp INFIELD gzwe004
            #add-point:ON ACTION controlp INFIELD gzwe004

            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
           #避免資料錯誤的檢查
           IF azzi880_check(g_gzwe_m.gzwe002,g_gzwe_m.gzwe001
              ) THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = "tree-001"
              LET g_errparam.extend = ""
              LET g_errparam.popup = TRUE
              CALL cl_err()
 
              NEXT FIELD CURRENT
           END IF
 
            
            DISPLAY BY NAME g_gzwe_m.gzwe002
 
            #實體新增/修改/複製段落的處理
            CASE
               WHEN p_cmd = "a" OR p_cmd = "r"
                  LET l_count = 1
 
                  SELECT COUNT(*) INTO l_count FROM gzwe_t
                   WHERE gzweent = g_enterprise
                     AND gzwe001 = g_gzwe_m.gzwe001
                     AND gzwe002 = g_gzwe_m.gzwe002
 
                         #
                  IF l_count = 0 THEN
                     #add-point:單頭新增前
                     IF l_cmd_t = 'r' THEN 

                        SELECT MAX(gzwe003)+1 INTO g_gzwe_m.gzwe003 
                         FROM gzwe_t
                          WHERE gzwe001 = g_gzwe_m.gzwe001 

                        #下階 從1開始 (假設還沒開始)
                        IF cl_null(g_gzwe_m.gzwe003) THEN 
                           LET g_gzwe_m.gzwe003 = 1
                        END IF 
                        DISPLAY g_gzwe_m.gzwe003 TO gzwe003
                     END IF  
                     #end add-point
 
                    INSERT INTO gzwe_t (gzweent,gzwe001,gzwe002,gzwe003,gzwe004,gzweownid,gzweowndp,gzwecrtid, 
                         gzwecrtdp,gzwecrtdt)
                     VALUES (g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwe004,g_gzwe_m.gzweownid, 
                         g_gzwe_m.gzweowndp,g_gzwe_m.gzwecrtid,g_gzwe_m.gzwecrtdp,g_gzwe_m.gzwecrtdt)  
 
 
 
                     #add-point:單頭新增中
                     CASE
                        WHEN g_browser.getLength() < 1
                            #l_cmd = a 從第一次時，新建選單時，整個畫面沒有資料先給g_current_idx 預設值 = 1 
                             LET g_current_idx = 1                             
                        OTHERWISE
                           #l_cmd = a 當新增時，可以展開tree 讓本身這節點展開
                           CALL azzi880_find_pid() RETURNING g_current_idx 
                           IF g_current_idx = 0 THEN 
                              LET g_current_idx = 1
                           END IF  
                           LET g_browser[g_current_idx].b_exp = 1  #本身節點可以展開    
                     END CASE
                     
                     #end add-point
 
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "g_gzwe_m"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
  
                        CONTINUE DIALOG
                     END IF
                  
                     #提速檔資料建置
                     IF g_gzwe_m.gzwe002 <> g_gzwe_m.gzwe001 THEN
                        #CALL n_gzwes_generate_child(g_gzwe_m.gzwe002,g_gzwe_m.gzwe001)
                     END IF
                     
                     #add-point:單頭新增後

                     #end add-point
                     
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzwe_m.gzwe002 = g_master_multi_table_t.gzwel001 AND
         g_gzwe_m.gzwel003 = g_master_multi_table_t.gzwel003  THEN
         ELSE 
            LET l_var_keys[01] = g_gzwe_m.gzwe002
            LET l_field_keys[01] = 'gzwel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzwel001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzwel002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzwe_m.gzwel003
            LET l_fields[01] = 'gzwel003'
            LET l_vars[02] = g_enterprise
            LET l_fields[02] = 'gzwelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzwel_t')
         END IF 
 
                     CALL s_transaction_end("Y","0")
                  ELSE
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code =  "std-00006"
                     LET g_errparam.extend =  g_gzwe_m.gzwe002
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
 
                     CALL s_transaction_end("N","0")
                  END IF 
 
               #修改段落
               WHEN p_cmd = "u"  
                  #add-point:單頭修改前

                  #end add-point
                  UPDATE gzwe_t SET ( gzweent,gzwe001,gzwe002,gzwe003,gzwe004,gzweownid,gzweowndp,gzwecrtid,gzwecrtdp, 
                      gzwecrtdt) = (g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwe004, 
                      g_gzwe_m.gzweownid,g_gzwe_m.gzweowndp,g_gzwe_m.gzwecrtid,g_gzwe_m.gzwecrtdp,g_gzwe_m.gzwecrtdt) 
 
                   WHERE gzweent = g_enterprise
                     AND gzwe001 = g_gzwe001_t #
                     AND gzwe002 = g_gzwe002_t
 
                  #add-point:單頭修改中

                  #end add-point
                  CASE
                     WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "std-00009"
                        LET g_errparam.extend = "gzwe_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
 
                        CALL s_transaction_end('N','0')
                     WHEN SQLCA.sqlcode #其他錯誤
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "gzwe_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
  
                        CALL s_transaction_end('N','0')
                     OTHERWISE
                        #add-point:單頭修改後

                        #end add-point
    
                        #資料多語言用-增/改
                                 INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_gzwe_m.gzwe002 = g_master_multi_table_t.gzwel001 AND
         g_gzwe_m.gzwel003 = g_master_multi_table_t.gzwel003  THEN
         ELSE 
            LET l_var_keys[01] = g_gzwe_m.gzwe002
            LET l_field_keys[01] = 'gzwel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.gzwel001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'gzwel002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_gzwe_m.gzwel003
            LET l_fields[01] = 'gzwel003'
            LET l_vars[02] = g_enterprise
            LET l_fields[02] = 'gzwelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'gzwel_t')
         END IF 
 
                        LET g_log1 = util.JSON.stringify(g_gzwe_m_t)
                        LET g_log2 = util.JSON.stringify(g_gzwe_m)
                        IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                           CALL s_transaction_end('N','0')
                        ELSE
                           CALL s_transaction_end('Y','0')
                        END IF
                  END CASE
 
               OTHERWISE 
            END CASE
 
           #controlp
      END INPUT
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      #在dialog button (放棄)
      ON ACTION cancel
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #在dialog 右上角 (X)
      ON ACTION close       
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #toolbar 離開
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
           
   END DIALOG
   
   #add-point:input段after input 
   LET g_first = 1 #0:啟動重查 1:不啟動
   #end add-point
    
END FUNCTION
 
{</section>}
 
{<section id="azzi880.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi880_show()
   #add-point:show段define
   
   #end add-point
   
   #add-point:show段之前
   
   #end add-point
   
   
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()       
   
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_gzwe_m.gzweownid_desc = cl_get_username(g_gzwe_m.gzweownid)
      #LET g_gzwe_m.gzweowndp_desc = cl_get_deptname(g_gzwe_m.gzweowndp)
      #LET g_gzwe_m.gzwecrtid_desc = cl_get_username(g_gzwe_m.gzwecrtid)
      #LET g_gzwe_m.gzwecrtdp_desc = cl_get_deptname(g_gzwe_m.gzwecrtdp)
      #LET g_gzwe_m.gzwemodid_desc = cl_get_username(g_gzwe_m.gzwemodid)
      
 
 
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL azzi880_set_pk_array()
   #add-point:ON ACTION agendum
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:reference段之後
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_gzwe_m.gzwe002

   #依據節點型態，決定選單名稱的取得來源
   CASE
      WHEN g_gzwe_m.gzwe004 = "0"   #目錄
         CALL ap_ref_array2(g_ref_fields," SELECT gzwel003 FROM gzwel_t WHERE gzwelent ="||g_enterprise ||" AND gzwel001 = ? AND gzwel002 = '"||g_dlang||"'","") RETURNING g_rtn_fields

      WHEN g_gzwe_m.gzwe004 = "1"   #作業
         CALL ap_ref_array2(g_ref_fields," SELECT gzzal003 FROM gzzal_t WHERE gzzal001 = ? AND gzzal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
   END CASE
   LET g_gzwe_m.gzwel003 = g_rtn_fields[1] 
   DISPLAY g_gzwe_m.gzwel003 TO gzwel003

   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwel003,g_gzwe_m.gzwe004, 
       g_gzwe_m.gzweownid,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp,g_gzwe_m.gzweowndp_desc,g_gzwe_m.gzwecrtid, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid, 
       g_gzwe_m.gzwemodid_desc,g_gzwe_m.gzwemoddt
 
   #顯示狀態(stus)圖片
   
 
   #add-point:show段之後
   CALL azzi880_desc_show(g_current_idx)
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.delete" >}
#+ 資料刪除
PRIVATE FUNCTION azzi880_delete(l_dialog)
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_dialog        ui.DIALOG
   DEFINE li_status       LIKE type_t.num5  #SQL實體資料刪除狀態
   DEFINE li_cnt          LIKE type_t.num5  #查看本階是否有兄弟資料
   #add-point:delete段define

   #end add-point
   
   IF g_gzwe_m.gzwe001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:delete段before_delete

   #end add-point
 
   EXECUTE azzi880_master_referesh USING g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002 INTO g_gzwe_m.gzwe001,g_gzwe_m.gzwe002, 
       g_gzwe_m.gzwe003,g_gzwe_m.gzwe004,g_gzwe_m.gzweownid,g_gzwe_m.gzweowndp,g_gzwe_m.gzwecrtid,g_gzwe_m.gzwecrtdp, 
       g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid,g_gzwe_m.gzwemoddt,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp_desc, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwemodid_desc
    
   CALL azzi880_show()
   
   #Transaction開始
   CALL s_transaction_begin()
   
   LET g_master_multi_table_t.gzwel001 = g_gzwe_m.gzwe002
LET g_master_multi_table_t.gzwel003 = g_gzwe_m.gzwel003
 
 
   OPEN azzi880_cl USING g_enterprise,g_gzwe_m.gzwe001,g_gzwe_m.gzwe002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN azzi880_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()
 
      CLOSE azzi880_cl
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH azzi880_cl INTO g_gzwe_m.gzwe001,g_gzwe_m.gzwe002,g_gzwe_m.gzwe003,g_gzwe_m.gzwel003,g_gzwe_m.gzwe004, 
       g_gzwe_m.gzweownid,g_gzwe_m.gzweownid_desc,g_gzwe_m.gzweowndp,g_gzwe_m.gzweowndp_desc,g_gzwe_m.gzwecrtid, 
       g_gzwe_m.gzwecrtid_desc,g_gzwe_m.gzwecrtdp,g_gzwe_m.gzwecrtdp_desc,g_gzwe_m.gzwecrtdt,g_gzwe_m.gzwemodid, 
       g_gzwe_m.gzwemodid_desc,g_gzwe_m.gzwemoddt
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_gzwe_m.gzwe002
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
      CALL s_transaction_end("N","0")
      RETURN
   END IF
 
   #先判斷是否有子節點(hasC) 詢問是否砍除全部
   IF g_browser[g_current_idx].b_hasC THEN
      IF cl_ask_delete_all_node() THEN
         LET li_status = azzi880_sql_delete(TRUE)
      ELSE
         LET li_status = FALSE
      END IF
   ELSE
      #如果沒有子節點,詢問是否刪除本筆資料
      IF cl_ask_delete() THEN
         LET li_status = azzi880_sql_delete(FALSE)
      ELSE
         LET li_status = FALSE
      END IF
   END IF
 
   #檢查實體砍除是否發生意外中止
   IF NOT li_status THEN
      CALL s_transaction_end("N","0")
      CLOSE azzi880_cl
      RETURN
   END IF
 
   #刪除節點與資料內容
   CALL l_dialog.deleteNode("s_browse",g_current_idx)  #deleteNode會順便幫忙做deleteElement
   LET g_first = 1 #0:啟動重查 1:不啟動
   IF g_browser.getLength() = 0 THEN
      CLEAR FORM
   ELSE
      IF g_current_idx = 1 THEN 
         LET g_current_idx = g_browser.getLength() 
      END IF    
      #確認這一階還有沒有兄弟 (有:不異動上階屬性/否:上階hasC及exp設定成0)
      SELECT COUNT(*) INTO li_cnt
       FROM gzwe_t
         WHERE gzweenr = g_enterprise 
         AND gzwe001 = g_gzwe_m.gzwe001
     
      IF li_cnt = 0 THEN
         LET g_browser[g_current_idx - 1].b_hasC = 0
         #gzwe004 "0":目錄
         IF g_browser[g_current_idx - 1].b_gzwe004 = "0" THEN 
           LET g_browser[g_current_idx - 1].b_hasC = 1
         END IF
         LET g_browser[g_current_idx - 1].b_exp = 0
      END IF
 
      #取得CurrentRow後,將CurrentRow放入右側MainLayout
      CALL azzi880_desc_show(g_current_idx -1)
 
   #add-point:單頭刪除後
   #判斷是最後一筆
       IF (g_current_idx - 1) = g_browser.getLength() THEN 
           LET g_current_idx = g_browser.getLength()
       END IF 
       CALL azzi880_fetch("")
   #end add-point
   END IF #end if g_browser.getLength() = 0
   CLOSE azzi880_cl
   CALL s_transaction_end("Y","0")
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_gzwe_m.gzwe002,"D")
    
END FUNCTION
 
{</section>}
 
{<section id="azzi880.sql_delete" >}
#+ 實體刪除FUNCTION 
PRIVATE FUNCTION azzi880_sql_delete(li_node)
   DEFINE li_node   LIKE type_t.num5  #TRUE:砍除Node Tree/FALSE:砍除Single Node
   DEFINE li_return LIKE type_t.num5
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE li_cnt    LIKE type_t.num5
   
   LET li_return = TRUE
 
   #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL azzi880_set_pk_array()
      #add-point:相關文件刪除前

      #end add-point   
      CALL cl_doc_remove()  
 
 
 
   #add-point:單頭刪除前

   #end add-point
 
  DELETE FROM gzwe_t
    WHERE gzweent = g_enterprise 
      AND gzwe001 = g_gzwe_m.gzwe001
      AND gzwe002 = g_gzwe_m.gzwe002
 
 
   #add-point:單頭刪除中
      IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "gzwe_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CALL s_transaction_end("N","0")
   END IF

   IF li_node THEN #表示有節點
      CALL azzi880_del_child(g_gzwe_m.gzwe001,g_gzwe_m.gzwe002)
      
   END IF  

    #刪除的節點名稱 (gzwe) 如果 
    #SELECT COUNT(*) FROM gzwe_t WHERE gzwe002 = 刪除的ID  內仍存在，則多語言不應該被刪除
    SELECT COUNT(*) INTO li_cnt FROM gzwe_t WHERE gzweent = g_enterprise AND gzwe002 = g_gzwe_m.gzwe002 

   IF li_cnt > 0 THEN
      LET li_return = TRUE
      RETURN li_return
   END IF
   LET li_return = TRUE   
   #end add-point
 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "gzwe_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
      CALL s_transaction_end("N","0")
   END IF
 
   INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.gzwel001
   LET l_field_keys[01] = 'gzwel001'
   #LET l_var_keys_bak[02] = g_dlang
   #LET l_field_keys[02] = 'gzwel002'
   LET l_var_keys_bak[02] = g_enterprise
   LET l_field_keys[02] = 'gzwelent'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'gzwel_t')
 
 
   RETURN li_return
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi880_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1 
   #add-point:set_entry段define
   
   #end add-point
   
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("gzwe001,gzwe002",TRUE)
      #add-point:set_entry段欄位控制
      
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi880_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1
   #add-point:set_no_entry段define
   
   #end add-point
    
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzwe001,gzwe002",FALSE)
      #add-point:set_no_entry段欄位控制
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="azzi880.default_search" >}
#+ 外部參數預設搜尋
PRIVATE FUNCTION azzi880_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   
   #end add-point
   
   #add-point:default_search段開始前
   
   #end add-point  
   
   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzwe001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " gzwe002 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #CALL azzi880_browser_fill(g_wc,g_searchtype)
 
   #add-point:default_search段結束前
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="azzi880.state_change" >}
   
 
{</section>}
 
{<section id="azzi880.set_pk_array" >}
   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION azzi880_set_pk_array()
   #add-point:set_pk_array段define
   
   #end add-point
   
   #add-point:set_pk_array段之前
   
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzwe_m.gzwe001
   LET g_pk_array[1].column = 'gzwe001'
   LET g_pk_array[2].values = g_gzwe_m.gzwe002
   LET g_pk_array[2].column = 'gzwe002'
   
   #add-point:set_pk_array段之後
   
   #end add-point  
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="azzi880.other_function" readonly="Y" >}
#+ 檢核節點型態
PRIVATE FUNCTION azzi880_chk_gzwe002()
   DEFINE li_cnt LIKE type_t.num5
   #LET g_errno = NULL
   
   SELECT COUNT(*) INTO li_cnt FROM gzzz_t
    WHERE gzzz001 = g_gzwe_m.gzwe002
   #li_cnt > 0 是作業 gzwel_t 不用編輯，否則可以編輯 
   IF li_cnt > 0 THEN 
      LET g_gzwe_m.gzwe004 = "1" #1 作業
      CALL cl_set_comp_entry("gzwel003",FALSE)
   ELSE      
      LET g_gzwe_m.gzwe004 = "0" #0 目錄
      CALL cl_set_comp_entry("gzwel003",TRUE)
   END IF 

END FUNCTION

################################################################################
# Descriptions...: 刪除子節點以下資料
# Memo...........:
# Usage..........: CALL azzi880_del_child(pc_gzwe001,pc_gzwe002)
#                  RETURNING 回传参数
# Input parameter: pc_gzwe001
#                : pc_gzwe002
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi880_del_child(pc_gzwe001,pc_gzwe002)
   DEFINE pc_gzwe001 LIKE gzwe_t.gzwe001  #上階
   DEFINE pc_gzwe002 LIKE gzwe_t.gzwe002  #目前
   DEFINE lc_gzwe001 LIKE gzwe_t.gzwe001  #上階
   DEFINE lc_gzwe002 LIKE gzwe_t.gzwe002  #目前
   DEFINE li_total   LIKE type_t.num5
   DEFINE li_cnt     LIKE type_t.num5
   
   #取得要刪除資料的節點
   CALL azzi880_get_all(pc_gzwe002)
   #跑迴圈 依序節點往下刪除資料 
    FOR li_cnt = 1 TO g_gzwe_arr.getLength()
        CALL gc_arr.clear()
        #搜尋節點以下的資料，進行刪除
        CALL azzi880_scan_node(g_gzwe_arr[li_cnt].pid,g_gzwe_arr[li_cnt].id) #lc_gzwe002 
        IF g_t100debug = "9" THEN
           DISPLAY "5 lc_gzwe001:",g_gzwe_arr[li_cnt].pid , "5 lc_gzwe002:",g_gzwe_arr[li_cnt].id
        END IF
        #刪除沒有節點的資料
        CALL azzi880_delete_child_data(g_gzwe_arr[li_cnt].pid,g_gzwe_arr[li_cnt].id)
   END FOR 
END FUNCTION

################################################################################
# Descriptions...: 判斷是否有子節點
# Memo...........:
# Usage..........: CALL azzi880_chk_child(pc_gzwe002)
#                  RETURNING 回传参数
# Input parameter: pc_gzwe002
# Return code....: TRUE/FALSE (有子節點/沒有子節點)  
# Date & Author..: 2014/12/16 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi880_chk_child(pc_gzwe002)
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE lc_gzwe001 LIKE gzwe_t.gzwe001  #上階
   DEFINE pc_gzwe002 LIKE gzwe_t.gzwe002  #目前

   SELECT COUNT(*) INTO li_cnt FROM gzwe_t 
    WHERE gzweent = g_enterprise 
      AND gzwe001 = pc_gzwe002 

   IF li_cnt > 0 THEN  
      RETURN TRUE 
   ELSE 
      RETURN FALSE 
   END IF 
END FUNCTION

################################################################################
# Descriptions...: 刪除資料
# Memo...........:
# Usage..........: CALL azzi880_delete_child_data(pc_gzwe001,pc_gzwe002)
#                  RETURNING 
# Input parameter: pc_gzwe001 
#                : pc_gzwe002
# Return code....: 
#                : 
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi880_delete_child_data(pc_gzwe001,pc_gzwe002)
   DEFINE pc_gzwe001 LIKE gzwe_t.gzwe001  #上階
   DEFINE pc_gzwe002 LIKE gzwe_t.gzwe002  #目前

    DELETE FROM gzwe_t
     WHERE gzweent = g_enterprise
       AND gzwe001 = pc_gzwe001
       AND gzwe002 = pc_gzwe002
END FUNCTION

################################################################################
# Descriptions...: 找到上層的pid
# Memo...........:
# Usage..........: CALL azzi880_find_pid()
#                  RETURNING 回传参数
# Input parameter: 
# Return code....: 
# Date & Author..: 2014/12/18 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi880_find_pid()
   DEFINE li_ac  LIKE type_t.num5
   DEFINE li_cnt LIKE type_t.num5
   DEFINE li_chk LIKE type_t.num5

   #先找上階目錄編號，找不到再找本階目錄編號，都找不到回傳0
   LET li_chk = FALSE 
   FOR li_cnt = 1 TO g_browser.getLength()
       #找到上階目錄
       IF g_gzwe_m.gzwe001 = g_browser[li_cnt].b_gzwe001 THEN 
          LET li_chk = TRUE 
          
          EXIT FOR 
       END IF  
   END FOR
   
   IF li_chk THEN
      LET li_ac = li_cnt
   ELSE 
      LET li_ac = g_current_idx   
   END IF
   LET li_chk =  FALSE  
      #往回找找上階目錄編號 pid
      FOR li_cnt = li_ac TO 1 STEP -1  
          #找到本階目錄編號，取得的上階目錄編號
          IF g_gzwe_m.gzwe001 = g_browser[li_cnt].b_gzwe002   THEN 
             LET li_ac = li_cnt
             LET li_chk = TRUE 
             EXIT FOR 
          END IF 
      END FOR
   IF NOT li_chk THEN 
      #從下往回找找上階目錄編號 pid
      FOR li_cnt = g_browser.getLength() TO li_ac STEP -1  
          #找到本階目錄編號，取得的上階目錄編號
          IF g_gzwe_m.gzwe001 = g_browser[li_cnt].b_gzwe002   THEN 
             LET li_ac = li_cnt
             LET li_chk = TRUE 
             EXIT FOR 
          END IF 
      END FOR
   END IF

   IF NOT li_chk THEN 
      LET li_ac = 0
   END IF  
   RETURN li_ac
END FUNCTION

################################################################################
# Descriptions...: 找尋節點
# Memo...........:
# Usage..........: CALL azzi880_scan_node(pc_gzwe001,pc_gzwe002)
#                  RETURNING 
# Input parameter: pc_gzwe001 上階目錄編號
#                : pc_gzwe002 目錄編號
# Return code....: 
# Date & Author..: 2014/12/18 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi880_scan_node(pc_gzwe001,pc_gzwe002)
   DEFINE pc_gzwe001   LIKE gzwe_t.gzwe002 
   DEFINE pc_gzwe002   LIKE gzwe_t.gzwe002  
   DEFINE lc_gzwe001   LIKE gzwe_t.gzwe001 
   DEFINE lc_gzwe002   LIKE gzwe_t.gzwe002  
   DEFINE lc_gzwe002_2 LIKE gzwe_t.gzwe002 
   DEFINE li_cnt       LIKE type_t.num5  
   DEFINE li_count     LIKE type_t.num5 
   DEFINE li_chk       LIKE type_t.num5 
   DEFINE ls_sql       STRING 

   LET ls_sql = "SELECT gzwe001,gzwe002,gzwe004 FROM gzwe_t WHERE gzweent = ? AND  gzwe001 = ? ORDER BY gzwe003 "
   PREPARE azzi880_scan_node_pre FROM ls_sql
   DECLARE azzi880_scan_node_cs CURSOR FOR azzi880_scan_node_pre

   OPEN azzi880_scan_node_cs USING g_enterprise,pc_gzwe002
   
      FOREACH azzi880_scan_node_cs INTO lc_gzwe001 ,lc_gzwe002

         #判斷是否有拜訪過
         FOR li_cnt = 1 TO gc_arr.getLength()
            IF lc_gzwe002 = gc_arr[li_cnt].id AND lc_gzwe001 = gc_arr[li_cnt].pid THEN
              IF lc_gzwe002 = gc_arr[li_cnt].id AND lc_gzwe001 = gc_arr[li_cnt].pid THEN
               #有拜訪過就不繼續拜訪
               CALL azzi880_get_last(pc_gzwe002)RETURNING lc_gzwe002_2
               IF lc_gzwe002_2 = lc_gzwe002 THEN #lc_gzwe002跟最後一筆比
                  EXIT FOR
               END IF
               CALL azzi880_chk_child(lc_gzwe002) RETURNING li_chk
               IF NOT li_chk THEN  
                  IF g_t100debug = "9" THEN
                     DISPLAY "3 lc_gzwe001:",lc_gzwe001 , "3 lc_gzwe002:",lc_gzwe002
                  END IF
                  CALL azzi880_delete_child_data(lc_gzwe001,lc_gzwe002)
               END IF
               CONTINUE FOREACH
            END IF 
            END IF 
         END FOR 

         #把拜訪過的放進陣列，做為判斷下次是否繼續拜訪
         LET gc_arr[gc_arr.getLength()+1].pid = lc_gzwe001
         LET gc_arr[gc_arr.getLength()].id = lc_gzwe002 
         IF g_t100debug = "9" THEN
            DISPLAY "1 lc_gzwe001:",lc_gzwe001 , "1 lc_gzwe002:",lc_gzwe002
         END IF
         CALL azzi880_chk_child(lc_gzwe002) RETURNING li_chk  
         
         IF li_chk THEN 
            #表示有節點 開始遞迴
            CALL azzi880_scan_node(lc_gzwe001,lc_gzwe002) 
         ELSE 
             #取得最後一筆
            CALL azzi880_get_last(pc_gzwe002)RETURNING lc_gzwe002_2
            CALL azzi880_delete_child_data(lc_gzwe001 ,lc_gzwe002)
            
         END IF       
         #FOREACH 到最後一筆就不繼續 
         IF lc_gzwe002_2 = lc_gzwe002 THEN #lc_gzwe002跟最後一筆比
            CALL azzi880_chk_child(lc_gzwe002) RETURNING li_chk
            IF NOT li_chk THEN
               IF g_t100debug = "9" THEN
                  DISPLAY "2 lc_gzwe001:",lc_gzwe001 , "2 lc_gzwe002:",lc_gzwe002
               END IF            
               CALL azzi880_delete_child_data(lc_gzwe001,lc_gzwe002)
            END IF
            RETURN  
         END IF

      END FOREACH
      #沒有值就不繼續
      IF cl_null(lc_gzwe001) THEN 
         CALL azzi880_chk_child(pc_gzwe002) RETURNING li_chk  
         IF li_chk THEN 
            #表示有節點 開始遞迴
            CALL azzi880_scan_node(lc_gzwe001,lc_gzwe002) 
         ELSE 
            IF g_t100debug = "9" THEN
               DISPLAY "lc_gzwe001:",lc_gzwe001 , " lc_gzwe002:",lc_gzwe002
            END IF
            CALL azzi880_delete_child_data(lc_gzwe001,lc_gzwe002)
         END IF
         RETURN 
      END IF 
      #開始遞迴
      CALL azzi880_scan_node(lc_gzwe002,lc_gzwe001)   
END FUNCTION

################################################################################
# Descriptions...: 取要刪除的節點資料
# Memo...........:
# Usage..........: CALL azzi880_get_all(pc_gzwe002)
#                  RETURNING 
# Input parameter: pc_gzwe002 目錄編號
# Return code....: 
# Date & Author..: 2014/12/18 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi880_get_all(pc_gzwe002)
   DEFINE ps_temp STRING 
   DEFINE ls_sql STRING 
   DEFINE lc_gzwe001 LIKE gzwe_t.gzwe001
   DEFINE lc_gzwe002 LIKE gzwe_t.gzwe001 
   DEFINE pc_gzwe002 LIKE gzwe_t.gzwe002  
   DEFINE li_cnt LIKE type_t.num5
 
   LET ls_sql = "SELECT gzwe001,gzwe002 FROM gzwe_t WHERE gzweent = ",g_enterprise," AND gzwe001='",pc_gzwe002,"' ORDER BY gzwe003 "
   PREPARE azzi880_get_all_pre FROM ls_sql
   DECLARE azzi880_get_all_cur CURSOR FOR azzi880_get_all_pre

   CALL g_gzwe_arr.clear()
   FOREACH azzi880_get_all_cur INTO lc_gzwe001,lc_gzwe002
      LET g_gzwe_arr[g_gzwe_arr.getLength()+1].pid = lc_gzwe001 # 
      LET g_gzwe_arr[g_gzwe_arr.getLength()].id = lc_gzwe002 #
   END FOREACH
   CLOSE azzi880_get_all_cur
END FUNCTION

################################################################################
# Descriptions...: 取FOREACH最後一筆資料
# Memo...........:
# Usage..........: CALL azzi880_get_last(pc_gzwe002)
#                  RETURNING lc_gzwe002
# Input parameter: pc_gzwe002 目錄編號
#                : 
# Return code....: lc_gzwe002 目錄編號
# Date & Author..: 2014/12/18 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi880_get_last(pc_gzwe002)
   DEFINE pc_gzwe002    LIKE gzwe_t.gzwe002
   DEFINE lc_gzwe002    LIKE gzwe_t.gzwe002

   DECLARE azzi880_get_last_cs SCROLL CURSOR FOR 
     SELECT gzwe002 FROM gzwe_t
      WHERE gzweent = g_enterprise 
        AND gzwe001 = pc_gzwe002
        ORDER BY gzwe003

   OPEN azzi880_get_last_cs
   FETCH LAST azzi880_get_last_cs INTO lc_gzwe002

   CLOSE azzi880_get_last_cs 
   RETURN lc_gzwe002
END FUNCTION

 
{</section>}
 
