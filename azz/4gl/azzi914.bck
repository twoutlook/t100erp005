#該程式未解開Section, 採用最新樣板產出!
{<section id="azzi914.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2014-12-01 17:59:33), PR版次:0004(2016-07-13 18:43:53)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000066
#+ Filename...: azzi914
#+ Description: 查詢作業隱藏欄位
#+ Creator....: 01101(2014-10-24 16:35:58)
#+ Modifier...: 01101 -SD/PR- 02159
 
{</section>}
 
{<section id="azzi914.global" >}
#應用 i07 樣板自動產生(Version:46)
#add-point:填寫註解說明
#+ Modifier...: 01101(2014-11-19 17:36:24) 此程式欄位增減時,都要檢查 "#手動維護" 的部分
#+ Modifier...:   No.160318-00025#35   2016/04/15 BY pengxin  將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#+ Modifier...:   No.160705-00042#10   2016/07/13 By sakura   程式中寫死g_prog部分改寫MATCHES方式
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gzxk_m        RECORD
       gzxk001 LIKE gzxk_t.gzxk001, 
   gzxk001_desc LIKE type_t.chr80, 
   gzxk002 LIKE gzxk_t.gzxk002, 
   gzxk002_desc LIKE type_t.chr80, 
   gzxk003 LIKE gzxk_t.gzxk003
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gzxk_d        RECORD
       gzxkstus LIKE gzxk_t.gzxkstus, 
   gzxk006 LIKE gzxk_t.gzxk006, 
   gzxk005 LIKE gzxk_t.gzxk005, 
   dzfj009_desc LIKE type_t.chr500, 
   gzxk004 LIKE gzxk_t.gzxk004, 
   gzxk004_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_gzxk2_d RECORD
       gzxk004 LIKE gzxk_t.gzxk004, 
   gzxkownid LIKE gzxk_t.gzxkownid, 
   gzxkownid_desc LIKE type_t.chr500, 
   gzxkowndp LIKE gzxk_t.gzxkowndp, 
   gzxkowndp_desc LIKE type_t.chr500, 
   gzxkcrtid LIKE gzxk_t.gzxkcrtid, 
   gzxkcrtid_desc LIKE type_t.chr500, 
   gzxkcrtdp LIKE gzxk_t.gzxkcrtdp, 
   gzxkcrtdp_desc LIKE type_t.chr500, 
   gzxkcrtdt DATETIME YEAR TO SECOND, 
   gzxkmodid LIKE gzxk_t.gzxkmodid, 
   gzxkmodid_desc LIKE type_t.chr500, 
   gzxkmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE ms_dgenv          LIKE dzaa_t.dzaa009   #環境變數DGENV客製標示(s:標準/ c:客製)
DEFINE g_dzfq001         LIKE dzfq_t.dzfq001   #結構類型
DEFINE g_dzaf RECORD
   dzaf001 LIKE dzaf_t.dzaf001,   #建構代號
   dzaf002 LIKE dzaf_t.dzaf002,   #建構版號
   dzaf003 LIKE dzaf_t.dzaf003,   #規格版號
   dzaf004 LIKE dzaf_t.dzaf004,   #代碼版號
   dzaf005 LIKE dzaf_t.dzaf005,   #建構類型
   dzaf006 LIKE dzaf_t.dzaf006,   #模組
   dzaf007 LIKE dzaf_t.dzaf007,   #產品代號
   dzaf008 LIKE dzaf_t.dzaf008,   #產品版本
   dzaf009 LIKE dzaf_t.dzaf009,   #客戶代號
   dzaf010 LIKE dzaf_t.dzaf010    #識別標示
   END RECORD

TYPE type_treedata  RECORD    #畫面樣版架構-data
   dzfi004         LIKE dzfi_t.dzfi004,   #群組代碼-子
   dzfi007         LIKE dzfi_t.dzfi007,   #節點類型
   dzfj005         LIKE dzfj_t.dzfj005,   #包含元件代碼
   dzfj010         LIKE dzfj_t.dzfj010,   #欄位標籤代碼
   dzfj006         LIKE dzfj_t.dzfj006,   #節點類型
   dzfj009         LIKE dzfj_t.dzfj009,   #所屬結構標籤代碼

   child_cnt LIKE type_t.num5       #子節點數
   END RECORD
   
DEFINE g_tree DYNAMIC ARRAY OF RECORD        #畫面樣版架構-tree
   b_show          STRING,                    #節點名稱
   b_id            STRING,                    #節點id
   b_pid           STRING,                    #父節點id
   b_hasC          BOOLEAN,                   #TRUE:有子節點, FALSE:無子節點
   b_exp           BOOLEAN,                   #TRUE:展開, FALSE:不展開
   b_level         LIKE type_t.num5,          #階層
   dzfi004         LIKE dzfi_t.dzfi004,       #群組代碼-子
   dzfj009_desc    LIKE gzzd_t.gzzd005,       #群組代碼名稱
   dzfj005         LIKE dzfj_t.dzfj005,       #包含元件代碼
   dzfj005_desc    LIKE gzzd_t.gzzd005,       #欄位名稱
   dzfj006         LIKE dzfj_t.dzfj006        #節點類型
   END RECORD
DEFINE g_tree_att DYNAMIC ARRAY OF RECORD    #畫面樣版架構-tree顏色屬性,已使用的欄位要變色
   b_show          STRING,                    #節點名稱
   b_id            STRING,                    #節點id
   b_pid           STRING,                    #父節點id
   b_hasC          STRING,                    #TRUE:有子節點, FALSE:無子節點
   b_exp           STRING,                    #TRUE:展開, FALSE:不展開
   b_level         STRING,                    #階層
   dzfi004         STRING,                    #群組代碼-子
   dzfj009_desc    STRING,                    #群組代碼名稱
   dzfj005         STRING,                    #包含元件代碼
   dzfj005_desc    STRING,                    #欄位名稱
   dzfj006         STRING                     #節點類型
   END RECORD
DEFINE g_color_sel       STRING              #顏色:表示此資料已使用

DEFINE g_firstinit       BOOLEAN                          #是否第一次進入程式初始化
DEFINE g_gzxk001_def     LIKE gzxk_t.gzxk001              #預設畫面編號,從應用作業串過來時要預設
DEFINE g_gzxk002_def     LIKE gzxk_t.gzxk002              #指定員工編號. 系統級 員工編號 = DEFAULT;個人級 員工編號 = gzxa003
DEFINE g_gzxk_chk        DYNAMIC ARRAY OF type_g_gzxk_d   #原始資料,for比對資料異動
DEFINE g_gzxk003_notin   LIKE gzxk_t.gzxk003              #排除系統級設定的資料-客製標示
DEFINE g_form_idx        LIKE type_t.num5   #g_tree的index，用於tree_fill()的recursive

CONSTANT g_sysdef = "DEFAULT"               #系統級 員工編號 = DEFAULT
CONSTANT g_class_1 = "1"                    #QBE欄位
CONSTANT g_class_2 = "2"                    #Q類的列表
CONSTANT g_class_3 = "3"                    #查詢方案列表

#拖曳功能變數
DEFINE g_drag_idx        LIKE type_t.num5
DEFINE g_drop_idx        LIKE type_t.num5
DEFINE g_drag_source     STRING
#DEFINE g_drag_value      STRING
DEFINE dnd               ui.DragDrop 
CONSTANT S_LEFT = "s_detail3"
CONSTANT S_RIGHT1 = "s_detail1"
#拜訪走過的tree的節點
DEFINE g_view_over_arr  DYNAMIC ARRAY OF RECORD
   pid            LIKE dzfi_t.dzfi004, #父節點
   id             LIKE dzfi_t.dzfi006  #子節點
END RECORD


DEFINE g_dzfi_d  DYNAMIC ARRAY OF RECORD
   dzfi004            LIKE dzfi_t.dzfi004, #父節點
   dzfi006            LIKE dzfi_t.dzfi006,  #子節點
   dzfi007            LIKE dzfi_t.dzfi007
END RECORD


DEFINE g_cnt2     LIKE type_t.num5      #show 說明取一次
DEFINE g_id_cnt   LIKE type_t.num5      #id 序號
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_gzxk_m          type_g_gzxk_m
DEFINE g_gzxk_m_t        type_g_gzxk_m
DEFINE g_gzxk_m_o        type_g_gzxk_m
DEFINE g_gzxk_m_mask_o   type_g_gzxk_m #轉換遮罩前資料
DEFINE g_gzxk_m_mask_n   type_g_gzxk_m #轉換遮罩後資料
 
   DEFINE g_gzxk001_t LIKE gzxk_t.gzxk001
DEFINE g_gzxk002_t LIKE gzxk_t.gzxk002
DEFINE g_gzxk003_t LIKE gzxk_t.gzxk003
 
 
DEFINE g_gzxk_d          DYNAMIC ARRAY OF type_g_gzxk_d
DEFINE g_gzxk_d_t        type_g_gzxk_d
DEFINE g_gzxk_d_o        type_g_gzxk_d
DEFINE g_gzxk_d_mask_o   DYNAMIC ARRAY OF type_g_gzxk_d #轉換遮罩前資料
DEFINE g_gzxk_d_mask_n   DYNAMIC ARRAY OF type_g_gzxk_d #轉換遮罩後資料
DEFINE g_gzxk2_d   DYNAMIC ARRAY OF type_g_gzxk2_d
DEFINE g_gzxk2_d_t type_g_gzxk2_d
DEFINE g_gzxk2_d_o type_g_gzxk2_d
DEFINE g_gzxk2_d_mask_o   DYNAMIC ARRAY OF type_g_gzxk2_d #轉換遮罩前資料
DEFINE g_gzxk2_d_mask_n   DYNAMIC ARRAY OF type_g_gzxk2_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_gzxk001 LIKE gzxk_t.gzxk001,
      b_gzxk002 LIKE gzxk_t.gzxk002,
      b_gzxk003 LIKE gzxk_t.gzxk003
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="azzi914.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("azz","")
 
   #add-point:作業初始化 name="main.init"
   #160705-00042#10 160713 by sakura mark(S)
   #CASE g_prog
   #   WHEN "azzi913"        #限定個人級資料,避免直接執行azzi913沒帶入參數會查出系統級的資料
   #160705-00042#10 160713 by sakura mark(E)
   #160705-00042#10 160713 by sakura add(S)   
   CASE 
      WHEN g_prog MATCHES 'azzi913'        #限定個人級資料,避免直接執行azzi913沒帶入參數會查出系統級的資料
   #160705-00042#10 160713 by sakura add(E)
          LET g_argv[02] = g_user
   END CASE
   
   IF NOT cl_null(g_argv[01]) THEN   #畫面編號
      LET g_gzxk001_def = g_argv[01] CLIPPED
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN   #員工編號;"DEFAULT" 為系統級；g_user為個人級
      IF g_argv[02] != g_sysdef THEN
         LET g_gzxk002_def = g_user CLIPPED
      ELSE
         LET g_gzxk002_def = g_sysdef CLIPPED
      END IF
   END IF
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT gzxk001,'',gzxk002,'',gzxk003", 
                      " FROM gzxk_t",
                      " WHERE gzxkent= ? AND gzxk001=? AND gzxk002=? AND gzxk003=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi914_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.gzxk001,t0.gzxk002,t0.gzxk003,t1.gzzal003 ,t2.ooag011",
               " FROM gzxk_t t0",
                              " LEFT JOIN gzzal_t t1 ON t1.gzzal001=t0.gzxk001 AND t1.gzzal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.gzxk002  ",
 
               " WHERE t0.gzxkent = " ||g_enterprise|| " AND t0.gzxk001 = ? AND t0.gzxk002 = ? AND t0.gzxk003 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE azzi914_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_azzi914 WITH FORM cl_ap_formpath("azz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL azzi914_init()   
 
      #進入選單 Menu (="N")
      CALL azzi914_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_azzi914
      
   END IF 
   
   CLOSE azzi914_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="azzi914.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION azzi914_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   LET ms_dgenv = FGL_GETENV("DGENV") CLIPPED
   LET g_firstinit = TRUE
   LET g_color_sel = "#fbffd3 reverse"   #顏色:表示此資料已使用
   #end add-point
   
   CALL azzi914_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="azzi914.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION azzi914_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
 
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_gzxk_m.* TO NULL
         CALL g_gzxk_d.clear()
         CALL g_gzxk2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL azzi914_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_gzxk_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL azzi914_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL azzi914_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
 
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_gzxk2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL azzi914_idx_chk()
               CALL azzi914_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body2.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 2
            
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         #畫面樣版架構Tree
         DISPLAY ARRAY g_tree TO s_detail3.*  #page1  
            BEFORE DISPLAY
         END DISPLAY
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL azzi914_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL azzi914_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL azzi914_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            IF g_firstinit THEN
               LET g_firstinit = FALSE
               IF g_gzxk002_def != g_sysdef THEN   #員工編號;"DEFAULT" 為系統級；g_user為個人級
                  CALL g_curr_diag.setActionActive("insert", FALSE)
                  CALL g_curr_diag.setActionActive("query", FALSE)
                  CALL g_curr_diag.setActionActive("qbe_select", FALSE)
                  CALL g_curr_diag.setActionActive("qbe_save", FALSE)
                  IF g_gzxk_d.getLength() = 0 THEN   #個人級沒資料就進入新增模式,有資料就修改
                     LET g_actdefault = "insert"
                  ELSE
                     LET g_actdefault = "modify"
                  END IF
               END IF
               CASE g_actdefault
                  WHEN "insert"
                     LET g_action_choice="insert"
                     #LET g_actdefault = ""
                     IF cl_auth_chk_act("insert") THEN
                        CALL azzi914_insert()
                     END IF
                  WHEN "modify"
                     LET g_action_choice="modify"
                     #LET g_actdefault = ""
                     IF cl_auth_chk_act("modify") THEN
                        LET g_aw = ''
                        CALL azzi914_modify()
                     END IF
                  OTHERWISE
               END CASE
            END IF
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL azzi914_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi914_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL azzi914_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi914_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL azzi914_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi914_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL azzi914_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi914_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL azzi914_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi914_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_gzxk_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_gzxk2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gzxk004
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL azzi914_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL azzi914_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL azzi914_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL azzi914_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL azzi914_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL azzi914_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL azzi914_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL azzi914_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL azzi914_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL azzi914_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL azzi914_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION azzi914_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION azzi914_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   
   #end add-point    
 
   LET l_searchcol = "gzxk001,gzxk002,gzxk003"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT gzxk001 ",
                      ", gzxk002 ",
                      ", gzxk003 ",
 
                      " FROM gzxk_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE gzxkent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gzxk_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT gzxk001 ",
                      ", gzxk002 ",
                      ", gzxk003 ",
 
                      " FROM gzxk_t ",
                      " ",
                      " ", 
 
 
                      " WHERE gzxkent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("gzxk_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_gzxk_m.* TO NULL
      CALL g_gzxk_d.clear()        
      CALL g_gzxk2_d.clear() 
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.gzxk001,t0.gzxk002,t0.gzxk003 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.gzxk001,t0.gzxk002,t0.gzxk003",
                " FROM gzxk_t t0",
                #" ",
                " ",
 
 
 
                
                " WHERE t0.gzxkent = " ||g_enterprise|| " AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("gzxk_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"gzxk_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_gzxk001,g_browser[g_cnt].b_gzxk002,g_browser[g_cnt].b_gzxk003  
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_gzxk001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_gzxk_m.* TO NULL
      CALL g_gzxk_d.clear()
      CALL g_gzxk2_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      CALL g_gzxk_chk.clear()
      CALL g_tree.clear()
      CALL g_tree_att.clear()
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL azzi914_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION azzi914_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_gzxk_m.gzxk001 = g_browser[g_current_idx].b_gzxk001   
   LET g_gzxk_m.gzxk002 = g_browser[g_current_idx].b_gzxk002   
   LET g_gzxk_m.gzxk003 = g_browser[g_current_idx].b_gzxk003   
 
   EXECUTE azzi914_master_referesh USING g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003 INTO g_gzxk_m.gzxk001, 
       g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002_desc
   CALL azzi914_show()
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION azzi914_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION azzi914_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gzxk001 = g_gzxk_m.gzxk001 
         AND g_browser[l_i].b_gzxk002 = g_gzxk_m.gzxk002 
         AND g_browser[l_i].b_gzxk003 = g_gzxk_m.gzxk003 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION azzi914_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_gzxk_m.* TO NULL
   CALL g_gzxk_d.clear()
   CALL g_gzxk2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   CALL g_gzxk_chk.clear()
   CALL g_tree.clear()
   CALL g_tree_att.clear()
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gzxk001,gzxk002,gzxk003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            
            #end add-point 
            
                 #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk001
            #add-point:BEFORE FIELD gzxk001 name="construct.b.gzxk001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk001
            
            #add-point:AFTER FIELD gzxk001 name="construct.a.gzxk001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzxk001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk001
            #add-point:ON ACTION controlp INFIELD gzxk001 name="construct.c.gzxk001"
            #主程式與畫面azzi900
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_gzza001_5()
            DISPLAY g_qryparam.return1 TO gzxk001       #程式代號
            #END add-point
 
 
         #Ctrlp:construct.c.gzxk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk002
            #add-point:ON ACTION controlp INFIELD gzxk002 name="construct.c.gzxk002"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzxk002  #顯示到畫面上
            NEXT FIELD gzxk002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk002
            #add-point:BEFORE FIELD gzxk002 name="construct.b.gzxk002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk002
            
            #add-point:AFTER FIELD gzxk002 name="construct.a.gzxk002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk003
            #add-point:BEFORE FIELD gzxk003 name="construct.b.gzxk003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk003
            
            #add-point:AFTER FIELD gzxk003 name="construct.a.gzxk003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gzxk003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk003
            #add-point:ON ACTION controlp INFIELD gzxk003 name="construct.c.gzxk003"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON gzxkstus,gzxk006,gzxk005,gzxk004,gzxkownid,gzxkowndp,gzxkcrtid,gzxkcrtdp, 
          gzxkcrtdt,gzxkmodid,gzxkmoddt
           FROM s_detail1[1].gzxkstus,s_detail1[1].gzxk006,s_detail1[1].gzxk005,s_detail1[1].gzxk004, 
               s_detail2[1].gzxkownid,s_detail2[1].gzxkowndp,s_detail2[1].gzxkcrtid,s_detail2[1].gzxkcrtdp, 
               s_detail2[1].gzxkcrtdt,s_detail2[1].gzxkmodid,s_detail2[1].gzxkmoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<gzxkcrtdt>>----
         AFTER FIELD gzxkcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gzxkmoddt>>----
         AFTER FIELD gzxkmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gzxkcnfdt>>----
         
         #----<<gzxkpstdt>>----
 
 
 
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkstus
            #add-point:BEFORE FIELD gzxkstus name="construct.b.page1.gzxkstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxkstus
            
            #add-point:AFTER FIELD gzxkstus name="construct.a.page1.gzxkstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gzxkstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxkstus
            #add-point:ON ACTION controlp INFIELD gzxkstus name="construct.c.page1.gzxkstus"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk006
            #add-point:BEFORE FIELD gzxk006 name="construct.b.page1.gzxk006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk006
            
            #add-point:AFTER FIELD gzxk006 name="construct.a.page1.gzxk006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gzxk006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk006
            #add-point:ON ACTION controlp INFIELD gzxk006 name="construct.c.page1.gzxk006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk005
            #add-point:BEFORE FIELD gzxk005 name="construct.b.page1.gzxk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk005
            
            #add-point:AFTER FIELD gzxk005 name="construct.a.page1.gzxk005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gzxk005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk005
            #add-point:ON ACTION controlp INFIELD gzxk005 name="construct.c.page1.gzxk005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk004
            #add-point:BEFORE FIELD gzxk004 name="construct.b.page1.gzxk004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk004
            
            #add-point:AFTER FIELD gzxk004 name="construct.a.page1.gzxk004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gzxk004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk004
            #add-point:ON ACTION controlp INFIELD gzxk004 name="construct.c.page1.gzxk004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.gzxkownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxkownid
            #add-point:ON ACTION controlp INFIELD gzxkownid name="construct.c.page2.gzxkownid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzxkownid  #顯示到畫面上
            NEXT FIELD gzxkownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkownid
            #add-point:BEFORE FIELD gzxkownid name="construct.b.page2.gzxkownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxkownid
            
            #add-point:AFTER FIELD gzxkownid name="construct.a.page2.gzxkownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.gzxkowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxkowndp
            #add-point:ON ACTION controlp INFIELD gzxkowndp name="construct.c.page2.gzxkowndp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzxkowndp  #顯示到畫面上
            NEXT FIELD gzxkowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkowndp
            #add-point:BEFORE FIELD gzxkowndp name="construct.b.page2.gzxkowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxkowndp
            
            #add-point:AFTER FIELD gzxkowndp name="construct.a.page2.gzxkowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.gzxkcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxkcrtid
            #add-point:ON ACTION controlp INFIELD gzxkcrtid name="construct.c.page2.gzxkcrtid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzxkcrtid  #顯示到畫面上
            NEXT FIELD gzxkcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkcrtid
            #add-point:BEFORE FIELD gzxkcrtid name="construct.b.page2.gzxkcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxkcrtid
            
            #add-point:AFTER FIELD gzxkcrtid name="construct.a.page2.gzxkcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.gzxkcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxkcrtdp
            #add-point:ON ACTION controlp INFIELD gzxkcrtdp name="construct.c.page2.gzxkcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzxkcrtdp  #顯示到畫面上
            NEXT FIELD gzxkcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkcrtdp
            #add-point:BEFORE FIELD gzxkcrtdp name="construct.b.page2.gzxkcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxkcrtdp
            
            #add-point:AFTER FIELD gzxkcrtdp name="construct.a.page2.gzxkcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkcrtdt
            #add-point:BEFORE FIELD gzxkcrtdt name="construct.b.page2.gzxkcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.gzxkmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxkmodid
            #add-point:ON ACTION controlp INFIELD gzxkmodid name="construct.c.page2.gzxkmodid"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gzxkmodid  #顯示到畫面上
            NEXT FIELD gzxkmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkmodid
            #add-point:BEFORE FIELD gzxkmodid name="construct.b.page2.gzxkmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxkmodid
            
            #add-point:AFTER FIELD gzxkmodid name="construct.a.page2.gzxkmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkmoddt
            #add-point:BEFORE FIELD gzxkmoddt name="construct.b.page2.gzxkmoddt"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
 
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION azzi914_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   CALL g_gzxk_chk.clear()
   CALL g_tree.clear()
   CALL g_tree_att.clear()
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gzxk_d.clear()
   CALL g_gzxk2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL azzi914_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL azzi914_browser_fill(g_wc)
      CALL azzi914_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL azzi914_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL azzi914_fetch("F") 
   END IF
   
   CALL azzi914_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION azzi914_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL azzi914_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gzxk_m.gzxk001 = g_browser[g_current_idx].b_gzxk001
   LET g_gzxk_m.gzxk002 = g_browser[g_current_idx].b_gzxk002
   LET g_gzxk_m.gzxk003 = g_browser[g_current_idx].b_gzxk003
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE azzi914_master_referesh USING g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003 INTO g_gzxk_m.gzxk001, 
       g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "gzxk_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_gzxk_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_gzxk_m_mask_o.* =  g_gzxk_m.*
   CALL azzi914_gzxk_t_mask()
   LET g_gzxk_m_mask_n.* =  g_gzxk_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi914_set_act_visible()
   CALL azzi914_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_gzxk_m_t.* = g_gzxk_m.*
   LET g_gzxk_m_o.* = g_gzxk_m.*
   
   #重新顯示   
   CALL azzi914_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.insert" >}
#+ 資料新增
PRIVATE FUNCTION azzi914_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   CALL g_gzxk_chk.clear()
   CALL g_tree.clear()
   CALL g_tree_att.clear()
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_gzxk_d.clear()
   CALL g_gzxk2_d.clear()
 
 
   INITIALIZE g_gzxk_m.* LIKE gzxk_t.*             #DEFAULT 設定
   LET g_gzxk001_t = NULL
   LET g_gzxk002_t = NULL
   LET g_gzxk003_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      IF NOT cl_null(g_gzxk001_def) THEN
         LET g_gzxk_m.gzxk001 = g_gzxk001_def
      END IF
      LET g_gzxk_m.gzxk002 = g_gzxk002_def
      LET g_gzxk_m.gzxk003 = ms_dgenv
      #end add-point 
 
      CALL azzi914_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_gzxk_m.* TO NULL
         INITIALIZE g_gzxk_d TO NULL
         INITIALIZE g_gzxk2_d TO NULL
 
         CALL azzi914_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_gzxk_m.* = g_gzxk_m_t.*
         CALL azzi914_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_gzxk_d.clear()
      #CALL g_gzxk2_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi914_set_act_visible()
   CALL azzi914_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_gzxk001_t = g_gzxk_m.gzxk001
   LET g_gzxk002_t = g_gzxk_m.gzxk002
   LET g_gzxk003_t = g_gzxk_m.gzxk003
 
   
   #組合新增資料的條件
   LET g_add_browse = " gzxkent = " ||g_enterprise|| " AND",
                      " gzxk001 = '", g_gzxk_m.gzxk001, "' "
                      ," AND gzxk002 = '", g_gzxk_m.gzxk002, "' "
                      ," AND gzxk003 = '", g_gzxk_m.gzxk003, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi914_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL azzi914_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE azzi914_master_referesh USING g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003 INTO g_gzxk_m.gzxk001, 
       g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002_desc
   
   #遮罩相關處理
   LET g_gzxk_m_mask_o.* =  g_gzxk_m.*
   CALL azzi914_gzxk_t_mask()
   LET g_gzxk_m_mask_n.* =  g_gzxk_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gzxk_m.gzxk001,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002,g_gzxk_m.gzxk002_desc,g_gzxk_m.gzxk003 
 
   
   #功能已完成,通報訊息中心
   CALL azzi914_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.modify" >}
#+ 資料修改
PRIVATE FUNCTION azzi914_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_gzxk_m.gzxk001 IS NULL
   OR g_gzxk_m.gzxk002 IS NULL
   OR g_gzxk_m.gzxk003 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_gzxk001_t = g_gzxk_m.gzxk001
   LET g_gzxk002_t = g_gzxk_m.gzxk002
   LET g_gzxk003_t = g_gzxk_m.gzxk003
 
   CALL s_transaction_begin()
   
   OPEN azzi914_cl USING g_enterprise,g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi914_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE azzi914_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi914_master_referesh USING g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003 INTO g_gzxk_m.gzxk001, 
       g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002_desc
   
   #遮罩相關處理
   LET g_gzxk_m_mask_o.* =  g_gzxk_m.*
   CALL azzi914_gzxk_t_mask()
   LET g_gzxk_m_mask_n.* =  g_gzxk_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL azzi914_show()
   WHILE TRUE
      LET g_gzxk001_t = g_gzxk_m.gzxk001
      LET g_gzxk002_t = g_gzxk_m.gzxk002
      LET g_gzxk003_t = g_gzxk_m.gzxk003
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL azzi914_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_gzxk_m.* = g_gzxk_m_t.*
         CALL azzi914_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_gzxk_m.gzxk001 != g_gzxk001_t 
      OR g_gzxk_m.gzxk002 != g_gzxk002_t 
      OR g_gzxk_m.gzxk003 != g_gzxk003_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi914_set_act_visible()
   CALL azzi914_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " gzxkent = " ||g_enterprise|| " AND",
                      " gzxk001 = '", g_gzxk_m.gzxk001, "' "
                      ," AND gzxk002 = '", g_gzxk_m.gzxk002, "' "
                      ," AND gzxk003 = '", g_gzxk_m.gzxk003, "' "
 
   #填到對應位置
   CALL azzi914_browser_fill("")
 
   CALL azzi914_idx_chk()
 
   CLOSE azzi914_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL azzi914_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="azzi914.input" >}
#+ 資料輸入
PRIVATE FUNCTION azzi914_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_chk                 BOOLEAN
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gzxk_m.gzxk001,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002,g_gzxk_m.gzxk002_desc,g_gzxk_m.gzxk003 
 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT gzxkstus,gzxk006,gzxk005,gzxk004,gzxk004,gzxkownid,gzxkowndp,gzxkcrtid, 
       gzxkcrtdp,gzxkcrtdt,gzxkmodid,gzxkmoddt FROM gzxk_t WHERE gzxkent=? AND gzxk001=? AND gzxk002=?  
       AND gzxk003=? AND gzxk004=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE azzi914_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL azzi914_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL azzi914_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_gzxk_m.gzxk001,g_gzxk_m.gzxk002
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   #不執行程式樣板產生的DIALOG段落   #手動維護
   INITIALIZE g_drag_idx TO NULL
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)


   
      #單頭段
      INPUT BY NAME g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前

            #end add-point
          
                  #此段落由子樣板a01產生
         BEFORE FIELD gzxk001
            #add-point:BEFORE FIELD gzxk001
            IF g_actdefault = "insert" THEN
               IF  NOT cl_null(g_gzxk_m.gzxk001) AND NOT cl_null(g_gzxk_m.gzxk002) AND NOT cl_null(g_gzxk_m.gzxk003) THEN 
                  IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzxk_m.gzxk001 != g_gzxk001_t  OR g_gzxk_m.gzxk002 != g_gzxk002_t  OR g_gzxk_m.gzxk003 != g_gzxk003_t )) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxk_t WHERE "||"gzxkent = '" ||g_enterprise|| "' AND "||"gzxk001 = '"||g_gzxk_m.gzxk001 ||"' AND "|| "gzxk002 = '"||g_gzxk_m.gzxk002 ||"' AND "|| "gzxk003 = '"||g_gzxk_m.gzxk003 ||"'",'std-00004',0) THEN 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               #l_chk: 1 #g_dzaf.dzaf003: 14 版次 #g_dzaf.dzaf010: s 使用標示 #g_dzfq001:"F001_00" UI版型
               CALL cl_ui_qbefield_tpl_chk(g_gzxk_m.gzxk001,FALSE) RETURNING l_chk,g_dzaf.dzaf003,g_dzaf.dzaf010,g_dzfq001   #檢查畫面版型是否可使用此功能,並取得規格的版次和識別標示
               CALL azzi914_tree_fill(g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_dzaf.dzaf003,g_dzaf.dzaf010,"ALL",0,0)
            END IF
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxk001
            
            #add-point:AFTER FIELD gzxk001
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_gzxk_m.gzxk001) AND NOT cl_null(g_gzxk_m.gzxk002) AND NOT cl_null(g_gzxk_m.gzxk003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzxk_m.gzxk001 != g_gzxk001_t  OR g_gzxk_m.gzxk002 != g_gzxk002_t  OR g_gzxk_m.gzxk003 != g_gzxk003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxk_t WHERE "||"gzxkent = '" ||g_enterprise|| "' AND "||"gzxk001 = '"||g_gzxk_m.gzxk001 ||"' AND "|| "gzxk002 = '"||g_gzxk_m.gzxk002 ||"' AND "|| "gzxk003 = '"||g_gzxk_m.gzxk003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            CALL cl_ui_qbefield_tpl_chk(g_gzxk_m.gzxk001,TRUE) RETURNING l_chk,g_dzaf.dzaf003,g_dzaf.dzaf010,g_dzfq001   #檢查畫面版型是否可使用此功能,並取得規格的版次和識別標示
            CALL azzi914_tree_fill(g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_dzaf.dzaf003,g_dzaf.dzaf010,"ALL",0,0)
            #IF NOT l_chk THEN
            #   NEXT FIELD CURRENT
            #END IF
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzxk001
            #add-point:ON CHANGE gzxk001 

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxk002
            
            #add-point:AFTER FIELD gzxk002
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzxk_m.gzxk002
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzxk_m.gzxk002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzxk_m.gzxk002_desc

            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_gzxk_m.gzxk001) AND NOT cl_null(g_gzxk_m.gzxk002) AND NOT cl_null(g_gzxk_m.gzxk003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzxk_m.gzxk001 != g_gzxk001_t  OR g_gzxk_m.gzxk002 != g_gzxk002_t  OR g_gzxk_m.gzxk003 != g_gzxk003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxk_t WHERE "||"gzxkent = '" ||g_enterprise|| "' AND "||"gzxk001 = '"||g_gzxk_m.gzxk001 ||"' AND "|| "gzxk002 = '"||g_gzxk_m.gzxk002 ||"' AND "|| "gzxk003 = '"||g_gzxk_m.gzxk003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF g_gzxk_m.gzxk002 <> g_sysdef THEN   #系統級 員工編號 = DEFAULT
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_gzxk_m.gzxk002
               #160318-00025#35  2016/05/15  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
               #160318-00025#35  2016/05/15  by pengxin  add(E)
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            ELSE
            END IF
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzxk002
            #add-point:BEFORE FIELD gzxk002

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE gzxk002
            #add-point:ON CHANGE gzxk002

            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD gzxk003
            #add-point:BEFORE FIELD gzxk003

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD gzxk003
            
            #add-point:AFTER FIELD gzxk003
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_gzxk_m.gzxk001) AND NOT cl_null(g_gzxk_m.gzxk002) AND NOT cl_null(g_gzxk_m.gzxk003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzxk_m.gzxk001 != g_gzxk001_t  OR g_gzxk_m.gzxk002 != g_gzxk002_t  OR g_gzxk_m.gzxk003 != g_gzxk003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxk_t WHERE "||"gzxkent = '" ||g_enterprise|| "' AND "||"gzxk001 = '"||g_gzxk_m.gzxk001 ||"' AND "|| "gzxk002 = '"||g_gzxk_m.gzxk002 ||"' AND "|| "gzxk003 = '"||g_gzxk_m.gzxk003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE gzxk003
            #add-point:ON CHANGE gzxk003

            #END add-point
 
         #欄位檢查
                  #Ctrlp:input.c.gzxk001
         ON ACTION controlp INFIELD gzxk001
            #add-point:ON ACTION controlp INFIELD gzxk001
            #主程式與畫面azzi900
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = TRUE
            LET g_qryparam.default1 = ""                             #模組
            LET g_qryparam.default2 = g_gzxk_m.gzxk001 CLIPPED       #程式代號
            LET g_qryparam.default3 = g_gzxk_m.gzxk001_desc CLIPPED  #程式名稱
            LET g_qryparam.default4 = ""                             #程式類別
            LET g_qryparam.where = "gzzastus = 'Y'"
            CALL q_gzza001()
            #LET p_module = g_qryparam.return1 CLIPPED
            LET g_gzxk_m.gzxk001 = g_qryparam.return2 CLIPPED
            LET g_gzxk_m.gzxk001_desc = g_qryparam.return3 CLIPPED
            #LET p_prog_class = g_qryparam.return4 CLIPPED
            INITIALIZE g_qryparam.where TO NULL
            DISPLAY BY NAME g_gzxk_m.gzxk001,g_gzxk_m.gzxk001_desc
            #END add-point
 
         #Ctrlp:input.c.gzxk002
         ON ACTION controlp INFIELD gzxk002
            #add-point:ON ACTION controlp INFIELD gzxk002
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzxk_m.gzxk002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_gzxk_m.gzxk002 = g_qryparam.return1              

            DISPLAY g_gzxk_m.gzxk002 TO gzxk002              #

            NEXT FIELD gzxk002                          #返回原欄位


            #END add-point
 
         #Ctrlp:input.c.gzxk003
         ON ACTION controlp INFIELD gzxk003
            #add-point:ON ACTION controlp INFIELD gzxk003

            #END add-point
 
         #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_gzxk_m.gzxk001             
                            ,g_gzxk_m.gzxk002   
                            ,g_gzxk_m.gzxk003   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前

               #end add-point
            
               UPDATE gzxk_t SET (gzxk001,gzxk002,gzxk003) = (g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003) 

                WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk001_t
                  AND gzxk002 = g_gzxk002_t
                  AND gzxk003 = g_gzxk003_t
 
               #add-point:單頭修改中

               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzxk_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzxk_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzxk_m.gzxk001
               LET gs_keys_bak[1] = g_gzxk001_t
               LET gs_keys[2] = g_gzxk_m.gzxk002
               LET gs_keys_bak[2] = g_gzxk002_t
               LET gs_keys[3] = g_gzxk_m.gzxk003
               LET gs_keys_bak[3] = g_gzxk003_t
               LET gs_keys[4] = g_gzxk_d[g_detail_idx].gzxk004
               LET gs_keys_bak[4] = g_gzxk_d_t.gzxk004
               CALL azzi914_update_b('gzxk_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後

                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_gzxk_m_t)
                     LET g_log2 = util.JSON.stringify(g_gzxk_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增

               #end add-point
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi914_detail_reproduce()
               END IF
            END IF
 
           LET g_gzxk001_t = g_gzxk_m.gzxk001
           LET g_gzxk002_t = g_gzxk_m.gzxk002
           LET g_gzxk003_t = g_gzxk_m.gzxk003
 
           
           IF g_gzxk_d.getLength() = 0 THEN
              NEXT FIELD gzxk004
           END IF
 
      END INPUT

      #畫面樣版架構Tree
      DISPLAY ARRAY g_tree TO s_detail3.*  #page1  
         BEFORE ROW
            #LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            #LET l_ac = g_detail_idx
            #DISPLAY g_detail_idx TO FORMONLY.idx
            #CALL azzi914_ui_detailshow()
         
         BEFORE DISPLAY 
            #如果一直都在單頭則控制筆數位置
            #IF g_loc = 'm' THEN
            #   CALL FGL_SET_ARR_CURR(g_detail_idx)
            #END IF
            #LET g_loc = 'm'
            #LET l_ac = DIALOG.getCurrentRow("s_detail1")
            CALL DIALOG.setArrayAttributes("s_detail3", g_tree_att)   #欄位列表顏色屬性,已使用的欄位要變色
            
         #拖曳功能   #手動維護
         ON DRAG_START(dnd)
            LET g_drag_source = S_LEFT
            LET g_drag_idx = arr_curr()
            #LET g_drag_value = g_tree[g_drag_idx].dzfj005
            #display "g_tree ON DRAG_START(dnd) g_drag_idx=",g_drag_idx
         ON DRAG_FINISHED(dnd)
            INITIALIZE g_drag_source TO NULL
            #display "g_tree ON DRAG_FINISHED(dnd)"
         ON DRAG_ENTER(dnd)
            IF g_drag_source IS NULL THEN
               CALL dnd.setOperation(NULL)
            END IF
            #display "g_tree ON DRAG_ENTER(dnd)"
         ON DROP(dnd)
            IF g_drag_source == S_LEFT THEN
               #CALL dnd.dropInternal()
               CALL dnd.setOperation(NULL)
            ELSE
               #LET g_drop_idx = dnd.getLocationRow()
               #CALL DIALOG.deleteRow(S_RIGHT1, g_drag_idx)
               LET l_cnt = g_gzxk_d.getLength()
               FOR l_i = l_cnt TO 1 STEP -1
                  IF DIALOG.isRowSelected("s_detail1",l_i) THEN
                     CALL DIALOG.deleteRow(S_RIGHT1, l_i)
                  END IF
               END FOR
               #display "g_tree ON DRAG_START(dnd) g_drop_idx=",g_drop_idx
            END IF
      END DISPLAY

      #Page1 預設值產生於此處
      DISPLAY ARRAY g_gzxk_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL azzi914_ui_detailshow()
         
         BEFORE DISPLAY 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail1")

            
         #拖曳功能   #手動維護
         ON DRAG_START(dnd)
            LET g_drag_source = S_RIGHT1
            LET g_drag_idx = arr_curr()
            #LET g_drag_value = g_gzxk_d[g_drag_idx].gzxk004
            #display "g_gzxk_d ON DRAG_START(dnd) g_drag_idx=",g_drag_idx
         ON DRAG_FINISHED(dnd)
            INITIALIZE g_drag_source TO NULL
            #display "g_gzxk_d ON DRAG_FINISHED(dnd)"
         ON DRAG_ENTER(dnd)
            IF g_drag_source IS NULL THEN
               CALL dnd.setOperation(NULL)
            END IF
            #display "g_gzxk_d ON ON DRAG_ENTER(dnd)"
         ON DROP(dnd)
            IF g_drag_source == S_RIGHT1 THEN
               CALL dnd.dropInternal()
            ELSE
               LET g_drop_idx = dnd.getLocationRow()

               LET l_cnt = g_tree.getLength()
               FOR l_i = 1 TO l_cnt
                  IF DIALOG.isRowSelected("s_detail3",l_i) AND (NOT cl_null(g_tree[l_i].dzfj005)) THEN
                     CALL DIALOG.insertRow(S_RIGHT1, g_drop_idx)
                     CALL DIALOG.setCurrentRow(S_RIGHT1, g_drop_idx)

                     LET g_gzxk_d[g_drop_idx].gzxkstus = "Y"
                     LET g_gzxk_d[g_drop_idx].gzxk004 = g_tree[l_i].dzfj005   #欄位編號
                     LET g_gzxk_d[g_drop_idx].gzxk004_desc = g_tree[l_i].dzfj005_desc   #欄位名稱
                     LET g_gzxk_d[g_drop_idx].gzxk005 = g_tree[l_i].dzfi004   #分群位置
                     LET g_gzxk_d[g_drop_idx].gzxk006 = g_tree[l_i].b_pid     #類型 - 1:page_qbe; 2: Q類的s_detail; 3:s_browse
                     LET g_gzxk_d[g_drop_idx].dzfj009_desc = g_tree[l_i].dzfj009_desc   #群組代碼名稱

                     LET g_gzxk2_d[g_drop_idx].gzxk004 = g_tree[l_i].dzfj005
                     LET g_gzxk2_d[g_drop_idx].gzxkownid = g_user
                     LET g_gzxk2_d[g_drop_idx].gzxkowndp = g_dept
                     LET g_gzxk2_d[g_drop_idx].gzxkcrtid = g_user
                     LET g_gzxk2_d[g_drop_idx].gzxkcrtdp = g_dept
                     LET g_gzxk2_d[g_drop_idx].gzxkcrtdt = cl_get_current()
                     LET g_gzxk2_d[g_drop_idx].gzxkmodid = ""
                     LET g_gzxk2_d[g_drop_idx].gzxkmoddt = ""
                     #欄位列表顏色屬性,已使用的欄位要變色
                     LET g_tree_att[l_i].b_show       = g_color_sel
                     LET g_tree_att[l_i].b_id         = g_color_sel
                     LET g_tree_att[l_i].b_pid        = g_color_sel
                     LET g_tree_att[l_i].b_hasC       = g_color_sel
                     LET g_tree_att[l_i].b_exp        = g_color_sel
                     LET g_tree_att[l_i].b_level      = g_color_sel
                     LET g_tree_att[l_i].dzfi004      = g_color_sel
                     LET g_tree_att[l_i].dzfj009_desc = g_color_sel
                     LET g_tree_att[l_i].dzfj005      = g_color_sel
                     LET g_tree_att[l_i].dzfj005_desc = g_color_sel
                     LET g_tree_att[l_i].dzfj006      = g_color_sel
                     CALL DIALOG.setArrayAttributes("s_detail3", g_tree_att)   #欄位列表顏色屬性,已使用的欄位要變色

                     LET g_drop_idx = g_drop_idx + 1
                  END IF
               END FOR

               #CALL DIALOG.deleteRow(S_LEFT, g_drag_idx)
               #display "g_gzxk_d ON DRAG_START(dnd) g_drop_idx=",g_drop_idx
            END IF
      END DISPLAY
 
      
      DISPLAY ARRAY g_gzxk2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL azzi914_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL azzi914_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為

         #end add-point
         
      END DISPLAY
 
      
 
      
 
      
      #add-point:input段more_input

      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog
         CALL DIALOG.setSelectionMode("s_detail1",1)     #multi-range selection
         CALL DIALOG.setSelectionMode("s_detail3",1)     #multi-range selection
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD gzxk001
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzxkstus
               WHEN "s_detail2"
                  NEXT FIELD gzxk004_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   IF NOT INT_FLAG THEN
      CALL azzi914_b_upd(p_cmd)   #單身資料更新
   END IF
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   
   RETURN    #下面不執行程式樣板產生的DIALOG段落

   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="azzi914.input.head" >}
   
      #單頭段
      INPUT BY NAME g_gzxk_m.gzxk001,g_gzxk_m.gzxk002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk001
            
            #add-point:AFTER FIELD gzxk001 name="input.a.gzxk001"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_gzxk_m.gzxk001) AND NOT cl_null(g_gzxk_m.gzxk002) AND NOT cl_null(g_gzxk_m.gzxk003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzxk_m.gzxk001 != g_gzxk001_t  OR g_gzxk_m.gzxk002 != g_gzxk002_t  OR g_gzxk_m.gzxk003 != g_gzxk003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxk_t WHERE "||"gzxkent = '" ||g_enterprise|| "' AND "||"gzxk001 = '"||g_gzxk_m.gzxk001 ||"' AND "|| "gzxk002 = '"||g_gzxk_m.gzxk002 ||"' AND "|| "gzxk003 = '"||g_gzxk_m.gzxk003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk001
            #add-point:BEFORE FIELD gzxk001 name="input.b.gzxk001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzxk001
            #add-point:ON CHANGE gzxk001 name="input.g.gzxk001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk002
            
            #add-point:AFTER FIELD gzxk002 name="input.a.gzxk002"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_gzxk_m.gzxk002
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_gzxk_m.gzxk002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_gzxk_m.gzxk002_desc

            #此段落由子樣板a05產生
            #確認資料無重複
            IF  NOT cl_null(g_gzxk_m.gzxk001) AND NOT cl_null(g_gzxk_m.gzxk002) AND NOT cl_null(g_gzxk_m.gzxk003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_gzxk_m.gzxk001 != g_gzxk001_t  OR g_gzxk_m.gzxk002 != g_gzxk002_t  OR g_gzxk_m.gzxk003 != g_gzxk003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxk_t WHERE "||"gzxkent = '" ||g_enterprise|| "' AND "||"gzxk001 = '"||g_gzxk_m.gzxk001 ||"' AND "|| "gzxk002 = '"||g_gzxk_m.gzxk002 ||"' AND "|| "gzxk003 = '"||g_gzxk_m.gzxk003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk002
            #add-point:BEFORE FIELD gzxk002 name="input.b.gzxk002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzxk002
            #add-point:ON CHANGE gzxk002 name="input.g.gzxk002"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.gzxk001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk001
            #add-point:ON ACTION controlp INFIELD gzxk001 name="input.c.gzxk001"
            
            #END add-point
 
 
         #Ctrlp:input.c.gzxk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk002
            #add-point:ON ACTION controlp INFIELD gzxk002 name="input.c.gzxk002"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_gzxk_m.gzxk002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_gzxk_m.gzxk002 = g_qryparam.return1              

            DISPLAY g_gzxk_m.gzxk002 TO gzxk002              #

            NEXT FIELD gzxk002                          #返回原欄位


            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_gzxk_m.gzxk001             
                            ,g_gzxk_m.gzxk002   
                            ,g_gzxk_m.gzxk003   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL azzi914_gzxk_t_mask_restore('restore_mask_o')
            
               UPDATE gzxk_t SET (gzxk001,gzxk002,gzxk003) = (g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003) 
 
                WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk001_t
                  AND gzxk002 = g_gzxk002_t
                  AND gzxk003 = g_gzxk003_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzxk_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzxk_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzxk_m.gzxk001
               LET gs_keys_bak[1] = g_gzxk001_t
               LET gs_keys[2] = g_gzxk_m.gzxk002
               LET gs_keys_bak[2] = g_gzxk002_t
               LET gs_keys[3] = g_gzxk_m.gzxk003
               LET gs_keys_bak[3] = g_gzxk003_t
               LET gs_keys[4] = g_gzxk_d[g_detail_idx].gzxk004
               LET gs_keys_bak[4] = g_gzxk_d_t.gzxk004
               CALL azzi914_update_b('gzxk_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_gzxk_m_t)
                     #LET g_log2 = util.JSON.stringify(g_gzxk_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL azzi914_gzxk_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL azzi914_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_gzxk001_t = g_gzxk_m.gzxk001
           LET g_gzxk002_t = g_gzxk_m.gzxk002
           LET g_gzxk003_t = g_gzxk_m.gzxk003
 
           
           IF g_gzxk_d.getLength() = 0 THEN
              NEXT FIELD gzxk004
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="azzi914.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_gzxk_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gzxk_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL azzi914_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前 name="input.body.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL azzi914_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN azzi914_cl USING g_enterprise,g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003                          
               IF STATUS THEN
                  CLOSE azzi914_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN azzi914_cl:" 
                  LET g_errparam.code   = STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_gzxk_d[l_ac].gzxk004 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gzxk_d_t.* = g_gzxk_d[l_ac].*  #BACKUP
               LET g_gzxk_d_o.* = g_gzxk_d[l_ac].*  #BACKUP
               CALL azzi914_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL azzi914_set_no_entry_b(l_cmd)
               OPEN azzi914_bcl USING g_enterprise,g_gzxk_m.gzxk001,
                                                g_gzxk_m.gzxk002,
                                                g_gzxk_m.gzxk003,
 
                                                g_gzxk_d_t.gzxk004
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN azzi914_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH azzi914_bcl INTO g_gzxk_d[l_ac].gzxkstus,g_gzxk_d[l_ac].gzxk006,g_gzxk_d[l_ac].gzxk005, 
                      g_gzxk_d[l_ac].gzxk004,g_gzxk2_d[l_ac].gzxk004,g_gzxk2_d[l_ac].gzxkownid,g_gzxk2_d[l_ac].gzxkowndp, 
                      g_gzxk2_d[l_ac].gzxkcrtid,g_gzxk2_d[l_ac].gzxkcrtdp,g_gzxk2_d[l_ac].gzxkcrtdt, 
                      g_gzxk2_d[l_ac].gzxkmodid,g_gzxk2_d[l_ac].gzxkmoddt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_gzxk_d_t.gzxk004,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gzxk_d_mask_o[l_ac].* =  g_gzxk_d[l_ac].*
                  CALL azzi914_gzxk_t_mask()
                  LET g_gzxk_d_mask_n[l_ac].* =  g_gzxk_d[l_ac].*
                  
                  CALL azzi914_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            
 
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_gzxk_d_t.* TO NULL
            INITIALIZE g_gzxk_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gzxk_d[l_ac].* TO NULL
            #公用欄位預設值
            #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_gzxk2_d[l_ac].gzxkownid = g_user
      LET g_gzxk2_d[l_ac].gzxkowndp = g_dept
      LET g_gzxk2_d[l_ac].gzxkcrtid = g_user
      LET g_gzxk2_d[l_ac].gzxkcrtdp = g_dept 
      LET g_gzxk2_d[l_ac].gzxkcrtdt = cl_get_current()
      LET g_gzxk2_d[l_ac].gzxkmodid = g_user
      LET g_gzxk2_d[l_ac].gzxkmoddt = cl_get_current()
      LET g_gzxk_d[l_ac].gzxkstus = ''
 
 
  
            #一般欄位預設值
            
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"
            
            #end add-point
            LET g_gzxk_d_t.* = g_gzxk_d[l_ac].*     #新輸入資料
            LET g_gzxk_d_o.* = g_gzxk_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL azzi914_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL azzi914_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gzxk_d[li_reproduce_target].* = g_gzxk_d[li_reproduce].*
               LET g_gzxk2_d[li_reproduce_target].* = g_gzxk2_d[li_reproduce].*
 
               LET g_gzxk_d[g_gzxk_d.getLength()].gzxk004 = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM gzxk_t 
             WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk_m.gzxk001
               AND gzxk002 = g_gzxk_m.gzxk002
               AND gzxk003 = g_gzxk_m.gzxk003
 
               AND gzxk004 = g_gzxk_d[l_ac].gzxk004
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
               INSERT INTO gzxk_t
                           (gzxkent,
                            gzxk001,gzxk002,gzxk003,
                            gzxk004
                            ,gzxkstus,gzxk006,gzxk005,gzxkownid,gzxkowndp,gzxkcrtid,gzxkcrtdp,gzxkcrtdt,gzxkmodid,gzxkmoddt) 
                     VALUES(g_enterprise,
                            g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,
                            g_gzxk_d[l_ac].gzxk004
                            ,g_gzxk_d[l_ac].gzxkstus,g_gzxk_d[l_ac].gzxk006,g_gzxk_d[l_ac].gzxk005,g_gzxk2_d[l_ac].gzxkownid, 
                                g_gzxk2_d[l_ac].gzxkowndp,g_gzxk2_d[l_ac].gzxkcrtid,g_gzxk2_d[l_ac].gzxkcrtdp, 
                                g_gzxk2_d[l_ac].gzxkcrtdt,g_gzxk2_d[l_ac].gzxkmodid,g_gzxk2_d[l_ac].gzxkmoddt) 
 
               #add-point:單身新增中 name="input.body.m_insert"
               
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_gzxk_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gzxk_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF azzi914_before_delete() THEN 
                  
 
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_gzxk_m.gzxk001
                  LET gs_keys[gs_keys.getLength()+1] = g_gzxk_m.gzxk002
                  LET gs_keys[gs_keys.getLength()+1] = g_gzxk_m.gzxk003
 
                  LET gs_keys[gs_keys.getLength()+1] = g_gzxk_d_t.gzxk004
 
 
                  #刪除下層單身
                  IF NOT azzi914_key_delete_b(gs_keys,'gzxk_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE azzi914_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE azzi914_bcl
               LET l_count = g_gzxk_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_gzxk_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxkstus
            #add-point:BEFORE FIELD gzxkstus name="input.b.page1.gzxkstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxkstus
            
            #add-point:AFTER FIELD gzxkstus name="input.a.page1.gzxkstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzxkstus
            #add-point:ON CHANGE gzxkstus name="input.g.page1.gzxkstus"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gzxk004
            
            #add-point:AFTER FIELD gzxk004 name="input.a.page1.gzxk004"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_gzxk_m.gzxk001 IS NOT NULL AND g_gzxk_m.gzxk002 IS NOT NULL AND g_gzxk_m.gzxk003 IS NOT NULL AND g_gzxk_d[g_detail_idx].gzxk004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gzxk_m.gzxk001 != g_gzxk001_t OR g_gzxk_m.gzxk002 != g_gzxk002_t OR g_gzxk_m.gzxk003 != g_gzxk003_t OR g_gzxk_d[g_detail_idx].gzxk004 != g_gzxk_d_t.gzxk004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gzxk_t WHERE "||"gzxkent = '" ||g_enterprise|| "' AND "||"gzxk001 = '"||g_gzxk_m.gzxk001 ||"' AND "|| "gzxk002 = '"||g_gzxk_m.gzxk002 ||"' AND "|| "gzxk003 = '"||g_gzxk_m.gzxk003 ||"' AND "|| "gzxk004 = '"||g_gzxk_d[g_detail_idx].gzxk004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gzxk004
            #add-point:BEFORE FIELD gzxk004 name="input.b.page1.gzxk004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gzxk004
            #add-point:ON CHANGE gzxk004 name="input.g.page1.gzxk004"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.gzxkstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxkstus
            #add-point:ON ACTION controlp INFIELD gzxkstus name="input.c.page1.gzxkstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gzxk004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gzxk004
            #add-point:ON ACTION controlp INFIELD gzxk004 name="input.c.page1.gzxk004"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_gzxk_d[l_ac].* = g_gzxk_d_t.*
               CLOSE azzi914_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_gzxk_d[l_ac].gzxk004 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_gzxk_d[l_ac].* = g_gzxk_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_gzxk2_d[l_ac].gzxkmodid = g_user 
LET g_gzxk2_d[l_ac].gzxkmoddt = cl_get_current()
LET g_gzxk2_d[l_ac].gzxkmodid_desc = cl_get_username(g_gzxk2_d[l_ac].gzxkmodid)
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
         
               #將遮罩欄位還原
               CALL azzi914_gzxk_t_mask_restore('restore_mask_o')
         
               UPDATE gzxk_t SET (gzxk001,gzxk002,gzxk003,gzxkstus,gzxk006,gzxk005,gzxk004,gzxkownid, 
                   gzxkowndp,gzxkcrtid,gzxkcrtdp,gzxkcrtdt,gzxkmodid,gzxkmoddt) = (g_gzxk_m.gzxk001, 
                   g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,g_gzxk_d[l_ac].gzxkstus,g_gzxk_d[l_ac].gzxk006, 
                   g_gzxk_d[l_ac].gzxk005,g_gzxk_d[l_ac].gzxk004,g_gzxk2_d[l_ac].gzxkownid,g_gzxk2_d[l_ac].gzxkowndp, 
                   g_gzxk2_d[l_ac].gzxkcrtid,g_gzxk2_d[l_ac].gzxkcrtdp,g_gzxk2_d[l_ac].gzxkcrtdt,g_gzxk2_d[l_ac].gzxkmodid, 
                   g_gzxk2_d[l_ac].gzxkmoddt)
                WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk_m.gzxk001 
                 AND gzxk002 = g_gzxk_m.gzxk002 
                 AND gzxk003 = g_gzxk_m.gzxk003 
 
                 AND gzxk004 = g_gzxk_d_t.gzxk004 #項次   
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gzxk_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "gzxk_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gzxk_m.gzxk001
               LET gs_keys_bak[1] = g_gzxk001_t
               LET gs_keys[2] = g_gzxk_m.gzxk002
               LET gs_keys_bak[2] = g_gzxk002_t
               LET gs_keys[3] = g_gzxk_m.gzxk003
               LET gs_keys_bak[3] = g_gzxk003_t
               LET gs_keys[4] = g_gzxk_d[g_detail_idx].gzxk004
               LET gs_keys_bak[4] = g_gzxk_d_t.gzxk004
               CALL azzi914_update_b('gzxk_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_gzxk_m),util.JSON.stringify(g_gzxk_d_t)
                     LET g_log2 = util.JSON.stringify(g_gzxk_m),util.JSON.stringify(g_gzxk_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL azzi914_gzxk_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_gzxk_m.gzxk001
               LET ls_keys[ls_keys.getLength()+1] = g_gzxk_m.gzxk002
               LET ls_keys[ls_keys.getLength()+1] = g_gzxk_m.gzxk003
 
               LET ls_keys[ls_keys.getLength()+1] = g_gzxk_d_t.gzxk004
 
               CALL azzi914_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE azzi914_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_gzxk_d[l_ac].* = g_gzxk_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE azzi914_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_gzxk_d.getLength() = 0 THEN
               NEXT FIELD gzxk004
            END IF
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_gzxk_d[li_reproduce_target].* = g_gzxk_d[li_reproduce].*
               LET g_gzxk2_d[li_reproduce_target].* = g_gzxk2_d[li_reproduce].*
 
               LET g_gzxk_d[li_reproduce_target].gzxk004 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_gzxk_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_gzxk_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_gzxk2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL azzi914_b_fill(g_wc2) #test 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_page = 2
            CALL azzi914_idx_chk()
            CALL azzi914_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
         
      END DISPLAY
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
      
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD gzxk001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gzxkstus
               WHEN "s_detail2"
                  NEXT FIELD gzxk004_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION azzi914_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE  l_chk                 BOOLEAN
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   #單頭資料異動時要重新判斷
   #但 _fetch 的函式後面沒有開放add point,所以先寫在此
   CALL cl_ui_qbefield_tpl_chk(g_gzxk_m.gzxk001,FALSE) RETURNING l_chk,g_dzaf.dzaf003,g_dzaf.dzaf010,g_dzfq001   #檢查畫面版型是否可使用此功能,並取得規格的版次和識別標示
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL azzi914_b_fill(g_wc2) #第一階單身填充
      CALL azzi914_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL azzi914_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_gzxk_m.gzxk001,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002,g_gzxk_m.gzxk002_desc,g_gzxk_m.gzxk003 
 
 
   CALL azzi914_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION azzi914_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
   
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gzxk_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_gzxk2_d.getLength()
      #add-point:ref_show段d2_reference name="ref_show.body2.reference"
      
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION azzi914_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE gzxk_t.gzxk001 
   DEFINE l_oldno     LIKE gzxk_t.gzxk001 
   DEFINE l_newno02     LIKE gzxk_t.gzxk002 
   DEFINE l_oldno02     LIKE gzxk_t.gzxk002 
   DEFINE l_newno03     LIKE gzxk_t.gzxk003 
   DEFINE l_oldno03     LIKE gzxk_t.gzxk003 
 
   DEFINE l_master    RECORD LIKE gzxk_t.*
   DEFINE l_detail    RECORD LIKE gzxk_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_gzxk_m.gzxk001 IS NULL
      OR g_gzxk_m.gzxk002 IS NULL
      OR g_gzxk_m.gzxk003 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_gzxk001_t = g_gzxk_m.gzxk001
   LET g_gzxk002_t = g_gzxk_m.gzxk002
   LET g_gzxk003_t = g_gzxk_m.gzxk003
 
   
   LET g_gzxk_m.gzxk001 = ""
   LET g_gzxk_m.gzxk002 = ""
   LET g_gzxk_m.gzxk003 = ""
 
   LET g_master_insert = FALSE
   CALL azzi914_set_entry('a')
   CALL azzi914_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #清空key欄位的desc
      LET g_gzxk_m.gzxk001_desc = ''
   DISPLAY BY NAME g_gzxk_m.gzxk001_desc
   LET g_gzxk_m.gzxk002_desc = ''
   DISPLAY BY NAME g_gzxk_m.gzxk002_desc
 
   
   CALL azzi914_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_gzxk_m.* TO NULL
      INITIALIZE g_gzxk_d TO NULL
      INITIALIZE g_gzxk2_d TO NULL
 
      CALL azzi914_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL azzi914_set_act_visible()
   CALL azzi914_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_gzxk001_t = g_gzxk_m.gzxk001
   LET g_gzxk002_t = g_gzxk_m.gzxk002
   LET g_gzxk003_t = g_gzxk_m.gzxk003
 
   
   #組合新增資料的條件
   LET g_add_browse = " gzxkent = " ||g_enterprise|| " AND",
                      " gzxk001 = '", g_gzxk_m.gzxk001, "' "
                      ," AND gzxk002 = '", g_gzxk_m.gzxk002, "' "
                      ," AND gzxk003 = '", g_gzxk_m.gzxk003, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL azzi914_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL azzi914_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL azzi914_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION azzi914_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gzxk_t.*
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE azzi914_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM gzxk_t
    WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk001_t
    AND gzxk002 = g_gzxk002_t
    AND gzxk003 = g_gzxk003_t
 
       INTO TEMP azzi914_detail
   
   #將key修正為調整後   
   UPDATE azzi914_detail 
      #更新key欄位
      SET gzxk001 = g_gzxk_m.gzxk001
          , gzxk002 = g_gzxk_m.gzxk002
          , gzxk003 = g_gzxk_m.gzxk003
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:4)
       , gzxkownid = g_user 
       , gzxkowndp = g_dept
       , gzxkcrtid = g_user
       , gzxkcrtdp = g_dept 
       , gzxkcrtdt = ld_date
       , gzxkmodid = g_user
       , gzxkmoddt = ld_date
      #, gzxkstus = "Y" 
 
 
 
                                       
   #將資料塞回原table   
   INSERT INTO gzxk_t SELECT * FROM azzi914_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE azzi914_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gzxk001_t = g_gzxk_m.gzxk001
   LET g_gzxk002_t = g_gzxk_m.gzxk002
   LET g_gzxk003_t = g_gzxk_m.gzxk003
 
   
   DROP TABLE azzi914_detail
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.delete" >}
#+ 資料刪除
PRIVATE FUNCTION azzi914_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_gzxk_m.gzxk001 IS NULL
   OR g_gzxk_m.gzxk002 IS NULL
   OR g_gzxk_m.gzxk003 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN azzi914_cl USING g_enterprise,g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN azzi914_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE azzi914_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE azzi914_master_referesh USING g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003 INTO g_gzxk_m.gzxk001, 
       g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,g_gzxk_m.gzxk001_desc,g_gzxk_m.gzxk002_desc
   
   #遮罩相關處理
   LET g_gzxk_m_mask_o.* =  g_gzxk_m.*
   CALL azzi914_gzxk_t_mask()
   LET g_gzxk_m_mask_n.* =  g_gzxk_m.*
   
   CALL azzi914_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL azzi914_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM gzxk_t WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk_m.gzxk001
                                                               AND gzxk002 = g_gzxk_m.gzxk002
                                                               AND gzxk003 = g_gzxk_m.gzxk003
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gzxk_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      CALL g_gzxk_chk.clear()
      CALL g_tree.clear()
      CALL g_tree_att.clear()
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE azzi914_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_gzxk_d.clear() 
      CALL g_gzxk2_d.clear()       
 
     
      CALL azzi914_ui_browser_refresh()  
      #CALL azzi914_ui_headershow()  
      #CALL azzi914_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL azzi914_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL azzi914_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE azzi914_cl
 
   #功能已完成,通報訊息中心
   CALL azzi914_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="azzi914.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION azzi914_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_sql_1         STRING
   DEFINE l_sql_2         STRING
   DEFINE l_newgroup      BOOLEAN               #是否不同群組
   DEFINE l_groupname     STRING                #群組代碼名稱
   DEFINE l_colname       STRING
   DEFINE l_comment       STRING
   DEFINE l_k             LIKE type_t.num5
   DEFINE l_dzfj DYNAMIC ARRAY OF RECORD
             dzfj009   LIKE dzfj_t.dzfj009,     #所屬結構標籤代碼
             dzfj010   LIKE dzfj_t.dzfj010      #欄位標籤代碼
             END RECORD
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_gzxk_d.clear()
   CALL g_gzxk2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL g_gzxk_chk.clear()
   CALL l_dzfj.clear()
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT gzxkstus,gzxk006,gzxk005,gzxk004,gzxk004,gzxkownid,gzxkowndp,gzxkcrtid, 
       gzxkcrtdp,gzxkcrtdt,gzxkmodid,gzxkmoddt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 FROM gzxk_t", 
          
               "",
               
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=gzxkownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=gzxkowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=gzxkcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=gzxkcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=gzxkmodid  ",
 
               " WHERE gzxkent= ? AND gzxk001=? AND gzxk002=? AND gzxk003=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("gzxk_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET l_sql_1 = g_sql   #為了改變排序
   
   #g_sql和FOREACH 無add point可加入欄位,因此另外再取資料
   LET l_sql_2 = "SELECT dzfj009,dzfj010 FROM dzfj_t",
                 " WHERE dzfjstus = 'Y' AND dzfj001=? AND dzfj002=? AND dzfj017=? AND dzfj005=?"
   PREPARE azzi914_b_fill_dzfj_pre FROM l_sql_2
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF azzi914_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY gzxk_t.gzxk004"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
      LET l_sql_1 = l_sql_1 CLIPPED, " ORDER BY gzxk_t.gzxk006,gzxk_t.gzxk005,gzxk_t.gzxk004"   #為了改變排序
      LET g_sql = l_sql_1 CLIPPED   #為了改變排序
      
      LET l_sql_2 = l_sql_2 CLIPPED, " ORDER BY gzxk_t.gzxk006,gzxk_t.gzxk005,gzxk_t.gzxk004"
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE azzi914_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR azzi914_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003
                                               
      FOREACH b_fill_cs INTO g_gzxk_d[l_ac].gzxkstus,g_gzxk_d[l_ac].gzxk006,g_gzxk_d[l_ac].gzxk005,g_gzxk_d[l_ac].gzxk004, 
          g_gzxk2_d[l_ac].gzxk004,g_gzxk2_d[l_ac].gzxkownid,g_gzxk2_d[l_ac].gzxkowndp,g_gzxk2_d[l_ac].gzxkcrtid, 
          g_gzxk2_d[l_ac].gzxkcrtdp,g_gzxk2_d[l_ac].gzxkcrtdt,g_gzxk2_d[l_ac].gzxkmodid,g_gzxk2_d[l_ac].gzxkmoddt, 
          g_gzxk2_d[l_ac].gzxkownid_desc,g_gzxk2_d[l_ac].gzxkowndp_desc,g_gzxk2_d[l_ac].gzxkcrtid_desc, 
          g_gzxk2_d[l_ac].gzxkcrtdp_desc,g_gzxk2_d[l_ac].gzxkmodid_desc
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         LET g_gzxk_chk[l_ac].gzxk004 = g_gzxk_d[l_ac].gzxk004
         
         EXECUTE azzi914_b_fill_dzfj_pre USING g_gzxk_m.gzxk001,g_dzaf.dzaf003,g_dzaf.dzaf010,g_gzxk_d[l_ac].gzxk004
            INTO l_dzfj[l_ac].dzfj009,l_dzfj[l_ac].dzfj010

         #欄位名稱
         CALL s_azzi902_get_gzzd(g_gzxk_m.gzxk001,l_dzfj[l_ac].dzfj010) RETURNING l_colname, l_comment
         LET g_gzxk_d[l_ac].gzxk004_desc = l_colname CLIPPED 

         #群組代碼名稱
         #第一筆要重新取名稱
         IF l_ac = 1 THEN
            LET l_newgroup = TRUE
         ELSE
         #不同群組時要重新取名稱
            LET l_k = l_ac - 1
            IF l_dzfj[l_ac].dzfj009 <> l_dzfj[l_k].dzfj009 THEN
               LET l_newgroup = TRUE
            ELSE
               LET l_newgroup = FALSE
            END IF
         END IF
         IF l_newgroup THEN
            CALL s_azzi902_get_gzzd(g_gzxk_m.gzxk001,l_dzfj[l_ac].dzfj009) RETURNING l_groupname, l_comment
         END IF
         LET g_gzxk_d[l_ac].dzfj009_desc = l_groupname
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #應用 a12 樣板自動產生(Version:4)
 
 
 
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_gzxk_d.deleteElement(g_gzxk_d.getLength())
      CALL g_gzxk2_d.deleteElement(g_gzxk2_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
   CALL azzi914_tree_fill(g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_dzaf.dzaf003,g_dzaf.dzaf010,"ALL",0,0)
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_gzxk_d.getLength()
      LET g_gzxk_d_mask_o[l_ac].* =  g_gzxk_d[l_ac].*
      CALL azzi914_gzxk_t_mask()
      LET g_gzxk_d_mask_n[l_ac].* =  g_gzxk_d[l_ac].*
   END FOR
   
   LET g_gzxk2_d_mask_o.* =  g_gzxk2_d.*
   FOR l_ac = 1 TO g_gzxk2_d.getLength()
      LET g_gzxk2_d_mask_o[l_ac].* =  g_gzxk2_d[l_ac].*
      CALL azzi914_gzxk_t_mask()
      LET g_gzxk2_d_mask_n[l_ac].* =  g_gzxk2_d[l_ac].*
   END FOR
 
 
   FREE azzi914_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION azzi914_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_gzxk_d.getLength() THEN
         LET g_detail_idx = g_gzxk_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_gzxk_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzxk_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_gzxk2_d.getLength() THEN
         LET g_detail_idx = g_gzxk2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gzxk2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gzxk2_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION azzi914_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_gzxk_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION azzi914_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM gzxk_t
    WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk_m.gzxk001 AND
                              gzxk002 = g_gzxk_m.gzxk002 AND
                              gzxk003 = g_gzxk_m.gzxk003 AND
 
          gzxk004 = g_gzxk_d_t.gzxk004
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "gzxk_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="azzi914.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION azzi914_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION azzi914_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION azzi914_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION azzi914_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_gzxk_d[l_ac].gzxk004 = g_gzxk_d_t.gzxk004 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION azzi914_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION azzi914_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL azzi914_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION azzi914_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION azzi914_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzxk001,gzxk002,gzxk003",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
 
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION azzi914_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gzxk001,gzxk002,gzxk003",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gzxk002,gzxk003",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION azzi914_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION azzi914_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION azzi914_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION azzi914_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION azzi914_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="azzi914.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION azzi914_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="azzi914.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION azzi914_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " gzxk001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " gzxk002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " gzxk003 = '", g_argv[03], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
 
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION azzi914_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="azzi914.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION azzi914_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "gzxkstus"
      WHEN "s_detail2"
         LET ls_return = "gzxk004_2"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="azzi914.mask_functions" >}
&include "erp/azz/azzi914_mask.4gl"
 
{</section>}
 
{<section id="azzi914.state_change" >}
    
 
{</section>}
 
{<section id="azzi914.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION azzi914_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gzxk_m.gzxk001
   LET g_pk_array[1].column = 'gzxk001'
   LET g_pk_array[2].values = g_gzxk_m.gzxk002
   LET g_pk_array[2].column = 'gzxk002'
   LET g_pk_array[3].values = g_gzxk_m.gzxk003
   LET g_pk_array[3].column = 'gzxk003'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="azzi914.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION azzi914_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL azzi914_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_gzxk_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="azzi914.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,p_group,p_pid,p_plevel)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,p_group,p_pid,p_plevel)
   DEFINE p_dzfi001         LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_gzxk002         LIKE gzxk_t.gzxk002   #員工編號 "DEFAULT" 為系統級；g_user為個人級
   DEFINE p_dzfi002         LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi009         LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_group           STRING                #群組類型 - ALL:全部, QBE:QBE欄位,QSR:Q類的列表,scSR:查詢方案列表
   DEFINE p_pid             STRING                #tree - 父節點id
   DEFINE p_plevel          LIKE type_t.num5      #tree - 父階層
   DEFINE p_dzfj005         LIKE dzfj_t.dzfj005   #父節點編號 - 包含元件代碼
   DEFINE p_open_dzfr003    LIKE dzfr_t.dzfr003   #指定打開的節點編號(流水號)
   DEFINE l_treedata        DYNAMIC ARRAY OF type_treedata
   DEFINE l_level           LIKE type_t.num5      #tree - 階層
   DEFINE l_i               LIKE type_t.num5
   DEFINE l_j               LIKE type_t.num5
   DEFINE l_k               LIKE type_t.num5
   DEFINE l_cnt             LIKE type_t.num5
   DEFINE l_str             STRING
   DEFINE l_seq             LIKE dzfr_t.dzfr005   #順序(同階層中的排序)
   DEFINE l_sidx            LIKE type_t.num5
   DEFINE l_eidx            LIKE type_t.num5
   DEFINE l_gzzd003         LIKE gzzd_t.gzzd003
   DEFINE l_gzzd005         LIKE gzzd_t.gzzd005
   DEFINE l_img_dir         STRING
   DEFINE l_ln01            LIKE type_t.num5      #資料數,為了判斷遞迴結束
   DEFINE l_ln02            LIKE type_t.num5      #資料數
   DEFINE l_root_idx        LIKE type_t.num5      #focus的Root節點index
   DEFINE l_sql_1           STRING
   DEFINE l_sql_2           STRING
   DEFINE l_sql_notin1      STRING
   DEFINE l_colname         STRING
   DEFINE l_comment         STRING
   DEFINE l_chk             BOOLEAN
   DEFINE l_newgroup        BOOLEAN               #是否不同群組
   DEFINE l_groupname       STRING                #群組代碼名稱
   DEFINE ls_container      STRING 
   DEFINE li_cnt            LIKE type_t.num5
   DEFINE l_p_id            LIKE type_t.num5
  
   IF p_group = "ALL" THEN
      LET g_form_idx = 0
      CALL g_tree.clear()
      CALL g_tree_att.clear()
      IF (NOT cl_null(p_dzfi001)) AND (NOT cl_null(p_dzfi002)) AND (NOT cl_null(p_dzfi009)) THEN
            #列出全部的群組
            LET l_str = g_dzfq001
            --CASE
               --WHEN l_str.getIndexOf("Q",1) = 1 #Q 類樣板
                  --CALL azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,g_class_1,p_pid,p_plevel)   #QBE欄位
                  --CALL azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,g_class_2,p_pid,p_plevel)   #Q類的列表
               --WHEN l_str.getIndexOf("F",1) = 1 #AND l_str.getIndexOf("_sc",1) > 0 #查詢方案  
                  --從r.a做完後可能被改變版型的特例
                  --例如：azzi900從r.a做的時候是F001_00，屬於沒有查詢方案的單檔，但之後可能自己在畫面和程式段落加工，也創造出查詢方案。
                  --CALL azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,g_class_3,p_pid,p_plevel)   #查詢方案列表
               --OTHERWISE 
                  --CALL azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,g_class_3,p_pid,p_plevel)   #查詢方案列表
               --
            --END CASE
            #第一次call function #p_pid:"0" #p_plevel:0 
            CALL azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,g_class_3,p_pid,p_plevel)   

      END IF
   ELSE
      IF p_plevel = 0 THEN
         LET l_sql_notin1 = "dzfj005 NOT IN",
                               " (SELECT gzxk004 FROM gzxk_t",
                               " WHERE gzxkstus='Y' AND gzxkent=? AND gzxk001=? AND (gzxk002 = 'DEFAULT' OR gzxk002 = ?) AND gzxk003=?)"
         #gzxk001:畫面編號 #gzxk002:員工編號 #gzxk003:客製
         #15/03/04 start          
         LET p_group = "4" 
         CASE p_group
#            WHEN g_class_1   #QBE欄位
#               LET l_str =
#                   " (",
#                      " SELECT *",
#                      " FROM dzfi_t",
#                      " WHERE dzfistus = 'Y' AND dzfi008 = 'Y' AND dzfi001 = ? AND dzfi002 = ? AND dzfi009 = ?",
#                        " AND dzfi004 = 'grid_qbe'",
#                   " )",
#                   " LEFT JOIN",
#                   " (",
#                      " SELECT *",
#                      " FROM dzfj_t",
#                      " WHERE dzfjstus = 'Y'",
#                   " )",
#                   " ON dzfi001=dzfj001 AND dzfi002=dzfj002 AND dzfi009=dzfj017 AND dzfi006=dzfj003",
#                   " WHERE dzfj006 <> 'Phantom' AND dzfj006 <> 'Label'"
#
#               LET l_sql_1 =
#                   "SELECT dzfi004,dzfi007,dzfj005,dzfj010,dzfj006,dzfj009 FROM",l_str CLIPPED,
#                   " AND ",l_sql_notin1 CLIPPED,
#                   " ORDER BY dzfi003,dzfi005,dzfj004"
#               LET l_sql_2 =
#                   "SELECT COUNT(dzfj005) FROM",l_str CLIPPED

            WHEN g_class_2   #Q類的列表
#               LET l_str =
#                   " (",
#                      " SELECT *",
#                      " FROM dzfi_t",
#                      " WHERE dzfistus = 'Y' AND dzfi008 = 'Y' AND dzfi001 = ? AND dzfi002 = ? AND dzfi009 = ?",
#                   " ) fi1",
#                   " LEFT JOIN",
#                   " (",
#                      " SELECT *",
#                      " FROM dzfj_t",
#                      " WHERE dzfjstus = 'Y'",
#                   " )",
#                   " ON fi1.dzfi001=dzfj001 AND fi1.dzfi002=dzfj002 AND fi1.dzfi009=dzfj017 AND fi1.dzfi006=dzfj003",
#                   " LEFT JOIN",
#                   " (",
#                      " SELECT *",
#                      " FROM dzfi_t",
#                      " WHERE dzfistus = 'Y' AND dzfi008 = 'Y'",
#                   " ) fi2",
#                   " ON fi1.dzfi001=fi2.dzfi001 AND fi1.dzfi002=fi2.dzfi002 AND fi1.dzfi009=fi2.dzfi009 AND fi1.dzfi004=fi2.dzfi006",
#                   " WHERE dzfj006 <> 'Phantom' AND fi2.dzfi007 IN ('Tree','Table','ScrollGrid')"
#
#               LET l_sql_1 =
#                   "SELECT fi1.dzfi004,fi2.dzfi007,dzfj005,dzfj010,dzfj006,dzfj009 FROM",l_str CLIPPED,
#                   " AND ",l_sql_notin1 CLIPPED,
#                   " ORDER BY fi1.dzfi003,fi1.dzfi005,dzfj004"
#               LET l_sql_2 =
#                  "SELECT COUNT(dzfj005) FROM",l_str CLIPPED
                  
            WHEN g_class_3  #查詢方案列表
#               LET l_str =
#                   " (",
#                      " SELECT *",
#                      " FROM dzfi_t",
#                      " WHERE dzfistus = 'Y' AND dzfi008 = 'Y' AND dzfi001 = ? AND dzfi002 = ? AND dzfi009 = ?",
#                        " AND dzfi004 = 's_browse'",
#                   " )",
#                   " LEFT JOIN",
#                   " (",
#                      " SELECT *",
#                      " FROM dzfj_t",
#                      " WHERE dzfjstus = 'Y'",
#                   " )",
#                   " ON dzfi001=dzfj001 AND dzfi002=dzfj002 AND dzfi009=dzfj017 AND dzfi006=dzfj003",
#                   " WHERE dzfj006 <> 'Phantom'"
#                   
#               LET l_sql_1 =
#                   " SELECT dzfi004,dzfi007,dzfj005,dzfj010,dzfj006,dzfj009 FROM",l_str CLIPPED,
#                   " AND ",l_sql_notin1 CLIPPED,
#                   " ORDER BY dzfi003,dzfi005,dzfj004"
#               LET l_sql_2 =
#                  "SELECT COUNT(dzfj005) FROM",l_str CLIPPED
                  
             OTHERWISE 

                  #p_dzfi001:azzi900 #p_gzxk002:01856 #p_dzfi002:14 版次 #p_dzfi009:"s" 客製
                  #開始從 1.Page 2.Table 3.Tree 4.ScrollGrid 5.其他欄位
 
                  LET l_p_id =  1 
                  FOR li_cnt = 1 TO 5 
                      LET ls_container = ""
                      CASE 
                         WHEN li_cnt = 1
                            LET ls_container = "Page"
                         WHEN li_cnt = 2
                            LET ls_container = "Table"
                         WHEN li_cnt = 3
                            LET ls_container = "Tree"
                         WHEN li_cnt = 4    
                            LET ls_container = "ScrollGrid"
                         OTHERWISE 
                            LET ls_container = "Other"   
                      END CASE
                      CALL azzi914_find_node(p_dzfi001,p_dzfi002,ls_container,p_dzfi009,l_p_id,1) RETURNING l_p_id 
                  END FOR
                  LET g_id_cnt = 0 #清空 b_id  
                  CALL g_view_over_arr.clear() #清空拜訪過資料
                  RETURN      
         END CASE
         #15/03/04 end

         PREPARE azzi914_qbe_pre1 FROM l_sql_1
         IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = 'PREPARE:'
             LET g_errparam.popup = TRUE
             CALL cl_err()
         END IF
         DECLARE azzi914_qbe_cs1 CURSOR FOR azzi914_qbe_pre1
         
         #計算數量時不要排除已設定的資料,要取出畫面存在的資料,避免左邊Tree沒資料顯示,右邊就無法拖曳欄位進去
         PREPARE azzi914_qbe_pre2 FROM l_sql_2
         IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = 'PREPARE:'
             LET g_errparam.popup = TRUE
             CALL cl_err()
         END IF
         
         LET l_str = "SELECT COUNT(gzxk004) FROM gzxk_t",
                     " WHERE gzxkstus='Y' AND gzxkent=? AND gzxk001=? AND (gzxk002 = 'DEFAULT' OR gzxk002 = ?) AND gzxk003=?"
         PREPARE azzi914_qbe_gzxk002_pre FROM l_str
         
         #排除系統級設定的資料-客製標示
         LET g_gzxk003_notin = 'c'
         EXECUTE azzi914_qbe_gzxk002_pre USING g_enterprise,p_dzfi001,p_gzxk002,g_gzxk003_notin INTO l_cnt
         IF l_cnt = 0 THEN
            LET g_gzxk003_notin = 'm'
            EXECUTE azzi914_qbe_gzxk002_pre USING g_enterprise,p_dzfi001,p_gzxk002,g_gzxk003_notin INTO l_cnt
         END IF
         IF l_cnt = 0 THEN
            LET g_gzxk003_notin = 's'
            EXECUTE azzi914_qbe_gzxk002_pre USING g_enterprise,p_dzfi001,p_gzxk002,g_gzxk003_notin INTO l_cnt
         END IF
         
         EXECUTE azzi914_qbe_pre2 USING p_dzfi001,p_dzfi002,p_dzfi009
                                        #,g_enterprise,p_dzfi001,p_gzxk002,g_gzxk003_notin 
                                        INTO l_cnt         
         #有子節點
         IF l_cnt > 0 THEN
            LET l_level = p_plevel + 1
            LET g_form_idx = g_form_idx + 1
            LET g_tree[g_form_idx].b_level = l_level
            LET g_tree[g_form_idx].b_pid = p_pid CLIPPED

            CASE p_group
               WHEN g_class_1   #QBE欄位
                  LET g_tree[g_form_idx].b_id = "1"
                  LET l_str = "lbl_QBE"
               WHEN g_class_2   #Q類的列表
                  LET g_tree[g_form_idx].b_id = "2"
                  LET l_str = "lbl_QSR"
               WHEN g_class_3  #查詢方案列表
                  LET g_tree[g_form_idx].b_id = "3"
                  LET l_str = "lbl_scbrowse"
            END CASE
            #節點名稱
            CALL s_azzi902_get_gzzd(g_code,l_str) RETURNING l_colname, l_comment
            LET g_tree[g_form_idx].b_show = l_colname CLIPPED #p_group

            LET g_tree[g_form_idx].b_hasC = TRUE
            LET g_tree[g_form_idx].b_exp = TRUE
            CALL azzi914_tree_fill(p_dzfi001,p_gzxk002,p_dzfi002,p_dzfi009,p_group,g_tree[g_form_idx].b_id,g_tree[g_form_idx].b_level)
         END IF
      ELSE
      
         #在FOREACH中直接使用recursive,資料會錯亂,所以先將資料放到陣列後處理
         LET l_cnt = 1
         CALL l_treedata.clear()
         FOREACH azzi914_qbe_cs1 USING p_dzfi001,p_dzfi002,p_dzfi009,
                                       g_enterprise,p_dzfi001,p_gzxk002,g_gzxk003_notin
            INTO l_treedata[l_cnt].dzfi004,l_treedata[l_cnt].dzfi007,
                 l_treedata[l_cnt].dzfj005,l_treedata[l_cnt].dzfj010,l_treedata[l_cnt].dzfj006,l_treedata[l_cnt].dzfj009

            IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = 'FOREACH:'
                LET g_errparam.popup = TRUE
                CALL cl_err()
                EXIT FOREACH
            END IF
            
            LET l_treedata[l_cnt].child_cnt = 0
            
            LET l_cnt = l_cnt + 1
         END FOREACH
         CALL l_treedata.deleteelement(l_cnt)  #刪除FOREACH最後新增的空白列
         LET l_cnt = l_cnt - 1

         IF l_cnt >0 THEN
            LET l_level = p_plevel + 1
            FOR l_i=1 TO l_cnt
               LET g_form_idx = g_form_idx + 1

               LET g_tree[g_form_idx].b_pid = p_pid CLIPPED
               LET l_str = l_i  #數值轉字串
               IF l_level = 1 THEN
                  LET g_tree[g_form_idx].b_id = l_str CLIPPED
               ELSE
                  LET g_tree[g_form_idx].b_id = g_tree[g_form_idx].b_pid CLIPPED,".",l_str CLIPPED
               END IF
               LET l_seq = l_str CLIPPED

               LET g_tree[g_form_idx].b_level = l_level
               LET g_tree[g_form_idx].dzfi004 = l_treedata[l_i].dzfi004 CLIPPED   #群組代碼-子
               LET g_tree[g_form_idx].dzfj005 = l_treedata[l_i].dzfj005 CLIPPED   #包含元件代碼
               LET g_tree[g_form_idx].dzfj006 = l_treedata[l_i].dzfj006 CLIPPED   #節點類型
               #節點名稱
               CALL s_azzi902_get_gzzd(p_dzfi001,l_treedata[l_i].dzfj010) RETURNING l_colname, l_comment
               LET g_tree[g_form_idx].dzfj005_desc = l_colname CLIPPED
               LET g_tree[g_form_idx].b_show = g_tree[g_form_idx].dzfj005 CLIPPED,": ",g_tree[g_form_idx].dzfj005_desc CLIPPED 

               #群組代碼名稱
               #第一筆要重新取名稱
               IF l_i = 1 THEN
                  LET l_newgroup = TRUE
               ELSE
               #不同群組時要重新取名稱
                  LET l_k = l_i - 1
                  IF l_treedata[l_i].dzfj009 <> l_treedata[l_k].dzfj009 THEN
                     LET l_newgroup = TRUE
                  ELSE
                     LET l_newgroup = FALSE
                  END IF
               END IF
               IF l_newgroup THEN
                  CALL s_azzi902_get_gzzd(p_dzfi001,l_treedata[l_i].dzfj009) RETURNING l_groupname, l_comment
               END IF
               LET g_tree[g_form_idx].dzfj009_desc = l_groupname
               
               #有子節點
               #IF l_treedata[l_i].child_cnt > 0 THEN
               #   LET g_tree[g_form_idx].b_hasC = TRUE
               #   LET g_tree[g_form_idx].b_exp = TRUE
               #   CALL azzi914_tree_fill(p_dzfi001,p_dzfi002,p_dzfi009,p_group,g_tree[g_form_idx].b_id,g_tree[g_form_idx].b_level)
               #ELSE
                  LET g_tree[g_form_idx].b_hasC = FALSE
                  LET g_tree[g_form_idx].b_exp = FALSE
               #END IF
            END FOR

         END IF
      END IF
   END IF
END FUNCTION

################################################################################
# Descriptions...: 單身資料更新
# Memo...........:
# Usage..........: CALL azzi914_b_upd(p_cmd)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_b_upd(p_cmd)
   DEFINE p_cmd                 LIKE type_t.chr1
   DEFINE l_cnt_old             LIKE type_t.num5                #舊資料筆數
   DEFINE l_cnt_new             LIKE type_t.num5                #新資料筆數
   DEFINE l_count               LIKE type_t.num5                #檢查重複用
   DEFINE l_i                   LIKE type_t.num5
   DEFINE l_j                   LIKE type_t.num5
   DEFINE l_upd                 BOOLEAN
   DEFINE l_exist               BOOLEAN
   DEFINE l_del                 BOOLEAN

   LET l_upd = FALSE
   LET l_cnt_old = g_gzxk_chk.getLength()
   LET l_cnt_new = g_gzxk_d.getLength()
   
   CALL s_transaction_begin()
   #單身批次刪除
   LET l_del = FALSE
   IF l_cnt_old > 0  AND l_cnt_new = 0 THEN   #資料全刪除
      CALL azzi914_delete()
      IF g_gzxk_d.getLength() = 0 THEN
         LET l_del = TRUE
         LET l_upd = TRUE
      END IF
   ELSE
      FOR l_i = 1 TO l_cnt_old
         LET l_exist = FALSE
         FOR l_j =1 TO l_cnt_new
            IF g_gzxk_chk[l_i].gzxk004 = g_gzxk_d[l_j].gzxk004 THEN
               LET l_exist = TRUE
            END IF
         END FOR

         IF NOT l_exist THEN
            DELETE FROM gzxk_t
             WHERE gzxkent = g_enterprise 
               AND gzxk001 = g_gzxk_m.gzxk001
               AND gzxk002 = g_gzxk_m.gzxk002
               AND gzxk003 = g_gzxk_m.gzxk003      
               AND gzxk004 = g_gzxk_chk[l_i].gzxk004

            IF SQLCA.sqlcode THEN
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "gzxk_t" 
            #   LET g_errparam.code   = SQLCA.sqlcode 
            #   LET g_errparam.popup  = FALSE 
            #   CALL cl_err()
            ELSE
               LET l_del = TRUE
               LET l_upd = TRUE
            END IF
         END IF
      END FOR
   END IF
   
   #單身批次新增
   FOR l_i = 1 TO l_cnt_new
      LET l_count = 1
      SELECT COUNT(*) INTO l_count FROM gzxk_t
       WHERE gzxkent = g_enterprise AND gzxk001 = g_gzxk_m.gzxk001
         AND gzxk002 = g_gzxk_m.gzxk002
         AND gzxk003 = g_gzxk_m.gzxk003
         AND gzxk004 = g_gzxk_d[l_i].gzxk004

      #資料未重複, 插入新增資料
      IF l_count = 0 THEN

         INSERT INTO gzxk_t
                     (gzxkent,
                      gzxk001,gzxk002,gzxk003,
                      gzxk004
                      ,gzxkstus,gzxk006,gzxk005,gzxkownid,gzxkowndp,gzxkcrtid,gzxkcrtdp,gzxkcrtdt,gzxkmodid,gzxkmoddt)
               VALUES(g_enterprise,
                      g_gzxk_m.gzxk001,g_gzxk_m.gzxk002,g_gzxk_m.gzxk003,
                      g_gzxk_d[l_i].gzxk004
                      ,g_gzxk_d[l_i].gzxkstus,g_gzxk_d[l_i].gzxk006,g_gzxk_d[l_i].gzxk005,g_gzxk2_d[l_i].gzxkownid,
                          g_gzxk2_d[l_i].gzxkowndp,g_gzxk2_d[l_i].gzxkcrtid,g_gzxk2_d[l_i].gzxkcrtdp,
                          g_gzxk2_d[l_i].gzxkcrtdt,g_gzxk2_d[l_i].gzxkmodid,g_gzxk2_d[l_i].gzxkmoddt)
         #LET p_cmd = 'u'
      #ELSE
      #   INITIALIZE g_errparam TO NULL
      #   LET g_errparam.extend = 'INSERT'
      #   LET g_errparam.code   = "std-00006"
      #   LET g_errparam.popup  = TRUE
      #   CALL cl_err()
      #   INITIALIZE g_gzxk_d[l_i].* TO NULL
      END IF

      IF SQLCA.SQLcode  THEN
         INITIALIZE g_errparam TO NULL
         #LET g_errparam.extend = "gzxk_t"
         LET g_errparam.code   = SQLCA.sqlcode
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         #CALL s_transaction_end('N','0')
         EXIT FOR
      ELSE
         LET l_upd = TRUE
         #CALL s_transaction_end('Y','0')
         #LET g_rec_b=g_rec_b+1
         #DISPLAY g_rec_b TO FORMONLY.cnt
      END IF
   END FOR

   IF l_upd THEN   #資料有異動
      CALL s_transaction_end('Y','0')
      CALL azzi914_show()
      
      IF l_del THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = g_gzxk_m.gzxk001
         LET g_errparam.code   = "azz-00274"   #此設定將於%1重新執行後生效
         LET g_errparam.popup  = TRUE
         LET g_errparam.replace[1] =  g_gzxk_m.gzxk001_desc CLIPPED
         CALL cl_err()
      END IF
   ELSE
      CALL s_transaction_end('N','0')
   END IF
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL azzi914_find_node(p_dzfi001,p_dzfi002,p_dzfi007,p_dzfi009,p_id,p_pid)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_find_node(p_dzfi001,p_dzfi002,p_dzfi007,p_dzfi009,p_id,p_pid)
    DEFINE ps_title         STRING 
   DEFINE p_dzfi001         LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_gzxk002         LIKE gzxk_t.gzxk002   #員工編號 "DEFAULT" 為系統級；g_user為個人級
   DEFINE p_dzfi002         LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi007         LIKE dzfi_t.dzfi007   #節點類型
   DEFINE p_dzfi009         LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_group           STRING                #群組類型 - ALL:全部, QBE:QBE欄位,QSR:Q類的列表,scSR:查詢方案列表
   DEFINE p_pid             STRING                #tree - 父節點id
   DEFINE p_id              STRING                #tree - id
   DEFINE p_root            STRING 
   DEFINE p_plevel          LIKE type_t.num5      #tree - 父階層
   DEFINE p_dzfj005         LIKE dzfj_t.dzfj005   #父節點編號 - 包含元件代碼
   DEFINE ls_sql            STRING 
   DEFINE l_dzfi004         LIKE dzfi_t.dzfi004
   DEFINE l_dzfi006         LIKE dzfi_t.dzfi006
   DEFINE l_dzfi007         LIKE dzfi_t.dzfi007
   DEFINE l_dzfi004_rtn     LIKE dzfi_t.dzfi004
   DEFINE l_dzfi006_rtn     LIKE dzfi_t.dzfi006
   DEFINE l_colname         STRING  
   DEFINE li_cnt            LIKE type_t.num5
   DEFINE li_cnt2           LIKE type_t.num5
   DEFINE li_cnt3           LIKE type_t.num5
   DEFINE lc_dzfi004        LIKE dzfi_t.dzfi004
   DEFINE ls_dzfi004        STRING 
   DEFINE li_chk            LIKE type_t.num5
   
   CALL g_dzfi_d.clear()
   LET li_cnt2 = 1 #陣列index
   
   IF p_dzfi007 = "Other" THEN 
      LET ls_sql = "SELECT dzfi004,dzfi006,dzfi007 FROM dzfi_t    ",  
                   " WHERE dzfistus = 'Y'   ", 
                   "  AND dzfi008 = 'Y'     ", 
                   "  AND dzfi001 = ?       ", 
                   "  AND dzfi002 = ?       ",
                   "  AND dzfi009 = ?       ",
                   "  AND (dzfi007 = 'Grid' ",
                   "  OR dzfi007 = 'Group') " 

      PREPARE azzi914_find_node_pre FROM ls_sql
      DECLARE azzi914_find_node_cs CURSOR FOR azzi914_find_node_pre

      FOREACH azzi914_find_node_cs USING p_dzfi001,p_dzfi002,p_dzfi009
                                   INTO g_dzfi_d[li_cnt2].dzfi004,g_dzfi_d[li_cnt2].dzfi006,g_dzfi_d[li_cnt2].dzfi007

         LET li_cnt2 = li_cnt2 + 1
      END FOREACH 
      CLOSE azzi914_find_node_cs      
   ELSE 
      LET ls_sql = "SELECT dzfi004,dzfi006,dzfi007 FROM dzfi_t ", 
                   "WHERE dzfistus = 'Y' ", 
                   " AND dzfi008 = 'Y' " ,
                   " AND dzfi001 = ? " ,
                   " AND dzfi002 = ? ",
                   " AND dzfi007 = ? ",
                   " AND dzfi009 = ? ",
                   " ORDER BY dzfi003 "

      PREPARE azzi914_find_node_pre2 FROM ls_sql
      DECLARE azzi914_find_node_cs2 CURSOR FOR azzi914_find_node_pre2

      FOREACH azzi914_find_node_cs2 USING p_dzfi001,p_dzfi002,p_dzfi007,p_dzfi009
                                    INTO g_dzfi_d[li_cnt2].dzfi004,g_dzfi_d[li_cnt2].dzfi006,g_dzfi_d[li_cnt2].dzfi007

         LET li_cnt2 = li_cnt2 + 1
      END FOREACH    
      CLOSE azzi914_find_node_cs2     
   END IF
   CALL g_dzfi_d.deleteElement(li_cnt2) 
   LET li_cnt = p_id 
   
   LET g_cnt2 = 0 #show 說明取一次就可以
   FOR li_cnt2 = 1 TO g_dzfi_d.getLength()
       LET g_cnt2 = g_cnt2 + 1
       LET l_colname = g_dzfi_d[li_cnt2].dzfi006 
       LET p_id = li_cnt + 1 USING "<<<<"
       LET li_cnt = li_cnt + 1

       #對Grid 如果在 page 裡面就不繼續往下放到g_tree
       IF g_dzfi_d[li_cnt2].dzfi007 = "Grid" THEN 
          SELECT dzfi004 INTO lc_dzfi004 FROM dzfi_t 
           WHERE dzfistus = 'Y'    
            AND dzfi008 = 'Y'      
            AND dzfi001 = p_dzfi001        
            AND dzfi002 = p_dzfi002       
            AND dzfi009 = p_dzfi009       
            AND dzfi006 = g_dzfi_d[li_cnt2].dzfi004
          LET ls_dzfi004 = DOWNSHIFT(lc_dzfi004) 

          IF ls_dzfi004.getIndexOf("page",1) THEN
             IF ls_dzfi004.subString(1,4) = "page" THEN 
                CONTINUE FOR 
             END IF 

             IF ls_dzfi004.subString(1,5) = "bpage" THEN
                CONTINUE FOR 
             END IF 
             
          END IF   
       END IF 

       IF azzi914_count_child(p_dzfi001,p_dzfi002,p_dzfi009,g_dzfi_d[li_cnt2].dzfi006) THEN 
          LET p_id = li_cnt + 1 USING "<<<<"
          LET li_cnt = li_cnt + 1
          CALL azzi914_find_node_recursive(p_dzfi001,p_dzfi002,p_dzfi009,g_dzfi_d[li_cnt2].dzfi006,g_dzfi_d[li_cnt2].dzfi004,l_colname,p_id,p_pid)
       ELSE 
         
         CALL azzi914_tree2_fill(p_dzfi001,p_dzfi002,p_dzfi009,l_dzfi004,g_dzfi_d[li_cnt2].dzfi006,l_colname,p_id,p_pid,TRUE)    
      END IF 
      LET g_cnt2 = 0 
   END FOR 
   CLOSE azzi914_find_node_cs
   RETURN p_id
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL azzi914_find_node_recursive(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006,p_colname,p_id,p_pid)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_find_node_recursive(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006,p_colname,p_id,p_pid)
   DEFINE ps_title        STRING 
   DEFINE p_dzfi001        LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_gzxk002        LIKE gzxk_t.gzxk002   #員工編號 "DEFAULT" 為系統級；g_user為個人級
   DEFINE p_dzfi002        LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi009        LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_dzfi004        LIKE dzfi_t.dzfi004
   DEFINE p_dzfi006        LIKE dzfi_t.dzfi006
   DEFINE ls_sql           STRING 
   DEFINE l_dzfi004        LIKE dzfi_t.dzfi004
   DEFINE l_dzfi006        LIKE dzfi_t.dzfi006
   DEFINE l_dzfi007        LIKE dzfi_t.dzfi007 
   DEFINE l_dzfi004_rtn    LIKE dzfi_t.dzfi004
   DEFINE l_dzfi006_rtn    LIKE dzfi_t.dzfi006
   DEFINE li_cnt           LIKE type_t.num5
   DEFINE p_plevel         LIKE type_t.num5
   DEFINE p_colname        STRING 
   DEFINE p_pid            STRING                #tree - 父節點id 
   DEFINE p_id             STRING
   DEFINE ls_str           STRING
   DEFINE ls_dzfi004       STRING
   DEFINE li_chk           LIKE type_t.num5
   DEFINE ls_bid           STRING 
   
   LET ls_sql = "SELECT dzfi004,dzfi006,dzfi007 FROM dzfi_t ", 
                 "WHERE dzfistus = 'Y' ", 
                 " AND dzfi008 = 'Y' " ,
                 " AND dzfi001 = ? " ,
                 " AND dzfi002 = ? ",
                 " AND dzfi004 = ? ",
                 " AND dzfi009 = ? ",
                 " ORDER BY dzfi003 "
   PREPARE azzi914_find_node_recu_pre FROM ls_sql
   DECLARE azzi914_find_node_recu_cs CURSOR FOR azzi914_find_node_recu_pre

   FOREACH azzi914_find_node_recu_cs USING p_dzfi001,p_dzfi002,p_dzfi004,p_dzfi009
                                 INTO l_dzfi004,l_dzfi006,l_dzfi007
         #判斷是否有拜訪過
         FOR li_cnt = 1 TO g_view_over_arr.getLength()
            IF l_dzfi006 = g_view_over_arr[li_cnt].id AND l_dzfi004 = g_view_over_arr[li_cnt].pid THEN
               CALL azzi914_get_last(p_dzfi001,p_dzfi002,p_dzfi009,l_dzfi004)RETURNING l_dzfi004_rtn,l_dzfi006_rtn
               IF l_dzfi004_rtn = l_dzfi004 AND l_dzfi006_rtn = l_dzfi006 THEN 
                  EXIT FOR
               END IF
               CONTINUE FOREACH
            END IF 
         END FOR 
         #把拜訪過的放進陣列，做為判斷下次是否繼續拜訪
         LET g_view_over_arr[g_view_over_arr.getLength()+1].pid = l_dzfi004
         LET g_view_over_arr[g_view_over_arr.getLength()].id = l_dzfi006

      IF azzi914_count_child(p_dzfi001,p_dzfi002,p_dzfi009,l_dzfi006) THEN   
         #有子節點
         CALL azzi914_find_node_recursive(p_dzfi001,p_dzfi002,p_dzfi009,l_dzfi006,l_dzfi004,p_colname,p_id,p_pid)
      ELSE 
         LET li_chk = FALSE 
         #比對重複 重複就不把資料放進g_tree
         FOR li_cnt = 1 TO g_tree.getLength()
             LET ls_str = g_tree[li_cnt].b_show
             LET ls_dzfi004 = l_dzfi004
             IF ls_str.getIndexOf(ls_dzfi004,1) THEN 
                LET li_chk =  TRUE 
                EXIT FOR 
             END IF  
         END FOR 
         IF NOT li_chk THEN 
            #沒有子節點
            CALL azzi914_tree2_fill(p_dzfi001,p_dzfi002,p_dzfi009,l_dzfi004,l_dzfi006,p_colname,p_id,p_pid,TRUE)  
         END IF 
      END IF 
      CALL azzi914_get_last(p_dzfi001,p_dzfi002,p_dzfi009,l_dzfi004)RETURNING l_dzfi004_rtn,l_dzfi006_rtn
      #foreach 是最後一筆 return 
      IF l_dzfi004_rtn = l_dzfi004 AND l_dzfi006_rtn = l_dzfi006 THEN 
         RETURN 
      END IF 
   END FOREACH

   CLOSE azzi914_find_node_recu_cs
   CALL azzi914_find_node_recursive(p_dzfi001,p_dzfi002,p_dzfi009,l_dzfi004,l_dzfi006,p_colname,p_id,p_pid) 

END FUNCTION

################################################################################
# Descriptions...: 是否有子節點
# Memo...........:
# Usage..........: CALL azzi914_count_child(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_count_child(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004)
   DEFINE li_cnt         LIKE type_t.num5
   DEFINE p_dzfi001      LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_dzfi002      LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi009      LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_dzfi004      LIKE dzfi_t.dzfi004
   
   SELECT COUNT(*) INTO li_cnt FROM dzfi_t
    WHERE dzfistus = 'Y'
     AND dzfi008 = 'Y'
     AND dzfi001 = p_dzfi001
     AND dzfi002 = p_dzfi002
     AND dzfi004 = p_dzfi004
     AND dzfi009 = p_dzfi009
      
   IF li_cnt > 0 THEN 
      RETURN TRUE 
   END IF  
   RETURN FALSE  
END FUNCTION

################################################################################
# Descriptions...: 取得最後一筆
# Memo...........:
# Usage..........: CALL azzi914_get_last(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2014/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_get_last(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004)
   DEFINE p_dzfi001    LIKE dzfi_t.dzfi001 
   DEFINE p_dzfi002    LIKE dzfi_t.dzfi002
   DEFINE p_dzfi004    LIKE dzfi_t.dzfi004
   DEFINE p_dzfi006    LIKE dzfi_t.dzfi006
   DEFINE p_dzfi009    LIKE dzfi_t.dzfi009
   DEFINE l_dzfi004    LIKE dzfi_t.dzfi004
   DEFINE l_dzfi006    LIKE dzfi_t.dzfi006

   DECLARE azzi914_get_last_cs  SCROLL CURSOR FOR 
     SELECT dzfi004,dzfi006 FROM dzfi_t
      WHERE dzfi001 = p_dzfi001 
        AND dzfi002 = p_dzfi002
        AND dzfi004 = p_dzfi004
        AND dzfi009 = p_dzfi009
        
   OPEN azzi914_get_last_cs
   FETCH LAST azzi914_get_last_cs INTO l_dzfi004,l_dzfi006

   CLOSE azzi914_get_last_cs 
   RETURN l_dzfi004,l_dzfi006
END FUNCTION

################################################################################
# Descriptions...: 填滿樹狀資料
# Memo...........:
# Usage..........: CALL azzi914_tree2_fill(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006,p_colname,p_id,p_pid,p_chk)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_tree2_fill(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006,p_colname,p_id,p_pid,p_chk)
   DEFINE p_chk            LIKE type_t.num5      #
   DEFINE p_dzfi001        LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_dzfi002        LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi009        LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_dzfi004        LIKE dzfi_t.dzfi004
   DEFINE p_dzfi006        LIKE dzfi_t.dzfi006
   DEFINE l_sql_1          STRING
   DEFINE l_sql_2          STRING
   DEFINE l_sql_3           STRING
   DEFINE l_sql_notin1     STRING
   DEFINE p_colname        STRING 
   DEFINE l_treedata        DYNAMIC ARRAY OF type_treedata
   DEFINE p_pid             STRING                #tree - 父節點id
   DEFINE p_id             STRING                 #tree -  節點id
   DEFINE p_gzxk002         LIKE gzxk_t.gzxk002   #員工編號 "DEFAULT" 為系統級；g_user為個人級
   DEFINE p_group           STRING                #群組類型 - ALL:全部, QBE:QBE欄位,QSR:Q類的列表,scSR:查詢方案列表
   DEFINE p_plevel          LIKE type_t.num5      #tree - 父階層
   DEFINE p_dzfj005         LIKE dzfj_t.dzfj005   #父節點編號 - 包含元件代碼
   DEFINE p_open_dzfr003    LIKE dzfr_t.dzfr003   #指定打開的節點編號(流水號)
   DEFINE l_level           LIKE type_t.num5      #tree - 階層
   DEFINE l_i               LIKE type_t.num5 
   DEFINE l_j               LIKE type_t.num5
   DEFINE l_k               LIKE type_t.num5
   DEFINE l_cnt             LIKE type_t.num5
   DEFINE l_str             STRING
   DEFINE l_seq             LIKE dzfr_t.dzfr005   #順序(同階層中的排序)
   DEFINE l_sidx            LIKE type_t.num5
   DEFINE l_eidx            LIKE type_t.num5
   DEFINE l_gzzd003         LIKE gzzd_t.gzzd003
   DEFINE l_gzzd005         LIKE gzzd_t.gzzd005
   DEFINE l_img_dir         STRING
   DEFINE l_ln01            LIKE type_t.num5      #資料數,為了判斷遞迴結束
   DEFINE l_ln02            LIKE type_t.num5      #資料數
   DEFINE l_root_idx        LIKE type_t.num5      #focus的Root節點index
   DEFINE l_colname         STRING
   DEFINE l_comment         STRING
   DEFINE l_chk             LIKE type_t.num5
   DEFINE l_newgroup        BOOLEAN               #是否不同群組
   DEFINE l_groupname       STRING                #群組代碼名稱
   DEFINE li_num            LIKE type_t.num5
   
   #IF p_plevel = 0 THEN
   IF p_chk THEN 
      LET l_sql_notin1 = "dzfj005 NOT IN",
                               " (SELECT gzxk004 FROM gzxk_t",
                               " WHERE gzxkstus='Y' AND gzxkent=? AND gzxk001=? AND (gzxk002 = 'DEFAULT' OR gzxk002 = ?) AND gzxk003=?)"
        
      LET l_str =" (",
                 " SELECT *",
                 " FROM dzfi_t",
                 " WHERE dzfistus = 'Y' AND dzfi008 = 'Y' AND dzfi001 = ? AND dzfi002 = ? AND dzfi009 = ?",
                 " AND dzfi004 = ? ",
                 " AND dzfi006 = ?",
                 " )",
                 " LEFT JOIN",
                 " (",
                    " SELECT *",
                    " FROM dzfj_t",
                    " WHERE dzfjstus = 'Y'",
                 " )",
                 " ON dzfi001=dzfj001 AND dzfi002=dzfj002 AND dzfi009=dzfj017 AND dzfi006=dzfj003",
                 " WHERE dzfj006 <> 'Label' " ,
                 " AND dzfj006 <> 'Button' "
                     
      LET l_sql_1 =
                 " SELECT dzfi004,dzfi007,dzfj005,dzfj010,dzfj006,dzfj009 FROM",l_str CLIPPED,
                 " AND ",l_sql_notin1 CLIPPED,
                 " ORDER BY dzfi003,dzfi005,dzfj004"
                  
      LET l_sql_2 =
                  "SELECT COUNT(dzfj005) FROM",l_str CLIPPED

      PREPARE azzi914_qbe_pre3 FROM l_sql_1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'PREPARE:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF

    DECLARE azzi914_qbe_cs3 CURSOR FOR azzi914_qbe_pre3
         
      #計算數量時不要排除已設定的資料,要取出畫面存在的資料,避免左邊Tree沒資料顯示,右邊就無法拖曳欄位進去
      PREPARE azzi914_qbe_pre4 FROM l_sql_2
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'PREPARE:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF
         
      LET l_str = "SELECT COUNT(gzxk004) FROM gzxk_t",
                  " WHERE gzxkstus='Y' AND gzxkent=? AND gzxk001=? AND (gzxk002 = 'DEFAULT' OR gzxk002 = ?) AND gzxk003=?"
      PREPARE azzi914_qbe_gzxk002_pre2 FROM l_str
         
         #排除系統級設定的資料-客製標示
      LET g_gzxk003_notin = 'c'
      EXECUTE azzi914_qbe_gzxk002_pre2 USING g_enterprise,p_dzfi001,g_gzxk_m.gzxk002,g_gzxk003_notin INTO l_cnt
      IF l_cnt = 0 THEN
         LET g_gzxk003_notin = 'm'
         EXECUTE azzi914_qbe_gzxk002_pre2 USING g_enterprise,p_dzfi001,g_gzxk_m.gzxk002,g_gzxk003_notin INTO l_cnt
      END IF
      IF l_cnt = 0 THEN
         LET g_gzxk003_notin = 's'
         EXECUTE azzi914_qbe_gzxk002_pre2 USING g_enterprise,p_dzfi001,g_gzxk_m.gzxk002,g_gzxk003_notin INTO l_cnt
      END IF
         
      EXECUTE azzi914_qbe_pre4 USING p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006 INTO l_cnt         
      #有子節點
      IF l_cnt > 0 THEN
 
         CASE 
            # CantDel 不能設定
            WHEN p_dzfi004 = "s_queryplan" OR p_dzfi004 = "s_relateapps" OR p_dzfi004 = "GridT_app1" OR p_dzfi004 = "GridT_app2" OR p_dzfi004 = "GridT_browse1" 
                 OR p_dzfi004 = "GridT_quantity" 
                 RETURN 
            OTHERWISE 
                IF azzi914_chk_duplicate(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006) THEN 
                   RETURN
                END IF
     
         END CASE 
         #第一次取一次說明show()
         IF g_cnt2 = 1 THEN 
            LET g_form_idx = g_form_idx + 1
            LET g_tree[g_form_idx].b_pid = p_pid CLIPPED
            LET g_tree[g_form_idx].b_id = p_id CLIPPED   
            LET g_tree[g_form_idx].b_level = azzi914_get_level(g_tree[g_form_idx].b_id) 

            CASE 
               WHEN  p_colname = "s_browse"
                     LET l_str = "lbl_scbrowse"
               
                  CALL s_azzi902_get_gzzd(g_code,l_str) RETURNING l_colname, l_comment  
               OTHERWISE 
                  CALL s_azzi902_get_gzzd(g_gzxk_m.gzxk001,p_colname) RETURNING l_colname, l_comment   
            END CASE  
            #節點名稱
            #CALL s_azzi902_get_gzzd(g_gzxk_m.gzxk001,p_colname) RETURNING l_colname, l_comment
            IF cl_null(l_colname) THEN 
               LET g_tree[g_form_idx].b_show = p_colname   
            ELSE 
               LET g_tree[g_form_idx].b_show = p_colname ,"(",l_colname,")"  CLIPPED  
            END IF 
            
            LET g_tree[g_form_idx].b_hasC = TRUE
            LET g_tree[g_form_idx].b_exp = TRUE

           #取資料的優先順序  Page Table Tree 其他
           IF g_dzfi_d[1].dzfi007 = "Page" THEN 
              #show 是NULL 改取 這個page 的text 
              IF cl_null(l_colname) THEN 
                 CALL azzi914_get_dzfj009(p_dzfi001,p_dzfi002,p_dzfi006,p_dzfi009) RETURNING p_colname
                 CALL s_azzi902_get_gzzd(g_gzxk_m.gzxk001,p_colname) RETURNING l_colname, l_comment
                 LET g_tree[g_form_idx].b_show = p_colname ,"(",l_colname,")"  CLIPPED 
              END IF 
           
              LET li_num = 0
              IF azzi914_get_container(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006) THEN 
               
               LET p_pid = g_tree[g_form_idx].b_id
               LET p_id = p_id ,".",(li_num + 1) USING "<<<<"   
               LET g_form_idx = g_form_idx + 1 
               LET g_tree[g_form_idx].b_pid = p_pid CLIPPED
               LET g_tree[g_form_idx].b_id = p_id CLIPPED   
               LET g_tree[g_form_idx].b_level = azzi914_get_level(g_tree[g_form_idx].b_id) 
               #節點名稱
               CALL s_azzi902_get_gzzd(g_gzxk_m.gzxk001,p_dzfi004) RETURNING l_colname, l_comment
               IF cl_null(l_colname) THEN 
                  LET g_tree[g_form_idx].b_show = p_dzfi004 
               ELSE
                  LET g_tree[g_form_idx].b_show = p_dzfi004 ,"(",l_colname,")"  CLIPPED #p_group  
               END IF 
               
               LET g_tree[g_form_idx].b_hasC = TRUE
               LET g_tree[g_form_idx].b_exp = TRUE
               LET p_id = g_tree[g_form_idx].b_id
              END IF    
         
           END IF #end Page
           LET g_cnt2 = g_cnt2 + 1
         END IF 
        
         CALL azzi914_tree2_fill(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006,p_colname,p_id,p_id,FALSE)
            
     END IF #end if l_cnt   
   ELSE 
      #在FOREACH中直接使用recursive,資料會錯亂,所以先將資料放到陣列後處理
      LET l_cnt = 1
      CALL l_treedata.clear()

         FOREACH azzi914_qbe_cs3 USING p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006,
                                       g_enterprise,p_dzfi001,g_gzxk_m.gzxk002,g_gzxk003_notin
            INTO l_treedata[l_cnt].dzfi004,l_treedata[l_cnt].dzfi007,
                 l_treedata[l_cnt].dzfj005,l_treedata[l_cnt].dzfj010,l_treedata[l_cnt].dzfj006,l_treedata[l_cnt].dzfj009

            IF l_treedata[l_cnt].dzfj006 = "Button" OR l_treedata[l_cnt].dzfj006 = "Phantom"  THEN 
               CONTINUE FOREACH 
            END IF

            IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = 'FOREACH:'
                LET g_errparam.popup = TRUE
                CALL cl_err()
                EXIT FOREACH
            END IF
            
            LET l_treedata[l_cnt].child_cnt = 0
            LET l_cnt = l_cnt + 1
         END FOREACH
         
         CALL l_treedata.deleteelement(l_cnt)  #刪除FOREACH最後新增的空白列
         LET l_cnt = l_cnt - 1
         
         IF l_cnt > 0 THEN
            FOR l_i = 1 TO l_cnt
                
               LET g_form_idx = g_form_idx + 1
               LET g_tree[g_form_idx].b_pid = p_pid CLIPPED
               #LET l_str = l_i  
               LET g_id_cnt =  g_id_cnt + 1
               LET l_str = g_id_cnt #數值轉字串
               #IF l_level = 1 THEN
               #   LET g_tree[g_form_idx].b_id = l_str CLIPPED
               #ELSE
                   LET g_tree[g_form_idx].b_id = g_tree[g_form_idx].b_pid CLIPPED,".",l_str CLIPPED
               #END IF
               LET g_tree[g_form_idx].b_level = azzi914_get_level(g_tree[g_form_idx].b_id) 
               LET l_seq = l_str CLIPPED

               LET g_tree[g_form_idx].dzfi004 = l_treedata[l_i].dzfi004 CLIPPED   #群組代碼-子
               LET g_tree[g_form_idx].dzfj005 = l_treedata[l_i].dzfj005 CLIPPED   #包含元件代碼
               LET g_tree[g_form_idx].dzfj006 = l_treedata[l_i].dzfj006 CLIPPED   #節點類型
               #節點名稱
               CALL s_azzi902_get_gzzd(p_dzfi001,l_treedata[l_i].dzfj010) RETURNING l_colname, l_comment
               LET g_tree[g_form_idx].dzfj005_desc = l_colname CLIPPED
               LET g_tree[g_form_idx].b_show = g_tree[g_form_idx].dzfj005 CLIPPED,": ",g_tree[g_form_idx].dzfj005_desc CLIPPED 

               #群組代碼名稱
               #第一筆要重新取名稱
               IF l_i = 1 THEN
                  LET l_newgroup = TRUE
               ELSE
               #不同群組時要重新取名稱
                  LET l_k = l_i - 1
                  IF l_treedata[l_i].dzfj009 <> l_treedata[l_k].dzfj009 THEN
                     LET l_newgroup = TRUE
                  ELSE
                     LET l_newgroup = FALSE
                  END IF
               END IF
               IF l_newgroup THEN
                  CALL s_azzi902_get_gzzd(p_dzfi001,l_treedata[l_i].dzfj009) RETURNING l_groupname, l_comment
               END IF
               LET g_tree[g_form_idx].dzfj009_desc = l_groupname
               
               #有子節點
               LET g_tree[g_form_idx].b_hasC = FALSE
               LET g_tree[g_form_idx].b_exp = FALSE
            END FOR
            LET g_cnt2 = g_cnt2 + 1
         END IF
   END IF #IF p_chk = 0 THEN
END FUNCTION

################################################################################
# Descriptions...: 取階層
# Memo...........:
# Usage..........: CALL azzi914_get_level(ps_str)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_get_level(ps_str)
    DEFINE tok       base.StringTokenizer
   DEFINE ps_str    STRING 
   DEFINE li_cnt    LIKE type_t.num5
   
   LET tok = base.StringTokenizer.create(ps_str,".")
   LET li_cnt = tok.countTokens()

   RETURN li_cnt
END FUNCTION

################################################################################
# Descriptions...: 取得container
# Memo...........:
# Usage..........: CALL azzi914_get_container(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_get_container(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006)
   DEFINE p_dzfi001        LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_dzfi002        LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi009        LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_dzfi004        LIKE dzfi_t.dzfi004
   DEFINE p_dzfi006        LIKE dzfi_t.dzfi006
   DEFINE lc_dzfi007       LIKE dzfi_t.dzfi007


  SELECT dzfi007 INTO lc_dzfi007
   FROM dzfi_t
    WHERE dzfistus = 'Y'
     AND dzfi008 = 'Y'
     AND dzfi001 = p_dzfi001
     AND dzfi002 = p_dzfi002
     AND dzfi009 = p_dzfi009
     AND dzfi006 = p_dzfi004 

     CASE  
        WHEN lc_dzfi007 = "Table"
           RETURN TRUE 
        WHEN lc_dzfi007 = "Tree"
          RETURN TRUE 
     OTHERWISE
        RETURN FALSE  
     END CASE
END FUNCTION

################################################################################
# Descriptions...:  dzfj009
# Memo...........:
# Usage..........: CALL azzi914_get_dzfj009(p_dzfi001,p_dzfi002,p_dzfi006,p_dzfi009)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_get_dzfj009(p_dzfi001,p_dzfi002,p_dzfi006,p_dzfi009)
   DEFINE p_dzfi001        LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_dzfi002        LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi009        LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_dzfi004        LIKE dzfi_t.dzfi004
   DEFINE p_dzfi006        LIKE dzfi_t.dzfi006
   DEFINE lc_dzfi007       LIKE dzfi_t.dzfi007
   DEFINE lc_dzfj009       LIKE dzfj_t.dzfj009
   DEFINE ls_sql           STRING 

   LET ls_sql = "SELECT dzfj009 FROM dzfj_t ",
                " WHERE dzfjstus = 'Y' ",
                " AND dzfj001 = ? ",
                " AND dzfj002 = ? ",
                " AND dzfj003 = ? ",
                " AND dzfj017 = ? "
   PREPARE azzi914_get_dzfj009_pre FROM ls_sql   
   DECLARE azzi914_get_dzfj009_cs CURSOR FOR azzi914_get_dzfj009_pre
   FOREACH azzi914_get_dzfj009_cs USING p_dzfi001,p_dzfi002,p_dzfi006,p_dzfi009 INTO lc_dzfj009

      EXIT FOREACH  
   END FOREACH 
   CLOSE azzi914_get_dzfj009_cs
   RETURN lc_dzfj009
END FUNCTION

################################################################################
# Descriptions...: 比對是否有重複
# Memo...........:
# Usage..........: CALL azzi914_chk_duplicate(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 2015/03/04 By jrg542
# Modify.........:
################################################################################
PRIVATE FUNCTION azzi914_chk_duplicate(p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006)
   DEFINE p_dzfi001        LIKE dzfi_t.dzfi001   #結構代號
   DEFINE p_dzfi002        LIKE dzfi_t.dzfi002   #規格版次
   DEFINE p_dzfi009        LIKE dzfi_t.dzfi009   #客製標示
   DEFINE p_dzfi004        LIKE dzfi_t.dzfi004
   DEFINE p_dzfi006        LIKE dzfi_t.dzfi006
   DEFINE l_cnt            LIKE type_t.num5
   DEFINE l_chk            LIKE type_t.num5
   DEFINE l_cnt2           LIKE type_t.num5
   DEFINE l_cnt3           LIKE type_t.num5
   DEFINE l_treedata        DYNAMIC ARRAY OF type_treedata  
   
   CALL l_treedata.clear()
   LET l_chk = FALSE
   LET l_cnt = 1
   LET l_cnt3 = 0
   FOREACH azzi914_qbe_cs3 USING p_dzfi001,p_dzfi002,p_dzfi009,p_dzfi004,p_dzfi006,
                                       g_enterprise,p_dzfi001,g_gzxk_m.gzxk002,g_gzxk003_notin
            INTO l_treedata[l_cnt].dzfi004,l_treedata[l_cnt].dzfi007,
                 l_treedata[l_cnt].dzfj005,l_treedata[l_cnt].dzfj010,l_treedata[l_cnt].dzfj006,l_treedata[l_cnt].dzfj009

            LET l_cnt3 =  l_cnt3 + 1     
            IF l_treedata[l_cnt].dzfj006 = "Button" THEN 
               CONTINUE FOREACH 
            END IF

            FOR l_cnt2  = 1 TO g_tree.getLength()
                IF g_tree[l_cnt2].dzfj005 = l_treedata[l_cnt].dzfj005 THEN
                   LET l_chk = TRUE
                   EXIT FOREACH
                END IF
            END FOR

   END FOREACH 
   CLOSE azzi914_qbe_cs3
   RETURN l_chk
END FUNCTION

 
{</section>}
 
