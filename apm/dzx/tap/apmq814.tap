<add_points prog="apmq814" std_prog="apmq814" erpver="1.0" module="APM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.apmq814_gen_pamt814" cite_std="N" status="d" ver="" src="s" new="Y" order="11">
<![CDATA[
PRIVATE FUNCTION apmq814_gen_pamt814()
DEFINE li_idx       LIKE type_t.num5
DEFINE l_pmcl       RECORD LIKE pmcl_t.*
DEFINE l_pmcm       RECORD LIKE pmcm_t.*
DEFINE l_success    LIKE type_t.num5
DEFINE l_doctype    LIKE rtai_t.rtai004    
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_pmcmseq    LIKE pmcm_t.pmcmseq
DEFINE l_pmcm007    LIKE pmcm_t.pmcm007

   CALL s_transaction_begin()
   #單頭
   LET l_pmcl.pmclownid = g_user
   LET l_pmcl.pmclowndp = g_dept
   LET l_pmcl.pmclcrtid = g_user
   LET l_pmcl.pmclcrtdp = g_dept 
   LET l_pmcl.pmclcrtdt = cl_get_current()
   LET l_pmcl.pmclmodid = ""
   LET l_pmcl.pmclmoddt = ""
   LET l_pmcl.pmclcnfid = ""
   LET l_pmcl.pmclcnfdt = ""
   LET l_pmcl.pmclstus = "N"
   LET l_pmcl.pmcldocdt = g_today
   
   LET l_pmcl.pmcl001 = g_user
   SELECT ooag003 INTO l_pmcl.pmcl002 FROM ooag_t
    WHERE ooag001 = l_pmcl.pmcl001 AND ooagent = g_enterprise
    
   #預設單據的單別 
   LET l_success = ''
   LET l_doctype = ''
   CALL s_arti200_get_def_doc_type(g_site,"apmt814",'1')
        RETURNING l_success, l_doctype
   IF l_success THEN
      LET l_pmcl.pmcldocno = l_doctype
   ELSE
      CALL cl_err('','axm-00089',1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   IF NOT s_aooi200_chk_slip(g_site,'',l_pmcl.pmcldocno,"apmt814") THEN
      CALL cl_err('','axm-00089',1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   CALL s_aooi200_gen_docno(g_site,l_pmcl.pmcldocno,l_pmcl.pmcldocdt,"apmt814") RETURNING l_success,l_pmcl.pmcldocno
   IF NOT l_success THEN
      CALL cl_err('','axm-00089',1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF 
   
   INSERT INTO pmcl_t(pmclstus,pmclent,pmcldocno,pmcldocdt,pmclownid,
                      pmclowndp,pmclcrtid,pmclcrtdp,pmclcrtdt,pmclmodid,
                      pmclmoddt,pmclcnfid,pmclcnfdt,pmcl001,pmcl002)
               VALUES(l_pmcl.pmclstus,g_enterprise,l_pmcl.pmcldocno,l_pmcl.pmcldocdt,l_pmcl.pmclownid,
                      l_pmcl.pmclowndp,l_pmcl.pmclcrtid,l_pmcl.pmclcrtdp,l_pmcl.pmclcrtdt,l_pmcl.pmclmodid,
                      l_pmcl.pmclmoddt,l_pmcl.pmclcnfid,l_pmcl.pmclcnfdt,l_pmcl.pmcl001,l_pmcl.pmcl002)
                      
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmcl_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   LET l_pmcmseq = 0
   CALL cl_showmsg_init()
   FOR li_idx = 1 TO g_pmck_d.getLength()
      IF g_pmck_d[li_idx].sel = "Y" THEN
         SELECT COUNT(*)
           INTO l_cnt
           FROM pmcm_t,pmcl_t
          WHERE pmcment = pmclent
            AND pmcmdocno = pmcldocno
            AND pmcment = g_enterprise
            AND pmcm001 = g_pmck_d[li_idx].pmck003
            AND pmcm002 = g_pmck_d[li_idx].pmck001
            AND pmcm003 = g_pmck_d[li_idx].pmck002
            AND pmclstus = "N"
         IF l_cnt > 0 THEN
            CALL cl_errmsg(g_pmck_d[li_idx].pmck003,'apmt814','','apm-00522',1)
         ELSE
            INITIALIZE l_pmcm.* TO NULL
            #單身
            LET l_pmcm.pmcmdocno = l_pmcl.pmcldocno
            LET l_pmcmseq = l_pmcmseq + 1
            LET l_pmcm.pmcmseq = l_pmcmseq 
            LET l_pmcm.pmcm001 = g_pmck_d[li_idx].pmck003
            LET l_pmcm.pmcm002 = g_pmck_d[li_idx].pmck001
            LET l_pmcm.pmcm003 = g_pmck_d[li_idx].pmck002
            LET l_pmcm.pmcm004 = g_pmck_d[li_idx].pmck004
            LET l_pmcm.pmcm005 = g_pmck_d[li_idx].pmck004
            LET l_pmcm.pmcm006 = g_pmck_d[li_idx].pmck005
            LET l_pmcm.pmcm008 = g_pmck_d[li_idx].pmck006
            LET l_pmcm.pmcm009 = g_pmck_d[li_idx].pmck007
            LET l_pmcm007 = 0
            SELECT MAX(pmcm007)
              INTO l_pmcm007
              FROM pmcm_t
             WHERE pmcment = g_enterprise
               AND pmcm001 = g_pmck_d[li_idx].pmck003
               AND pmcm002 = g_pmck_d[li_idx].pmck001
               AND pmcm003 = g_pmck_d[li_idx].pmck002
            LET l_pmcm.pmcm007 = l_pmcm007 + 1
            
            INSERT INTO pmcm_t(pmcment,pmcmdocno,pmcmseq,pmcm001,pmcm002,pmcm003,
                               pmcm004,pmcm005,pmcm006,pmcm007,pmcm008,pmcm009)
                        VALUES(g_enterprise,l_pmcm.pmcmdocno,l_pmcm.pmcmseq,l_pmcm.pmcm001,l_pmcm.pmcm002,l_pmcm.pmcm003,
                               l_pmcm.pmcm004,l_pmcm.pmcm005,l_pmcm.pmcm006,l_pmcm.pmcm007,l_pmcm.pmcm008,l_pmcm.pmcm009)
            
            IF SQLCA.sqlcode THEN
               CALL cl_errmsg(g_pmck_d[li_idx].pmck003,'apmt814','',SQLCA.sqlcode,1)
            END IF
         END IF
      END IF
   END FOR
   CALL s_transaction_end('Y','1')
   CALL cl_err_showmsg()
END FUNCTION]]>
</point>
  <point name="construct.c.page1.b_pmck001" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmcc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmck001  #顯示到畫面上
            NEXT FIELD pmck001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.b_pmck002" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmck002  #顯示到畫面上
            NEXT FIELD pmck002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.b_pmck003" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmck003  #顯示到畫面上
            NEXT FIELD pmck003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.b_pmck006" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmck006  #顯示到畫面上
            NEXT FIELD b_pmck006                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.b_pmck007" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmck007  #顯示到畫面上
            NEXT FIELD b_pmck007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.pmck001" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[ 
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmcc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmck001  #顯示到畫面上
            NEXT FIELD b_pmck001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.pmck002" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[     
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmck002  #顯示到畫面上
            NEXT FIELD b_pmck002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.pmck003" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmck003  #顯示到畫面上
            NEXT FIELD b_pmck003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.pmck006" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[  
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2053"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmck006  #顯示到畫面上
            NEXT FIELD b_pmck006                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.pmck007" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2054"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmck007  #顯示到畫面上
            NEXT FIELD b_pmck007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.b_pmcj001" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmcc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcj001  #顯示到畫面上
            NEXT FIELD pmcj001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.b_pmcj002" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcj002  #顯示到畫面上
            NEXT FIELD pmcj002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.b_pmcj004" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcj004  #顯示到畫面上
            NEXT FIELD pmcj004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.b_pmcj005" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmcj005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcj005  #顯示到畫面上
            NEXT FIELD pmcj005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.b_pmcj006" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcj006  #顯示到畫面上
            NEXT FIELD pmcj006                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.pmcj001" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[      
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmcc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmcj001  #顯示到畫面上
            NEXT FIELD b_pmcj001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.pmcj002" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[      
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmcj002  #顯示到畫面上
            NEXT FIELD b_pmcj002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.pmcj004" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[    
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmcj004  #顯示到畫面上
            NEXT FIELD b_pmcj004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.pmcj005" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[  
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmcj005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmcj005  #顯示到畫面上
            NEXT FIELD b_pmcj005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.pmcj006" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[  
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "H"
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_pmcj006  #顯示到畫面上
            NEXT FIELD b_pmcj006                     #返回原欄位
    

]]>
</point>
  <point name="input.a.page1.pmck001" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmck_d[g_detail_idx].pmck001) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck002) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmck_d[g_detail_idx].pmck001 != g_pmck_d_t.pmck001 OR g_pmck_d[g_detail_idx].pmck002 != g_pmck_d_t.pmck002 OR g_pmck_d[g_detail_idx].pmck003 != g_pmck_d_t.pmck003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmck_t WHERE "||"pmckent = '" ||g_enterprise|| "' AND "||"pmck001 = '"||g_pmck_d[g_detail_idx].pmck001 ||"' AND "|| "pmck002 = '"||g_pmck_d[g_detail_idx].pmck002 ||"' AND "|| "pmck003 = '"||g_pmck_d[g_detail_idx].pmck003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.pmck002" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmck_d[g_detail_idx].pmck001) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck002) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmck_d[g_detail_idx].pmck001 != g_pmck_d_t.pmck001 OR g_pmck_d[g_detail_idx].pmck002 != g_pmck_d_t.pmck002 OR g_pmck_d[g_detail_idx].pmck003 != g_pmck_d_t.pmck003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmck_t WHERE "||"pmckent = '" ||g_enterprise|| "' AND "||"pmck001 = '"||g_pmck_d[g_detail_idx].pmck001 ||"' AND "|| "pmck002 = '"||g_pmck_d[g_detail_idx].pmck002 ||"' AND "|| "pmck003 = '"||g_pmck_d[g_detail_idx].pmck003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.pmck003" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmck_d[g_detail_idx].pmck001) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck002) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmck_d[g_detail_idx].pmck001 != g_pmck_d_t.pmck001 OR g_pmck_d[g_detail_idx].pmck002 != g_pmck_d_t.pmck002 OR g_pmck_d[g_detail_idx].pmck003 != g_pmck_d_t.pmck003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmck_t WHERE "||"pmckent = '" ||g_enterprise|| "' AND "||"pmck001 = '"||g_pmck_d[g_detail_idx].pmck001 ||"' AND "|| "pmck002 = '"||g_pmck_d[g_detail_idx].pmck002 ||"' AND "|| "pmck003 = '"||g_pmck_d[g_detail_idx].pmck003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.pmcj003" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_pmck_d[g_detail_idx].pmck001 IS NOT NULL AND g_pmck_d[g_detail_idx].pmck002 IS NOT NULL AND g_pmck_d[g_detail_idx].pmck003 IS NOT NULL AND g_pmck2_d[g_detail_idx2].pmcj003 IS NOT NULL AND g_pmck2_d[g_detail_idx2].pmcj005 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmck_d[g_detail_idx].pmck001 != g_pmck_d[g_detail_idx].pmck001 OR g_pmck_d[g_detail_idx].pmck002 != g_pmck_d[g_detail_idx].pmck002 OR g_pmck_d[g_detail_idx].pmck003 != g_pmck_d[g_detail_idx].pmck003 OR g_pmck2_d[g_detail_idx2].pmcj003 != g_pmck2_d_t.pmcj003 OR g_pmck2_d[g_detail_idx2].pmcj005 != g_pmck2_d_t.pmcj005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmcj_t WHERE "||"pmcjent = '" ||g_enterprise|| "' AND "||"pmcj001 = '"||g_pmck_d[g_detail_idx].pmck001 ||"' AND "|| "pmcj002 = '"||g_pmck_d[g_detail_idx].pmck002 ||"' AND "|| "pmcj004 = '"||g_pmck_d[g_detail_idx].pmck003 ||"' AND "|| "pmcj003 = '"||g_pmck2_d[g_detail_idx2].pmcj003 ||"' AND "|| "pmcj005 = '"||g_pmck2_d[g_detail_idx2].pmcj005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.pmcj004" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmck_d[g_detail_idx].pmck001) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck002) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck003) AND NOT cl_null(g_pmck2_d[g_detail_idx2].pmcj004) AND NOT cl_null(g_pmck2_d[g_detail_idx2].pmcj005) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmck_d[g_detail_idx].pmck001 != g_pmck_d[g_detail_idx].pmck001 OR g_pmck_d[g_detail_idx].pmck002 != g_pmck_d[g_detail_idx].pmck002 OR g_pmck_d[g_detail_idx].pmck003 != g_pmck_d[g_detail_idx].pmck003 OR g_pmck2_d[g_detail_idx2].pmcj004 != g_pmck2_d_t.pmcj004 OR g_pmck2_d[g_detail_idx2].pmcj005 != g_pmck2_d_t.pmcj005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmcj_t WHERE "||"pmcjent = '" ||g_enterprise|| "' AND "||"pmcj001 = '"||g_pmck_d[g_detail_idx].pmck001 ||"' AND "|| "pmcj002 = '"||g_pmck_d[g_detail_idx].pmck002 ||"' AND "|| "pmcj003 = '"||g_pmck_d[g_detail_idx].pmck003 ||"' AND "|| "pmcj004 = '"||g_pmck2_d[g_detail_idx2].pmcj004 ||"' AND "|| "pmcj005 = '"||g_pmck2_d[g_detail_idx2].pmcj005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.pmcj005" cite_std="N" status="" ver="1" src="s" new="N" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmck_d[g_detail_idx].pmck001) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck002) AND NOT cl_null(g_pmck_d[g_detail_idx].pmck003) AND NOT cl_null(g_pmck2_d[g_detail_idx2].pmcj004) AND NOT cl_null(g_pmck2_d[g_detail_idx2].pmcj005) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmck_d[g_detail_idx].pmck001 != g_pmck_d[g_detail_idx].pmck001 OR g_pmck_d[g_detail_idx].pmck002 != g_pmck_d[g_detail_idx].pmck002 OR g_pmck_d[g_detail_idx].pmck003 != g_pmck_d[g_detail_idx].pmck003 OR g_pmck2_d[g_detail_idx2].pmcj004 != g_pmck2_d_t.pmcj004 OR g_pmck2_d[g_detail_idx2].pmcj005 != g_pmck2_d_t.pmcj005)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmcj_t WHERE "||"pmcjent = '" ||g_enterprise|| "' AND "||"pmcj001 = '"||g_pmck_d[g_detail_idx].pmck001 ||"' AND "|| "pmcj002 = '"||g_pmck_d[g_detail_idx].pmck002 ||"' AND "|| "pmcj003 = '"||g_pmck_d[g_detail_idx].pmck003 ||"' AND "|| "pmcj004 = '"||g_pmck2_d[g_detail_idx2].pmcj004 ||"' AND "|| "pmcj005 = '"||g_pmck2_d[g_detail_idx2].pmcj005 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="function.apmq814_row_sel" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_row_sel()
DEFINE l_i               LIKE type_t.num5
DEFINE l_sel             LIKE type_t.chr1
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_ac_t            LIKE type_t.num5

   CALL apmq814_set_comp_visible()
   LET g_sql = "SELECT  UNIQUE pmcj004,'',pmcj001,pmcj002,'',pmcj003,pmcj005,'',pmcj006,'',pmcj007 FROM pmcj_t",    
               "",
               " WHERE pmcjent=? AND pmcj001=? AND pmcj002=? AND pmcj004=?"
 
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY pmcj_t.pmcj003,pmcj_t.pmcj005" 
                         
   PREPARE apmq814_pb3 FROM g_sql
   DECLARE b_fill_curs3 CURSOR FOR apmq814_pb3
   
   LET l_ac_t = l_ac
   LET l_cnt = 1
   LET l_sel = "N"
   
   FOR l_i = 1 TO g_pmck_d.getLength()
      IF g_pmck_d[l_i].sel = "Y" THEN
         LET l_sel = "Y"
         EXIT FOR
      END IF
   END FOR
   
   IF l_sel = "Y" THEN
      CALL g_pmck2_d.clear()
      FOR l_i = 1 TO g_pmck_d.getLength()
         IF g_pmck_d[l_i].sel = "Y" THEN
            FOREACH b_fill_curs3 USING g_enterprise,g_pmck_d[l_i].pmck001,g_pmck_d[l_i].pmck002,g_pmck_d[l_i].pmck003
               INTO g_pmck2_d[l_cnt].pmcj004,g_pmck2_d[l_cnt].pmcj004_desc,g_pmck2_d[l_cnt].pmcj001, 
                    g_pmck2_d[l_cnt].pmcj002,g_pmck2_d[l_cnt].pmcj002_desc,g_pmck2_d[l_cnt].pmcj003,g_pmck2_d[l_cnt].pmcj005, 
                    g_pmck2_d[l_cnt].pmcj005_desc,g_pmck2_d[l_cnt].pmcj006,g_pmck2_d[l_cnt].pmcj006_desc,g_pmck2_d[l_cnt].pmcj007
              
               IF SQLCA.sqlcode THEN
                  CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
                  EXIT FOREACH
               END IF
               LET l_ac = l_cnt
	           CALL apmq814_pmcj004_ref()
               CALL apmq814_pmcj002_ref()
               CALL apmq814_pmcj006_ref()
               CALL apmq814_pmcj005_ref()
               
               LET l_cnt = l_cnt + 1
               IF l_cnt > g_max_rec THEN
                  EXIT FOREACH
               END IF    
            END FOREACH
         END IF
      END FOR
      CALL g_pmck2_d.deleteElement(g_pmck2_d.getLength())  
      LET l_ac = l_ac_t
   ELSE 
      CALL apmq814_fetch()
   END IF
    
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmck003_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmck003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmck_d[l_ac].pmck003
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmck_d[l_ac].pmck003_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmck002_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmck002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmck_d[l_ac].pmck002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmck_d[l_ac].pmck002_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmck007_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmck007_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmck_d[l_ac].pmck007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2054' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmck_d[l_ac].pmck007_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmcj004_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmcj004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj004
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmck2_d[l_ac].pmcj004_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmcj002_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmcj002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmck2_d[l_ac].pmcj002_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmcj006_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmcj006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj006
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmck2_d[l_ac].pmcj006_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmcj005_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmcj005_ref()
   IF g_pmck2_d[l_ac].pmcj003 = "2" THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj005
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2052' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET  g_pmck2_d[l_ac].pmcj005_desc = '', g_rtn_fields[1] , ''
   ELSE
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj005
      CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001='6001' AND gzcbl002=? AND gzcbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET  g_pmck2_d[l_ac].pmcj005_desc = '', g_rtn_fields[1] , ''
   END IF 
   
END FUNCTION]]>
</point>
  <point name="function.apmq814_pmck006_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_pmck006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmck_d[l_ac].pmck006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2053' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET  g_pmck_d[l_ac].pmck006_desc = '', g_rtn_fields[1] , ''
END FUNCTION]]>
</point>
  <point name="function.apmq814_set_comp_visible" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[
PUBLIC FUNCTION apmq814_set_comp_visible()
   DEFINE l_i      LIKE type_t.num5
   DEFINE l_cnt    LIKE type_t.num5
   
   CALL cl_set_comp_visible("b_pmcj004,b_pmcj004_desc,b_pmcj001,b_pmcj002,b_pmcj002_desc",FALSE)
   IF g_detail_idx > 0 THEN
      IF g_pmck_d[g_detail_idx].sel = "Y" THEN 
         LET l_cnt = 0
         FOR l_i = 1 TO g_pmck_d.getLength()
            IF g_pmck_d[l_i].sel = "Y" THEN
               LET l_cnt = l_cnt + 1
               IF l_cnt >=2 THEN
                  EXIT FOR
               END IF
            END IF
         END FOR  
         IF l_cnt > 1 THEN
            CALL cl_set_comp_visible("b_pmcj004,b_pmcj004_desc,b_pmcj001,b_pmcj002,b_pmcj002_desc",TRUE)
         END IF
      END IF   
   END IF
END FUNCTION]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      CALL apmq814_pmck003_ref()
      CALL apmq814_pmck002_ref()
      CALL apmq814_pmck007_ref()
      CALL apmq814_pmck006_ref()]]>
</point>
  <point name="detail_show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="detail_show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal004=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmck2_d[l_ac].pmcj004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmck2_d[l_ac].pmcj004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmck2_d[l_ac].pmcj002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmck2_d[l_ac].pmcj002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj005
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmck2_d[l_ac].pmcj005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmck2_d[l_ac].pmcj005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmck2_d[l_ac].pmcj006
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmck2_d[l_ac].pmcj006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmck2_d[l_ac].pmcj006_desc
]]>
</point>
  <point name="fetch.before_fill2" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL apmq814_set_comp_visible()
   IF g_pmck_d[g_detail_idx].sel = "Y" THEN
      CALL apmq814_row_sel()
      RETURN
   END IF]]>
</point>
  <point name="fetch.fill2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      CALL apmq814_pmcj004_ref()
      CALL apmq814_pmcj002_ref()
      CALL apmq814_pmcj006_ref()
      CALL apmq814_pmcj005_ref()]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc('b_pmcj003','6002')
   CALL apmq814_set_comp_visible()]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="menu.filter" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="menu.open_apmt814" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[               IF DIALOG.isRowSelected("s_detail1", l_ac) THEN
                  #LET l_cmd = 'apmt814 "" "',g_pmck_d[l_ac].pmck003,'" "',g_pmck_d[l_ac].pmck001,'" "',g_pmck_d[l_ac].pmck002,'"'
                  #CALL cl_cmdrun_wait(l_cmd)
                  LET la_param.prog = 'apmt814'
                  LET la_param.param[1] = ""  
                  LET la_param.param[2] = g_pmck_d[l_ac].pmck003
                  LET la_param.param[3] = g_pmck_d[l_ac].pmck001
                  LET la_param.param[4] = g_pmck_d[l_ac].pmck002
                  LET ls_js = util.JSON.stringify( la_param )
                  CALL cl_cmdrun(ls_js)
               END IF
               CONTINUE DIALOG]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_i      LIKE type_t.num5
   DEFINE l_cmd    STRING
   DEFINE l_chk    LIKE type_t.chr1
   DEFINE ls_js    STRING
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD]]>
</point>
  <point name="ui_dialog.onaction_sel" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            CALL apmq814_row_sel()]]>
</point>
  <point name="ui_dialog.onaction_selall" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            CALL apmq814_row_sel()]]>
</point>
  <point name="ui_dialog.onaction_selnone" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            CALL apmq814_row_sel()]]>
</point>
  <point name="ui_dialog.onaction_unsel" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            CALL apmq814_row_sel()]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.bef_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.gen_apmt814" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[               FOR li_idx = 1 TO g_pmck_d.getLength()
                  IF g_pmck_d[li_idx].sel = "Y" THEN
                     LET l_chk = "Y"
                     EXIT FOR
                  END IF
               END FOR
               IF l_chk = "Y" THEN
                  CALL apmq814_gen_apmt814()
               END IF
               CONTINUE DIALOG]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.datainfo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_pmck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_pmck003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_pmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_pmck001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_pmck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_pmck002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_pmck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_pmck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.b_pmck004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_pmck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_pmck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.b_pmck005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_pmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_pmck006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.b_pmck007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.b_pmck007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body2.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.b_pmcj004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.b_pmcj004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.b_pmcj001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.b_pmcj001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.b_pmcj002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.b_pmcj002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.b_pmcj003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.b_pmcj003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.b_pmcj003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.b_pmcj005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.b_pmcj005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.b_pmcj006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.b_pmcj006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.b_pmcj007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.b_pmcj007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.b_pmcj007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.array_clear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.array_deleteElement" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.array_clear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.array_deleteElement" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.apmq814_gen_apmt814" cite_std="N" status="u" ver="" src="s" new="Y" order="11">
<![CDATA[
PRIVATE FUNCTION apmq814_gen_apmt814()
DEFINE li_idx       LIKE type_t.num5
DEFINE l_pmcl       RECORD LIKE pmcl_t.*
DEFINE l_pmcm       RECORD LIKE pmcm_t.*
DEFINE l_success    LIKE type_t.num5
DEFINE l_doctype    LIKE rtai_t.rtai004    
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_pmcmseq    LIKE pmcm_t.pmcmseq
DEFINE l_pmcm007    LIKE pmcm_t.pmcm007

   CALL s_transaction_begin()
   #單頭
   LET l_pmcl.pmclownid = g_user
   LET l_pmcl.pmclowndp = g_dept
   LET l_pmcl.pmclcrtid = g_user
   LET l_pmcl.pmclcrtdp = g_dept 
   LET l_pmcl.pmclcrtdt = cl_get_current()
   LET l_pmcl.pmclmodid = ""
   LET l_pmcl.pmclmoddt = ""
   LET l_pmcl.pmclcnfid = ""
   LET l_pmcl.pmclcnfdt = ""
   LET l_pmcl.pmclstus = "N"
   LET l_pmcl.pmcldocdt = g_today
   
   LET l_pmcl.pmcl001 = g_user
   SELECT ooag003 INTO l_pmcl.pmcl002 FROM ooag_t
    WHERE ooag001 = l_pmcl.pmcl001 AND ooagent = g_enterprise
    
   #預設單據的單別 
   LET l_success = ''
   LET l_doctype = ''
   CALL s_arti200_get_def_doc_type(g_site,"apmt814",'1')
        RETURNING l_success, l_doctype
   IF l_success THEN
      LET l_pmcl.pmcldocno = l_doctype
   ELSE
      CALL cl_err('','axm-00089',1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   IF NOT s_aooi200_chk_slip(g_site,'',l_pmcl.pmcldocno,"apmt814") THEN
      CALL cl_err('','axm-00089',1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   CALL s_aooi200_gen_docno(g_site,l_pmcl.pmcldocno,l_pmcl.pmcldocdt,"apmt814") RETURNING l_success,l_pmcl.pmcldocno
   IF NOT l_success THEN
      CALL cl_err('','axm-00089',1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF 
   
   INSERT INTO pmcl_t(pmclstus,pmclent,pmcldocno,pmcldocdt,pmclownid,
                      pmclowndp,pmclcrtid,pmclcrtdp,pmclcrtdt,pmclmodid,
                      pmclmoddt,pmclcnfid,pmclcnfdt,pmcl001,pmcl002)
               VALUES(l_pmcl.pmclstus,g_enterprise,l_pmcl.pmcldocno,l_pmcl.pmcldocdt,l_pmcl.pmclownid,
                      l_pmcl.pmclowndp,l_pmcl.pmclcrtid,l_pmcl.pmclcrtdp,l_pmcl.pmclcrtdt,l_pmcl.pmclmodid,
                      l_pmcl.pmclmoddt,l_pmcl.pmclcnfid,l_pmcl.pmclcnfdt,l_pmcl.pmcl001,l_pmcl.pmcl002)
                      
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmcl_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   LET l_pmcmseq = 0
   CALL cl_showmsg_init()
   FOR li_idx = 1 TO g_pmck_d.getLength()
      IF g_pmck_d[li_idx].sel = "Y" THEN
         SELECT COUNT(*)
           INTO l_cnt
           FROM pmcm_t,pmcl_t
          WHERE pmcment = pmclent
            AND pmcmdocno = pmcldocno
            AND pmcment = g_enterprise
            AND pmcm001 = g_pmck_d[li_idx].pmck003
            AND pmcm002 = g_pmck_d[li_idx].pmck001
            AND pmcm003 = g_pmck_d[li_idx].pmck002
            AND pmclstus = "N"
         IF l_cnt > 0 THEN
            CALL cl_errmsg(g_pmck_d[li_idx].pmck003,'apmt814','','apm-00522',1)
         ELSE
            INITIALIZE l_pmcm.* TO NULL
            #單身
            LET l_pmcm.pmcmdocno = l_pmcl.pmcldocno
            LET l_pmcmseq = l_pmcmseq + 1
            LET l_pmcm.pmcmseq = l_pmcmseq 
            LET l_pmcm.pmcm001 = g_pmck_d[li_idx].pmck003
            LET l_pmcm.pmcm002 = g_pmck_d[li_idx].pmck001
            LET l_pmcm.pmcm003 = g_pmck_d[li_idx].pmck002
            LET l_pmcm.pmcm004 = g_pmck_d[li_idx].pmck004
            LET l_pmcm.pmcm005 = g_pmck_d[li_idx].pmck004
            LET l_pmcm.pmcm006 = g_pmck_d[li_idx].pmck005
            LET l_pmcm.pmcm008 = g_pmck_d[li_idx].pmck006
            LET l_pmcm.pmcm009 = g_pmck_d[li_idx].pmck007
            LET l_pmcm007 = 0
            SELECT MAX(pmcm007)
              INTO l_pmcm007
              FROM pmcm_t
             WHERE pmcment = g_enterprise
               AND pmcm001 = g_pmck_d[li_idx].pmck003
               AND pmcm002 = g_pmck_d[li_idx].pmck001
               AND pmcm003 = g_pmck_d[li_idx].pmck002
            IF cl_null(l_pmcm007) THEN
               LET l_pmcm007 = 0
            END IF
            LET l_pmcm.pmcm007 = l_pmcm007 + 1
            
            INSERT INTO pmcm_t(pmcment,pmcmdocno,pmcmseq,pmcm001,pmcm002,pmcm003,
                               pmcm004,pmcm005,pmcm006,pmcm007,pmcm008,pmcm009)
                        VALUES(g_enterprise,l_pmcm.pmcmdocno,l_pmcm.pmcmseq,l_pmcm.pmcm001,l_pmcm.pmcm002,l_pmcm.pmcm003,
                               l_pmcm.pmcm004,l_pmcm.pmcm005,l_pmcm.pmcm006,l_pmcm.pmcm007,l_pmcm.pmcm008,l_pmcm.pmcm009)
            
            IF SQLCA.sqlcode THEN
               CALL cl_errmsg(g_pmck_d[li_idx].pmck003,'apmt814','',SQLCA.sqlcode,1)
            END IF
         END IF
      END IF
   END FOR
   CALL s_transaction_end('Y','1')
   CALL cl_err_showmsg()
END FUNCTION]]>
</point>
  <section id="apmq814.b_fill" ver="26" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apmq814_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
   
   LET g_sql = "SELECT  UNIQUE pmck003,'',pmck001,pmck002,'',pmck004,pmck005,pmck006,'',pmck007,'' FROM pmck_t", 

 
               " LEFT JOIN pmcj_t ON pmcjent = pmckent AND pmck001 = pmcj001 AND pmck002 = pmcj002 AND pmck003 = pmcj004",
 
 
               "",
               " WHERE pmckent= ? AND 1=1 AND ", ls_wc
    
   LET g_sql = g_sql, " ORDER BY pmck_t.pmck001,pmck_t.pmck002,pmck_t.pmck003"
  
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE apmq814_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apmq814_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_pmck_d.clear()
 
   #add-point:陣列清空
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_pmck_d[l_ac].pmck003,g_pmck_d[l_ac].pmck003_desc,g_pmck_d[l_ac].pmck001, 
       g_pmck_d[l_ac].pmck002,g_pmck_d[l_ac].pmck002_desc,g_pmck_d[l_ac].pmck004,g_pmck_d[l_ac].pmck005, 
       g_pmck_d[l_ac].pmck006,g_pmck_d[l_ac].pmck006_desc,g_pmck_d[l_ac].pmck007,g_pmck_d[l_ac].pmck007_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      LET g_pmck_d[l_ac].sel = "N"
      #LET g_pmck_d[l_ac].statepic = cl_get_actipic(g_pmck_d[l_ac].statepic)
 
      
 
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL apmq814_detail_show("'1'")      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   CALL g_pmck_d.deleteElement(g_pmck_d.getLength())   
   #add-point:陣列長度調整
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE apmq814_pb
   
   LET l_ac = 1
   CALL apmq814_fetch()
   
      CALL apmq814_filter_show('pmck003','b_pmck003')
   CALL apmq814_filter_show('pmck001','b_pmck001')
   CALL apmq814_filter_show('pmck002','b_pmck002')
   CALL apmq814_filter_show('pmck004','b_pmck004')
   CALL apmq814_filter_show('pmck005','b_pmck005')
   CALL apmq814_filter_show('pmck006','b_pmck006')
   CALL apmq814_filter_show('pmck007','b_pmck007')
   CALL apmq814_filter_show('pmcj004','b_pmcj004')
   CALL apmq814_filter_show('pmcj001','b_pmcj001')
   CALL apmq814_filter_show('pmcj002','b_pmcj002')
   CALL apmq814_filter_show('pmcj003','b_pmcj003')
   CALL apmq814_filter_show('pmcj005','b_pmcj005')
   CALL apmq814_filter_show('pmcj006','b_pmcj006')
   CALL apmq814_filter_show('pmcj007','b_pmcj007')
 
   
END FUNCTION
]]>
</section>
  <section id="apmq814.delete" ver="1" status="" src="s">
<![CDATA[#+ delete
PRIVATE FUNCTION apmq814_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
]]>
</section>
  <section id="apmq814.description" ver="149" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000165
#+ 
#+ Filename...: apmq814
#+ Description: 供應商績效評核結果查詢作業
#+ Creator....: 02748(2014/04/02)
#+ Modifier...: 02748(2014/04/22)
#+ Buildtype..: 應用 q02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apmq814.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION apmq814_detail_show(ps_page)
   DEFINE ps_page    STRING
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
    
   IF ps_page.getIndexOf("'2'",1) > 0 THEN
      #帶出公用欄位reference值page2
      
      #add-point:show段單身reference
      {<point name="detail_show.body2.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="apmq814.fetch" ver="15" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apmq814_fetch()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   CALL g_pmck2_d.clear()
 
 
   #add-point:陣列清空
   {<point name="fetch.array_clear" />}
   #end add-point
   
   LET li_ac = l_ac 
   
   LET g_sql = "SELECT  UNIQUE pmcj004,'',pmcj001,pmcj002,'',pmcj003,pmcj005,'',pmcj006,'',pmcj007 FROM pmcj_t", 
           
               "",
               " WHERE pmcjent=? AND pmcj001=? AND pmcj002=? AND pmcj004=?"
 
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY pmcj_t.pmcj003,pmcj_t.pmcj005" 
                      
   #add-point:單身填充前
   {<point name="fetch.before_fill2" />}
   #end add-point
   
   PREPARE apmq814_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR apmq814_pb2
   
   OPEN b_fill_curs2 USING g_enterprise,g_pmck_d[g_detail_idx].pmck001
                                  ,g_pmck_d[g_detail_idx].pmck002
 
                                  ,g_pmck_d[g_detail_idx].pmck003
 
 
   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_pmck2_d[l_ac].pmcj004,g_pmck2_d[l_ac].pmcj004_desc,g_pmck2_d[l_ac].pmcj001, 
       g_pmck2_d[l_ac].pmcj002,g_pmck2_d[l_ac].pmcj002_desc,g_pmck2_d[l_ac].pmcj003,g_pmck2_d[l_ac].pmcj005, 
       g_pmck2_d[l_ac].pmcj005_desc,g_pmck2_d[l_ac].pmcj006,g_pmck2_d[l_ac].pmcj006_desc,g_pmck2_d[l_ac].pmcj007 

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
 
      #add-point:b_fill段資料填充
      {<point name="fetch.fill2"/>}
      #end add-point
 
      CALL apmq814_detail_show("'2'")
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( "", 9035, 1 )
         EXIT FOREACH
      END IF
      
   END FOREACH
 
 
   
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point 
   
   CALL g_pmck2_d.deleteElement(g_pmck2_d.getLength())   
   #單身總筆數顯示
   LET g_detail_cnt2 = g_pmck2_d.getLength()
   DISPLAY g_detail_cnt2 TO FORMONLY.cnt
   IF g_detail_cnt2 > 0 THEN
      LET g_detail_idx2 = 1
      DISPLAY g_detail_idx2 TO FORMONLY.idx
   ELSE
      LET g_detail_idx2 = 1
      DISPLAY ' ' TO FORMONLY.idx
   END IF
 
 
   #add-point:陣列筆數調整
   {<point name="fetch.array_deleteElement" />}
   #end add-point
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="apmq814.filter" ver="18" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apmq814_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
   
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pmck003,pmck001,pmck002,pmck004,pmck005,pmck006,pmck007
                          FROM s_detail1[1].b_pmck003,s_detail1[1].b_pmck001,s_detail1[1].b_pmck002, 
                              s_detail1[1].b_pmck004,s_detail1[1].b_pmck005,s_detail1[1].b_pmck006,s_detail1[1].b_pmck007 

 
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_init()
                     DISPLAY apmq814_filter_parser('pmck003') TO s_detail1[1].b_pmck003
            DISPLAY apmq814_filter_parser('pmck001') TO s_detail1[1].b_pmck001
            DISPLAY apmq814_filter_parser('pmck002') TO s_detail1[1].b_pmck002
            DISPLAY apmq814_filter_parser('pmck004') TO s_detail1[1].b_pmck004
            DISPLAY apmq814_filter_parser('pmck005') TO s_detail1[1].b_pmck005
            DISPLAY apmq814_filter_parser('pmck006') TO s_detail1[1].b_pmck006
            DISPLAY apmq814_filter_parser('pmck007') TO s_detail1[1].b_pmck007
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL apmq814_filter_show('pmck003','b_pmck003')
   CALL apmq814_filter_show('pmck001','b_pmck001')
   CALL apmq814_filter_show('pmck002','b_pmck002')
   CALL apmq814_filter_show('pmck004','b_pmck004')
   CALL apmq814_filter_show('pmck005','b_pmck005')
   CALL apmq814_filter_show('pmck006','b_pmck006')
   CALL apmq814_filter_show('pmck007','b_pmck007')
   CALL apmq814_filter_show('pmcj004','b_pmcj004')
   CALL apmq814_filter_show('pmcj001','b_pmcj001')
   CALL apmq814_filter_show('pmcj002','b_pmcj002')
   CALL apmq814_filter_show('pmcj003','b_pmcj003')
   CALL apmq814_filter_show('pmcj005','b_pmcj005')
   CALL apmq814_filter_show('pmcj006','b_pmcj006')
   CALL apmq814_filter_show('pmcj007','b_pmcj007')
 
    
   CALL apmq814_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
]]>
</section>
  <section id="apmq814.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter欄位解析
PRIVATE FUNCTION apmq814_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="apmq814.filter_show" ver="1" status="" src="s">
<![CDATA[#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION apmq814_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmq814_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="apmq814.global" ver="22" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_pmck_d RECORD
       #statepic       LIKE type_t.chr1,
       sel            LIKE type_t.chr1,
       pmck003 LIKE pmck_t.pmck003, 
   pmck003_desc LIKE type_t.chr500, 
   pmck001 LIKE pmck_t.pmck001, 
   pmck002 LIKE pmck_t.pmck002, 
   pmck002_desc LIKE type_t.chr500, 
   pmck004 LIKE pmck_t.pmck004, 
   pmck005 LIKE pmck_t.pmck005, 
   pmck006 LIKE pmck_t.pmck006, 
   pmck006_desc LIKE type_t.chr500, 
   pmck007 LIKE pmck_t.pmck007, 
   pmck007_desc LIKE type_t.chr500 
       END RECORD
PRIVATE TYPE type_g_pmck2_d RECORD
       pmcj004 LIKE pmcj_t.pmcj004, 
   pmcj004_desc LIKE type_t.chr500, 
   pmcj001 LIKE pmcj_t.pmcj001, 
   pmcj002 LIKE pmcj_t.pmcj002, 
   pmcj002_desc LIKE type_t.chr500, 
   pmcj003 LIKE pmcj_t.pmcj003, 
   pmcj005 LIKE pmcj_t.pmcj005, 
   pmcj005_desc LIKE type_t.chr500, 
   pmcj006 LIKE pmcj_t.pmcj006, 
   pmcj006_desc LIKE type_t.chr500, 
   pmcj007 LIKE pmcj_t.pmcj007
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_pmck_d
DEFINE g_master_t                   type_g_pmck_d
DEFINE g_pmck_d          DYNAMIC ARRAY OF type_g_pmck_d
DEFINE g_pmck_d_t        type_g_pmck_d
DEFINE g_pmck2_d   DYNAMIC ARRAY OF type_g_pmck2_d
DEFINE g_pmck2_d_t type_g_pmck2_d
 
 
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE l_ac_d               LIKE type_t.num5              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num5
DEFINE g_detail_idx         LIKE type_t.num5
DEFINE g_detail_idx2        LIKE type_t.num5
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
 
 
#多table用wc
DEFINE g_wc_table           STRING
 
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter_table           STRING
 
DEFINE g_wc2_filter_table2   STRING
 
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apmq814.init" ver="1" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION apmq814_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   
   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apmq814.insert" ver="1" status="" src="s">
<![CDATA[#+ insert
PRIVATE FUNCTION apmq814_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="apmq814.main" ver="4" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE apmq814_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE ",
               " FROM ",
               " WHERE  "
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apmq814_master_referesh FROM g_sql
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmq814 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmq814_init()   
 
      #進入選單 Menu (="N")
      CALL apmq814_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apmq814
      
   END IF 
   
   CLOSE apmq814_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="apmq814.modify" ver="1" status="" src="s">
<![CDATA[#+ modify
PRIVATE FUNCTION apmq814_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
]]>
</section>
  <section id="apmq814.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="apmq814.query" ver="27" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apmq814_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_pmck_d.clear()
   LET g_wc_filter = " 1=1"
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON pmck003,pmck001,pmck002,pmck004,pmck005,pmck006,pmck007
           FROM s_detail1[1].b_pmck003,s_detail1[1].b_pmck001,s_detail1[1].b_pmck002,s_detail1[1].b_pmck004, 
               s_detail1[1].b_pmck005,s_detail1[1].b_pmck006,s_detail1[1].b_pmck007
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<b_pmck003>>----
         #Ctrlp:construct.c.page1.b_pmck003
         ON ACTION controlp INFIELD b_pmck003
            #add-point:ON ACTION controlp INFIELD b_pmck003
            {<point name="construct.c.page1.b_pmck003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmck003
            #add-point:BEFORE FIELD b_pmck003
            {<point name="construct.b.page1.b_pmck003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmck003
            
            #add-point:AFTER FIELD b_pmck003
            {<point name="construct.a.page1.b_pmck003" />}
            #END add-point
            
 
         #----<<b_pmck003_desc>>----
         #----<<b_pmck001>>----
         #Ctrlp:construct.c.page1.b_pmck001
         ON ACTION controlp INFIELD b_pmck001
            #add-point:ON ACTION controlp INFIELD b_pmck001
            {<point name="construct.c.page1.b_pmck001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmck001
            #add-point:BEFORE FIELD b_pmck001
            {<point name="construct.b.page1.b_pmck001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmck001
            
            #add-point:AFTER FIELD b_pmck001
            {<point name="construct.a.page1.b_pmck001" />}
            #END add-point
            
 
         #----<<b_pmck002>>----
         #Ctrlp:construct.c.page1.b_pmck002
         ON ACTION controlp INFIELD b_pmck002
            #add-point:ON ACTION controlp INFIELD b_pmck002
            {<point name="construct.c.page1.b_pmck002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmck002
            #add-point:BEFORE FIELD b_pmck002
            {<point name="construct.b.page1.b_pmck002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmck002
            
            #add-point:AFTER FIELD b_pmck002
            {<point name="construct.a.page1.b_pmck002" />}
            #END add-point
            
 
         #----<<b_pmck002_desc>>----
         #----<<b_pmck004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmck004
            #add-point:BEFORE FIELD b_pmck004
            {<point name="construct.b.page1.b_pmck004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmck004
            
            #add-point:AFTER FIELD b_pmck004
            {<point name="construct.a.page1.b_pmck004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_pmck004
         ON ACTION controlp INFIELD b_pmck004
            #add-point:ON ACTION controlp INFIELD b_pmck004
            {<point name="construct.c.page1.b_pmck004" />}
            #END add-point
 
         #----<<b_pmck005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmck005
            #add-point:BEFORE FIELD b_pmck005
            {<point name="construct.b.page1.b_pmck005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmck005
            
            #add-point:AFTER FIELD b_pmck005
            {<point name="construct.a.page1.b_pmck005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.b_pmck005
         ON ACTION controlp INFIELD b_pmck005
            #add-point:ON ACTION controlp INFIELD b_pmck005
            {<point name="construct.c.page1.b_pmck005" />}
            #END add-point
 
         #----<<b_pmck006>>----
         #Ctrlp:construct.c.page1.b_pmck006
         ON ACTION controlp INFIELD b_pmck006
            #add-point:ON ACTION controlp INFIELD b_pmck006
            {<point name="construct.c.page1.b_pmck006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmck006
            #add-point:BEFORE FIELD b_pmck006
            {<point name="construct.b.page1.b_pmck006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmck006
            
            #add-point:AFTER FIELD b_pmck006
            {<point name="construct.a.page1.b_pmck006" />}
            #END add-point
            
 
         #----<<b_pmck006_desc>>----
         #----<<b_pmck007>>----
         #Ctrlp:construct.c.page1.b_pmck007
         ON ACTION controlp INFIELD b_pmck007
            #add-point:ON ACTION controlp INFIELD b_pmck007
            {<point name="construct.c.page1.b_pmck007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmck007
            #add-point:BEFORE FIELD b_pmck007
            {<point name="construct.b.page1.b_pmck007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmck007
            
            #add-point:AFTER FIELD b_pmck007
            {<point name="construct.a.page1.b_pmck007" />}
            #END add-point
            
 
         #----<<b_pmck007_desc>>----
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON pmcj004,pmcj001,pmcj002,pmcj003,pmcj005,pmcj006,pmcj007
           FROM s_detail2[1].b_pmcj004,s_detail2[1].b_pmcj001,s_detail2[1].b_pmcj002,s_detail2[1].b_pmcj003, 
               s_detail2[1].b_pmcj005,s_detail2[1].b_pmcj006,s_detail2[1].b_pmcj007
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #----<<b_pmcj004>>----
         #Ctrlp:construct.c.page2.b_pmcj004
         ON ACTION controlp INFIELD b_pmcj004
            #add-point:ON ACTION controlp INFIELD b_pmcj004
            {<point name="construct.c.page2.b_pmcj004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmcj004
            #add-point:BEFORE FIELD b_pmcj004
            {<point name="construct.b.page2.b_pmcj004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmcj004
            
            #add-point:AFTER FIELD b_pmcj004
            {<point name="construct.a.page2.b_pmcj004" />}
            #END add-point
            
 
         #----<<b_pmcj004_desc>>----
         #----<<b_pmcj001>>----
         #Ctrlp:construct.c.page2.b_pmcj001
         ON ACTION controlp INFIELD b_pmcj001
            #add-point:ON ACTION controlp INFIELD b_pmcj001
            {<point name="construct.c.page2.b_pmcj001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmcj001
            #add-point:BEFORE FIELD b_pmcj001
            {<point name="construct.b.page2.b_pmcj001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmcj001
            
            #add-point:AFTER FIELD b_pmcj001
            {<point name="construct.a.page2.b_pmcj001" />}
            #END add-point
            
 
         #----<<b_pmcj002>>----
         #Ctrlp:construct.c.page2.b_pmcj002
         ON ACTION controlp INFIELD b_pmcj002
            #add-point:ON ACTION controlp INFIELD b_pmcj002
            {<point name="construct.c.page2.b_pmcj002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmcj002
            #add-point:BEFORE FIELD b_pmcj002
            {<point name="construct.b.page2.b_pmcj002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmcj002
            
            #add-point:AFTER FIELD b_pmcj002
            {<point name="construct.a.page2.b_pmcj002" />}
            #END add-point
            
 
         #----<<b_pmcj002_desc>>----
         #----<<b_pmcj003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmcj003
            #add-point:BEFORE FIELD b_pmcj003
            {<point name="construct.b.page2.b_pmcj003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmcj003
            
            #add-point:AFTER FIELD b_pmcj003
            {<point name="construct.a.page2.b_pmcj003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_pmcj003
         ON ACTION controlp INFIELD b_pmcj003
            #add-point:ON ACTION controlp INFIELD b_pmcj003
            {<point name="construct.c.page2.b_pmcj003" />}
            #END add-point
 
         #----<<b_pmcj005>>----
         #Ctrlp:construct.c.page2.b_pmcj005
         ON ACTION controlp INFIELD b_pmcj005
            #add-point:ON ACTION controlp INFIELD b_pmcj005
            {<point name="construct.c.page2.b_pmcj005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmcj005
            #add-point:BEFORE FIELD b_pmcj005
            {<point name="construct.b.page2.b_pmcj005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmcj005
            
            #add-point:AFTER FIELD b_pmcj005
            {<point name="construct.a.page2.b_pmcj005" />}
            #END add-point
            
 
         #----<<b_pmcj005_desc>>----
         #----<<b_pmcj006>>----
         #Ctrlp:construct.c.page2.b_pmcj006
         ON ACTION controlp INFIELD b_pmcj006
            #add-point:ON ACTION controlp INFIELD b_pmcj006
            {<point name="construct.c.page2.b_pmcj006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmcj006
            #add-point:BEFORE FIELD b_pmcj006
            {<point name="construct.b.page2.b_pmcj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmcj006
            
            #add-point:AFTER FIELD b_pmcj006
            {<point name="construct.a.page2.b_pmcj006" />}
            #END add-point
            
 
         #----<<b_pmcj006_desc>>----
         #----<<b_pmcj007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD b_pmcj007
            #add-point:BEFORE FIELD b_pmcj007
            {<point name="construct.b.page2.b_pmcj007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD b_pmcj007
            
            #add-point:AFTER FIELD b_pmcj007
            {<point name="construct.a.page2.b_pmcj007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.b_pmcj007
         ON ACTION controlp INFIELD b_pmcj007
            #add-point:ON ACTION controlp INFIELD b_pmcj007
            {<point name="construct.c.page2.b_pmcj007" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_master_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
   IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
      LET g_wc = g_wc, " AND ", g_wc2_table2
   END IF
 
 
        
   LET g_wc2 = " 1=1"
   IF NOT cl_null(g_wc2_table2) AND g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2, " AND ", g_wc2_table2
   END IF
 
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL apmq814_b_fill()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
]]>
</section>
  <section id="apmq814.reproduce" ver="1" status="" src="s">
<![CDATA[#+ reproduce
PRIVATE FUNCTION apmq814_reproduce()
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
]]>
</section>
  <section id="apmq814.ui_dialog" ver="23" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION apmq814_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL apmq814_query()
   
   WHILE TRUE
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_pmck_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_pmck_d.getLength() TO FORMONLY.h_count
               LET g_master_idx = l_ac
               CALL apmq814_fetch()
               #add-point:input段before row
               {<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
         
         DISPLAY ARRAY g_pmck2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               LET g_current_page = 2
            
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               DISPLAY g_detail_idx2 TO FORMONLY.idx
               DISPLAY g_pmck2_d.getLength() TO FORMONLY.cnt
               #add-point:input段before row
               {<point name="input.body2.before_row"/>}
               #end add-point 
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG      
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
            NEXT FIELD sel
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION gen_apmt814
            LET g_action_choice="gen_apmt814"
            IF cl_auth_chk_act("gen_apmt814") THEN
               
               #add-point:ON ACTION gen_apmt814
               {<point name="menu.gen_apmt814" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_apmt814
            LET g_action_choice="open_apmt814"
            IF cl_auth_chk_act("open_apmt814") THEN
               
               #add-point:ON ACTION open_apmt814
               {<point name="menu.open_apmt814" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apmq814_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo
               {<point name="menu.datainfo" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_pmck_d.getLength()
               LET g_pmck_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_pmck_d.getLength()
               LET g_pmck_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_pmck_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_pmck_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_pmck_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_pmck_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apmq814_filter()
            #add-point:ON ACTION filter
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL apmq814_b_fill()
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
</add_points>