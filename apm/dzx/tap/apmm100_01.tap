<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmm100_01" std_prog="apmm100_01" erpver="1.0" module="APM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.pmac002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmac002  #顯示到畫面上

            NEXT FIELD pmac002                     #返回原欄位

]]>
  </point>
  <point name="input.a.page1.pmac001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.pmac002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac].pmac002) RETURNING g_pmac_d[l_ac].pmac002_desc
            DISPLAY BY NAME g_pmac_d[l_ac].pmac002_desc
            
            IF NOT cl_null(g_pmac_d[l_ac].pmac001) AND NOT cl_null(g_pmac_d[l_ac].pmac002) AND NOT cl_null(g_pmac_d[l_ac].pmac003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_pmac_d[l_ac].pmac001 != g_pmac_d_t.pmac001 OR g_pmac_d[l_ac].pmac002 != g_pmac_d_t.pmac002 OR g_pmac_d[l_ac].pmac003 != g_pmac_d_t.pmac003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmac_t WHERE "||"pmacent = '" ||g_enterprise|| "' AND "||"pmac001 = '"||g_pmac_d[l_ac].pmac001 ||"' AND "|| "pmac002 = '"||g_pmac_d[l_ac].pmac002 ||"' AND "|| "pmac003 = '"||g_pmac_d[l_ac].pmac003 ||"'",'std-00004',0) THEN 
                     LET g_pmac_d[l_ac].pmac002 = g_pmac_d_t.pmac002
                     CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac].pmac002) RETURNING g_pmac_d[l_ac].pmac002_desc
                     DISPLAY BY NAME g_pmac_d[l_ac].pmac002_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT ap_chk_isExist(g_pmac_d[l_ac].pmac002,"SELECT COUNT(*) FROM pmaa_t WHERE pmaaent = '" ||g_enterprise||"' AND pmaa001 = ? ","apm-00028",0 ) THEN
                     LET g_pmac_d[l_ac].pmac002 = g_pmac_d_t.pmac002
                     CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac].pmac002) RETURNING g_pmac_d[l_ac].pmac002_desc
                     DISPLAY BY NAME g_pmac_d[l_ac].pmac002_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT ap_chk_isExist(g_pmac_d[l_ac].pmac002,"SELECT COUNT(*) FROM pmaa_t WHERE pmaaent = '" ||g_enterprise||"' AND pmaa001 = ? AND pmaastus != 'X' ","apm-00029",0 ) THEN
                     LET g_pmac_d[l_ac].pmac002 = g_pmac_d_t.pmac002
                     CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac].pmac002) RETURNING g_pmac_d[l_ac].pmac002_desc
                     DISPLAY BY NAME g_pmac_d[l_ac].pmac002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac].pmac002) RETURNING g_pmac_d[l_ac].pmac002_desc
            DISPLAY BY NAME g_pmac_d[l_ac].pmac002_desc
]]>
  </point>
  <point name="input.a.page1.pmac003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmac_d[l_ac].pmac001) AND NOT cl_null(g_pmac_d[l_ac].pmac002) AND NOT cl_null(g_pmac_d[l_ac].pmac003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_pmac_d[l_ac].pmac001 != g_pmac_d_t.pmac001 OR g_pmac_d[l_ac].pmac002 != g_pmac_d_t.pmac002 OR g_pmac_d[l_ac].pmac003 != g_pmac_d_t.pmac003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmac_t WHERE "||"pmacent = '" ||g_enterprise|| "' AND "||"pmac001 = '"||g_pmac_d[l_ac].pmac001 ||"' AND "|| "pmac002 = '"||g_pmac_d[l_ac].pmac002 ||"' AND "|| "pmac003 = '"||g_pmac_d[l_ac].pmac003 ||"'",'std-00004',0) THEN 
                     LET g_pmac_d[l_ac].pmac003 = g_pmac_d_t.pmac003
                     NEXT FIELD CURRENT
                  END IF
                  IF g_pmac_d[l_ac].pmac004 = 'Y' THEN
                     IF NOT apmm100_01_pmac004_chk() THEN
                        LET g_pmac_d[l_ac].pmac003 = g_pmac_d_t.pmac003
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.c.page1.pmac002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmac_d[l_ac].pmac002             #給予default值

            #給予arg

            CALL q_pmaa001_4()                                #呼叫開窗

            LET g_pmac_d[l_ac].pmac002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmac_d[l_ac].pmac002 TO pmac002              #顯示到畫面上
            CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac].pmac002) RETURNING g_pmac_d[l_ac].pmac002_desc
            DISPLAY BY NAME g_pmac_d[l_ac].pmac002_desc

            NEXT FIELD pmac002                          #返回原欄位

]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmac_d[l_ac].pmac002
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmac_d[l_ac].pmac002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmac_d[l_ac].pmac002_desc
]]>
  </point>
  <point name="function.apmm100_01_b_fill" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION apmm100_01_b_fill(p_pmaa001)
   DEFINE p_pmaa001   LIKE pmaa_t.pmaa001
   DEFINE l_sql       STRING

   DEFINE l_ac1       LIKE type_t.num5
   
   LET l_sql = "SELECT pmacstus,pmac001,pmac003,pmac004,pmac002,'' FROM pmac_t WHERE pmacent = '",g_enterprise,"' AND pmac001 = '",p_pmaa001,"' "
   PREPARE apmm100_01_pb FROM l_sql
   DECLARE b_fill_curs CURSOR FOR apmm100_01_pb

   CALL g_pmac_d.clear()
   LET l_ac1 = 1
   FOREACH b_fill_curs INTO g_pmac_d[l_ac1].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac1].pmac002) RETURNING g_pmac_d[l_ac1].pmac002_desc
          
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec THEN
         #CALL cl_err( "", 9035, 0 )
         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_pmac_d.deleteElement(g_pmac_d.getLength())
   LET g_rec_b = l_ac1 - 1
   DISPLAY g_rec_b TO FORMONLY.cnt
   CLOSE b_fill_curs
   FREE apmm100_01_pb
   
END FUNCTION]]>
  </point>
  <point name="function.apmm100_01_pmac002_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION apmm100_01_pmac002_ref(p_pmac002)
DEFINE p_pmac002      LIKE pmac_t.pmac002
DEFINE r_pmac002_desc LIKE pmaal_t.pmaal004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmac002
       CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmac002_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmac002_desc
       
END FUNCTION]]>
  </point>
  <point name="function.apmm100_01_pmac004_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION apmm100_01_pmac004_chk()
DEFINE l_n            LIKE type_t.num5
DEFINE r_success      LIKE type_t.num5

       LET l_n = 0
       LET r_success = TRUE       
       SELECT COUNT(*) INTO l_n FROM pmac_t WHERE pmacent = g_enterprise AND pmac001 = g_pmac_d[l_ac].pmac001 AND pmac003 = g_pmac_d[l_ac].pmac003 AND pmac004 = 'Y'
       #同一個交易類型已勾選一筆資料為主要的，不可再次勾選
       IF l_n > 0 THEN
          CALL cl_err(g_pmac_d[l_ac].pmac003,'apm-00156',1)
          LET r_success = FALSE
          RETURN r_success
       END IF
       RETURN r_success
      
END FUNCTION]]>
  </point>
  <point name="global.import" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.pmac004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmac_d[l_ac].pmac001) AND NOT cl_null(g_pmac_d[l_ac].pmac004) AND NOT cl_null(g_pmac_d[l_ac].pmac003) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_pmac_d[l_ac].pmac004 != g_pmac_d_t.pmac004 OR cl_null(g_pmac_d_t.pmac004))) THEN
                  IF g_pmac_d[l_ac].pmac004 = 'Y' THEN
                     IF NOT apmm100_01_pmac004_chk() THEN
                        LET g_pmac_d[l_ac].pmac004 = g_pmac_d_t.pmac004
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET INT_FLAG = FALSE]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL apmm100_01_b_fill(p_pmaa001)
            LET g_rec_b = g_pmac_d.getLength()
            
          BEFORE ROW 
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
   
            LET g_rec_b = g_pmac_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND NOT cl_null(g_pmac_d[l_ac].pmac001)
               AND NOT cl_null(g_pmac_d[l_ac].pmac002) 
               AND NOT cl_null(g_pmac_d[l_ac].pmac003) 
 
 
            THEN
               LET l_cmd='u'
			   LET g_pmac_d_t.* = g_pmac_d[l_ac].*  #BACKUP
			   
			   OPEN apmm100_01_bcl USING g_enterprise,p_pmaa001,g_pmac_d[l_ac].pmac002,g_pmac_d[l_ac].pmac003
               IF SQLCA.sqlcode THEN
                  CALL cl_err("apmm100_01_bcl",SQLCA.sqlcode,1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmm100_01_bcl INTO g_pmac_d[l_ac].pmacstus,g_pmac_d[l_ac].pmac001,g_pmac_d[l_ac].pmac003,g_pmac_d[l_ac].pmac004,g_pmac_d[l_ac].pmac002,g_pmac_d[l_ac].pmac002_desc
                   
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(p_pmaa001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
				  CALL apmm100_01_pmac002_ref(g_pmac_d[l_ac].pmac002) RETURNING g_pmac_d[l_ac].pmac002_desc
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
        
         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmac_d[l_ac].* TO NULL          
            
            LET g_pmac_d[l_ac].pmac001 = p_pmaa001
            LET g_pmac_d[l_ac].pmacstus = 'Y'
            LET g_pmac_d[l_ac].pmac003 = '1'
            LET g_pmac_d[l_ac].pmac004 = 'N'
            
            LET g_pmac_d_t.* = g_pmac_d[l_ac].*     #新輸入資料

            CALL cl_show_fld_cont()
            
            
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmac_t 
             WHERE pmacent = g_enterprise AND pmac001 = g_pmac_d[l_ac].pmac001
               AND pmac002 = g_pmac_d[l_ac].pmac002
               AND pmac003 = g_pmac_d[l_ac].pmac003
      
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INSERT INTO pmac_t (pmacent,pmac001,pmac002,pmac003,pmac004,pmacstus)
                  VALUES (g_enterprise,g_pmac_d[l_ac].pmac001,g_pmac_d[l_ac].pmac002,g_pmac_d[l_ac].pmac003,g_pmac_d[l_ac].pmac004,g_pmac_d[l_ac].pmacstus)
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_pmac_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("pmac_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_pmac_d[l_ac].pmac001)
               AND NOT cl_null(g_pmac_d[l_ac].pmac002) 
               AND NOT cl_null(g_pmac_d[l_ac].pmac003) THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF

               DELETE FROM pmac_t
                WHERE pmacent = g_enterprise AND pmac001 = g_pmac_d_t.pmac001
                  AND pmac002 = g_pmac_d_t.pmac002
                  AND pmac003 = g_pmac_d_t.pmac003

               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmac_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apmm100_01_bcl
               LET l_count = g_pmac_d.getLength()
            END IF 
            
        ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_pmac_d[l_ac].* = g_pmac_d_t.*
               CLOSE apmm100_01_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_pmac_d[l_ac].pmac002,-263,1)
               LET g_pmac_d[l_ac].* = g_pmac_d_t.*
            ELSE
               UPDATE pmac_t SET (pmac002,pmac003,pmac004,pmacstus) = (g_pmac_d[l_ac].pmac002,g_pmac_d[l_ac].pmac003,g_pmac_d[l_ac].pmac004,g_pmac_d[l_ac].pmacstus)
                WHERE pmacent = g_enterprise 
                  AND pmac001 = g_pmac_d_t.pmac001
                  AND pmac002 = g_pmac_d_t.pmac002
                  AND pmac003 = g_pmac_d_t.pmac003

               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmac_t",SQLCA.sqlcode,1)
                  LET g_pmac_d[l_ac].* = g_pmac_d_t.*
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
            
         AFTER ROW
            CLOSE apmm100_01_bcl
            CALL s_transaction_end('Y','0')]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_lock_sw       LIKE type_t.chr1
   DEFINE p_pmaa001       LIKE pmaa_t.pmaa001
   DEFINE l_forupd_sql    STRING
   DEFINE l_n             LIKE type_t.num5                #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5]]>
  </point>
  <point name="input.g.page1.pmac004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmac_d[l_ac].pmac001) AND NOT cl_null(g_pmac_d[l_ac].pmac004) AND NOT cl_null(g_pmac_d[l_ac].pmac003) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_pmac_d[l_ac].pmac004 != g_pmac_d_t.pmac004 OR cl_null(g_pmac_d_t.pmac004))) THEN
                  IF g_pmac_d[l_ac].pmac004 = 'Y' THEN
                     IF NOT apmm100_01_pmac004_chk() THEN
                        LET g_pmac_d[l_ac].pmac004 = g_pmac_d_t.pmac004
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.get_var" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   p_pmaa001]]>
  </point>
  <point name="input.post_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()]]>
  </point>
  <point name="input.pre_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   WHENEVER ERROR CONTINUE
   
   CALL cl_set_combo_scc('pmac003','2013')
   
   CALL apmm100_01_b_fill(p_pmaa001)
   
   LET l_ac = 1
   LET l_forupd_sql = "SELECT pmacstus,pmac001,pmac003,pmac004,pmac002,'' FROM pmac_t WHERE pmacent = ? AND pmac001 = ? AND pmac002 = ? AND pmac003 = ? FOR UPDATE"
   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)
   DECLARE apmm100_01_bcl CURSOR FROM l_forupd_sql]]>
  </point>
  <section id="apmm100_01.description" ver="8" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000100
#+ 
#+ Filename...: apmm100_01
#+ Description: ...
#+ Creator....: 02294(2013/09/05)
#+ Modifier...: 02294(2013/09/05)
#+ Buildtype..: 應用 c02b 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="apmm100_01.global" ver="2" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_pmac_d        RECORD
       pmacstus LIKE pmac_t.pmacstus, 
   pmac001 LIKE pmac_t.pmac001, 
   pmac003 LIKE pmac_t.pmac003, 
   pmac004 LIKE pmac_t.pmac004, 
   pmac002 LIKE pmac_t.pmac002, 
   pmac002_desc LIKE type_t.chr500
       END RECORD
 
 
DEFINE g_pmac_d          DYNAMIC ARRAY OF type_g_pmac_d
DEFINE g_pmac_d_t        type_g_pmac_d
 
 
DEFINE g_pmac001_t   LIKE pmac_t.pmac001    #Key值備份
DEFINE g_pmac002_t      LIKE pmac_t.pmac002    #Key值備份
DEFINE g_pmac003_t      LIKE pmac_t.pmac003    #Key值備份
 
 
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rec_b               LIKE type_t.num5  
DEFINE g_detail_idx          LIKE type_t.num5  
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
    
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point	
]]>
  </section>
  <section id="apmm100_01.input" ver="2" status="" src="s">
    <![CDATA[#+ 資料輸入
PUBLIC FUNCTION apmm100_01(--)
   #add-point:input段變數傳入
   {<point name="input.get_var"/>}
   #end add-point
   )
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE l_cmd           LIKE type_t.chr5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #畫面開啟 (identifier)
   OPEN WINDOW w_apmm100_01 WITH FORM cl_ap_formpath("apm","apmm100_01")
 
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   LET g_qryparam.state = "i"
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #輸入前處理
   #add-point:單身前置處理
   {<point name="input.pre_input"/>}
   #end add-point
  
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT ARRAY g_pmac_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         #自訂ACTION
         #add-point:單身前置處理
         {<point name="input.action"/>}
         #end add-point
         
         #自訂ACTION(detail_input)
         
         
         BEFORE INPUT
            #add-point:單身輸入前處理
            {<point name="input.before_input"/>}
            #end add-point
          
         #---------------------<  Detail: page1  >---------------------
         #----<<pmacstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmacstus
            #add-point:BEFORE FIELD pmacstus
            {<point name="input.b.page1.pmacstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmacstus
            
            #add-point:AFTER FIELD pmacstus
            {<point name="input.a.page1.pmacstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmacstus
            #add-point:ON CHANGE pmacstus
            {<point name="input.g.page1.pmacstus" />}
            #END add-point
 
         #----<<pmac001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmac001
            #add-point:BEFORE FIELD pmac001
            {<point name="input.b.page1.pmac001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmac001
            
            #add-point:AFTER FIELD pmac001
            {<point name="input.a.page1.pmac001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmac001
            #add-point:ON CHANGE pmac001
            {<point name="input.g.page1.pmac001" />}
            #END add-point
 
         #----<<pmac003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmac003
            #add-point:BEFORE FIELD pmac003
            {<point name="input.b.page1.pmac003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmac003
            
            #add-point:AFTER FIELD pmac003
            {<point name="input.a.page1.pmac003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmac003
            #add-point:ON CHANGE pmac003
            {<point name="input.g.page1.pmac003" />}
            #END add-point
 
         #----<<pmac004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmac004
            #add-point:BEFORE FIELD pmac004
            {<point name="input.b.page1.pmac004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmac004
            
            #add-point:AFTER FIELD pmac004
            {<point name="input.a.page1.pmac004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmac004
            #add-point:ON CHANGE pmac004
            {<point name="input.g.page1.pmac004" />}
            #END add-point
 
         #----<<pmac002>>----
         #此段落由子樣板a02產生
         AFTER FIELD pmac002
            
            #add-point:AFTER FIELD pmac002
            {<point name="input.a.page1.pmac002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmac002
            #add-point:BEFORE FIELD pmac002
            {<point name="input.b.page1.pmac002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmac002
            #add-point:ON CHANGE pmac002
            {<point name="input.g.page1.pmac002" />}
            #END add-point
 
         #----<<pmac002_desc>>----
 
         #---------------------<  Detail: page1  >---------------------
         #----<<pmacstus>>----
         #Ctrlp:input.c.page1.pmacstus
         ON ACTION controlp INFIELD pmacstus
            #add-point:ON ACTION controlp INFIELD pmacstus
            {<point name="input.c.page1.pmacstus" />}
            #END add-point
 
         #----<<pmac001>>----
         #Ctrlp:input.c.page1.pmac001
         ON ACTION controlp INFIELD pmac001
            #add-point:ON ACTION controlp INFIELD pmac001
            {<point name="input.c.page1.pmac001" />}
            #END add-point
 
         #----<<pmac003>>----
         #Ctrlp:input.c.page1.pmac003
         ON ACTION controlp INFIELD pmac003
            #add-point:ON ACTION controlp INFIELD pmac003
            {<point name="input.c.page1.pmac003" />}
            #END add-point
 
         #----<<pmac004>>----
         #Ctrlp:input.c.page1.pmac004
         ON ACTION controlp INFIELD pmac004
            #add-point:ON ACTION controlp INFIELD pmac004
            {<point name="input.c.page1.pmac004" />}
            #END add-point
 
         #----<<pmac002>>----
         #Ctrlp:input.c.page1.pmac002
         ON ACTION controlp INFIELD pmac002
            #add-point:ON ACTION controlp INFIELD pmac002
            {<point name="input.c.page1.pmac002" />}
            #END add-point
 
         #----<<pmac002_desc>>----
 
 
         AFTER INPUT
            #add-point:單身輸入後處理
            {<point name="input.after_input"/>}
            #end add-point
            
      END INPUT
      
 
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      #公用action
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:畫面關閉前
   {<point name="input.before_close"/>}
   #end add-point
   
   #畫面關閉
   CLOSE WINDOW w_apmm100_01 
   
   #add-point:input段after input 
   {<point name="input.post_input"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmm100_01.other_dialog" ver="1" status="" src="s">
    <![CDATA[{<point name="other.dialog"/>}
]]>
  </section>
  <section id="apmm100_01.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
</add_points>
