<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmt520_02" std_prog="apmt520_02" erpver="1.0" module="APM" ver="2" env="s" zone="t10dev" booking="N" type="S" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.apmt520_02_modify_pmdp021" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#修改單身沖銷順序
PRIVATE FUNCTION apmt520_02_modify_pmdp021()
DEFINE  l_n                   LIKE type_t.num5
DEFINE  l_lock_sw             LIKE type_t.chr1
DEFINE  l_choice              LIKE type_t.chr1

    SELECT UNIQUE pmdtdocno,pmdtseq,pmdt001,pmdt002,pmdt006,pmdt007,pmdt009,pmdt010,pmdt019,pmdt020
     INTO g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009,g_pmdt_m.pmdt010, 
          g_pmdt_m.pmdt019,g_pmdt_m.pmdt020 FROM pmdt_t
     WHERE pmdtent = g_enterprise AND pmdtdocno = g_pmdsdocno AND pmdtseq = g_pmdtseq
    IF SQLCA.sqlcode THEN
       CALL cl_err("pmdt_t",SQLCA.sqlcode,1)
       INITIALIZE g_pmdt_m.* TO NULL
       RETURN
    END IF
    
    DISPLAY BY NAME g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002,g_pmdt_m.pmdt006, 
       g_pmdt_m.imaal003,g_pmdt_m.imaal004,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009,g_pmdt_m.pmdt010,g_pmdt_m.pmdt019, 
       g_pmdt_m.pmdt019_desc,g_pmdt_m.pmdt020
       
    CALL s_desc_get_item_desc(g_pmdt_m.pmdt006) RETURNING g_pmdt_m.imaal003,g_pmdt_m.imaal004
    DISPLAY BY NAME g_pmdt_m.imaal003,g_pmdt_m.imaal004
   
    CALL s_desc_get_unit_desc(g_pmdt_m.pmdt019) RETURNING g_pmdt_m.pmdt019_desc
    DISPLAY BY NAME g_pmdt_m.pmdt019_desc
    
    CALL apmt520_02_b2_fill()
    
    
    LET g_forupd_sql = "SELECT pmdpdocno,pmdpseq,pmdpseq1,pmdp003,pmdp004,pmdp005,pmdp006,pmdp007,pmdp008,pmdp009,pmdp010,pmdp021,pmdp023,'',pmdp022 ",
                       "    FROM pmdp_t WHERE pmdpent=? AND pmdpdocno=? AND pmdpseq=? AND pmdpseq1=? FOR UPDATE"
  
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apmt520_02_bcl2 CURSOR FROM g_forupd_sql
   
    DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      INPUT ARRAY g_pmdp_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)

         BEFORE INPUT
            CALL apmt520_02_b2_fill()
            LET g_rec_b = g_pmdp_d.getLength()
            
         
         BEFORE ROW
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmt520_02_cl USING g_enterprise,g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq
 
            IF STATUS THEN
               CALL cl_err("OPEN apmt520_02_cl:", STATUS, 1)
               CLOSE apmt520_02_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmdp_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmdp_d[l_ac].pmdpdocno IS NOT NULL
               AND g_pmdp_d[l_ac].pmdpseq IS NOT NULL
            THEN
               LET g_pmdp_d_t.* = g_pmdp_d[l_ac].*  #BACKUP
               
               OPEN apmt520_02_bcl2 USING g_enterprise,g_pmdp_d[l_ac].pmdpdocno,g_pmdp_d[l_ac].pmdpseq,g_pmdp_d[l_ac].pmdpseq1
                                       
               IF SQLCA.sqlcode THEN
                  CALL cl_err("apmt520_02_bcl",SQLCA.sqlcode,1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmt520_02_bcl2 INTO g_pmdp_d[l_ac].pmdpdocno,g_pmdp_d[l_ac].pmdpseq,g_pmdp_d[l_ac].pmdpseq1,
                      g_pmdp_d[l_ac].pmdp003,g_pmdp_d[l_ac].pmdp004,g_pmdp_d[l_ac].pmdp005,g_pmdp_d[l_ac].pmdp006,
                      g_pmdp_d[l_ac].pmdp007,g_pmdp_d[l_ac].pmdp008,g_pmdp_d[l_ac].pmdp009,g_pmdp_d[l_ac].pmdp010,
                      g_pmdp_d[l_ac].pmdp021,g_pmdp_d[l_ac].pmdp023,g_pmdp_d[l_ac].pmdp023_desc,g_pmdp_d[l_ac].pmdp022 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_pmdp_d_t.pmdpdocno,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  CALL apmt520_02_b2_fill()
                  
                  CALL cl_show_fld_cont()
               END IF
            END IF

         AFTER FIELD pmdp021
            IF NOT cl_ap_chk_Range(g_pmdp_d[l_ac].pmdp021,"0","0","","","azz-00079",1) THEN
               LET g_pmdp_d[l_ac].pmdp021 = g_pmdp_d_t.pmdp021
               NEXT FIELD pmdp021
            END IF
            IF NOT cl_null(g_pmdp_d[l_ac].pmdp021) THEN
               IF g_pmdp_d[l_ac].pmdp021 != g_pmdp_d_t.pmdp021 THEN
                  LET l_n = 0
                  #判斷輸入的沖銷順序是否和其他項次的順序重複
                  SELECT COUNT(*) INTO l_n FROM pmdp_t 
                     WHERE pmdpent = g_enterprise AND pmdpdocno = g_pmdp_d[l_ac].pmdpdocno
                       AND pmdp021 = g_pmdp_d[l_ac].pmdp021
                  #1.當有修改沖銷順序時，開窗詢問要做沖銷順序互換，還是要做沖銷順序重排，
                  #1-1.若選擇沖銷順序互換代表是將兩個沖銷順序對換，例如某一需求項次的沖銷順序為5，
                  #    若將沖銷順序改成2時則此需求項次的沖銷順序變成2，把而原本充銷順序為2的就變成成5
                  #1-2.若是選擇沖銷順序重排代表是將修改後的沖銷順序依序往下重排，例如某一需求項次
                  #    的沖銷順序為5，若將沖銷順序改成2時則此需求項次的沖銷順序變成2而原本沖銷順序為2的
                  #    變成3，所以依序的原本為3的則變成4，原本為4的變成5
                  IF l_n > 0 THEN
                     LET l_choice = cl_ask_choice('apm-00416')
                     IF l_choice NOT MATCHES '[12]' THEN
                        CALL cl_err('','apm-00417',1)
                        LET g_pmdp_d[l_ac].pmdp021 = g_pmdp_d_t.pmdp021
                        NEXT FIELD pmdp021
                     END IF
                     IF l_choice = '1' THEN
                        
                     END IF                      
                  END IF
                  
               END IF               
            END IF 

         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_pmdp_d[l_ac].* = g_pmdp_d_t.*
               CLOSE apmt520_02_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_pmdp_d[l_ac].pmdpdocno,-263,1)
               LET g_pmdp_d[l_ac].* = g_pmdp_d_t.*
            ELSE
              UPDATE pmdp_t SET pmdp021 = g_pmdp_d[l_ac].pmdp021
                WHERE pmdpent = g_enterprise AND pmdpdocno = g_pmdp_d[l_ac].pmdpdocno 
                  AND pmdpseq = g_pmdp_d[l_ac].pmdpseq 
                  AND pmdpseq1 = g_pmdp_d[l_ac].pmdpseq1

            END IF
            
         AFTER ROW
            CLOSE apmt520_02_bcl2
            CALL s_transaction_end('Y','0')
 
      END INPUT

      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
END FUNCTION]]>
  </point>
  <point name="function.apmt520_02_b2_fill" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#單身填充
PRIVATE FUNCTION apmt520_02_b2_fill()
      CALL g_pmdp_d.clear()
      LET g_sql = "SELECT pmdpdocno,pmdpseq,pmdpseq1,pmdp003,pmdp004,pmdp005,pmdp006,pmdp007,pmdp008,pmdp009,pmdp010,pmdp021,pmdp023,'',pmdp022 ",
                "    FROM pmdp_t WHERE pmdpent=? AND pmdpdocno=? AND pmdpseq=? FOR UPDATE"
      LET g_sql = g_sql, " ORDER BY pmdpdocno,pmdpseq,pmdpseq1"
      
      PREPARE apmt520_02_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR apmt520_02_pb2
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002
                                       
      FOREACH b_fill_cs2 INTO g_pmdp_d[l_ac].pmdpdocno,g_pmdp_d[l_ac].pmdpseq,g_pmdp_d[l_ac].pmdpseq1,
                      g_pmdp_d[l_ac].pmdp003,g_pmdp_d[l_ac].pmdp004,g_pmdp_d[l_ac].pmdp005,g_pmdp_d[l_ac].pmdp006,
                      g_pmdp_d[l_ac].pmdp007,g_pmdp_d[l_ac].pmdp008,g_pmdp_d[l_ac].pmdp009,g_pmdp_d[l_ac].pmdp010,
                      g_pmdp_d[l_ac].pmdp021,g_pmdp_d[l_ac].pmdp023,g_pmdp_d[l_ac].pmdp023_desc,g_pmdp_d[l_ac].pmdp022 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
         
         CALL s_desc_get_unit_desc(g_pmdp_d[l_ac].pmdp023) RETURNING g_pmdp_d[l_ac].pmdp023_desc
         DISPLAY BY NAME g_pmdp_d[l_ac].pmdp023_desc
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
      CALL g_pmdp_d.deleteElement(g_pmdp_d.getLength())
      
      LET l_ac = g_cnt
      LET g_cnt = 0  
      
      FREE apmt520_02_pb2
 
END FUNCTION]]>
  </point>
  <point name="global.argv" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#單身 type 宣告
 TYPE type_g_pmdp_d        RECORD
       pmdpdocno LIKE type_t.chr80,
   pmdpseq LIKE type_t.chr80,
   pmdpseq1 LIKE type_t.chr80,
   pmdp003 LIKE type_t.chr80,
   pmdp004 LIKE type_t.chr80,
   pmdp005 LIKE type_t.chr80,
   pmdp006 LIKE type_t.chr80,
   pmdp007 LIKE type_t.chr80,
   pmdp008 LIKE type_t.chr80,
   pmdp009 LIKE type_t.chr80,
   pmdp010 LIKE type_t.chr80,
   pmdp021 LIKE type_t.chr80,
   pmdp023 LIKE type_t.chr80,
   pmdp023_desc LIKE type_t.chr80,
   pmdp022 LIKE type_t.chr80
       END RECORD

DEFINE g_pmdp_d          DYNAMIC ARRAY OF type_g_pmdp_d
DEFINE g_pmdp_d_t        type_g_pmdp_d

DEFINE g_pmdsdocno   LIKE pmds_t.pmdsdocno   #收貨單號
DEFINE g_pmdtseq     LIKE pmdt_t.pmdtseq     #收貨項次

DEFINE g_pmdtdocno_t LIKE pmds_t.pmdsdocno   #收貨單號
DEFINE g_pmdtseq_t  LIKE pmdt_t.pmdtseq     #收貨項次]]>
  </point>
  <point name="input.a.page1.pmdndocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdt_m.pmdtdocno IS NOT NULL AND g_pmdt_m.pmdtseq IS NOT NULL AND g_pmdn_d[g_detail_idx].pmdndocno IS NOT NULL AND g_pmdn_d[g_detail_idx].pmdnseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdt_m.pmdtdocno != g_pmdtdocno_t OR g_pmdt_m.pmdtseq != g_pmdtseq_t OR g_pmdn_d[g_detail_idx].pmdndocno != g_pmdn_d_t.pmdndocno OR g_pmdn_d[g_detail_idx].pmdnseq != g_pmdn_d_t.pmdnseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdn_t WHERE "||"pmdnent = '" ||g_enterprise|| "' AND "||"pmdndocno = '"||g_pmdt_m.pmdtdocno ||"' AND "|| "pmdnseq = '"||g_pmdt_m.pmdtseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.pmdnseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdt_m.pmdtdocno IS NOT NULL AND g_pmdt_m.pmdtseq IS NOT NULL AND g_pmdn_d[g_detail_idx].pmdndocno IS NOT NULL AND g_pmdn_d[g_detail_idx].pmdnseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdt_m.pmdtdocno != g_pmdtdocno_t OR g_pmdt_m.pmdtseq != g_pmdtseq_t OR g_pmdn_d[g_detail_idx].pmdndocno != g_pmdn_d_t.pmdndocno OR g_pmdn_d[g_detail_idx].pmdnseq != g_pmdn_d_t.pmdnseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdn_t WHERE "||"pmdnent = '" ||g_enterprise|| "' AND "||"pmdndocno = '"||g_pmdt_m.pmdtdocno ||"' AND "|| "pmdnseq = '"||g_pmdt_m.pmdtseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.pmdp021" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmdn_d[l_ac].pmdp021) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page1.pmdpdocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdt_m.pmdtdocno IS NOT NULL AND g_pmdt_m.pmdtseq IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpdocno IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpseq IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdt_m.pmdtdocno != g_pmdtdocno_t OR g_pmdt_m.pmdtseq != g_pmdtseq_t OR g_pmdp_d[g_detail_idx].pmdpdocno != g_pmdp_d_t.pmdpdocno OR g_pmdp_d[g_detail_idx].pmdpseq != g_pmdp_d_t.pmdpseq OR g_pmdp_d[g_detail_idx].pmdpseq1 != g_pmdp_d_t.pmdpseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdp_t WHERE "||"pmdpent = '" ||g_enterprise|| "' AND "||"pmdpdocno = '"||g_pmdt_m.pmdtdocno ||"' AND "|| "pmdpseq = '"||g_pmdt_m.pmdtseq ||"' AND "|| "pmdpseq1 = '"||g_pmdp_d[g_detail_idx].pmdpdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.pmdpseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdt_m.pmdtdocno IS NOT NULL AND g_pmdt_m.pmdtseq IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpdocno IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpseq IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdt_m.pmdtdocno != g_pmdtdocno_t OR g_pmdt_m.pmdtseq != g_pmdtseq_t OR g_pmdp_d[g_detail_idx].pmdpdocno != g_pmdp_d_t.pmdpdocno OR g_pmdp_d[g_detail_idx].pmdpseq != g_pmdp_d_t.pmdpseq OR g_pmdp_d[g_detail_idx].pmdpseq1 != g_pmdp_d_t.pmdpseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdp_t WHERE "||"pmdpent = '" ||g_enterprise|| "' AND "||"pmdpdocno = '"||g_pmdt_m.pmdtdocno ||"' AND "|| "pmdpseq = '"||g_pmdt_m.pmdtseq ||"' AND "|| "pmdpseq1 = '"||g_pmdp_d[g_detail_idx].pmdpdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.pmdpseq1" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdt_m.pmdtdocno IS NOT NULL AND g_pmdt_m.pmdtseq IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpdocno IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpseq IS NOT NULL AND g_pmdp_d[g_detail_idx].pmdpseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdt_m.pmdtdocno != g_pmdtdocno_t OR g_pmdt_m.pmdtseq != g_pmdtseq_t OR g_pmdp_d[g_detail_idx].pmdpdocno != g_pmdp_d_t.pmdpdocno OR g_pmdp_d[g_detail_idx].pmdpseq != g_pmdp_d_t.pmdpseq OR g_pmdp_d[g_detail_idx].pmdpseq1 != g_pmdp_d_t.pmdpseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdp_t WHERE "||"pmdpent = '" ||g_enterprise|| "' AND "||"pmdpdocno = '"||g_pmdt_m.pmdtdocno ||"' AND "|| "pmdpseq = '"||g_pmdt_m.pmdtseq ||"' AND "|| "pmdpseq1 = '"||g_pmdp_d[g_detail_idx].pmdpdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   
   LET g_forupd_sql = "SELECT pmdtdocno,pmdtseq,'','',pmdt006,'','',pmdt007,pmdt009,pmdt010,pmdt019,'',pmdt020 FROM pmdt_t WHERE pmdtent= ? AND pmdtdocno=? AND pmdtseq=? FOR UPDATE"
   ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE p_pmdsdocno   LIKE pmds_t.pmdsdocno   #收貨單號
   DEFINE p_pmdtseq     LIKE pmdt_t.pmdtseq     #收貨項次
   DEFINE l_pmdt005     LIKE pmdt_t.pmdt005
   DEFINE l_n           LIKE type_t.num5
   DEFINE l_pmds000     LIKE pmds_t.pmds009]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_action_choice = ''
   LET INT_FLAG = FALSE]]>
  </point>
  <point name="main.get_var" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   p_pmdsdocno,p_pmdtseq]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_pmdsdocno = p_pmdsdocno
   LET g_pmdtseq = p_pmdtseq
   
   #作業編號、製程序的欄位均需隱藏、這兩個欄位只有委外收貨作業才可以維護
   LET l_pmds000 = ''
   SELECT pmds000 INTO l_pmds000 FROM pmds_t WHERE pmdsent = g_enterprise AND pmdsdocno = g_pmdsdocno
   IF l_pmds000 MATCHES '[1234]' THEN
      CALL cl_set_comp_visible("lbl_pmdt009,lbl_pmdt010,pmdt009,pmdt010,pmdp009,pmdp010",FALSE)
   END IF
   
   #若傳入的收貨項次對應的子件特性不等於'1:一般'、'2:CKD'、'3:SKD'時不可以執行此子程式，
   #show訊息告知此項次不需維護需求分配並離開此子程式
   LET l_pmdt005 = ''
   SELECT pmdt005 INTO l_pmdt005 FROM pmdt_t WHERE pmdtent = g_enterprise AND pmdtdocno = g_pmdsdocno AND pmdtseq = g_pmdtseq
   IF l_pmdt005 NOT MATCHES '[123]' THEN
      CALL cl_err(g_pmdtseq,'apm-00410',1)
      RETURN
   END IF
   
   #若傳入的收貨項次對應的採購項次沒有關聯單據明細資料時，不可以執行此子程式show訊息告知此項次
   #不需維護需求分配並離開此子程式
   LET l_n  = 0 
   SELECT COUNT(pmdpseq) INTO l_n FROM pmdp_t,pmdt_t
      WHERE pmdpent = pmdtent AND pmdpdocno = pmdt001 AND pmdpseq = pmdt002
        AND pmdtent = g_enterprise AND pmdtdocno = g_pmdsdocno AND pmdtseq = g_pmdtseq
   IF l_n = 0 OR cl_null(l_n) THEN
      CALL cl_err(g_pmdtseq,'apm-00411',1)
      RETURN
   END IF
        ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdt_m.pmdt019
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdt_m.pmdt019_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdt_m.pmdt019_desc
]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #顯示單頭資料，進入單身進行修改
   CALL apmt520_02_modify_pmdp021()
   IF INT_FLAG THEN
      RETURN
   END IF
   ]]>
  </point>
  <section id="apmt520_02.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apmt520_02_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_pmdn_d.clear()    #g_pmdn_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF apmt520_02_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE '','','','','','','','','','','' FROM pmdn_t",   
                  " INNER JOIN pmdt_t ON pmdtdocno =  ",
                  " AND pmdtseq =  ",
 
 
                  #"",
                  
                  "",
                  " WHERE"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY pmdn_t.pmdndocno,pmdn_t.pmdnseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE apmt520_02_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR apmt520_02_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_pmdt_m.pmdtdocno
                                               ,g_pmdt_m.pmdtseq
 
 
                                               
      FOREACH b_fill_cs INTO g_pmdn_d[l_ac].pmdp003,g_pmdn_d[l_ac].pmdp004,g_pmdn_d[l_ac].pmdp005,g_pmdn_d[l_ac].pmdp006, 
          g_pmdn_d[l_ac].pmdp007,g_pmdn_d[l_ac].pmdp008,g_pmdn_d[l_ac].pmdp009,g_pmdn_d[l_ac].pmdp010, 
          g_pmdn_d[l_ac].pmdp021,g_pmdn_d[l_ac].pmdp023,g_pmdn_d[l_ac].pmdp022
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_pmdn_d.deleteElement(g_pmdn_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apmt520_02_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apmt520_02_b_fill2(pi_idx)
   {<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apmt520_02_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.browser_fill" ver="9" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充(一般單檔)
PRIVATE FUNCTION apmt520_02_browser_fill(p_wc,ps_page_action) 
   DEFINE p_wc              STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_pmdt_m.* TO NULL
   INITIALIZE g_wc TO NULL
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET l_searchcol = "pmdtdocno,pmdtseq"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
 
   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   
   #add-point:browser_fill段wc控制
   {<point name="browser_fill.wc"/>}
   #end add-point
 
   LET g_sql = " SELECT COUNT(*) FROM pmdt_t ",
               "  ",
               "  ",
               " WHERE pmdtent = '" ||g_enterprise|| "' AND ", 
               p_wc CLIPPED, cl_sql_add_filter("pmdt_t")
                
   #add-point:browser_fill段cnt_sql
   {<point name="browser_fill.cnt_sql"/>}
   #end add-point
                
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt
   FREE header_cnt_pre 
   
   #若超過最大顯示筆數
   
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   LET g_wc = p_wc
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
   
   LET g_sql = " SELECT '',pmdtdocno,pmdtseq",
               " FROM pmdt_t ",
               "  ",
               "  ",
               
               " WHERE pmdtent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("pmdt_t"),
               "  ORDER BY ",l_searchcol," ",g_order
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:browser_fill段before_pre
   {<point name="browser_fill.before_pre"/>}
   #end add-point                    
 
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_pmdtdocno,g_browser[g_cnt].b_pmdtseq 

      IF SQLCA.sqlcode THEN
         CALL cl_err("foreach:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
      
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err("Max_Row:"||g_max_rec USING "<<<<<","std-00002",0)
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser_cnt
   LET g_rec_b = g_cnt - 1
   LET g_current_cnt = g_browser_cnt
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmt520_02.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION apmt520_02_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY pmdtdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL apmt520_02_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.construct" ver="7" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apmt520_02_construct()
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_pmdt_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON pmdt001,pmdt002
      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         
      
         #一般欄位
                  #此段落由子樣板a01產生
         BEFORE FIELD pmdt001
            #add-point:BEFORE FIELD pmdt001
            {<point name="construct.b.pmdt001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdt001
            
            #add-point:AFTER FIELD pmdt001
            {<point name="construct.a.pmdt001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdt001
         ON ACTION controlp INFIELD pmdt001
            #add-point:ON ACTION controlp INFIELD pmdt001
            {<point name="construct.c.pmdt001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdt002
            #add-point:BEFORE FIELD pmdt002
            {<point name="construct.b.pmdt002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdt002
            
            #add-point:AFTER FIELD pmdt002
            {<point name="construct.a.pmdt002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdt002
         ON ACTION controlp INFIELD pmdt002
            #add-point:ON ACTION controlp INFIELD pmdt002
            {<point name="construct.c.pmdt002" />}
            #END add-point
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
  
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.default_search" ver="5" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apmt520_02_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pmdtdocno = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " pmdtseq = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.delete" ver="10" status="" src="s">
    <![CDATA[#+ 資料刪除 
PRIVATE FUNCTION apmt520_02_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   IF g_pmdt_m.pmdtdocno IS NULL
   OR g_pmdt_m.pmdtseq IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   CALL apmt520_02_show()
   
   CALL s_transaction_begin()
    
   LET g_pmdtdocno_t = g_pmdt_m.pmdtdocno
   LET g_pmdtseq_t = g_pmdt_m.pmdtseq
 
   
   
 
   OPEN apmt520_02_cl USING g_enterprise,
                           g_pmdt_m.pmdtdocno
                           ,g_pmdt_m.pmdtseq
 
   IF STATUS THEN
      CALL cl_err("OPEN apmt520_02_cl:", STATUS, 0)
      CLOSE apmt520_02_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt520_02_master_referesh USING g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq INTO g_pmdt_m.pmdtdocno, 
       g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009, 
       g_pmdt_m.pmdt010,g_pmdt_m.pmdt019,g_pmdt_m.pmdt020
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_pmdt_m.pmdtdocno,SQLCA.sqlcode,0)
      RETURN
   END IF
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL apmt520_02_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
      DELETE FROM pmdt_t 
       WHERE pmdtent = g_enterprise AND pmdtdocno = g_pmdt_m.pmdtdocno 
         AND pmdtseq = g_pmdt_m.pmdtseq 
 
 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdt_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
  
      
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      CLEAR FORM
      CALL apmt520_02_ui_browser_refresh()
      IF g_browser_cnt > 0 THEN
         CALL apmt520_02_browser_fill(g_wc,"")
         CALL apmt520_02_fetch("P")
      ELSE
         CALL apmt520_02_browser_fill(" 1=1 ","F")
      END IF
      
   END IF
 
   CLOSE apmt520_02_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_pmdt_m.pmdtdocno,"D")
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apmt520_02_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM pmdn_t
       WHERE pmdnent = g_enterprise AND
         pmdndocno = ps_keys_bak[1] AND pmdnseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.description" ver="33" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000037
#+ 
#+ Filename...: apmt520_02
#+ Description: ...
#+ Creator....: 02294(2014/03/14)
#+ Modifier...: 02294(2014/06/28)
#+ Buildtype..: 應用 i01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="apmt520_02.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION apmt520_02_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pmdn_t.*
 
 
   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apmt520_02_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apmt520_02_detail AS ",
                "SELECT * FROM pmdn_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmt520_02_detail SELECT * FROM pmdn_t 
                                         WHERE pmdnent = g_enterprise AND  = g_pmdtdocno_t
                                         AND  = g_pmdtseq_t
 
 
   
   #將key修正為調整後   
   UPDATE apmt520_02_detail 
      #更新key欄位
      SET  = g_pmdt_m.pmdtdocno
          ,  = g_pmdt_m.pmdtseq
 
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO pmdn_t SELECT * FROM apmt520_02_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmt520_02_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_pmdtdocno_t = g_pmdt_m.pmdtdocno
   LET g_pmdtseq_t = g_pmdt_m.pmdtseq
 
 
   
   DROP TABLE apmt520_02_detail
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION apmt520_02_detail_show()
   {<Local define>}
   {</Local define>}
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.fetch" ver="8" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apmt520_02_fetch(p_fl)
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   CASE p_fl
      WHEN "F" LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         LET g_current_idx = g_header_cnt        
      WHEN "/"
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx - 1
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   
   CALL apmt520_02_browser_fill(g_wc,p_fl)
   
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
 
   CALL cl_navigator_setting(g_browser_idx, g_browser_cnt )
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_pmdt_m.pmdtdocno = g_browser[g_current_idx].b_pmdtdocno
   LET g_pmdt_m.pmdtseq = g_browser[g_current_idx].b_pmdtseq
 
                       
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apmt520_02_master_referesh USING g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq INTO g_pmdt_m.pmdtdocno, 
       g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009, 
       g_pmdt_m.pmdt010,g_pmdt_m.pmdt019,g_pmdt_m.pmdt020
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmdt_t",SQLCA.sqlcode,0)
      INITIALIZE g_pmdt_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #重新顯示
   CALL apmt520_02_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.fill_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION apmt520_02_fill_chk(ps_idx)
   {<Local define>}
   DEFINE ps_idx        LIKE type_t.chr10
   {</Local define>}
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段define
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.filter" ver="1" status="" src="s">
    <![CDATA[PRIVATE FUNCTION apmt520_02_filter()
 
 
 
 
 
 
 
 
      
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
 
 
   
 
 
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apmt520_02_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
 
 
 
 
]]>
  </section>
  <section id="apmt520_02.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_pmdt_m RECORD
       pmdtdocno LIKE type_t.chr80, 
   pmdtseq LIKE type_t.chr80, 
   pmdt001 LIKE type_t.chr80, 
   pmdt002 LIKE type_t.chr80, 
   pmdt006 LIKE type_t.chr80, 
   imaal003 LIKE type_t.chr80, 
   imaal004 LIKE type_t.chr80, 
   pmdt007 LIKE type_t.chr80, 
   pmdt009 LIKE type_t.chr80, 
   pmdt010 LIKE type_t.chr80, 
   pmdt019 LIKE type_t.chr80, 
   pmdt019_desc LIKE type_t.chr80, 
   pmdt020 LIKE type_t.chr80
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_pmdt_m        type_g_pmdt_m
DEFINE g_pmdt_m_t      type_g_pmdt_m                #備份舊值
   
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD                   #資料瀏覽之欄位  
         b_statepic     LIKE type_t.chr50,
            b_pmdtdocno LIKE pmdt_t.pmdtdocno,
      b_pmdtseq LIKE pmdt_t.pmdtseq
         #,rank           LIKE type_t.num10
      END RECORD 
   
 
   
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
  
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING             #確定當下點擊的單身
 
#快速搜尋用
DEFINE g_searchcol           STRING             #查詢欄位代碼
DEFINE g_searchstr           STRING             #查詢欄位字串
DEFINE g_order               STRING             #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5   #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5   #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10  #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5   #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5   #Browser 總筆數(所有資料)
DEFINE g_tmp_page            LIKE type_t.num5   
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_chk                 BOOLEAN
DEFINE g_default             BOOLEAN            #是否有外部參數查詢
DEFINE g_log1                STRING             #log用
DEFINE g_log2                STRING             #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="apmt520_02.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION apmt520_02_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pmdn_d.getLength() THEN
         LET g_detail_idx = g_pmdn_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmdn_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmdn_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apmt520_02_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL apmt520_02_default_search()
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.input" ver="8" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION apmt520_02_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #切換畫面
   
   CALL cl_set_head_visible("","YES")  
   
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL apmt520_02_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apmt520_02_set_no_entry(p_cmd)
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DISPLAY BY NAME g_pmdt_m.pmdt001,g_pmdt_m.pmdt002
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_pmdt_m.pmdt001,g_pmdt_m.pmdt002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            
            #add-point:input開始前
            {<point name="input.before.input"/>}
            #end add-point
   
                  #此段落由子樣板a01產生
         BEFORE FIELD pmdt001
            #add-point:BEFORE FIELD pmdt001
            {<point name="input.b.pmdt001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdt001
            
            #add-point:AFTER FIELD pmdt001
            {<point name="input.a.pmdt001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdt001
            #add-point:ON CHANGE pmdt001
            {<point name="input.g.pmdt001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdt002
            #add-point:BEFORE FIELD pmdt002
            {<point name="input.b.pmdt002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdt002
            
            #add-point:AFTER FIELD pmdt002
            {<point name="input.a.pmdt002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdt002
            #add-point:ON CHANGE pmdt002
            {<point name="input.g.pmdt002" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.pmdt001
         ON ACTION controlp INFIELD pmdt001
            #add-point:ON ACTION controlp INFIELD pmdt001
            {<point name="input.c.pmdt001" />}
            #END add-point
 
         #Ctrlp:input.c.pmdt002
         ON ACTION controlp INFIELD pmdt002
            #add-point:ON ACTION controlp INFIELD pmdt002
            {<point name="input.c.pmdt002" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()   #錯誤訊息統整顯示
 
            IF p_cmd <> "u" THEN
               LET l_count = 1  
 
               SELECT COUNT(*) INTO l_count FROM pmdt_t
                WHERE pmdtent = g_enterprise AND pmdtdocno = g_pmdt_m.pmdtdocno
                  AND pmdtseq = g_pmdt_m.pmdtseq
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  INSERT INTO pmdt_t (pmdtent,pmdtdocno,pmdtseq,pmdt001,pmdt002,pmdt006,pmdt007,pmdt009, 
                      pmdt010,pmdt019,pmdt020)
                  VALUES (g_enterprise,g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002, 
                      g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009,g_pmdt_m.pmdt010,g_pmdt_m.pmdt019, 
                      g_pmdt_m.pmdt020) 
                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("pmdt_t",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL cl_err( "g_pmdt_m.pmdtdocno", "std-00006", 0 )
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE pmdt_t SET (pmdtdocno,pmdtseq,pmdt001,pmdt002,pmdt006,pmdt007,pmdt009,pmdt010, 
                   pmdt019,pmdt020) = (g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002, 
                   g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009,g_pmdt_m.pmdt010,g_pmdt_m.pmdt019, 
                   g_pmdt_m.pmdt020)
                WHERE pmdtent = g_enterprise AND pmdtdocno = g_pmdtdocno_t #
                  AND pmdtseq = g_pmdtseq_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("pmdt_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("pmdt_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                     #資料多語言用-增/改
                     
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     LET g_log1 = util.JSON.stringify(g_pmdt_m_t)
                     LET g_log2 = util.JSON.stringify(g_pmdt_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            END IF
           #controlp
      END INPUT
          
      #add-point:input段more input 
      {<point name="input.more_input"/>}
      #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.input.body" ver="1" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_pmdn_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = , 
                  DELETE ROW = ,
                  APPEND ROW = )
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmdn_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmt520_02_b_fill()
            LET g_rec_b = g_pmdn_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmt520_02_cl USING g_enterprise,g_pmdt_m.pmdtdocno
                                                                ,g_pmdt_m.pmdtseq
 
 
            IF STATUS THEN
               CALL cl_err("OPEN apmt520_02_cl:", STATUS, 1)
               CLOSE apmt520_02_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmdn_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmdn_d[l_ac].pmdndocno IS NOT NULL
               AND g_pmdn_d[l_ac].pmdnseq IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_pmdn_d_t.* = g_pmdn_d[l_ac].*  #BACKUP
               CALL apmt520_02_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL apmt520_02_set_no_entry_b(l_cmd)
               IF NOT apmt520_02_lock_b("pmdn_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmt520_02_bcl INTO g_pmdn_d[l_ac].pmdp003,g_pmdn_d[l_ac].pmdp004,g_pmdn_d[l_ac].pmdp005, 
                      g_pmdn_d[l_ac].pmdp006,g_pmdn_d[l_ac].pmdp007,g_pmdn_d[l_ac].pmdp008,g_pmdn_d[l_ac].pmdp009, 
                      g_pmdn_d[l_ac].pmdp010,g_pmdn_d[l_ac].pmdp021,g_pmdn_d[l_ac].pmdp023,g_pmdn_d[l_ac].pmdp022 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_pmdn_d_t.pmdndocno,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL apmt520_02_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmdn_d[l_ac].* TO NULL 
            
            LET g_pmdn_d_t.* = g_pmdn_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmt520_02_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmt520_02_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmdn_d[li_reproduce_target].* = g_pmdn_d[li_reproduce].*
 
               LET g_pmdn_d[li_reproduce_target].pmdndocno = NULL
               LET g_pmdn_d[li_reproduce_target].pmdnseq = NULL
 
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmdn_t 
             WHERE pmdnent = g_enterprise AND  = g_pmdt_m.pmdtdocno
               AND  = g_pmdt_m.pmdtseq
 
 
               AND pmdndocno = g_pmdn_d[l_ac].pmdndocno
               AND pmdnseq = g_pmdn_d[l_ac].pmdnseq
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmdt_m.pmdtdocno
               LET gs_keys[2] = g_pmdt_m.pmdtseq
               LET gs_keys[3] = g_pmdn_d[g_detail_idx].pmdndocno
               LET gs_keys[4] = g_pmdn_d[g_detail_idx].pmdnseq
               CALL apmt520_02_insert_b('pmdn_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_pmdn_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("pmdn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmt520_02_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_pmdn_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_pmdn_d.deleteElement(l_ac)
               NEXT FIELD pmdndocno
            END IF
         
            IF g_pmdn_d[l_ac].pmdndocno IS NOT NULL
               AND g_pmdn_d_t.pmdnseq IS NOT NULL
 
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM pmdn_t
                WHERE pmdnent = g_enterprise AND  = g_pmdt_m.pmdtdocno AND
                                           = g_pmdt_m.pmdtseq AND
 
 
                      pmdndocno = g_pmdn_d_t.pmdndocno
                  AND pmdnseq = g_pmdn_d_t.pmdnseq
 
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmdn_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apmt520_02_bcl
               LET l_count = g_pmdn_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmdt_m.pmdtdocno
               LET gs_keys[2] = g_pmdt_m.pmdtseq
               LET gs_keys[3] = g_pmdn_d[g_detail_idx].pmdndocno
               LET gs_keys[4] = g_pmdn_d[g_detail_idx].pmdnseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL apmt520_02_delete_b('pmdn_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
 
         #---------------------<  Detail: page1  >---------------------
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_pmdn_d[l_ac].* = g_pmdn_d_t.*
               CLOSE apmt520_02_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_pmdn_d[l_ac].pmdndocno,-263,1)
               LET g_pmdn_d[l_ac].* = g_pmdn_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE pmdn_t SET () = (g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq)
                WHERE pmdnent = g_enterprise AND  = g_pmdt_m.pmdtdocno 
                  AND  = g_pmdt_m.pmdtseq 
 
 
                  AND pmdndocno = g_pmdn_d_t.pmdndocno #項次   
                  AND pmdnseq = g_pmdn_d_t.pmdnseq  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("pmdn_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_pmdn_d[l_ac].* = g_pmdn_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("pmdn_t",SQLCA.sqlcode,1)
                     LET g_pmdn_d[l_ac].* = g_pmdn_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmdt_m.pmdtdocno
               LET gs_keys_bak[1] = g_pmdtdocno_t
               LET gs_keys[2] = g_pmdt_m.pmdtseq
               LET gs_keys_bak[2] = g_pmdtseq_t
               LET gs_keys[3] = g_pmdn_d[g_detail_idx].pmdndocno
               LET gs_keys_bak[3] = g_pmdn_d_t.pmdndocno
               LET gs_keys[4] = g_pmdn_d[g_detail_idx].pmdnseq
               LET gs_keys_bak[4] = g_pmdn_d_t.pmdnseq
               CALL apmt520_02_update_b('pmdn_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL apmt520_02_unlock_b("pmdn_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_pmdn_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmdn_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="apmt520_02.input.head" ver="1" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME  
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
 #欄位檢查
         #---------------------------<  Master  >---------------------------
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_pmdt_m.pmdtdocno             
                            ,g_pmdt_m.pmdtseq   
 
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO pmdt_t (pmdtent,pmdtdocno,pmdtseq,pmdt006,pmdt007,pmdt009,pmdt010,pmdt019, 
                   pmdt020)
               VALUES (g_enterprise,g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007, 
                   g_pmdt_m.pmdt009,g_pmdt_m.pmdt010,g_pmdt_m.pmdt019,g_pmdt_m.pmdt020) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_pmdt_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apmt520_02_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE pmdt_t SET (pmdtdocno,pmdtseq,pmdt006,pmdt007,pmdt009,pmdt010,pmdt019,pmdt020) = (g_pmdt_m.pmdtdocno, 
                   g_pmdt_m.pmdtseq,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009,g_pmdt_m.pmdt010, 
                   g_pmdt_m.pmdt019,g_pmdt_m.pmdt020)
                WHERE pmdtent = g_enterprise AND pmdtdocno = g_pmdtdocno_t
                  AND pmdtseq = g_pmdtseq_t
 
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmdt_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_pmdtdocno_t = g_pmdt_m.pmdtdocno
            LET g_pmdtseq_t = g_pmdt_m.pmdtseq
 
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="apmt520_02.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD pmdtdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pmdp003
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.insert" ver="6" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION apmt520_02_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM #清畫面欄位內容
   INITIALIZE g_pmdt_m.* LIKE pmdt_t.*             #DEFAULT 設定
   LET g_pmdtdocno_t = NULL
   LET g_pmdtseq_t = NULL
 
   CALL s_transaction_begin()
   
   WHILE TRUE
      
      #公用欄位給值
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      CALL apmt520_02_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pmdt_m.* = g_pmdt_m_t.*
         CALL apmt520_02_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   LET g_pmdtdocno_t = g_pmdt_m.pmdtdocno
   LET g_pmdtseq_t = g_pmdt_m.pmdtseq
 
   
   LET g_state = "Y"
 
   LET g_wc = g_wc,  
              " OR ( pmdtent = '" ||g_enterprise|| "' AND",
              " pmdtdocno = '", g_pmdt_m.pmdtdocno CLIPPED, "' "
              ," AND pmdtseq = '", g_pmdt_m.pmdtseq CLIPPED, "' "
 
              , ") "
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apmt520_02_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO pmdn_t
                  (pmdnent,
                   ,
                   pmdndocno,pmdnseq
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdn_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apmt520_02_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL apmt520_02_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pmdn_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apmt520_02_bcl USING g_enterprise,
                                       g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdn_d[g_detail_idx].pmdndocno, 
                                           g_pmdn_d[g_detail_idx].pmdnseq
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("apmt520_02_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.main" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a27產生
#+ 資料輸入
PUBLIC FUNCTION apmt520_02(--)
   #add-point:main段變數傳入
   {<point name="main.get_var"/>}
   #end add-point
   )
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" mark="Y"/>}
   #end add-point
   LET g_forupd_sql = "SELECT '','','','','','','','','','','','','' FROM pmdt_t WHERE pmdtent= ? AND  
       pmdtdocno=? AND pmdtseq=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt520_02_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE pmdtdocno,pmdtseq,pmdt001,pmdt002,pmdt006,pmdt007,pmdt009,pmdt010,pmdt019, 
       pmdt020",
               " FROM pmdt_t",
               " WHERE pmdtent = '" ||g_enterprise|| "' AND pmdtdocno = ? AND pmdtseq = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE apmt520_02_master_referesh FROM g_sql
   
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE tapmt520_02_bcl CURSOR FROM g_forupd_sql
 
 
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_apmt520_02 WITH FORM cl_ap_formpath("apm","apmt520_02")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL apmt520_02_init()   
 
   #進入選單 Menu (="N")
   CALL apmt520_02_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_apmt520_02
 
   CLOSE apmt520_02_cl
   
   
 
   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point
 
END FUNCTION
 
 
]]>
  </section>
  <section id="apmt520_02.modify" ver="9" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION apmt520_02_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   IF g_pmdt_m.pmdtdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
   
   EXECUTE apmt520_02_master_referesh USING g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq INTO g_pmdt_m.pmdtdocno, 
       g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009, 
       g_pmdt_m.pmdt010,g_pmdt_m.pmdt019,g_pmdt_m.pmdt020
 
   ERROR ""
  
   LET g_pmdtdocno_t = g_pmdt_m.pmdtdocno
   LET g_pmdtseq_t = g_pmdt_m.pmdtseq
 
   
   CALL s_transaction_begin()
   
   OPEN apmt520_02_cl USING g_enterprise,g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq
   IF STATUS THEN
      CALL cl_err("OPEN apmt520_02_cl:", STATUS, 1)
      CLOSE apmt520_02_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt520_02_master_referesh USING g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq INTO g_pmdt_m.pmdtdocno, 
       g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009, 
       g_pmdt_m.pmdt010,g_pmdt_m.pmdt019,g_pmdt_m.pmdt020
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmdt_t",SQLCA.sqlcode,0)
      CLOSE apmt520_02_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL apmt520_02_show()
   
   WHILE TRUE
      LET g_pmdt_m.pmdtdocno = g_pmdtdocno_t
      LET g_pmdt_m.pmdtseq = g_pmdtseq_t
 
      
      #寫入修改者/修改日期資訊
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      CALL apmt520_02_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pmdt_m.* = g_pmdt_m_t.*
         CALL apmt520_02_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
 
 
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_pmdt_m.pmdtdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE apmt520_02_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_pmdt_m.pmdtdocno,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
]]>
  </section>
  <section id="apmt520_02.other_dialog" ver="1" status="" src="s">
    <![CDATA[{<point name="other.dialog"/>}
]]>
  </section>
  <section id="apmt520_02.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="apmt520_02.query" ver="6" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apmt520_02_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
 
   CALL g_browser.clear() 
 
   IF g_worksheet_hidden THEN  #browser panel折疊
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   IF g_header_hidden THEN    #單頭折疊
      CALL gfrm_curr.setElementHidden("vb_master",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_pmdt_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL apmt520_02_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL apmt520_02_browser_fill(g_wc,"F")
      CALL apmt520_02_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   LET g_error_show = 1
   CALL apmt520_02_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL apmt520_02_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.reproduce" ver="7" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION apmt520_02_reproduce()
   DEFINE l_newno     LIKE pmdt_t.pmdtdocno 
   DEFINE l_oldno     LIKE pmdt_t.pmdtdocno 
   DEFINE l_newno02     LIKE pmdt_t.pmdtseq 
   DEFINE l_oldno02     LIKE pmdt_t.pmdtseq 
 
   DEFINE l_master    RECORD LIKE pmdt_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   
   IF g_pmdt_m.pmdtdocno IS NULL
      OR g_pmdt_m.pmdtseq IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_pmdtdocno_t = g_pmdt_m.pmdtdocno
   LET g_pmdtseq_t = g_pmdt_m.pmdtseq
 
   
   LET g_pmdt_m.pmdtdocno = ""
   LET g_pmdt_m.pmdtseq = ""
 
    
   CALL apmt520_02_set_entry("a")
   CALL apmt520_02_set_no_entry("a")
   
   #公用欄位給予預設值
   
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL apmt520_02_input("r")
 
   
   
   IF INT_FLAG  THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   CALL s_transaction_begin()
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmdt_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " pmdtdocno = '", g_pmdt_m.pmdtdocno CLIPPED, "' "
              ," AND pmdtseq = '", g_pmdt_m.pmdtseq CLIPPED, "' "
 
              , ") "
   
   LET g_pmdtdocno_t = g_pmdt_m.pmdtdocno
   LET g_pmdtseq_t = g_pmdt_m.pmdtseq
 
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.set_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION apmt520_02_set_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("pmdtdocno,pmdtseq",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apmt520_02_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.set_no_entry" ver="4" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION apmt520_02_set_no_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pmdtdocno,pmdtseq",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apmt520_02_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION apmt520_02_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pmdt_m.pmdtdocno
   LET g_pk_array[1].column = 'pmdtdocno'
   LET g_pk_array[2].values = g_pmdt_m.pmdtseq
   LET g_pk_array[2].column = 'pmdtseq'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmt520_02.show" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示 
PRIVATE FUNCTION apmt520_02_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_pmdt_m_t.* = g_pmdt_m.*      #保存單頭舊值
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   
    
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL apmt520_02_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdt_m.pmdt001,g_pmdt_m.pmdt002,g_pmdt_m.pmdt006, 
       g_pmdt_m.imaal003,g_pmdt_m.imaal004,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009,g_pmdt_m.pmdt010,g_pmdt_m.pmdt019, 
       g_pmdt_m.pmdt019_desc,g_pmdt_m.pmdt020
   
   #顯示狀態(stus)圖片
   
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="apmt520_02.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="apmt520_02.ui_browser_refresh" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apmt520_02_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pmdtdocno = g_pmdt_m.pmdtdocno
         AND g_browser[l_i].b_pmdtseq = g_pmdt_m.pmdtseq
 
         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser_cnt-1
   IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_idx = g_browser_cnt
   END IF
  
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION apmt520_02_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.ui_dialog" ver="9" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apmt520_02_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 1
   
   
   #action default動作
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL apmt520_02_browser_fill(g_wc,"")
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_pmdtdocno = g_pmdtdocno_t
               AND g_browser[li_idx].b_pmdtseq = g_pmdtseq_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
    
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL apmt520_02_fetch("")   
               END IF               
         
               
            ON ACTION first
               CALL apmt520_02_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL apmt520_02_fetch("N")
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL apmt520_02_fetch("/")
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               CALL apmt520_02_fetch("P")
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               CALL apmt520_02_fetch("L")  
               #CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               #CALL fgl_set_arr_curr(g_current_idx)
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL apmt520_02_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL apmt520_02_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL apmt520_02_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
            #
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL apmt520_02_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apmt520_02_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apmt520_02_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL apmt520_02_fetch("")      
                  
               
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
         
            BEFORE DIALOG
 
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL apmt520_02_fetch("")   
               END IF               
               
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
         
            
            
            ON ACTION first
               CALL apmt520_02_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL apmt520_02_fetch("N")
               LET g_current_row = g_current_idx
         
            ON ACTION jump
               CALL apmt520_02_fetch("/")
               LET g_current_row = g_current_idx
         
            ON ACTION previous
               CALL apmt520_02_fetch("P")
               LET g_current_row = g_current_idx
         
            ON ACTION last 
               CALL apmt520_02_fetch("L")  
               LET g_current_row = g_current_idx
         
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
         
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
               
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            #快速搜尋
               
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL apmt520_02_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL apmt520_02_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL apmt520_02_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
            
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL apmt520_02_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apmt520_02_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apmt520_02_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.ui_headershow" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION apmt520_02_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_pmdt_m.pmdtdocno = g_browser[g_current_idx].b_pmdtdocno   
   LET g_pmdt_m.pmdtseq = g_browser[g_current_idx].b_pmdtseq   
 
 
    SELECT UNIQUE pmdtdocno,pmdtseq,pmdt006,pmdt007,pmdt009,pmdt010,pmdt019,pmdt020
 INTO g_pmdt_m.pmdtdocno,g_pmdt_m.pmdtseq,g_pmdt_m.pmdt006,g_pmdt_m.pmdt007,g_pmdt_m.pmdt009,g_pmdt_m.pmdt010, 
     g_pmdt_m.pmdt019,g_pmdt_m.pmdt020
 FROM pmdt_t
 WHERE pmdtent = g_enterprise AND pmdtdocno = g_pmdt_m.pmdtdocno AND pmdtseq = g_pmdt_m.pmdtseq
   CALL apmt520_02_show()
   
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apmt520_02_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmt520_02_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apmt520_02.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apmt520_02_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmdn_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE pmdn_t 
         SET (,
              pmdndocno,pmdnseq
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE pmdnent = g_enterprise AND pmdndocno = ps_keys_bak[1] AND pmdnseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("pmdn_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("pmdn_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
