<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmm100_04" std_prog="apmm100_04" erpver="1.0" module="APM" ver="8" env="s" zone="t10prd" booking="Y" type="S" identity="s" section_flag="Y" designer_ver="1.0">
  <other>
    <code_template value="W" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.apmm100_04_query" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmm100_04_query()
DEFINE l_sql    STRING
DEFINE l_cnt    LIKE type_t.num5
  
   CALL g_detail_d.clear()
   IF g_wc IS NULL THEN 
      LET g_wc = " 1=1"
   END IF
   LET l_cnt = 1
   LET l_sql = "SELECT 'N',ooef001,ooefl003 ",
               "  FROM ooef_t ",
               "   LEFT OUTER JOIN ooefl_t ON ooefent = ooeflent AND ooef001 = ooefl001 AND ooefl002 = '",g_dlang,"'",
               " WHERE ooefent = '",g_enterprise,"' AND ooef201 = 'Y' AND ooefstus ='Y' AND ",g_wc,
               "   AND NOT EXISTS(SELECT * FROM pmab_t WHERE pmabent = ooefent AND pmabsite = ooef001 AND pmab001 = '",g_pmaa001,"')",
               " ORDER BY ooef001"
   PREPARE b_fill_pre FROM l_sql
   DECLARE b_fill_cus CURSOR FOR b_fill_pre
   FOREACH b_fill_cus INTO g_detail_d[l_cnt].sel,g_detail_d[l_cnt].ooef001,g_detail_d[l_cnt].ooef001_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF

      LET l_cnt = l_cnt + 1
      IF l_cnt > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
END FUNCTION]]>
  </point>
  <point name="function.apmm100_04_execute" order="2" ver="8" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmm100_04_execute()
DEFINE l_i   LIKE type_t.num5
DEFINE l_n               LIKE type_t.num5
DEFINE l_pmab            RECORD LIKE pmab_t.*
DEFINE l_pmaacnfdt       DATETIME YEAR TO SECOND
DEFINE l_success         LIKE type_t.num5

   #CALL s_transaction_begin()
   CALL cl_err_collect_init()
   #LET g_success = TRUE
   LET l_success = FALSE
   FOR l_i = 1 TO g_detail_d.getLength()
      IF g_detail_d[l_i].sel = 'Y' THEN 
         LET l_n = 0
         SELECT COUNT(*) INTO l_n FROM pmab_t 
          WHERE pmab001 = g_pmaa001 
            AND pmabent = g_enterprise 
            AND pmabsite = g_detail_d[l_i].ooef001
         IF l_n = 0 THEN
            SELECT * INTO l_pmab.* FROM pmab_t 
             WHERE pmab001 = g_pmaa001 
               AND pmabent = g_enterprise 
               AND pmabsite = 'ALL'
            LET l_pmab.pmabownid = g_user
            LET l_pmab.pmabowndp = g_dept
            LET l_pmab.pmabcrtid = g_user
            LET l_pmab.pmabcrtdp = g_dept 
            LET l_pmaacnfdt = cl_get_current()
            LET l_pmab.pmabmodid = NULL
            LET l_pmab.pmabmoddt = NULL
            LET l_pmab.pmabsite = g_detail_d[l_i].ooef001
            #--20150615--POLLY--ADD--(S)
            #不需預帶ALL的信用額度相關資料至SITE
             LET l_pmab.pmab002 = NULL
             #LET l_pmab.pmab003 = NULL
             LET l_pmab.pmab003 = g_pmaa001 #預設交易對象編號
             LET l_pmab.pmab004 = NULL
             LET l_pmab.pmab005 = NULL
             LET l_pmab.pmab006 = ''
             LET l_pmab.pmab007 = ''
             LET l_pmab.pmab008 = NULL
             LET l_pmab.pmab009 = ''
             LET l_pmab.pmab010 = ''
            #--20150615--POLLY--ADD--(E)            
            INSERT INTO pmab_t (pmabent,pmabsite,pmab001,pmab080,pmab081,
                                pmab082,pmab083,pmab084,pmab103,pmab104,
                                pmab085,pmab086,pmab087,pmab105,pmab088,
                                pmab089,pmab090,pmab091,pmab092,pmab093,
                                pmab094,pmab095,pmab096,pmab097,pmab098,
                                pmab099,pmab100,pmab101,pmab102,pmab030,
                                pmab031,pmab032,pmab033,pmab034,pmab053,
                                pmab054,pmab035,pmab036,pmab037,pmab055,
                                pmab038,pmab039,pmab040,pmab041,pmab042,
                                pmab043,pmab044,pmab045,pmab046,pmab047,
                                pmab048,pmab049,pmab050,pmab051,pmab052,
                                pmab071,pmab072,pmab073,pmab060,pmab061,
                                pmab066,pmab062,pmab067,pmab063,pmab068,
                                pmab064,pmab069,pmab065,pmab070,pmab002,
                                pmab003,pmab004,pmab005,pmab006,pmab007,
                                pmab008,pmab009,pmab010,pmab011,pmab012,
                                pmab013,pmab014,pmab015,pmab016,pmab017,
                                pmab018,pmab056,pmab057,pmab058,pmab106,
                                pmab107,pmab108,pmabownid,pmabowndp,pmabcrtid,
                                pmabcrtdt,pmabcrtdp,pmabmodid,pmabmoddt,
                                pmab059,pmab109   #150304---earl---add
                                )
              VALUES (g_enterprise,l_pmab.pmabsite,l_pmab.pmab001,l_pmab.pmab080,l_pmab.pmab081,
                      l_pmab.pmab082,l_pmab.pmab083,l_pmab.pmab084,l_pmab.pmab103,l_pmab.pmab104,
                      l_pmab.pmab085,l_pmab.pmab086,l_pmab.pmab087,l_pmab.pmab105,l_pmab.pmab088,
                      l_pmab.pmab089,l_pmab.pmab090,l_pmab.pmab091,l_pmab.pmab092,l_pmab.pmab093,
                      l_pmab.pmab094,l_pmab.pmab095,l_pmab.pmab096,l_pmab.pmab097,l_pmab.pmab098,
                      l_pmab.pmab099,l_pmab.pmab100,l_pmab.pmab101,l_pmab.pmab102,l_pmab.pmab030,
                      l_pmab.pmab031,l_pmab.pmab032,l_pmab.pmab033,l_pmab.pmab034,l_pmab.pmab053,
                      l_pmab.pmab054,l_pmab.pmab035,l_pmab.pmab036,l_pmab.pmab037,l_pmab.pmab055,
                      l_pmab.pmab038,l_pmab.pmab039,l_pmab.pmab040,l_pmab.pmab041,l_pmab.pmab042,
                      l_pmab.pmab043,l_pmab.pmab044,l_pmab.pmab045,l_pmab.pmab046,l_pmab.pmab047,
                      l_pmab.pmab048,l_pmab.pmab049,l_pmab.pmab050,l_pmab.pmab051,l_pmab.pmab052,
                      l_pmab.pmab071,l_pmab.pmab072,l_pmab.pmab073,l_pmab.pmab060,l_pmab.pmab061,
                      l_pmab.pmab066,l_pmab.pmab062,l_pmab.pmab067,l_pmab.pmab063,l_pmab.pmab068,
                      l_pmab.pmab064,l_pmab.pmab069,l_pmab.pmab065,l_pmab.pmab070,l_pmab.pmab002,
                      l_pmab.pmab003,l_pmab.pmab004,l_pmab.pmab005,l_pmab.pmab006,l_pmab.pmab007,
                      l_pmab.pmab008,l_pmab.pmab009,l_pmab.pmab010,l_pmab.pmab011,l_pmab.pmab012,
                      l_pmab.pmab013,l_pmab.pmab014,l_pmab.pmab015,l_pmab.pmab016,l_pmab.pmab017,
                      l_pmab.pmab018,l_pmab.pmab056,l_pmab.pmab057,l_pmab.pmab058,l_pmab.pmab106,
                      l_pmab.pmab107,l_pmab.pmab108,l_pmab.pmabownid,l_pmab.pmabowndp,l_pmab.pmabcrtid,
                      l_pmaacnfdt,l_pmab.pmabcrtdp,l_pmab.pmabmodid,l_pmab.pmabmoddt,
                      l_pmab.pmab059,l_pmab.pmab109   #150304---earl---add
                      ) 
            IF SQLCA.sqlcode THEN
               #LET g_success = FALSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = l_pmab.pmabsite
               LET g_errparam.popup = TRUE
               CALL cl_err()
               EXIT FOR
            END IF
            LET l_success = TRUE
         END IF            
      END IF
   END FOR
   IF NOT l_success THEN
      CALL cl_ask_confirm3("axc-00530","")
   ELSE   
      CALL cl_ask_confirm3("std-00012","")
   END IF
   CALL cl_err_collect_show()
   CALL apmm100_04_query()
 
END FUNCTION]]>
  </point>
  <point name="construct.action" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         AFTER FIELD ooef001
            LET g_ooef001 = GET_FLDBUF(ooef001)
         
         ON ACTION controlp INFIELD ooef001
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            ##2015/03/17 by stellar add ----- (S)
            LET g_qryparam.where = " ooef201 = 'Y' ",   
                                   "   AND NOT EXISTS(SELECT * FROM pmab_t WHERE pmabent = ooefent AND pmabsite = ooef001 AND pmab001 = '",g_pmaa001,"')"
            ##2015/03/17 by stellar add ----- (E)
            CALL q_ooef001()                     
            DISPLAY g_qryparam.return1 TO ooef001 
            NEXT FIELD ooef001  ]]>
  </point>
  <point name="construct.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF      
   END WHILE 
	LET g_action_choice="apmm100_04"   ]]>
  </point>
  <point name="construct.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            DISPLAY g_ooef001 TO ooef001]]>
  </point>
  <point name="construct.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE p_pmaa001       LIKE pmaa_t.pmaa001
   DEFINE li_idx          LIKE type_t.num5

   WHENEVER ERROR CALL cl_err_msg_log]]>
  </point>
  <point name="construct.get_var" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   p_pmaa001]]>
  </point>
  <point name="construct.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         INPUT ARRAY g_detail_d FROM s_detail1.* ATTRIBUTE(COUNT = g_detail_cnt,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
            BEFORE INPUT

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx

         END INPUT 
         ON ACTION selall
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
            END FOR

         #取消全部
         ON ACTION selnone
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
            END FOR         ]]>
  </point>
  <point name="construct.post_construct" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.pre_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_ooef001 = ''
   LET g_pmaa001 = p_pmaa001
   CALL g_detail_d.clear()
   WHILE TRUE]]>
  </point>
  <point name="free_style.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[TYPE type_g_detail_d RECORD
     sel LIKE type_t.chr1,
     ooef001 LIKE ooef_t.ooef001,
     ooef001_desc LIKE type_t.chr80
     END RECORD
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
DEFINE g_detail_idx LIKE type_t.num5
DEFINE l_ac         LIKE type_t.num5
DEFINE g_error_show         LIKE type_t.num5]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[TYPE type_g_detail_d RECORD
     sel LIKE type_t.chr1,
     ooef001 LIKE ooef_t.ooef001,
     ooef001_desc LIKE type_t.chr80
     END RECORD
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
DEFINE g_detail_idx LIKE type_t.num5
DEFINE l_ac         LIKE type_t.num5
DEFINE g_ooef001     STRING
DEFINE g_pmaa001     LIKE pmaa_t.pmaa001
DEFINE g_error_show         LIKE type_t.num5]]>
  </point>
  <section id="apmm100_04.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000042
#+ 
#+ Filename...: apmm100_04
#+ Description: 
#+ Creator....: 02295(2014/08/27)
#+ Modifier...: 02295(2014/09/01) -SD/PR-
#+ Buildtype..: 應用 c01c 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="apmm100_04.global" ver="3" status="" src="s" readonly="">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
DEFINE g_rec_b               LIKE type_t.num5   
DEFINE g_wc                  STRING
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point  
]]>
  </section>
  <section id="apmm100_04.input" ver="3" status="" src="m" readonly="">
    <![CDATA[#+ 資料輸入
PUBLIC FUNCTION apmm100_04(--)
   #add-point:construct段變數傳入
{<point name="construct.get_var"/>}
   #end add-point
   )
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   #add-point:construct段define
{<point name="construct.define"/>}
   #end add-point
 
   #畫面開啟 (identifier)
   OPEN WINDOW w_apmm100_04 WITH FORM cl_ap_formpath("apm","apmm100_04")
 
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   LET g_qryparam.state = "i"
   
   #輸入前處理
   #add-point:單頭前置處理
{<point name="construct.pre_construct"/>}
   #end add-point
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #輸入開始
         CONSTRUCT BY NAME g_wc ON ooef001 
         
               #add-point:自定義action
{<point name="construct.action"/>}
               #end add-point
   	  
            BEFORE CONSTRUCT
               #add-point:單頭輸入前處理
{<point name="construct.before_construct"/>}
               #end add-point
               
            AFTER CONSTRUCT
               #add-point:單頭輸入後處理
{<point name="construct.after_construct"/>}
               #end add-point
            
         
 
         
       
         END CONSTRUCT
 
         #add-point:自定義construct
{<point name="construct.more_construct"/>}
         #end add-point
         
         ON ACTION accept
            LET g_action_choice = 'accept'
            CALL apmm100_04_query()
           
#         ON ACTION cancel 
#            EXIT DIALOG
    
         ON ACTION close
            LET g_action_choice = 'exit'
            EXIT DIALOG
    
         ON ACTION exit
            LET g_action_choice = 'exit'
            EXIT DIALOG
            
         ON ACTION execute
            CALL apmm100_04_execute() 


      
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG 
            
      END DIALOG
 
      #add-point:畫面關閉前
{<point name="construct.before_close"/>}
   #end add-point 
   
   #畫面關閉
   CLOSE WINDOW w_apmm100_04 
   
   #add-point:construct段after construct 
{<point name="construct.post_construct"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmm100_04.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.dialog"/>}
]]>
  </section>
  <section id="apmm100_04.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
</add_points>
