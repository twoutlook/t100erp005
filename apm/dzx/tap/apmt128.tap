<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmt128" std_prog="apmt128" erpver="1.0" module="APM" ver="4" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.apmt128_pmbudocno_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbudocno_desc(p_flag)
DEFINE p_flag     LIKE type_t.chr1
DEFINE l_ooba002  LIKE ooba_t.ooba002
DEFINE l_success  LIKE type_t.num5
   IF p_flag = '2' THEN  
      Call s_aooi200_get_slip(g_pmbt_m.pmbtdocno) returning l_success,l_ooba002
   ELSE
      LET l_ooba002 = g_pmbt_m.pmbtdocno   
   END IF
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_ooba002
   CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbtdocno_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbtdocno_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbt900_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbt900_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbt900
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbt900_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbt900_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbt901_desc" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbt901_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbt901
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbt901_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbt901_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_get_docno" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_get_docno()
DEFINE l_success LIKE type_t.num5
   IF NOT cl_null(g_pmbt_m.pmbtdocno) AND NOT cl_null(g_pmbt_m.pmbtdocdt) THEN
      CALL s_aooi200_gen_docno(g_site,g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt,g_prog)
      RETURNING l_success,g_pmbt_m.pmbtdocno
      IF NOT l_success  THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apm-00003'
         LET g_errparam.extend = g_pmbt_m.pmbtdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      ELSE
         DISPLAY BY NAME g_pmbt_m.pmbtdocno
      END IF       
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbt001_desc" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbt001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbt001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='14' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbt001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbt001_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbt002_desc" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbt002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbt002
   CALL ap_ref_array2(g_ref_fields,"SELECT oohal003 FROM oohal_t WHERE oohalent='"||g_enterprise||"' AND oohal001=? AND oohal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbt002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbt002_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbt003_desc" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbt003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbt003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbt003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbt003_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbt005_desc" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbt005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbt005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbt005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbt005_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_set_visible" order="9" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_set_visible()
DEFINE l_pmas    RECORD LIKE pmas_t.*

   SELECT * INTO l_pmas.* FROM pmas_t WHERE pmasent = g_enterprise AND pmas001 = g_pmas001
   CALL cl_set_comp_visible("pmbu012,pmbu013,pmbu014,pmbu015,pmbu016,pmbu017,pmbu019,pmbu020,pmbu021",TRUE)
   CALL cl_set_comp_visible("pmbu013_desc,pmbu014_desc,pmbu015_desc,pmbu016_desc,pmbu017_desc,pmbu019_desc,oodb005,pmbu020_desc,pmbu021_desc",TRUE)
   IF l_pmas.pmas002 = 'N' THEN CALL cl_set_comp_visible("pmbu012,pmbu012_desc",FALSE) END IF
   IF l_pmas.pmas003 = 'N' THEN CALL cl_set_comp_visible("pmbu013,pmbu013_desc",FALSE) END IF
   IF l_pmas.pmas004 = 'N' THEN CALL cl_set_comp_visible("pmbu014,pmbu014_desc",FALSE) END IF
   IF l_pmas.pmas005 = 'N' THEN CALL cl_set_comp_visible("pmbu015,pmbu015_desc",FALSE) END IF
   IF l_pmas.pmas006 = 'N' THEN CALL cl_set_comp_visible("pmbu016,pmbu016_desc",FALSE) END IF
   IF l_pmas.pmas007 = 'N' THEN CALL cl_set_comp_visible("pmbu017,pmbu017_desc",FALSE) END IF
   IF l_pmas.pmas008 = 'N' THEN CALL cl_set_comp_visible("pmbu019,pmbu019_desc,oodb005",FALSE) END IF
   IF l_pmas.pmas009 = 'N' THEN CALL cl_set_comp_visible("pmbu020,pmbu020_desc",FALSE) END IF
   IF l_pmas.pmas010 = 'N' THEN CALL cl_set_comp_visible("pmbu021,pmbu021_desc",FALSE) END IF
   
   #2015-06-08-----dorislai---add
   
   LET g_column_chk = 4   #僅有一欄位顯示
   #apmi127沒勾選，不顯示
   IF l_pmas.pmas011 = 'N' THEN 
      CALL cl_set_comp_visible("pmbu011,pmbu011_desc,pmbu011_desc1",FALSE) 
   END IF
   IF l_pmas.pmas012 = 'N' THEN
      CALL cl_set_comp_visible("pmbu031,pmbu031_desc",FALSE) 
   END IF
   IF l_pmas.pmas013 = 'N' THEN
      CALL cl_set_comp_visible("pmbu032,pmbu032_desc",FALSE) 
   END IF
   #用來判斷跳訊息的
   IF l_pmas.pmas011 = 'N' AND l_pmas.pmas012 = 'Y' AND l_pmas.pmas013 = 'Y' THEN 
      LET g_column_chk = 1
   END IF
   IF l_pmas.pmas012 = 'N' AND l_pmas.pmas011 = 'Y' AND l_pmas.pmas013 = 'Y' THEN
      LET g_column_chk = 2   
   END IF
   IF l_pmas.pmas013 = 'N' AND l_pmas.pmas011 = 'Y' AND l_pmas.pmas012 = 'Y' THEN
      LET g_column_chk = 3  
   END IF
   IF (l_pmas.pmas013 = 'Y' AND l_pmas.pmas011 = 'Y' AND l_pmas.pmas012 = 'Y')
      OR (cl_null(l_pmas.pmas013) AND cl_null(l_pmas.pmas011) AND cl_null(l_pmas.pmas012))  THEN
      LET g_column_chk = 0  
   END IF
   CALL apmt128_set_no_required_b()
   #2015-06-08----dorislai----end

   
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu011_desc" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu011_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu011
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu011_desc = '', g_rtn_fields[1] , ''
   LET g_pmbu_d[l_ac].pmbu011_desc1 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu011_desc,g_pmbu_d[l_ac].pmbu011_desc1
END FUNCTION]]>
  </point>
  <point name="function.apmt128_imaa005_exists" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_imaa005_exists()
DEFINE l_imaa005  LIKE imaa_t.imaa005

   IF NOT cl_null(g_pmbu_d[l_ac].pmbu011) THEN
      SELECT imaa005 INTO l_imaa005
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_pmbu_d[l_ac].pmbu011  
      IF cl_null(l_imaa005) THEN 
         RETURN FALSE
      END IF  
   ELSE
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu011_ref" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu011_ref()
   SELECT imaf144 INTO g_pmbu_d[l_ac].pmbu018
     FROM imaf_t 
    WHERE imafent = g_enterprise
      AND imafsite = 'ALL'
      AND imaf001 = g_pmbu_d[l_ac].pmbu011
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu018
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu013_desc" order="13" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu013_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu013
   CALL ap_ref_array2(g_ref_fields,"SELECT oocel003 FROM oocel_t WHERE oocelent='"||g_enterprise||"' AND oocel001=? AND oocel002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu013_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu013_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_area_exists" order="14" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_area_exists()
DEFINE l_n  LIKE type_t.num5
DEFINE l_sql STRING
DEFINE l_case  LIKE type_t.chr1
   
   IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) AND  NOT cl_null(g_pmbu_d[l_ac].pmbu014) AND NOT cl_null(g_pmbu_d[l_ac].pmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM ooce_t,oocg_t,ooci_t WHERE ooci001 = oocg001  AND oocg002 = ooce001 ",
                  " AND ooceent = ",g_enterprise," AND oocgent = ",g_enterprise," AND oocient = ",g_enterprise,
                  " AND ooce001 = '",g_pmbu_d[l_ac].pmbu013,"'",
                  " AND oocg001 = '",g_pmbu_d[l_ac].pmbu014,"'",
                  " AND ooci002 = '",g_pmbu_d[l_ac].pmbu015,"'"
      LET l_case = '1'
   END IF
   
   IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) AND NOT cl_null(g_pmbu_d[l_ac].pmbu014) AND cl_null(g_pmbu_d[l_ac].pmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM ooce_t,oocg_t WHERE oocg002 = ooce001 ",
                  " AND ooceent = ",g_enterprise," AND oocgent = ",g_enterprise,
                  " AND ooce001 = '",g_pmbu_d[l_ac].pmbu013,"'",
                  " AND oocg001 = '",g_pmbu_d[l_ac].pmbu014,"'"
      LET l_case = '2'
   END IF
   
   IF cl_null(g_pmbu_d[l_ac].pmbu013) AND NOT cl_null(g_pmbu_d[l_ac].pmbu014) AND NOT cl_null(g_pmbu_d[l_ac].pmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM oocg_t,ooci_t WHERE ooci001 = oocg001   ",
                  " AND oocgent = ",g_enterprise," AND oocient = ",g_enterprise,
                  " AND oocg001 = '",g_pmbu_d[l_ac].pmbu014,"'",
                  " AND ooci002 = '",g_pmbu_d[l_ac].pmbu015,"'"
      LET l_case = '3'
   END IF
   
   IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) AND cl_null(g_pmbu_d[l_ac].pmbu014) AND NOT cl_null(g_pmbu_d[l_ac].pmbu015) THEN
      LET l_sql = "SELECT COUNT(*) FROM ooce_t,oocg_t,ooci_t WHERE ooci001 = oocg001  AND oocg002 = ooce001 ",
                  " AND ooceent = ",g_enterprise," AND oocgent = ",g_enterprise," AND oocient = ",g_enterprise,
                  " AND ooce001 = '",g_pmbu_d[l_ac].pmbu013,"'",
                  " AND ooci002 = '",g_pmbu_d[l_ac].pmbu015,"'"
      LET l_case = '4'
   END IF
   PREPARE sel_area_prep FROM l_sql
   LET l_n = 0
   EXECUTE sel_area_prep INTO l_n
   IF l_n = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00314'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CASE l_case
         WHEN '1'
            LET g_pmbu_d[l_ac].pmbu013 = g_pmbu_d_t.pmbu013
            LET g_pmbu_d[l_ac].pmbu014 = g_pmbu_d_t.pmbu014
            LET g_pmbu_d[l_ac].pmbu015 = g_pmbu_d_t.pmbu015
         WHEN '2'
            LET g_pmbu_d[l_ac].pmbu013 = g_pmbu_d_t.pmbu013
            LET g_pmbu_d[l_ac].pmbu014 = g_pmbu_d_t.pmbu014
         WHEN '3'
            LET g_pmbu_d[l_ac].pmbu014 = g_pmbu_d_t.pmbu014
            LET g_pmbu_d[l_ac].pmbu015 = g_pmbu_d_t.pmbu015
         WHEN '4'
            LET g_pmbu_d[l_ac].pmbu013 = g_pmbu_d_t.pmbu013
            LET g_pmbu_d[l_ac].pmbu015 = g_pmbu_d_t.pmbu015
      END CASE
      CALL apmt128_pmbu013_desc()
      CALL apmt128_pmbu014_desc()
      CALL apmt128_pmbu015_desc()
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu014_desc" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu014_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu014
   CALL ap_ref_array2(g_ref_fields,"SELECT oocgl003 FROM oocgl_t WHERE oocglent='"||g_enterprise||"' AND oocgl001=? AND oocgl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu014_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu014_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu015_desc" order="16" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu015_desc()
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu014
    LET g_ref_fields[2] = g_pmbu_d[l_ac].pmbu015
    CALL ap_ref_array2(g_ref_fields,"SELECT oocil004 FROM oocil_t WHERE oocilent='"||g_enterprise||"' AND oocil001=? AND oocil002=? AND oocil003='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_pmbu_d[l_ac].pmbu015_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_pmbu_d[l_ac].pmbu015_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu016_desc" order="17" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu016_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu016
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='253' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu016_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu016_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu017_desc" order="18" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu017_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu017
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='251' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu017_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu017_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu018_desc" order="19" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu018_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu018
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu018_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu018_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu019_desc" order="20" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu019_desc()
DEFINE l_ooef019   LIKE ooef_t.ooef019

   SELECT ooef019 INTO l_ooef019 FROM ooef_t 
    WHERE ooefent = g_enterprise AND ooef001 = 'ALL'
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu019
   CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001='"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu019_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu019_desc
   
   SELECT oodb005 INTO g_pmbu_d[l_ac].oodb005 FROM oodb_t 
    WHERE oodbent = g_enterprise AND oodb001 = l_ooef019 
      AND oodb002 = g_pmbu_d[l_ac].pmbu019
   DISPLAY BY NAME g_pmbu_d[l_ac].oodb005   
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu020_desc" order="21" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu020_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu020
   CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu020_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu020_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu021_desc" order="22" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmbu021_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu021
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu021_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu021_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_default_pmbt006" order="23" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_default_pmbt006()
DEFINE l_gzzz004 LIKE gzzz_t.gzzz004
DEFINE r_pmbt006 LIKE pmbt_t.pmbt006

   IF g_prog = 'apmt128' OR cl_null(g_argv[2]) THEN
      LET r_pmbt006 = 'apmi128'
   ELSE
      #因為apmi128的額外參數有很多個,畫面設定編號是第7個,所以l_gzzz004值前面要補上六組""
      #但若g_argv[2]是空值的話,則條件要改為gzzz004 is null
      LET l_gzzz004 = '"" "" "" "" "" "" "',g_argv[2],'"'
      SELECT gzzz001 INTO r_pmbt006 FROM gzzz_t 
       WHERE gzzz002 = 'apmi128' AND gzzz004 = l_gzzz004 
   END IF
   RETURN r_pmbt006
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmau_exists" order="24" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_pmau_exists(p_pmbu)
   DEFINE l_n      LIKE type_t.num5
   DEFINE p_pmbu   RECORD LIKE pmbu_t.*
   LET l_n = 0 
   SELECT COUNT(*) INTO l_n FROM pmbt_t,pmbu_t 
    WHERE pmbtent = g_enterprise
      AND pmbt001 = g_pmbt_m.pmbt001 AND pmbt002 = g_pmbt_m.pmbt002
      AND pmbt003 = g_pmbt_m.pmbt003 AND pmbt005 = g_pmbt_m.pmbt005
      AND pmbt006 = g_pmbt_m.pmbt006
      AND pmbu011 = COALESCE(g_pmbu_d[l_ac].pmbu011,' ') AND pmbu012 = COALESCE(g_pmbu_d[l_ac].pmbu012,' ')
      AND pmbu031 = COALESCE(g_pmbu_d[l_ac].pmbu031,' ') AND pmbu032 = COALESCE(g_pmbu_d[l_ac].pmbu032,' ')
      AND pmbu013 = g_pmbu_d[l_ac].pmbu013 AND pmbu014 = g_pmbu_d[l_ac].pmbu014
      AND pmbu015 = g_pmbu_d[l_ac].pmbu015 AND pmbu016 = g_pmbu_d[l_ac].pmbu016 
      AND pmbu017 = g_pmbu_d[l_ac].pmbu017 AND pmbu018 = g_pmbu_d[l_ac].pmbu018 
      AND pmbu019 = g_pmbu_d[l_ac].pmbu019 AND pmbu020 = g_pmbu_d[l_ac].pmbu020 
      AND pmbu021 = g_pmbu_d[l_ac].pmbu021
      AND pmbuent = pmbtent AND pmbudocno = pmbtdocno
      AND pmbtstus = 'N'
#   SELECT COUNT(*) INTO l_n FROM pmbt_t,pmbu_t 
#    WHERE pmbtent = g_enterprise
#      AND pmbt001 = g_pmbt_m.pmbt001 AND pmbt002 = g_pmbt_m.pmbt002
#      AND pmbt003 = g_pmbt_m.pmbt003 AND pmbt005 = g_pmbt_m.pmbt005
#      AND pmbt006 = g_pmbt_m.pmbt006
#      AND ((pmbu011 = p_pmbu.pmbu011 AND pmbu012 = p_pmbu.pmbu012)
#       OR  pmbu011 = p_pmbu.pmbu031 OR pmbu012 = p_pmbu.pmbu032)
#      AND pmbu013 = p_pmbu.pmbu013 AND pmbu014 = p_pmbu.pmbu014
#      AND pmbu015 = p_pmbu.pmbu015 AND pmbu016 = p_pmbu.pmbu016 
#      AND pmbu017 = p_pmbu.pmbu017 AND pmbu018 = p_pmbu.pmbu018 
#      AND pmbu019 = p_pmbu.pmbu019 #AND pmbu020 = p_pmbu.pmbu020 
#      AND pmbu021 = p_pmbu.pmbu021
#      AND pmbuent = pmbtent AND pmbudocno = pmbtdocno
#      AND pmbtstus = 'N'
   
   IF l_n > 1 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00342'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.apmt128_default_pmbu022" order="25" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_default_pmbu022()
   SELECT pmau022 INTO g_pmbu_d[l_ac].pmbu022 FROM pmau_t 
    WHERE pmauent = g_enterprise
      AND pmau001 = g_pmbt_m.pmbt001 AND pmau002 = g_pmbt_m.pmbt002
      AND pmau003 = g_pmbt_m.pmbt003 AND pmau005 = g_pmbt_m.pmbt005 
      AND pmau006 = g_pmbt_m.pmbt006
      AND ((pmau011 = g_pmbu_d[l_ac].pmbu011 AND pmau012 = g_pmbu_d[l_ac].pmbu012)
       OR pmau031 = g_pmbu_d[l_ac].pmbu031 OR pmau032 = g_pmbu_d[l_ac].pmbu032)
      AND pmau013 = g_pmbu_d[l_ac].pmbu013 AND pmau014 = g_pmbu_d[l_ac].pmbu014
      AND pmau015 = g_pmbu_d[l_ac].pmbu015 AND pmau016 = g_pmbu_d[l_ac].pmbu016 
      AND pmau017 = g_pmbu_d[l_ac].pmbu017 AND pmau018 = g_pmbu_d[l_ac].pmbu018 
      AND pmau019 = g_pmbu_d[l_ac].pmbu019 AND pmau020 = g_pmbu_d[l_ac].pmbu020 
      AND pmau021 = g_pmbu_d[l_ac].pmbu021
END FUNCTION]]>
  </point>
  <point name="function.apmt128_set_pmbu010" order="26" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_set_pmbu010(p_pmbu)
   DEFINE l_n     LIKE type_t.num5
   DEFINE p_pmbu  type_g_pmbu_d
   DEFINE l_sql   STRING
   LET l_n = 0 
   LET l_sql = " SELECT COUNT(*) FROM pmau_t",
               " WHERE pmauent = '",g_enterprise,"'",
               " AND pmau001 = '",g_pmbt_m.pmbt001,"'  AND pmau002 = '",g_pmbt_m.pmbt002,"'",
               " AND pmau003 = '",g_pmbt_m.pmbt003,"'  AND pmau005 = '",g_pmbt_m.pmbt005,"'",
               " AND pmau006 = '",g_pmbt_m.pmbt006,"'",
               " AND pmau013 = '",p_pmbu.pmbu013,"' AND pmau014 = '",p_pmbu.pmbu014,"'",
               " AND pmau015 = '",p_pmbu.pmbu015,"' AND pmau016 = '",p_pmbu.pmbu016,"'",
               " AND pmau017 = '",p_pmbu.pmbu017,"' AND pmau018 = '",p_pmbu.pmbu018,"'",
               " AND pmau019 = '",p_pmbu.pmbu019,"' AND pmau020 = '",p_pmbu.pmbu020,"'",
               " AND pmau021 = '",p_pmbu.pmbu021,"'"
    IF NOT cl_null(p_pmbu.pmbu011) THEN
       LET l_sql = l_sql,"AND pmau011 = '",p_pmbu.pmbu011,"'  AND pmau012 = '",p_pmbu.pmbu012,"'"
    END IF
    IF NOT cl_null(p_pmbu.pmbu031) THEN
       LET l_sql = l_sql,"AND pmau031 = '",p_pmbu.pmbu031,"'"
    END IF
    IF NOT cl_null(p_pmbu.pmbu032) THEN
       LET l_sql = l_sql,"AND pmau032 = '",p_pmbu.pmbu032,"'"
    END IF
    PREPARE axmt129_pmbu010_rep FROM l_sql
    EXECUTE axmt129_pmbu010_rep INTO l_n 
    FREE    axmt129_pmbu010_rep  #已使用完畢，釋放
#   SELECT COUNT(*) INTO l_n FROM pmau_t 
#    WHERE pmauent = g_enterprise
#      AND pmau001 = g_pmbt_m.pmbt001 AND pmau002 = g_pmbt_m.pmbt002
#      AND pmau003 = g_pmbt_m.pmbt003 AND pmau005 = g_pmbt_m.pmbt005 
#      AND pmau006 = g_pmbt_m.pmbt006
#      AND pmau011 = p_pmbu.pmbu011 AND pmau012 = p_pmbu.pmbu012
#      AND pmau031 = p_pmbu.pmbu031 AND pmau032 = p_pmbu.pmbu032
#      AND pmau013 = p_pmbu.pmbu013 AND pmau014 = p_pmbu.pmbu014
#      AND pmau015 = p_pmbu.pmbu015 AND pmau016 = p_pmbu.pmbu016 
#      AND pmau017 = p_pmbu.pmbu017 AND pmau018 = p_pmbu.pmbu018 
#      AND pmau019 = p_pmbu.pmbu019 AND pmau020 = p_pmbu.pmbu020 
#      AND pmau021 = p_pmbu.pmbu021
      
   IF l_n = 0 THEN
      RETURN FALSE
   ELSE
      RETURN TRUE
   END IF
END FUNCTION]]>
  </point>
  <point name="function.apmt128_set_required" order="27" ver="4" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_set_required()
   CALL cl_set_comp_required("pmbu011",FALSE)
   CALL cl_set_comp_required("pmbu031",FALSE)
   CALL cl_set_comp_required("pmbu032",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu011_clear" order="27" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 清空料件編號相關欄位
# Memo...........:
# Usage..........: CALL apmt128_pmbu011_clear()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/09 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt128_pmbu011_clear()
   LET g_pmbu_d[l_ac].pmbu011 = ' '           #清空料件編號
   LET g_pmbu_d[l_ac].pmbu011_desc = ''       #清空品名
   LET g_pmbu_d[l_ac].pmbu011_desc1 = ''      #清空規格
   LET g_pmbu_d[l_ac].pmbu012 = ' '           #清空產品特徵
   LET g_pmbu_d[l_ac].pmbu012_desc = ''       #清空產品特徵說明
   LET g_pmbu_d_o.pmbu011 = ''                #清空料件編號舊值
   CALL apmt128_set_no_entry_b("")
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu011_desc,g_pmbu_d[l_ac].pmbu011_desc1
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu012,g_pmbu_d[l_ac].pmbu012_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu031_clear" order="28" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 清空系列相關欄位
# Memo...........:
# Usage..........: CALL apmt128_pmbu031_clear()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/09 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt128_pmbu031_clear()
   LET g_pmbu_d[l_ac].pmbu031 = ' '       #清空系列
   LET g_pmbu_d[l_ac].pmbu031_desc=''     #清空系列說明
   LET g_pmbu_d_o.pmbu031 = ''            #清空系列舊值
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu031,g_pmbu_d[l_ac].pmbu031_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu032_clear" order="29" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 清空產品分類相關欄位
# Memo...........:
# Usage..........: CALL apmt128_pmbu032_clear()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/09 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt128_pmbu032_clear()
   LET g_pmbu_d[l_ac].pmbu032 = ' '       #清空產品分類
   LET g_pmbu_d[l_ac].pmbu032_desc=''     #清空產品分類說明
   LET g_pmbu_d_o.pmbu032 = ''            #清空產品分類舊值
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu032,g_pmbu_d[l_ac].pmbu032_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu031_desc" order="30" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 系列相關说明
# Memo...........:
# Usage..........: CALL apmt128_pmbu031_desc()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/09 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt128_pmbu031_desc()
   #抓取系列說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu031
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql001='2003' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu031_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu031_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu032_desc" order="31" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 產品分類說明
# Memo...........:
# Usage..........: CALL apmt128_pmbu032_desc()
# Input parameter: 
# Return code....: 
# Date & Author..: 15/06/09 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt128_pmbu032_desc()
   #抓取產品分類說明
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu032
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbu_d[l_ac].pmbu032_desc =g_rtn_fields[1]
   DISPLAY BY NAME g_pmbu_d[l_ac].pmbu032_desc
END FUNCTION]]>
  </point>
  <point name="function.apmt128_set_no_required" order="32" ver="4" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_set_no_required()
   CALL cl_set_comp_required("pmbu011,pmbu031,pmbu032",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.apmt128_set_no_required_b" order="32" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmt128_set_no_required_b()
   IF g_column_chk < 4 THEN
      CALL cl_set_comp_required("pmbu011,pmbu031,pmbu032",FALSE)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.apmt128_pmbu_unit" order="33" ver="4" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 系列、產品分類的單位確認
# Memo...........:
# Usage..........: CALL apmt128_pmbu_unit()
#                  RETURNING TRUE/FALSE
# Input parameter: 
# Return code....: 回傳 TRUE/FALSE
# Date & Author..: 2015-06-22 By dorislai
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt128_pmbu_unit()
   DEFINE  l_sql                 STRING                               #抓取sql語法
   DEFINE  l_chk                 LIKE  type_t.num5                    #判斷是否有抓到符合的值
   DEFINE  l_imaa001             LIKE  type_t.chr100                  #接收抓取到的料件編號值
   
   #先依欄位抓取sql語法    
       #---用系列去抓料件編號
   IF NOT cl_null(g_pmbu_d[l_ac].pmbu031) THEN
      LET l_sql = "SELECT imaa001 FROM imaa_t ",
                  "WHERE imaaent = '"||g_enterprise||"' AND imaa127 = '"||g_pmbu_d[l_ac].pmbu031||"'",
                  "ORDER BY imaa001"
   END IF
       #----用產品分類去抓料件編號
   IF NOT cl_null(g_pmbu_d[l_ac].pmbu032) THEN
      LET l_sql = "SELECT imaa001 FROM imaa_t ",
                  "WHERE imaaent = '"||g_enterprise||"' AND imaa009 = '"||g_pmbu_d[l_ac].pmbu032||"'",
                  "ORDER BY imaa001"
   END IF          
   #校驗          
   PREPARE apmt128_get_imaa001_chk_pre FROM l_sql
   DECLARE apmt128_get_imaa001_chk_curs CURSOR FOR apmt128_get_imaa001_chk_pre
   LET l_imaa001 =''
   LET l_chk = FALSE #判斷是否有抓到符合的資料
   #一筆一筆比對是否有符合任一 料件編號中的可使用單位
   FOREACH apmt128_get_imaa001_chk_curs INTO l_imaa001 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pmbu_d[l_ac].pmbu018
      #以COUNT來計算，並判斷是否有比對到符合的資料
      CALL ap_ref_array2(g_ref_fields,"SELECT COUNT(*) FROM imao_t WHERE imaoent='"||g_enterprise||"' AND imao002 = ? AND imao001 = '"||l_imaa001||"'","") RETURNING g_rtn_fields
      IF g_rtn_fields[1] > 0 THEN
         LET l_chk = TRUE 
         EXIT FOREACH
      END IF 
   END FOREACH
   FREE  apmt128_get_imaa001_chk_pre  #已使用完畢，釋放
   #若料件編號中無相對應的可使用單位，跳出錯誤訊息提示
   IF NOT l_chk THEN
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL apmt128_default_pmbt006() RETURNING l_pmbt006
   LET l_wc = l_wc," AND pmbt006 = '",l_pmbt006 CLIPPED,"'"
   LET g_wc = g_wc," AND pmbt006 = '",l_pmbt006 CLIPPED,"'"]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               DEFINE l_ooba002         LIKE ooba_t.ooba002
   DEFINE l_pmbt006         LIKE pmbt_t.pmbt006]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              Call s_aooi200_get_slip(g_browser[g_cnt].b_pmbtdocno) returning g_success,l_ooba002
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = l_ooba002
      CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_pmbtdocno_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_pmbtdocno_desc
      ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.page1.pmbu011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.pmbu022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt900" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbt901" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.pmbtstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.pmbu022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt900" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbt901" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtcnfdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtcrtdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtmoddt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.pmbtstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pmbu011" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_imaf001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu011  #顯示到畫面
            NEXT FIELD pmbu011                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pmbu013" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooce001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu013  #顯示到畫面上

            NEXT FIELD pmbu013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu014  #顯示到畫面上

            NEXT FIELD pmbu014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooci002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu015  #顯示到畫面上

            NEXT FIELD pmbu015                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "253"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu016  #顯示到畫面上

            NEXT FIELD pmbu016                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "251"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu017  #顯示到畫面上

            NEXT FIELD pmbu017                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu018" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu018  #顯示到畫面上
            NEXT FIELD pmbu018                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu019  #顯示到畫面上

            NEXT FIELD pmbu019                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooib002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu020  #顯示到畫面上

            NEXT FIELD pmbu020                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "238"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu021  #顯示到畫面上

            NEXT FIELD pmbu021                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.pmbu022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.pmbu031" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2003"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu031  #顯示到畫面上
            NEXT FIELD pmbu031                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.pmbu032" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbu032  #顯示到畫面上
            NEXT FIELD pmbu032                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '14'
            CALL q_ooal002_0()                             #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbt001  #顯示到畫面上

            NEXT FIELD pmbt001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooha001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbt002  #顯示到畫面上

            NEXT FIELD pmbt002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "ALL" #
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbt003  #顯示到畫面上

            NEXT FIELD pmbt003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "2" #
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbt004  #顯示到畫面上

            NEXT FIELD pmbt004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "275"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbt005  #顯示到畫面上

            NEXT FIELD pmbt005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.pmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.pmbt900" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbt900  #顯示到畫面上

            NEXT FIELD pmbt900                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbt901" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbt901  #顯示到畫面上

            NEXT FIELD pmbt901                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbtcnfid  #顯示到畫面上

            NEXT FIELD pmbtcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbtcrtdp  #顯示到畫面上

            NEXT FIELD pmbtcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbtcrtid  #顯示到畫面上

            NEXT FIELD pmbtcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.pmbtdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmbtdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbtdocno  #顯示到畫面上

            NEXT FIELD pmbtdocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbtmodid  #顯示到畫面上

            NEXT FIELD pmbtmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbtowndp  #顯示到畫面上

            NEXT FIELD pmbtowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbtownid  #顯示到畫面上

            NEXT FIELD pmbtownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.pmbtstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="default_search.after_sql" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET ls_wc = ''
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = " pmbt006 = '",g_argv[01],"' AND "
   END IF
]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF  
      
      IF NOT s_aooi360_del('6',g_prog,g_pmbt_m.pmbtdocno,'','','','','','','','','4') THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF  ]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                         ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DECLARE sel_pmbu_curs2 CURSOR FOR 
      SELECT pmbu010,pmbu011,'','',pmbu012,pmbu013,'',pmbu014,'',
             pmbu015,'',pmbu016,'',pmbu017,'',pmbu018,'',pmbu019,'','',
             pmbu020,'',pmbu021,'',pmbu022
        FROM pmbu_t
       WHERE pmbuent = g_enterprise
         AND pmbudocno = g_pmbt_m.pmbtdocno
   FOREACH sel_pmbu_curs2 INTO l_pmbu.*
      IF NOT apmt128_set_pmbu010(l_pmbu.*) THEN
         LET l_flag = 'I'
      ELSE   
         LET l_flag = 'U'
      END IF
      UPDATE pmbu_t SET pmbu010 = l_flag
       WHERE pmbuent = g_enterprise
         AND pmbudocno = g_pmbt_m.pmbtdocno 
         AND pmbu011 = l_pmbu.pmbu011 AND pmbu012 = l_pmbu.pmbu012 
         AND pmbu013 = l_pmbu.pmbu013 AND pmbu014 = l_pmbu.pmbu014 
         AND pmbu015 = l_pmbu.pmbu015 AND pmbu016 = l_pmbu.pmbu016
         AND pmbu017 = l_pmbu.pmbu017 AND pmbu018 = l_pmbu.pmbu018
         AND pmbu019 = l_pmbu.pmbu019 AND pmbu020 = l_pmbu.pmbu020 
         AND pmbu021 = l_pmbu.pmbu021
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "reproduce"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN
      END IF
   END FOREACH]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmbu      type_g_pmbu_d
   DEFINE l_flag      LIKE type_t.chr1]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   IF g_pmbt_m.pmbtstus MATCHES '[YX]' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="global.variable" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef        RECORD LIKE ooef_t.*
DEFINE g_pmas001     LIKE pmas_t.pmas001
DEFINE g_column_chk  LIKE type_t.num5                  #判斷隱藏的欄位]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="init.init" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_combo_scc('pmbu010','32')
   CALL cl_set_combo_scc('b_pmbt007','2020')
   CALL apmt128_set_visible()
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN 
      CALL cl_set_comp_visible("pmbu012,pmbu012_desc",FALSE)
   END IF ]]>
  </point>
  <point name="input.a.page1.pmbu011" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbu_d[l_ac].pmbu011) THEN
              IF  g_pmbt_m.pmbtdocno IS NOT NULL  AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL THEN 
                 IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021)) THEN 
                    IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                       LET g_pmbu_d[l_ac].pmbu011 = g_pmbu_d_t.pmbu011
                       NEXT FIELD CURRENT
                    END IF
                 END IF
              END IF

               LET l_pmbu011_str = g_pmbu_d[l_ac].pmbu011
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu011) AND l_pmbu011_str.getIndexOf("*",1) = 0 THEN 
#此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = 'ALL'
                  LET g_chkparam.arg2 = g_pmbu_d[l_ac].pmbu011
                  #若單頭的pmau002不為'ALL',表示有設定某一個採購控制組,
                  #那開窗就必須過濾這個控制組可以使用的料件編號
                  IF g_pmbt_m.pmbt002 <> 'ALL' THEN
                     CALL s_control_get_item_wc(g_pmbt_m.pmbt002) RETURNING l_success,l_wc
                     IF l_success THEN 
                        LET g_chkparam.where = l_wc
                     END IF
                  END IF
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imaf001_3") THEN
                      IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_pmbu_d[l_ac].pmbu011 <> g_pmbu_d_o.pmbu011 AND NOT cl_null(g_pmbu_d_o.pmbu011))) THEN
                         IF g_pmbu_d[l_ac].pmbu010 = 'I' THEN
                            CALL apmt128_pmbu011_ref()
                         END IF
                      END IF                   
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmbu_d[l_ac].pmbu011 = g_pmbu_d_o.pmbu011
                     CALL apmt128_pmbu011_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               IF NOT apmt128_pmau_exists(l_pmbu.*) THEN
                  LET g_pmbu_d[l_ac].pmbu011 = ''
                  CALL apmt128_pmbu011_ref()
               END IF

               #dorislai-20150629-add----(S)
               #而若有產品特徵時，需給null，這樣畫面才會控卡產品特徵必輸的部分
               IF apmt128_imaa005_exists() THEN
                  IF cl_null(g_pmbu_d[l_ac].pmbu012) THEN
                     LET g_pmbu_d[l_ac].pmbu012 = ''
                     LET g_pmbu_d[l_ac].pmbu012_desc = ''
                  END IF
               #料號無產品特徵時，給空白，新增資料時才會不會錯誤
               ELSE
                  LET g_pmbu_d[l_ac].pmbu012 = ' '
                  LET g_pmbu_d[l_ac].pmbu012_desc = ' '
               END IF
               #dorislai-20150629-add----(E)
               #料件編號、系列、產品分類這三個欄位
                  #---料件編號、系列有值
               IF cl_null(g_pmbu_d[l_ac].pmbu011) = FALSE AND cl_null(g_pmbu_d[l_ac].pmbu031) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg2  #%2替換成 系列
                        #替換apm-00937的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('apm-00937',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu031_clear()
                        ELSE  
                           CALL apmt128_pmbu011_clear()
                        END IF
                     WHEN 3  #若產品分類隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg2  #%2替換成 系列
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg3  #%3替換成 料件編號
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg4  #%4替換成 系列
                        #替換apm-00935的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('apm-00935',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu031_clear()
                        ELSE  
                           CALL apmt128_pmbu011_clear()
                        END IF
                  END CASE
        
               END IF
        
                  #---料件編號、產品分類有值
               IF cl_null(g_pmbu_d[l_ac].pmbu011) = FALSE AND cl_null(g_pmbu_d[l_ac].pmbu032) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk 
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2  #%2替換成 產品分類
                        #替換apm-00937的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('apm-00937',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg 
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu032_clear()
                        ELSE  
                           CALL apmt128_pmbu011_clear()
                        END IF
                     WHEN 2  #若系列隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1  #%1替換成 料件編號
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2  #%2替換成 產品分類
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg3  #%3替換成 料件編號
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg4  #%4替換成 產品分類
                        #替換apm-00935的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('apm-00935',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu032_clear()
                        ELSE  
                           CALL apmt128_pmbu011_clear()
                        END IF
                  END CASE
               END IF 
            END IF
            #若料號、系列、產品分類，只有一個顯示，需給null，畫面才會控卡
            IF cl_null(g_pmbu_d[l_ac].pmbu011) AND g_column_chk = 4 THEN
               LET g_pmbu_d[l_ac].pmbu011 = ''
            END IF
            LET l_fie_chk = TRUE
            LET g_pmbu_d_o.pmbu018 = g_pmbu_d[l_ac].pmbu018 
            ##doislai-20150629-add----(E)
            LET g_pmbu_d_o.pmbu011 = g_pmbu_d[l_ac].pmbu011 
            CALL apmt128_pmbu011_desc()
            CALL apmt128_set_entry_b(l_cmd)
            CALL apmt128_set_no_entry_b(l_cmd)
            
            
            #此段落由子樣板a05產生]]>
  </point>
  <point name="input.a.page1.pmbu012" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a05產生
            CALL s_feature_description(g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012) RETURNING g_success,g_pmbu_d[l_ac].pmbu012_desc                                                
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF g_pmbu_d[l_ac].pmbu012 IS NOT NULL THEN
               IF NOT s_feature_check(g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012) THEN 
                  LET g_pmbu_d[l_ac].pmbu012 = g_pmbu_d_o.pmbu012
                  NEXT FIELD CURRENT
               END IF
            END IF
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu012 = g_pmbu_d_t.pmbu012
#               NEXT FIELD CURRENT
#            END IF
            CALL s_feature_description(g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012) RETURNING l_success,g_pmbu_d[l_ac].pmbu012_desc
            LET g_pmbu_d_o.pmbu012 = g_pmbu_d[l_ac].pmbu012

             ]]>
  </point>
  <point name="input.a.page1.pmbu013" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL apmt128_pmbu013_desc()
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"'  AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu013 = g_pmbu_d_t.pmbu013
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbu_d[l_ac].pmbu013                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooce001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME
               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbu_d[l_ac].pmbu013 = g_pmbu_d_o.pmbu013
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu014) OR NOT cl_null(g_pmbu_d[l_ac].pmbu015) THEN
                  IF NOT apmt128_area_exists() THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            IF cl_null(g_pmbu_d[l_ac].pmbu013) THEN
               LET g_pmbu_d[l_ac].pmbu013 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu013 
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu013 = g_pmbu_d_t.pmbu013
#               NEXT FIELD CURRENT
#            END IF]]>
  </point>
  <point name="input.a.page1.pmbu014" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL apmt128_pmbu014_desc()
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno || "' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu014 = g_pmbu_d_t.pmbu014
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu014) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbu_d[l_ac].pmbu014                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbu_d[l_ac].pmbu014 = g_pmbu_d_o.pmbu014
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) OR NOT cl_null(g_pmbu_d[l_ac].pmbu015) THEN
                  IF NOT apmt128_area_exists() THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            IF cl_null(g_pmbu_d[l_ac].pmbu014) THEN
               LET g_pmbu_d[l_ac].pmbu014 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu014
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu014 = g_pmbu_d_t.pmbu014
#               NEXT FIELD CURRENT
#            END IF]]>
  </point>
  <point name="input.a.page1.pmbu015" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu015_desc()
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu015 = g_pmbu_d_t.pmbu015
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu015) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbu_d[l_ac].pmbu015
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooci002_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME
               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbu_d[l_ac].pmbu015 = g_pmbu_d_o.pmbu015
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) OR NOT cl_null(g_pmbu_d[l_ac].pmbu014) THEN
                  IF NOT apmt128_area_exists() THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF cl_null(g_pmbu_d[l_ac].pmbu015) THEN
               LET g_pmbu_d[l_ac].pmbu015 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu015            
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu015 = g_pmbu_d_t.pmbu015
#               NEXT FIELD CURRENT
#            END IF
            #此段落由子樣板a05產生
            

]]>
  </point>
  <point name="input.a.page1.pmbu016" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu016_desc()
            #此段落由子樣板a05產生
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu016 = g_pmbu_d_t.pmbu016
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu016) THEN
               IF NOT s_azzi650_chk_exist('253',g_pmbu_d[l_ac].pmbu016) THEN
                  LET g_pmbu_d[l_ac].pmbu016 = g_pmbu_d_o.pmbu016
                  NEXT FIELD CURRENT
               END IF
            END IF
            
            IF cl_null(g_pmbu_d[l_ac].pmbu016) THEN
               LET g_pmbu_d[l_ac].pmbu016 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu016
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu016 = g_pmbu_d_t.pmbu016
#               NEXT FIELD CURRENT
#            END IF]]>
  </point>
  <point name="input.a.page1.pmbu017" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu017_desc()
            #此段落由子樣板a05產生
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu017 = g_pmbu_d_t.pmbu017
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu017) THEN
               IF NOT s_azzi650_chk_exist('251',g_pmbu_d[l_ac].pmbu017) THEN
                  LET g_pmbu_d[l_ac].pmbu017 = g_pmbu_d_o.pmbu017
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF cl_null(g_pmbu_d[l_ac].pmbu017) THEN
               LET g_pmbu_d[l_ac].pmbu017 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu017
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu017 = g_pmbu_d_t.pmbu017
#               NEXT FIELD CURRENT
#            END IF]]>
  </point>
  <point name="input.a.page1.pmbu018" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
                IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                   IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                      LET g_pmbu_d[l_ac].pmbu018 = g_pmbu_d_t.pmbu018
                      NEXT FIELD CURRENT
                   END IF
                END IF
             END IF
            
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu018) THEN 
               INITIALIZE g_chkparam.* TO NULL               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbu_d[l_ac].pmbu018                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooca001") THEN
                  LET g_pmbu_d[l_ac].pmbu018 = g_pmbu_d_o.pmbu018
                  CALL apmt128_pmbu018_desc()
                  NEXT FIELD CURRENT
               END IF 

               
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu011) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmbu_d[l_ac].pmbu011
                  LET g_chkparam.arg2 = g_pmbu_d[l_ac].pmbu018
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imao002") THEN
                     #檢查失敗時後續處理
                     LET g_pmbu_d[l_ac].pmbu018 = g_pmbu_d_o.pmbu018
                     CALL apmt128_pmbu018_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               #2015-06-09----dorislai----add
               #系列 或 產品分類有值的話，檢查跟他可使用的單位勾稽
               IF cl_null(g_pmbu_d[l_ac].pmbu031) = FALSE OR cl_null(g_pmbu_d[l_ac].pmbu032) = FALSE THEN
                  IF NOT apmt128_pmbu_unit() THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend=""
                     LET g_errparam.code="aim-00212"
                     LET g_errparam.popup=TRUE
                     LET g_pmbu_d[l_ac].pmbu018 = g_pmbu_d_o.pmbu018
                     CALL apmt128_pmbu018_desc()
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF  
               #2015-06-09----dorislai----end  
            END IF             
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu018 = g_pmbu_d_t.pmbu018
#               NEXT FIELD CURRENT
#            END IF 
            LET  g_pmbu_d_o.pmbu018 = g_pmbu_d[l_ac].pmbu018 
            CALL apmt128_pmbu018_desc()
            
            
            
             
]]>
  </point>
  <point name="input.a.page1.pmbu019" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu019_desc()
            #此段落由子樣板a05產生
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu019 = g_pmbu_d_t.pmbu019
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu019) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = 'ALL'
               LET g_chkparam.arg2 = g_pmbu_d[l_ac].pmbu019
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oodb002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME
               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbu_d[l_ac].pmbu019 = g_pmbu_d_o.pmbu019
                  NEXT FIELD CURRENT
               END IF
            END IF 
            IF cl_null(g_pmbu_d[l_ac].pmbu019) THEN
               LET g_pmbu_d[l_ac].pmbu019 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu019
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu019 = g_pmbu_d_t.pmbu019
#               NEXT FIELD CURRENT
#            END IF]]>
  </point>
  <point name="input.a.page1.pmbu020" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL apmt128_pmbu020_desc()
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu020 = g_pmbu_d_t.pmbu020
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu020) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbu_d[l_ac].pmbu020                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooib002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbu_d[l_ac].pmbu020 = g_pmbu_d_o.pmbu020
                  NEXT FIELD CURRENT
               END IF
            END IF 
            IF cl_null(g_pmbu_d[l_ac].pmbu020) THEN
               LET g_pmbu_d[l_ac].pmbu020 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu020
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu020 = g_pmbu_d_t.pmbu020
#               NEXT FIELD CURRENT
#            END IF]]>
  </point>
  <point name="input.a.page1.pmbu021" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL apmt128_pmbu021_desc()
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     LET g_pmbu_d[l_ac].pmbu021 = g_pmbu_d_t.pmbu021
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu021) THEN
               IF NOT s_azzi650_chk_exist('238',g_pmbu_d[l_ac].pmbu021) THEN
                  LET g_pmbu_d[l_ac].pmbu021 = g_pmbu_d_o.pmbu021
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF cl_null(g_pmbu_d[l_ac].pmbu021) THEN
               LET g_pmbu_d[l_ac].pmbu021 = ' '
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu021
#            IF NOT apmt128_pmau_exists() THEN
#               LET g_pmbu_d[l_ac].pmbu021 = g_pmbu_d_t.pmbu021
#               NEXT FIELD CURRENT
#            END IF             ]]>
  </point>
  <point name="input.a.page1.pmbu022" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.pmbu031" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu031) THEN
               #確認資料無重複
               IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               
               #dorislai-20150609-add----(S)
               #抓取系列說明(含校驗帶值)
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu031) THEN
                  IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_pmbu_d[l_ac].pmbu031 != g_pmbu_d_o.pmbu031 OR g_pmbu_d_o.pmbu031 IS NULL )) THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = '2003'
                     LET g_chkparam.arg2 = g_pmbu_d[l_ac].pmbu031
                     IF NOT cl_chk_exist("v_oocq002_01") THEN  #判斷是否有此 校驗帶值
                        LET g_pmbu_d[l_ac].pmbu031 = g_pmbu_d_o.pmbu031
                        DISPLAY BY NAME g_pmbu_d[l_ac].pmbu031
                        CALL apmt128_pmbu031_desc() 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               #料件編號、系列、產品分類這三個欄位
                  #----系列、料件編號有值
               IF cl_null(g_pmbu_d[l_ac].pmbu031) = FALSE AND cl_null(g_pmbu_d[l_ac].pmbu011) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk
                     WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg1  #%1替換成 系列
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號
                        #替換apm-00937的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('apm-00937',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu011_clear()
                        ELSE  
                           CALL apmt128_pmbu031_clear()                      
                        END IF
                     WHEN 3  #若產品分類隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg1  #%1替換成 系列
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg3  #%3替換成 系列
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg4  #%4替換成 料件編號
                        #替換apm-00935的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('apm-00935',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu011_clear()
                        ELSE  
                           CALL apmt128_pmbu031_clear()
                        END IF
                  END CASE             
               END IF
            
                  #----系列、產品分類有值
               IF cl_null(g_pmbu_d[l_ac].pmbu031) = FALSE AND cl_null(g_pmbu_d[l_ac].pmbu032) = FALSE THEN
                  LET l_msg = ''   #清空值
                  LET l_msg1 = ''
                  LET l_msg2 = '' 
                  LET l_msg3 = ''
                  LET l_msg4 = ''
                  CASE g_column_chk
                     WHEN 0   #料件編號、系列、產品分類欄位有顯現
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg1  #%1替換成 系列
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2  #%2替換成 產品分類
                        #替換apm-00937的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                        CALL cl_getmsg_parm('apm-00937',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu032_clear()
                        ELSE  
                           CALL apmt128_pmbu031_clear()
                        END IF
                     WHEN 1   #系列、產品分類欄位有顯現
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg1  #%1替換成 系列
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2  #%2替換成 產品分類
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg3  #%3替換成 系列
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg4  #%4替換成 產品分類
                        #替換apm-00935的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                        CALL cl_getmsg_parm('apm-00935',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                        #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                        IF cl_ask_confirm2('',l_msg) THEN
                           CALL apmt128_pmbu032_clear()
                        ELSE  
                           CALL apmt128_pmbu031_clear()
                        END IF
                  END CASE  
                  #確認單位，若當下單位不在當下輸入系列中的單位值，則清空單位                  
                  IF NOT apmt128_pmbu_unit() THEN
                     LET g_pmbu_d[l_ac].pmbu018 = ''
                     LET g_pmbu_d_o.pmbu018 = g_pmbu_d[l_ac].pmbu018
                     CALL apmt128_pmbu018_desc()
                  END IF
               END IF
               
            END IF
            #若料號、系列、產品分類，只有一個顯示，需給null，畫面才會控卡
            IF cl_null(g_pmbu_d[l_ac].pmbu031) AND g_column_chk = 4 THEN
               LET g_pmbu_d[l_ac].pmbu031 = ''
            END IF
            LET g_pmbu_d_o.pmbu031 = g_pmbu_d[l_ac].pmbu031
            CALL apmt128_pmbu031_desc()
            CALL apmt128_set_entry_b(l_cmd)
            CALL apmt128_set_no_entry_b(l_cmd)
            #dorislai-20150609-add----(E)

            
]]>
  </point>
  <point name="input.a.page1.pmbu032" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu031 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu032 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021 OR g_pmbu_d[g_detail_idx].pmbu031 != g_pmbu_d_t.pmbu031 OR g_pmbu_d[g_detail_idx].pmbu032 != g_pmbu_d_t.pmbu032)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"' AND "|| "pmbu031 = '"||g_pmbu_d[g_detail_idx].pmbu031 ||"' AND "|| "pmbu032 = '"||g_pmbu_d[g_detail_idx].pmbu032 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
  
            #dorislai-20150609-add----(S)
            #抓取產品分類說明(含校驗帶值)
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu032) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_pmbu_d[l_ac].pmbu032 != g_pmbu_d_o.pmbu032 OR g_pmbu_d_o.pmbu032 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_pmbu_d[l_ac].pmbu032
                  IF NOT cl_chk_exist("v_rtax001") THEN
                     LET g_pmbu_d[l_ac].pmbu032 = g_pmbu_d_o.pmbu032
                     DISPLAY BY NAME g_pmbu_d[l_ac].pmbu032
                     CALL apmt128_pmbu032_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            #料件編號、系列、產品分類這三個欄位，僅顯現產品分類、料件編號
            IF cl_null(g_pmbu_d[l_ac].pmbu032) = FALSE AND cl_null(g_pmbu_d[l_ac].pmbu011) = FALSE THEN
               LET l_msg = ''   #清空值
               LET l_msg1 = ''
               LET l_msg2 = '' 
               LET l_msg3 = ''
               LET l_msg4 = ''
               CASE g_column_chk 
                  WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                     CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg1  #%1替換成 產品分類
                     CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號             
                     #替換apm-00937的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                     CALL cl_getmsg_parm('apm-00937',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                     #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                     IF cl_ask_confirm2('',l_msg) THEN
                        CALL apmt128_pmbu011_clear()
                     ELSE  
                        CALL apmt128_pmbu032_clear()
                     END IF
                  WHEN 2  #若系列隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                     CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg1  #%1替換成 產品分類
                     CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg2  #%2替換成 料件編號
                     CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg3  #%3替換成 產品分類
                     CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg4  #%4替換成 料件編號              
                     #替換apm-00935的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                     CALL cl_getmsg_parm('apm-00935',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                     #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                     IF cl_ask_confirm2('',l_msg) THEN
                        CALL apmt128_pmbu011_clear()
                     ELSE  
                        CALL apmt128_pmbu032_clear()
                     END IF
               END CASE
            END IF
            
            #料件編號、系列、產品分類這三個欄位，僅顯現產品分類、系列
            IF cl_null(g_pmbu_d[l_ac].pmbu032) = FALSE AND cl_null(g_pmbu_d[l_ac].pmbu031) = FALSE THEN
               LET l_msg = ''   #清空值
               LET l_msg1 = ''
               LET l_msg2 = '' 
               LET l_msg3 = ''
               LET l_msg4 = ''
               CASE g_column_chk
                  WHEN 0  #若無任何欄位隱藏，則僅顯示三個欄位的擇一選擇的訊息
                     CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg1  #%1替換成 產品分類
                     CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg2  #%2替換成 系列            
                     #替換apm-00937的字串(料件編號、系列、產品分類擇一輸入，%1已有值，是否將%2清空？)
                     CALL cl_getmsg_parm('apm-00937',g_lang,l_msg1 ||'|'|| l_msg2) RETURNING l_msg
                     #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                     IF cl_ask_confirm2('',l_msg) THEN
                        CALL apmt128_pmbu031_clear()
                     ELSE
                        CALL apmt128_pmbu032_clear()
                     END IF
                  WHEN 1  #若料件編號隱藏，則僅顯示兩個欄位的擇一選擇的訊息
                     CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg1  #%1替換成 產品分類
                     CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg2  #%2替換成 系列
                     CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg3  #%3替換成 產品分類
                     CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg4  #%4替換成 系列              
                     #替換apm-00935的字串(%1、%2擇一輸入，%3已有值，是否將%4清空？)
                     CALL cl_getmsg_parm('apm-00935',g_lang,l_msg1 ||'|'|| l_msg2 ||'|'|| l_msg3 ||'|'|| l_msg4) RETURNING l_msg
                     #跳出提醒視窗，確認：保留當下欄位值、清除另一個欄位值  ; 取消：保留另一個欄位值、清除當下欄位值
                     IF cl_ask_confirm2('',l_msg) THEN
                        CALL apmt128_pmbu031_clear()
                     ELSE
                        CALL apmt128_pmbu032_clear()
                     END IF
               END CASE
               #確認單位，若當下單位不在當下輸入系列中的單位值，則清空單位                  
                  IF NOT apmt128_pmbu_unit() THEN
                     LET g_pmbu_d[l_ac].pmbu018 = ''
                     LET g_pmbu_d_o.pmbu018 = g_pmbu_d[l_ac].pmbu018
                     CALL apmt128_pmbu018_desc()
                  END IF
            END IF
            #若料號、系列、產品分類，只有一個顯示，需給null，畫面才會控卡
            IF cl_null(g_pmbu_d[l_ac].pmbu032) AND g_column_chk = 4 THEN
               LET g_pmbu_d[l_ac].pmbu032 = ''
            END IF            
            LET g_pmbu_d_o.pmbu032 = g_pmbu_d[l_ac].pmbu032
            CALL apmt128_pmbu032_desc()
            CALL apmt128_set_entry_b(l_cmd)
            CALL apmt128_set_no_entry_b(l_cmd)
            #dorislai-20150609-add----(E)            
            ]]>
  </point>
  <point name="input.a.page1.pmbuseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_pmbt_m.pmbtdocno IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbuseq IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu011 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu012 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu013 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu014 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu015 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu016 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu017 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu018 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu019 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu020 IS NOT NULL AND g_pmbu_d[g_detail_idx].pmbu021 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t OR g_pmbu_d[g_detail_idx].pmbuseq != g_pmbu_d_t.pmbuseq OR g_pmbu_d[g_detail_idx].pmbu011 != g_pmbu_d_t.pmbu011 OR g_pmbu_d[g_detail_idx].pmbu012 != g_pmbu_d_t.pmbu012 OR g_pmbu_d[g_detail_idx].pmbu013 != g_pmbu_d_t.pmbu013 OR g_pmbu_d[g_detail_idx].pmbu014 != g_pmbu_d_t.pmbu014 OR g_pmbu_d[g_detail_idx].pmbu015 != g_pmbu_d_t.pmbu015 OR g_pmbu_d[g_detail_idx].pmbu016 != g_pmbu_d_t.pmbu016 OR g_pmbu_d[g_detail_idx].pmbu017 != g_pmbu_d_t.pmbu017 OR g_pmbu_d[g_detail_idx].pmbu018 != g_pmbu_d_t.pmbu018 OR g_pmbu_d[g_detail_idx].pmbu019 != g_pmbu_d_t.pmbu019 OR g_pmbu_d[g_detail_idx].pmbu020 != g_pmbu_d_t.pmbu020 OR g_pmbu_d[g_detail_idx].pmbu021 != g_pmbu_d_t.pmbu021)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbu_t WHERE "||"pmbuent = '" ||g_enterprise|| "' AND "||"pmbudocno = '"||g_pmbt_m.pmbtdocno ||"' AND "|| "pmbuseq = '"||g_pmbu_d[g_detail_idx].pmbuseq ||"' AND "|| "pmbu011 = '"||g_pmbu_d[g_detail_idx].pmbu011 ||"' AND "|| "pmbu012 = '"||g_pmbu_d[g_detail_idx].pmbu012 ||"' AND "|| "pmbu013 = '"||g_pmbu_d[g_detail_idx].pmbu013 ||"' AND "|| "pmbu014 = '"||g_pmbu_d[g_detail_idx].pmbu014 ||"' AND "|| "pmbu015 = '"||g_pmbu_d[g_detail_idx].pmbu015 ||"' AND "|| "pmbu016 = '"||g_pmbu_d[g_detail_idx].pmbu016 ||"' AND "|| "pmbu017 = '"||g_pmbu_d[g_detail_idx].pmbu017 ||"' AND "|| "pmbu018 = '"||g_pmbu_d[g_detail_idx].pmbu018 ||"' AND "|| "pmbu019 = '"||g_pmbu_d[g_detail_idx].pmbu019 ||"' AND "|| "pmbu020 = '"||g_pmbu_d[g_detail_idx].pmbu020 ||"' AND "|| "pmbu021 = '"||g_pmbu_d[g_detail_idx].pmbu021 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.pmbt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt001_desc()
            IF NOT cl_null(g_pmbt_m.pmbt001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbt_m.pmbt001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooal002_11") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbt_m.pmbt001 = g_pmbt_m_t.pmbt001
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
]]>
  </point>
  <point name="input.a.pmbt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt002_desc()
            IF NOT cl_null(g_pmbt_m.pmbt002) AND g_pmbt_m.pmbt002 != 'ALL' THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbt_m.pmbt002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooha001_4") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbt_m.pmbt002 = g_pmbt_m_t.pmbt002
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET  g_pmbt_m.pmbt002 = 'ALL'
               CALL apmt128_pmbt002_desc()

            END IF 
            
]]>
  </point>
  <point name="input.a.pmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt003_desc()
            IF NOT cl_null(g_pmbt_m.pmbt003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = "ALL"
               LET g_chkparam.arg2 = g_pmbt_m.pmbt003

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooaj002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbt_m.pmbt003 = g_pmbt_m_t.pmbt003
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
]]>
  </point>
  <point name="input.a.pmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt004_desc()
            IF NOT cl_null(g_pmbt_m.pmbt004) AND g_pmbt_m.pmbt004 != "ALL" THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbt_m.pmbt004
               LET g_chkparam.arg2 = '2'

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbt_m.pmbt004 = g_pmbt_m_t.pmbt004
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_pmbt_m.pmbt004 = "ALL"
            END IF 
            
]]>
  </point>
  <point name="input.a.pmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt005_desc()
            IF NOT cl_null(g_pmbt_m.pmbt005) AND g_pmbt_m.pmbt005 != "ALL" THEN
               IF NOT s_azzi650_chk_exist('275',g_pmbt_m.pmbt005) THEN
                  LET g_pmbt_m.pmbt005 = g_pmbt_m_t.pmbt005
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_pmbt_m.pmbt005 = "ALL"
            END IF
]]>
  </point>
  <point name="input.a.pmbt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.pmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.pmbt900" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt900_desc()
            IF NOT cl_null(g_pmbt_m.pmbt900) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbt_m.pmbt900

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  LET g_pmbt_m.pmbt900 = g_pmbt_m_t.pmbt900
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
]]>
  </point>
  <point name="input.a.pmbt901" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt901_desc()
            IF NOT cl_null(g_pmbt_m.pmbt901) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmbt_m.pmbt901
               LET g_chkparam.arg2 = g_pmbt_m.pmbtdocdt

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_pmbt_m.pmbt901 = g_pmbt_m_t.pmbt901
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            
]]>
  </point>
  <point name="input.a.pmbtdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            IF cl_null(g_pmbt_m.pmbtdocdt) THEN
               NEXT FIELD CURRENT
            END IF]]>
  </point>
  <point name="input.a.pmbtdocno" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a05產生
            CALL apmt128_pmbudocno_desc('1')
            IF  NOT cl_null(g_pmbt_m.pmbtdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmbt_m.pmbtdocno != g_pmbtdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbt_t WHERE "||"pmbtent = '" ||g_enterprise|| "' AND "||"pmbtdocno = '"||g_pmbt_m.pmbtdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT s_aooi200_chk_slip(g_site,'',g_pmbt_m.pmbtdocno,g_prog) THEN
                  LET g_pmbt_m.pmbtdocno = g_pmbt_m_t.pmbtdocno
                  NEXT FIELD CURRENT
               END IF
            ELSE
               NEXT FIELD CURRENT
            END IF
            IF cl_null(g_pmbt_m.pmbtdocdt) THEN
               NEXT FIELD pmbtdocdt
            END IF
]]>
  </point>
  <point name="input.a.pmbtstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page1.pmbu011" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #CALL apmt128_pmbu011_desc()]]>
  </point>
  <point name="input.b.page1.pmbu012" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF apmt128_imaa005_exists() THEN 
               #dorislai-20150629-add----(S)            
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu011) AND l_fie_chk AND cl_null(g_pmbu_d[l_ac].pmbu012) THEN
               #dorislai-20150629-add----(E)
                  CALL s_feature_single(g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012,'ALL','') RETURNING g_success,g_pmbu_d[l_ac].pmbu012
                  DISPLAY BY NAME g_pmbu_d[l_ac].pmbu012 
                  CALL s_feature_description(g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012) RETURNING g_success,g_pmbu_d[l_ac].pmbu012_desc                   
               END IF
            END IF
            #dorislai-20150629-add----(S)
            LET l_fie_chk = FALSE
            #dorislai-20150629-add----(E)
            ]]>
  </point>
  <point name="input.b.page1.pmbu013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu013_desc()]]>
  </point>
  <point name="input.b.page1.pmbu014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu014_desc()]]>
  </point>
  <point name="input.b.page1.pmbu015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu015_desc()]]>
  </point>
  <point name="input.b.page1.pmbu016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu016_desc()]]>
  </point>
  <point name="input.b.page1.pmbu017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu017_desc()]]>
  </point>
  <point name="input.b.page1.pmbu018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu018_desc()]]>
  </point>
  <point name="input.b.page1.pmbu019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu019_desc()]]>
  </point>
  <point name="input.b.page1.pmbu020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu020_desc()]]>
  </point>
  <point name="input.b.page1.pmbu021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_pmbu021_desc()]]>
  </point>
  <point name="input.b.page1.pmbu022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT apmt128_set_pmbu010(g_pmbu_d[l_ac].*) THEN
               LET g_pmbu_d[l_ac].pmbu010 = 'I'
            ELSE
               IF cl_null(g_pmbu_d[l_ac].pmbu022) THEN
                  CALL apmt128_default_pmbu022()
               END IF
               LET g_pmbu_d[l_ac].pmbu010 = 'U'
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu010                ]]>
  </point>
  <point name="input.b.pmbt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt001_desc()]]>
  </point>
  <point name="input.b.pmbt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt002_desc()]]>
  </point>
  <point name="input.b.pmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt003_desc()]]>
  </point>
  <point name="input.b.pmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt004_desc()]]>
  </point>
  <point name="input.b.pmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt005_desc()]]>
  </point>
  <point name="input.b.pmbt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.pmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.pmbt900" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt900_desc()]]>
  </point>
  <point name="input.b.pmbt901" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbt901_desc()]]>
  </point>
  <point name="input.b.pmbtdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.pmbtdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            CALL apmt128_pmbudocno_desc('1')]]>
  </point>
  <point name="input.b.pmbtstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.before_input" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1
   LET l_chk2 = 0   
   LET l_del_chk = FALSE 
   LET l_fie_chk = FALSE]]>
  </point>
  <point name="input.body.a_delete" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_del_chk = TRUE   #避免刪除後，跑進AFTER ROW、AFTER INSERT、ON ROW CHANGE三欄位皆為空判斷式
                                                        ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.after_row" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #doislai-20150629-add----(S)
            #非刪除的情況且單位有輸入資料才需要檢查 
            IF (NOT l_del_chk) AND (NOT cl_null(g_pmbu_d_o.pmbu018)) THEN 
               IF g_column_chk = 0 THEN   #無隱藏的欄位 
                  #檢查三個key值欄位是否有輸入資料 
                  IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu011) AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                     IF l_chk2 THEN 
                        INITIALIZE g_errparam TO NULL 
                        LET g_errparam.extend = '' 
                        LET g_errparam.code   = 'apm-00938'     #料件編號、系列、產品分類請擇一輸入 
                        LET g_errparam.popup  = TRUE 
                        CALL cl_err() 
                     END IF 
                  
                     LET l_chk2 = TRUE 
                     NEXT FIELD pmbu011  
                  END IF
               END IF               
               IF g_column_chk > 0 THEN   #有隱藏的欄位
                  LET l_msg1 = ''
                  LET l_msg2 = ''
                  LET l_chk = FALSE #判斷是否有兩個欄位有值的情況
                  CASE g_column_chk
                     WHEN 1 #當料件編號隱藏
                        IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg1
                           CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2
                        END IF
                     WHEN 2 #當系列隱藏
                        IF cl_null(g_pmbu_d[l_ac].pmbu011)  AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1
                           CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2
                        END IF
                     WHEN 3 #當產品分類隱藏
                        IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu011) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1
                           CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg2
                        END IF
                  END CASE
                  #若有任兩個無值
                  IF l_chk THEN
                     #判斷是否有跑過錯誤訊息，沒的話這要跳錯誤訊息
                     IF l_chk2 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend=""
                        LET g_errparam.code="apm-00936"
                        LET g_errparam.replace[1] = l_msg1
                        LET g_errparam.replace[2] = l_msg2
                        LET g_errparam.popup=TRUE
                        CALL cl_err()
                     END IF
                     LET l_chk2 = TRUE
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF l_cmd = 'a' THEN
                  LET l_cnt = 1  
                  SELECT COUNT(*) INTO l_cnt FROM pmbu_t 
                   WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbt_m.pmbtdocno
                     AND pmbu011 = g_pmbu_d[l_ac].pmbu011
                     AND pmbu012 = g_pmbu_d[l_ac].pmbu012
                     AND pmbu013 = g_pmbu_d[l_ac].pmbu013
                     AND pmbu014 = g_pmbu_d[l_ac].pmbu014
                     AND pmbu015 = g_pmbu_d[l_ac].pmbu015
                     AND pmbu016 = g_pmbu_d[l_ac].pmbu016
                     AND pmbu017 = g_pmbu_d[l_ac].pmbu017
                     AND pmbu018 = g_pmbu_d[l_ac].pmbu018
                     AND pmbu019 = g_pmbu_d[l_ac].pmbu019
                     AND pmbu020 = g_pmbu_d[l_ac].pmbu020
                     AND pmbu021 = g_pmbu_d[l_ac].pmbu021
                     AND pmbu031 = g_pmbu_d[l_ac].pmbu031
                     AND pmbu032 = g_pmbu_d[l_ac].pmbu032

                  IF cl_null(l_cnt) or l_cnt = 0 THEN 
                     INSERT INTO pmbu_t (pmbuent,pmbudocno,pmbu011,pmbu012,pmbu013,pmbu014,
                                         pmbu015,pmbu016,pmbu017,pmbu018,pmbu019,pmbu020,
                                         pmbu021,pmbu031,pmbu032,pmbu010,pmbu022) 
                                 VALUES (g_enterprise,g_pmbt_m.pmbtdocno,g_pmbu_d[l_ac].pmbu011,
                                         g_pmbu_d[l_ac].pmbu012,g_pmbu_d[l_ac].pmbu013,g_pmbu_d[l_ac].pmbu014,
                                         g_pmbu_d[l_ac].pmbu015,g_pmbu_d[l_ac].pmbu016,g_pmbu_d[l_ac].pmbu017,
                                         g_pmbu_d[l_ac].pmbu018,g_pmbu_d[l_ac].pmbu019,g_pmbu_d[l_ac].pmbu020,
                                         g_pmbu_d[l_ac].pmbu021,g_pmbu_d[l_ac].pmbu031,g_pmbu_d[l_ac].pmbu032,
                                         g_pmbu_d[l_ac].pmbu010,g_pmbu_d[l_ac].pmbu022) 
                                         
                     LET g_rec_b = g_rec_b + 1
                     DISPLAY g_rec_b TO FORMONLY.cnt
                  END IF
               END IF  
            END IF  
            #dorislai-20150629-add----(E)
                
                                    ]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT apmt128_set_pmbu010(g_pmbu_d[l_ac].*) THEN
               LET g_pmbu_d[l_ac].pmbu010 = 'I'
            ELSE
               LET g_pmbu_d[l_ac].pmbu010 = 'U'
            END IF
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu010
            
            #dorislai-20150629-add----(S)
            #料號、系列、產品分類至少要輸入一項 (如果都沒輸入的話應該報錯 )
            LET l_chk2 = TRUE      #讓錯誤訊息只出現一次的開關 
            IF g_column_chk = 0 THEN   #無任何欄位隱藏
               IF cl_null(g_pmbu_d_o.pmbu011) AND cl_null(g_pmbu_d_o.pmbu031) AND cl_null(g_pmbu_d_o.pmbu032) THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = '' 
                  LET g_errparam.code   = 'apm-00938'     #料件編號、系列、產品分類請擇一輸入 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err() 
               
                  LET l_chk2 = FALSE  
                  NEXT FIELD pmbu011 
               END IF 
            END IF
            IF g_column_chk > 0 THEN   #有隱藏的欄位
               LET l_msg1 = ''
               LET l_msg2 = ''
               CASE g_column_chk
                  WHEN 1 #當料件編號隱藏
                     IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                        LET l_chk = TRUE
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg1
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2
                     END IF
                  WHEN 2 #當系列隱藏
                     IF cl_null(g_pmbu_d[l_ac].pmbu011) AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                        LET l_chk = TRUE
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1
                        CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2
                        
                     END IF
                     
                  WHEN 3 #當產品分類隱藏
                     IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu011) THEN
                         LET l_chk = TRUE
                        CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1
                        CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg2
                     END IF
                     
               END CASE
               IF l_chk THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend=""
                  LET g_errparam.code="apm-00936"
                  LET g_errparam.replace[1] = l_msg1
                  LET g_errparam.replace[2] = l_msg2
                  LET g_errparam.popup=TRUE
                  CALL cl_err()
                  LET l_chk2 = FALSE 
                  NEXT FIELD CURRENT
               END IF
            END IF
            #dorislai-20150629-add----(E)           
]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #2015-06-09----dorislai----add
               #----塞資料----
               LET l_chk = FALSE  #若為TURE，表示已有給資料，後面欄位無需再進入
               CASE g_column_chk            #給key欄位值，避免發生新增錯誤狀況
                  WHEN 0   #無隱藏欄位
                     LET l_chk = FALSE #預設FALSE,假設尚未進行塞資料動作
                     IF cl_null(g_pmbu_d[l_ac].pmbu011) = 0 AND l_chk = 0 THEN
                        LET l_chk = TRUE
                        LET g_pmbu_d[l_ac].pmbu031 = ' '
                        LET g_pmbu_d[l_ac].pmbu032 = ' '
                     END IF
                     IF cl_null(g_pmbu_d[l_ac].pmbu031) = 0 AND l_chk = 0  THEN
                        LET l_chk = TRUE
                        LET g_pmbu_d[l_ac].pmbu011 = ' '
                        LET g_pmbu_d[l_ac].pmbu032 = ' '
                     END IF
                     IF cl_null(g_pmbu_d[l_ac].pmbu032)  = 0 AND l_chk = 0 THEN
                        LET l_chk = TRUE
                        LET g_pmbu_d[l_ac].pmbu011 = ' '
                        LET g_pmbu_d[l_ac].pmbu031 = ' ' 
                     END IF
                  #有隱藏的欄位，顯現的欄位，一欄位有值，表示另一欄位為無值   
                  WHEN 1   #料件編號隱藏
                     LET g_pmbu_d[l_ac].pmbu011 = ' '
                     IF cl_null(g_pmbu_d[l_ac].pmbu031) AND l_chk = FALSE THEN  
                        LET g_pmbu_d[l_ac].pmbu031 = ' '
                        LET l_chk = TRUE
                     ELSE
                        LET g_pmbu_d[l_ac].pmbu032 = ' '
                        LET l_chk = TRUE
                     END IF
                  WHEN 2   #系列隱藏
                     LET g_pmbu_d[l_ac].pmbu031 = ' '
                     IF cl_null(g_pmbu_d[l_ac].pmbu011) AND l_chk = FALSE THEN
                        LET g_pmbu_d[l_ac].pmbu011 = ' '
                        LET l_chk = TRUE
                     ELSE
                        LET g_pmbu_d[l_ac].pmbu032 = ' '
                        LET l_chk = TRUE
                     END IF
                  WHEN 3   #產品分類隱藏
                     LET g_pmbu_d[l_ac].pmbu032 = ' '
                     IF cl_null(g_pmbu_d[l_ac].pmbu031) AND l_chk = FALSE THEN
                        LET g_pmbu_d[l_ac].pmbu031 = ' '
                        LET l_chk = TRUE
                     ELSE
                        LET g_pmbu_d[l_ac].pmbu011 = ' '
                        LET l_chk = TRUE
                     END IF
                     
               END CASE
               #----塞資料----
               #2015-06-09-----dorislai----end
]]>
  </point>
  <point name="input.body.b_update" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT apmt128_set_pmbu010(g_pmbu_d[l_ac].*) THEN
                  LET g_pmbu_d[l_ac].pmbu010 = 'I'
               ELSE
                  LET g_pmbu_d[l_ac].pmbu010 = 'U'
               END IF
               DISPLAY BY NAME g_pmbu_d[l_ac].pmbu010
               
               #dorislai-20150629-add----(S)
               #新增或編輯時，若料件編號、系列、產品分類皆無值，跳出訊息框 
               LET l_chk2 = TRUE      #讓錯誤訊息只出現一次的開關
               IF g_column_chk = 0 THEN   #無隱藏的欄位              
                  IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu011) AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend="" 
                     LET g_errparam.code   = 'apm-00938'     #料件編號、系列、產品分類請擇一輸入 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err() 
                  
                     LET l_chk2 = FALSE  
                     NEXT FIELD pmbu011 
                  END IF
               END IF
               IF g_column_chk > 0 THEN   #無隱藏的欄位 
                  LET l_msg1 = ''
                  LET l_msg2 = ''
                  LET l_chk = FALSE  #判斷是否有進入
                  CASE g_column_chk
                     WHEN 1 #當料件編號隱藏
                        IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg1
                           CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2
                        END IF
                     WHEN 2 #當系列隱藏
                        IF cl_null(g_pmbu_d[l_ac].pmbu011) AND cl_null(g_pmbu_d[l_ac].pmbu032) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1
                           CALL cl_getmsg('apm-00941',g_lang) RETURNING l_msg2
                           
                        END IF
                        
                     WHEN 3 #當產品分類隱藏
                        IF cl_null(g_pmbu_d[l_ac].pmbu031) AND cl_null(g_pmbu_d[l_ac].pmbu011) THEN
                           LET l_chk = TRUE
                           CALL cl_getmsg('apm-00939',g_lang) RETURNING l_msg1
                           CALL cl_getmsg('apm-00940',g_lang) RETURNING l_msg2
                        END IF
                     
                  END CASE
                  IF l_chk THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend=""
                     LET g_errparam.code="apm-00936"    # %1、%2請擇一輸入
                     LET g_errparam.replace[1] = l_msg1
                     LET g_errparam.replace[2] = l_msg2
                     LET g_errparam.popup=TRUE
                     CALL cl_err()
                     LET l_chk2 = FALSE
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               IF l_cmd = 'a' THEN
                  LET l_cnt = 1  
                  SELECT COUNT(*) INTO l_cnt FROM pmbu_t 
                   WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbt_m.pmbtdocno
                     AND pmbu011 = g_pmbu_d[l_ac].pmbu011
                     AND pmbu012 = g_pmbu_d[l_ac].pmbu012
                     AND pmbu013 = g_pmbu_d[l_ac].pmbu013
                     AND pmbu014 = g_pmbu_d[l_ac].pmbu014
                     AND pmbu015 = g_pmbu_d[l_ac].pmbu015
                     AND pmbu016 = g_pmbu_d[l_ac].pmbu016
                     AND pmbu017 = g_pmbu_d[l_ac].pmbu017
                     AND pmbu018 = g_pmbu_d[l_ac].pmbu018
                     AND pmbu019 = g_pmbu_d[l_ac].pmbu019
                     AND pmbu020 = g_pmbu_d[l_ac].pmbu020
                     AND pmbu021 = g_pmbu_d[l_ac].pmbu021
                     AND pmbu031 = g_pmbu_d[l_ac].pmbu031
                     AND pmbu032 = g_pmbu_d[l_ac].pmbu032

                  IF cl_null(l_cnt) or l_cnt = 0 THEN 
                     INSERT INTO pmbu_t (pmbuent,pmbudocno,pmbu011,pmbu012,pmbu013,pmbu014,
                                         pmbu015,pmbu016,pmbu017,pmbu018,pmbu019,pmbu020,
                                         pmbu021,pmbu031,pmbu032,pmbu010,pmbu022) 
                                 VALUES (g_enterprise,g_pmbt_m.pmbtdocno,g_pmbu_d[l_ac].pmbu011,
                                         g_pmbu_d[l_ac].pmbu012,g_pmbu_d[l_ac].pmbu013,g_pmbu_d[l_ac].pmbu014,
                                         g_pmbu_d[l_ac].pmbu015,g_pmbu_d[l_ac].pmbu016,g_pmbu_d[l_ac].pmbu017,
                                         g_pmbu_d[l_ac].pmbu018,g_pmbu_d[l_ac].pmbu019,g_pmbu_d[l_ac].pmbu020,
                                         g_pmbu_d[l_ac].pmbu021,g_pmbu_d[l_ac].pmbu031,g_pmbu_d[l_ac].pmbu032,
                                         g_pmbu_d[l_ac].pmbu010,g_pmbu_d[l_ac].pmbu022) 
                                         
                     LET g_pmbu_d_t.pmbu018 = g_pmbu_d[l_ac].pmbu018
                     LET g_pmbu_d_t.pmbu011 = g_pmbu_d[l_ac].pmbu011
                     LET g_pmbu_d_t.pmbu012 = g_pmbu_d[l_ac].pmbu012
                     LET g_pmbu_d_t.pmbu031 = g_pmbu_d[l_ac].pmbu031
                     LET g_pmbu_d_t.pmbu032 = g_pmbu_d[l_ac].pmbu032
                     
                     LET g_rec_b = g_rec_b + 1
                     DISPLAY g_rec_b TO FORMONLY.cnt
                  END IF
               END IF               
               #dorislai-20150629-add----(E) 
      ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_pmbu_d[l_ac].pmbu010 = 'I'
            #dorislai-20150629-add----(S)
            LET g_pmbu_d[l_ac].pmbu011 = ' '
            LET g_pmbu_d[l_ac].pmbu031 = ' '
            LET g_pmbu_d[l_ac].pmbu032 = ' '
            #dorislai-20150629-add----(E)
            LET g_pmbu_d[l_ac].pmbu012 = ' '
            LET g_pmbu_d[l_ac].pmbu013 = ' '
            LET g_pmbu_d[l_ac].pmbu014 = ' '
            LET g_pmbu_d[l_ac].pmbu015 = ' '
            LET g_pmbu_d[l_ac].pmbu016 = ' '
            LET g_pmbu_d[l_ac].pmbu017 = ' '
            LET g_pmbu_d[l_ac].pmbu019 = ' '
            LET g_pmbu_d[l_ac].pmbu020 = ' '
            LET g_pmbu_d[l_ac].pmbu021 = ' '
            

            LET g_pmbu_d_t.* = g_pmbu_d[l_ac].*
            LET g_pmbu_d_o.* = g_pmbu_d[l_ac].*]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_set_entry(p_cmd)   
            CALL apmt128_set_no_entry(p_cmd)                                      ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_set_no_entry_b(l_cmd)                                    ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.c.page1.pmbu011" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu011    #給予default值
            #給予arg
            LET g_qryparam.arg1 = 'ALL'
            #若單頭的pmau002不為'ALL',表示有設定某一個採購控制組,
            #那開窗就必須過濾這個控制組可以使用的料件編號
            IF g_pmbt_m.pmbt002 <> 'ALL' THEN
               CALL s_control_get_item_wc(g_pmbt_m.pmbt002) RETURNING l_success,l_wc
               IF l_success THEN 
                  LET g_qryparam.where = l_wc
               END IF
            END IF
            CALL q_imaf001_7()                          #呼叫開窗
            LET g_pmbu_d[l_ac].pmbu011 = g_qryparam.return1     #將開窗取得的值回傳到變數
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu011      #顯示到畫面上
            CALL apmt128_pmbu011_desc()
            NEXT FIELD pmbu011                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.pmbu012" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        LET l_pmbu012_t = g_pmbu_d[l_ac].pmbu012
            CALL s_feature_single(g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012,'ALL','') RETURNING g_success,g_pmbu_d[l_ac].pmbu012
            IF cl_null(g_pmbu_d[l_ac].pmbu012) THEN
               LET g_pmbu_d[l_ac].pmbu012 = l_pmbu012_t
            END IF
            DISPLAY g_pmbu_d[l_ac].pmbu012 TO pmbu012
#           NEXT FIELD pmbu012]]>
  </point>
  <point name="input.c.page1.pmbu013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu013             #給予default值

            #給予arg

            CALL q_ooce001_1()                                #呼叫開窗

            LET g_pmbu_d[l_ac].pmbu013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbu_d[l_ac].pmbu013 TO pmbu013              #顯示到畫面上

            NEXT FIELD pmbu013                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmbu014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu014             #給予default值

            #給予arg
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) THEN 
               LET g_qryparam.where = " oocg002 ='",g_pmbu_d[l_ac].pmbu013,"'"
            END IF
            CALL q_oocg001()                                #呼叫開窗

            LET g_pmbu_d[l_ac].pmbu014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbu_d[l_ac].pmbu014 TO pmbu014              #顯示到畫面上

            NEXT FIELD pmbu014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmbu015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu015             #給予default值

            #給予arg
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu013) AND cl_null(g_pmbu_d[l_ac].pmbu014) THEN 
               LET g_qryparam.where = " ooci001 IN (SELECT oocg001 FROM oocg_t WHERE oocgent = ",g_enterprise,
                                      " AND oocg002 = '",g_pmbu_d[l_ac].pmbu013,"')"
            END IF  
             
            IF NOT cl_null(g_pmbu_d[l_ac].pmbu014) THEN 
               LET g_qryparam.where = " ooci001 = '",g_pmbu_d[l_ac].pmbu014,"'" 
            END IF
            CALL q_ooci002()                                #呼叫開窗

            LET g_pmbu_d[l_ac].pmbu015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbu_d[l_ac].pmbu015 TO pmbu015              #顯示到畫面上

            NEXT FIELD pmbu015                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmbu016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "253" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_pmbu_d[l_ac].pmbu016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbu_d[l_ac].pmbu016 TO pmbu016              #顯示到畫面上

            NEXT FIELD pmbu016                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmbu017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu017             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "251" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_pmbu_d[l_ac].pmbu017 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbu_d[l_ac].pmbu017 TO pmbu017              #顯示到畫面上

            NEXT FIELD pmbu017                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmbu018" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生  
            LET l_chk = FALSE                 #避免輸入料件編號出現二次開窗
            
            #開窗i段
            #若料件編號有值
			   
			   IF NOT cl_null(g_pmbu_d[l_ac].pmbu011) THEN
			      INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu018             #給予default值
               LET g_qryparam.arg1 = g_pmbu_d[l_ac].pmbu011
               CALL q_imao002()                                             #呼叫開窗
               LET g_pmbu_d[l_ac].pmbu018 = g_qryparam.return1              #將開窗取得的值回傳到變數
               LET l_chk = TRUE  
            END IF
                  
            #2015-06-09----dorislai----add
            #若系列或產品分類有值，抓取aimm200中的單位開窗
            IF (NOT cl_null(g_pmbu_d[l_ac].pmbu031)) OR cl_null(g_pmbu_d[l_ac].pmbu032) = FALSE THEN
               #先判斷是哪個欄位有值，給予sql查詢條件
                  #---用系列去抓料件編號
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu031)THEN
                  LET l_sql = "SELECT imaa001 FROM imaa_t ",
                              "WHERE imaaent = '"||g_enterprise||"' AND imaa127 = '"||g_pmbu_d[l_ac].pmbu031||"'",
                              "ORDER BY imaa001" 
               END IF
                  #---用產品分類抓料件編號
               IF NOT cl_null(g_pmbu_d[l_ac].pmbu032)THEN
                  LET l_sql = "SELECT imaa001 FROM imaa_t ",
                              "WHERE imaaent = '"||g_enterprise||"' AND imaa009 = '"||g_pmbu_d[l_ac].pmbu032||"'",
                              "ORDER BY imaa001" 
               END IF
                              
               PREPARE apmt128_get_imaa001_open_pre FROM l_sql
               DECLARE apmt128_get_imaa001_open_curs CURSOR FOR apmt128_get_imaa001_open_pre
               #先清空值，避免殘留舊值
               LET l_imaa001 = ''
               LET l_str = ''
               LET l_str_cnt = 1
               #一筆一筆比對是否有符合任一 料件編號中的可使用單位
               FOREACH apmt128_get_imaa001_open_curs INTO l_imaa001
                  #抓取到第一筆資料時，開始組字串
                  IF l_str_cnt = 1 THEN
                     LET l_str = "'",l_imaa001,"'"
                  #抓取道第二筆資料時(含第二筆)，接著第一筆或先前的字串繼續串字串
                  ELSE
                     LET l_str = l_str||",'"||l_imaa001||"'"
                  END IF
                  LET l_str_cnt = l_str_cnt + 1 #筆數增加，避免重複判斷是第一筆資料
               END FOREACH
               FREE apmt128_get_imaa001_open_pre#已使用完畢，釋放
               
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
			      LET g_qryparam.reqry = FALSE
			      #依是否抓到料號，來決定g_qryparam.where值
               IF cl_null(l_str) THEN   #沒抓到對應的料號                  
                  LET g_qryparam.where = "imao001 = ''"
               ELSE
                  LET g_qryparam.where = "imao001 IN ("||l_str||")"#增加q_imao002_01的條件判斷
               END IF
               CALL q_imao002_01()
               LET g_pmbu_d[l_ac].pmbu018 = g_qryparam.return1
            ELSE
               IF l_chk = FALSE THEN
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
			         LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu018   #給予default值
                  #給予arg
                  CALL q_ooca001_1()                          #呼叫開窗
                  LET g_pmbu_d[l_ac].pmbu018 = g_qryparam.return1
               END IF                
            END IF
            
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu018      #顯示到畫面上
            CALL apmt128_pmbu018_desc()
            NEXT FIELD pmbu018                          #返回原欄位
            #2015-06-09----dorislai----end
      

]]>
  </point>
  <point name="input.c.page1.pmbu019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu019   #給予default值
            #給予arg
            LET g_qryparam.arg1 = 'ALL'
            CALL q_oodb002_3()                                 #呼叫開窗
            LET g_pmbu_d[l_ac].pmbu019 = g_qryparam.return1    #將開窗取得的值回傳到變數
            DISPLAY g_pmbu_d[l_ac].pmbu019 TO pmbu019          #顯示到畫面上
            NEXT FIELD pmbu019                                 #返回原欄位]]>
  </point>
  <point name="input.c.page1.pmbu020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu020   #給予default值
            #給予arg
            CALL q_ooib002_1()                                 #呼叫開窗
            LET g_pmbu_d[l_ac].pmbu020 = g_qryparam.return1    #將開窗取得的值回傳到變數
            DISPLAY g_pmbu_d[l_ac].pmbu020 TO pmbu020          #顯示到畫面上
            NEXT FIELD pmbu020                                 #返回原欄位]]>
  </point>
  <point name="input.c.page1.pmbu021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu021   #給予default值
            #給予arg
            LET g_qryparam.arg1 = "238"  
            CALL q_oocq002()                                   #呼叫開窗
            LET g_pmbu_d[l_ac].pmbu021 = g_qryparam.return1    #將開窗取得的值回傳到變數
            DISPLAY g_pmbu_d[l_ac].pmbu021 TO pmbu021          #顯示到畫面上
            NEXT FIELD pmbu021                                 #返回原欄位]]>
  </point>
  <point name="input.c.page1.pmbu022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.pmbu031" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu031             #給予default值
            LET g_qryparam.arg1 = "2003" 
            CALL q_oocq002()                                #呼叫開窗
            LET g_pmbu_d[l_ac].pmbu031 = g_qryparam.return1              
            DISPLAY g_pmbu_d[l_ac].pmbu031 TO pmbu031            
            CALL apmt128_pmbu031_desc()
            NEXT FIELD pmbu031                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmbu032" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmbu_d[l_ac].pmbu032  #給予default值
            CALL q_rtax001()                                  #呼叫開窗
            LET g_pmbu_d[l_ac].pmbu032 = g_qryparam.return1              
            DISPLAY BY NAME g_pmbu_d[l_ac].pmbu032         
            CALL apmt128_pmbu032_desc()
            NEXT FIELD pmbu032                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbt001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '14'
            CALL q_ooal002_0()                                #呼叫開窗

            LET g_pmbt_m.pmbt001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbt001 TO pmbt001              #顯示到畫面上

            NEXT FIELD pmbt001                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbt002             #給予default值

            #給予arg

            CALL q_ooha001_4()                                #呼叫開窗

            LET g_pmbt_m.pmbt002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbt002 TO pmbt002              #顯示到畫面上

            NEXT FIELD pmbt002                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbt003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "ALL" #

            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_pmbt_m.pmbt003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbt003 TO pmbt003              #顯示到畫面上

            NEXT FIELD pmbt003                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbt004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2" #

            CALL q_ooef001_4()                                #呼叫開窗

            LET g_pmbt_m.pmbt004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbt004 TO pmbt004              #顯示到畫面上

            NEXT FIELD pmbt004                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbt005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "275" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_pmbt_m.pmbt005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbt005 TO pmbt005              #顯示到畫面上

            NEXT FIELD pmbt005                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.pmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.pmbt900" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbt900             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_pmbt_m.pmbt900 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbt900 TO pmbt900              #顯示到畫面上

            NEXT FIELD pmbt900                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbt901" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbt901             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_pmbt_m.pmbtdocdt #

            CALL q_ooeg001()                                #呼叫開窗

            LET g_pmbt_m.pmbt901 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbt901 TO pmbt901              #顯示到畫面上

            NEXT FIELD pmbt901                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbtdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.pmbtdocno" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbt_m.pmbtdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef.ooef004 #
            LET g_qryparam.arg2 = g_prog

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_pmbt_m.pmbtdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbt_m.pmbtdocno TO pmbtdocno              #顯示到畫面上

            NEXT FIELD pmbtdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.pmbtstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.define" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_pmbu012_t           LIKE pmbu_t.pmbu012
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_wc                  STRING
   DEFINE  l_pmbu011_str         STRING
   DEFINE  l_sql                 STRING
   DEFINE  l_msg                 STRING                               #接收回傳的字串
   DEFINE  l_msg1                STRING                               #接收apm-00937或axm-00935 %1 的替代值
   DEFINE  l_msg2                STRING                               #接收apm-00937或axm-00935 %2 的替代值
   DEFINE  l_msg3                STRING                               #接收apm-00935 %3 的替代值
   DEFINE  l_msg4                STRING                               #接收apm-00935 %4 的替代值
   DEFINE  l_chk                 LIKE  type_t.num10                   #確認是否有資料筆數
   DEFINE  l_fie_chk             LIKE  type_t.num5                    #判斷產品特徵是否要開啟元件
   DEFINE  l_chk2                LIKE  type_t.num5                    #避免AFTER ROW、AFTER INSERT、ON ROW CHANGE的訊息重複出現
   DEFINE  l_imaa001             LIKE  type_t.chr100                  #接收抓取到的料件編號值
   DEFINE  l_str                 STRING                               #串料件編號的字串
   DEFINE  l_str_cnt             LIKE  type_t.num10                   #計算接收字串次數
   DEFINE  l_del_chk             LIKE  type_t.num5                    #判斷是否有進入刪除資料 
   DEFINE  l_pmbu                RECORD LIKE pmbu_t.*]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page1.pmbu011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu021" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.pmbu022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt900" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbt901" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbtdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbtdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.pmbtstus" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                           IF NOT apmt128_get_docno() THEN
                  LET g_pmbt_m_t.pmbtdocno = g_pmbt_m.pmbtdocno
                  NEXT FIELD pmbtdocno
               ELSE
                  CALL apmt128_set_entry('')
                  CALL apmt128_set_no_entry('')
               END IF
               IF cl_null(g_pmbt_m.pmbt005) THEN
                  LET g_pmbt_m.pmbt005 = 'ALL'
                  DISPLAY BY NAME g_pmbt_m.pmbt005
                  CALL apmt128_pmbt005_desc()
               END IF
               ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmt128_set_entry(p_cmd)   
            CALL apmt128_set_no_entry(p_cmd)             ]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                              LET g_pmbt_m.pmbtdocdt = g_today
      LET g_pmbt_m.pmbt900 = g_user
      SELECT ooag003 INTO g_pmbt_m.pmbt901 FROM ooag_t
       WHERE ooag001 = g_pmbt_m.pmbt900 AND ooagent = g_enterprise
      CALL apmt128_pmbt900_desc()
      CALL apmt128_pmbt901_desc()

      CALL apmt128_default_pmbt006() RETURNING g_pmbt_m.pmbt006 
      LET g_pmbt_m_t.* = g_pmbt_m.*]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      #2015-06-09---dorislai----add
      #----塞資料----
      LET l_chk = FALSE #預設FALSE,假設尚未進行塞資料動作；若TRUE，表示已有給資料，後面欄位無需再進入
      CASE g_column_chk            #給key欄位值，避免發生新增錯誤狀況
         WHEN 0   #無隱藏欄位
            IF cl_null(g_pmbu_d[l_ac].pmbu011) = 0 AND l_chk = 0 THEN
               LET ps_keys[13] = ' '
               LET ps_keys[14] = ' '
               LET l_chk = TRUE  
            END IF
            IF cl_null(g_pmbu_d[l_ac].pmbu031) = 0 AND l_chk = 0  THEN
               LET ps_keys[2]  = ' '
               LET ps_keys[14] = ' '
               LET l_chk = TRUE  
            END IF
            IF cl_null(g_pmbu_d[l_ac].pmbu032)  = 0 AND l_chk = 0 THEN
               LET ps_keys[2]  = ' '
               LET ps_keys[13] = ' '
               LET l_chk = TRUE  
            END IF
         #有隱藏的欄位，顯現的欄位，一欄位有值，表示另一欄位為無值   
         WHEN 1   #料件編號隱藏
            LET ps_keys[2] = ' '
            IF cl_null(g_pmbu_d[l_ac].pmbu031) AND l_chk = 0 THEN  
               LET ps_keys[13] = ' '
            ELSE
               LET ps_keys[14] = ' '
            END IF
         WHEN 2   #系列隱藏
            LET ps_keys[13] = ' '
            IF cl_null(g_pmbu_d[l_ac].pmbu011) AND l_chk = 0 THEN
               LET ps_keys[2] = ' '
            ELSE
               LET ps_keys[14] = ' '
            END IF
         WHEN 3   #產品分類隱藏
            LET ps_keys[14] = ' '
            IF cl_null(g_pmbu_d[l_ac].pmbu031) AND l_chk = 0 THEN
               LET ps_keys[13] = ' '
            ELSE
               LET ps_keys[2] = ' '
            END IF
            
      END CASE
      #----塞資料----
      #2015-06-09----dorislai----end                  ]]>
  </point>
  <point name="insert_b.define" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_chk       LIKE type_t.num5          ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE i    LIKE type_t.num5]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT * INTO g_ooef.* FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   FOR i = 1 TO 2
      LET g_argv[i] = cl_replace_str(g_argv[i], '\"', '')
   END FOR
   LET g_pmas001 = g_argv[2]]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.demo" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aooi360_02('6',g_prog,g_pmbt_m.pmbtdocno,'','','','','','','','','')]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="modify.before_input" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_pmbt_m.pmbtstus MATCHES "[DR]" THEN 
         LET g_pmbt_m.pmbtstus = "N"
      END IF
     
      LET g_pmbt_m_t.* = g_pmbt_m.*]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_pmbt_m.pmbtstus = 'N'
   LET g_pmbt_m.pmbtdocdt = g_today
   LET g_pmbt_m_t.* = g_pmbt_m.*]]>
  </point>
  <point name="send.before_cli" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DECLARE sel_pmbu_curs_s CURSOR FOR 
    SELECT * FROM pmbu_t
     WHERE pmbuent = g_enterprise
       AND pmbudocno = g_pmbt_m.pmbtdocno
   FOREACH sel_pmbu_curs_s INTO l_pmbu.*
      IF NOT apmt128_pmau_exists(l_pmbu.*) THEN
         RETURN FALSE
      END IF
   END FOREACH
   IF NOT s_apmt128_conf_chk(g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtstus) THEN
      RETURN FALSE
   END IF]]>
  </point>
  <point name="send.before_send" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="send.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmbu   RECORD LIKE pmbu_t.*]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="2" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_pmbt_m.pmbtstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("pmbtdocno,pmbtdocdt",TRUE)
   CALL cl_set_comp_entry("pmbt001,pmbt002,pmbt003,pmbt005",TRUE)            ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_comp_entry("pmbu012",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_pmbt_m.pmbtdocno) AND NOT cl_null(g_pmbt_m.pmbtdocdt) THEN
      CALL cl_set_comp_entry("pmbtdocno,pmbtdocdt",FALSE)
   END IF
   
   LET l_n = 0 
   SELECT COUNT(*) INTO l_n FROM pmbu_t 
    WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbt_m.pmbtdocno
   IF l_n > 0 THEN  
      CALL cl_set_comp_entry("pmbt001,pmbt002,pmbt003,pmbt005",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_n     LIKE type_t.num5         ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT apmt128_imaa005_exists() THEN
      #dorislai-20150629-mark----(S)
      #產品特徵必輸，所以不用補空白
#      LET g_pmbu_d[l_ac].pmbu012 = ' '
#      LET g_pmbu_d[l_ac].pmbu012_desc = ' '
#      DISPLAY BY NAME g_pmbu_d[l_ac].pmbu012,g_pmbu_d[l_ac].pmbu012_desc
      #dorislai-20150629-mark----(E)
      CALL cl_set_comp_entry("pmbu012",FALSE)
   END IF]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_feature_description(g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012) RETURNING g_success,g_pmbu_d[l_ac].pmbu012_desc 
      CALL apmt128_pmbu011_desc()
      CALL apmt128_pmbu013_desc()
      CALL apmt128_pmbu014_desc()
      CALL apmt128_pmbu015_desc()
      CALL apmt128_pmbu016_desc()
      CALL apmt128_pmbu017_desc()
      CALL apmt128_pmbu018_desc()
      CALL apmt128_pmbu019_desc()
      CALL apmt128_pmbu020_desc()
      CALL apmt128_pmbu021_desc()]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="show.head.reference" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_pmbt_m.pmbtdocno) THEN
      CALL apmt128_pmbudocno_desc('2')
   END IF
   CALL apmt128_pmbt900_desc()
   CALL apmt128_pmbt901_desc()
   CALL apmt128_pmbt001_desc()
   CALL apmt128_pmbt002_desc()
   CALL apmt128_pmbt003_desc()
   CALL apmt128_pmbt005_desc()
   
#   LET g_pmbt_m.pmbtownid_desc = cl_get_username(g_pmbt_m.pmbtownid)
#   LET g_pmbt_m.pmbtowndp_desc = cl_get_deptname(g_pmbt_m.pmbtowndp)
#   LET g_pmbt_m.pmbtcrtid_desc = cl_get_username(g_pmbt_m.pmbtcrtid)
#   LET g_pmbt_m.pmbtcrtdp_desc = cl_get_deptname(g_pmbt_m.pmbtcrtdp)
#   LET g_pmbt_m.pmbtmodid_desc = cl_get_username(g_pmbt_m.pmbtmodid)
#   LET g_pmbt_m.pmbtcnfid_desc = cl_get_username(g_pmbt_m.pmbtcnfid)

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbtownid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbtownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbtownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbtowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbtowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbtowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbtcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbtcrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbtcrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbtcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbtcrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbtcrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbtmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbtmodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbtmodid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmbt_m.pmbtcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_pmbt_m.pmbtcnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmbt_m.pmbtcnfid_desc]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="statechange.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   IF g_pmbt_m.pmbtstus MATCHES '[YX]' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF lc_state = 'Y' THEN
      DECLARE sel_pmbu_curs CURSOR FOR 
       SELECT * FROM pmbu_t
        WHERE pmbuent = g_enterprise
          AND pmbudocno = g_pmbt_m.pmbtdocno
      FOREACH sel_pmbu_curs INTO l_pmbu.*
          IF NOT apmt128_pmau_exists(l_pmbu.*) THEN
            RETURN 
         END IF
      END FOREACH
   END IF
   
   CASE
      WHEN lc_state = 'Y'
         IF cl_ask_confirm('lib-054') THEN
            IF s_apmt128_conf_chk(g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtstus) THEN
               CALL s_transaction_begin()
               IF s_apmt128_conf_upd(g_pmbt_m.pmbtdocno) THEN
                  IF NOT s_apmt128_carry_upd(g_pmbt_m.pmbtdocno) THEN
                     CALL s_transaction_end('N','0')
                     RETURN 
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
               ELSE
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            RETURN
         END IF
      WHEN lc_state = 'N'
         IF cl_ask_confirm('lib-017') THEN
            IF s_apmt128_unvoid_chk(g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtstus) THEN
               CALL s_transaction_begin()
               IF NOT s_apmt128_unvoid_upd(g_pmbt_m.pmbtdocno) THEN
                  CALL s_transaction_end('N','0')
                  RETURN 
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            ELSE
               RETURN 
            END IF
         ELSE
            RETURN
         END IF
      WHEN lc_state = 'X'
         IF cl_ask_confirm('lib-016') THEN
            IF s_apmt128_void_chk(g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtstus) THEN
               CALL s_transaction_begin()
               IF NOT s_apmt128_void_upd(g_pmbt_m.pmbtdocno) THEN
                  CALL s_transaction_end('N','0')
                  RETURN 
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            ELSE
               RETURN
            END IF
         ELSE   
            RETURN
         END IF
   END CASE]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_pmbt_m.pmbtstus = 'Y' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("open,invalid",TRUE)
      IF g_pmbt_m.pmbtstus = 'X' THEN
         CALL cl_set_act_visible("invalid,confirmed",FALSE)
      END IF
      IF g_pmbt_m.pmbtstus = 'N' THEN
         CALL cl_set_act_visible("open",FALSE)
      END IF
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CASE g_pmbt_m.pmbtstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
      END CASE
      ]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               DEFINE l_open_state  LIKE type_t.chr1
   DEFINE l_pmbu   RECORD LIKE pmbu_t.*]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.before_update" order="" ver="4" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      
      
                  ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <section id="apmt128.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION apmt128_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.b_fill" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apmt128_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_pmbu_d.clear()    #g_pmbu_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF apmt128_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE pmbu010,pmbu011,pmbu012,pmbu031,pmbu032,pmbu013,pmbu014,pmbu015, 
             pmbu016,pmbu017,pmbu018,pmbu019,pmbu020,pmbu021,pmbu022 ,t1.imaal003 ,t2.oocql004 ,t4.oocel003 , 
             t5.oocgl003 ,t6.oocil004 ,t7.oocql004 ,t8.oocql004 ,t9.oocal003 ,t10.oodbl004 ,t11.ooibl004 , 
             t12.oocql004 FROM pmbu_t",   
                     " INNER JOIN pmbt_t ON pmbtdocno = pmbudocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=pmbu011 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2003' AND t2.oocql002=pmbu031 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocel_t t4 ON t4.oocelent='"||g_enterprise||"' AND t4.oocel001=pmbu013 AND t4.oocel002='"||g_dlang||"' ",
               " LEFT JOIN oocgl_t t5 ON t5.oocglent='"||g_enterprise||"' AND t5.oocgl001=pmbu014 AND t5.oocgl002='"||g_dlang||"' ",
               " LEFT JOIN oocil_t t6 ON t6.oocilent='"||g_enterprise||"' AND t6.oocil001=pmbu014 AND t6.oocil002=pmbu015 AND t6.oocil003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='253' AND t7.oocql002=pmbu016 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='251' AND t8.oocql002=pmbu017 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t9 ON t9.oocalent='"||g_enterprise||"' AND t9.oocal001=pmbu018 AND t9.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oodbl_t t10 ON t10.oodblent='"||g_enterprise||"' AND t10.oodbl001='' AND t10.oodbl002=pmbu019 AND t10.oodbl003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t11 ON t11.ooiblent='"||g_enterprise||"' AND t11.ooibl002=pmbu020 AND t11.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t12 ON t12.oocqlent='"||g_enterprise||"' AND t12.oocql001='238' AND t12.oocql002=pmbu021 AND t12.oocql003='"||g_dlang||"' ",
 
                     " WHERE pmbuent=? AND pmbudocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmbu_t.pmbu011,pmbu_t.pmbu012,pmbu_t.pmbu013,pmbu_t.pmbu014,pmbu_t.pmbu015,pmbu_t.pmbu016,pmbu_t.pmbu017,pmbu_t.pmbu018,pmbu_t.pmbu019,pmbu_t.pmbu020,pmbu_t.pmbu021,pmbu_t.pmbu031,pmbu_t.pmbu032"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmt128_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR apmt128_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_pmbt_m.pmbtdocno
                                               
      FOREACH b_fill_cs INTO g_pmbu_d[l_ac].pmbu010,g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012,g_pmbu_d[l_ac].pmbu031, 
          g_pmbu_d[l_ac].pmbu032,g_pmbu_d[l_ac].pmbu013,g_pmbu_d[l_ac].pmbu014,g_pmbu_d[l_ac].pmbu015, 
          g_pmbu_d[l_ac].pmbu016,g_pmbu_d[l_ac].pmbu017,g_pmbu_d[l_ac].pmbu018,g_pmbu_d[l_ac].pmbu019, 
          g_pmbu_d[l_ac].pmbu020,g_pmbu_d[l_ac].pmbu021,g_pmbu_d[l_ac].pmbu022,g_pmbu_d[l_ac].pmbu011_desc, 
          g_pmbu_d[l_ac].pmbu031_desc,g_pmbu_d[l_ac].pmbu013_desc,g_pmbu_d[l_ac].pmbu014_desc,g_pmbu_d[l_ac].pmbu015_desc, 
          g_pmbu_d[l_ac].pmbu016_desc,g_pmbu_d[l_ac].pmbu017_desc,g_pmbu_d[l_ac].pmbu018_desc,g_pmbu_d[l_ac].pmbu019_desc, 
          g_pmbu_d[l_ac].pmbu020_desc,g_pmbu_d[l_ac].pmbu021_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_pmbu_d.deleteElement(g_pmbu_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apmt128_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_pmbu_d.getLength()
      LET g_pmbu_d_mask_o[l_ac].* =  g_pmbu_d[l_ac].*
      CALL apmt128_pmbu_t_mask()
      LET g_pmbu_d_mask_n[l_ac].* =  g_pmbu_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.b_fill2" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apmt128_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apmt128_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.browser_fill" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apmt128_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE pmbtdocno ",
                      " FROM pmbt_t ",
                      " ",
                      " LEFT JOIN pmbu_t ON pmbuent = pmbtent AND pmbtdocno = pmbudocno ", "  ",
                      #add-point:browser_fill段sql(pmbu_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE pmbtent = '" ||g_enterprise|| "' AND pmbuent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("pmbt_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE pmbtdocno ",
                      " FROM pmbt_t ", 
                      "  ",
                      "  ",
                      " WHERE pmbtent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("pmbt_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_pmbt_m.* TO NULL
      CALL g_pmbu_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.pmbtdocno,t0.pmbtdocdt,t0.pmbt900,t0.pmbt901,t0.pmbt007 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.pmbtstus,t0.pmbtdocno,t0.pmbtdocdt,t0.pmbt900,t0.pmbt901,t0.pmbt007, 
       t1.oobal004 ,t2.ooag011 ,t3.ooefl003 ",
               " FROM pmbt_t t0",
               "  ",
               "  LEFT JOIN pmbu_t ON pmbuent = pmbtent AND pmbtdocno = pmbudocno ", "  ", 
               #add-point:browser_fill段sql(pmbu_t1)
               {<point name="browser_fill.join.pmbu_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN oobal_t t1 ON t1.oobalent='"||g_enterprise||"' AND t1.oobal001='' AND t1.oobal002=t0.pmbtdocno AND t1.oobal003='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.pmbt900  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.pmbt901 AND t3.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.pmbtent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("pmbt_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY pmbtdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"pmbt_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_pmbtdocno,g_browser[g_cnt].b_pmbtdocdt, 
       g_browser[g_cnt].b_pmbt900,g_browser[g_cnt].b_pmbt901,g_browser[g_cnt].b_pmbt007,g_browser[g_cnt].b_pmbtdocno_desc, 
       g_browser[g_cnt].b_pmbt900_desc,g_browser[g_cnt].b_pmbt901_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL apmt128_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_pmbtdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.construct" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apmt128_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_pmbt_m.* TO NULL
   CALL g_pmbu_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON pmbtdocno,pmbtdocdt,pmbt900,pmbt901,pmbtstus,pmbt001,pmbt002,pmbt003, 
          pmbt005,pmbt007,pmbtownid,pmbtowndp,pmbtcrtid,pmbtcrtdp,pmbtcrtdt,pmbtmodid,pmbtmoddt,pmbtcnfid, 
          pmbtcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<pmbtcrtdt>>----
         AFTER FIELD pmbtcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<pmbtmoddt>>----
         AFTER FIELD pmbtmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmbtcnfdt>>----
         AFTER FIELD pmbtcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmbtpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.pmbtdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtdocno
            #add-point:ON ACTION controlp INFIELD pmbtdocno
            {<point name="construct.c.pmbtdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtdocno
            #add-point:BEFORE FIELD pmbtdocno
            {<point name="construct.b.pmbtdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtdocno
            
            #add-point:AFTER FIELD pmbtdocno
            {<point name="construct.a.pmbtdocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtdocdt
            #add-point:BEFORE FIELD pmbtdocdt
            {<point name="construct.b.pmbtdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtdocdt
            
            #add-point:AFTER FIELD pmbtdocdt
            {<point name="construct.a.pmbtdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbtdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtdocdt
            #add-point:ON ACTION controlp INFIELD pmbtdocdt
            {<point name="construct.c.pmbtdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.pmbt900
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt900
            #add-point:ON ACTION controlp INFIELD pmbt900
            {<point name="construct.c.pmbt900" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt900
            #add-point:BEFORE FIELD pmbt900
            {<point name="construct.b.pmbt900" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt900
            
            #add-point:AFTER FIELD pmbt900
            {<point name="construct.a.pmbt900" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbt901
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt901
            #add-point:ON ACTION controlp INFIELD pmbt901
            {<point name="construct.c.pmbt901" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt901
            #add-point:BEFORE FIELD pmbt901
            {<point name="construct.b.pmbt901" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt901
            
            #add-point:AFTER FIELD pmbt901
            {<point name="construct.a.pmbt901" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtstus
            #add-point:BEFORE FIELD pmbtstus
            {<point name="construct.b.pmbtstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtstus
            
            #add-point:AFTER FIELD pmbtstus
            {<point name="construct.a.pmbtstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbtstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtstus
            #add-point:ON ACTION controlp INFIELD pmbtstus
            {<point name="construct.c.pmbtstus" />}
            #END add-point
 
         #Ctrlp:construct.c.pmbt001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt001
            #add-point:ON ACTION controlp INFIELD pmbt001
            {<point name="construct.c.pmbt001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt001
            #add-point:BEFORE FIELD pmbt001
            {<point name="construct.b.pmbt001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt001
            
            #add-point:AFTER FIELD pmbt001
            {<point name="construct.a.pmbt001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbt002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt002
            #add-point:ON ACTION controlp INFIELD pmbt002
            {<point name="construct.c.pmbt002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt002
            #add-point:BEFORE FIELD pmbt002
            {<point name="construct.b.pmbt002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt002
            
            #add-point:AFTER FIELD pmbt002
            {<point name="construct.a.pmbt002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbt003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt003
            #add-point:ON ACTION controlp INFIELD pmbt003
            {<point name="construct.c.pmbt003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt003
            #add-point:BEFORE FIELD pmbt003
            {<point name="construct.b.pmbt003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt003
            
            #add-point:AFTER FIELD pmbt003
            {<point name="construct.a.pmbt003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbt005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt005
            #add-point:ON ACTION controlp INFIELD pmbt005
            {<point name="construct.c.pmbt005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt005
            #add-point:BEFORE FIELD pmbt005
            {<point name="construct.b.pmbt005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt005
            
            #add-point:AFTER FIELD pmbt005
            {<point name="construct.a.pmbt005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt007
            #add-point:BEFORE FIELD pmbt007
            {<point name="construct.b.pmbt007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt007
            
            #add-point:AFTER FIELD pmbt007
            {<point name="construct.a.pmbt007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbt007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt007
            #add-point:ON ACTION controlp INFIELD pmbt007
            {<point name="construct.c.pmbt007" />}
            #END add-point
 
         #Ctrlp:construct.c.pmbtownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtownid
            #add-point:ON ACTION controlp INFIELD pmbtownid
            {<point name="construct.c.pmbtownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtownid
            #add-point:BEFORE FIELD pmbtownid
            {<point name="construct.b.pmbtownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtownid
            
            #add-point:AFTER FIELD pmbtownid
            {<point name="construct.a.pmbtownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbtowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtowndp
            #add-point:ON ACTION controlp INFIELD pmbtowndp
            {<point name="construct.c.pmbtowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtowndp
            #add-point:BEFORE FIELD pmbtowndp
            {<point name="construct.b.pmbtowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtowndp
            
            #add-point:AFTER FIELD pmbtowndp
            {<point name="construct.a.pmbtowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbtcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtcrtid
            #add-point:ON ACTION controlp INFIELD pmbtcrtid
            {<point name="construct.c.pmbtcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtcrtid
            #add-point:BEFORE FIELD pmbtcrtid
            {<point name="construct.b.pmbtcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtcrtid
            
            #add-point:AFTER FIELD pmbtcrtid
            {<point name="construct.a.pmbtcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbtcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtcrtdp
            #add-point:ON ACTION controlp INFIELD pmbtcrtdp
            {<point name="construct.c.pmbtcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtcrtdp
            #add-point:BEFORE FIELD pmbtcrtdp
            {<point name="construct.b.pmbtcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtcrtdp
            
            #add-point:AFTER FIELD pmbtcrtdp
            {<point name="construct.a.pmbtcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtcrtdt
            #add-point:BEFORE FIELD pmbtcrtdt
            {<point name="construct.b.pmbtcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.pmbtmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtmodid
            #add-point:ON ACTION controlp INFIELD pmbtmodid
            {<point name="construct.c.pmbtmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtmodid
            #add-point:BEFORE FIELD pmbtmodid
            {<point name="construct.b.pmbtmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtmodid
            
            #add-point:AFTER FIELD pmbtmodid
            {<point name="construct.a.pmbtmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtmoddt
            #add-point:BEFORE FIELD pmbtmoddt
            {<point name="construct.b.pmbtmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.pmbtcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtcnfid
            #add-point:ON ACTION controlp INFIELD pmbtcnfid
            {<point name="construct.c.pmbtcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtcnfid
            #add-point:BEFORE FIELD pmbtcnfid
            {<point name="construct.b.pmbtcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtcnfid
            
            #add-point:AFTER FIELD pmbtcnfid
            {<point name="construct.a.pmbtcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtcnfdt
            #add-point:BEFORE FIELD pmbtcnfdt
            {<point name="construct.b.pmbtcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON pmbu010,pmbu011,pmbu012,pmbu012_desc,pmbu031,pmbu032,pmbu013,pmbu014, 
          pmbu015,pmbu016,pmbu017,pmbu018,pmbu019,pmbu020,pmbu021,pmbu022
           FROM s_detail1[1].pmbu010,s_detail1[1].pmbu011,s_detail1[1].pmbu012,s_detail1[1].pmbu012_desc, 
               s_detail1[1].pmbu031,s_detail1[1].pmbu032,s_detail1[1].pmbu013,s_detail1[1].pmbu014,s_detail1[1].pmbu015, 
               s_detail1[1].pmbu016,s_detail1[1].pmbu017,s_detail1[1].pmbu018,s_detail1[1].pmbu019,s_detail1[1].pmbu020, 
               s_detail1[1].pmbu021,s_detail1[1].pmbu022
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu010
            #add-point:BEFORE FIELD pmbu010
            {<point name="construct.b.page1.pmbu010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu010
            
            #add-point:AFTER FIELD pmbu010
            {<point name="construct.a.page1.pmbu010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu010
            #add-point:ON ACTION controlp INFIELD pmbu010
            {<point name="construct.c.page1.pmbu010" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.pmbu011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu011
            #add-point:ON ACTION controlp INFIELD pmbu011
            {<point name="construct.c.page1.pmbu011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu011
            #add-point:BEFORE FIELD pmbu011
            {<point name="construct.b.page1.pmbu011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu011
            
            #add-point:AFTER FIELD pmbu011
            {<point name="construct.a.page1.pmbu011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu012
            #add-point:BEFORE FIELD pmbu012
            {<point name="construct.b.page1.pmbu012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu012
            
            #add-point:AFTER FIELD pmbu012
            {<point name="construct.a.page1.pmbu012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu012
            #add-point:ON ACTION controlp INFIELD pmbu012
            {<point name="construct.c.page1.pmbu012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu012_desc
            #add-point:BEFORE FIELD pmbu012_desc
            {<point name="construct.b.page1.pmbu012_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu012_desc
            
            #add-point:AFTER FIELD pmbu012_desc
            {<point name="construct.a.page1.pmbu012_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu012_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu012_desc
            #add-point:ON ACTION controlp INFIELD pmbu012_desc
            {<point name="construct.c.page1.pmbu012_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.pmbu031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu031
            #add-point:ON ACTION controlp INFIELD pmbu031
            {<point name="construct.c.page1.pmbu031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu031
            #add-point:BEFORE FIELD pmbu031
            {<point name="construct.b.page1.pmbu031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu031
            
            #add-point:AFTER FIELD pmbu031
            {<point name="construct.a.page1.pmbu031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu032
            #add-point:ON ACTION controlp INFIELD pmbu032
            {<point name="construct.c.page1.pmbu032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu032
            #add-point:BEFORE FIELD pmbu032
            {<point name="construct.b.page1.pmbu032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu032
            
            #add-point:AFTER FIELD pmbu032
            {<point name="construct.a.page1.pmbu032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu013
            #add-point:ON ACTION controlp INFIELD pmbu013
            {<point name="construct.c.page1.pmbu013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu013
            #add-point:BEFORE FIELD pmbu013
            {<point name="construct.b.page1.pmbu013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu013
            
            #add-point:AFTER FIELD pmbu013
            {<point name="construct.a.page1.pmbu013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu014
            #add-point:ON ACTION controlp INFIELD pmbu014
            {<point name="construct.c.page1.pmbu014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu014
            #add-point:BEFORE FIELD pmbu014
            {<point name="construct.b.page1.pmbu014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu014
            
            #add-point:AFTER FIELD pmbu014
            {<point name="construct.a.page1.pmbu014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu015
            #add-point:ON ACTION controlp INFIELD pmbu015
            {<point name="construct.c.page1.pmbu015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu015
            #add-point:BEFORE FIELD pmbu015
            {<point name="construct.b.page1.pmbu015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu015
            
            #add-point:AFTER FIELD pmbu015
            {<point name="construct.a.page1.pmbu015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu016
            #add-point:ON ACTION controlp INFIELD pmbu016
            {<point name="construct.c.page1.pmbu016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu016
            #add-point:BEFORE FIELD pmbu016
            {<point name="construct.b.page1.pmbu016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu016
            
            #add-point:AFTER FIELD pmbu016
            {<point name="construct.a.page1.pmbu016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu017
            #add-point:ON ACTION controlp INFIELD pmbu017
            {<point name="construct.c.page1.pmbu017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu017
            #add-point:BEFORE FIELD pmbu017
            {<point name="construct.b.page1.pmbu017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu017
            
            #add-point:AFTER FIELD pmbu017
            {<point name="construct.a.page1.pmbu017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu018
            #add-point:ON ACTION controlp INFIELD pmbu018
            {<point name="construct.c.page1.pmbu018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu018
            #add-point:BEFORE FIELD pmbu018
            {<point name="construct.b.page1.pmbu018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu018
            
            #add-point:AFTER FIELD pmbu018
            {<point name="construct.a.page1.pmbu018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu019
            #add-point:ON ACTION controlp INFIELD pmbu019
            {<point name="construct.c.page1.pmbu019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu019
            #add-point:BEFORE FIELD pmbu019
            {<point name="construct.b.page1.pmbu019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu019
            
            #add-point:AFTER FIELD pmbu019
            {<point name="construct.a.page1.pmbu019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu020
            #add-point:ON ACTION controlp INFIELD pmbu020
            {<point name="construct.c.page1.pmbu020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu020
            #add-point:BEFORE FIELD pmbu020
            {<point name="construct.b.page1.pmbu020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu020
            
            #add-point:AFTER FIELD pmbu020
            {<point name="construct.a.page1.pmbu020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu021
            #add-point:ON ACTION controlp INFIELD pmbu021
            {<point name="construct.c.page1.pmbu021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu021
            #add-point:BEFORE FIELD pmbu021
            {<point name="construct.b.page1.pmbu021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu021
            
            #add-point:AFTER FIELD pmbu021
            {<point name="construct.a.page1.pmbu021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu022
            #add-point:BEFORE FIELD pmbu022
            {<point name="construct.b.page1.pmbu022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu022
            
            #add-point:AFTER FIELD pmbu022
            {<point name="construct.a.page1.pmbu022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmbu022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu022
            #add-point:ON ACTION controlp INFIELD pmbu022
            {<point name="construct.c.page1.pmbu022" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "pmbt_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "pmbu_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.default_search" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apmt128_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pmbtdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "pmbt_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "pmbu_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.delete" ver="24" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION apmt128_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_pmbt_m.pmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN apmt128_cl USING g_enterprise,g_pmbt_m.pmbtdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmt128_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmt128_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt128_master_referesh USING g_pmbt_m.pmbtdocno INTO g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
       g_pmbt_m.pmbtcnfdt,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbt001_desc, 
       g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp_desc, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtcnfid_desc 

   
   #檢查是否允許此動作
   IF NOT apmt128_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmbt_m_mask_o.* =  g_pmbt_m.*
   CALL apmt128_pmbt_t_mask()
   LET g_pmbt_m_mask_n.* =  g_pmbt_m.*
   
   CALL apmt128_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL apmt128_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
 
      DELETE FROM pmbt_t
       WHERE pmbtent = g_enterprise AND pmbtdocno = g_pmbt_m.pmbtdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_pmbt_m.pmbtdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM pmbu_t
       WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbt_m.pmbtdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbu_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE apmt128_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_pmbu_d.clear() 
 
     
      CALL apmt128_ui_browser_refresh()  
      #CALL apmt128_ui_headershow()  
      #CALL apmt128_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL apmt128_browser_fill("")
         CALL apmt128_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE apmt128_cl
 
   #功能已完成,通報訊息中心
   CALL apmt128_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="apmt128.delete_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apmt128_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM pmbu_t
       WHERE pmbuent = g_enterprise AND
         pmbudocno = ps_keys_bak[1] AND pmbu011 = ps_keys_bak[2] AND pmbu012 = ps_keys_bak[3] AND pmbu013 = ps_keys_bak[4] AND pmbu014 = ps_keys_bak[5] AND pmbu015 = ps_keys_bak[6] AND pmbu016 = ps_keys_bak[7] AND pmbu017 = ps_keys_bak[8] AND pmbu018 = ps_keys_bak[9] AND pmbu019 = ps_keys_bak[10] AND pmbu020 = ps_keys_bak[11] AND pmbu021 = ps_keys_bak[12] AND pmbu031 = ps_keys_bak[13] AND pmbu032 = ps_keys_bak[14]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmbu_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.description" ver="91" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:4,PR版次:4) Build-000256
#+ 
#+ Filename...: apmt128
#+ Description: 彈性採購價格申請作業
#+ Creator....: 01996(2014-02-16 13:44:35)
#+ Modifier...: 07024(2015-06-30 19:41:57) -SD/PR-
]]>
  </section>
  <section id="apmt128.detail_reproduce" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION apmt128_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pmbu_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apmt128_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apmt128_detail AS ",
                "SELECT * FROM pmbu_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmt128_detail SELECT * FROM pmbu_t 
                                         WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbtdocno_t
 
   
   #將key修正為調整後   
   UPDATE apmt128_detail 
      #更新key欄位
      SET pmbudocno = g_pmbt_m.pmbtdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO pmbu_t SELECT * FROM apmt128_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmt128_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION apmt128_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.fetch" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apmt128_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_pmbt_m.pmbtdocno = g_browser[g_current_idx].b_pmbtdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apmt128_master_referesh USING g_pmbt_m.pmbtdocno INTO g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
       g_pmbt_m.pmbtcnfdt,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbt001_desc, 
       g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp_desc, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtcnfid_desc 

   
   #遮罩相關處理
   LET g_pmbt_m_mask_o.* =  g_pmbt_m.*
   CALL apmt128_pmbt_t_mask()
   LET g_pmbt_m_mask_n.* =  g_pmbt_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt128_set_act_visible()   
   CALL apmt128_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_pmbt_m_t.* = g_pmbt_m.*
   LET g_pmbt_m_o.* = g_pmbt_m.*
   
   LET g_data_owner = g_pmbt_m.pmbtownid      
   LET g_data_dept  = g_pmbt_m.pmbtowndp
   
   #重新顯示   
   CALL apmt128_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.fill_chk" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION apmt128_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.filter" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION apmt128_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pmbtdocno,pmbtdocdt,pmbt900,pmbt901,pmbt007
                          FROM s_browse[1].b_pmbtdocno,s_browse[1].b_pmbtdocdt,s_browse[1].b_pmbt900, 
                              s_browse[1].b_pmbt901,s_browse[1].b_pmbt007
 
         BEFORE CONSTRUCT
               DISPLAY apmt128_filter_parser('pmbtdocno') TO s_browse[1].b_pmbtdocno
            DISPLAY apmt128_filter_parser('pmbtdocdt') TO s_browse[1].b_pmbtdocdt
            DISPLAY apmt128_filter_parser('pmbt900') TO s_browse[1].b_pmbt900
            DISPLAY apmt128_filter_parser('pmbt901') TO s_browse[1].b_pmbt901
            DISPLAY apmt128_filter_parser('pmbt007') TO s_browse[1].b_pmbt007
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL apmt128_filter_show('pmbtdocno')
   CALL apmt128_filter_show('pmbtdocdt')
   CALL apmt128_filter_show('pmbt900')
   CALL apmt128_filter_show('pmbt901')
   CALL apmt128_filter_show('pmbt007')
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apmt128_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION apmt128_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmt128_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.global" ver="30" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_pmbt_m        RECORD
       pmbtdocno LIKE pmbt_t.pmbtdocno, 
   pmbtdocno_desc LIKE type_t.chr80, 
   pmbtdocdt LIKE pmbt_t.pmbtdocdt, 
   fflabel1_desc LIKE type_t.chr80, 
   pmbt900 LIKE pmbt_t.pmbt900, 
   pmbt900_desc LIKE type_t.chr80, 
   pmbt901 LIKE pmbt_t.pmbt901, 
   pmbt901_desc LIKE type_t.chr80, 
   pmbtstus LIKE pmbt_t.pmbtstus, 
   pmbt001 LIKE pmbt_t.pmbt001, 
   pmbt001_desc LIKE type_t.chr80, 
   pmbt002 LIKE pmbt_t.pmbt002, 
   pmbt002_desc LIKE type_t.chr80, 
   pmbt003 LIKE pmbt_t.pmbt003, 
   pmbt003_desc LIKE type_t.chr80, 
   pmbt005 LIKE pmbt_t.pmbt005, 
   pmbt005_desc LIKE type_t.chr80, 
   pmbt007 LIKE pmbt_t.pmbt007, 
   pmbt006 LIKE pmbt_t.pmbt006, 
   pmbtownid LIKE pmbt_t.pmbtownid, 
   pmbtownid_desc LIKE type_t.chr80, 
   pmbtowndp LIKE pmbt_t.pmbtowndp, 
   pmbtowndp_desc LIKE type_t.chr80, 
   pmbtcrtid LIKE pmbt_t.pmbtcrtid, 
   pmbtcrtid_desc LIKE type_t.chr80, 
   pmbtcrtdp LIKE pmbt_t.pmbtcrtdp, 
   pmbtcrtdp_desc LIKE type_t.chr80, 
   pmbtcrtdt LIKE pmbt_t.pmbtcrtdt, 
   pmbtmodid LIKE pmbt_t.pmbtmodid, 
   pmbtmodid_desc LIKE type_t.chr80, 
   pmbtmoddt LIKE pmbt_t.pmbtmoddt, 
   pmbtcnfid LIKE pmbt_t.pmbtcnfid, 
   pmbtcnfid_desc LIKE type_t.chr80, 
   pmbtcnfdt LIKE pmbt_t.pmbtcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_pmbu_d        RECORD
       pmbu010 LIKE pmbu_t.pmbu010, 
   pmbu011 LIKE pmbu_t.pmbu011, 
   pmbu011_desc LIKE type_t.chr500, 
   pmbu011_desc1 LIKE type_t.chr500, 
   pmbu012 LIKE pmbu_t.pmbu012, 
   pmbu012_desc LIKE type_t.chr500, 
   pmbu031 LIKE pmbu_t.pmbu031, 
   pmbu031_desc LIKE type_t.chr500, 
   pmbu032 LIKE pmbu_t.pmbu032, 
   pmbu032_desc LIKE type_t.chr500, 
   pmbu013 LIKE pmbu_t.pmbu013, 
   pmbu013_desc LIKE type_t.chr500, 
   pmbu014 LIKE pmbu_t.pmbu014, 
   pmbu014_desc LIKE type_t.chr500, 
   pmbu015 LIKE pmbu_t.pmbu015, 
   pmbu015_desc LIKE type_t.chr500, 
   pmbu016 LIKE pmbu_t.pmbu016, 
   pmbu016_desc LIKE type_t.chr500, 
   pmbu017 LIKE pmbu_t.pmbu017, 
   pmbu017_desc LIKE type_t.chr500, 
   pmbu018 LIKE pmbu_t.pmbu018, 
   pmbu018_desc LIKE type_t.chr500, 
   pmbu019 LIKE pmbu_t.pmbu019, 
   pmbu019_desc LIKE type_t.chr500, 
   oodb005 LIKE type_t.chr500, 
   pmbu020 LIKE pmbu_t.pmbu020, 
   pmbu020_desc LIKE type_t.chr500, 
   pmbu021 LIKE pmbu_t.pmbu021, 
   pmbu021_desc LIKE type_t.chr500, 
   pmbu022 LIKE pmbu_t.pmbu022
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_pmbtdocno LIKE pmbt_t.pmbtdocno,
   b_pmbtdocno_desc LIKE type_t.chr80,
      b_pmbtdocdt LIKE pmbt_t.pmbtdocdt,
      b_pmbt900 LIKE pmbt_t.pmbt900,
   b_pmbt900_desc LIKE type_t.chr80,
      b_pmbt901 LIKE pmbt_t.pmbt901,
   b_pmbt901_desc LIKE type_t.chr80,
      b_pmbt007 LIKE pmbt_t.pmbt007
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_pmbt_m          type_g_pmbt_m
DEFINE g_pmbt_m_t        type_g_pmbt_m
DEFINE g_pmbt_m_o        type_g_pmbt_m
DEFINE g_pmbt_m_mask_o   type_g_pmbt_m #轉換遮罩前資料
DEFINE g_pmbt_m_mask_n   type_g_pmbt_m #轉換遮罩後資料
 
   DEFINE g_pmbtdocno_t LIKE pmbt_t.pmbtdocno
 
 
DEFINE g_pmbu_d          DYNAMIC ARRAY OF type_g_pmbu_d
DEFINE g_pmbu_d_t        type_g_pmbu_d
DEFINE g_pmbu_d_o        type_g_pmbu_d
DEFINE g_pmbu_d_mask_o   DYNAMIC ARRAY OF type_g_pmbu_d #轉換遮罩前資料
DEFINE g_pmbu_d_mask_n   DYNAMIC ARRAY OF type_g_pmbu_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="apmt128.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION apmt128_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pmbu_d.getLength() THEN
         LET g_detail_idx = g_pmbu_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmbu_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmbu_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.init" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apmt128_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('pmbtstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('pmbt007','2020') 
   CALL cl_set_combo_scc('pmbu010','32') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL apmt128_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="apmt128.input" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION apmt128_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbtdocdt,g_pmbt_m.fflabel1_desc, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbtstus, 
       g_pmbt_m.pmbt001,g_pmbt_m.pmbt001_desc,g_pmbt_m.pmbt002,g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006, 
       g_pmbt_m.pmbtownid,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtowndp_desc,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid, 
       g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid,g_pmbt_m.pmbtcnfid_desc,g_pmbt_m.pmbtcnfdt 

   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT pmbu010,pmbu011,pmbu012,pmbu031,pmbu032,pmbu013,pmbu014,pmbu015,pmbu016, 
       pmbu017,pmbu018,pmbu019,pmbu020,pmbu021,pmbu022 FROM pmbu_t WHERE pmbuent=? AND pmbudocno=? AND  
       pmbu011=? AND pmbu012=? AND pmbu013=? AND pmbu014=? AND pmbu015=? AND pmbu016=? AND pmbu017=?  
       AND pmbu018=? AND pmbu019=? AND pmbu020=? AND pmbu021=? AND pmbu031=? AND pmbu032=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt128_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apmt128_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apmt128_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt,g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus, 
       g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003,g_pmbt_m.pmbt005,g_pmbt_m.pmbt007
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="apmt128.input.body" ver="20" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_pmbu_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmbu_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmt128_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_pmbu_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmt128_cl USING g_enterprise,g_pmbt_m.pmbtdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmt128_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmt128_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmbu_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmbu_d[l_ac].pmbu011 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu012 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu013 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu014 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu015 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu016 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu017 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu018 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu019 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu020 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu021 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu031 IS NOT NULL
               AND g_pmbu_d[l_ac].pmbu032 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_pmbu_d_t.* = g_pmbu_d[l_ac].*  #BACKUP
               LET g_pmbu_d_o.* = g_pmbu_d[l_ac].*  #BACKUP
               CALL apmt128_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL apmt128_set_no_entry_b(l_cmd)
               IF NOT apmt128_lock_b("pmbu_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmt128_bcl INTO g_pmbu_d[l_ac].pmbu010,g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012, 
                      g_pmbu_d[l_ac].pmbu031,g_pmbu_d[l_ac].pmbu032,g_pmbu_d[l_ac].pmbu013,g_pmbu_d[l_ac].pmbu014, 
                      g_pmbu_d[l_ac].pmbu015,g_pmbu_d[l_ac].pmbu016,g_pmbu_d[l_ac].pmbu017,g_pmbu_d[l_ac].pmbu018, 
                      g_pmbu_d[l_ac].pmbu019,g_pmbu_d[l_ac].pmbu020,g_pmbu_d[l_ac].pmbu021,g_pmbu_d[l_ac].pmbu022 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_pmbu_d_t.pmbu011 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmbu_d_mask_o[l_ac].* =  g_pmbu_d[l_ac].*
                  CALL apmt128_pmbu_t_mask()
                  LET g_pmbu_d_mask_n[l_ac].* =  g_pmbu_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmt128_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmbu_d[l_ac].* TO NULL 
            INITIALIZE g_pmbu_d_t.* TO NULL 
            INITIALIZE g_pmbu_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_pmbu_d[l_ac].pmbu010 = "I"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_pmbu_d_t.* = g_pmbu_d[l_ac].*     #新輸入資料
            LET g_pmbu_d_o.* = g_pmbu_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmt128_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmt128_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmbu_d[li_reproduce_target].* = g_pmbu_d[li_reproduce].*
 
               LET g_pmbu_d[li_reproduce_target].pmbu011 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu012 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu013 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu014 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu015 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu016 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu017 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu018 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu019 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu020 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu021 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu031 = NULL
               LET g_pmbu_d[li_reproduce_target].pmbu032 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmbu_t 
             WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbt_m.pmbtdocno
 
               AND pmbu011 = g_pmbu_d[l_ac].pmbu011
               AND pmbu012 = g_pmbu_d[l_ac].pmbu012
               AND pmbu013 = g_pmbu_d[l_ac].pmbu013
               AND pmbu014 = g_pmbu_d[l_ac].pmbu014
               AND pmbu015 = g_pmbu_d[l_ac].pmbu015
               AND pmbu016 = g_pmbu_d[l_ac].pmbu016
               AND pmbu017 = g_pmbu_d[l_ac].pmbu017
               AND pmbu018 = g_pmbu_d[l_ac].pmbu018
               AND pmbu019 = g_pmbu_d[l_ac].pmbu019
               AND pmbu020 = g_pmbu_d[l_ac].pmbu020
               AND pmbu021 = g_pmbu_d[l_ac].pmbu021
               AND pmbu031 = g_pmbu_d[l_ac].pmbu031
               AND pmbu032 = g_pmbu_d[l_ac].pmbu032
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbt_m.pmbtdocno
               LET gs_keys[2] = g_pmbu_d[g_detail_idx].pmbu011
               LET gs_keys[3] = g_pmbu_d[g_detail_idx].pmbu012
               LET gs_keys[4] = g_pmbu_d[g_detail_idx].pmbu013
               LET gs_keys[5] = g_pmbu_d[g_detail_idx].pmbu014
               LET gs_keys[6] = g_pmbu_d[g_detail_idx].pmbu015
               LET gs_keys[7] = g_pmbu_d[g_detail_idx].pmbu016
               LET gs_keys[8] = g_pmbu_d[g_detail_idx].pmbu017
               LET gs_keys[9] = g_pmbu_d[g_detail_idx].pmbu018
               LET gs_keys[10] = g_pmbu_d[g_detail_idx].pmbu019
               LET gs_keys[11] = g_pmbu_d[g_detail_idx].pmbu020
               LET gs_keys[12] = g_pmbu_d[g_detail_idx].pmbu021
               LET gs_keys[13] = g_pmbu_d[g_detail_idx].pmbu031
               LET gs_keys[14] = g_pmbu_d[g_detail_idx].pmbu032
               CALL apmt128_insert_b('pmbu_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pmbu_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbu_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmt128_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmbt_m.pmbtdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu011
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu012
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu013
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu014
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu015
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu016
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu017
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu018
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu019
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu020
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu021
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu031
               LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu032
 
            
               #刪除同層單身
               IF NOT apmt128_delete_b('pmbu_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmt128_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmt128_key_delete_b(gs_keys,'pmbu_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmt128_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE apmt128_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_pmbu_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmbu_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu011
            
            #add-point:AFTER FIELD pmbu011
            {<point name="input.a.page1.pmbu011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu011
            #add-point:BEFORE FIELD pmbu011
            {<point name="input.b.page1.pmbu011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu011
            #add-point:ON CHANGE pmbu011
            {<point name="input.g.page1.pmbu011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu012
            
            #add-point:AFTER FIELD pmbu012
            {<point name="input.a.page1.pmbu012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu012
            #add-point:BEFORE FIELD pmbu012
            {<point name="input.b.page1.pmbu012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu012
            #add-point:ON CHANGE pmbu012
            {<point name="input.g.page1.pmbu012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu031
            
            #add-point:AFTER FIELD pmbu031
            {<point name="input.a.page1.pmbu031" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu031
            #add-point:BEFORE FIELD pmbu031
            {<point name="input.b.page1.pmbu031" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu031
            #add-point:ON CHANGE pmbu031
            {<point name="input.g.page1.pmbu031" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu032
            
            #add-point:AFTER FIELD pmbu032
            {<point name="input.a.page1.pmbu032" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu032
            #add-point:BEFORE FIELD pmbu032
            {<point name="input.b.page1.pmbu032" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu032
            #add-point:ON CHANGE pmbu032
            {<point name="input.g.page1.pmbu032" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu013
            
            #add-point:AFTER FIELD pmbu013
            {<point name="input.a.page1.pmbu013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu013
            #add-point:BEFORE FIELD pmbu013
            {<point name="input.b.page1.pmbu013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu013
            #add-point:ON CHANGE pmbu013
            {<point name="input.g.page1.pmbu013" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu014
            
            #add-point:AFTER FIELD pmbu014
            {<point name="input.a.page1.pmbu014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu014
            #add-point:BEFORE FIELD pmbu014
            {<point name="input.b.page1.pmbu014" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu014
            #add-point:ON CHANGE pmbu014
            {<point name="input.g.page1.pmbu014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu015
            
            #add-point:AFTER FIELD pmbu015
            {<point name="input.a.page1.pmbu015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu015
            #add-point:BEFORE FIELD pmbu015
            {<point name="input.b.page1.pmbu015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu015
            #add-point:ON CHANGE pmbu015
            {<point name="input.g.page1.pmbu015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu016
            
            #add-point:AFTER FIELD pmbu016
            {<point name="input.a.page1.pmbu016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu016
            #add-point:BEFORE FIELD pmbu016
            {<point name="input.b.page1.pmbu016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu016
            #add-point:ON CHANGE pmbu016
            {<point name="input.g.page1.pmbu016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu017
            
            #add-point:AFTER FIELD pmbu017
            {<point name="input.a.page1.pmbu017" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu017
            #add-point:BEFORE FIELD pmbu017
            {<point name="input.b.page1.pmbu017" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu017
            #add-point:ON CHANGE pmbu017
            {<point name="input.g.page1.pmbu017" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu018
            
            #add-point:AFTER FIELD pmbu018
            {<point name="input.a.page1.pmbu018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu018
            #add-point:BEFORE FIELD pmbu018
            {<point name="input.b.page1.pmbu018" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu018
            #add-point:ON CHANGE pmbu018
            {<point name="input.g.page1.pmbu018" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu019
            
            #add-point:AFTER FIELD pmbu019
            {<point name="input.a.page1.pmbu019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu019
            #add-point:BEFORE FIELD pmbu019
            {<point name="input.b.page1.pmbu019" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu019
            #add-point:ON CHANGE pmbu019
            {<point name="input.g.page1.pmbu019" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu020
            
            #add-point:AFTER FIELD pmbu020
            {<point name="input.a.page1.pmbu020" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu020
            #add-point:BEFORE FIELD pmbu020
            {<point name="input.b.page1.pmbu020" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu020
            #add-point:ON CHANGE pmbu020
            {<point name="input.g.page1.pmbu020" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu021
            
            #add-point:AFTER FIELD pmbu021
            {<point name="input.a.page1.pmbu021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu021
            #add-point:BEFORE FIELD pmbu021
            {<point name="input.b.page1.pmbu021" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu021
            #add-point:ON CHANGE pmbu021
            {<point name="input.g.page1.pmbu021" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbu022
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmbu_d[l_ac].pmbu022,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD pmbu022
            END IF 
 
 
            #add-point:AFTER FIELD pmbu022
            {<point name="input.a.page1.pmbu022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbu022
            #add-point:BEFORE FIELD pmbu022
            {<point name="input.b.page1.pmbu022" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbu022
            #add-point:ON CHANGE pmbu022
            {<point name="input.g.page1.pmbu022" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.pmbu011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu011
            #add-point:ON ACTION controlp INFIELD pmbu011
            {<point name="input.c.page1.pmbu011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu012
            #add-point:ON ACTION controlp INFIELD pmbu012
            {<point name="input.c.page1.pmbu012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu031
            #add-point:ON ACTION controlp INFIELD pmbu031
            {<point name="input.c.page1.pmbu031" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu032
            #add-point:ON ACTION controlp INFIELD pmbu032
            {<point name="input.c.page1.pmbu032" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu013
            #add-point:ON ACTION controlp INFIELD pmbu013
            {<point name="input.c.page1.pmbu013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu014
            #add-point:ON ACTION controlp INFIELD pmbu014
            {<point name="input.c.page1.pmbu014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu015
            #add-point:ON ACTION controlp INFIELD pmbu015
            {<point name="input.c.page1.pmbu015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu016
            #add-point:ON ACTION controlp INFIELD pmbu016
            {<point name="input.c.page1.pmbu016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu017
            #add-point:ON ACTION controlp INFIELD pmbu017
            {<point name="input.c.page1.pmbu017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu018
            #add-point:ON ACTION controlp INFIELD pmbu018
            {<point name="input.c.page1.pmbu018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu019
            #add-point:ON ACTION controlp INFIELD pmbu019
            {<point name="input.c.page1.pmbu019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu020
            #add-point:ON ACTION controlp INFIELD pmbu020
            {<point name="input.c.page1.pmbu020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu021
            #add-point:ON ACTION controlp INFIELD pmbu021
            {<point name="input.c.page1.pmbu021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmbu022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbu022
            #add-point:ON ACTION controlp INFIELD pmbu022
            {<point name="input.c.page1.pmbu022" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pmbu_d[l_ac].* = g_pmbu_d_t.*
               CLOSE apmt128_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_pmbu_d[l_ac].pmbu011 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pmbu_d[l_ac].* = g_pmbu_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL apmt128_pmbu_t_mask_restore('restore_mask_o')
      
               UPDATE pmbu_t SET (pmbudocno,pmbu010,pmbu011,pmbu012,pmbu031,pmbu032,pmbu013,pmbu014, 
                   pmbu015,pmbu016,pmbu017,pmbu018,pmbu019,pmbu020,pmbu021,pmbu022) = (g_pmbt_m.pmbtdocno, 
                   g_pmbu_d[l_ac].pmbu010,g_pmbu_d[l_ac].pmbu011,g_pmbu_d[l_ac].pmbu012,g_pmbu_d[l_ac].pmbu031, 
                   g_pmbu_d[l_ac].pmbu032,g_pmbu_d[l_ac].pmbu013,g_pmbu_d[l_ac].pmbu014,g_pmbu_d[l_ac].pmbu015, 
                   g_pmbu_d[l_ac].pmbu016,g_pmbu_d[l_ac].pmbu017,g_pmbu_d[l_ac].pmbu018,g_pmbu_d[l_ac].pmbu019, 
                   g_pmbu_d[l_ac].pmbu020,g_pmbu_d[l_ac].pmbu021,g_pmbu_d[l_ac].pmbu022)
                WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbt_m.pmbtdocno 
 
                  AND pmbu011 = g_pmbu_d_t.pmbu011 #項次   
                  AND pmbu012 = g_pmbu_d_t.pmbu012  
                  AND pmbu013 = g_pmbu_d_t.pmbu013  
                  AND pmbu014 = g_pmbu_d_t.pmbu014  
                  AND pmbu015 = g_pmbu_d_t.pmbu015  
                  AND pmbu016 = g_pmbu_d_t.pmbu016  
                  AND pmbu017 = g_pmbu_d_t.pmbu017  
                  AND pmbu018 = g_pmbu_d_t.pmbu018  
                  AND pmbu019 = g_pmbu_d_t.pmbu019  
                  AND pmbu020 = g_pmbu_d_t.pmbu020  
                  AND pmbu021 = g_pmbu_d_t.pmbu021  
                  AND pmbu031 = g_pmbu_d_t.pmbu031  
                  AND pmbu032 = g_pmbu_d_t.pmbu032  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbu_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbu_d[l_ac].* = g_pmbu_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbu_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_pmbu_d[l_ac].* = g_pmbu_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbt_m.pmbtdocno
               LET gs_keys_bak[1] = g_pmbtdocno_t
               LET gs_keys[2] = g_pmbu_d[g_detail_idx].pmbu011
               LET gs_keys_bak[2] = g_pmbu_d_t.pmbu011
               LET gs_keys[3] = g_pmbu_d[g_detail_idx].pmbu012
               LET gs_keys_bak[3] = g_pmbu_d_t.pmbu012
               LET gs_keys[4] = g_pmbu_d[g_detail_idx].pmbu013
               LET gs_keys_bak[4] = g_pmbu_d_t.pmbu013
               LET gs_keys[5] = g_pmbu_d[g_detail_idx].pmbu014
               LET gs_keys_bak[5] = g_pmbu_d_t.pmbu014
               LET gs_keys[6] = g_pmbu_d[g_detail_idx].pmbu015
               LET gs_keys_bak[6] = g_pmbu_d_t.pmbu015
               LET gs_keys[7] = g_pmbu_d[g_detail_idx].pmbu016
               LET gs_keys_bak[7] = g_pmbu_d_t.pmbu016
               LET gs_keys[8] = g_pmbu_d[g_detail_idx].pmbu017
               LET gs_keys_bak[8] = g_pmbu_d_t.pmbu017
               LET gs_keys[9] = g_pmbu_d[g_detail_idx].pmbu018
               LET gs_keys_bak[9] = g_pmbu_d_t.pmbu018
               LET gs_keys[10] = g_pmbu_d[g_detail_idx].pmbu019
               LET gs_keys_bak[10] = g_pmbu_d_t.pmbu019
               LET gs_keys[11] = g_pmbu_d[g_detail_idx].pmbu020
               LET gs_keys_bak[11] = g_pmbu_d_t.pmbu020
               LET gs_keys[12] = g_pmbu_d[g_detail_idx].pmbu021
               LET gs_keys_bak[12] = g_pmbu_d_t.pmbu021
               LET gs_keys[13] = g_pmbu_d[g_detail_idx].pmbu031
               LET gs_keys_bak[13] = g_pmbu_d_t.pmbu031
               LET gs_keys[14] = g_pmbu_d[g_detail_idx].pmbu032
               LET gs_keys_bak[14] = g_pmbu_d_t.pmbu032
               CALL apmt128_update_b('pmbu_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL apmt128_pmbu_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_pmbu_d[g_detail_idx].pmbu011 = g_pmbu_d_t.pmbu011 
                  AND g_pmbu_d[g_detail_idx].pmbu012 = g_pmbu_d_t.pmbu012 
                  AND g_pmbu_d[g_detail_idx].pmbu013 = g_pmbu_d_t.pmbu013 
                  AND g_pmbu_d[g_detail_idx].pmbu014 = g_pmbu_d_t.pmbu014 
                  AND g_pmbu_d[g_detail_idx].pmbu015 = g_pmbu_d_t.pmbu015 
                  AND g_pmbu_d[g_detail_idx].pmbu016 = g_pmbu_d_t.pmbu016 
                  AND g_pmbu_d[g_detail_idx].pmbu017 = g_pmbu_d_t.pmbu017 
                  AND g_pmbu_d[g_detail_idx].pmbu018 = g_pmbu_d_t.pmbu018 
                  AND g_pmbu_d[g_detail_idx].pmbu019 = g_pmbu_d_t.pmbu019 
                  AND g_pmbu_d[g_detail_idx].pmbu020 = g_pmbu_d_t.pmbu020 
                  AND g_pmbu_d[g_detail_idx].pmbu021 = g_pmbu_d_t.pmbu021 
                  AND g_pmbu_d[g_detail_idx].pmbu031 = g_pmbu_d_t.pmbu031 
                  AND g_pmbu_d[g_detail_idx].pmbu032 = g_pmbu_d_t.pmbu032 
 
                  ) THEN
                  LET gs_keys[01] = g_pmbt_m.pmbtdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu011
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu012
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu013
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu014
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu015
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu016
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu017
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu018
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu019
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu020
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu021
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu031
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbu_d_t.pmbu032
 
                  CALL apmt128_key_update_b(gs_keys,'pmbu_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmbt_m),util.JSON.stringify(g_pmbu_d_t)
               LET g_log2 = util.JSON.stringify(g_pmbt_m),util.JSON.stringify(g_pmbu_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL apmt128_unlock_b("pmbu_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_pmbu_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmbu_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="apmt128.input.head" ver="21" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt,g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus, 
          g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003,g_pmbt_m.pmbt005,g_pmbt_m.pmbt007 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN apmt128_cl USING g_enterprise,g_pmbt_m.pmbtdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmt128_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmt128_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL apmt128_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL apmt128_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtdocno
            
            #add-point:AFTER FIELD pmbtdocno
            {<point name="input.a.pmbtdocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtdocno
            #add-point:BEFORE FIELD pmbtdocno
            {<point name="input.b.pmbtdocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbtdocno
            #add-point:ON CHANGE pmbtdocno
            {<point name="input.g.pmbtdocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtdocdt
            #add-point:BEFORE FIELD pmbtdocdt
            {<point name="input.b.pmbtdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtdocdt
            
            #add-point:AFTER FIELD pmbtdocdt
            {<point name="input.a.pmbtdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbtdocdt
            #add-point:ON CHANGE pmbtdocdt
            {<point name="input.g.pmbtdocdt" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt900
            
            #add-point:AFTER FIELD pmbt900
            {<point name="input.a.pmbt900" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt900
            #add-point:BEFORE FIELD pmbt900
            {<point name="input.b.pmbt900" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbt900
            #add-point:ON CHANGE pmbt900
            {<point name="input.g.pmbt900" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt901
            
            #add-point:AFTER FIELD pmbt901
            {<point name="input.a.pmbt901" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt901
            #add-point:BEFORE FIELD pmbt901
            {<point name="input.b.pmbt901" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbt901
            #add-point:ON CHANGE pmbt901
            {<point name="input.g.pmbt901" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbtstus
            #add-point:BEFORE FIELD pmbtstus
            {<point name="input.b.pmbtstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbtstus
            
            #add-point:AFTER FIELD pmbtstus
            {<point name="input.a.pmbtstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbtstus
            #add-point:ON CHANGE pmbtstus
            {<point name="input.g.pmbtstus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt001
            
            #add-point:AFTER FIELD pmbt001
            {<point name="input.a.pmbt001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt001
            #add-point:BEFORE FIELD pmbt001
            {<point name="input.b.pmbt001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbt001
            #add-point:ON CHANGE pmbt001
            {<point name="input.g.pmbt001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt002
            
            #add-point:AFTER FIELD pmbt002
            {<point name="input.a.pmbt002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt002
            #add-point:BEFORE FIELD pmbt002
            {<point name="input.b.pmbt002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbt002
            #add-point:ON CHANGE pmbt002
            {<point name="input.g.pmbt002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt003
            
            #add-point:AFTER FIELD pmbt003
            {<point name="input.a.pmbt003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt003
            #add-point:BEFORE FIELD pmbt003
            {<point name="input.b.pmbt003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbt003
            #add-point:ON CHANGE pmbt003
            {<point name="input.g.pmbt003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt005
            
            #add-point:AFTER FIELD pmbt005
            {<point name="input.a.pmbt005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt005
            #add-point:BEFORE FIELD pmbt005
            {<point name="input.b.pmbt005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbt005
            #add-point:ON CHANGE pmbt005
            {<point name="input.g.pmbt005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbt007
            #add-point:BEFORE FIELD pmbt007
            {<point name="input.b.pmbt007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbt007
            
            #add-point:AFTER FIELD pmbt007
            {<point name="input.a.pmbt007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbt007
            #add-point:ON CHANGE pmbt007
            {<point name="input.g.pmbt007" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.pmbtdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtdocno
            #add-point:ON ACTION controlp INFIELD pmbtdocno
            {<point name="input.c.pmbtdocno" />}
            #END add-point
 
         #Ctrlp:input.c.pmbtdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtdocdt
            #add-point:ON ACTION controlp INFIELD pmbtdocdt
            {<point name="input.c.pmbtdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.pmbt900
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt900
            #add-point:ON ACTION controlp INFIELD pmbt900
            {<point name="input.c.pmbt900" />}
            #END add-point
 
         #Ctrlp:input.c.pmbt901
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt901
            #add-point:ON ACTION controlp INFIELD pmbt901
            {<point name="input.c.pmbt901" />}
            #END add-point
 
         #Ctrlp:input.c.pmbtstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbtstus
            #add-point:ON ACTION controlp INFIELD pmbtstus
            {<point name="input.c.pmbtstus" />}
            #END add-point
 
         #Ctrlp:input.c.pmbt001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt001
            #add-point:ON ACTION controlp INFIELD pmbt001
            {<point name="input.c.pmbt001" />}
            #END add-point
 
         #Ctrlp:input.c.pmbt002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt002
            #add-point:ON ACTION controlp INFIELD pmbt002
            {<point name="input.c.pmbt002" />}
            #END add-point
 
         #Ctrlp:input.c.pmbt003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt003
            #add-point:ON ACTION controlp INFIELD pmbt003
            {<point name="input.c.pmbt003" />}
            #END add-point
 
         #Ctrlp:input.c.pmbt005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt005
            #add-point:ON ACTION controlp INFIELD pmbt005
            {<point name="input.c.pmbt005" />}
            #END add-point
 
         #Ctrlp:input.c.pmbt007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbt007
            #add-point:ON ACTION controlp INFIELD pmbt007
            {<point name="input.c.pmbt007" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_pmbt_m.pmbtdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO pmbt_t (pmbtent,pmbtdocno,pmbtdocdt,pmbt900,pmbt901,pmbtstus,pmbt001,pmbt002, 
                   pmbt003,pmbt005,pmbt007,pmbt006,pmbtownid,pmbtowndp,pmbtcrtid,pmbtcrtdp,pmbtcrtdt, 
                   pmbtmodid,pmbtmoddt,pmbtcnfid,pmbtcnfdt)
               VALUES (g_enterprise,g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt,g_pmbt_m.pmbt900,g_pmbt_m.pmbt901, 
                   g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003,g_pmbt_m.pmbt005, 
                   g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
                   g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
                   g_pmbt_m.pmbtcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_pmbt_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apmt128_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL apmt128_b_fill()
                  CALL apmt128_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL apmt128_pmbt_t_mask_restore('restore_mask_o')
               
               UPDATE pmbt_t SET (pmbtdocno,pmbtdocdt,pmbt900,pmbt901,pmbtstus,pmbt001,pmbt002,pmbt003, 
                   pmbt005,pmbt007,pmbt006,pmbtownid,pmbtowndp,pmbtcrtid,pmbtcrtdp,pmbtcrtdt,pmbtmodid, 
                   pmbtmoddt,pmbtcnfid,pmbtcnfdt) = (g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt,g_pmbt_m.pmbt900, 
                   g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
                   g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp, 
                   g_pmbt_m.pmbtcrtid,g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt, 
                   g_pmbt_m.pmbtcnfid,g_pmbt_m.pmbtcnfdt)
                WHERE pmbtent = g_enterprise AND pmbtdocno = g_pmbtdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "pmbt_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL apmt128_pmbt_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_pmbt_m_t)
               LET g_log2 = util.JSON.stringify(g_pmbt_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="apmt128.input.other" ver="9" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD pmbtdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pmbu010
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.insert" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION apmt128_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_pmbu_d.clear()   
 
 
   INITIALIZE g_pmbt_m.* LIKE pmbt_t.*             #DEFAULT 設定
   
   LET g_pmbtdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmbt_m.pmbtownid = g_user
      LET g_pmbt_m.pmbtowndp = g_dept
      LET g_pmbt_m.pmbtcrtid = g_user
      LET g_pmbt_m.pmbtcrtdp = g_dept 
      LET g_pmbt_m.pmbtcrtdt = cl_get_current()
      LET g_pmbt_m.pmbtmodid = g_user
      LET g_pmbt_m.pmbtmoddt = cl_get_current()
      LET g_pmbt_m.pmbtstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_pmbt_m.pmbtstus = "N"
      LET g_pmbt_m.pmbt007 = "2"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_pmbt_m_t.* = g_pmbt_m.*
      LET g_pmbt_m_o.* = g_pmbt_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmbt_m.pmbtstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL apmt128_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_pmbt_m.* TO NULL
         INITIALIZE g_pmbu_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL apmt128_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_pmbu_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt128_set_act_visible()   
   CALL apmt128_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmbtent = '" ||g_enterprise|| "' AND",
                      " pmbtdocno = '", g_pmbt_m.pmbtdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmt128_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE apmt128_cl
   
   CALL apmt128_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE apmt128_master_referesh USING g_pmbt_m.pmbtdocno INTO g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
       g_pmbt_m.pmbtcnfdt,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbt001_desc, 
       g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp_desc, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtcnfid_desc 

   
   #遮罩相關處理
   LET g_pmbt_m_mask_o.* =  g_pmbt_m.*
   CALL apmt128_pmbt_t_mask()
   LET g_pmbt_m_mask_n.* =  g_pmbt_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbtdocdt,g_pmbt_m.fflabel1_desc, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbtstus, 
       g_pmbt_m.pmbt001,g_pmbt_m.pmbt001_desc,g_pmbt_m.pmbt002,g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006, 
       g_pmbt_m.pmbtownid,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtowndp_desc,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid, 
       g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid,g_pmbt_m.pmbtcnfid_desc,g_pmbt_m.pmbtcnfdt 

   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL apmt128_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apmt128_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO pmbu_t
                  (pmbuent,
                   pmbudocno,
                   pmbu011,pmbu012,pmbu013,pmbu014,pmbu015,pmbu016,pmbu017,pmbu018,pmbu019,pmbu020,pmbu021,pmbu031,pmbu032
                   ,pmbu010,pmbu022) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10],ps_keys[11],ps_keys[12],ps_keys[13],ps_keys[14]
                   ,g_pmbu_d[g_detail_idx].pmbu010,g_pmbu_d[g_detail_idx].pmbu022)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbu_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmbu_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.key_delete_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION apmt128_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION apmt128_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.lock_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apmt128_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL apmt128_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pmbu_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apmt128_bcl USING g_enterprise,
                                       g_pmbt_m.pmbtdocno,g_pmbu_d[g_detail_idx].pmbu011,g_pmbu_d[g_detail_idx].pmbu012, 
                                           g_pmbu_d[g_detail_idx].pmbu013,g_pmbu_d[g_detail_idx].pmbu014, 
                                           g_pmbu_d[g_detail_idx].pmbu015,g_pmbu_d[g_detail_idx].pmbu016, 
                                           g_pmbu_d[g_detail_idx].pmbu017,g_pmbu_d[g_detail_idx].pmbu018, 
                                           g_pmbu_d[g_detail_idx].pmbu019,g_pmbu_d[g_detail_idx].pmbu020, 
                                           g_pmbu_d[g_detail_idx].pmbu021,g_pmbu_d[g_detail_idx].pmbu031, 
                                           g_pmbu_d[g_detail_idx].pmbu032     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmt128_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.main" ver="16" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT pmbtdocno,'',pmbtdocdt,'',pmbt900,'',pmbt901,'',pmbtstus,pmbt001,'',pmbt002, 
       '',pmbt003,'',pmbt005,'',pmbt007,pmbt006,pmbtownid,'',pmbtowndp,'',pmbtcrtid,'',pmbtcrtdp,'', 
       pmbtcrtdt,pmbtmodid,'',pmbtmoddt,pmbtcnfid,'',pmbtcnfdt", 
                      " FROM pmbt_t",
                      " WHERE pmbtent= ? AND pmbtdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt128_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.pmbtdocno,t0.pmbtdocdt,t0.pmbt900,t0.pmbt901,t0.pmbtstus,t0.pmbt001, 
       t0.pmbt002,t0.pmbt003,t0.pmbt005,t0.pmbt007,t0.pmbt006,t0.pmbtownid,t0.pmbtowndp,t0.pmbtcrtid, 
       t0.pmbtcrtdp,t0.pmbtcrtdt,t0.pmbtmodid,t0.pmbtmoddt,t0.pmbtcnfid,t0.pmbtcnfdt,t1.oobal004 ,t2.ooag011 , 
       t3.ooefl003 ,t4.ooall004 ,t5.oohal003 ,t6.ooail003 ,t7.oocql004 ,t8.ooag011 ,t9.ooefl003 ,t10.ooag011 , 
       t11.ooefl003 ,t12.ooag011 ,t13.ooag011",
               " FROM pmbt_t t0",
                              " LEFT JOIN oobal_t t1 ON t1.oobalent='"||g_enterprise||"' AND t1.oobal001='' AND t1.oobal002=t0.pmbtdocno AND t1.oobal003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.pmbt900  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.pmbt901 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooall_t t4 ON t4.ooallent='"||g_enterprise||"' AND t4.ooall001='14' AND t4.ooall002=t0.pmbt001 AND t4.ooall003='"||g_dlang||"' ",
               " LEFT JOIN oohal_t t5 ON t5.oohalent='"||g_enterprise||"' AND t5.oohal001=t0.pmbt002 AND t5.oohal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t6 ON t6.ooailent='"||g_enterprise||"' AND t6.ooail001=t0.pmbt003 AND t6.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='275' AND t7.oocql002=t0.pmbt005 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.pmbtownid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=t0.pmbtowndp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.pmbtcrtid  ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=t0.pmbtcrtdp AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent='"||g_enterprise||"' AND t12.ooag001=t0.pmbtmodid  ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent='"||g_enterprise||"' AND t13.ooag001=t0.pmbtcnfid  ",
 
               " WHERE t0.pmbtent = '" ||g_enterprise|| "' AND t0.pmbtdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apmt128_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmt128 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmt128_init()   
 
      #進入選單 Menu (="N")
      CALL apmt128_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apmt128
      
   END IF 
   
   CLOSE apmt128_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="apmt128.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/apm/apmt128_mask.4gl"
]]>
  </section>
  <section id="apmt128.modify" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION apmt128_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_pmbt_m_t.* = g_pmbt_m.*
   LET g_pmbt_m_o.* = g_pmbt_m.*
   
   IF g_pmbt_m.pmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
   CALL s_transaction_begin()
   
   OPEN apmt128_cl USING g_enterprise,g_pmbt_m.pmbtdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmt128_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmt128_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt128_master_referesh USING g_pmbt_m.pmbtdocno INTO g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
       g_pmbt_m.pmbtcnfdt,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbt001_desc, 
       g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp_desc, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtcnfid_desc 

   
   #檢查是否允許此動作
   IF NOT apmt128_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmbt_m_mask_o.* =  g_pmbt_m.*
   CALL apmt128_pmbt_t_mask()
   LET g_pmbt_m_mask_n.* =  g_pmbt_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL apmt128_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_pmbt_m.pmbtmodid = g_user 
LET g_pmbt_m.pmbtmoddt = cl_get_current()
LET g_pmbt_m.pmbtmodid_desc = cl_get_username(g_pmbt_m.pmbtmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL apmt128_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE pmbt_t SET (pmbtmodid,pmbtmoddt) = (g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt)
          WHERE pmbtent = g_enterprise AND pmbtdocno = g_pmbtdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pmbt_m.* = g_pmbt_m_t.*
         CALL apmt128_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_pmbt_m.pmbtdocno != g_pmbtdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE pmbu_t SET pmbudocno = g_pmbt_m.pmbtdocno
 
          WHERE pmbuent = g_enterprise AND pmbudocno = g_pmbtdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbu_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbu_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt128_set_act_visible()   
   CALL apmt128_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " pmbtent = '" ||g_enterprise|| "' AND",
                      " pmbtdocno = '", g_pmbt_m.pmbtdocno, "' "
 
   #填到對應位置
   CALL apmt128_browser_fill("")
 
   CLOSE apmt128_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmt128_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="apmt128.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION apmt128_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL apmt128_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_pmbt_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="apmt128.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="apmt128.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="apmt128.query" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apmt128_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_pmbu_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL apmt128_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL apmt128_browser_fill("")
      CALL apmt128_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL apmt128_filter_show('pmbtdocno')
   CALL apmt128_filter_show('pmbtdocdt')
   CALL apmt128_filter_show('pmbt900')
   CALL apmt128_filter_show('pmbt901')
   CALL apmt128_filter_show('pmbt007')
   CALL apmt128_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL apmt128_fetch("F") 
      #顯示單身筆數
      CALL apmt128_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.reproduce" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION apmt128_reproduce()
   DEFINE l_newno     LIKE pmbt_t.pmbtdocno 
   DEFINE l_oldno     LIKE pmbt_t.pmbtdocno 
 
   DEFINE l_master    RECORD LIKE pmbt_t.*
   DEFINE l_detail    RECORD LIKE pmbu_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_pmbt_m.pmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
    
   LET g_pmbt_m.pmbtdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmbt_m.pmbtownid = g_user
      LET g_pmbt_m.pmbtowndp = g_dept
      LET g_pmbt_m.pmbtcrtid = g_user
      LET g_pmbt_m.pmbtcrtdp = g_dept 
      LET g_pmbt_m.pmbtcrtdt = cl_get_current()
      LET g_pmbt_m.pmbtmodid = g_user
      LET g_pmbt_m.pmbtmoddt = cl_get_current()
      LET g_pmbt_m.pmbtstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmbt_m.pmbtstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_pmbt_m.pmbtdocno_desc = ''
   DISPLAY BY NAME g_pmbt_m.pmbtdocno_desc
 
   
   CALL apmt128_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_pmbt_m.* TO NULL
      INITIALIZE g_pmbu_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL apmt128_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt128_set_act_visible()   
   CALL apmt128_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmbtdocno_t = g_pmbt_m.pmbtdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmbtent = '" ||g_enterprise|| "' AND",
                      " pmbtdocno = '", g_pmbt_m.pmbtdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmt128_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL apmt128_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL apmt128_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION apmt128_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION apmt128_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION apmt128_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION apmt128_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_entry" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION apmt128_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("pmbtdocno,pmbtdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pmbtdocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apmt128_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_no_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION apmt128_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pmbtdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("pmbtdocno,pmbtdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apmt128_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="apmt128.set_pk_array" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION apmt128_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pmbt_m.pmbtdocno
   LET g_pk_array[1].column = 'pmbtdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmt128.show" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apmt128_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL apmt128_b_fill() #單身填充
      CALL apmt128_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL apmt128_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_pmbt_m_mask_o.* =  g_pmbt_m.*
   CALL apmt128_pmbt_t_mask()
   LET g_pmbt_m_mask_n.* =  g_pmbt_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbtdocdt,g_pmbt_m.fflabel1_desc, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbtstus, 
       g_pmbt_m.pmbt001,g_pmbt_m.pmbt001_desc,g_pmbt_m.pmbt002,g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006, 
       g_pmbt_m.pmbtownid,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtowndp_desc,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid, 
       g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid,g_pmbt_m.pmbtcnfid_desc,g_pmbt_m.pmbtcnfdt 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmbt_m.pmbtstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_pmbu_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apmt128_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.signature" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION apmt128_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL apmt128_show()
   CALL apmt128_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_pmbt_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_pmbu_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL apmt128_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL apmt128_ui_headershow()
   CALL apmt128_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION apmt128_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL apmt128_ui_headershow()  
   CALL apmt128_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="apmt128.state_change" ver="11" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION apmt128_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_pmbt_m.pmbtdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN apmt128_cl USING g_enterprise,g_pmbt_m.pmbtdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmt128_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmt128_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE apmt128_master_referesh USING g_pmbt_m.pmbtdocno INTO g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
       g_pmbt_m.pmbtcnfdt,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbt001_desc, 
       g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp_desc, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtcnfid_desc 

 
   #檢查是否允許此動作
   IF NOT apmt128_action_chk() THEN
      CLOSE apmt128_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbtdocdt,g_pmbt_m.fflabel1_desc, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbtstus, 
       g_pmbt_m.pmbt001,g_pmbt_m.pmbt001_desc,g_pmbt_m.pmbt002,g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006, 
       g_pmbt_m.pmbtownid,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtowndp_desc,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid, 
       g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid,g_pmbt_m.pmbtcnfid_desc,g_pmbt_m.pmbtcnfdt 

 
   CASE g_pmbt_m.pmbtstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_pmbt_m.pmbtstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT apmt128_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE apmt128_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT apmt128_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE apmt128_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_pmbt_m.pmbtstus = lc_state OR cl_null(lc_state) THEN
      CLOSE apmt128_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_pmbt_m.pmbtmodid = g_user
   LET g_pmbt_m.pmbtmoddt = cl_get_current()
   LET g_pmbt_m.pmbtstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE pmbt_t 
      SET (pmbtstus,pmbtmodid,pmbtmoddt) 
        = (g_pmbt_m.pmbtstus,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt)     
    WHERE pmbtent = g_enterprise AND pmbtdocno = g_pmbt_m.pmbtdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE apmt128_master_referesh USING g_pmbt_m.pmbtdocno INTO g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt, 
          g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
          g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
          g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
          g_pmbt_m.pmbtcnfdt,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbt001_desc, 
          g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbtownid_desc, 
          g_pmbt_m.pmbtowndp_desc,g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtmodid_desc, 
          g_pmbt_m.pmbtcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbtdocdt,g_pmbt_m.fflabel1_desc, 
          g_pmbt_m.pmbt900,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbtstus, 
          g_pmbt_m.pmbt001,g_pmbt_m.pmbt001_desc,g_pmbt_m.pmbt002,g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003, 
          g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006, 
          g_pmbt_m.pmbtownid,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtowndp_desc,g_pmbt_m.pmbtcrtid, 
          g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid, 
          g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid,g_pmbt_m.pmbtcnfid_desc,g_pmbt_m.pmbtcnfdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE apmt128_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmt128_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmt128.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION apmt128_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="apmt128.ui_browser_refresh" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apmt128_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pmbtdocno = g_pmbt_m.pmbtdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION apmt128_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmt128.ui_dialog" ver="67" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION apmt128_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apmt128_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_pmbt_m.* TO NULL
         CALL g_pmbu_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmt128_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL apmt128_fetch('') # reload data
               LET l_ac = 1
               CALL apmt128_ui_detailshow() #Setting the current row 
         
               CALL apmt128_idx_chk()
               #NEXT FIELD pmbu011
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_pmbu_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmt128_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL apmt128_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL apmt128_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apmt128_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apmt128_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apmt128_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apmt128_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL apmt128_set_act_visible()   
            CALL apmt128_set_act_no_visible()
            IF NOT (g_pmbt_m.pmbtdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " pmbtent = '" ||g_enterprise|| "' AND",
                                  " pmbtdocno = '", g_pmbt_m.pmbtdocno, "' "
 
               #填到對應位置
               CALL apmt128_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "pmbt_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "pmbu_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL apmt128_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "pmbt_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "pmbu_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL apmt128_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL apmt128_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL apmt128_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL apmt128_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt128_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL apmt128_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt128_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL apmt128_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt128_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL apmt128_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt128_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL apmt128_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt128_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_pmbu_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD pmbu011
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apmt128_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apmt128_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION demo
            LET g_action_choice="demo"
            IF cl_auth_chk_act("demo") THEN
               
               #add-point:ON ACTION demo
               {<point name="menu.demo" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apmt128_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apmt128_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/apm/apmt128_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apmt128_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apmt128_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL apmt128_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apmt128_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apmt128_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_pmbt_m.pmbtdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="apmt128.ui_headershow" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION apmt128_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_pmbt_m.pmbtdocno = g_browser[g_current_idx].b_pmbtdocno   
 
   EXECUTE apmt128_master_referesh USING g_pmbt_m.pmbtdocno INTO g_pmbt_m.pmbtdocno,g_pmbt_m.pmbtdocdt, 
       g_pmbt_m.pmbt900,g_pmbt_m.pmbt901,g_pmbt_m.pmbtstus,g_pmbt_m.pmbt001,g_pmbt_m.pmbt002,g_pmbt_m.pmbt003, 
       g_pmbt_m.pmbt005,g_pmbt_m.pmbt007,g_pmbt_m.pmbt006,g_pmbt_m.pmbtownid,g_pmbt_m.pmbtowndp,g_pmbt_m.pmbtcrtid, 
       g_pmbt_m.pmbtcrtdp,g_pmbt_m.pmbtcrtdt,g_pmbt_m.pmbtmodid,g_pmbt_m.pmbtmoddt,g_pmbt_m.pmbtcnfid, 
       g_pmbt_m.pmbtcnfdt,g_pmbt_m.pmbtdocno_desc,g_pmbt_m.pmbt900_desc,g_pmbt_m.pmbt901_desc,g_pmbt_m.pmbt001_desc, 
       g_pmbt_m.pmbt002_desc,g_pmbt_m.pmbt003_desc,g_pmbt_m.pmbt005_desc,g_pmbt_m.pmbtownid_desc,g_pmbt_m.pmbtowndp_desc, 
       g_pmbt_m.pmbtcrtid_desc,g_pmbt_m.pmbtcrtdp_desc,g_pmbt_m.pmbtmodid_desc,g_pmbt_m.pmbtcnfid_desc 

   CALL apmt128_pmbt_t_mask()
   CALL apmt128_show()
      
END FUNCTION
]]>
  </section>
  <section id="apmt128.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apmt128_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmt128_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apmt128.update_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apmt128_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmbu_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL apmt128_pmbu_t_mask_restore('restore_mask_o')
               
      UPDATE pmbu_t 
         SET (pmbudocno,
              pmbu011,pmbu012,pmbu013,pmbu014,pmbu015,pmbu016,pmbu017,pmbu018,pmbu019,pmbu020,pmbu021,pmbu031,pmbu032
              ,pmbu010,pmbu022) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9],ps_keys[10],ps_keys[11],ps_keys[12],ps_keys[13],ps_keys[14]
              ,g_pmbu_d[g_detail_idx].pmbu010,g_pmbu_d[g_detail_idx].pmbu022) 
         WHERE pmbuent = g_enterprise AND pmbudocno = ps_keys_bak[1] AND pmbu011 = ps_keys_bak[2] AND pmbu012 = ps_keys_bak[3] AND pmbu013 = ps_keys_bak[4] AND pmbu014 = ps_keys_bak[5] AND pmbu015 = ps_keys_bak[6] AND pmbu016 = ps_keys_bak[7] AND pmbu017 = ps_keys_bak[8] AND pmbu018 = ps_keys_bak[9] AND pmbu019 = ps_keys_bak[10] AND pmbu020 = ps_keys_bak[11] AND pmbu021 = ps_keys_bak[12] AND pmbu031 = ps_keys_bak[13] AND pmbu032 = ps_keys_bak[14]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbu_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbu_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmt128_pmbu_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
