<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmi140" std_prog="apmi140" erpver="1.0" module="APM" ver="3" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.apmi140_range_chk" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查分數區間是否重疊
# Memo...........:
# Usage..........: CALL apmi140_range_chk(p_num,p_pmbo002)
# Input parameter: p_num：要檢查的數字
#                : p_pmbo002：當前的key值要被排除
# Date & Author..: 2014/07/11 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi140_range_chk(p_num,p_pmbo002)
   DEFINE p_num     LIKE pmbo_t.pmbo003
   DEFINE p_pmbo002 LIKE pmbo_t.pmbo002
   DEFINE l_cnt     LIKE type_t.num5

   LET g_errno = ''

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM pmbo_t
    WHERE pmboent = g_enterprise
      AND pmbosite = g_site
      AND pmbo001 = g_pmbk_m.pmbk001
      AND pmbo002 <> NVL(p_pmbo002,' ')
      AND p_num BETWEEN pmbo003 AND pmbo004

   IF l_cnt > 0 THEN
      LET g_errno = 'art-00358'      #此輸入值不可重疊其他筆資料的起迄區間！  
   END IF
END FUNCTION]]>
  </point>
  <point name="function.apmi140_set_pmbm004_combo" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 設定pmbm004的下拉式選項
# Memo...........:
# Usage..........: CALL apmi140_set_pmbm004_combo()
# Date & Author..: 2014/07/11 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi140_set_pmbm004_combo()
   DEFINE l_sql      STRING
   DEFINE l_gzca001  LIKE gzca_t.gzca001
   DEFINE l_gzcb002  LIKE gzcb_t.gzcb002
   DEFINE l_gzcbl004 LIKE gzcbl_t.gzcbl004
   DEFINE l_num      LIKE type_t.num5
   DEFINE l_str1     STRING
   DEFINE l_str2     STRING 
   DEFINE l_pmbm002  LIKE type_t.num5 
   
   DELETE FROM apmi140_combo_t;

   LET l_sql = "SELECT gzca001 ",
               "  FROM gzca_t ",
               " WHERE gzcastus = 'Y' ",
               "   AND gzca001 IN ('3022','3023','3024') ",
               " ORDER BY gzca001 "
   PREPARE apmi140_gzca001_prep FROM l_sql
   DECLARE apmi140_gzca001_curs CURSOR FOR apmi140_gzca001_prep

   LET l_sql = "SELECT gzcb002,gzcbl004",
               "  FROM gzcb_t LEFT JOIN gzcbl_t ON gzcb002 = gzcbl002 ",
               "                               AND gzcb001 = gzcbl001 ",
               "                               AND gzcb001 = ? ",
               "                               AND gzcbl003 = '",g_dlang,"'",
               " WHERE gzcb001 = ? ",
               " ORDER BY gzcb012 "
   PREPARE apmi140_gzcbl004_prep FROM l_sql
   DECLARE apmi140_gzcbl004_curs CURSOR FOR apmi140_gzcbl004_prep 
   
   LET l_num = 1
   LET l_pmbm002 = 1
   LET l_str1 = ''
   LET l_str2 = ''
   FOREACH apmi140_gzca001_curs INTO l_gzca001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      FOREACH apmi140_gzcbl004_curs USING l_gzca001,l_gzca001
                                     INTO l_gzcb002,l_gzcbl004
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

            EXIT FOREACH
         END IF
         
         INSERT INTO apmi140_combo_t(pmbm002,pmbm004,gzcb002)
                              VALUES(l_pmbm002,l_num,l_gzcb002 )

         LET l_str2 = l_str2,l_gzcb002,".",l_gzcbl004,","

         LET l_str1 = l_str1,l_num USING '<<<',","
         LET l_num = l_num + 1

      END FOREACH

      LET l_pmbm002 = l_pmbm002 + 1

   END FOREACH

   LET l_str1 = l_str1.subString(1,l_str1.getLength()-1)
   LET l_str2 = l_str2.subString(1,l_str2.getLength()-1) 
   
   CALL cl_set_combo_items("pmbm004",l_str1,l_str2)
END FUNCTION]]>
  </point>
  <point name="function.apmi140_chk_pmbm003_sum" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查單身權重
# Memo...........:
# Usage..........: CALL apmi140_chk_pmbm003_sum()
# Date & Author..: 2014/07/14 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi140_chk_pmbm003_sum()
   DEFINE l_cnt     LIKE type_t.num5
   DEFINE l_sum     LIKE pmbm_t.pmbm003

   LET g_errno = ''

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM pmbm_t
    WHERE pmbment = g_enterprise
      AND pmbmsite = g_site
      AND pmbm001 = g_pmbk_m.pmbk001
   IF l_cnt > 0 THEN
      LET l_sum = 0
      SELECT SUM(pmbm003) INTO l_sum
        FROM pmbm_t
       WHERE pmbment = g_enterprise
         AND pmbmsite = g_site
         AND pmbm001 = g_pmbk_m.pmbk001
      IF l_sum <> 100 THEN
         LET g_errno = 'afc-00003'      #輸入的權重加總起來必須等於100！  
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.apmi140_chk_pmbn003_sum" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查單身權重
# Memo...........:
# Usage..........: CALL apmi140_chk_pmbn003_sum()
# Date & Author..: 2014/07/14 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi140_chk_pmbn003_sum()
   DEFINE l_cnt     LIKE type_t.num5
   DEFINE l_sum     LIKE pmbn_t.pmbn003

   LET g_errno = ''

   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM pmbn_t
    WHERE pmbnent = g_enterprise
      AND pmbnsite = g_site
      AND pmbn001 = g_pmbk_m.pmbk001
   IF l_cnt > 0 THEN
      LET l_sum = 0
      SELECT SUM(pmbn003) INTO l_sum
        FROM pmbn_t
       WHERE pmbnent = g_enterprise
         AND pmbnsite = g_site
         AND pmbn001 = g_pmbk_m.pmbk001
      IF l_sum <> 100 THEN
         LET g_errno = 'afc-00003'     #輸入的權重加總起來必須等於100！  
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.apmi140_create_tmp" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 建立temp table
# Memo...........:
# Usage..........: CALL apmi140_create_tmp()
# Date & Author..: 2014/07/14 By ming
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi140_create_tmp()
   CREATE TEMP TABLE apmi140_combo_t(
      pmbm002     LIKE pmbm_t.pmbm002,
      pmbm004     LIKE pmbm_t.pmbm004,
      gzcb002     LIKE gzcb_t.gzcb002
   )
END FUNCTION]]>
  </point>
  <point name="function.apmi140_get_pmbm004_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION apmi140_get_pmbm004_ref(p_pmbm002,p_pmbm004)
   DEFINE p_pmbm002     LIKE pmbm_t.pmbm002
   DEFINE p_pmbm004     LIKE pmbm_t.pmbm004
   DEFINE l_gzcb002     LIKE gzcb_t.gzcb002
   DEFINE r_pmbm004_ref LIKE type_t.chr80

   LET r_pmbm004_ref = ''
   SELECT gzcb002 INTO l_gzcb002
     FROM apmi140_combo_t
    WHERE pmbm002 = p_pmbm002
      AND pmbm004 = p_pmbm004

   IF p_pmbm002 = '1' THEN
      CASE l_gzcb002
         WHEN '1'
            LET r_pmbm004_ref = cl_getmsg('apm-00554',g_lang)    #當期IQC合格批數/當期總進貨批數  
         WHEN '2'
            LET r_pmbm004_ref = cl_getmsg('apm-00555',g_lang)    #當期收貨入庫量/當期總收貨量  
         OTHERWISE
            EXIT CASE
      END  CASE
   END IF 
   
   IF p_pmbm002 = '2' THEN
      CASE l_gzcb002
         WHEN '1'
            LET r_pmbm004_ref = cl_getmsg('apm-00556',g_lang)    #滿足採購單要求交期量/當期採購總量  
         WHEN '2'
            LET r_pmbm004_ref = cl_getmsg('apm-00557',g_lang)    #滿足供應商答覆交期量/當期採購總量  
         OTHERWISE
            EXIT CASE
      END  CASE
   END IF
   
   IF p_pmbm002 = '3' THEN
      CASE l_gzcb002
         WHEN '1'
            LET r_pmbm004_ref = cl_getmsg('apm-00558',g_lang)    #(1-(採購價格-目標價格)/目標價格)*100  
         OTHERWISE
            EXIT CASE
      END  CASE
   END IF

   RETURN r_pmbm004_ref
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmbm004  LIKE pmbm_t.pmbm004]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         SELECT pmbm004 INTO l_pmbm004
           FROM apmi140_combo_t
          WHERE pmbm002 = g_pmbl2_d[l_ac].pmbm002
            AND gzcb002 = g_pmbl2_d[l_ac].pmbm004
         LET g_pmbl2_d[l_ac].pmbm004 = l_pmbm004

         CALL apmi140_get_pmbm004_ref(g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004)
              RETURNING g_pmbl2_d[l_ac].l_pmbm004_desc]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc = g_wc," AND pmbksite = '",g_site,"' "]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_wc = l_wc," AND pmbksite = '",g_site,"' "]]>
  </point>
  <point name="construct.c.page1.pmbl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = "251"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbl002  #顯示到畫面上
            NEXT FIELD pmbl002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.pmbn002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = '2052'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbn002  #顯示到畫面上
            NEXT FIELD pmbn002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.pmbo002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            LET g_qryparam.arg1 = '2053'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbo002  #顯示到畫面上
            NEXT FIELD pmbo002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.pmbk001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmbk001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbk001  #顯示到畫面上
            NEXT FIELD pmbk001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.pmbkcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbkcrtdp  #顯示到畫面上
            NEXT FIELD pmbkcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.pmbkcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbkcrtid  #顯示到畫面上
            NEXT FIELD pmbkcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.pmbkmodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbkmodid  #顯示到畫面上
            NEXT FIELD pmbkmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.pmbkowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbkowndp  #顯示到畫面上
            NEXT FIELD pmbkowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.pmbkownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE 
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbkownid  #顯示到畫面上
            NEXT FIELD pmbkownid                     #返回原欄位
    

]]>
  </point>
  <point name="init.init" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #設定pmbm004的下拉式選項
   CALL apmi140_set_pmbm004_combo() 
   
   #ming 20141215 add ----------------------------------(S) 
   #配合徐晶加入scc加入第三個選項，所以這裡要改寫成只取1、2的方式
   CALL cl_set_combo_scc_part('pmbm006','3025','1,2')
   #ming 20141215 add ----------------------------------(E) ]]>
  </point>
  <point name="input.a.page1.pmbl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            

            LET g_pmbl_d[l_ac].pmbl002_desc = ' '
            CALL s_desc_get_acc_desc('251',g_pmbl_d[l_ac].pmbl002)
                 RETURNING g_pmbl_d[l_ac].pmbl002_desc

            IF NOT cl_null(g_pmbl_d[l_ac].pmbl002) THEN 
               IF g_pmbk_m.pmbk001 IS NOT NULL AND g_pmbl_d[g_detail_idx].pmbl002 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbk_m.pmbk001 != g_pmbk001_t OR g_pmbl_d[g_detail_idx].pmbl002 != g_pmbl_d_t.pmbl002)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbl_t WHERE "||"pmblent = '" ||g_enterprise|| "' AND "||"pmblsite = '"||g_site ||"' AND "|| "pmbl001 = '"||g_pmbk_m.pmbk001 ||"' AND "|| "pmbl002 = '"||g_pmbl_d[g_detail_idx].pmbl002 ||"'",'std-00004',0) THEN 
                        LET g_pmbl_d[l_ac].pmbl002 = g_pmbl_d_t.pmbl002 
                        CALL s_desc_get_acc_desc('251',g_pmbl_d[l_ac].pmbl002) 
                             RETURNING g_pmbl_d[l_ac].pmbl002_desc 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               IF g_pmbl_d[l_ac].pmbl002 <> 'ALL' THEN
                  IF NOT s_azzi650_chk_exist('251',g_pmbl_d[l_ac].pmbl002) THEN
                     LET g_pmbl_d[l_ac].pmbl002 = g_pmbl_d_t.pmbl002
                     CALL s_desc_get_acc_desc('251',g_pmbl_d[l_ac].pmbl002)
                          RETURNING g_pmbl_d[l_ac].pmbl002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF
            
            CALL s_desc_get_acc_desc('251',g_pmbl_d[l_ac].pmbl002)
                 RETURNING g_pmbl_d[l_ac].pmbl002_desc
]]>
  </point>
  <point name="input.a.page2.pmbm002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF g_pmbk_m.pmbk001 IS NOT NULL AND g_pmbl2_d[g_detail_idx].pmbm002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbk_m.pmbk001 != g_pmbk001_t OR g_pmbl2_d[g_detail_idx].pmbm002 != g_pmbl2_d_t.pmbm002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbm_t WHERE "||"pmbment = '" ||g_enterprise|| "' AND "||"pmbmsite = '"||g_site ||"' AND "|| "pmbm001 = '"||g_pmbk_m.pmbk001 ||"' AND "|| "pmbm002 = '"||g_pmbl2_d[g_detail_idx].pmbm002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_pmbl2_d[l_ac].pmbm002) THEN
               IF g_pmbl2_d[l_ac].pmbm002 != g_pmbl2_d_o.pmbm002 OR
                  g_pmbl2_d_o.pmbm002 IS NULL THEN 
                  
                  SELECT pmbm004 INTO g_pmbl2_d[l_ac].pmbm004
                    FROM apmi140_combo_t
                   WHERE pmbm002 = g_pmbl2_d[l_ac].pmbm002
                     AND gzcb002 = (SELECT MIN(gzcb002)
                                      FROM apmi140_combo_t
                                     WHERE pmbm002 = g_pmbl2_d[l_ac].pmbm002)
                  CALL apmi140_get_pmbm004_ref(g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004)
                       RETURNING g_pmbl2_d[l_ac].l_pmbm004_desc   
               END IF
               
               #當項目編號為1.交期 或 2.品質時 價格類型顯示為NULL  
               IF g_pmbl2_d[l_ac].pmbm002 <> '3' THEN
                  LET g_pmbl2_d[l_ac].pmbm006 = NULL
               ELSE
                  LET g_pmbl2_d[l_ac].pmbm006 = '1'
               END IF
               
            END IF
            
            LET g_pmbl2_d_o.pmbm002 = g_pmbl2_d[l_ac].pmbm002

            CALL apmi140_set_entry_b(p_cmd)
            CALL apmi140_set_no_entry_b(p_cmd)
]]>
  </point>
  <point name="input.a.page2.pmbm003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbl2_d[l_ac].pmbm003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.pmbm004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_pmbl2_d[l_ac].l_pmbm004_desc = ' '
            CALL apmi140_get_pmbm004_ref(g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004)
                 RETURNING g_pmbl2_d[l_ac].l_pmbm004_desc
            IF NOT cl_null(g_pmbl2_d[l_ac].pmbm004) THEN
               IF NOT cl_null(g_pmbl2_d[l_ac].pmbm002) THEN 
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt
                    FROM apmi140_combo_t
                   WHERE pmbm002 = g_pmbl2_d[l_ac].pmbm002
                     AND pmbm004 = g_pmbl2_d[l_ac].pmbm004
                  IF cl_null(l_cnt) THEN
                     LET l_cnt = 0
                  END IF
                  IF l_cnt = 0 THEN 
                     LET g_pmbl2_d[l_ac].pmbm004 = g_pmbl2_d_o.pmbm004
                     CALL apmi140_get_pmbm004_ref(g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004)
                          RETURNING g_pmbl2_d[l_ac].l_pmbm004_desc 
                          
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'apm-00553'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
     #此評核項目不可選擇此評分公式！  
                     NEXT FIELD CURRENT
                  END IF
               
               END IF
            END IF 
            CALL apmi140_get_pmbm004_ref(g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004)
                 RETURNING g_pmbl2_d[l_ac].l_pmbm004_desc 
                 
            LET g_pmbl2_d_o.pmbm004 = g_pmbl2_d[l_ac].pmbm004]]>
  </point>
  <point name="input.a.page2.pmbm005" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbl2_d[l_ac].pmbm005) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page3.pmbn002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            
            LET g_pmbl3_d[l_ac].pmbn002_desc = ' '
            CALL s_desc_get_acc_desc('2052',g_pmbl3_d[l_ac].pmbn002)
                 RETURNING g_pmbl3_d[l_ac].pmbn002_desc

            IF NOT cl_null(g_pmbl3_d[l_ac].pmbn002) THEN 
               IF g_pmbk_m.pmbk001 IS NOT NULL AND g_pmbl3_d[g_detail_idx].pmbn002 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbk_m.pmbk001 != g_pmbk001_t OR g_pmbl3_d[g_detail_idx].pmbn002 != g_pmbl3_d_t.pmbn002)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbn_t WHERE "||"pmbnent = '" ||g_enterprise|| "' AND "||"pmbnsite = '"||g_site ||"' AND "|| "pmbn001 = '"||g_pmbk_m.pmbk001 ||"' AND "|| "pmbn002 = '"||g_pmbl3_d[g_detail_idx].pmbn002 ||"'",'std-00004',0) THEN 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            
               IF g_pmbl3_d[l_ac].pmbn002 != g_pmbl3_d_o.pmbn002 OR
                  g_pmbl3_d_o.pmbn002 IS NULL THEN
                  IF NOT s_azzi650_chk_exist('2052',g_pmbl3_d[l_ac].pmbn002) THEN
                     LET g_pmbl3_d[l_ac].pmbn002 = g_pmbl3_d_t.pmbn002
                     CALL s_desc_get_acc_desc('2052',g_pmbl3_d[l_ac].pmbn002)
                          RETURNING g_pmbl3_d[l_ac].pmbn002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            
            CALL s_desc_get_acc_desc('2052',g_pmbl3_d[l_ac].pmbn002)
                 RETURNING g_pmbl3_d[l_ac].pmbn002_desc 
                 
            LET g_pmbl3_d_o.pmbn002 = g_pmbl3_d[l_ac].pmbn002 
]]>
  </point>
  <point name="input.a.page3.pmbn003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbl3_d[l_ac].pmbn003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page4.pmbo002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            
            LET g_pmbl4_d[l_ac].pmbo002_desc = ' '
            CALL s_desc_get_acc_desc('2053',g_pmbl4_d[l_ac].pmbo002)
                 RETURNING g_pmbl4_d[l_ac].pmbo002_desc

            IF NOT cl_null(g_pmbl4_d[l_ac].pmbo002) THEN                
               IF g_pmbk_m.pmbk001 IS NOT NULL AND g_pmbl4_d[g_detail_idx].pmbo002 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbk_m.pmbk001 != g_pmbk001_t OR g_pmbl4_d[g_detail_idx].pmbo002 != g_pmbl4_d_t.pmbo002)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbo_t WHERE "||"pmboent = '" ||g_enterprise|| "' AND "||"pmbosite = '"||g_site ||"' AND "|| "pmbo001 = '"||g_pmbk_m.pmbk001 ||"' AND "|| "pmbo002 = '"||g_pmbl4_d[g_detail_idx].pmbo002 ||"'",'std-00004',0) THEN 
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF 
               
               IF g_pmbl4_d[l_ac].pmbo002 != g_pmbl4_d_o.pmbo002 OR
                  g_pmbl4_d_o.pmbo002 IS NULL THEN
                  IF NOT s_azzi650_chk_exist('2053',g_pmbl4_d[l_ac].pmbo002) THEN
                     LET g_pmbl4_d[l_ac].pmbo002 = g_pmbl4_d_o.pmbo002
                     CALL s_desc_get_acc_desc('2053',g_pmbl4_d[l_ac].pmbo002)
                          RETURNING g_pmbl4_d[l_ac].pmbo002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            END IF  
            
            CALL s_desc_get_acc_desc('2053',g_pmbl4_d[l_ac].pmbo002)
                 RETURNING g_pmbl4_d[l_ac].pmbo002_desc

            LET g_pmbl4_d_o.pmbo002 = g_pmbl4_d[l_ac].pmbo002
]]>
  </point>
  <point name="input.a.page4.pmbo003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbl4_d[l_ac].pmbo003) THEN  
               IF g_pmbl4_d[l_ac].pmbo003 != g_pmbl4_d_t.pmbo003 OR
                  g_pmbl4_d_t.pmbo003 IS NULL THEN
                  CALL apmi140_range_chk(g_pmbl4_d[l_ac].pmbo003,g_pmbl4_d_t.pmbo002)

                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_pmbl4_d[l_ac].pmbo003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pmbl4_d[l_ac].pmbo003 = g_pmbl4_d_t.pmbo003
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF g_pmbl4_d[l_ac].pmbo003 != g_pmbl4_d_o.pmbo003 OR
                  g_pmbl4_d_o.pmbo003 IS NULL THEN
                  IF NOT cl_null(g_pmbl4_d[l_ac].pmbo004) THEN
                     IF g_pmbl4_d[l_ac].pmbo003 > g_pmbl4_d[l_ac].pmbo004 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'apm-00063'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
          #分數起不可大於分數迄！  
                        NEXT FIELD CURRENT 
                     END IF
                  END IF
               END IF
            END IF 

            LET g_pmbl4_d_o.pmbo003 = g_pmbl4_d[l_ac].pmbo003
]]>
  </point>
  <point name="input.a.page4.pmbo004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbl4_d[l_ac].pmbo004) THEN  
               IF g_pmbl4_d[l_ac].pmbo004 != g_pmbl4_d_t.pmbo004 OR
                  g_pmbl4_d_t.pmbo004 IS NULL THEN
                  CALL apmi140_range_chk(g_pmbl4_d[l_ac].pmbo004,g_pmbl4_d_t.pmbo002)

                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_pmbl4_d[l_ac].pmbo004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pmbl4_d[l_ac].pmbo004 = g_pmbl4_d_t.pmbo004
                     NEXT FIELD CURRENT
                  END IF
               END IF 
               IF g_pmbl4_d[l_ac].pmbo004 != g_pmbl4_d_o.pmbo004 OR
                  g_pmbl4_d_o.pmbo004 IS NULL THEN
                  IF NOT cl_null(g_pmbl4_d[l_ac].pmbo003) THEN
                     IF g_pmbl4_d[l_ac].pmbo003 > g_pmbl4_d[l_ac].pmbo004 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'apm-00063'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
          #分數起不可大於分數迄！  
                        LET g_pmbl4_d[l_ac].pmbo004 = g_pmbl4_d_o.pmbo004
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF 

            LET g_pmbl4_d_o.pmbo004 = g_pmbl4_d[l_ac].pmbo004
]]>
  </point>
  <point name="input.a.pmbk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_pmbk_m.pmbk001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmbk_m.pmbk001 != g_pmbk001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbk_t WHERE "||"pmbkent = '" ||g_enterprise|| "' AND "||"pmbksite = '"||g_site ||"' AND "|| "pmbk001 = '"||g_pmbk_m.pmbk001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.pmbk003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbk_m.pmbk003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.pmbk005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbk_m.pmbk005) THEN
               IF g_pmbk_m.pmbk005 <1 OR g_pmbk_m.pmbk005 >12 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'acr-00044'
                  LET g_errparam.extend = g_pmbk_m.pmbk005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
           #請輸入正確的月份！
                  LET g_pmbk_m.pmbk005 = g_pmbk_m_t.pmbk005
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.pmbk006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbk_m.pmbk006) THEN
               IF NOT cl_null(g_pmbk_m.pmbk007) THEN
                  IF g_pmbk_m.pmbk006 > g_pmbk_m.pmbk007 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00047'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
            #生效日期不可大於失效日期
                     LET g_pmbk_m.pmbk006 = g_pmbk_m_t.pmbk006
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.pmbk007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmbk_m.pmbk007) THEN
               IF NOT cl_null(g_pmbk_m.pmbk006) THEN
                  IF g_pmbk_m.pmbk006 > g_pmbk_m.pmbk007 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00047'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
             #生效日期不可大於失效日期
                     LET g_pmbk_m.pmbk007 = g_pmbk_m_t.pmbk007
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.pmbksite" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmbk_m.pmbksite) AND NOT cl_null(g_pmbk_m.pmbk001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmbk_m.pmbksite != g_pmbksite_t  OR g_pmbk_m.pmbk001 != g_pmbk001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbk_t WHERE "||"pmbkent = '" ||g_enterprise|| "' AND "||"pmbksite = '"||g_pmbk_m.pmbksite ||"' AND "|| "pmbk001 = '"||g_pmbk_m.pmbk001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM pmbk_t
    WHERE pmbkent = g_enterprise
      AND pmbksite = g_site
      AND pmbk001 = g_pmbk_m.pmbk001
   IF l_cnt > 0 THEN
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM pmbl_t
       WHERE pmblent = g_enterprise
         AND pmblsite = g_site
         AND pmbl001 = g_pmbk_m.pmbk001
      
      IF cl_null(l_cnt) THEN
         LET l_cnt = 0
      END IF
      
      IF l_cnt = 0 THEN
         IF INT_FLAG THEN
            LET INT_FLAG = FALSE
         END IF
         INSERT INTO pmbl_t(pmblent,pmblsite,pmbl001,pmbl002)
                  VALUES(g_enterprise,g_site,g_pmbk_m.pmbk001,'ALL')
      END IF
      
      CALL apmi140_chk_pmbm003_sum()
      IF NOT cl_null(g_errno) THEN
         IF INT_FLAG THEN
            LET INT_FLAG = FALSE
         END IF
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = g_errno
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
 
         LET g_aw = "s_detail2"
         CALL apmi140_input(p_cmd)
      END IF 
      
      CALL apmi140_chk_pmbn003_sum()
      IF NOT cl_null(g_errno) THEN
         IF INT_FLAG THEN
            LET INT_FLAG = FALSE
         END IF
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = g_errno
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
 
         LET g_aw = "s_detail3"
         CALL apmi140_input(p_cmd)
      END IF
   END IF]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_pmbl2_d[l_ac].pmbm004 = l_pmbm004 
               ]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_pmbm004 = g_pmbl2_d[l_ac].pmbm004
               SELECT gzcb002 INTO g_pmbl2_d[l_ac].pmbm004
                 FROM apmi140_combo_t
                WHERE pmbm004 = l_pmbm004]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL apmi140_get_pmbm004_ref(g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004)
                 RETURNING g_pmbl2_d[l_ac].l_pmbm004_desc]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            SELECT pmbm004 INTO l_pmbm004
              FROM apmi140_combo_t
             WHERE pmbm002 = g_pmbl2_d[l_ac].pmbm002
               AND gzcb002 = g_pmbl2_d[l_ac].pmbm004
            LET g_pmbl2_d[l_ac].pmbm004 = l_pmbm004]]>
  </point>
  <point name="input.body2.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #當項目編號為1.交期 或 2.品質時 價格類型顯示為NULL  
            LET g_pmbl2_d[l_ac].pmbm006 = NULL
            ]]>
  </point>
  <point name="input.body2.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body3.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body3.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.c.page1.pmbl002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbl_d[l_ac].pmbl002             #給予default值
            LET g_qryparam.default2 = "" #g_pmbl_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "251" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_pmbl_d[l_ac].pmbl002 = g_qryparam.return1              
            DISPLAY g_pmbl_d[l_ac].pmbl002 TO pmbl002              #
            CALL s_desc_get_acc_desc('251',g_pmbl_d[l_ac].pmbl002)
                 RETURNING g_pmbl_d[l_ac].pmbl002_desc
            NEXT FIELD pmbl002                          #返回原欄位
]]>
  </point>
  <point name="input.c.page3.pmbn002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbl3_d[l_ac].pmbn002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "2052" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_pmbl3_d[l_ac].pmbn002 = g_qryparam.return1              
            DISPLAY g_pmbl3_d[l_ac].pmbn002 TO pmbn002              #
            CALL s_desc_get_acc_desc('2052',g_pmbl3_d[l_ac].pmbn002)
                 RETURNING g_pmbl3_d[l_ac].pmbn002_desc
            NEXT FIELD pmbn002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.pmbo002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbl4_d[l_ac].pmbo002             #給予default值
            
            #給予arg
            LET g_qryparam.arg1 = "2053" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_pmbl4_d[l_ac].pmbo002 = g_qryparam.return1              
            DISPLAY g_pmbl4_d[l_ac].pmbo002 TO pmbo002              #
            CALL s_desc_get_acc_desc('2053',g_pmbl4_d[l_ac].pmbo002)
                 RETURNING g_pmbl4_d[l_ac].pmbo002_desc
            NEXT FIELD pmbo002                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmbm004              LIKE pmbm_t.pmbm004]]>
  </point>
  <point name="input.more_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      INPUT BY NAME g_pmbk_m.pmbk008,g_pmbk_m.pmbk009
                    ATTRIBUTE(WITHOUT DEFAULTS)

         BEFORE INPUT

         BEFORE FIELD pmbk008

         AFTER FIELD pmbk008  
            IF NOT cl_null(g_pmbk_m.pmbk008) THEN
               IF NOT cl_ap_chk_Range(g_pmbk_m.pmbk008,"0","1","100","1","azz-00087",1) THEN
                  NEXT FIELD pmbk008
               END IF
            END IF 
            
         BEFORE FIELD pmbk009

         AFTER FIELD pmbk009
            IF NOT cl_null(g_pmbk_m.pmbk009) THEN
               IF NOT cl_ap_chk_Range(g_pmbk_m.pmbk009,"0","1","100","1","azz-00087",1) THEN
                  NEXT FIELD pmbk009
               END IF
            END IF
         
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF g_pmbk_m.pmbk008 + g_pmbk_m.pmbk009 <> 100 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'afc-00003'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
        #輸入的權重加總起來必須等於100！  
               NEXT FIELD pmbk008
            END IF

            CALL s_transaction_begin()

            UPDATE pmbk_t SET pmbk008 = g_pmbk_m.pmbk008,
                              pmbk009 = g_pmbk_m.pmbk009
             WHERE pmbkent = g_enterprise
               AND pmbksite = g_site
               AND pmbk001 = g_pmbk_m.pmbk001
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "g_pmbk_m"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE DIALOG
            ELSE
               CALL s_transaction_end('Y','0')
            END IF

      END INPUT]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_pmbk_m.pmbk006 = g_today 
      LET g_pmbk_m.pmbkstus = 'Y']]>
  </point>
  <point name="insert_b.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_pmbl2_d[g_detail_idx].pmbm004 = l_pmbm004]]>
  </point>
  <point name="insert_b.before_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET l_pmbm004 = g_pmbl2_d[g_detail_idx].pmbm004
      SELECT gzcb002 INTO g_pmbl2_d[g_detail_idx].pmbm004
        FROM apmi140_combo_t
       WHERE pmbm004 = l_pmbm004]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmbm004   LIKE pmbm_t.pmbm004]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DROP TABLE apmi140_combo_t]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL apmi140_create_tmp()]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_pmbk_m.pmbk006 = g_today 
   LET g_pmbk_m.pmbkstus = 'Y']]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("pmbm005,pmbm006",TRUE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_pmbl2_d[l_ac].pmbm002 <> '2' THEN
      CALL cl_set_comp_entry("pmbm005",FALSE)
   END IF
   IF g_pmbl2_d[l_ac].pmbm002 <> '3' THEN
      CALL cl_set_comp_entry("pmbm006",FALSE)
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_pmbl_d[l_ac].pmbl002 <> 'ALL' THEN
         CALL s_desc_get_acc_desc('251',g_pmbl_d[l_ac].pmbl002)
              RETURNING g_pmbl_d[l_ac].pmbl002_desc
      END IF]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_desc_get_acc_desc('2052',g_pmbl3_d[l_ac].pmbn002)
           RETURNING g_pmbl3_d[l_ac].pmbn002_desc]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_desc_get_acc_desc('2053',g_pmbl4_d[l_ac].pmbo002)
           RETURNING g_pmbl4_d[l_ac].pmbo002_desc]]>
  </point>
  <section id="apmi140.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION apmi140_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.b_fill" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apmi140_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_pmbl_d.clear()    #g_pmbl_d 單頭及單身 
   CALL g_pmbl2_d.clear()
   CALL g_pmbl3_d.clear()
   CALL g_pmbl4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF apmi140_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE pmbl002 ,t1.oocql004 FROM pmbl_t",   
                     " INNER JOIN pmbk_t ON pmbk001 = pmbl001 ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='251' AND t1.oocql002=pmbl002 AND t1.oocql003='"||g_dlang||"' ",
 
                     " WHERE pmblent=? AND pmblsite=? AND pmbl001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmbl_t.pmbl002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmi140_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR apmi140_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_pmbk_m.pmbk001
                                               
      FOREACH b_fill_cs INTO g_pmbl_d[l_ac].pmbl002,g_pmbl_d[l_ac].pmbl002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF apmi140_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE pmbm002,pmbm004,pmbm005,pmbm006,pmbm003  FROM pmbm_t",   
                     " INNER JOIN pmbk_t ON pmbk001 = pmbm001 ",
 
                     "",
                     
                     
                     " WHERE pmbment=? AND pmbmsite=? AND pmbm001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmbm_t.pmbm002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmi140_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR apmi140_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise, g_site,g_pmbk_m.pmbk001
                                               
      FOREACH b_fill_cs2 INTO g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004,g_pmbl2_d[l_ac].pmbm005, 
          g_pmbl2_d[l_ac].pmbm006,g_pmbl2_d[l_ac].pmbm003
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF apmi140_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE pmbn002,pmbn003 ,t2.oocql004 FROM pmbn_t",   
                     " INNER JOIN pmbk_t ON pmbk001 = pmbn001 ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2052' AND t2.oocql002=pmbn002 AND t2.oocql003='"||g_dlang||"' ",
 
                     " WHERE pmbnent=? AND pmbnsite=? AND pmbn001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmbn_t.pmbn002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmi140_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR apmi140_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise, g_site,g_pmbk_m.pmbk001
                                               
      FOREACH b_fill_cs3 INTO g_pmbl3_d[l_ac].pmbn002,g_pmbl3_d[l_ac].pmbn003,g_pmbl3_d[l_ac].pmbn002_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF apmi140_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE pmbo002,pmbo003,pmbo004 ,t3.oocql004 FROM pmbo_t",   
                     " INNER JOIN pmbk_t ON pmbk001 = pmbo001 ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2053' AND t3.oocql002=pmbo002 AND t3.oocql003='"||g_dlang||"' ",
 
                     " WHERE pmboent=? AND pmbosite=? AND pmbo001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmbo_t.pmbo002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmi140_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR apmi140_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise, g_site,g_pmbk_m.pmbk001
                                               
      FOREACH b_fill_cs4 INTO g_pmbl4_d[l_ac].pmbo002,g_pmbl4_d[l_ac].pmbo003,g_pmbl4_d[l_ac].pmbo004, 
          g_pmbl4_d[l_ac].pmbo002_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_pmbl_d.deleteElement(g_pmbl_d.getLength())
   CALL g_pmbl2_d.deleteElement(g_pmbl2_d.getLength())
   CALL g_pmbl3_d.deleteElement(g_pmbl3_d.getLength())
   CALL g_pmbl4_d.deleteElement(g_pmbl4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apmi140_pb
   FREE apmi140_pb2
 
   FREE apmi140_pb3
 
   FREE apmi140_pb4
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_pmbl_d.getLength()
      LET g_pmbl_d_mask_o[l_ac].* =  g_pmbl_d[l_ac].*
      CALL apmi140_pmbl_t_mask()
      LET g_pmbl_d_mask_n[l_ac].* =  g_pmbl_d[l_ac].*
   END FOR
   
   LET g_pmbl2_d_mask_o.* =  g_pmbl2_d.*
   FOR l_ac = 1 TO g_pmbl2_d.getLength()
      LET g_pmbl2_d_mask_o[l_ac].* =  g_pmbl2_d[l_ac].*
      CALL apmi140_pmbm_t_mask()
      LET g_pmbl2_d_mask_n[l_ac].* =  g_pmbl2_d[l_ac].*
   END FOR
   LET g_pmbl3_d_mask_o.* =  g_pmbl3_d.*
   FOR l_ac = 1 TO g_pmbl3_d.getLength()
      LET g_pmbl3_d_mask_o[l_ac].* =  g_pmbl3_d[l_ac].*
      CALL apmi140_pmbn_t_mask()
      LET g_pmbl3_d_mask_n[l_ac].* =  g_pmbl3_d[l_ac].*
   END FOR
   LET g_pmbl4_d_mask_o.* =  g_pmbl4_d.*
   FOR l_ac = 1 TO g_pmbl4_d.getLength()
      LET g_pmbl4_d_mask_o[l_ac].* =  g_pmbl4_d[l_ac].*
      CALL apmi140_pmbo_t_mask()
      LET g_pmbl4_d_mask_n[l_ac].* =  g_pmbl4_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.b_fill2" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apmi140_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apmi140_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.browser_fill" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apmi140_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE pmbk001 ",
                      " FROM pmbk_t ",
                      " ",
                      " LEFT JOIN pmbl_t ON pmblent = pmbkent AND pmblsite = pmbksite AND pmbk001 = pmbl001 ", "  ",
                      #add-point:browser_fill段sql(pmbl_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN pmbm_t ON pmbment = pmbkent AND pmbmsite = pmbksite AND pmbk001 = pmbm001", "  ",
                      #add-point:browser_fill段sql(pmbm_t1)
                      {<point name="browser_fill.cnt.join.pmbm_t1"/>}
                      #end add-point
 
                      " LEFT JOIN pmbn_t ON pmbnent = pmbkent AND pmbnsite = pmbksite AND pmbk001 = pmbn001", "  ",
                      #add-point:browser_fill段sql(pmbn_t1)
                      {<point name="browser_fill.cnt.join.pmbn_t1"/>}
                      #end add-point
 
                      " LEFT JOIN pmbo_t ON pmboent = pmbkent AND pmbosite = pmbksite AND pmbk001 = pmbo001", "  ",
                      #add-point:browser_fill段sql(pmbo_t1)
                      {<point name="browser_fill.cnt.join.pmbo_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE pmbkent = '" ||g_enterprise|| "' AND pmbksite = '" ||g_site|| "' AND pmblent = '" ||g_enterprise|| "' AND pmblsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("pmbk_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE pmbk001 ",
                      " FROM pmbk_t ", 
                      "  ",
                      "  ",
                      " WHERE pmbkent = '" ||g_enterprise|| "' AND pmbksite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("pmbk_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_pmbk_m.* TO NULL
      CALL g_pmbl_d.clear()        
      CALL g_pmbl2_d.clear() 
      CALL g_pmbl3_d.clear() 
      CALL g_pmbl4_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.pmbksite,t0.pmbk001,t0.pmbk002,t0.pmbk003,t0.pmbk006,t0.pmbk007 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.pmbkstus,t0.pmbksite,t0.pmbk001,t0.pmbk002,t0.pmbk003,t0.pmbk006, 
       t0.pmbk007 ",
               " FROM pmbk_t t0",
               "  ",
               "  LEFT JOIN pmbl_t ON pmblent = pmbkent AND pmblsite = pmbksite AND pmbk001 = pmbl001 ", "  ", 
               #add-point:browser_fill段sql(pmbl_t1)
               {<point name="browser_fill.join.pmbl_t1"/>}
               #end add-point
               "  LEFT JOIN pmbm_t ON pmbment = pmbkent AND pmbmsite = pmbksite AND pmbk001 = pmbm001", "  ", 
               #add-point:browser_fill段sql(pmbm_t1)
               {<point name="browser_fill.join.pmbm_t1"/>}
               #end add-point
 
               "  LEFT JOIN pmbn_t ON pmbnent = pmbkent AND pmbnsite = pmbksite AND pmbk001 = pmbn001", "  ", 
               #add-point:browser_fill段sql(pmbn_t1)
               {<point name="browser_fill.join.pmbn_t1"/>}
               #end add-point
 
               "  LEFT JOIN pmbo_t ON pmboent = pmbkent AND pmbosite = pmbksite AND pmbk001 = pmbo001", "  ", 
               #add-point:browser_fill段sql(pmbo_t1)
               {<point name="browser_fill.join.pmbo_t1"/>}
               #end add-point
 
 
 
               "  ",
               
               " WHERE t0.pmbkent = '" ||g_enterprise|| "' AND t0.pmbksite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("pmbk_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY pmbk001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"pmbk_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_pmbksite,g_browser[g_cnt].b_pmbk001, 
       g_browser[g_cnt].b_pmbk002,g_browser[g_cnt].b_pmbk003,g_browser[g_cnt].b_pmbk006,g_browser[g_cnt].b_pmbk007 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL apmi140_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_pmbk001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.construct" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apmi140_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_pmbk_m.* TO NULL
   CALL g_pmbl_d.clear()        
   CALL g_pmbl2_d.clear() 
   CALL g_pmbl3_d.clear() 
   CALL g_pmbl4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON pmbk001,pmbk002,pmbk003,pmbk006,pmbk007,pmbk004,pmbk005,pmbkstus,pmbkownid, 
          pmbkowndp,pmbkcrtid,pmbkcrtdp,pmbkcrtdt,pmbkmodid,pmbkmoddt,pmbk008,pmbk009
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<pmbkcrtdt>>----
         AFTER FIELD pmbkcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<pmbkmoddt>>----
         AFTER FIELD pmbkmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmbkcnfdt>>----
         
         #----<<pmbkpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.pmbk001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk001
            #add-point:ON ACTION controlp INFIELD pmbk001
            {<point name="construct.c.pmbk001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk001
            #add-point:BEFORE FIELD pmbk001
            {<point name="construct.b.pmbk001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk001
            
            #add-point:AFTER FIELD pmbk001
            {<point name="construct.a.pmbk001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk002
            #add-point:BEFORE FIELD pmbk002
            {<point name="construct.b.pmbk002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk002
            
            #add-point:AFTER FIELD pmbk002
            {<point name="construct.a.pmbk002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk002
            #add-point:ON ACTION controlp INFIELD pmbk002
            {<point name="construct.c.pmbk002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk003
            #add-point:BEFORE FIELD pmbk003
            {<point name="construct.b.pmbk003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk003
            
            #add-point:AFTER FIELD pmbk003
            {<point name="construct.a.pmbk003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk003
            #add-point:ON ACTION controlp INFIELD pmbk003
            {<point name="construct.c.pmbk003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk006
            #add-point:BEFORE FIELD pmbk006
            {<point name="construct.b.pmbk006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk006
            
            #add-point:AFTER FIELD pmbk006
            {<point name="construct.a.pmbk006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk006
            #add-point:ON ACTION controlp INFIELD pmbk006
            {<point name="construct.c.pmbk006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk007
            #add-point:BEFORE FIELD pmbk007
            {<point name="construct.b.pmbk007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk007
            
            #add-point:AFTER FIELD pmbk007
            {<point name="construct.a.pmbk007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk007
            #add-point:ON ACTION controlp INFIELD pmbk007
            {<point name="construct.c.pmbk007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk004
            #add-point:BEFORE FIELD pmbk004
            {<point name="construct.b.pmbk004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk004
            
            #add-point:AFTER FIELD pmbk004
            {<point name="construct.a.pmbk004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk004
            #add-point:ON ACTION controlp INFIELD pmbk004
            {<point name="construct.c.pmbk004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk005
            #add-point:BEFORE FIELD pmbk005
            {<point name="construct.b.pmbk005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk005
            
            #add-point:AFTER FIELD pmbk005
            {<point name="construct.a.pmbk005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk005
            #add-point:ON ACTION controlp INFIELD pmbk005
            {<point name="construct.c.pmbk005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkstus
            #add-point:BEFORE FIELD pmbkstus
            {<point name="construct.b.pmbkstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbkstus
            
            #add-point:AFTER FIELD pmbkstus
            {<point name="construct.a.pmbkstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbkstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbkstus
            #add-point:ON ACTION controlp INFIELD pmbkstus
            {<point name="construct.c.pmbkstus" />}
            #END add-point
 
         #Ctrlp:construct.c.pmbkownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbkownid
            #add-point:ON ACTION controlp INFIELD pmbkownid
            {<point name="construct.c.pmbkownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkownid
            #add-point:BEFORE FIELD pmbkownid
            {<point name="construct.b.pmbkownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbkownid
            
            #add-point:AFTER FIELD pmbkownid
            {<point name="construct.a.pmbkownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbkowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbkowndp
            #add-point:ON ACTION controlp INFIELD pmbkowndp
            {<point name="construct.c.pmbkowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkowndp
            #add-point:BEFORE FIELD pmbkowndp
            {<point name="construct.b.pmbkowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbkowndp
            
            #add-point:AFTER FIELD pmbkowndp
            {<point name="construct.a.pmbkowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbkcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbkcrtid
            #add-point:ON ACTION controlp INFIELD pmbkcrtid
            {<point name="construct.c.pmbkcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkcrtid
            #add-point:BEFORE FIELD pmbkcrtid
            {<point name="construct.b.pmbkcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbkcrtid
            
            #add-point:AFTER FIELD pmbkcrtid
            {<point name="construct.a.pmbkcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbkcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbkcrtdp
            #add-point:ON ACTION controlp INFIELD pmbkcrtdp
            {<point name="construct.c.pmbkcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkcrtdp
            #add-point:BEFORE FIELD pmbkcrtdp
            {<point name="construct.b.pmbkcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbkcrtdp
            
            #add-point:AFTER FIELD pmbkcrtdp
            {<point name="construct.a.pmbkcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkcrtdt
            #add-point:BEFORE FIELD pmbkcrtdt
            {<point name="construct.b.pmbkcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.pmbkmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbkmodid
            #add-point:ON ACTION controlp INFIELD pmbkmodid
            {<point name="construct.c.pmbkmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkmodid
            #add-point:BEFORE FIELD pmbkmodid
            {<point name="construct.b.pmbkmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbkmodid
            
            #add-point:AFTER FIELD pmbkmodid
            {<point name="construct.a.pmbkmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkmoddt
            #add-point:BEFORE FIELD pmbkmoddt
            {<point name="construct.b.pmbkmoddt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk008
            #add-point:BEFORE FIELD pmbk008
            {<point name="construct.b.pmbk008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk008
            
            #add-point:AFTER FIELD pmbk008
            {<point name="construct.a.pmbk008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk008
            #add-point:ON ACTION controlp INFIELD pmbk008
            {<point name="construct.c.pmbk008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk009
            #add-point:BEFORE FIELD pmbk009
            {<point name="construct.b.pmbk009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk009
            
            #add-point:AFTER FIELD pmbk009
            {<point name="construct.a.pmbk009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmbk009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk009
            #add-point:ON ACTION controlp INFIELD pmbk009
            {<point name="construct.c.pmbk009" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON pmbl002
           FROM s_detail1[1].pmbl002
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.pmbl002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbl002
            #add-point:ON ACTION controlp INFIELD pmbl002
            {<point name="construct.c.page1.pmbl002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbl002
            #add-point:BEFORE FIELD pmbl002
            {<point name="construct.b.page1.pmbl002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbl002
            
            #add-point:AFTER FIELD pmbl002
            {<point name="construct.a.page1.pmbl002" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON pmbm002,pmbm004,pmbm005,pmbm006,pmbm003
           FROM s_detail2[1].pmbm002,s_detail2[1].pmbm004,s_detail2[1].pmbm005,s_detail2[1].pmbm006, 
               s_detail2[1].pmbm003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm002
            #add-point:BEFORE FIELD pmbm002
            {<point name="construct.b.page2.pmbm002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm002
            
            #add-point:AFTER FIELD pmbm002
            {<point name="construct.a.page2.pmbm002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmbm002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm002
            #add-point:ON ACTION controlp INFIELD pmbm002
            {<point name="construct.c.page2.pmbm002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm004
            #add-point:BEFORE FIELD pmbm004
            {<point name="construct.b.page2.pmbm004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm004
            
            #add-point:AFTER FIELD pmbm004
            {<point name="construct.a.page2.pmbm004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmbm004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm004
            #add-point:ON ACTION controlp INFIELD pmbm004
            {<point name="construct.c.page2.pmbm004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm005
            #add-point:BEFORE FIELD pmbm005
            {<point name="construct.b.page2.pmbm005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm005
            
            #add-point:AFTER FIELD pmbm005
            {<point name="construct.a.page2.pmbm005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmbm005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm005
            #add-point:ON ACTION controlp INFIELD pmbm005
            {<point name="construct.c.page2.pmbm005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm006
            #add-point:BEFORE FIELD pmbm006
            {<point name="construct.b.page2.pmbm006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm006
            
            #add-point:AFTER FIELD pmbm006
            {<point name="construct.a.page2.pmbm006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmbm006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm006
            #add-point:ON ACTION controlp INFIELD pmbm006
            {<point name="construct.c.page2.pmbm006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm003
            #add-point:BEFORE FIELD pmbm003
            {<point name="construct.b.page2.pmbm003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm003
            
            #add-point:AFTER FIELD pmbm003
            {<point name="construct.a.page2.pmbm003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmbm003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm003
            #add-point:ON ACTION controlp INFIELD pmbm003
            {<point name="construct.c.page2.pmbm003" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON pmbn002,pmbn003
           FROM s_detail3[1].pmbn002,s_detail3[1].pmbn003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page3.pmbn002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbn002
            #add-point:ON ACTION controlp INFIELD pmbn002
            {<point name="construct.c.page3.pmbn002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbn002
            #add-point:BEFORE FIELD pmbn002
            {<point name="construct.b.page3.pmbn002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbn002
            
            #add-point:AFTER FIELD pmbn002
            {<point name="construct.a.page3.pmbn002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbn003
            #add-point:BEFORE FIELD pmbn003
            {<point name="construct.b.page3.pmbn003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbn003
            
            #add-point:AFTER FIELD pmbn003
            {<point name="construct.a.page3.pmbn003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.pmbn003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbn003
            #add-point:ON ACTION controlp INFIELD pmbn003
            {<point name="construct.c.page3.pmbn003" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON pmbo002,pmbo003,pmbo004
           FROM s_detail4[1].pmbo002,s_detail4[1].pmbo003,s_detail4[1].pmbo004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page4.pmbo002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbo002
            #add-point:ON ACTION controlp INFIELD pmbo002
            {<point name="construct.c.page4.pmbo002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbo002
            #add-point:BEFORE FIELD pmbo002
            {<point name="construct.b.page4.pmbo002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbo002
            
            #add-point:AFTER FIELD pmbo002
            {<point name="construct.a.page4.pmbo002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbo003
            #add-point:BEFORE FIELD pmbo003
            {<point name="construct.b.page4.pmbo003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbo003
            
            #add-point:AFTER FIELD pmbo003
            {<point name="construct.a.page4.pmbo003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.pmbo003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbo003
            #add-point:ON ACTION controlp INFIELD pmbo003
            {<point name="construct.c.page4.pmbo003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbo004
            #add-point:BEFORE FIELD pmbo004
            {<point name="construct.b.page4.pmbo004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbo004
            
            #add-point:AFTER FIELD pmbo004
            {<point name="construct.a.page4.pmbo004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.pmbo004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbo004
            #add-point:ON ACTION controlp INFIELD pmbo004
            {<point name="construct.c.page4.pmbo004" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.default_search" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apmi140_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pmbk001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.delete" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION apmi140_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_pmbk_m.pmbk001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmi140_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmi140_master_referesh USING g_site,g_pmbk_m.pmbk001 INTO g_pmbk_m.pmbk001,g_pmbk_m.pmbk002, 
       g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus, 
       g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt, 
       g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkmodid_desc 

   
   #檢查是否允許此動作
   IF NOT apmi140_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmbk_m_mask_o.* =  g_pmbk_m.*
   CALL apmi140_pmbk_t_mask()
   LET g_pmbk_m_mask_n.* =  g_pmbk_m.*
   
   CALL apmi140_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL apmi140_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_pmbk001_t = g_pmbk_m.pmbk001
 
 
      DELETE FROM pmbk_t
       WHERE pmbkent = g_enterprise AND pmbksite = g_site AND pmbk001 = g_pmbk_m.pmbk001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_pmbk_m.pmbk001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM pmbl_t
       WHERE pmblent = g_enterprise AND pmblsite = g_site AND pmbl001 = g_pmbk_m.pmbk001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM pmbm_t
       WHERE pmbment = g_enterprise AND pmbmsite = g_site AND
             pmbm001 = g_pmbk_m.pmbk001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM pmbn_t
       WHERE pmbnent = g_enterprise AND pmbnsite = g_site AND
             pmbn001 = g_pmbk_m.pmbk001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbn_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM pmbo_t
       WHERE pmboent = g_enterprise AND pmbosite = g_site AND
             pmbo001 = g_pmbk_m.pmbk001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbo_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE apmi140_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_pmbl_d.clear() 
      CALL g_pmbl2_d.clear()       
      CALL g_pmbl3_d.clear()       
      CALL g_pmbl4_d.clear()       
 
     
      CALL apmi140_ui_browser_refresh()  
      #CALL apmi140_ui_headershow()  
      #CALL apmi140_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL apmi140_browser_fill("")
         CALL apmi140_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE apmi140_cl
 
   #功能已完成,通報訊息中心
   CALL apmi140_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="apmi140.delete_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apmi140_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM pmbl_t
       WHERE pmblent = g_enterprise AND pmblsite = g_site AND
         pmbl001 = ps_keys_bak[1] AND pmbl002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmbl_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM pmbm_t
       WHERE pmbment = g_enterprise AND pmbmsite = g_site AND
             pmbm001 = ps_keys_bak[1] AND pmbm002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_pmbl2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM pmbn_t
       WHERE pmbnent = g_enterprise AND pmbnsite = g_site AND
             pmbn001 = ps_keys_bak[1] AND pmbn002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbn_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_pmbl3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM pmbo_t
       WHERE pmboent = g_enterprise AND pmbosite = g_site AND
             pmbo001 = ps_keys_bak[1] AND pmbo002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbo_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_pmbl4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000046
#+ 
#+ Filename...: apmi140
#+ Description: 供應商評核公式維護作業
#+ Creator....: 03079(2014-07-10 14:37:32)
#+ Modifier...: 04441(2015-06-16 13:44:28) -SD/PR-
]]>
  </section>
  <section id="apmi140.detail_reproduce" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION apmi140_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pmbl_t.*
   DEFINE l_detail2    RECORD LIKE pmbm_t.*
 
   DEFINE l_detail3    RECORD LIKE pmbn_t.*
 
   DEFINE l_detail4    RECORD LIKE pmbo_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apmi140_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apmi140_detail AS ",
                "SELECT * FROM pmbl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmi140_detail SELECT * FROM pmbl_t 
                                         WHERE pmblent = g_enterprise AND pmblsite = g_site AND pmbl001 = g_pmbk001_t
 
   
   #將key修正為調整後   
   UPDATE apmi140_detail 
      #更新key欄位
      SET pmbl001 = g_pmbk_m.pmbk001
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO pmbl_t SELECT * FROM apmi140_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmi140_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE apmi140_detail AS ",
      "SELECT * FROM pmbm_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmi140_detail SELECT * FROM pmbm_t
                                         WHERE pmbment = g_enterprise AND pmbmsite = g_site AND pmbm001 = g_pmbk001_t
 
 
   #將key修正為調整後   
   UPDATE apmi140_detail SET pmbm001 = g_pmbk_m.pmbk001
 
  
   #將資料塞回原table   
   INSERT INTO pmbm_t SELECT * FROM apmi140_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmi140_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE apmi140_detail AS ",
      "SELECT * FROM pmbn_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmi140_detail SELECT * FROM pmbn_t
                                         WHERE pmbnent = g_enterprise AND pmbnsite = g_site AND pmbn001 = g_pmbk001_t
 
 
   #將key修正為調整後   
   UPDATE apmi140_detail SET pmbn001 = g_pmbk_m.pmbk001
 
  
   #將資料塞回原table   
   INSERT INTO pmbn_t SELECT * FROM apmi140_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmi140_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE apmi140_detail AS ",
      "SELECT * FROM pmbo_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmi140_detail SELECT * FROM pmbo_t
                                         WHERE pmboent = g_enterprise AND pmbosite = g_site AND pmbo001 = g_pmbk001_t
 
 
   #將key修正為調整後   
   UPDATE apmi140_detail SET pmbo001 = g_pmbk_m.pmbk001
 
  
   #將資料塞回原table   
   INSERT INTO pmbo_t SELECT * FROM apmi140_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmi140_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_pmbk001_t = g_pmbk_m.pmbk001
 
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.detail_show" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION apmi140_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.fetch" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apmi140_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_pmbk_m.pmbk001 = g_browser[g_current_idx].b_pmbk001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apmi140_master_referesh USING g_site,g_pmbk_m.pmbk001 INTO g_pmbk_m.pmbk001,g_pmbk_m.pmbk002, 
       g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus, 
       g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt, 
       g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkmodid_desc 

   
   #遮罩相關處理
   LET g_pmbk_m_mask_o.* =  g_pmbk_m.*
   CALL apmi140_pmbk_t_mask()
   LET g_pmbk_m_mask_n.* =  g_pmbk_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi140_set_act_visible()   
   CALL apmi140_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_pmbk_m_t.* = g_pmbk_m.*
   LET g_pmbk_m_o.* = g_pmbk_m.*
   
   LET g_data_owner = g_pmbk_m.pmbkownid      
   LET g_data_dept  = g_pmbk_m.pmbkowndp
   
   #重新顯示   
   CALL apmi140_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.fill_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION apmi140_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.filter" ver="6" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION apmi140_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pmbksite,pmbk001,pmbk002,pmbk003,pmbk006,pmbk007
                          FROM s_browse[1].b_pmbksite,s_browse[1].b_pmbk001,s_browse[1].b_pmbk002,s_browse[1].b_pmbk003, 
                              s_browse[1].b_pmbk006,s_browse[1].b_pmbk007
 
         BEFORE CONSTRUCT
               DISPLAY apmi140_filter_parser('pmbksite') TO s_browse[1].b_pmbksite
            DISPLAY apmi140_filter_parser('pmbk001') TO s_browse[1].b_pmbk001
            DISPLAY apmi140_filter_parser('pmbk002') TO s_browse[1].b_pmbk002
            DISPLAY apmi140_filter_parser('pmbk003') TO s_browse[1].b_pmbk003
            DISPLAY apmi140_filter_parser('pmbk006') TO s_browse[1].b_pmbk006
            DISPLAY apmi140_filter_parser('pmbk007') TO s_browse[1].b_pmbk007
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL apmi140_filter_show('pmbksite')
   CALL apmi140_filter_show('pmbk001')
   CALL apmi140_filter_show('pmbk002')
   CALL apmi140_filter_show('pmbk003')
   CALL apmi140_filter_show('pmbk006')
   CALL apmi140_filter_show('pmbk007')
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.filter_parser" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apmi140_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION apmi140_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmi140_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.global" ver="15" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:35)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_pmbk_m        RECORD
       pmbk001 LIKE pmbk_t.pmbk001, 
   pmbk002 LIKE pmbk_t.pmbk002, 
   pmbk003 LIKE pmbk_t.pmbk003, 
   pmbk006 LIKE pmbk_t.pmbk006, 
   pmbk007 LIKE pmbk_t.pmbk007, 
   pmbk004 LIKE pmbk_t.pmbk004, 
   pmbk005 LIKE pmbk_t.pmbk005, 
   pmbkstus LIKE pmbk_t.pmbkstus, 
   pmbkownid LIKE pmbk_t.pmbkownid, 
   pmbkownid_desc LIKE type_t.chr80, 
   pmbkowndp LIKE pmbk_t.pmbkowndp, 
   pmbkowndp_desc LIKE type_t.chr80, 
   pmbkcrtid LIKE pmbk_t.pmbkcrtid, 
   pmbkcrtid_desc LIKE type_t.chr80, 
   pmbkcrtdp LIKE pmbk_t.pmbkcrtdp, 
   pmbkcrtdp_desc LIKE type_t.chr80, 
   pmbkcrtdt LIKE pmbk_t.pmbkcrtdt, 
   pmbkmodid LIKE pmbk_t.pmbkmodid, 
   pmbkmodid_desc LIKE type_t.chr80, 
   pmbkmoddt LIKE pmbk_t.pmbkmoddt, 
   pmbk008 LIKE pmbk_t.pmbk008, 
   pmbk009 LIKE pmbk_t.pmbk009
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_pmbl_d        RECORD
       pmbl002 LIKE pmbl_t.pmbl002, 
   pmbl002_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_pmbl2_d RECORD
       pmbm002 LIKE pmbm_t.pmbm002, 
   pmbm004 LIKE pmbm_t.pmbm004, 
   l_pmbm004_desc LIKE type_t.chr500, 
   pmbm005 LIKE pmbm_t.pmbm005, 
   pmbm006 LIKE pmbm_t.pmbm006, 
   pmbm003 LIKE pmbm_t.pmbm003
       END RECORD
PRIVATE TYPE type_g_pmbl3_d RECORD
       pmbn002 LIKE pmbn_t.pmbn002, 
   pmbn002_desc LIKE type_t.chr500, 
   pmbn003 LIKE pmbn_t.pmbn003
       END RECORD
PRIVATE TYPE type_g_pmbl4_d RECORD
       pmbo002 LIKE pmbo_t.pmbo002, 
   pmbo002_desc LIKE type_t.chr500, 
   pmbo003 LIKE pmbo_t.pmbo003, 
   pmbo004 LIKE pmbo_t.pmbo004
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_pmbksite LIKE pmbk_t.pmbksite,
      b_pmbk001 LIKE pmbk_t.pmbk001,
      b_pmbk002 LIKE pmbk_t.pmbk002,
      b_pmbk003 LIKE pmbk_t.pmbk003,
      b_pmbk006 LIKE pmbk_t.pmbk006,
      b_pmbk007 LIKE pmbk_t.pmbk007
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_pmbk_m          type_g_pmbk_m
DEFINE g_pmbk_m_t        type_g_pmbk_m
DEFINE g_pmbk_m_o        type_g_pmbk_m
DEFINE g_pmbk_m_mask_o   type_g_pmbk_m #轉換遮罩前資料
DEFINE g_pmbk_m_mask_n   type_g_pmbk_m #轉換遮罩後資料
 
   DEFINE g_pmbk001_t LIKE pmbk_t.pmbk001
 
 
DEFINE g_pmbl_d          DYNAMIC ARRAY OF type_g_pmbl_d
DEFINE g_pmbl_d_t        type_g_pmbl_d
DEFINE g_pmbl_d_o        type_g_pmbl_d
DEFINE g_pmbl_d_mask_o   DYNAMIC ARRAY OF type_g_pmbl_d #轉換遮罩前資料
DEFINE g_pmbl_d_mask_n   DYNAMIC ARRAY OF type_g_pmbl_d #轉換遮罩後資料
DEFINE g_pmbl2_d          DYNAMIC ARRAY OF type_g_pmbl2_d
DEFINE g_pmbl2_d_t        type_g_pmbl2_d
DEFINE g_pmbl2_d_o        type_g_pmbl2_d
DEFINE g_pmbl2_d_mask_o   DYNAMIC ARRAY OF type_g_pmbl2_d #轉換遮罩前資料
DEFINE g_pmbl2_d_mask_n   DYNAMIC ARRAY OF type_g_pmbl2_d #轉換遮罩後資料
DEFINE g_pmbl3_d          DYNAMIC ARRAY OF type_g_pmbl3_d
DEFINE g_pmbl3_d_t        type_g_pmbl3_d
DEFINE g_pmbl3_d_o        type_g_pmbl3_d
DEFINE g_pmbl3_d_mask_o   DYNAMIC ARRAY OF type_g_pmbl3_d #轉換遮罩前資料
DEFINE g_pmbl3_d_mask_n   DYNAMIC ARRAY OF type_g_pmbl3_d #轉換遮罩後資料
DEFINE g_pmbl4_d          DYNAMIC ARRAY OF type_g_pmbl4_d
DEFINE g_pmbl4_d_t        type_g_pmbl4_d
DEFINE g_pmbl4_d_o        type_g_pmbl4_d
DEFINE g_pmbl4_d_mask_o   DYNAMIC ARRAY OF type_g_pmbl4_d #轉換遮罩前資料
DEFINE g_pmbl4_d_mask_n   DYNAMIC ARRAY OF type_g_pmbl4_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="apmi140.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION apmi140_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pmbl_d.getLength() THEN
         LET g_detail_idx = g_pmbl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmbl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmbl_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_pmbl2_d.getLength() THEN
         LET g_detail_idx = g_pmbl2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmbl2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmbl2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_pmbl3_d.getLength() THEN
         LET g_detail_idx = g_pmbl3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmbl3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmbl3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_pmbl4_d.getLength() THEN
         LET g_detail_idx = g_pmbl4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmbl4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmbl4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apmi140_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('pmbkstus','17','N,Y')
 
      CALL cl_set_combo_scc('pmbm002','3021') 
   CALL cl_set_combo_scc('pmbm006','3025') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL apmi140_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="apmi140.input" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION apmi140_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007, 
       g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus,g_pmbk_m.pmbkownid,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp, 
       g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkcrtdt,g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmodid_desc,g_pmbk_m.pmbkmoddt, 
       g_pmbk_m.pmbk008,g_pmbk_m.pmbk009
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT pmbl002 FROM pmbl_t WHERE pmblent=? AND pmblsite=? AND pmbl001=? AND pmbl002=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi140_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT pmbm002,pmbm004,pmbm005,pmbm006,pmbm003 FROM pmbm_t WHERE pmbment=? AND  
       pmbmsite=? AND pmbm001=? AND pmbm002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi140_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT pmbn002,pmbn003 FROM pmbn_t WHERE pmbnent=? AND pmbnsite=? AND pmbn001=?  
       AND pmbn002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi140_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT pmbo002,pmbo003,pmbo004 FROM pmbo_t WHERE pmboent=? AND pmbosite=? AND  
       pmbo001=? AND pmbo002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi140_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apmi140_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apmi140_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007, 
       g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="apmi140.input.body" ver="23" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_pmbl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmbl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmi140_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_pmbl_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi140_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi140_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmbl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmbl_d[l_ac].pmbl002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_pmbl_d_t.* = g_pmbl_d[l_ac].*  #BACKUP
               LET g_pmbl_d_o.* = g_pmbl_d[l_ac].*  #BACKUP
               CALL apmi140_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL apmi140_set_no_entry_b(l_cmd)
               IF NOT apmi140_lock_b("pmbl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmi140_bcl INTO g_pmbl_d[l_ac].pmbl002
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_pmbl_d_t.pmbl002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmbl_d_mask_o[l_ac].* =  g_pmbl_d[l_ac].*
                  CALL apmi140_pmbl_t_mask()
                  LET g_pmbl_d_mask_n[l_ac].* =  g_pmbl_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmi140_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmbl_d[l_ac].* TO NULL 
            INITIALIZE g_pmbl_d_t.* TO NULL 
            INITIALIZE g_pmbl_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_pmbl_d_t.* = g_pmbl_d[l_ac].*     #新輸入資料
            LET g_pmbl_d_o.* = g_pmbl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmi140_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmi140_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmbl_d[li_reproduce_target].* = g_pmbl_d[li_reproduce].*
 
               LET g_pmbl_d[li_reproduce_target].pmbl002 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmbl_t 
             WHERE pmblent = g_enterprise AND pmblsite = g_site AND pmbl001 = g_pmbk_m.pmbk001
 
               AND pmbl002 = g_pmbl_d[l_ac].pmbl002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys[2] = g_pmbl_d[g_detail_idx].pmbl002
               CALL apmi140_insert_b('pmbl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pmbl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbl_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmi140_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmbk_m.pmbk001
 
               LET gs_keys[gs_keys.getLength()+1] = g_pmbl_d_t.pmbl002
 
            
               #刪除同層單身
               IF NOT apmi140_delete_b('pmbl_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmi140_key_delete_b(gs_keys,'pmbl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE apmi140_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_pmbl_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmbl_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbl002
            
            #add-point:AFTER FIELD pmbl002
            {<point name="input.a.page1.pmbl002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbl002
            #add-point:BEFORE FIELD pmbl002
            {<point name="input.b.page1.pmbl002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbl002
            #add-point:ON CHANGE pmbl002
            {<point name="input.g.page1.pmbl002" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.pmbl002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbl002
            #add-point:ON ACTION controlp INFIELD pmbl002
            {<point name="input.c.page1.pmbl002" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pmbl_d[l_ac].* = g_pmbl_d_t.*
               CLOSE apmi140_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_pmbl_d[l_ac].pmbl002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pmbl_d[l_ac].* = g_pmbl_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL apmi140_pmbl_t_mask_restore('restore_mask_o')
      
               UPDATE pmbl_t SET (pmbl001,pmbl002) = (g_pmbk_m.pmbk001,g_pmbl_d[l_ac].pmbl002)
                WHERE pmblent = g_enterprise AND pmblsite = g_site AND pmbl001 = g_pmbk_m.pmbk001 
 
                  AND pmbl002 = g_pmbl_d_t.pmbl002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbl_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbl_d[l_ac].* = g_pmbl_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbl_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_pmbl_d[l_ac].* = g_pmbl_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys_bak[1] = g_pmbk001_t
               LET gs_keys[2] = g_pmbl_d[g_detail_idx].pmbl002
               LET gs_keys_bak[2] = g_pmbl_d_t.pmbl002
               CALL apmi140_update_b('pmbl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL apmi140_pmbl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_pmbl_d[g_detail_idx].pmbl002 = g_pmbl_d_t.pmbl002 
 
                  ) THEN
                  LET gs_keys[01] = g_pmbk_m.pmbk001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbl_d_t.pmbl002
 
                  CALL apmi140_key_update_b(gs_keys,'pmbl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl_d_t)
               LET g_log2 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL apmi140_unlock_b("pmbl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_pmbl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmbl_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_pmbl2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmbl2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmi140_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_pmbl2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmbl2_d[l_ac].* TO NULL 
            INITIALIZE g_pmbl2_d_t.* TO NULL 
            INITIALIZE g_pmbl2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_pmbl2_d[l_ac].pmbm002 = "1"
      LET g_pmbl2_d[l_ac].pmbm004 = "1"
      LET g_pmbl2_d[l_ac].pmbm006 = "1"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_pmbl2_d_t.* = g_pmbl2_d[l_ac].*     #新輸入資料
            LET g_pmbl2_d_o.* = g_pmbl2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmi140_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmi140_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmbl2_d[li_reproduce_target].* = g_pmbl2_d[li_reproduce].*
 
               LET g_pmbl2_d[li_reproduce_target].pmbm002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi140_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi140_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmbl2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmbl2_d[l_ac].pmbm002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_pmbl2_d_t.* = g_pmbl2_d[l_ac].*  #BACKUP
               LET g_pmbl2_d_o.* = g_pmbl2_d[l_ac].*  #BACKUP
               CALL apmi140_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL apmi140_set_no_entry_b(l_cmd)
               IF NOT apmi140_lock_b("pmbm_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmi140_bcl2 INTO g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004,g_pmbl2_d[l_ac].pmbm005, 
                      g_pmbl2_d[l_ac].pmbm006,g_pmbl2_d[l_ac].pmbm003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmbl2_d_mask_o[l_ac].* =  g_pmbl2_d[l_ac].*
                  CALL apmi140_pmbm_t_mask()
                  LET g_pmbl2_d_mask_n[l_ac].* =  g_pmbl2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmi140_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmbk_m.pmbk001
               LET gs_keys[gs_keys.getLength()+1] = g_pmbl2_d_t.pmbm002
            
               #刪除同層單身
               IF NOT apmi140_delete_b('pmbm_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmi140_key_delete_b(gs_keys,'pmbm_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE apmi140_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_pmbl_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmbl2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmbm_t 
             WHERE pmbment = g_enterprise AND pmbmsite = g_site AND pmbm001 = g_pmbk_m.pmbk001
               AND pmbm002 = g_pmbl2_d[l_ac].pmbm002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys[2] = g_pmbl2_d[g_detail_idx].pmbm002
               CALL apmi140_insert_b('pmbm_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pmbl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbm_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmi140_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pmbl2_d[l_ac].* = g_pmbl2_d_t.*
               CLOSE apmi140_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pmbl2_d[l_ac].* = g_pmbl2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL apmi140_pmbm_t_mask_restore('restore_mask_o')
                              
               UPDATE pmbm_t SET (pmbm001,pmbm002,pmbm004,pmbm005,pmbm006,pmbm003) = (g_pmbk_m.pmbk001, 
                   g_pmbl2_d[l_ac].pmbm002,g_pmbl2_d[l_ac].pmbm004,g_pmbl2_d[l_ac].pmbm005,g_pmbl2_d[l_ac].pmbm006, 
                   g_pmbl2_d[l_ac].pmbm003) #自訂欄位頁簽
                WHERE pmbment = g_enterprise AND pmbmsite = g_site AND pmbm001 = g_pmbk_m.pmbk001
                  AND pmbm002 = g_pmbl2_d_t.pmbm002 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbm_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbl2_d[l_ac].* = g_pmbl2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbm_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbl2_d[l_ac].* = g_pmbl2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys_bak[1] = g_pmbk001_t
               LET gs_keys[2] = g_pmbl2_d[g_detail_idx].pmbm002
               LET gs_keys_bak[2] = g_pmbl2_d_t.pmbm002
               CALL apmi140_update_b('pmbm_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL apmi140_pmbm_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_pmbl2_d[g_detail_idx].pmbm002 = g_pmbl2_d_t.pmbm002 
                  ) THEN
                  LET gs_keys[01] = g_pmbk_m.pmbk001
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbl2_d_t.pmbm002
                  CALL apmi140_key_update_b(gs_keys,'pmbm_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl2_d_t)
               LET g_log2 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm002
            #add-point:BEFORE FIELD pmbm002
            {<point name="input.b.page2.pmbm002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm002
            
            #add-point:AFTER FIELD pmbm002
            {<point name="input.a.page2.pmbm002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbm002
            #add-point:ON CHANGE pmbm002
            {<point name="input.g.page2.pmbm002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm004
            #add-point:BEFORE FIELD pmbm004
            {<point name="input.b.page2.pmbm004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm004
            
            #add-point:AFTER FIELD pmbm004
            {<point name="input.a.page2.pmbm004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbm004
            #add-point:ON CHANGE pmbm004
            {<point name="input.g.page2.pmbm004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm005
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmbl2_d[l_ac].pmbm005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD pmbm005
            END IF 
 
 
            #add-point:AFTER FIELD pmbm005
            {<point name="input.a.page2.pmbm005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm005
            #add-point:BEFORE FIELD pmbm005
            {<point name="input.b.page2.pmbm005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbm005
            #add-point:ON CHANGE pmbm005
            {<point name="input.g.page2.pmbm005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm006
            #add-point:BEFORE FIELD pmbm006
            {<point name="input.b.page2.pmbm006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm006
            
            #add-point:AFTER FIELD pmbm006
            {<point name="input.a.page2.pmbm006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbm006
            #add-point:ON CHANGE pmbm006
            {<point name="input.g.page2.pmbm006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbm003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmbl2_d[l_ac].pmbm003,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD pmbm003
            END IF 
 
 
            #add-point:AFTER FIELD pmbm003
            {<point name="input.a.page2.pmbm003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbm003
            #add-point:BEFORE FIELD pmbm003
            {<point name="input.b.page2.pmbm003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbm003
            #add-point:ON CHANGE pmbm003
            {<point name="input.g.page2.pmbm003" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.pmbm002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm002
            #add-point:ON ACTION controlp INFIELD pmbm002
            {<point name="input.c.page2.pmbm002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.pmbm004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm004
            #add-point:ON ACTION controlp INFIELD pmbm004
            {<point name="input.c.page2.pmbm004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.pmbm005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm005
            #add-point:ON ACTION controlp INFIELD pmbm005
            {<point name="input.c.page2.pmbm005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.pmbm006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm006
            #add-point:ON ACTION controlp INFIELD pmbm006
            {<point name="input.c.page2.pmbm006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.pmbm003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbm003
            #add-point:ON ACTION controlp INFIELD pmbm003
            {<point name="input.c.page2.pmbm003" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pmbl2_d[l_ac].* = g_pmbl2_d_t.*
               END IF
               CLOSE apmi140_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL apmi140_unlock_b("pmbm_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_pmbl2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmbl2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_pmbl3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmbl3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmi140_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_pmbl3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmbl3_d[l_ac].* TO NULL 
            INITIALIZE g_pmbl3_d_t.* TO NULL 
            INITIALIZE g_pmbl3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_pmbl3_d_t.* = g_pmbl3_d[l_ac].*     #新輸入資料
            LET g_pmbl3_d_o.* = g_pmbl3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmi140_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmi140_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmbl3_d[li_reproduce_target].* = g_pmbl3_d[li_reproduce].*
 
               LET g_pmbl3_d[li_reproduce_target].pmbn002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi140_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi140_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmbl3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmbl3_d[l_ac].pmbn002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_pmbl3_d_t.* = g_pmbl3_d[l_ac].*  #BACKUP
               LET g_pmbl3_d_o.* = g_pmbl3_d[l_ac].*  #BACKUP
               CALL apmi140_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL apmi140_set_no_entry_b(l_cmd)
               IF NOT apmi140_lock_b("pmbn_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmi140_bcl3 INTO g_pmbl3_d[l_ac].pmbn002,g_pmbl3_d[l_ac].pmbn003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmbl3_d_mask_o[l_ac].* =  g_pmbl3_d[l_ac].*
                  CALL apmi140_pmbn_t_mask()
                  LET g_pmbl3_d_mask_n[l_ac].* =  g_pmbl3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmi140_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmbk_m.pmbk001
               LET gs_keys[gs_keys.getLength()+1] = g_pmbl3_d_t.pmbn002
            
               #刪除同層單身
               IF NOT apmi140_delete_b('pmbn_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmi140_key_delete_b(gs_keys,'pmbn_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE apmi140_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身3刪除後
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_pmbl_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmbl3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmbn_t 
             WHERE pmbnent = g_enterprise AND pmbnsite = g_site AND pmbn001 = g_pmbk_m.pmbk001
               AND pmbn002 = g_pmbl3_d[l_ac].pmbn002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys[2] = g_pmbl3_d[g_detail_idx].pmbn002
               CALL apmi140_insert_b('pmbn_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pmbl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbn_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmi140_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pmbl3_d[l_ac].* = g_pmbl3_d_t.*
               CLOSE apmi140_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pmbl3_d[l_ac].* = g_pmbl3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL apmi140_pmbn_t_mask_restore('restore_mask_o')
                              
               UPDATE pmbn_t SET (pmbn001,pmbn002,pmbn003) = (g_pmbk_m.pmbk001,g_pmbl3_d[l_ac].pmbn002, 
                   g_pmbl3_d[l_ac].pmbn003) #自訂欄位頁簽
                WHERE pmbnent = g_enterprise AND pmbnsite = g_site AND pmbn001 = g_pmbk_m.pmbk001
                  AND pmbn002 = g_pmbl3_d_t.pmbn002 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbn_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbl3_d[l_ac].* = g_pmbl3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbn_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbl3_d[l_ac].* = g_pmbl3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys_bak[1] = g_pmbk001_t
               LET gs_keys[2] = g_pmbl3_d[g_detail_idx].pmbn002
               LET gs_keys_bak[2] = g_pmbl3_d_t.pmbn002
               CALL apmi140_update_b('pmbn_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL apmi140_pmbn_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_pmbl3_d[g_detail_idx].pmbn002 = g_pmbl3_d_t.pmbn002 
                  ) THEN
                  LET gs_keys[01] = g_pmbk_m.pmbk001
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbl3_d_t.pmbn002
                  CALL apmi140_key_update_b(gs_keys,'pmbn_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl3_d_t)
               LET g_log2 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbn002
            
            #add-point:AFTER FIELD pmbn002
            {<point name="input.a.page3.pmbn002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbn002
            #add-point:BEFORE FIELD pmbn002
            {<point name="input.b.page3.pmbn002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbn002
            #add-point:ON CHANGE pmbn002
            {<point name="input.g.page3.pmbn002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbn003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmbl3_d[l_ac].pmbn003,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD pmbn003
            END IF 
 
 
            #add-point:AFTER FIELD pmbn003
            {<point name="input.a.page3.pmbn003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbn003
            #add-point:BEFORE FIELD pmbn003
            {<point name="input.b.page3.pmbn003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbn003
            #add-point:ON CHANGE pmbn003
            {<point name="input.g.page3.pmbn003" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.pmbn002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbn002
            #add-point:ON ACTION controlp INFIELD pmbn002
            {<point name="input.c.page3.pmbn002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.pmbn003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbn003
            #add-point:ON ACTION controlp INFIELD pmbn003
            {<point name="input.c.page3.pmbn003" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pmbl3_d[l_ac].* = g_pmbl3_d_t.*
               END IF
               CLOSE apmi140_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL apmi140_unlock_b("pmbn_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_pmbl3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmbl3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_pmbl4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmbl4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmi140_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_pmbl4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmbl4_d[l_ac].* TO NULL 
            INITIALIZE g_pmbl4_d_t.* TO NULL 
            INITIALIZE g_pmbl4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
            
            #add-point:modify段before備份
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_pmbl4_d_t.* = g_pmbl4_d[l_ac].*     #新輸入資料
            LET g_pmbl4_d_o.* = g_pmbl4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmi140_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmi140_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmbl4_d[li_reproduce_target].* = g_pmbl4_d[li_reproduce].*
 
               LET g_pmbl4_d[li_reproduce_target].pmbo002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi140_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi140_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmbl4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmbl4_d[l_ac].pmbo002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_pmbl4_d_t.* = g_pmbl4_d[l_ac].*  #BACKUP
               LET g_pmbl4_d_o.* = g_pmbl4_d[l_ac].*  #BACKUP
               CALL apmi140_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL apmi140_set_no_entry_b(l_cmd)
               IF NOT apmi140_lock_b("pmbo_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmi140_bcl4 INTO g_pmbl4_d[l_ac].pmbo002,g_pmbl4_d[l_ac].pmbo003,g_pmbl4_d[l_ac].pmbo004 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmbl4_d_mask_o[l_ac].* =  g_pmbl4_d[l_ac].*
                  CALL apmi140_pmbo_t_mask()
                  LET g_pmbl4_d_mask_n[l_ac].* =  g_pmbl4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmi140_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmbk_m.pmbk001
               LET gs_keys[gs_keys.getLength()+1] = g_pmbl4_d_t.pmbo002
            
               #刪除同層單身
               IF NOT apmi140_delete_b('pmbo_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmi140_key_delete_b(gs_keys,'pmbo_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi140_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE apmi140_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身4刪除後
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_pmbl_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmbl4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmbo_t 
             WHERE pmboent = g_enterprise AND pmbosite = g_site AND pmbo001 = g_pmbk_m.pmbk001
               AND pmbo002 = g_pmbl4_d[l_ac].pmbo002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys[2] = g_pmbl4_d[g_detail_idx].pmbo002
               CALL apmi140_insert_b('pmbo_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pmbl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbo_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmi140_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pmbl4_d[l_ac].* = g_pmbl4_d_t.*
               CLOSE apmi140_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pmbl4_d[l_ac].* = g_pmbl4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL apmi140_pmbo_t_mask_restore('restore_mask_o')
                              
               UPDATE pmbo_t SET (pmbo001,pmbo002,pmbo003,pmbo004) = (g_pmbk_m.pmbk001,g_pmbl4_d[l_ac].pmbo002, 
                   g_pmbl4_d[l_ac].pmbo003,g_pmbl4_d[l_ac].pmbo004) #自訂欄位頁簽
                WHERE pmboent = g_enterprise AND pmbosite = g_site AND pmbo001 = g_pmbk_m.pmbk001
                  AND pmbo002 = g_pmbl4_d_t.pmbo002 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbo_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbl4_d[l_ac].* = g_pmbl4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmbo_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmbl4_d[l_ac].* = g_pmbl4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmbk_m.pmbk001
               LET gs_keys_bak[1] = g_pmbk001_t
               LET gs_keys[2] = g_pmbl4_d[g_detail_idx].pmbo002
               LET gs_keys_bak[2] = g_pmbl4_d_t.pmbo002
               CALL apmi140_update_b('pmbo_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL apmi140_pmbo_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_pmbl4_d[g_detail_idx].pmbo002 = g_pmbl4_d_t.pmbo002 
                  ) THEN
                  LET gs_keys[01] = g_pmbk_m.pmbk001
                  LET gs_keys[gs_keys.getLength()+1] = g_pmbl4_d_t.pmbo002
                  CALL apmi140_key_update_b(gs_keys,'pmbo_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl4_d_t)
               LET g_log2 = util.JSON.stringify(g_pmbk_m),util.JSON.stringify(g_pmbl4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbo002
            
            #add-point:AFTER FIELD pmbo002
            {<point name="input.a.page4.pmbo002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbo002
            #add-point:BEFORE FIELD pmbo002
            {<point name="input.b.page4.pmbo002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbo002
            #add-point:ON CHANGE pmbo002
            {<point name="input.g.page4.pmbo002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbo003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmbl4_d[l_ac].pmbo003,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD pmbo003
            END IF 
 
 
            #add-point:AFTER FIELD pmbo003
            {<point name="input.a.page4.pmbo003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbo003
            #add-point:BEFORE FIELD pmbo003
            {<point name="input.b.page4.pmbo003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbo003
            #add-point:ON CHANGE pmbo003
            {<point name="input.g.page4.pmbo003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbo004
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmbl4_d[l_ac].pmbo004,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD pmbo004
            END IF 
 
 
            #add-point:AFTER FIELD pmbo004
            {<point name="input.a.page4.pmbo004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbo004
            #add-point:BEFORE FIELD pmbo004
            {<point name="input.b.page4.pmbo004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbo004
            #add-point:ON CHANGE pmbo004
            {<point name="input.g.page4.pmbo004" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page4.pmbo002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbo002
            #add-point:ON ACTION controlp INFIELD pmbo002
            {<point name="input.c.page4.pmbo002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.pmbo003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbo003
            #add-point:ON ACTION controlp INFIELD pmbo003
            {<point name="input.c.page4.pmbo003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.pmbo004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbo004
            #add-point:ON ACTION controlp INFIELD pmbo004
            {<point name="input.c.page4.pmbo004" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pmbl4_d[l_ac].* = g_pmbl4_d_t.*
               END IF
               CLOSE apmi140_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL apmi140_unlock_b("pmbo_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_pmbl4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmbl4_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="apmi140.input.head" ver="15" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007, 
          g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi140_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi140_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL apmi140_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL apmi140_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk001
            #add-point:BEFORE FIELD pmbk001
            {<point name="input.b.pmbk001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk001
            
            #add-point:AFTER FIELD pmbk001
            {<point name="input.a.pmbk001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbk001
            #add-point:ON CHANGE pmbk001
            {<point name="input.g.pmbk001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk002
            #add-point:BEFORE FIELD pmbk002
            {<point name="input.b.pmbk002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk002
            
            #add-point:AFTER FIELD pmbk002
            {<point name="input.a.pmbk002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbk002
            #add-point:ON CHANGE pmbk002
            {<point name="input.g.pmbk002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmbk_m.pmbk003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD pmbk003
            END IF 
 
 
            #add-point:AFTER FIELD pmbk003
            {<point name="input.a.pmbk003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk003
            #add-point:BEFORE FIELD pmbk003
            {<point name="input.b.pmbk003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbk003
            #add-point:ON CHANGE pmbk003
            {<point name="input.g.pmbk003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk006
            #add-point:BEFORE FIELD pmbk006
            {<point name="input.b.pmbk006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk006
            
            #add-point:AFTER FIELD pmbk006
            {<point name="input.a.pmbk006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbk006
            #add-point:ON CHANGE pmbk006
            {<point name="input.g.pmbk006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk007
            #add-point:BEFORE FIELD pmbk007
            {<point name="input.b.pmbk007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk007
            
            #add-point:AFTER FIELD pmbk007
            {<point name="input.a.pmbk007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbk007
            #add-point:ON CHANGE pmbk007
            {<point name="input.g.pmbk007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk004
            #add-point:BEFORE FIELD pmbk004
            {<point name="input.b.pmbk004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk004
            
            #add-point:AFTER FIELD pmbk004
            {<point name="input.a.pmbk004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbk004
            #add-point:ON CHANGE pmbk004
            {<point name="input.g.pmbk004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbk005
            #add-point:BEFORE FIELD pmbk005
            {<point name="input.b.pmbk005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbk005
            
            #add-point:AFTER FIELD pmbk005
            {<point name="input.a.pmbk005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbk005
            #add-point:ON CHANGE pmbk005
            {<point name="input.g.pmbk005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmbkstus
            #add-point:BEFORE FIELD pmbkstus
            {<point name="input.b.pmbkstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmbkstus
            
            #add-point:AFTER FIELD pmbkstus
            {<point name="input.a.pmbkstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmbkstus
            #add-point:ON CHANGE pmbkstus
            {<point name="input.g.pmbkstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.pmbk001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk001
            #add-point:ON ACTION controlp INFIELD pmbk001
            {<point name="input.c.pmbk001" />}
            #END add-point
 
         #Ctrlp:input.c.pmbk002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk002
            #add-point:ON ACTION controlp INFIELD pmbk002
            {<point name="input.c.pmbk002" />}
            #END add-point
 
         #Ctrlp:input.c.pmbk003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk003
            #add-point:ON ACTION controlp INFIELD pmbk003
            {<point name="input.c.pmbk003" />}
            #END add-point
 
         #Ctrlp:input.c.pmbk006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk006
            #add-point:ON ACTION controlp INFIELD pmbk006
            {<point name="input.c.pmbk006" />}
            #END add-point
 
         #Ctrlp:input.c.pmbk007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk007
            #add-point:ON ACTION controlp INFIELD pmbk007
            {<point name="input.c.pmbk007" />}
            #END add-point
 
         #Ctrlp:input.c.pmbk004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk004
            #add-point:ON ACTION controlp INFIELD pmbk004
            {<point name="input.c.pmbk004" />}
            #END add-point
 
         #Ctrlp:input.c.pmbk005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbk005
            #add-point:ON ACTION controlp INFIELD pmbk005
            {<point name="input.c.pmbk005" />}
            #END add-point
 
         #Ctrlp:input.c.pmbkstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmbkstus
            #add-point:ON ACTION controlp INFIELD pmbkstus
            {<point name="input.c.pmbkstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_pmbk_m.pmbk001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO pmbk_t (pmbkent, pmbksite,pmbk001,pmbk002,pmbk003,pmbk006,pmbk007,pmbk004, 
                   pmbk005,pmbkstus,pmbkownid,pmbkowndp,pmbkcrtid,pmbkcrtdp,pmbkcrtdt,pmbkmodid,pmbkmoddt, 
                   pmbk008,pmbk009)
               VALUES (g_enterprise, g_site,g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006, 
                   g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus,g_pmbk_m.pmbkownid, 
                   g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt,g_pmbk_m.pmbkmodid, 
                   g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_pmbk_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apmi140_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL apmi140_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL apmi140_pmbk_t_mask_restore('restore_mask_o')
               
               UPDATE pmbk_t SET (pmbk001,pmbk002,pmbk003,pmbk006,pmbk007,pmbk004,pmbk005,pmbkstus,pmbkownid, 
                   pmbkowndp,pmbkcrtid,pmbkcrtdp,pmbkcrtdt,pmbkmodid,pmbkmoddt,pmbk008,pmbk009) = (g_pmbk_m.pmbk001, 
                   g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004, 
                   g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus,g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid, 
                   g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt,g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008, 
                   g_pmbk_m.pmbk009)
                WHERE pmbkent = g_enterprise AND pmbksite = g_site AND pmbk001 = g_pmbk001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "pmbk_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL apmi140_pmbk_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_pmbk_m_t)
               LET g_log2 = util.JSON.stringify(g_pmbk_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_pmbk001_t = g_pmbk_m.pmbk001
 
            
      END INPUT
   
]]>
  </section>
  <section id="apmi140.input.other" ver="8" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD pmbk001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pmbl002
               WHEN "s_detail2"
                  NEXT FIELD pmbm002
               WHEN "s_detail3"
                  NEXT FIELD pmbn002
               WHEN "s_detail4"
                  NEXT FIELD pmbo002
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.insert" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION apmi140_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_pmbl_d.clear()   
   CALL g_pmbl2_d.clear()  
   CALL g_pmbl3_d.clear()  
   CALL g_pmbl4_d.clear()  
 
 
   INITIALIZE g_pmbk_m.* LIKE pmbk_t.*             #DEFAULT 設定
   
   LET g_pmbk001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmbk_m.pmbkownid = g_user
      LET g_pmbk_m.pmbkowndp = g_dept
      LET g_pmbk_m.pmbkcrtid = g_user
      LET g_pmbk_m.pmbkcrtdp = g_dept 
      LET g_pmbk_m.pmbkcrtdt = cl_get_current()
      LET g_pmbk_m.pmbkmodid = g_user
      LET g_pmbk_m.pmbkmoddt = cl_get_current()
      LET g_pmbk_m.pmbkstus = 'Y'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_pmbk_m.pmbk008 = "50"
      LET g_pmbk_m.pmbk009 = "50"
 
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_pmbk_m_t.* = g_pmbk_m.*
      LET g_pmbk_m_o.* = g_pmbk_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmbk_m.pmbkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
    
      CALL apmi140_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_pmbk_m.* TO NULL
         INITIALIZE g_pmbl_d TO NULL
         INITIALIZE g_pmbl2_d TO NULL
         INITIALIZE g_pmbl3_d TO NULL
         INITIALIZE g_pmbl4_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL apmi140_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_pmbl_d.clear()
      #CALL g_pmbl2_d.clear()
      #CALL g_pmbl3_d.clear()
      #CALL g_pmbl4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi140_set_act_visible()   
   CALL apmi140_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmbk001_t = g_pmbk_m.pmbk001
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmbkent = '" ||g_enterprise|| "' AND pmbksite = '" ||g_site|| "' AND",
                      " pmbk001 = '", g_pmbk_m.pmbk001, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmi140_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE apmi140_cl
   
   CALL apmi140_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE apmi140_master_referesh USING g_site,g_pmbk_m.pmbk001 INTO g_pmbk_m.pmbk001,g_pmbk_m.pmbk002, 
       g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus, 
       g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt, 
       g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkmodid_desc 

   
   #遮罩相關處理
   LET g_pmbk_m_mask_o.* =  g_pmbk_m.*
   CALL apmi140_pmbk_t_mask()
   LET g_pmbk_m_mask_n.* =  g_pmbk_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007, 
       g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus,g_pmbk_m.pmbkownid,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp, 
       g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkcrtdt,g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmodid_desc,g_pmbk_m.pmbkmoddt, 
       g_pmbk_m.pmbk008,g_pmbk_m.pmbk009
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL apmi140_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.insert_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apmi140_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO pmbl_t
                  (pmblent, pmblsite,
                   pmbl001,
                   pmbl002
                   ) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmbl_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO pmbm_t
                  (pmbment, pmbmsite,
                   pmbm001,
                   pmbm002
                   ,pmbm004,pmbm005,pmbm006,pmbm003) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2]
                   ,g_pmbl2_d[g_detail_idx].pmbm004,g_pmbl2_d[g_detail_idx].pmbm005,g_pmbl2_d[g_detail_idx].pmbm006, 
                       g_pmbl2_d[g_detail_idx].pmbm003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_pmbl2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO pmbn_t
                  (pmbnent, pmbnsite,
                   pmbn001,
                   pmbn002
                   ,pmbn003) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2]
                   ,g_pmbl3_d[g_detail_idx].pmbn003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbn_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_pmbl3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO pmbo_t
                  (pmboent, pmbosite,
                   pmbo001,
                   pmbo002
                   ,pmbo003,pmbo004) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2]
                   ,g_pmbl4_d[g_detail_idx].pmbo003,g_pmbl4_d[g_detail_idx].pmbo004)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmbo_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_pmbl4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.key_delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION apmi140_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION apmi140_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.lock_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apmi140_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL apmi140_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pmbl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apmi140_bcl USING g_enterprise, g_site,
                                       g_pmbk_m.pmbk001,g_pmbl_d[g_detail_idx].pmbl002     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmi140_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "pmbm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apmi140_bcl2 USING g_enterprise, g_site,
                                             g_pmbk_m.pmbk001,g_pmbl2_d[g_detail_idx].pmbm002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmi140_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "pmbn_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apmi140_bcl3 USING g_enterprise, g_site,
                                             g_pmbk_m.pmbk001,g_pmbl3_d[g_detail_idx].pmbn002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmi140_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "pmbo_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apmi140_bcl4 USING g_enterprise, g_site,
                                             g_pmbk_m.pmbk001,g_pmbl4_d[g_detail_idx].pmbo002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmi140_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.main" ver="12" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT pmbk001,pmbk002,pmbk003,pmbk006,pmbk007,pmbk004,pmbk005,pmbkstus,pmbkownid, 
       '',pmbkowndp,'',pmbkcrtid,'',pmbkcrtdp,'',pmbkcrtdt,pmbkmodid,'',pmbkmoddt,pmbk008,pmbk009",  

                      " FROM pmbk_t",
                      " WHERE pmbkent= ? AND pmbksite= ? AND pmbk001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi140_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.pmbk001,t0.pmbk002,t0.pmbk003,t0.pmbk006,t0.pmbk007,t0.pmbk004,t0.pmbk005, 
       t0.pmbkstus,t0.pmbkownid,t0.pmbkowndp,t0.pmbkcrtid,t0.pmbkcrtdp,t0.pmbkcrtdt,t0.pmbkmodid,t0.pmbkmoddt, 
       t0.pmbk008,t0.pmbk009,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011",
               " FROM pmbk_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.pmbkownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.pmbkowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.pmbkcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.pmbkcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.pmbkmodid  ",
 
               " WHERE t0.pmbkent = '" ||g_enterprise|| "' AND t0.pmbksite = ? AND t0.pmbk001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apmi140_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmi140 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmi140_init()   
 
      #進入選單 Menu (="N")
      CALL apmi140_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apmi140
      
   END IF 
   
   CLOSE apmi140_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="apmi140.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/apm/apmi140_mask.4gl"
]]>
  </section>
  <section id="apmi140.modify" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION apmi140_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_pmbk_m_t.* = g_pmbk_m.*
   LET g_pmbk_m_o.* = g_pmbk_m.*
   
   IF g_pmbk_m.pmbk001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_pmbk001_t = g_pmbk_m.pmbk001
 
   CALL s_transaction_begin()
   
   OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmi140_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmi140_master_referesh USING g_site,g_pmbk_m.pmbk001 INTO g_pmbk_m.pmbk001,g_pmbk_m.pmbk002, 
       g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus, 
       g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt, 
       g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkmodid_desc 

   
   #檢查是否允許此動作
   IF NOT apmi140_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmbk_m_mask_o.* =  g_pmbk_m.*
   CALL apmi140_pmbk_t_mask()
   LET g_pmbk_m_mask_n.* =  g_pmbk_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
 
 
   
   CALL apmi140_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
 
 
    
   WHILE TRUE
      LET g_pmbk001_t = g_pmbk_m.pmbk001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_pmbk_m.pmbkmodid = g_user 
LET g_pmbk_m.pmbkmoddt = cl_get_current()
LET g_pmbk_m.pmbkmodid_desc = cl_get_username(g_pmbk_m.pmbkmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL apmi140_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE pmbk_t SET (pmbkmodid,pmbkmoddt) = (g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt)
          WHERE pmbkent = g_enterprise AND pmbksite = g_site AND pmbk001 = g_pmbk001_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pmbk_m.* = g_pmbk_m_t.*
         CALL apmi140_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_pmbk_m.pmbk001 != g_pmbk001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE pmbl_t SET pmbl001 = g_pmbk_m.pmbk001
 
          WHERE pmblent = g_enterprise AND pmblsite = g_site AND pmbl001 = g_pmbk001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbl_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbl_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE pmbm_t
            SET pmbm001 = g_pmbk_m.pmbk001
 
          WHERE pmbment = g_enterprise AND pmbmsite = g_site AND
                pmbm001 = g_pmbk001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbm_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbm_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE pmbn_t
            SET pmbn001 = g_pmbk_m.pmbk001
 
          WHERE pmbnent = g_enterprise AND pmbnsite = g_site AND
                pmbn001 = g_pmbk001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbn_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbn_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE pmbo_t
            SET pmbo001 = g_pmbk_m.pmbk001
 
          WHERE pmboent = g_enterprise AND pmbosite = g_site AND
                pmbo001 = g_pmbk001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbo_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmbo_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi140_set_act_visible()   
   CALL apmi140_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " pmbkent = '" ||g_enterprise|| "' AND pmbksite = '" ||g_site|| "' AND",
                      " pmbk001 = '", g_pmbk_m.pmbk001, "' "
 
   #填到對應位置
   CALL apmi140_browser_fill("")
 
   CLOSE apmi140_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmi140_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="apmi140.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION apmi140_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL apmi140_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_pmbk_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="apmi140.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="apmi140.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="apmi140.query" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apmi140_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_pmbl_d.clear()
   CALL g_pmbl2_d.clear()
   CALL g_pmbl3_d.clear()
   CALL g_pmbl4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL apmi140_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL apmi140_browser_fill("")
      CALL apmi140_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL apmi140_filter_show('pmbksite')
   CALL apmi140_filter_show('pmbk001')
   CALL apmi140_filter_show('pmbk002')
   CALL apmi140_filter_show('pmbk003')
   CALL apmi140_filter_show('pmbk006')
   CALL apmi140_filter_show('pmbk007')
   CALL apmi140_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL apmi140_fetch("F") 
      #顯示單身筆數
      CALL apmi140_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.reproduce" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION apmi140_reproduce()
   DEFINE l_newno     LIKE pmbk_t.pmbk001 
   DEFINE l_oldno     LIKE pmbk_t.pmbk001 
 
   DEFINE l_master    RECORD LIKE pmbk_t.*
   DEFINE l_detail    RECORD LIKE pmbl_t.*
   DEFINE l_detail2    RECORD LIKE pmbm_t.*
 
   DEFINE l_detail3    RECORD LIKE pmbn_t.*
 
   DEFINE l_detail4    RECORD LIKE pmbo_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_pmbk_m.pmbk001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_pmbk001_t = g_pmbk_m.pmbk001
 
    
   LET g_pmbk_m.pmbk001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmbk_m.pmbkownid = g_user
      LET g_pmbk_m.pmbkowndp = g_dept
      LET g_pmbk_m.pmbkcrtid = g_user
      LET g_pmbk_m.pmbkcrtdp = g_dept 
      LET g_pmbk_m.pmbkcrtdt = cl_get_current()
      LET g_pmbk_m.pmbkmodid = g_user
      LET g_pmbk_m.pmbkmoddt = cl_get_current()
      LET g_pmbk_m.pmbkstus = 'Y'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmbk_m.pmbkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL apmi140_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_pmbk_m.* TO NULL
      INITIALIZE g_pmbl_d TO NULL
      INITIALIZE g_pmbl2_d TO NULL
      INITIALIZE g_pmbl3_d TO NULL
      INITIALIZE g_pmbl4_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL apmi140_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi140_set_act_visible()   
   CALL apmi140_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmbk001_t = g_pmbk_m.pmbk001
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmbkent = '" ||g_enterprise|| "' AND pmbksite = '" ||g_site|| "' AND",
                      " pmbk001 = '", g_pmbk_m.pmbk001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmi140_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL apmi140_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL apmi140_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION apmi140_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION apmi140_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION apmi140_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION apmi140_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION apmi140_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pmbk001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apmi140_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_no_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION apmi140_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pmbk001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_no_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apmi140_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="apmi140.set_pk_array" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION apmi140_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pmbk_m.pmbk001
   LET g_pk_array[1].column = 'pmbk001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmi140.show" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apmi140_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL apmi140_b_fill() #單身填充
      CALL apmi140_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL apmi140_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_pmbk_m_mask_o.* =  g_pmbk_m.*
   CALL apmi140_pmbk_t_mask()
   LET g_pmbk_m_mask_n.* =  g_pmbk_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007, 
       g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus,g_pmbk_m.pmbkownid,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp, 
       g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkcrtdt,g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmodid_desc,g_pmbk_m.pmbkmoddt, 
       g_pmbk_m.pmbk008,g_pmbk_m.pmbk009
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmbk_m.pmbkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_pmbl_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_pmbl2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_pmbl3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_pmbl4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apmi140_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="apmi140.state_change" ver="8" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION apmi140_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_pmbk_m.pmbk001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN apmi140_cl USING g_enterprise, g_site,g_pmbk_m.pmbk001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmi140_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE apmi140_master_referesh USING g_site,g_pmbk_m.pmbk001 INTO g_pmbk_m.pmbk001,g_pmbk_m.pmbk002, 
       g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus, 
       g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt, 
       g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkmodid_desc 

 
   #檢查是否允許此動作
   IF NOT apmi140_action_chk() THEN
      CLOSE apmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007, 
       g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus,g_pmbk_m.pmbkownid,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp, 
       g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkcrtdt,g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmodid_desc,g_pmbk_m.pmbkmoddt, 
       g_pmbk_m.pmbk008,g_pmbk_m.pmbk009
 
   CASE g_pmbk_m.pmbkstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_pmbk_m.pmbkstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_pmbk_m.pmbkstus = lc_state OR cl_null(lc_state) THEN
      CLOSE apmi140_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_pmbk_m.pmbkmodid = g_user
   LET g_pmbk_m.pmbkmoddt = cl_get_current()
   LET g_pmbk_m.pmbkstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE pmbk_t 
      SET (pmbkstus,pmbkmodid,pmbkmoddt) 
        = (g_pmbk_m.pmbkstus,g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt)     
    WHERE pmbkent = g_enterprise AND pmbksite = g_site AND pmbk001 = g_pmbk_m.pmbk001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE apmi140_master_referesh USING g_site,g_pmbk_m.pmbk001 INTO g_pmbk_m.pmbk001,g_pmbk_m.pmbk002, 
          g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus, 
          g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt, 
          g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009,g_pmbk_m.pmbkownid_desc, 
          g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkmodid_desc 

      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_pmbk_m.pmbk001,g_pmbk_m.pmbk002,g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007, 
          g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus,g_pmbk_m.pmbkownid,g_pmbk_m.pmbkownid_desc, 
          g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp, 
          g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkcrtdt,g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmodid_desc,g_pmbk_m.pmbkmoddt, 
          g_pmbk_m.pmbk008,g_pmbk_m.pmbk009
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE apmi140_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmi140_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmi140.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION apmi140_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="apmi140.ui_browser_refresh" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apmi140_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pmbk001 = g_pmbk_m.pmbk001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION apmi140_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmi140.ui_dialog" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION apmi140_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apmi140_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_pmbk_m.* TO NULL
         CALL g_pmbl_d.clear()
         CALL g_pmbl2_d.clear()
         CALL g_pmbl3_d.clear()
         CALL g_pmbl4_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmi140_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL apmi140_fetch('') # reload data
               LET l_ac = 1
               CALL apmi140_ui_detailshow() #Setting the current row 
         
               CALL apmi140_idx_chk()
               #NEXT FIELD pmbl002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_pmbl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmi140_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL apmi140_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_pmbl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmi140_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL apmi140_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_pmbl3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmi140_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL apmi140_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_pmbl4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmi140_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL apmi140_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL apmi140_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apmi140_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apmi140_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apmi140_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apmi140_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL apmi140_set_act_visible()   
            CALL apmi140_set_act_no_visible()
            IF NOT (g_pmbk_m.pmbk001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " pmbkent = '" ||g_enterprise|| "' AND pmbksite = '" ||g_site|| "' AND",
                                  " pmbk001 = '", g_pmbk_m.pmbk001, "' "
 
               #填到對應位置
               CALL apmi140_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL apmi140_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL apmi140_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL apmi140_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL apmi140_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL apmi140_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi140_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL apmi140_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi140_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL apmi140_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi140_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL apmi140_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi140_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL apmi140_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi140_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_pmbl_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_pmbl2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_pmbl3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_pmbl4_d)
                  LET g_export_id[4]   = "s_detail4"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD pmbl002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apmi140_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apmi140_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apmi140_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apmi140_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apmi140_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apmi140_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL apmi140_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apmi140_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apmi140_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="apmi140.ui_headershow" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION apmi140_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_pmbk_m.pmbk001 = g_browser[g_current_idx].b_pmbk001   
 
   EXECUTE apmi140_master_referesh USING g_site,g_pmbk_m.pmbk001 INTO g_pmbk_m.pmbk001,g_pmbk_m.pmbk002, 
       g_pmbk_m.pmbk003,g_pmbk_m.pmbk006,g_pmbk_m.pmbk007,g_pmbk_m.pmbk004,g_pmbk_m.pmbk005,g_pmbk_m.pmbkstus, 
       g_pmbk_m.pmbkownid,g_pmbk_m.pmbkowndp,g_pmbk_m.pmbkcrtid,g_pmbk_m.pmbkcrtdp,g_pmbk_m.pmbkcrtdt, 
       g_pmbk_m.pmbkmodid,g_pmbk_m.pmbkmoddt,g_pmbk_m.pmbk008,g_pmbk_m.pmbk009,g_pmbk_m.pmbkownid_desc, 
       g_pmbk_m.pmbkowndp_desc,g_pmbk_m.pmbkcrtid_desc,g_pmbk_m.pmbkcrtdp_desc,g_pmbk_m.pmbkmodid_desc 

   CALL apmi140_pmbk_t_mask()
   CALL apmi140_show()
      
END FUNCTION
]]>
  </section>
  <section id="apmi140.unlock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apmi140_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmi140_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmi140_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmi140_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmi140_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apmi140.update_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apmi140_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmbl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL apmi140_pmbl_t_mask_restore('restore_mask_o')
               
      UPDATE pmbl_t 
         SET (pmbl001,
              pmbl002
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE pmblent = g_enterprise AND pmblsite = g_site AND pmbl001 = ps_keys_bak[1] AND pmbl002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbl_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbl_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmi140_pmbl_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmbm_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL apmi140_pmbm_t_mask_restore('restore_mask_o')
               
      UPDATE pmbm_t 
         SET (pmbm001,
              pmbm002
              ,pmbm004,pmbm005,pmbm006,pmbm003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pmbl2_d[g_detail_idx].pmbm004,g_pmbl2_d[g_detail_idx].pmbm005,g_pmbl2_d[g_detail_idx].pmbm006, 
                  g_pmbl2_d[g_detail_idx].pmbm003) 
         WHERE pmbment = g_enterprise AND pmbmsite = g_site AND pmbm001 = ps_keys_bak[1] AND pmbm002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbm_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbm_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmi140_pmbm_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmbn_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL apmi140_pmbn_t_mask_restore('restore_mask_o')
               
      UPDATE pmbn_t 
         SET (pmbn001,
              pmbn002
              ,pmbn003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pmbl3_d[g_detail_idx].pmbn003) 
         WHERE pmbnent = g_enterprise AND pmbnsite = g_site AND pmbn001 = ps_keys_bak[1] AND pmbn002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbn_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbn_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmi140_pmbn_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmbo_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL apmi140_pmbo_t_mask_restore('restore_mask_o')
               
      UPDATE pmbo_t 
         SET (pmbo001,
              pmbo002
              ,pmbo003,pmbo004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pmbl4_d[g_detail_idx].pmbo003,g_pmbl4_d[g_detail_idx].pmbo004) 
         WHERE pmboent = g_enterprise AND pmbosite = g_site AND pmbo001 = ps_keys_bak[1] AND pmbo002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbo_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmbo_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmi140_pmbo_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
