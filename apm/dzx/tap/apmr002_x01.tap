<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmr002_x01" std_prog="apmr002_x01" erpver="1.0" module="APM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="component.get_var" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[p_arg1,p_arg2,p_arg3]]>
  </point>
  <point name="ins_data.before.save" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[       ]]>
  </point>
  <point name="ins_data.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE l_pmdo010_count LIKE type_t.num5]]>
  </point>
  <point name="ins_data.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#       INITIALIZE sr.l_pmdo006_count TO NULL
#       INITIALIZE sr.l_pmdo012_overdue TO NULL
#       LET sr.l_pmdo006_count = sr.pmdo006 - sr.pmdo015 + sr.pmdo016 + sr.pmdo017
#       IF (g_today - sr.pmdo012) < 0
#          LET sr.l_pmdo012_overdue = 0
#          LET l_pmdo010_count = (sr.pmdo012 - g_today)
#       ELSE
#          LET l_pmdo010_count = 0
#          LET sr.l_pmdo012_overdue = (g_today - sr.pmdo012)
#       END IF
#       LET l_pmdo010_count = g_today - sr.pmdo012
#       CASE tm.a1
#          WHEN '1' THEN
#             CASE tm.a2
#                WHEN '1' THEN
#                   IF (l_pmdo010_overdue >= tm.a3) OR (l_pmdo010_count >= tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '2' THEN
#                   IF (l_pmdo010_overdue >= tm.a3) OR (l_pmdo010_count > tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '3' THEN
#                   IF (l_pmdo010_overdue >= tm.a3) OR (l_pmdo010_count <> tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '4' THEN
#                   IF (l_pmdo010_overdue >= tm.a3) OR (l_pmdo010_count <= tm.a4) THEN
#                   CONTINUE FOREACH
#             ELSE
#                IF (l_pmdo010_overdue >= tm.a3) OR (l_pmdo010_count < tm.a4) THEN
#                   CONTINUE FOREACH
#             END
#          WHEN '2' THEN
#             CASE tm.a2
#                WHEN '1' THEN
#                   IF (l_pmdo010_overdue > tm.a3) OR (l_pmdo010_count >= tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '2' THEN
#                   IF (l_pmdo010_overdue > tm.a3) OR (l_pmdo010_count > tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '3' THEN
#                   IF (l_pmdo010_overdue > tm.a3) OR (l_pmdo010_count <> tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '4' THEN
#                   IF (l_pmdo010_overdue > tm.a3) OR (l_pmdo010_count <= tm.a4) THEN
#                   CONTINUE FOREACH
#             ELSE
#                IF (l_pmdo010_overdue > tm.a3) OR (l_pmdo010_count < tm.a4) THEN
#                CONTINUE FOREACH
#             END
#          WHEN '3' THEN
#             CASE tm.a2
#                WHEN '1' THEN
#                   IF (l_pmdo010_overdue <> tm.a3) OR (l_pmdo010_count >= tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '2' THEN
#                   IF (l_pmdo010_overdue <> tm.a3) OR (l_pmdo010_count > tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '3' THEN
#                   IF (l_pmdo010_overdue <> tm.a3) OR (l_pmdo010_count <> tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '4' THEN
#                   IF (l_pmdo010_overdue <> tm.a3) OR (l_pmdo010_count <= tm.a4) THEN
#                   CONTINUE FOREACH
#             ELSE
#                IF (l_pmdo010_overdue <> tm.a3) OR (l_pmdo010_count < tm.a4) THEN
#                CONTINUE FOREACH
#             END
#          WHEN '4' THEN
#             CASE tm.a2
#                WHEN '1' THEN
#                   IF (l_pmdo010_overdue <= tm.a3) OR (l_pmdo010_count >= tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '2' THEN
#                   IF (l_pmdo010_overdue <= tm.a3) OR (l_pmdo010_count > tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '3' THEN
#                   IF (l_pmdo010_overdue <= tm.a3) OR (l_pmdo010_count <> tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '4' THEN
#                   IF (l_pmdo010_overdue <= tm.a3) OR (l_pmdo010_count <= tm.a4) THEN
#                   CONTINUE FOREACH
#             ELSE
#                IF (l_pmdo010_overdue <= tm.a3) OR (l_pmdo010_count < tm.a4) THEN
#                CONTINUE FOREACH
#             END
#       ELSE
#          CASE tm.a2
#                WHEN '1' THEN
#                   IF (l_pmdo010_overdue < tm.a3) OR (l_pmdo010_count >= tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '2' THEN
#                   IF (l_pmdo010_overdue < tm.a3) OR (l_pmdo010_count > tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '3' THEN
#                   IF (l_pmdo010_overdue < tm.a3) OR (l_pmdo010_count <> tm.a4) THEN
#                   CONTINUE FOREACH
#                WHEN '4' THEN
#                   IF (l_pmdo010_overdue < tm.a3) OR (l_pmdo010_count <= tm.a4) THEN
#                   CONTINUE FOREACH
#             ELSE
#                IF (l_pmdo010_overdue < tm.a3) OR (l_pmdo010_count < tm.a4) THEN
#                CONTINUE FOREACH
#             END
#       END
#       IF  tm.a1 = "Y" THEN
#         IF sr.l_pmdt020_053_055_count <= 0 THEN
#            CONTINUE FOREACH
#         END IF
#       END IF
#       #子件特性(系統分類碼轉換)
#       SELECT gzcbl004 INTO sr.l_pmdo003_desc
#         FROM gzcbl_t
#        WHERE gzcbl001 = 2055 
#          AND gzcbl002 = sr.pmdo003
#          AND gzcbl003 = g_dlang    
#       #收貨時段(應用分類轉換)
#       SELECT oocql004 INTO sr.l_pmdo010_desc
#         FROM oocql_t
#        WHERE oocql001 = 274 
#          AND oocql002 = sr.pmdo010
#          AND oocql003 = g_dlang ]]>
  </point>
  <section id="apmr002_x01.create_tmptable" ver="1" status="" src="s">
    <![CDATA[FUNCTION apmr002_x01_create_tmptable()
 
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #建立TEMP TABLE 透過此lib(組字串+create temp table+組ins的問號)
   IF NOT cl_xg_create_tmptable() THEN
      CALL cl_ap_exitprogram("0")           
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
]]>
  </section>
  <section id="apmr002_x01.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:) Build-000047
#+ 
#+ Filename...: apmr002_x01
#+ Description: 採購收貨狀況列印
#+ Creator....: 05384(2014/06/09)
#+ Modifier...: 05384(2014/06/13)
#+ Buildtype..: 應用 x01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="apmr002_x01.global" ver="4" status="" src="s">
    <![CDATA[ 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 LIKE type_t.chr1,         #逾期交貨天數 
       a2 LIKE type_t.chr1          #預計交貨天數
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="apmr002_x01.ins_data" ver="7" status="" src="s">
    <![CDATA[PRIVATE FUNCTION apmr002_x01_ins_data()
DEFINE sr RECORD 
   pmdldocno LIKE pmdl_t.pmdldocno, 
   pmdldocdt LIKE pmdl_t.pmdldocdt, 
   l_pmdl002_oofa011 LIKE type_t.chr300, 
   l_pmdl004_pmaal004 LIKE type_t.chr100, 
   pmdo003 LIKE pmdo_t.pmdo003, 
   l_pmdo003_desc LIKE gzcbl_t.gzcbl004, 
   pmdo001 LIKE pmdo_t.pmdo001, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   pmdo002 LIKE pmdo_t.pmdo002, 
   pmdo012 LIKE pmdo_t.pmdo012, 
   pmdo006 LIKE pmdo_t.pmdo006, 
   pmdo004 LIKE pmdo_t.pmdo004, 
   pmdo015 LIKE pmdo_t.pmdo015, 
   pmdo016 LIKE pmdo_t.pmdo016, 
   pmdo017 LIKE pmdo_t.pmdo017, 
   l_pmdo006_count LIKE pmdo_t.pmdo006, 
   l_pmdo012_overdue LIKE type_t.num5, 
   pmdo010 LIKE pmdo_t.pmdo010
 END RECORD
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr002_x01_curs INTO sr.*                               
       IF STATUS THEN
          CALL cl_err('foreach:',STATUS,1)
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdldocno,sr.pmdldocdt,sr.l_pmdl002_oofa011,sr.l_pmdl004_pmaal004,sr.l_pmdo003_desc,sr.pmdo001,sr.x_imaal_t_imaal003,sr.x_imaal_t_imaal004,sr.pmdo002,sr.pmdo012,sr.pmdo006,sr.pmdo004,sr.pmdo015,sr.pmdo016,sr.pmdo017,sr.l_pmdo006_count,sr.l_pmdo012_overdue
 
        IF SQLCA.sqlcode THEN
          CALL cl_err("apmr002_x01_execute",SQLCA.sqlcode,0)
          LET g_rep_success = 'N'
          EXIT FOREACH
        END IF
 
       #add-point:ins_data段after_save
       {<point name="ins_data.after.save"/>}
       #end add-point
 
    END FOREACH
 
    IF g_rep_success = 'N' THEN
      EXIT PROGRAM
    END IF
 
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="apmr002_x01.ins_prep" ver="1" status="" src="s">
    <![CDATA[FUNCTION apmr002_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
       LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
       CASE i
         WHEN 1
         PREPARE insert_prep FROM g_sql
 
 
       END CASE
       IF STATUS THEN
          LET l_prep_str="insert_prep",i
          CALL cl_err(l_prep_str,status,1)
          CALL cl_xg_drop_tmptable()
          CALL cl_ap_exitprogram("0")
       END IF
   END FOR
END FUNCTION
]]>
  </section>
  <section id="apmr002_x01.main" ver="4" status="" src="s">
    <![CDATA[PUBLIC FUNCTION apmr002_x01(--)
   #add-point:component段變數傳入
   {<point name="component.get_var"/>}
   #end add-point
   )
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.a1  逾期交貨天數 
DEFINE  p_arg3 LIKE type_t.chr1         #tm.a2  預計交貨天數
#add-point:init段define
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   LET g_rep_code = "apmr002_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr002_x01_create_tmptable()
 
   #報表select欄位準備
   CALL apmr002_x01_sel_prep()
 
   #報表insert的prepare
   CALL apmr002_x01_ins_prep()  
 
   #將資料存入tmptable
   CALL apmr002_x01_ins_data() 
 
   #將tmptable資料印出
   CALL apmr002_x01_rep_data()
 
 
END FUNCTION
]]>
  </section>
  <section id="apmr002_x01.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="apmr002_x01.rep_data" ver="1" status="" src="s">
    <![CDATA[FUNCTION apmr002_x01_rep_data()
#add-point:rep_data.define
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
]]>
  </section>
  <section id="apmr002_x01.sel_prep" ver="9" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apmr002_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdldocno,pmdldocdt,trim(pmdl002)||'.'||trim(t3.oofa011),trim(pmdl004)||'.'||trim(t2.pmaal004), 
       pmdo003,'',pmdo001,x.imaal_t_imaal003,x.imaal_t_imaal004,pmdo002,pmdo012,pmdo006,pmdo004,pmdo015, 
       pmdo016,pmdo017,'','',pmdo010"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmdl_t LEFT OUTER JOIN oofa_t ON oofa_t.oofa001 = pmdl_t.pmdl027 AND oofa_t.oofaent = pmdl_t.pmdlent             LEFT OUTER JOIN pmaal_t ON pmaal_t.pmaal001 = pmdl_t.pmdl022 AND pmaal_t.pmaalent = pmdl_t.pmdlent AND pmaal_t.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t1 ON t1.pmaal001 = pmdl_t.pmdl021 AND t1.pmaalent = pmdl_t.pmdlent AND t1.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t2 ON t2.pmaal001 = pmdl_t.pmdl004 AND t2.pmaalent = pmdl_t.pmdlent AND t2.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN oofa_t t3 ON t3.oofa002 = '2' AND t3.oofa003 = pmdl_t.pmdl002 AND t3.oofaent = pmdl_t.pmdlent             LEFT OUTER JOIN pmaal_t t4 ON t4.pmaal001 = pmdl_t.pmdl052 AND t4.pmaalent = pmdl_t.pmdlent AND t4.pmaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN pmaal_t t5 ON t5.pmaal001 = pmdl_t.pmdl032 AND t5.pmaalent = pmdl_t.pmdlent AND t5.pmaal002 = '" , 
        g_dlang,"'" ," LEFT OUTER JOIN ( SELECT pmdo_t.*,imaal_t.imaal003 imaal_t_imaal003,imaal_t.imaal004 imaal_t_imaal004 FROM pmdo_t             LEFT OUTER JOIN oofa_t t7 ON t7.oofa002 = '2' AND t7.oofa003 = pmdo_t.pmdo026 AND t7.oofaent = pmdo_t.pmdoent             LEFT OUTER JOIN imaal_t ON imaal_t.imaal001 = pmdo_t.pmdo001 AND imaal_t.imaalent = pmdo_t.pmdoent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ," ) x  ON pmdl_t.pmdlent = x.pmdoent AND pmdl_t.pmdldocno = x.pmdodocno"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
 
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE apmr002_x01_prepare FROM g_sql
   IF STATUS THEN
      CALL cl_err('prepare:',STATUS,1)
      CALL cl_ap_exitprogram("0")
   END IF
   DECLARE apmr002_x01_curs CURSOR FOR apmr002_x01_prepare
 
END FUNCTION
]]>
  </section>
</add_points>
