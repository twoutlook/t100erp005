<add_points prog="apmt100_02" std_prog="apmt100_02" erpver="1.0" module="APM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.pmbf002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_nmab001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmbf002  #顯示到畫面上

            NEXT FIELD pmbf002                     #返回原欄位

]]>
</point>
  <point name="input.a.page1.pmbf002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL apmt100_02_pmbf002_ref(g_pmbf_d[l_ac].pmbf002) RETURNING g_pmbf_d[l_ac].pmbf002_desc
            DISPLAY BY NAME g_pmbf_d[l_ac].pmbf002_desc 
            
            IF  NOT cl_null(g_pmbf_d[l_ac].pmbfdocno) AND NOT cl_null(g_pmbf_d[l_ac].pmbf002) AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_pmbf_d[l_ac].pmbfdocno != g_pmbf_d_t.pmbfdocno OR g_pmbf_d[l_ac].pmbf002 != g_pmbf_d_t.pmbf002 OR g_pmbf_d[l_ac].pmbf003 != g_pmbf_d_t.pmbf003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbf_t WHERE "||"pmbfent = '" ||g_enterprise|| "' AND "||"pmbfdocno = '"||g_pmbf_d[l_ac].pmbfdocno ||"' AND "|| "pmbf002 = '"||g_pmbf_d[l_ac].pmbf002 ||"' AND "|| "pmbf003 = '"||g_pmbf_d[l_ac].pmbf003 ||"'",'std-00004',0) THEN 
                     LET g_pmbf_d[l_ac].pmbf002 = g_pmbf_d_t.pmbf002
                     CALL apmt100_02_pmbf002_ref(g_pmbf_d[l_ac].pmbf002) RETURNING g_pmbf_d[l_ac].pmbf002_desc
                     DISPLAY BY NAME g_pmbf_d[l_ac].pmbf002_desc
                     NEXT FIELD CURRENT
                  END IF
                END IF
             END IF
             IF NOT cl_null(g_pmbf_d[l_ac].pmbf002) THEN
                IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbf_d[l_ac].pmbf002 != g_pmbf_d_t.pmbf002 OR cl_null(g_pmbf_d_t.pmbf002))) THEN
                   IF NOT ap_chk_isExist(g_pmbf_d[l_ac].pmbf002,"SELECT COUNT(*) FROM nmab_t WHERE nmabent = '" ||g_enterprise||"' AND nmab001 = ? ","anm-00011",0 ) THEN
                      LET g_pmbf_d[l_ac].pmbf002 = g_pmbf_d_t.pmbf002
                      CALL apmt100_02_pmbf002_ref(g_pmbf_d[l_ac].pmbf002) RETURNING g_pmbf_d[l_ac].pmbf002_desc
                      DISPLAY BY NAME g_pmbf_d[l_ac].pmbf002_desc
                      NEXT FIELD CURRENT
                   END IF
                   IF NOT ap_chk_isExist(g_pmbf_d[l_ac].pmbf002,"SELECT COUNT(*) FROM nmab_t WHERE nmabent = '" ||g_enterprise||"' AND nmab001 = ? AND nmabstus = 'Y' ","anm-00012",0 ) THEN
                      LET g_pmbf_d[l_ac].pmbf002 = g_pmbf_d_t.pmbf002
                      CALL apmt100_02_pmbf002_ref(g_pmbf_d[l_ac].pmbf002) RETURNING g_pmbf_d[l_ac].pmbf002_desc
                      DISPLAY BY NAME g_pmbf_d[l_ac].pmbf002_desc
                      NEXT FIELD CURRENT
                   END IF
                   SELECT nmab003 INTO g_pmbf_d[l_ac].pmbf005 FROM nmab_t WHERE nmabent = g_enterprise AND nmab001 = g_pmbf_d[l_ac].pmbf002
                   SELECT nmab009 INTO g_pmbf_d[l_ac].pmbf007 FROM nmab_t WHERE nmabent = g_enterprise AND nmab001 = g_pmbf_d[l_ac].pmbf002
                   
                   DISPLAY BY NAME g_pmbf_d[l_ac].pmbf005,g_pmbf_d[l_ac].pmbf007
                END IF
             END IF

]]>
</point>
  <point name="input.a.page1.pmbf003" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmbf_d[l_ac].pmbfdocno) AND NOT cl_null(g_pmbf_d[l_ac].pmbf002) AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_pmbf_d[l_ac].pmbfdocno != g_pmbf_d_t.pmbfdocno OR g_pmbf_d[l_ac].pmbf002 != g_pmbf_d_t.pmbf002 OR g_pmbf_d[l_ac].pmbf003 != g_pmbf_d_t.pmbf003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbf_t WHERE "||"pmbfent = '" ||g_enterprise|| "' AND "||"pmbfdocno = '"||g_pmbf_d[l_ac].pmbfdocno ||"' AND "|| "pmbf002 = '"||g_pmbf_d[l_ac].pmbf002 ||"' AND "|| "pmbf003 = '"||g_pmbf_d[l_ac].pmbf003 ||"'",'std-00004',0) THEN 
                     LET g_pmbf_d[l_ac].pmbf003 = g_pmbf_d_t.pmbf003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.pmbfdocno" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmbf_d[g_detail_idx].pmbfdocno) AND NOT cl_null(g_pmbf_d[g_detail_idx].pmbf002) AND NOT cl_null(g_pmbf_d[g_detail_idx].pmbf003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_pmbf_d[g_detail_idx].pmbfdocno != g_pmbf_d_t.pmbfdocno OR g_pmbf_d[g_detail_idx].pmbf002 != g_pmbf_d_t.pmbf002 OR g_pmbf_d[g_detail_idx].pmbf003 != g_pmbf_d_t.pmbf003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmbf_t WHERE "||"pmbfent = '" ||g_enterprise|| "' AND "||"pmbfdocno = '"||g_pmbf_d[g_detail_idx].pmbfdocno ||"' AND "|| "pmbf002 = '"||g_pmbf_d[g_detail_idx].pmbf002 ||"' AND "|| "pmbf003 = '"||g_pmbf_d[g_detail_idx].pmbf003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.c.page1.pmbf002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmbf_d[l_ac].pmbf002             #給予default值

            #給予arg

            CALL q_nmab001()                                #呼叫開窗

            LET g_pmbf_d[l_ac].pmbf002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmbf_d[l_ac].pmbf002 TO pmbf002              #顯示到畫面上
            CALL apmt100_02_pmbf002_ref(g_pmbf_d[l_ac].pmbf002) RETURNING g_pmbf_d[l_ac].pmbf002_desc
            DISPLAY BY NAME g_pmbf_d[l_ac].pmbf002_desc

            NEXT FIELD pmbf002                          #返回原欄位

]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="0" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmbf_d[l_ac].pmbf002
            CALL ap_ref_array2(g_ref_fields,"SELECT nmabl003 FROM nmabl_t WHERE nmablent='"||g_enterprise||"' AND nmabl001=? AND nmabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmbf_d[l_ac].pmbf002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmbf_d[l_ac].pmbf002_desc
]]>
</point>
  <point name="function.apmt100_02_b_fill" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="1" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION apmt100_02_b_fill(p_pmbadocno)
   DEFINE p_pmbadocno   LIKE pmba_t.pmbadocno
   DEFINE l_sql       STRING

   DEFINE l_ac1       LIKE type_t.num5
   
   LET l_sql = "SELECT pmbfstus,pmbfdocno,pmbf001,pmbf002,'',pmbf003,pmbf004,pmbf008,pmbf009,pmbf005,pmbf007,pmbf006 FROM pmbf_t WHERE pmbfent = '",g_enterprise,"' AND pmbfdocno = '",p_pmbadocno,"' "
   PREPARE apmt100_02_pb FROM l_sql
   DECLARE b_fill_curs CURSOR FOR apmt100_02_pb

   CALL g_pmbf_d.clear()
   LET l_ac1 = 1
   FOREACH b_fill_curs INTO g_pmbf_d[l_ac1].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      CALL apmt100_02_pmbf002_ref(g_pmbf_d[l_ac1].pmbf002) RETURNING g_pmbf_d[l_ac1].pmbf002_desc
          
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec THEN
         #CALL cl_err( "", 9035, 0 )
         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_pmbf_d.deleteElement(g_pmbf_d.getLength())
   LET g_rec_b = l_ac1 - 1
   DISPLAY g_rec_b TO FORMONLY.cnt
   CLOSE b_fill_curs
   FREE apmt100_02_pb
   
END FUNCTION]]>
</point>
  <point name="function.apmt100_02_pmbf002_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="2" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION apmt100_02_pmbf002_ref(p_pmbf002)
DEFINE p_pmbf002      LIKE pmbf_t.pmbf002
DEFINE r_pmbf002_desc LIKE nmabl_t.nmabl003
 
       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmbf002
       CALL ap_ref_array2(g_ref_fields,"SELECT nmabl003 FROM nmabl_t WHERE nmablent='"||g_enterprise||"' AND nmabl001=? AND nmabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmbf002_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmbf002_desc
     
END FUNCTION]]>
</point>
  <point name="function.apmt100_02_pmbf008_chk" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="3" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION apmt100_02_pmbf008_chk()
DEFINE l_n            LIKE type_t.num5
DEFINE r_success      LIKE type_t.num5

       LET l_n = 0
       LET r_success = TRUE       
       SELECT COUNT(*) INTO l_n FROM pmbf_t WHERE pmbfent = g_enterprise AND pmbfdocno = g_pmbf_d[l_ac].pmbfdocno AND pmbf008 = 'Y'
       #同一個銀和帳號已勾選了主要收款帳戶，不可再次勾選
       IF l_n > 0 THEN
          CALL cl_err(g_pmbf_d[l_ac].pmbfdocno,'apm-00157',1)
          LET r_success = FALSE
          RETURN r_success
       END IF
       RETURN r_success
      
END FUNCTION]]>
</point>
  <point name="function.apmt100_02_pmbf009_chk" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="4" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION apmt100_02_pmbf009_chk()
DEFINE l_n            LIKE type_t.num5
DEFINE r_success      LIKE type_t.num5

       LET l_n = 0
       LET r_success = TRUE       
       SELECT COUNT(*) INTO l_n FROM pmbf_t WHERE pmbfent = g_enterprise AND pmbfdocno = g_pmbf_d[l_ac].pmbfdocno AND pmbf009 = 'Y'
       #同一個銀和帳號已勾選了主要付款帳戶，不可再次勾選
       IF l_n > 0 THEN
          CALL cl_err(g_pmbf_d[l_ac].pmbfdocno,'apm-00158',1)
          LET r_success = FALSE
          RETURN r_success
       END IF
       RETURN r_success
      
END FUNCTION]]>
</point>
  <point name="input.a.page1.pmbf008" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmbf_d[l_ac].pmbfdocno) AND NOT cl_null(g_pmbf_d[l_ac].pmbf008) AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbf_d[l_ac].pmbf008 != g_pmbf_d_t.pmbf008 OR cl_null(g_pmbf_d_t.pmbf008))) THEN
                  IF g_pmbf_d[l_ac].pmbf008 = 'Y' THEN
                     IF NOT apmt100_02_pmbf008_chk() THEN
                        LET g_pmbf_d[l_ac].pmbf008 = g_pmbf_d_t.pmbf008
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.pmbf009" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmbf_d[l_ac].pmbfdocno) AND NOT cl_null(g_pmbf_d[l_ac].pmbf009) AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbf_d[l_ac].pmbf009 != g_pmbf_d_t.pmbf009 OR cl_null(g_pmbf_d_t.pmbf009))) THEN
                  IF g_pmbf_d[l_ac].pmbf009 = 'Y' THEN
                     IF NOT apmt100_02_pmbf009_chk() THEN
                        LET g_pmbf_d[l_ac].pmbf009 = g_pmbf_d_t.pmbf009
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.before_close" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET INT_FLAG = FALSE]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            CALL apmt100_02_b_fill(p_pmbadocno)
            LET g_rec_b = g_pmbf_d.getLength()
            
          BEFORE ROW 
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
   
            LET g_rec_b = g_pmbf_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND NOT cl_null(g_pmbf_d[l_ac].pmbfdocno)
               AND NOT cl_null(g_pmbf_d[l_ac].pmbf002) 
               AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) 
 
 
            THEN
               LET l_cmd='u'
			   LET g_pmbf_d_t.* = g_pmbf_d[l_ac].*  #BACKUP
			   
			   OPEN apmt100_02_bcl USING g_enterprise,p_pmbadocno,g_pmbf_d[l_ac].pmbf002,g_pmbf_d[l_ac].pmbf003
               IF SQLCA.sqlcode THEN
                  CALL cl_err("apmt100_02_bcl",SQLCA.sqlcode,1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmt100_02_bcl INTO g_pmbf_d[l_ac].pmbfstus,g_pmbf_d[l_ac].pmbfdocno,g_pmbf_d[l_ac].pmbf001,g_pmbf_d[l_ac].pmbf002,g_pmbf_d[l_ac].pmbf002_desc,g_pmbf_d[l_ac].pmbf003,g_pmbf_d[l_ac].pmbf004,g_pmbf_d[l_ac].pmbf008,g_pmbf_d[l_ac].pmbf009,g_pmbf_d[l_ac].pmbf005,g_pmbf_d[l_ac].pmbf007,g_pmbf_d[l_ac].pmbf006
                 
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(p_pmbadocno,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
				  CALL apmt100_02_pmbf002_ref(g_pmbf_d[l_ac].pmbf002) RETURNING g_pmbf_d[l_ac].pmbf002_desc
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
        
         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmbf_d[l_ac].* TO NULL 
            
            LET g_pmbf_d[l_ac].pmbfdocno = p_pmbadocno
            LET g_pmbf_d[l_ac].pmbf001 = p_pmba001
            LET g_pmbf_d[l_ac].pmbfstus = 'Y'
            LET g_pmbf_d[l_ac].pmbf008 = 'N'
            LET g_pmbf_d[l_ac].pmbf009 = 'N'
            
            LET g_pmbf_d_t.* = g_pmbf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            
            
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmbf_t 
             WHERE pmbfent = g_enterprise AND pmbfdocno = g_pmbf_d[l_ac].pmbfdocno
               AND pmbf002 = g_pmbf_d[l_ac].pmbf002
               AND pmbf003 = g_pmbf_d[l_ac].pmbf003
      
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INSERT INTO pmbf_t (pmbfent,pmbfdocno,pmbf001,pmbf002,pmbf003,pmbf004,pmbf005,pmbf006,pmbf007,pmbf008,pmbf009,pmbfstus)
                  VALUES (g_enterprise,g_pmbf_d[l_ac].pmbfdocno,g_pmbf_d[l_ac].pmbf001,g_pmbf_d[l_ac].pmbf002,g_pmbf_d[l_ac].pmbf003,g_pmbf_d[l_ac].pmbf004,g_pmbf_d[l_ac].pmbf005,g_pmbf_d[l_ac].pmbf006,g_pmbf_d[l_ac].pmbf007,g_pmbf_d[l_ac].pmbf008,g_pmbf_d[l_ac].pmbf009,g_pmbf_d[l_ac].pmbfstus)
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_pmbf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("pmbf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_pmbf_d[l_ac].pmbfdocno)
               AND NOT cl_null(g_pmbf_d[l_ac].pmbf002) 
               AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF

               DELETE FROM pmbf_t
                WHERE pmbfent = g_enterprise AND pmbfdocno = g_pmbf_d_t.pmbfdocno
                  AND pmbf002 = g_pmbf_d_t.pmbf002
                  AND pmbf003 = g_pmbf_d_t.pmbf003

               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmbf_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apmt100_02_bcl
               LET l_count = g_pmbf_d.getLength()
            END IF 
            
        ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_pmbf_d[l_ac].* = g_pmbf_d_t.*
               CLOSE apmt100_02_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_pmbf_d[l_ac].pmbf002,-263,1)
               LET g_pmbf_d[l_ac].* = g_pmbf_d_t.*
            ELSE
               UPDATE pmbf_t SET (pmbf002,pmbf003,pmbf004,pmbf005,pmbf006,pmbf007,pmbf008,pmbf009,pmbfstus) = (g_pmbf_d[l_ac].pmbf002,g_pmbf_d[l_ac].pmbf003,g_pmbf_d[l_ac].pmbf004,g_pmbf_d[l_ac].pmbf005,g_pmbf_d[l_ac].pmbf006,g_pmbf_d[l_ac].pmbf007,g_pmbf_d[l_ac].pmbf008,g_pmbf_d[l_ac].pmbf009,g_pmbf_d[l_ac].pmbfstus)
                WHERE pmbfent = g_enterprise 
                  AND pmbfdocno = g_pmbf_d_t.pmbfdocno
                  AND pmbf002 = g_pmbf_d_t.pmbf002
                  AND pmbf003 = g_pmbf_d_t.pmbf003

               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmbf_t",SQLCA.sqlcode,1)
                  LET g_pmbf_d[l_ac].* = g_pmbf_d_t.*
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
            
         AFTER ROW
            CLOSE apmt100_02_bcl
            CALL s_transaction_end('Y','0')]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE p_pmbadocno     LIKE pmba_t.pmbadocno
   DEFINE p_pmba001       LIKE pmba_t.pmba001
   DEFINE l_lock_sw       LIKE type_t.chr1
   DEFINE l_forupd_sql    STRING
   DEFINE l_n             LIKE type_t.num5                #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5]]>
</point>
  <point name="input.g.page1.pmbf008" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmbf_d[l_ac].pmbfdocno) AND NOT cl_null(g_pmbf_d[l_ac].pmbf008) AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbf_d[l_ac].pmbf008 != g_pmbf_d_t.pmbf008 OR cl_null(g_pmbf_d_t.pmbf008))) THEN
                  IF g_pmbf_d[l_ac].pmbf008 = 'Y' THEN
                     IF NOT apmt100_02_pmbf008_chk() THEN
                        LET g_pmbf_d[l_ac].pmbf008 = g_pmbf_d_t.pmbf008
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.g.page1.pmbf009" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmbf_d[l_ac].pmbfdocno) AND NOT cl_null(g_pmbf_d[l_ac].pmbf009) AND NOT cl_null(g_pmbf_d[l_ac].pmbf003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmbf_d[l_ac].pmbf009 != g_pmbf_d_t.pmbf009 OR cl_null(g_pmbf_d_t.pmbf009))) THEN
                  IF g_pmbf_d[l_ac].pmbf009 = 'Y' THEN
                     IF NOT apmt100_02_pmbf009_chk() THEN
                        LET g_pmbf_d[l_ac].pmbf009 = g_pmbf_d_t.pmbf009
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.get_var" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   p_pmbadocno,p_pmba001]]>
</point>
  <point name="input.post_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   CALL s_transaction_begin()]]>
</point>
  <point name="input.pre_input" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   WHENEVER ERROR CONTINUE
   #CALL s_transaction_end('N','0')
   
   CALL apmt100_02_b_fill(p_pmbadocno)

   LET l_ac = 1
   LET l_forupd_sql = "SELECT pmbfstus,pmbfdocno,pmbf001,pmbf002,'',pmbf003,pmbf004,pmbf008,pmbf009,pmbf005,pmbf007,pmbf006 FROM pmbf_t WHERE pmbfent = ? AND pmbfdocno = ? AND pmbf002 = ? AND pmbf003 = ? FOR UPDATE"
   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)
   DECLARE apmt100_02_bcl CURSOR FROM l_forupd_sql]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmbfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbfdocno" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbfdocno" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmbf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmbf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmbf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmbf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmbf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmbf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmbf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbfstus" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbfdocno" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf004" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf009" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf005" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf007" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmbf006" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <section id="apmt100_02.description" ver="4" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000051
#+ 
#+ Filename...: apmt100_02
#+ Description: ...
#+ Creator....: 02294(2013/10/21)
#+ Modifier...: 02294(2013/10/23)
#+ Buildtype..: 應用 c02b 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apmt100_02.global" ver="2" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_pmbf_d        RECORD
       pmbfstus LIKE pmbf_t.pmbfstus, 
   pmbfdocno LIKE pmbf_t.pmbfdocno, 
   pmbf001 LIKE pmbf_t.pmbf001, 
   pmbf002 LIKE pmbf_t.pmbf002, 
   pmbf002_desc LIKE type_t.chr500, 
   pmbf003 LIKE pmbf_t.pmbf003, 
   pmbf004 LIKE pmbf_t.pmbf004, 
   pmbf008 LIKE pmbf_t.pmbf008, 
   pmbf009 LIKE pmbf_t.pmbf009, 
   pmbf005 LIKE pmbf_t.pmbf005, 
   pmbf007 LIKE pmbf_t.pmbf007, 
   pmbf006 LIKE pmbf_t.pmbf006
       END RECORD
 
 
DEFINE g_pmbf_d          DYNAMIC ARRAY OF type_g_pmbf_d
DEFINE g_pmbf_d_t        type_g_pmbf_d
 
 
DEFINE g_pmbfdocno_t   LIKE pmbf_t.pmbfdocno    #Key值備份
DEFINE g_pmbf002_t      LIKE pmbf_t.pmbf002    #Key值備份
DEFINE g_pmbf003_t      LIKE pmbf_t.pmbf003    #Key值備份
 
 
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rec_b               LIKE type_t.num5  
DEFINE g_detail_idx          LIKE type_t.num5  
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
    
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point	
]]>
</section>
  <section id="apmt100_02.input" ver="2" status="" src="s">
<![CDATA[#+ 資料輸入
PUBLIC FUNCTION apmt100_02(--)
   #add-point:input段變數傳入
   {<point name="input.get_var"/>}
   #end add-point
   )
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE l_cmd           LIKE type_t.chr5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #畫面開啟 (identifier)
   OPEN WINDOW w_apmt100_02 WITH FORM cl_ap_formpath("apm","apmt100_02")
 
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   LET g_qryparam.state = "i"
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #輸入前處理
   #add-point:單身前置處理
   {<point name="input.pre_input"/>}
   #end add-point
  
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT ARRAY g_pmbf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         #自訂ACTION
         #add-point:單身前置處理
         {<point name="input.action"/>}
         #end add-point
         
         #自訂ACTION(detail_input)
         
         
         BEFORE INPUT
            #add-point:單身輸入前處理
            {<point name="input.before_input"/>}
            #end add-point
          
         #---------------------<  Detail: page1  >---------------------
         #----<<pmbfstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbfstus
            #add-point:BEFORE FIELD pmbfstus
            {<point name="input.b.page1.pmbfstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbfstus
            
            #add-point:AFTER FIELD pmbfstus
            {<point name="input.a.page1.pmbfstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbfstus
            #add-point:ON CHANGE pmbfstus
            {<point name="input.g.page1.pmbfstus" />}
            #END add-point
 
         #----<<pmbfdocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbfdocno
            #add-point:BEFORE FIELD pmbfdocno
            {<point name="input.b.page1.pmbfdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbfdocno
            
            #add-point:AFTER FIELD pmbfdocno
            {<point name="input.a.page1.pmbfdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbfdocno
            #add-point:ON CHANGE pmbfdocno
            {<point name="input.g.page1.pmbfdocno" />}
            #END add-point
 
         #----<<pmbf001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf001
            #add-point:BEFORE FIELD pmbf001
            {<point name="input.b.page1.pmbf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf001
            
            #add-point:AFTER FIELD pmbf001
            {<point name="input.a.page1.pmbf001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf001
            #add-point:ON CHANGE pmbf001
            {<point name="input.g.page1.pmbf001" />}
            #END add-point
 
         #----<<pmbf002>>----
         #此段落由子樣板a02產生
         AFTER FIELD pmbf002
            
            #add-point:AFTER FIELD pmbf002
            {<point name="input.a.page1.pmbf002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf002
            #add-point:BEFORE FIELD pmbf002
            {<point name="input.b.page1.pmbf002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf002
            #add-point:ON CHANGE pmbf002
            {<point name="input.g.page1.pmbf002" />}
            #END add-point
 
         #----<<pmbf002_desc>>----
         #----<<pmbf003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf003
            #add-point:BEFORE FIELD pmbf003
            {<point name="input.b.page1.pmbf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf003
            
            #add-point:AFTER FIELD pmbf003
            {<point name="input.a.page1.pmbf003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf003
            #add-point:ON CHANGE pmbf003
            {<point name="input.g.page1.pmbf003" />}
            #END add-point
 
         #----<<pmbf004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf004
            #add-point:BEFORE FIELD pmbf004
            {<point name="input.b.page1.pmbf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf004
            
            #add-point:AFTER FIELD pmbf004
            {<point name="input.a.page1.pmbf004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf004
            #add-point:ON CHANGE pmbf004
            {<point name="input.g.page1.pmbf004" />}
            #END add-point
 
         #----<<pmbf008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf008
            #add-point:BEFORE FIELD pmbf008
            {<point name="input.b.page1.pmbf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf008
            
            #add-point:AFTER FIELD pmbf008
            {<point name="input.a.page1.pmbf008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf008
            #add-point:ON CHANGE pmbf008
            {<point name="input.g.page1.pmbf008" />}
            #END add-point
 
         #----<<pmbf009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf009
            #add-point:BEFORE FIELD pmbf009
            {<point name="input.b.page1.pmbf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf009
            
            #add-point:AFTER FIELD pmbf009
            {<point name="input.a.page1.pmbf009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf009
            #add-point:ON CHANGE pmbf009
            {<point name="input.g.page1.pmbf009" />}
            #END add-point
 
         #----<<pmbf005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf005
            #add-point:BEFORE FIELD pmbf005
            {<point name="input.b.page1.pmbf005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf005
            
            #add-point:AFTER FIELD pmbf005
            {<point name="input.a.page1.pmbf005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf005
            #add-point:ON CHANGE pmbf005
            {<point name="input.g.page1.pmbf005" />}
            #END add-point
 
         #----<<pmbf007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf007
            #add-point:BEFORE FIELD pmbf007
            {<point name="input.b.page1.pmbf007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf007
            
            #add-point:AFTER FIELD pmbf007
            {<point name="input.a.page1.pmbf007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf007
            #add-point:ON CHANGE pmbf007
            {<point name="input.g.page1.pmbf007" />}
            #END add-point
 
         #----<<pmbf006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pmbf006
            #add-point:BEFORE FIELD pmbf006
            {<point name="input.b.page1.pmbf006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmbf006
            
            #add-point:AFTER FIELD pmbf006
            {<point name="input.a.page1.pmbf006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmbf006
            #add-point:ON CHANGE pmbf006
            {<point name="input.g.page1.pmbf006" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<pmbfstus>>----
         #Ctrlp:input.c.page1.pmbfstus
         ON ACTION controlp INFIELD pmbfstus
            #add-point:ON ACTION controlp INFIELD pmbfstus
            {<point name="input.c.page1.pmbfstus" />}
            #END add-point
 
         #----<<pmbfdocno>>----
         #Ctrlp:input.c.page1.pmbfdocno
         ON ACTION controlp INFIELD pmbfdocno
            #add-point:ON ACTION controlp INFIELD pmbfdocno
            {<point name="input.c.page1.pmbfdocno" />}
            #END add-point
 
         #----<<pmbf001>>----
         #Ctrlp:input.c.page1.pmbf001
         ON ACTION controlp INFIELD pmbf001
            #add-point:ON ACTION controlp INFIELD pmbf001
            {<point name="input.c.page1.pmbf001" />}
            #END add-point
 
         #----<<pmbf002>>----
         #Ctrlp:input.c.page1.pmbf002
         ON ACTION controlp INFIELD pmbf002
            #add-point:ON ACTION controlp INFIELD pmbf002
            {<point name="input.c.page1.pmbf002" />}
            #END add-point
 
         #----<<pmbf002_desc>>----
         #----<<pmbf003>>----
         #Ctrlp:input.c.page1.pmbf003
         ON ACTION controlp INFIELD pmbf003
            #add-point:ON ACTION controlp INFIELD pmbf003
            {<point name="input.c.page1.pmbf003" />}
            #END add-point
 
         #----<<pmbf004>>----
         #Ctrlp:input.c.page1.pmbf004
         ON ACTION controlp INFIELD pmbf004
            #add-point:ON ACTION controlp INFIELD pmbf004
            {<point name="input.c.page1.pmbf004" />}
            #END add-point
 
         #----<<pmbf008>>----
         #Ctrlp:input.c.page1.pmbf008
         ON ACTION controlp INFIELD pmbf008
            #add-point:ON ACTION controlp INFIELD pmbf008
            {<point name="input.c.page1.pmbf008" />}
            #END add-point
 
         #----<<pmbf009>>----
         #Ctrlp:input.c.page1.pmbf009
         ON ACTION controlp INFIELD pmbf009
            #add-point:ON ACTION controlp INFIELD pmbf009
            {<point name="input.c.page1.pmbf009" />}
            #END add-point
 
         #----<<pmbf005>>----
         #Ctrlp:input.c.page1.pmbf005
         ON ACTION controlp INFIELD pmbf005
            #add-point:ON ACTION controlp INFIELD pmbf005
            {<point name="input.c.page1.pmbf005" />}
            #END add-point
 
         #----<<pmbf007>>----
         #Ctrlp:input.c.page1.pmbf007
         ON ACTION controlp INFIELD pmbf007
            #add-point:ON ACTION controlp INFIELD pmbf007
            {<point name="input.c.page1.pmbf007" />}
            #END add-point
 
         #----<<pmbf006>>----
         #Ctrlp:input.c.page1.pmbf006
         ON ACTION controlp INFIELD pmbf006
            #add-point:ON ACTION controlp INFIELD pmbf006
            {<point name="input.c.page1.pmbf006" />}
            #END add-point
 
 
 
         AFTER INPUT
            #add-point:單身輸入後處理
            {<point name="input.after_input"/>}
            #end add-point
            
      END INPUT
      
 
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      #公用action
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:畫面關閉前
   {<point name="input.before_close"/>}
   #end add-point
   
   #畫面關閉
   CLOSE WINDOW w_apmt100_02 
   
   #add-point:input段after input 
   {<point name="input.post_input"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="apmt100_02.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="apmt100_02.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
</add_points>