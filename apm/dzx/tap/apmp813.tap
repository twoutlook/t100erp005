<add_points prog="apmp813" std_prog="apmp813" erpver="1.0" module="APM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.apmp813_process_logic" cite_std="N" status="d" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 邏輯處理部份
# Memo...........:
# Usage..........: CALL apmp813_process_logic(p_pmcc001,p_pmcc002,p_pmcc005,p_pmcc006,lc_param)
# Input parameter: p_pmcc001      評核期別
#                : p_pmcc002      評核品類
#                : p_pmcc005      定量評核整體權重
#                : p_pmcc006      定性評核整體權重
#                : lc_param       画面资料
# Return code....: r_success      TRUE/FLASE
# Date & Author..: 2014/02/21 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp813_process_logic(p_pmcc001,p_pmcc002,p_pmcc005,p_pmcc006)
DEFINE lc_param    type_parameter
DEFINE l_sql       STRING
DEFINE p_pmcc001   LIKE pmcc_t.pmcc001
DEFINE p_pmcc002   LIKE pmcc_t.pmcc002
DEFINE p_pmcc005   LIKE pmcc_t.pmcc005
DEFINE p_pmcc006   LIKE pmcc_t.pmcc006
DEFINE r_success   LIKE type_t.num5
DEFINE l_i         LIKE type_t.num5
DEFINE l_n         LIKE type_t.num5
DEFINE l_ac        LIKE type_t.num5
TYPE type_l_pmcj   RECORD
       pmcj004     LIKE pmcj_t.pmcj002
                   END RECORD
DEFINE l_pmcj      DYNAMIC ARRAY OF type_l_pmcj
DEFINE l_str       STRING


   LET r_success = TRUE
   #供應商
   #抓取[T:供應商評核評核項目得分檔]中[C:供應商編號]，抓出來的供應商編號即為該評核期別+評核類別應計算總得分的供應商清單
   #如果lc_param.pmci001不為空，那麼供應商編號是固定的lc_param.pmci001
   IF cl_null(lc_param.pmci001) THEN
      LET l_ac = 1
      LET l_sql = "SELECT UNIQUE pmcj004 ",
                  "  FROM pmcj_t",
                  " WHERE pmcjent = '",g_enterprise,"'",
                  "   AND pmcj001 = '",p_pmcc001,"'",
                  "   AND pmcj002 = '",p_pmcc002,"'"
      PREPARE apmp813_sel_pmcj004_pr FROM l_sql
      DECLARE apmp813_sel_pmcj004_cs CURSOR FOR apmp813_sel_pmcj004_pr
      FOREACH apmp813_sel_pmcj004_cs INTO l_pmcj[l_ac].pmcj004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success
         END IF
         LET l_ac = l_ac + 1
      END FOREACH           
      LET l_ac = l_ac - 1
      FOR l_i = 1 TO l_ac
         #依據評核期別+評核品類+供應商編號，檢查[T:供應商評核總得分檔]中是否已存在資料，如已存在
         
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM pmck_t
          WHERE pmckent = g_enterprise
            AND pmck001 = p_pmcc001
            AND pmck002 = p_pmcc002
            AND pmck003 = l_pmcj[l_i].pmcj004
         IF l_n > 0 THEN
            #IF 畫面上"已經在綜合得分時重新計算"有勾選，則將[T:供應商評核總得分檔]中該筆資料刪除，且往下執行計算總分。
            IF lc_param.yes = 'Y' THEN
               DELETE FROM pmck_t 
                WHERE pmckent = g_enterprise
                  AND pmck001 = p_pmcc001
                  AND pmck002 = p_pmcc002
                  AND pmck003 = l_pmcj[l_i].pmcj004
               IF SQLCA.sqlcode THEN
                  LET r_success = FALSE
                  RETURN r_success
               END IF
            ELSE
               #IF 畫面上"已經在綜合得分時重新計算"無勾選，將此筆資料記錄於異常清單中，於批次執行完後將異常清單一起顯示，且不往下做
               LET r_success = FALSE
               LET l_str = l_pmcj[l_i].pmcj004,'/',p_pmcc001,'/',p_pmcc002
               CALL cl_errmsg('pmck003,pmck001,pmck002',l_str,'','apm-00317',1)
            END IF
         END IF
      END FOR
   ELSE
      #依據評核期別+評核品類+供應商編號，檢查[T:供應商評核總得分檔]中是否已存在資料，如已存在
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM pmck_t
       WHERE pmckent = g_enterprise
         AND pmck001 = p_pmcc001
         AND pmck002 = p_pmcc002
         AND pmck003 = lc_param.pmci001
      IF l_n > 0 THEN
         #IF 畫面上"已經在綜合得分時重新計算"有勾選，則將[T:供應商評核總得分檔]中該筆資料刪除，且往下執行計算總分。
         IF lc_param.yes = 'Y' THEN
            DELETE FROM pmck_t 
             WHERE pmckent = g_enterprise
               AND pmck001 = p_pmcc001
               AND pmck002 = p_pmcc002
               AND pmck003 = lc_param.pmci001
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
         ELSE
            #IF 畫面上"已經在綜合得分時重新計算"無勾選，將此筆資料記錄於異常清單中，於批次執行完後將異常清單一起顯示，且不往下做
            LET r_success = FALSE
            LET l_str = lc_param.pmci001,'/',p_pmcc001,'/',p_pmcc002
            CALL cl_errmsg('pmck003,pmck001,pmck002',l_str,'','apm-00317',1)
         END IF
      END IF
   END IF
   IF NOT r_success THEN
      RETURN r_success
   ELSE
      IF NOT cl_null(lc_param.pmci001) THEN
         CALL apmp813_process_logic_each(p_pmcc001,p_pmcc002,lc_param.pmci001,p_pmcc005,p_pmcc006,lc_param.*) RETURNING r_success
         IF NOT r_success THEN
            RETURN r_success
         END IF
      ELSE
         FOR l_i = 1 TO l_ac
            CALL apmp813_process_logic_each(p_pmcc001,p_pmcc002,l_pmcj[l_i].pmcj004,p_pmcc005,p_pmcc006,lc_param.*) RETURNING r_success
            IF NOT r_success THEN
               RETURN r_success
            END IF
         END FOR
      END IF
   END IF
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apmp813_process_logic_each" cite_std="N" status="d" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 邏輯處理部份
# Memo...........:
# Usage..........: CALL apmp813_process_logic_each(p_pmcc001,p_pmcc002,p_pmcj004,p_pmcc005,p_pmcc006,lc_param)
# Input parameter: p_pmcc001      評核期別
#                : p_pmcc002      評核品類
#                : p_pmcj004      供應商編號
#                : p_pmcc005      定量評核整體權重
#                : p_pmcc006      定性評核整體權重
#                : lc_param       画面资料
# Return code....: r_success      TRUE/FLASE
# Date & Author..: 2014/02/21 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp813_process_logic_each(p_pmcc001,p_pmcc002,p_pmcj004,p_pmcc005,p_pmcc006)
DEFINE lc_param    type_parameter
DEFINE l_sql       STRING
DEFINE p_pmcc001   LIKE pmcc_t.pmcc001
DEFINE p_pmcc002   LIKE pmcc_t.pmcc002
DEFINE p_pmcc005   LIKE pmcc_t.pmcc005
DEFINE p_pmcc006   LIKE pmcc_t.pmcc006
DEFINE p_pmcj004   LIKE pmcj_t.pmcj004
DEFINE l_pmcj007   LIKE pmcj_t.pmcj007
DEFINE l_pmcd003   LIKE pmcd_t.pmcd003
DEFINE l_pmcd004   LIKE pmcd_t.pmcd004
DEFINE l_pmce003   LIKE pmce_t.pmce003
DEFINE l_pmce004   LIKE pmce_t.pmce004
DEFINE l_pmce005   LIKE pmce_t.pmce005
DEFINE l_pmcf003   LIKE pmcf_t.pmcf003
DEFINE l_pmcf006   LIKE pmcf_t.pmcf006
DEFINE l_l         LIKE pmcj_t.pmcj007
DEFINE l_x         LIKE pmcj_t.pmcj007
DEFINE l_lsum      LIKE pmcj_t.pmcj007
DEFINE l_xsum      LIKE pmcj_t.pmcj007
DEFINE l_sum       LIKE pmcj_t.pmcj007
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE
   #定量、定性
   #抓取[T:供應商評核定量項目設定檔]中[C:權重]>0 的定量評核項目
   LET l_l = 0
   LET l_sql = "SELECT pmcd003,pmcd004 ",
               "  FROM pmcd_t",
               " WHERE pmcdent = '",g_enterprise,"'",
               "   AND pmcd001 = '",p_pmcc001,"'",
               "   AND pmcd002 = '",p_pmcc002,"'",
               "   AND pmcd004 > 0"
   PREPARE apmp813_sel_pmcd_pr FROM l_sql
   DECLARE apmp813_sel_pmcd_cs CURSOR FOR apmp813_sel_pmcd_pr
   FOREACH apmp813_sel_pmcd_cs INTO l_pmcd003,l_pmcd004
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
      #抓取每個供應商該定量評核項目的分數
      LET l_pmcj007 = ""
      SELECT pmcj007 INTO l_pmcj007
        FROM pmcj_t
       WHERE pmcjent = g_enterprise
         AND pmcj001 = p_pmcc001
         AND pmcj002 = p_pmcc002
         AND pmcj003 = '1'
         AND pmcj004 = p_pmcj004
         AND pmcj005 = l_pmcd003
      IF cl_null(l_pmcj007) THEN
         LET l_pmcj007 = 0
      END IF
      #將定量評核項目分數，乘上該評核項目的[C:權重]
      #將該供應商所有 定量 評核項目＊權重後的分數加總
      LET l_l = l_l + l_pmcj007*l_pmcd004/100
   END FOREACH
   #加總后的分數再乘上[C:定量評核整體權重]，此即為該供應商的定量評核總分。
   LET l_lsum = l_l*p_pmcc005/100
   LET l_x = 0
   #抓取[T:供應商評核定性項目設定檔]中[C:權重]>0 的定性評核項目
   LET l_sql = "SELECT pmce003,pmce004,pmce005 ",
               "  FROM pmce_t",
               " WHERE pmceent = '",g_enterprise,"'",
               "   AND pmce001 = '",p_pmcc001,"'",
               "   AND pmce002 = '",p_pmcc002,"'",
               "   AND pmce005 > 0 "
   PREPARE apmp813_sel_pmce_pr FROM l_sql
   DECLARE apmp813_sel_pmce_cs CURSOR FOR apmp813_sel_pmce_pr
   FOREACH apmp813_sel_pmce_cs INTO l_pmce003,l_pmce004,l_pmce005
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
      #抓取每個供應商該定性評核項目的分數
      LET l_pmcj007 = ""
      SELECT pmcj007 INTO l_pmcj007
        FROM pmcj_t
       WHERE pmcjent = g_enterprise
         AND pmcj001 = p_pmcc001
         AND pmcj002 = p_pmcc002
         AND pmcj003 = '2'
         AND pmcj004 = p_pmcj004
         AND pmcj005 = l_pmce003
      IF cl_null(l_pmcj007) THEN
         LET l_pmcj007 = 0
      END IF
      #將定性評核項目分數，乘上該評核項目的[C:權重]
      #將該供應商所有 定性 評核項目＊權重後的分數加總
      LET l_x = l_x + l_pmcj007*l_pmce005/100
   END FOREACH
   #加總后的分數再乘上[C:定性評核整體權重]，此即為該供應商的定性評核總分。
   LET l_xsum = l_x*p_pmcc006/100
   #將定量 評核總分+定性 評核總分，即為該供應商評核的總得分。
   LET l_sum = l_lsum+l_xsum
   #將計算出來的供應商評核總得分，寫入[T:供應商評核總得分檔]中，
　 #[C:系統得分] = 算出的總得分
   #[C:調整後得分] = [C:系統得分]
   #[C:評核等級]=依[C:評核期別]+[C:評核品類]至 [T:供應商評核績效分級標準設定檔]中抓取所設定資料，
   #             抓取[T:供應商評核績效分級標準設定檔].[C:供應商分級]
   #[C:處理方案]=[T:供應商評核績效分級標準設定檔].[C:處理方案]
   SELECT UNIQUE pmcf003,pmcf006
     INTO l_pmcf003,l_pmcf006
     FROM pmcf_t
    WHERE pmcfent = g_enterprise
      AND pmcf001 = p_pmcc001
      AND pmcf002 = p_pmcc002
      AND pmcf004 <= l_sum
      AND pmcf005 >= l_sum
   INSERT INTO pmck_t(pmckent,pmck001,pmck002,pmck003,pmck004,pmck005,pmck006,pmck007) 
               VALUES(g_enterprise,p_pmcc001,p_pmcc002,p_pmcj004,l_sum,l_sum,l_pmcf003,l_pmcf006)
   IF SQLCA.sqlcode THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apmp813_process_logic" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 邏輯處理部份
# Memo...........:
# Usage..........: CALL apmp813_process_logic(p_pmcc001,p_pmcc002,p_pmcc005,p_pmcc006,lc_param)
# Input parameter: p_pmcc001      評核期別
#                : p_pmcc002      評核品類
#                : p_pmcc005      定量評核整體權重
#                : p_pmcc006      定性評核整體權重
#                : lc_param       画面资料
# Return code....: r_success      TRUE/FLASE
# Date & Author..: 2014/02/21 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp813_process_logic(p_pmcc001,p_pmcc002,p_pmcc005,p_pmcc006,lc_param)
DEFINE lc_param    type_parameter
DEFINE l_sql       STRING
DEFINE p_pmcc001   LIKE pmcc_t.pmcc001
DEFINE p_pmcc002   LIKE pmcc_t.pmcc002
DEFINE p_pmcc005   LIKE pmcc_t.pmcc005
DEFINE p_pmcc006   LIKE pmcc_t.pmcc006
DEFINE r_success   LIKE type_t.num5
DEFINE l_i         LIKE type_t.num5
DEFINE l_n         LIKE type_t.num5
DEFINE l_ac        LIKE type_t.num5
TYPE type_l_pmcj   RECORD
       pmcj004     LIKE pmcj_t.pmcj002
                   END RECORD
DEFINE l_pmcj      DYNAMIC ARRAY OF type_l_pmcj
DEFINE l_str       STRING


   LET r_success = TRUE
   #供應商
   #抓取[T:供應商評核評核項目得分檔]中[C:供應商編號]，抓出來的供應商編號即為該評核期別+評核類別應計算總得分的供應商清單
   #如果lc_param.pmci001不為空，那麼供應商編號是固定的lc_param.pmci001
   IF cl_null(lc_param.pmci001) THEN
      LET l_ac = 1
      LET l_sql = "SELECT UNIQUE pmcj004 ",
                  "  FROM pmcj_t",
                  " WHERE pmcjent = '",g_enterprise,"'",
                  "   AND pmcj001 = '",p_pmcc001,"'",
                  "   AND pmcj002 = '",p_pmcc002,"'"
      PREPARE apmp813_sel_pmcj004_pr FROM l_sql
      DECLARE apmp813_sel_pmcj004_cs CURSOR FOR apmp813_sel_pmcj004_pr
      FOREACH apmp813_sel_pmcj004_cs INTO l_pmcj[l_ac].pmcj004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET r_success = FALSE
            RETURN r_success
         END IF
         LET l_ac = l_ac + 1
      END FOREACH           
      LET l_ac = l_ac - 1
      FOR l_i = 1 TO l_ac
         #依據評核期別+評核品類+供應商編號，檢查[T:供應商評核總得分檔]中是否已存在資料，如已存在
         
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM pmck_t
          WHERE pmckent = g_enterprise
            AND pmck001 = p_pmcc001
            AND pmck002 = p_pmcc002
            AND pmck003 = l_pmcj[l_i].pmcj004
         IF l_n > 0 THEN
            #IF 畫面上"已經在綜合得分時重新計算"有勾選，則將[T:供應商評核總得分檔]中該筆資料刪除，且往下執行計算總分。
            IF lc_param.yes = 'Y' THEN
               DELETE FROM pmck_t 
                WHERE pmckent = g_enterprise
                  AND pmck001 = p_pmcc001
                  AND pmck002 = p_pmcc002
                  AND pmck003 = l_pmcj[l_i].pmcj004
               IF SQLCA.sqlcode THEN
                  LET r_success = FALSE
                  RETURN r_success
               END IF
            ELSE
               #IF 畫面上"已經在綜合得分時重新計算"無勾選，將此筆資料記錄於異常清單中，於批次執行完後將異常清單一起顯示，且不往下做
               LET r_success = FALSE
               LET l_str = l_pmcj[l_i].pmcj004,'/',p_pmcc001,'/',p_pmcc002
               CALL cl_errmsg('pmck003,pmck001,pmck002',l_str,'','apm-00317',1)
            END IF
         END IF
      END FOR
   ELSE
      #依據評核期別+評核品類+供應商編號，檢查[T:供應商評核總得分檔]中是否已存在資料，如已存在
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM pmck_t
       WHERE pmckent = g_enterprise
         AND pmck001 = p_pmcc001
         AND pmck002 = p_pmcc002
         AND pmck003 = lc_param.pmci001
      IF l_n > 0 THEN
         #IF 畫面上"已經在綜合得分時重新計算"有勾選，則將[T:供應商評核總得分檔]中該筆資料刪除，且往下執行計算總分。
         IF lc_param.yes = 'Y' THEN
            DELETE FROM pmck_t 
             WHERE pmckent = g_enterprise
               AND pmck001 = p_pmcc001
               AND pmck002 = p_pmcc002
               AND pmck003 = lc_param.pmci001
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
         ELSE
            #IF 畫面上"已經在綜合得分時重新計算"無勾選，將此筆資料記錄於異常清單中，於批次執行完後將異常清單一起顯示，且不往下做
            LET r_success = FALSE
            LET l_str = lc_param.pmci001,'/',p_pmcc001,'/',p_pmcc002
            CALL cl_errmsg('pmck003,pmck001,pmck002',l_str,'','apm-00317',1)
         END IF
      END IF
   END IF
   IF NOT r_success THEN
      RETURN r_success
   ELSE
      IF NOT cl_null(lc_param.pmci001) THEN
         CALL apmp813_process_logic_each(p_pmcc001,p_pmcc002,lc_param.pmci001,p_pmcc005,p_pmcc006,lc_param.*) RETURNING r_success
         IF NOT r_success THEN
            RETURN r_success
         END IF
      ELSE
         FOR l_i = 1 TO l_ac
            CALL apmp813_process_logic_each(p_pmcc001,p_pmcc002,l_pmcj[l_i].pmcj004,p_pmcc005,p_pmcc006,lc_param.*) RETURNING r_success
            IF NOT r_success THEN
               RETURN r_success
            END IF
         END FOR
      END IF
   END IF
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.apmp813_process_logic_each" cite_std="N" status="u" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 邏輯處理部份
# Memo...........:
# Usage..........: CALL apmp813_process_logic_each(p_pmcc001,p_pmcc002,p_pmcj004,p_pmcc005,p_pmcc006,lc_param)
# Input parameter: p_pmcc001      評核期別
#                : p_pmcc002      評核品類
#                : p_pmcj004      供應商編號
#                : p_pmcc005      定量評核整體權重
#                : p_pmcc006      定性評核整體權重
#                : lc_param       画面资料
# Return code....: r_success      TRUE/FLASE
# Date & Author..: 2014/02/21 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp813_process_logic_each(p_pmcc001,p_pmcc002,p_pmcj004,p_pmcc005,p_pmcc006,lc_param)
DEFINE lc_param    type_parameter
DEFINE l_sql       STRING
DEFINE p_pmcc001   LIKE pmcc_t.pmcc001
DEFINE p_pmcc002   LIKE pmcc_t.pmcc002
DEFINE p_pmcc005   LIKE pmcc_t.pmcc005
DEFINE p_pmcc006   LIKE pmcc_t.pmcc006
DEFINE p_pmcj004   LIKE pmcj_t.pmcj004
DEFINE l_pmcj007   LIKE pmcj_t.pmcj007
DEFINE l_pmcd003   LIKE pmcd_t.pmcd003
DEFINE l_pmcd004   LIKE pmcd_t.pmcd004
DEFINE l_pmce003   LIKE pmce_t.pmce003
DEFINE l_pmce004   LIKE pmce_t.pmce004
DEFINE l_pmce005   LIKE pmce_t.pmce005
DEFINE l_pmcf003   LIKE pmcf_t.pmcf003
DEFINE l_pmcf006   LIKE pmcf_t.pmcf006
DEFINE l_l         LIKE pmcj_t.pmcj007
DEFINE l_x         LIKE pmcj_t.pmcj007
DEFINE l_lsum      LIKE pmcj_t.pmcj007
DEFINE l_xsum      LIKE pmcj_t.pmcj007
DEFINE l_sum       LIKE pmcj_t.pmcj007
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE
   #定量、定性
   #抓取[T:供應商評核定量項目設定檔]中[C:權重]>0 的定量評核項目
   LET l_l = 0
   LET l_sql = "SELECT pmcd003,pmcd004 ",
               "  FROM pmcd_t",
               " WHERE pmcdent = '",g_enterprise,"'",
               "   AND pmcd001 = '",p_pmcc001,"'",
               "   AND pmcd002 = '",p_pmcc002,"'",
               "   AND pmcd004 > 0"
   PREPARE apmp813_sel_pmcd_pr FROM l_sql
   DECLARE apmp813_sel_pmcd_cs CURSOR FOR apmp813_sel_pmcd_pr
   FOREACH apmp813_sel_pmcd_cs INTO l_pmcd003,l_pmcd004
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
      #抓取每個供應商該定量評核項目的分數
      LET l_pmcj007 = ""
      SELECT pmcj007 INTO l_pmcj007
        FROM pmcj_t
       WHERE pmcjent = g_enterprise
         AND pmcj001 = p_pmcc001
         AND pmcj002 = p_pmcc002
         AND pmcj003 = '1'
         AND pmcj004 = p_pmcj004
         AND pmcj005 = l_pmcd003
      IF cl_null(l_pmcj007) THEN
         LET l_pmcj007 = 0
      END IF
      #將定量評核項目分數，乘上該評核項目的[C:權重]
      #將該供應商所有 定量 評核項目＊權重後的分數加總
      LET l_l = l_l + l_pmcj007*l_pmcd004/100
   END FOREACH
   #加總后的分數再乘上[C:定量評核整體權重]，此即為該供應商的定量評核總分。
   LET l_lsum = l_l*p_pmcc005/100
   LET l_x = 0
   #抓取[T:供應商評核定性項目設定檔]中[C:權重]>0 的定性評核項目
   LET l_sql = "SELECT pmce003,pmce004,pmce005 ",
               "  FROM pmce_t",
               " WHERE pmceent = '",g_enterprise,"'",
               "   AND pmce001 = '",p_pmcc001,"'",
               "   AND pmce002 = '",p_pmcc002,"'",
               "   AND pmce005 > 0 "
   PREPARE apmp813_sel_pmce_pr FROM l_sql
   DECLARE apmp813_sel_pmce_cs CURSOR FOR apmp813_sel_pmce_pr
   FOREACH apmp813_sel_pmce_cs INTO l_pmce003,l_pmce004,l_pmce005
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET r_success = FALSE
         RETURN r_success
      END IF
      #抓取每個供應商該定性評核項目的分數
      LET l_pmcj007 = ""
      SELECT pmcj007 INTO l_pmcj007
        FROM pmcj_t
       WHERE pmcjent = g_enterprise
         AND pmcj001 = p_pmcc001
         AND pmcj002 = p_pmcc002
         AND pmcj003 = '2'
         AND pmcj004 = p_pmcj004
         AND pmcj005 = l_pmce003
      IF cl_null(l_pmcj007) THEN
         LET l_pmcj007 = 0
      END IF
      #將定性評核項目分數，乘上該評核項目的[C:權重]
      #將該供應商所有 定性 評核項目＊權重後的分數加總
      LET l_x = l_x + l_pmcj007*l_pmce005/100
   END FOREACH
   #加總后的分數再乘上[C:定性評核整體權重]，此即為該供應商的定性評核總分。
   LET l_xsum = l_x*p_pmcc006/100
   #將定量 評核總分+定性 評核總分，即為該供應商評核的總得分。
   LET l_sum = l_lsum+l_xsum
   #將計算出來的供應商評核總得分，寫入[T:供應商評核總得分檔]中，
　 #[C:系統得分] = 算出的總得分
   #[C:調整後得分] = [C:系統得分]
   #[C:評核等級]=依[C:評核期別]+[C:評核品類]至 [T:供應商評核績效分級標準設定檔]中抓取所設定資料，
   #             抓取[T:供應商評核績效分級標準設定檔].[C:供應商分級]
   #[C:處理方案]=[T:供應商評核績效分級標準設定檔].[C:處理方案]
   SELECT UNIQUE pmcf003,pmcf006
     INTO l_pmcf003,l_pmcf006
     FROM pmcf_t
    WHERE pmcfent = g_enterprise
      AND pmcf001 = p_pmcc001
      AND pmcf002 = p_pmcc002
      AND pmcf004 <= l_sum
      AND pmcf005 >= l_sum
   INSERT INTO pmck_t(pmckent,pmck001,pmck002,pmck003,pmck004,pmck005,pmck006,pmck007) 
               VALUES(g_enterprise,p_pmcc001,p_pmcc002,p_pmcj004,l_sum,l_sum,l_pmcf003,l_pmcf006)
   IF SQLCA.sqlcode THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   RETURN r_success
END FUNCTION]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[        pmci001         LIKE pmci_t.pmci001,
        yes             LIKE type_t.chr80, ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[#DEFINE lc_param.wc             STRING
#DEFINE lc_param.pmci001        LIKE pmci_t.pmci001
#DEFINE lc_param.yes            LIKE type_t.chr80]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   display "g_argv[1]",g_argv[1]
   display "g_argv[2]",g_argv[2]
   display "g_argv[3]",g_argv[3]
   LET lc_param.pmci001 = g_argv[1]
   LET lc_param.yes = g_argv[2]
   LET lc_param.wc = g_argv[3]
   LET ls_js = util.JSON.stringify( lc_param )
   IF lc_param.pmci001 IS NOT NULL THEN
      LET g_bgjob = "Y"
   ELSE
      LET g_bgjob = "N"
   END IF ]]>
</point>
  <point name="process.background_finish" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="process.count_progress" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      LET ls_sql = "SELECT COUNT(*) FROM pmcc_t",
                   " WHERE ",lc_param.wc     
      PREPARE apmp813_cnt1_cs FROM ls_sql
      EXECUTE apmp813_cnt1_cs INTO li_cnt1
      FREE apmp813_cnt1_cs
      LET li_count = li_cnt1 +2]]>
</point>
  <point name="process.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE li_cnt1     LIKE type_t.num5
   DEFINE l_sql       STRING
   DEFINE l_pmcc001   LIKE pmcc_t.pmcc001
   DEFINE l_pmcc002   LIKE pmcc_t.pmcc002
   DEFINE l_pmcc005   LIKE pmcc_t.pmcc005
   DEFINE l_pmcc006   LIKE pmcc_t.pmcc006
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_success1  LIKE type_t.num5]]>
</point>
  <point name="process.pre_process" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="process.process" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL s_transaction_begin()
   CALL cl_showmsg_init()
   LET l_success = TRUE
   LET l_success1 = TRUE
   #先抓出[T:供應商評核項目設定檔]中，符合條件的 評核期別+評核類別資料
   LET l_sql = "SELECT UNIQUE pmcc001,pmcc002,pmcc005,pmcc006",
               "  FROM pmcc_t",
               " WHERE pmccent = '",g_enterprise,"'",
               "   AND pmccstus = 'Y' ",
               "   AND ",lc_param.wc 
   PREPARE apmp813_sel_pmcc_pr FROM l_sql
   DECLARE apmp813_sel_pmcc_cs CURSOR FOR apmp813_sel_pmcc_pr
   FOREACH apmp813_sel_pmcc_cs INTO l_pmcc001,l_pmcc002,l_pmcc005,l_pmcc006
      CALL apmp813_process_logic(l_pmcc001,l_pmcc002,l_pmcc005,l_pmcc006,lc_param.*) RETURNING l_success
      IF NOT l_success THEN
         LET l_success1 = FALSE
         CONTINUE FOREACH
      ELSE
         CONTINUE FOREACH
      END IF
   END FOREACH
   IF l_success1 THEN
      CALL cl_err('','adz-00217',1)
      CALL s_transaction_end("Y","0")
   ELSE
      CALL cl_showmsg()
      CALL cl_err('','adz-00218',1)
      CALL s_transaction_end("N","0")
   END IF
   CLEAR FORM
   LET lc_param.pmci001 = ""
   LET lc_param.yes = "N"
   DISPLAY BY NAME lc_param.yes]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_str    STRING
   
   LET g_errshow = 1
   ]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         CONSTRUCT BY NAME lc_param.wc ON pmcc001,pmcc002
            BEFORE CONSTRUCT
               CALL cl_qbe_init()
		         IF cl_null(lc_param.yes) THEN
                  LET lc_param.yes = 'N'
               END IF
		         
            ON ACTION controlp INFIELD pmcc001
               #開窗c段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "c"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = " pmccstus = 'Y' "
               CALL q_pmcc001()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmcc001  #顯示到畫面上
               LET g_qryparam.where = ""
               NEXT FIELD pmcc001                     #返回原欄位
               
            ON ACTION controlp INFIELD pmcc002
               #開窗c段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "c"
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = " pmccstus = 'Y' "
               CALL q_pmcc002_1()                       #呼叫開窗
               DISPLAY g_qryparam.return1 TO pmcc002  #顯示到畫面上
               LET g_qryparam.where = ""
               NEXT FIELD pmcc002                     #返回原欄位  
             
            AFTER CONSTRUCT
               LET l_str = lc_param.wc
               IF l_str.getIndexOf('pmcc001',1) = 0 THEN
                  CALL cl_err('','sub-00379',1)
                  NEXT FIELD pmcc001
               END IF
         END CONSTRUCT]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         INPUT lc_param.pmci001,lc_param.yes FROM pmci001,yes ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
               IF cl_null(lc_param.yes) THEN
                  LET lc_param.yes = 'N'
               END IF
               
            ON ACTION controlp INFIELD pmci001
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = "i"
               LET g_qryparam.reqry = FALSE
               CALL q_pmaa001_10()                    #呼叫開窗
               LET lc_param.pmci001 = g_qryparam.return1
               DISPLAY lc_param.pmci001 TO pmci001           #顯示到畫面上
               NEXT FIELD pmci001                     #返回原欄位
               
            AFTER FIELD pmci001
               IF NOT cl_null(lc_param.pmci001) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = lc_param.pmci001
                  IF NOT cl_chk_exist("v_pmaa001_1") THEN
                     LET lc_param.pmci001 = ''
                     NEXT FIELD CURRENT
                  END IF
               END IF  
               
         END INPUT]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   LET lc_param.yes = 'N']]>
</point>
  <point name="ui_dialog.qbe_select" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.exit_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="transfer.argv.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.foreground_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="apmp813.description" ver="18" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000111
#+ 
#+ Filename...: apmp813
#+ Description: 供應商績效評核綜合得分計算作業
#+ Creator....: 01101(2014/02/14)
#+ Modifier...: 02482(2014/02/21)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apmp813.global" ver="5" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apmp813.init" ver="6" status="" src="s">
<![CDATA[#+ 初始化作業
PRIVATE FUNCTION apmp813_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apmp813.main" ver="4" status="" src="s">
<![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL apmp813_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmp813 WITH FORM cl_ap_formpath("apm",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL apmp813_init()
 
      #進入選單 Menu (="N")
      CALL apmp813_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apmp813
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="apmp813.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="apmp813.process" ver="1" status="" src="s">
<![CDATA[#+ 資料處理
PRIVATE FUNCTION apmp813_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE apmp813_process_cs CURSOR FROM ls_sql
#  FOREACH apmp813_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm("std-00012") RETURNING li_stus
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
</section>
  <section id="apmp813.transfer_argv" ver="1" status="" src="s">
<![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION apmp813_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
</section>
  <section id="apmp813.ui_dialog" ver="9" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apmp813_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.*  TO NULL
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION CLOSE 
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = g_prog,TODAY USING "yyyymmdd",CURRENT HOUR TO SECOND 
         LET g_jobid = cl_schedule_trim_colon(g_jobid)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL apmp813_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
                 CALL cl_schedule_update_data(g_jobid)
                 LET ls_js = apmp813_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>