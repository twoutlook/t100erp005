<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmi820" std_prog="apmi820" erpver="1.0" module="APM" ver="1" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.apmi820_pmeq002_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 店群說明
# Memo...........:
# Usage..........: CALL apmi820_pmeq002_ref()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/03/30 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_pmeq002_ref()

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmeq_m.pmeq002
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaal003 FROM rtaal_t WHERE rtaalent='"||g_enterprise||"' AND rtaal001=? AND rtaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmeq_m.pmeq002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmeq_m.pmeq002_desc
   
END FUNCTION]]>
  </point>
  <point name="function.apmi820_gen_detail" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 產生引用要貨組織範圍
# Memo...........:
# Usage..........: CALL apmi820_gen_detail()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/03/30 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_gen_detail()
DEFINE r_success     LIKE type_t.num5
DEFINE l_sql         STRING

   LET r_success = TRUE
   #huangrh add rtak-----20150603
   LET l_sql = " INSERT INTO pmes_t(pmesent,pmesunit,pmes001,",
               "                    pmes002,pmes003,pmesstus)",
               " SELECT ",g_enterprise,",'",g_pmeq_m.pmequnit,"','",g_pmeq_m.pmeq001,"',",
               "        rtab002,         ' ',                    'Y'",
               "   FROM rtaa_t,rtab_t,rtak_t",
               "  WHERE rtaaent = rtabent",
               "    AND rtaa001= rtab001",
               "    AND rtaaent = ",g_enterprise,
               "    AND rtakent=rtaaent",
               "    AND rtak001=rtaa001",
               "    AND rtak002='2'",
               "    AND rtak003='Y'",
               "    AND rtaa001 = '",g_pmeq_m.pmeq002,"'"
   PREPARE apmi820_gen_detail FROM l_sql
   EXECUTE apmi820_gen_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "Ins pmes_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.apmi820_get_imay001" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取商品條碼的商品編號
# Memo...........:
# Usage..........: CALL apmi820_get_imay001()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/03/30 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_get_imay001()

   SELECT imay001 INTO g_pmer_d[l_ac].pmer003
     FROM imay_t
    WHERE imayent = g_enterprise
      AND imay003 = g_pmer_d[l_ac].pmer002
      
END FUNCTION]]>
  </point>
  <point name="function.apmi820_pmer003_chk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查商品編號是否正確
# Memo...........:
# Usage..........: CALL apmi820_pmer003_chk(p_pmer003)
#                  RETURNING r_success
# Input parameter: p_pmer003      商品編號
# Return code....: r_success      True/False
# Date & Author..: 2015/03/30 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_pmer003_chk(p_pmer003)
DEFINE p_pmer003         LIKE pmer_t.pmer003
DEFINE r_success         LIKE type_t.num5
   
   LET r_success = TRUE
   
   IF NOT cl_null(p_pmer003) THEN
      INITIALIZE g_chkparam.* TO NULL
      LET g_chkparam.arg1 = p_pmer003
      IF NOT cl_chk_exist("v_imaa001_9") THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.apmi820_pmer003_default" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 商品條碼帶出預設值
# Memo...........:
# Usage..........: CALL apmi820_pmer003_default(p_type)
# Input parameter: p_type        類型 1.商品條碼 2.商品編號
# Return code....: 無
# Date & Author..: 2015/03/30 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_pmer003_default(p_type)
DEFINE p_type        LIKE type_t.chr1
DEFINE l_imaa014     LIKE imaa_t.imaa014

   LET l_imaa014 = ''
   SELECT imaa014, imaa107
     INTO l_imaa014,g_pmer_d[l_ac].pmer006
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_pmer_d[l_ac].pmer003
   
   #輸入商品編號的時候，需要重新帶出商品條碼
   IF p_type = '2' THEN
      LET g_pmer_d[l_ac].pmer002 = l_imaa014
   END IF
   
   #取的商品條碼裡的包裝單位
   SELECT imay004 INTO g_pmer_d[l_ac].pmer004
     FROM imay_t
    WHERE imayent = g_enterprise
      AND imay003 = g_pmer_d[l_ac].pmer002
   
   #數量轉換
   CALL apmi820_num_change()
   
   #商品品名、規格
   CALL s_desc_get_item_desc(g_pmer_d[l_ac].pmer003)
      RETURNING g_pmer_d[l_ac].pmer003_desc,g_pmer_d[l_ac].pmer003_desc_desc

   #包裝單位
   CALL s_desc_get_unit_desc(g_pmer_d[l_ac].pmer004) RETURNING g_pmer_d[l_ac].pmer004_desc

   #要貨單位
   CALL s_desc_get_unit_desc(g_pmer_d[l_ac].pmer006) RETURNING g_pmer_d[l_ac].pmer006_desc
   
   LET g_pmer_d_o.* = g_pmer_d[l_ac].*
END FUNCTION]]>
  </point>
  <point name="function.apmi820_num_change" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 由包裝數量轉換成要貨數量
# Memo...........:
# Usage..........: CALL apmi820_num_change()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/03/30 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_num_change()
DEFINE l_success         LIKE type_t.num5

   #當包裝單位或要貨單位都為空，表示無法轉換
   IF cl_null(g_pmer_d[l_ac].pmer004) OR cl_null(g_pmer_d[l_ac].pmer006) THEN
      RETURN
   END IF

   #當包裝數量有值
   IF NOT cl_null(g_pmer_d[l_ac].pmer005) THEN
      #當收貨數量為空，由包裝數量轉換成收貨數量
      CALL s_aooi250_convert_qty(g_pmer_d[l_ac].pmer003,g_pmer_d[l_ac].pmer004,g_pmer_d[l_ac].pmer006,g_pmer_d[l_ac].pmer005)
         RETURNING l_success,g_pmer_d[l_ac].pmer007
   END IF
END FUNCTION]]>
  </point>
  <point name="function.apmi820_gen_pre" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 準備產生要貨預設資料的SQL
# Memo...........:
# Usage..........: CALL apmi820_gen_pre(p_type)
# Input parameter: p_type         1.刪除所有引用此模板要貨資料，重新產生預設資料
#                :                2.已存在資料不做異動，不存在在做新增動作
# Return code....: 無
# Date & Author..: 2015/03/31 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_gen_pre(p_type)
DEFINE p_type            LIKE type_t.num5
DEFINE l_sql             STRING
DEFINE l_ins_sql         STRING
   
   #撈取要貨模板的引用要貨組織
   LET l_sql = "SELECT UNIQUE pmesunit, pmes001, pmes002, pmes003",
               "  FROM pmeq_t, pmer_t, pmes_t",
               " WHERE pmeqent = pmerent",
               "   AND pmeq001 = pmer001",
               "   AND pmeqent = pmesent",
               "   AND pmeq001 = pmes001",
               "   AND pmeqent = ",g_enterprise,
               "   AND pmerstus = 'Y'",
               "   AND pmesstus = 'Y'",
               #"   AND pmes001 = '",g_pmeq_m.pmeq001,"'",
               "   AND EXISTS (SELECT 1",
               "                 FROM rtdx_t",
               "                WHERE rtdxent = pmeqent",
               "                  AND rtdxsite = pmes002",
               "                  AND rtdx001 = pmer003",
               "                  AND rtdxstus = 'Y')"
   PREPARE apmi820_pmes_pre FROM l_sql
   DECLARE apmi820_pmes_cs CURSOR FOR apmi820_pmes_pre
   
   # 是否已存在要貨預設單頭
   LET l_sql = "SELECT COUNT(*)",
               "  FROM pmet_t",
               " WHERE pmetent = ",g_enterprise,
               "   AND pmetsite = ?",
               "   AND COALESCE(pmet001,' ') = COALESCE(?,' ')"
   PREPARE apmi820_count_pmet FROM l_sql
   
   #新增要貨預設資料單身
   LET l_ins_sql = " INSERT INTO pmeu_t(pmeuent, pmeusite, pmeuunit,",
                   "                    pmeuseq,",
                   "                    pmeu001, pmeu002,  pmeu003,",
                   "                    pmeu004, pmeu005,  pmeu006,",
                   "                    pmeu007, pmeustus)",
                   " SELECT pmeqent,                pmes002, pmequnit,",
                   "        ROW_NUMBER() OVER (ORDER BY 1),",
                   "        COALESCE(pmes003, ' '), pmer002, pmer003,",
                   "        pmer004,                pmer005, pmer006,",
                   "        pmer007,                'Y'",
                   "   FROM pmeq_t, pmer_t, pmes_t",
                   "  WHERE pmeqent = pmerent",
                   "    AND pmeq001 = pmer001",
                   "    AND pmeqent = pmesent",
                   "    AND pmeq001 = pmes001",
                   "    AND pmeqent = ",g_enterprise,
                   "    AND pmerstus = 'Y'",
                   "    AND pmesstus = 'Y'",
                   "    AND pmes002 = ?",
                   "    AND pmes003 = ?",
                   "    AND EXISTS (SELECT 1",
                   "                  FROM rtdx_t",
                   "                 WHERE rtdxent = pmeqent",
                   "                   AND rtdxsite = pmes002",
                   "                   AND rtdx001 = pmer003",
                   "                   AND rtdxstus = 'Y')"
   
   IF p_type = 2 THEN
      LET l_sql = "SELECT pmerent, pmerunit, pmer001,",
                  "       pmerseq, pmer002,  pmer003,",
                  "       pmer004, pmer005,  pmer006,",
                  "       pmer007, pmerstus",
                  "  FROM pmer_t",
                  " WHERE pmerent = ",g_enterprise,
                  "   AND pmer001 = '",g_pmeq_m.pmeq001,"'",
                  "   AND pmerstus = 'Y'",
                  "   AND EXISTS (SELECT 1",
                  "                 FROM rtdx_t",
                  "                WHERE rtdxent = pmerent",
                  "                  AND rtdxsite = ?",
                  "                  AND rtdx001 = pmer003",
                  "                  AND rtdxstus = 'Y')"
      PREPARE apmi820_pmer_pre FROM l_sql
      DECLARE apmi820_pmer_cs CURSOR FOR apmi820_pmer_pre
      
      # 是否已存在要貨預設單身
      LET l_sql = "SELECT COUNT(pmeuseq)",
                  "  FROM pmeu_t",
                  " WHERE pmeuent = ",g_enterprise,
                  "   AND pmeusite = ?",
                  "   AND COALESCE(pmeu001,' ') = COALESCE(?,' ')",
                  "   AND pmeu002 = ?",
                  "   AND pmeu003 = ?"
      PREPARE apmi820_count_pmeu FROM l_sql
      
      #項次
      LET l_sql = "SELECT COALESCE(MAX(pmeuseq),0)+1",
                  "  FROM pmeu_t",
                  " WHERE pmeuent = ",g_enterprise,
                  "   AND pmeusite = ?",
                  "   AND COALESCE(pmeu001,' ') = COALESCE(?,' ')"
      PREPARE apmi820_pmeuseq FROM l_sql
   ELSE
      #刪除已存在的要貨預設資料單身
      LET l_sql = "DELETE FROM pmeu_t",
                  " WHERE EXISTS (SELECT 1",
                  "                 FROM pmet_t",
                  "                WHERE pmetent = pmeuent",
                  "                  AND pmetsite = ?",
                  "                  AND COALESCE(pmet001,' ') = COALESCE(?,' ')",
                  "                  AND pmetent = ",g_enterprise,
                  "                  AND pmet002 = '",g_pmeq_m.pmeq001,"')"
      PREPARE apmi820_del_pmeu FROM l_sql
      
      #刪除已存在的要貨預設資料單頭
      LET l_sql = "DELETE FROM pmet_t",
                  " WHERE pmetent = ",g_enterprise,
                  "   AND pmetsite = ?",
                  "   AND pmet001 = ?",
                  "   AND pmet002 = '",g_pmeq_m.pmeq001,"'"
      PREPARE apmi820_del_pmet FROM l_sql
      
      
      #當異動類型 = 2.已存在資料不做異動，不存在在做新增動作
      # 須不存在要貨預設資料
      IF p_type = '2' THEN
         LET l_ins_sql = l_ins_sql,
                         " AND NOT EXISTS(SELECT 1",
                         "                  FROM pmet_t,pmeu_t",
                         "                 WHERE pmetent = pmeuent",
                         "                   AND pmetsite = pmeusite",
                         "                   AND pmet001 = pmeu001",
                         "                   AND pmetent = pmesent",
                         "                   AND pmetsite = pmes002",
                         "                   AND COALESCE(pmet001,' ') = COALESCE(pmes003,' ')",
                         "                   AND pmet002 = pmer001",
                         "                   AND pmeu002 = pmer002",
                         "                   AND pmeu003 = pmer003)"
      END IF
   END IF
   
   PREPARE apmi820_ins_pmeu FROM l_ins_sql
END FUNCTION]]>
  </point>
  <point name="function.apmi820_gen_apmi821" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 依模版引用範圍+門店清單產生要貨組織預設要貨資料
# Memo...........:
# Usage..........: CALL apmi820_gen_apmi821(p_type)
# Input parameter: p_type         1.刪除所有引用此模板要貨資料，重新產生預設資料
#                :                2.已存在資料不做異動，不存在在做新增動作
# Return code....: r_success      True/False
# Date & Author..: 2015/03/31 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_gen_apmi821(p_type)
DEFINE p_type            LIKE type_t.num5
DEFINE r_success         LIKE type_t.num5
DEFINE l_ins_cnt         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_pmes            RECORD
       pmesunit          LIKE pmes_t.pmesunit,    #制定組織
       pmes001           LIKE pmes_t.pmes001,     #要貨模板
       pmes002           LIKE pmes_t.pmes002,     #要貨組織
       pmes003           LIKE pmes_t.pmes003      #要貨部門
                         END RECORD
DEFINE l_pmet            RECORD
       pmetent           LIKE pmet_t.pmetent,     #企業編號
       pmetsite          LIKE pmet_t.pmetsite,    #營運據點
       pmetunit          LIKE pmet_t.pmetunit,    #應用組織
       pmet001           LIKE pmet_t.pmet001,     #要貨部門
       pmet002           LIKE pmet_t.pmet002,     #要貨模板編號
       pmetownid         LIKE pmet_t.pmetownid,   #資料所有者
       pmetowndp         LIKE pmet_t.pmetowndp,   #資料所屬部門
       pmetcrtid         LIKE pmet_t.pmetcrtid,   #資料建立者
       pmetcrtdp         LIKE pmet_t.pmetcrtdp,   #資料建立部門
       pmetcrtdt         LIKE pmet_t.pmetcrtdt,   #資料創建日
       pmetmodid         LIKE pmet_t.pmetmodid,   #資料修改者
       pmetmoddt         LIKE pmet_t.pmetmoddt,   #最近修改日
       pmetstus          LIKE pmet_t.pmetstus     #狀態碼
                         END RECORD
                         
   LET r_success = TRUE
   LET l_ins_cnt = 0
   
   CALL apmi820_gen_pre(p_type)
   
   FOREACH apmi820_pmes_cs
      INTO l_pmes.pmesunit,l_pmes.pmes001,l_pmes.pmes002,l_pmes.pmes003
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "Foreach apmi820_pmes_cs"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #當異動類型 = 1.
      #      刪除所有引用此模板要貨資料，重新產生預設資料
      #當異動類型 = 2.
      #      已存在資料不做異動，不存在在做新增動作
      IF p_type = '1' THEN
         #刪除要貨預設資料單身
         EXECUTE apmi820_del_pmeu
           USING l_pmes.pmes002,l_pmes.pmes003
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "Del pmeu_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF
         
         #刪除要貨預設資料單頭
         EXECUTE apmi820_del_pmet
           USING l_pmes.pmes002,l_pmes.pmes003
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "Del pmet_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      #是否已經存在要貨預設單頭
      LET l_cnt = 0
      EXECUTE apmi820_count_pmet
        USING l_pmes.pmes002,l_pmes.pmes003
         INTO l_cnt
      IF l_cnt >= 1 THEN
         #此要貨組織%1+要貨部門%2已經存在要貨組織預設要貨資料中！
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "apm-00861"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = l_pmes.pmes002
         LET g_errparam.replace[2] = l_pmes.pmes003
         CALL cl_err()
         CONTINUE FOREACH
      END IF
      
      #新增要貨預設資料單頭檔
      INITIALIZE l_pmet.* TO NULL
      LET l_pmet.pmetent   = g_enterprise      #企業編號
      LET l_pmet.pmetsite  = l_pmes.pmes002    #營運據點
      LET l_pmet.pmetunit  = l_pmes.pmesunit   #應用組織
      LET l_pmet.pmet001   = l_pmes.pmes003    #要貨部門
      LET l_pmet.pmet002   = l_pmes.pmes001    #要貨模板編號
      LET l_pmet.pmetownid = g_user            #資料所有者
      LET l_pmet.pmetowndp = g_dept            #資料所屬部門
      LET l_pmet.pmetcrtid = g_user            #資料建立者
      LET l_pmet.pmetcrtdp = g_dept            #資料建立部門
      LET l_pmet.pmetcrtdt = cl_get_current()  #資料創建日
      LET l_pmet.pmetstus  = 'Y'               #狀態碼
      
      INSERT INTO pmet_t(pmetent,   pmetsite,  pmetunit,
                         pmet001,   pmet002,   pmetownid,
                         pmetowndp, pmetcrtid, pmetcrtdp,
                         pmetcrtdt, pmetmodid, pmetmoddt,
                         pmetstus)
         VALUES(l_pmet.pmetent,   l_pmet.pmetsite,  l_pmet.pmetunit,
                l_pmet.pmet001,   l_pmet.pmet002,   l_pmet.pmetownid,
                l_pmet.pmetowndp, l_pmet.pmetcrtid, l_pmet.pmetcrtdp,
                l_pmet.pmetcrtdt, l_pmet.pmetmodid, l_pmet.pmetmoddt,
                l_pmet.pmetstus)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "Ins pmet_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #新增要貨預設資料單身
      EXECUTE apmi820_ins_pmeu
        USING l_pmes.pmes002,l_pmes.pmes003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "Ins pmeu_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      IF SQLCA.sqlerrd[3] >= 1 THEN
         LET l_ins_cnt = l_ins_cnt + 1
      END IF
   END FOREACH
   
   #新增數量!=0，表示真的有新增資料
   IF l_ins_cnt >= 1 THEN
      #資料更新成功
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00033'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
   
   RETURN r_success
   
END FUNCTION]]>
  </point>
  <point name="function.apmi820_upd_pre" order="9" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.apmi820_upd_apmi821" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 依模版引用範圍+門店清單更新要貨組織預設要貨資料
# Memo...........:
# Usage..........: CALL apmi820_upd_apmi821()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/03/31 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION apmi820_upd_apmi821()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_upd_cnt         LIKE type_t.num5
DEFINE l_pmes            RECORD
       pmesunit          LIKE pmes_t.pmesunit,    #制定組織
       pmes001           LIKE pmes_t.pmes001,     #要貨模板
       pmes002           LIKE pmes_t.pmes002,     #要貨組織
       pmes003           LIKE pmes_t.pmes003      #要貨部門
                         END RECORD
DEFINE l_pmet            RECORD      #要貨組織預設要貨資料
       pmetent           LIKE pmet_t.pmetent,     #企業編號
       pmetsite          LIKE pmet_t.pmetsite,    #營運據點
       pmetunit          LIKE pmet_t.pmetunit,    #應用組織
       pmet001           LIKE pmet_t.pmet001,     #要貨部門
       pmet002           LIKE pmet_t.pmet002,     #要貨模板編號
       pmetownid         LIKE pmet_t.pmetownid,   #資料所有者
       pmetowndp         LIKE pmet_t.pmetowndp,   #資料所屬部門
       pmetcrtid         LIKE pmet_t.pmetcrtid,   #資料建立者
       pmetcrtdp         LIKE pmet_t.pmetcrtdp,   #資料建立部門
       pmetcrtdt         LIKE pmet_t.pmetcrtdt,   #資料創建日
       pmetmodid         LIKE pmet_t.pmetmodid,   #資料修改者
       pmetmoddt         LIKE pmet_t.pmetmoddt,   #最近修改日
       pmetstus          LIKE pmet_t.pmetstus     #狀態碼
                         END RECORD
DEFINE l_pmer            RECORD      #要貨模板 要貨明細
       pmerent           LIKE pmer_t.pmerent,     #企業編號
       pmerunit          LIKE pmer_t.pmerunit,    #應用組織
       pmer001           LIKE pmer_t.pmer001,     #要貨模板編號
       pmerseq           LIKE pmer_t.pmerseq,     #項次
       pmer002           LIKE pmer_t.pmer002,     #商品條碼
       pmer003           LIKE pmer_t.pmer003,     #商品編號
       pmer004           LIKE pmer_t.pmer004,     #要貨包裝單位
       pmer005           LIKE pmer_t.pmer005,     #要貨包裝數量
       pmer006           LIKE pmer_t.pmer006,     #要貨單位
       pmer007           LIKE pmer_t.pmer007,     #要貨數量
       pmerstus          LIKE pmer_t.pmerstus     #狀態碼
                         END RECORD
DEFINE l_pmeu            RECORD
       pmeuent           LIKE pmeu_t.pmeuent,     #企業編號
       pmeusite          LIKE pmeu_t.pmeusite,    #營運據點
       pmeuunit          LIKE pmeu_t.pmeuunit,    #制定組織
       pmeuseq           LIKE pmeu_t.pmeuseq,     #項次
       pmeu001           LIKE pmeu_t.pmeu001,     #要貨部門
       pmeu002           LIKE pmeu_t.pmeu002,     #商品條碼
       pmeu003           LIKE pmeu_t.pmeu003,     #商品編號
       pmeu004           LIKE pmeu_t.pmeu004,     #要貨包裝單位
       pmeu005           LIKE pmeu_t.pmeu005,     #要貨包裝數量
       pmeu006           LIKE pmeu_t.pmeu006,     #要貨單位
       pmeu007           LIKE pmeu_t.pmeu007,     #要貨數量
       pmeustus          LIKE pmeu_t.pmeustus     #狀態碼
                         END RECORD
                         
   LET r_success = TRUE
   LET l_upd_cnt = 0
   
   CALL apmi820_gen_pre(0)
   
   FOREACH apmi820_pmes_cs
      INTO l_pmes.pmesunit,l_pmes.pmes001,l_pmes.pmes002,l_pmes.pmes003
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "Foreach apmi820_pmes_cs"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #是否已經存在要貨預設單頭
      LET l_cnt = 0
      EXECUTE apmi820_count_pmet
        USING l_pmes.pmes002,l_pmes.pmes003
         INTO l_cnt
       
      #不存在
      #  新增要貨預設資料單頭
      IF l_cnt = 0 THEN
         #新增要貨預設資料單頭檔
         INITIALIZE l_pmet.* TO NULL
         LET l_pmet.pmetent   = g_enterprise      #企業編號
         LET l_pmet.pmetsite  = l_pmes.pmes002    #營運據點
         LET l_pmet.pmetunit  = l_pmes.pmesunit   #應用組織
         LET l_pmet.pmet001   = l_pmes.pmes003    #要貨部門
         LET l_pmet.pmet002   = l_pmes.pmes001    #要貨模板編號
         LET l_pmet.pmetownid = g_user            #資料所有者
         LET l_pmet.pmetowndp = g_dept            #資料所屬部門
         LET l_pmet.pmetcrtid = g_user            #資料建立者
         LET l_pmet.pmetcrtdp = g_dept            #資料建立部門
         LET l_pmet.pmetcrtdt = cl_get_current()  #資料創建日
         LET l_pmet.pmetstus  = 'Y'               #狀態碼
         
         INSERT INTO pmet_t(pmetent,   pmetsite,  pmetunit,
                            pmet001,   pmet002,   pmetownid,
                            pmetowndp, pmetcrtid, pmetcrtdp,
                            pmetcrtdt, pmetmodid, pmetmoddt,
                            pmetstus)
            VALUES(l_pmet.pmetent,   l_pmet.pmetsite,  l_pmet.pmetunit,
                   l_pmet.pmet001,   l_pmet.pmet002,   l_pmet.pmetownid,
                   l_pmet.pmetowndp, l_pmet.pmetcrtid, l_pmet.pmetcrtdp,
                   l_pmet.pmetcrtdt, l_pmet.pmetmodid, l_pmet.pmetmoddt,
                   l_pmet.pmetstus)
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "Ins pmet_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      #撈取要貨模板要貨明細 且 存在門店清單中(有效)
      FOREACH apmi820_pmer_cs USING l_pmes.pmes002
         INTO l_pmer.pmerent, l_pmer.pmerunit, l_pmer.pmer001,
              l_pmer.pmerseq, l_pmer.pmer002,  l_pmer.pmer003,
              l_pmer.pmer004, l_pmer.pmer005,  l_pmer.pmer006,
              l_pmer.pmer007, l_pmer.pmerstus
          
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "Foreach apmi820_pmer_cs"
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF
         
         #是否已存在要貨預設單身
         LET l_cnt = 0
         EXECUTE apmi820_count_pmeu
           USING l_pmes.pmes002, l_pmes.pmes003, l_pmer.pmer002, l_pmer.pmer003
            INTO l_cnt
         
         #不存在
         #  新增資料
         # 存在
         #  更新資料
         IF l_cnt = 0 THEN
            LET l_pmeu.pmeuent  = g_enterprise       #企業編號
            LET l_pmeu.pmeusite = l_pmes.pmes002     #營運據點
            LET l_pmeu.pmeuunit = l_pmes.pmesunit    #制定組織
            
            #項次
            EXECUTE apmi820_pmeuseq USING l_pmes.pmes002, l_pmes.pmes003
               INTO l_pmeu.pmeuseq
               
            LET l_pmeu.pmeu001  = l_pmes.pmes003     #要貨部門
            LET l_pmeu.pmeu002  = l_pmer.pmer002     #商品條碼
            LET l_pmeu.pmeu003  = l_pmer.pmer003     #商品編號
            LET l_pmeu.pmeu004  = l_pmer.pmer004     #要貨包裝單位
            LET l_pmeu.pmeu005  = l_pmer.pmer005     #要貨包裝數量
            LET l_pmeu.pmeu006  = l_pmer.pmer006     #要貨單位
            LET l_pmeu.pmeu007  = l_pmer.pmer007     #要貨數量
            LET l_pmeu.pmeustus = l_pmer.pmerstus    #狀態碼
            
            INSERT INTO pmeu_t(pmeuent, pmeusite, pmeuunit, pmeuseq,
                               pmeu001, pmeu002,  pmeu003,  pmeu004,
                               pmeu005, pmeu006,  pmeu007,  pmeustus)
               VALUES(l_pmeu.pmeuent, l_pmeu.pmeusite, l_pmeu.pmeuunit, l_pmeu.pmeuseq,
                      l_pmeu.pmeu001, l_pmeu.pmeu002,  l_pmeu.pmeu003,  l_pmeu.pmeu004,
                      l_pmeu.pmeu005, l_pmeu.pmeu006,  l_pmeu.pmeu007,  l_pmeu.pmeustus)
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "Ins pmeu_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET r_success = FALSE
               RETURN r_success
            END IF
            
            LET l_upd_cnt = l_upd_cnt + 1
         ELSE
            UPDATE pmeu_t
               SET pmeu004  = l_pmeu.pmeu004,     #要貨包裝單位
                   pmeu005  = l_pmeu.pmeu005,     #要貨包裝數量
                   pmeu006  = l_pmeu.pmeu006,     #要貨單位
                   pmeu007  = l_pmeu.pmeu007,     #要貨數量
                   pmeustus = l_pmeu.pmeustus     #狀態碼
             WHERE pmeuent = l_pmeu.pmeuent       #企業編號
               AND pmeusite = l_pmeu.pmeusite     #營運據點
               AND pmeu001  = l_pmeu.pmeu001      #要貨部門
               AND pmeu002  = l_pmeu.pmeu002      #商品條碼
               AND pmeu003  = l_pmeu.pmeu003      #商品編號            
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "Upd pmeu_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
               LET r_success = FALSE
               RETURN r_success
            END IF
            
            LET l_upd_cnt = l_upd_cnt + 1
         END IF
         INITIALIZE l_pmer.* TO NULL
      END FOREACH
      
      INITIALIZE l_pmes.* TO NULL
   END FOREACH
   
   #異動數量!=0，表示真的有異動資料
   IF l_upd_cnt >= 1 THEN
      #資料更新成功
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00033'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="construct.c.page1.pmer002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmer002  #顯示到畫面上
            NEXT FIELD pmer002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.pmer003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmer003  #顯示到畫面上
            NEXT FIELD pmer003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.pmer004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmer004  #顯示到畫面上
            NEXT FIELD pmer004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.pmer006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmer006  #顯示到畫面上
            NEXT FIELD pmer006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.pmes002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef210 = 'Y'"
            CALL q_ooef001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmes002  #顯示到畫面上
            NEXT FIELD pmes002                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.pmes003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef203 = 'Y'"
            CALL q_ooef001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmes003  #顯示到畫面上
            NEXT FIELD pmes003                     #返回原欄位]]>
  </point>
  <point name="construct.c.pmeq001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmeq001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmeq001  #顯示到畫面上
            NEXT FIELD pmeq001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.pmeq002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_rtaa001_4()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmeq002  #顯示到畫面上
            NEXT FIELD pmeq002                     #返回原欄位]]>
  </point>
  <point name="construct.c.pmequnit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmequnit',g_site,'c')
            CALL q_ooef001_24()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmequnit  #顯示到畫面上
            NEXT FIELD pmequnit                     #返回原欄位]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success         LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_create_temp() RETURNING l_success]]>
  </point>
  <point name="input.a.page1.pmer002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmer_d[l_ac].pmer002) THEN
               IF g_pmer_d[l_ac].pmer002 != g_pmer_d_o.pmer002 OR cl_null(g_pmer_d_o.pmer002) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_pmer_d[l_ac].pmer002
                  IF cl_chk_exist("v_imay003_1") THEN
                     CALL apmi820_get_imay001()
                     IF apmi820_pmer003_chk(g_pmer_d[l_ac].pmer003) THEN
                        CALL apmi820_pmer003_default('1')
                     ELSE
                        LET g_pmer_d[l_ac].pmer002 = g_pmer_d_o.pmer002
                        LET g_pmer_d[l_ac].pmer003 = g_pmer_d_o.pmer003
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     LET g_pmer_d[l_ac].pmer002 = g_pmer_d_o.pmer002
                     LET g_pmer_d[l_ac].pmer003 = g_pmer_d_o.pmer003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_pmer_d_o.pmer002 = g_pmer_d[l_ac].pmer002
            LET g_pmer_d_o.pmer003 = g_pmer_d[l_ac].pmer003]]>
  </point>
  <point name="input.a.page1.pmer003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmer_d[l_ac].pmer003) THEN 
               IF g_pmer_d[l_ac].pmer003 != g_pmer_d_o.pmer003 OR cl_null(g_pmer_d_o.pmer003) THEN
                  IF apmi820_pmer003_chk(g_pmer_d[l_ac].pmer003) THEN
                     CALL apmi820_pmer003_default('2')
                  ELSE
                     LET g_pmer_d[l_ac].pmer003 = g_pmer_d_o.pmer003
                     CALL s_desc_get_item_desc(g_pmer_d[l_ac].pmer003)
                        RETURNING g_pmer_d[l_ac].pmer003_desc,g_pmer_d[l_ac].pmer003_desc_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_item_desc(g_pmer_d[l_ac].pmer003)
               RETURNING g_pmer_d[l_ac].pmer003_desc,g_pmer_d[l_ac].pmer003_desc_desc]]>
  </point>
  <point name="input.a.page1.pmer004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_pmer_d[l_ac].pmer004_desc = ''
            DISPLAY BY NAME g_pmer_d[l_ac].pmer004_desc
            IF NOT cl_null(g_pmer_d[l_ac].pmer004) THEN
               IF g_pmer_d[l_ac].pmer004 != g_pmer_d_o.pmer004 OR cl_null(g_pmer_d_o.pmer004) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_pmer_d[l_ac].pmer003
                  LET g_chkparam.arg2 = g_pmer_d[l_ac].pmer004
                  IF cl_chk_exist("v_imao002") THEN
                     CALL apmi820_num_change()
                  ELSE
                     LET g_pmer_d[l_ac].pmer004 = g_pmer_d_o.pmer004
                     CALL s_desc_get_unit_desc(g_pmer_d[l_ac].pmer004) RETURNING g_pmer_d[l_ac].pmer004_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_pmer_d_o.pmer004 = g_pmer_d[l_ac].pmer004
            CALL s_desc_get_unit_desc(g_pmer_d[l_ac].pmer004) RETURNING g_pmer_d[l_ac].pmer004_desc]]>
  </point>
  <point name="input.a.page1.pmer005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_pmer_d[l_ac].pmer005) THEN
               IF g_pmer_d[l_ac].pmer005 != g_pmer_d_o.pmer005 OR cl_null(g_pmer_d_o.pmer005) THEN
                  CALL apmi820_num_change()
               END IF
            END IF
            LET g_pmer_d_o.pmer005 = g_pmer_d[l_ac].pmer005]]>
  </point>
  <point name="input.a.page1.pmer006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmer_d[l_ac].pmer006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmer_d[l_ac].pmer006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmer_d[l_ac].pmer006_desc

]]>
  </point>
  <point name="input.a.page1.pmerseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_pmeq_m.pmeq001 IS NOT NULL AND g_pmer_d[g_detail_idx].pmerseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmeq_m.pmeq001 != g_pmeq001_t OR g_pmer_d[g_detail_idx].pmerseq != g_pmer_d_t.pmerseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmer_t WHERE "||"pmerent = '" ||g_enterprise|| "' AND "||"pmer001 = '"||g_pmeq_m.pmeq001 ||"' AND "|| "pmerseq = '"||g_pmer_d[g_detail_idx].pmerseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.pmes002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_pmeq_m.pmeq001 IS NOT NULL AND g_pmer2_d[g_detail_idx].pmes002 IS NOT NULL AND g_pmer2_d[g_detail_idx].pmes003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmeq_m.pmeq001 != g_pmeq001_t OR g_pmer2_d[g_detail_idx].pmes002 != g_pmer2_d_t.pmes002 OR g_pmer2_d[g_detail_idx].pmes003 != g_pmer2_d_t.pmes003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmes_t WHERE "||"pmesent = '" ||g_enterprise|| "' AND "||"pmes001 = '"||g_pmeq_m.pmeq001 ||"' AND "|| "pmes002 = '"||g_pmer2_d[g_detail_idx].pmes002 ||"' AND "|| "pmes003 = '"||g_pmer2_d[g_detail_idx].pmes003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_pmer2_d[l_ac].pmes002_desc = ''
            DISPLAY BY NAME g_pmer2_d[l_ac].pmes002_desc
            IF NOT cl_null(g_pmer2_d[l_ac].pmes002) THEN 
               IF g_pmer2_d[l_ac].pmes002 != g_pmer2_d_o.pmes002 OR cl_null(g_pmer2_d_o.pmes002) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_pmer2_d[l_ac].pmes002
                  IF NOT cl_chk_exist("v_ooef001_29") THEN
                     LET g_pmer2_d[l_ac].pmes002 = g_pmer2_d_o.pmes002
                     CALL s_desc_get_ooefl006_desc(g_pmer2_d[l_ac].pmes002)
                        RETURNING g_pmer2_d[l_ac].pmes002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            LET g_pmer2_d_o.pmes002 = g_pmer2_d[l_ac].pmes002
            CALL s_desc_get_ooefl006_desc(g_pmer2_d[l_ac].pmes002)
               RETURNING g_pmer2_d[l_ac].pmes002_desc]]>
  </point>
  <point name="input.a.page2.pmes003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_pmer2_d[l_ac].pmes003) THEN
               LET g_pmer2_d[l_ac].pmes003 = ' '
            END IF
            IF g_pmeq_m.pmeq001 IS NOT NULL AND g_pmer2_d[g_detail_idx].pmes002 IS NOT NULL AND g_pmer2_d[g_detail_idx].pmes003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmeq_m.pmeq001 != g_pmeq001_t OR g_pmer2_d[g_detail_idx].pmes002 != g_pmer2_d_t.pmes002 OR g_pmer2_d[g_detail_idx].pmes003 != g_pmer2_d_t.pmes003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmes_t WHERE "||"pmesent = '" ||g_enterprise|| "' AND "||"pmes001 = '"||g_pmeq_m.pmeq001 ||"' AND "|| "pmes002 = '"||g_pmer2_d[g_detail_idx].pmes002 ||"' AND "|| "pmes003 = '"||g_pmer2_d[g_detail_idx].pmes003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_pmer2_d[l_ac].pmes003_desc = ''
            DISPLAY BY NAME g_pmer2_d[l_ac].pmes003_desc
            IF NOT cl_null(g_pmer2_d[l_ac].pmes003) THEN
               IF g_pmer2_d[l_ac].pmes003 != g_pmer2_d_o.pmes003 OR cl_null(g_pmer2_d_o.pmes003) THEN
                  LET g_chkparam.arg1 = g_pmer2_d[l_ac].pmes003
                  IF NOT cl_chk_exist("v_ooef001_14") THEN
                     LET g_pmer2_d[l_ac].pmes003 = g_pmer2_d_o.pmes003
                     CALL s_desc_get_ooefl006_desc(g_pmer2_d[l_ac].pmes003)
                        RETURNING g_pmer2_d[l_ac].pmes003_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_pmer2_d_o.pmes003 = g_pmer2_d[l_ac].pmes003
            CALL s_desc_get_ooefl006_desc(g_pmer2_d[l_ac].pmes003)
               RETURNING g_pmer2_d[l_ac].pmes003_desc]]>
  </point>
  <point name="input.a.pmeq001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_pmeq_m.pmeq001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmeq_m.pmeq001 != g_pmeq001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmeq_t WHERE "||"pmeqent = '" ||g_enterprise|| "' AND "||"pmeq001 = '"||g_pmeq_m.pmeq001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.pmeq002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            

]]>
  </point>
  <point name="input.a.pmequnit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_pmeq_m.pmequnit_desc = ' '
            DISPLAY BY NAME g_pmeq_m.pmequnit_desc
            IF NOT cl_null(g_pmeq_m.pmequnit) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_pmeq_m.pmequnit != g_pmeq_m_t.pmequnit OR g_pmeq_m_t.pmequnit IS NULL )) THEN
                  LET l_success = ''
                  LET l_errno = ''
                  CALL s_aooi500_chk(g_prog,'pmequnit',g_pmeq_m.pmequnit,g_site)
                     RETURNING l_success,l_errno
                  IF l_success = FALSE THEN
                     LET g_pmeq_m.pmequnit = g_pmeq_m_t.pmequnit
                     CALL s_desc_get_department_desc(g_pmeq_m.pmequnit)
                        RETURNING g_pmeq_m.pmequnit_desc
                     DISPLAY BY NAME g_pmeq_m.pmequnit_desc
                  END IF
               END IF
            END IF
            CALL s_desc_get_department_desc(g_pmeq_m.pmequnit)
               RETURNING g_pmeq_m.pmequnit_desc
            DISPLAY BY NAME g_pmeq_m.pmequnit_desc]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #項次
            SELECT COALESCE(MAX(pmerseq),0)+1
              INTO g_pmer_d[l_ac].pmerseq
              FROM pmer_t
             WHERE pmerent = g_enterprise
               AND pmer001 = g_pmeq_m.pmeq001

            #制定組織
            LET g_pmer_d[l_ac].pmerunit = g_pmeq_m.pmequnit]]>
  </point>
  <point name="input.body2.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #確保要貨部門沒有值的時候是一個空白
            IF cl_null(g_pmer2_d[l_ac].pmes003) THEN
               LET g_pmer2_d[l_ac].pmes003 = ' '
            END IF]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_cnt = 0
            SELECT COUNT(*) INTO l_cnt
              FROM pmes_t
             WHERE pmesent = g_enterprise
               AND pmes001 = g_pmeq_m.pmeq001
            IF l_cnt = 0 AND NOT cl_null(g_pmeq_m.pmeq002) AND l_auto_detail = 'Y' THEN
               CALL s_transaction_end('Y','0')
               CALL s_transaction_begin()
               #是否依據單頭引用店群，自動產生單身引用要貨組織範圍?
               IF cl_ask_confirm('apm-00852') THEN
                  LET l_success = ''
                  CALL apmi820_gen_detail() RETURNING l_success
               END IF
               IF l_success THEN
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL s_transaction_end('N','0')
               END IF
               CALL apmi820_b_fill()
               LET l_auto_detail = 'Y'
            END IF]]>
  </point>
  <point name="input.c.page1.pmer002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmer_d[l_ac].pmer002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_imay003_2()                                #呼叫開窗

            LET g_pmer_d[l_ac].pmer002 = g_qryparam.return1              

            DISPLAY g_pmer_d[l_ac].pmer002 TO pmer002              #

            NEXT FIELD pmer002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmer003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmer_d[l_ac].pmer003             #給予default值
            LET g_qryparam.default2 = "" #g_pmer_d[l_ac].imaal003 #品名
            LET g_qryparam.default3 = "" #g_pmer_d[l_ac].imaal004 #規格
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_imaa001()                                #呼叫開窗

            LET g_pmer_d[l_ac].pmer003 = g_qryparam.return1              
            #LET g_pmer_d[l_ac].imaal003 = g_qryparam.return2 
            #LET g_pmer_d[l_ac].imaal004 = g_qryparam.return3 
            DISPLAY g_pmer_d[l_ac].pmer003 TO pmer003              #
            #DISPLAY g_pmer_d[l_ac].imaal003 TO imaal003 #品名
            #DISPLAY g_pmer_d[l_ac].imaal004 TO imaal004 #規格
            NEXT FIELD pmer003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.pmer004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmer_d[l_ac].pmer004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_imao002()                                #呼叫開窗

            LET g_pmer_d[l_ac].pmer004 = g_qryparam.return1              

            DISPLAY g_pmer_d[l_ac].pmer004 TO pmer004              #

            NEXT FIELD pmer004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.pmes002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmer2_d[l_ac].pmes002
            
            LET g_qryparam.where = " ooef210 = 'Y'"
            CALL q_ooef001()
            LET g_pmer2_d[l_ac].pmes002 = g_qryparam.return1
            DISPLAY g_pmer2_d[l_ac].pmes002 TO pmes002
            CALL s_desc_get_ooefl006_desc(g_pmer2_d[l_ac].pmes002)
               RETURNING g_pmer2_d[l_ac].pmes002_desc
            NEXT FIELD pmes002]]>
  </point>
  <point name="input.c.page2.pmes003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmer2_d[l_ac].pmes003
            
            LET g_qryparam.where = " ooef203 = 'Y'"
            CALL q_ooef001()
            LET g_pmer2_d[l_ac].pmes003 = g_qryparam.return1
            DISPLAY g_pmer2_d[l_ac].pmes003 TO pmes003
            CALL s_desc_get_ooefl006_desc(g_pmer2_d[l_ac].pmes003)
               RETURNING g_pmer2_d[l_ac].pmes003_desc
            NEXT FIELD pmes003]]>
  </point>
  <point name="input.c.pmeq002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmeq_m.pmeq002
            
            #給予arg
            LET g_qryparam.arg1 = "2"
            CALL q_rtaa001_4()
            LET g_pmeq_m.pmeq002 = g_qryparam.return1
            DISPLAY g_pmeq_m.pmeq002 TO pmeq002
            CALL apmi820_pmeq002_ref()
            NEXT FIELD pmeq002]]>
  </point>
  <point name="input.c.pmequnit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_pmeq_m.pmequnit
            
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmequnit',g_site,'i')
            CALL q_ooef001_24()
            LET g_pmeq_m.pmequnit = g_qryparam.return1
            DISPLAY g_pmeq_m.pmequnit TO pmequnit
            CALL s_desc_get_department_desc(g_pmeq_m.pmequnit)
               RETURNING g_pmeq_m.pmequnit_desc
            DISPLAY BY NAME g_pmeq_m.pmequnit_desc
            NEXT FIELD pmequnit]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   DEFINE  l_auto_detail         LIKE type_t.chr1]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_auto_detail = 'Y']]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_cnt = 0
               SELECT COUNT(pmesseq) INTO l_cnt
                 FROM pmes_t
                WHERE pmesent = g_enterprise
                  AND pmes001 = g_pmeq_m.pmeq001
               IF l_cnt = 0 AND NOT cl_null(g_pmeq_m.pmeq002) THEN
                  CALL s_transaction_end('Y','0')
                  CALL s_transaction_begin()
                  #是否依據單頭引用店群，自動產生單身引用要貨組織範圍?
                  IF cl_ask_confirm('apm-00852') THEN
                     LET l_success = ''
                     CALL apmi820_gen_detail() RETURNING l_success
                  ELSE
                     LET l_auto_detail = 'N'
                  END IF
                  IF l_success THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
                  CALL apmi820_b_fill()
               END IF]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_pmeq_m.pmeq001)  THEN
                  CALL n_pmeql(g_pmeq_m.pmeq001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_pmeq_m.pmeq001
                  CALL ap_ref_array2(g_ref_fields," SELECT pmeql003,pmeql004 FROM pmeql_t WHERE pmeqlent = '"
                      ||g_enterprise||"' AND pmeql001 = ? AND pmeql002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_pmeq_m.pmeql003 = g_rtn_fields[1]
                  LET g_pmeq_m.pmeql004 = g_rtn_fields[2]

                  DISPLAY BY NAME g_pmeq_m.pmeql003
                  DISPLAY BY NAME g_pmeq_m.pmeql004
               END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_pmeq_m.pmequnit = g_site
      CALL s_desc_get_department_desc(g_pmeq_m.pmequnit) RETURNING g_pmeq_m.pmequnit_desc
      DISPLAY BY NAME g_pmeq_m.pmequnit_desc]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success         LIKE type_t.num5]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success]]>
  </point>
  <point name="menu.gen_apmi821" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_confirm = 0
               #是否刪除此引用此模板要貨組織資料(Y/N)?
               IF cl_ask_confirm('apm-00860') THEN
                  LET l_confirm = 1
               ELSE
                  LET l_confirm = 2
               END IF
               
               CALL cl_err_collect_init()
               CALL s_transaction_begin()
               #依模版引用範圍+門店清單產生要貨組織預設要貨資料
               IF apmi820_gen_apmi821(l_confirm) THEN
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL s_transaction_end('N','0')
               END IF
               CALL cl_err_collect_show()]]>
  </point>
  <point name="menu.upd_apmi821" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_err_collect_init()
               CALL s_transaction_begin()
               #依模版引用範圍+門店清單更新要貨組織預設要貨資料
               IF apmi820_upd_apmi821() THEN
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL s_transaction_end('N','0')
               END IF
               CALL cl_err_collect_show()]]>
  </point>
  <point name="set_act_no_visible.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_pmer_cnt     LIKE type_t.num5      #要貨資料單身
   DEFINE l_pmes_cnt     LIKE type_t.num5      #引用門店資料單身]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #要貨資料單身有效筆數
   LET l_pmer_cnt = 0
   SELECT COUNT(pmerseq) INTO l_pmer_cnt
     FROM pmer_t
    WHERE pmerent = g_enterprise
      AND pmer001 = g_pmeq_m.pmeq001
      AND pmerstus = 'Y'
   
   #引用門店資料單身有效筆數
   LET l_pmes_cnt = 0
   SELECT COUNT(*) INTO l_pmes_cnt
     FROM pmes_t
    WHERE pmesent = g_enterprise
      AND pmes001 = g_pmeq_m.pmeq001
      AND pmesstus = 'Y'
      
   #單據狀態 = 'N' OR 單身筆數 = 0
   IF g_pmeq_m.pmeqstus = 'N' OR l_pmer_cnt = 0 OR l_pmes_cnt = 0 THEN
      CALL cl_set_act_visible("gen_apmi821",FALSE)   #依模板引用範圍批次產生預設資料
      CALL cl_set_act_visible("upd_apmi821",FALSE)   #更新要貨組織預設資料
   END IF]]>
  </point>
  <point name="set_act_visible.set_act_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("gen_apmi821",TRUE)   #依模板引用範圍批次產生預設資料
   CALL cl_set_act_visible("upd_apmi821",TRUE)   #更新要貨組織預設資料]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmeq_m.pmeq001
   CALL ap_ref_array2(g_ref_fields," SELECT pmeql003,pmeql004 FROM pmeql_t WHERE pmeqlent = '"||g_enterprise||"' AND pmeql001 = ? AND pmeql002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_pmeq_m.pmeql003 = g_rtn_fields[1] 
   LET g_pmeq_m.pmeql004 = g_rtn_fields[2] 
   DISPLAY g_pmeq_m.pmeql003,g_pmeq_m.pmeql004 TO pmeql003,pmeql004]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_confirm LIKE type_t.num5]]>
  </point>
  <section id="apmi820.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION apmi820_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.b_fill" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apmi820_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_pmer_d.clear()    #g_pmer_d 單頭及單身 
   CALL g_pmer2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF apmi820_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE pmerstus,pmerseq,pmer002,pmer003,pmer004,pmer005,pmer006,pmer007, 
             pmerunit ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 ,t4.oocal003 FROM pmer_t",   
                     " INNER JOIN pmeq_t ON pmeq001 = pmer001 ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=pmer003 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=pmer003 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=pmer004 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=pmer006 AND t4.oocal002='"||g_dlang||"' ",
 
                     " WHERE pmerent=? AND pmer001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmer_t.pmerseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmi820_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR apmi820_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_pmeq_m.pmeq001
                                               
      FOREACH b_fill_cs INTO g_pmer_d[l_ac].pmerstus,g_pmer_d[l_ac].pmerseq,g_pmer_d[l_ac].pmer002,g_pmer_d[l_ac].pmer003, 
          g_pmer_d[l_ac].pmer004,g_pmer_d[l_ac].pmer005,g_pmer_d[l_ac].pmer006,g_pmer_d[l_ac].pmer007, 
          g_pmer_d[l_ac].pmerunit,g_pmer_d[l_ac].pmer003_desc,g_pmer_d[l_ac].pmer003_desc_desc,g_pmer_d[l_ac].pmer004_desc, 
          g_pmer_d[l_ac].pmer006_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF apmi820_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE pmesstus,pmes002,pmes003,pmesunit ,t5.ooefl003 ,t6.ooefl003 FROM pmes_t", 
                
                     " INNER JOIN pmeq_t ON pmeq001 = pmes001 ",
 
                     "",
                     
                                    " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=pmes002 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=pmes003 AND t6.ooefl002='"||g_dlang||"' ",
 
                     " WHERE pmesent=? AND pmes001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmes_t.pmes002,pmes_t.pmes003"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmi820_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR apmi820_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_pmeq_m.pmeq001
                                               
      FOREACH b_fill_cs2 INTO g_pmer2_d[l_ac].pmesstus,g_pmer2_d[l_ac].pmes002,g_pmer2_d[l_ac].pmes003, 
          g_pmer2_d[l_ac].pmesunit,g_pmer2_d[l_ac].pmes002_desc,g_pmer2_d[l_ac].pmes003_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_pmer_d.deleteElement(g_pmer_d.getLength())
   CALL g_pmer2_d.deleteElement(g_pmer2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apmi820_pb
   FREE apmi820_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_pmer_d.getLength()
      LET g_pmer_d_mask_o[l_ac].* =  g_pmer_d[l_ac].*
      CALL apmi820_pmer_t_mask()
      LET g_pmer_d_mask_n[l_ac].* =  g_pmer_d[l_ac].*
   END FOR
   
   LET g_pmer2_d_mask_o.* =  g_pmer2_d.*
   FOR l_ac = 1 TO g_pmer2_d.getLength()
      LET g_pmer2_d_mask_o[l_ac].* =  g_pmer2_d[l_ac].*
      CALL apmi820_pmes_t_mask()
      LET g_pmer2_d_mask_n[l_ac].* =  g_pmer2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.b_fill2" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apmi820_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apmi820_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.browser_fill" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apmi820_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE pmeq001 ",
                      " FROM pmeq_t ",
                      " ",
                      " LEFT JOIN pmer_t ON pmerent = pmeqent AND pmeq001 = pmer001 ", "  ",
                      #add-point:browser_fill段sql(pmer_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN pmes_t ON pmesent = pmeqent AND pmeq001 = pmes001", "  ",
                      #add-point:browser_fill段sql(pmes_t1)
                      {<point name="browser_fill.cnt.join.pmes_t1"/>}
                      #end add-point
 
 
 
                      " LEFT JOIN pmeql_t ON pmeqlent = '"||g_enterprise||"' AND pmeq001 = pmeql001 AND pmeql002 = '",g_dlang,"' ", 
                      " ", 
                      " WHERE pmeqent = '" ||g_enterprise|| "' AND pmerent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("pmeq_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE pmeq001 ",
                      " FROM pmeq_t ", 
                      "  ",
                      "  LEFT JOIN pmeql_t ON pmeqlent = '"||g_enterprise||"' AND pmeq001 = pmeql001 AND pmeql002 = '",g_dlang,"' ",
                      " WHERE pmeqent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("pmeq_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_pmeq_m.* TO NULL
      CALL g_pmer_d.clear()        
      CALL g_pmer2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.pmeq001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.pmeqstus,t0.pmeq001 ",
               " FROM pmeq_t t0",
               "  ",
               "  LEFT JOIN pmer_t ON pmerent = pmeqent AND pmeq001 = pmer001 ", "  ", 
               #add-point:browser_fill段sql(pmer_t1)
               {<point name="browser_fill.join.pmer_t1"/>}
               #end add-point
               "  LEFT JOIN pmes_t ON pmesent = pmeqent AND pmeq001 = pmes001", "  ", 
               #add-point:browser_fill段sql(pmes_t1)
               {<point name="browser_fill.join.pmes_t1"/>}
               #end add-point
 
 
 
               "  ",
               
               " LEFT JOIN pmeql_t ON pmeqlent = '"||g_enterprise||"' AND pmeq001 = pmeql001 AND pmeql002 = '",g_dlang,"' ",
               " WHERE t0.pmeqent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("pmeq_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY pmeq001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"pmeq_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_pmeq001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_pmeq001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.construct" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apmi820_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_pmeq_m.* TO NULL
   CALL g_pmer_d.clear()        
   CALL g_pmer2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON pmeq001,pmeql003,pmeql004,pmequnit,pmeq002,pmeqstus,pmeqownid,pmeqowndp, 
          pmeqcrtid,pmeqcrtdp,pmeqcrtdt,pmeqmodid,pmeqmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<pmeqcrtdt>>----
         AFTER FIELD pmeqcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<pmeqmoddt>>----
         AFTER FIELD pmeqmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmeqcnfdt>>----
         
         #----<<pmeqpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.pmeq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeq001
            #add-point:ON ACTION controlp INFIELD pmeq001
            {<point name="construct.c.pmeq001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeq001
            #add-point:BEFORE FIELD pmeq001
            {<point name="construct.b.pmeq001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeq001
            
            #add-point:AFTER FIELD pmeq001
            {<point name="construct.a.pmeq001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeql003
            #add-point:BEFORE FIELD pmeql003
            {<point name="construct.b.pmeql003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeql003
            
            #add-point:AFTER FIELD pmeql003
            {<point name="construct.a.pmeql003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeql003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeql003
            #add-point:ON ACTION controlp INFIELD pmeql003
            {<point name="construct.c.pmeql003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeql004
            #add-point:BEFORE FIELD pmeql004
            {<point name="construct.b.pmeql004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeql004
            
            #add-point:AFTER FIELD pmeql004
            {<point name="construct.a.pmeql004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeql004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeql004
            #add-point:ON ACTION controlp INFIELD pmeql004
            {<point name="construct.c.pmeql004" />}
            #END add-point
 
         #Ctrlp:construct.c.pmequnit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmequnit
            #add-point:ON ACTION controlp INFIELD pmequnit
            {<point name="construct.c.pmequnit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmequnit
            #add-point:BEFORE FIELD pmequnit
            {<point name="construct.b.pmequnit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmequnit
            
            #add-point:AFTER FIELD pmequnit
            {<point name="construct.a.pmequnit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeq002
            #add-point:ON ACTION controlp INFIELD pmeq002
            {<point name="construct.c.pmeq002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeq002
            #add-point:BEFORE FIELD pmeq002
            {<point name="construct.b.pmeq002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeq002
            
            #add-point:AFTER FIELD pmeq002
            {<point name="construct.a.pmeq002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqstus
            #add-point:BEFORE FIELD pmeqstus
            {<point name="construct.b.pmeqstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeqstus
            
            #add-point:AFTER FIELD pmeqstus
            {<point name="construct.a.pmeqstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeqstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeqstus
            #add-point:ON ACTION controlp INFIELD pmeqstus
            {<point name="construct.c.pmeqstus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqownid
            #add-point:BEFORE FIELD pmeqownid
            {<point name="construct.b.pmeqownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeqownid
            
            #add-point:AFTER FIELD pmeqownid
            {<point name="construct.a.pmeqownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeqownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeqownid
            #add-point:ON ACTION controlp INFIELD pmeqownid
            {<point name="construct.c.pmeqownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqowndp
            #add-point:BEFORE FIELD pmeqowndp
            {<point name="construct.b.pmeqowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeqowndp
            
            #add-point:AFTER FIELD pmeqowndp
            {<point name="construct.a.pmeqowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeqowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeqowndp
            #add-point:ON ACTION controlp INFIELD pmeqowndp
            {<point name="construct.c.pmeqowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqcrtid
            #add-point:BEFORE FIELD pmeqcrtid
            {<point name="construct.b.pmeqcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeqcrtid
            
            #add-point:AFTER FIELD pmeqcrtid
            {<point name="construct.a.pmeqcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeqcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeqcrtid
            #add-point:ON ACTION controlp INFIELD pmeqcrtid
            {<point name="construct.c.pmeqcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqcrtdp
            #add-point:BEFORE FIELD pmeqcrtdp
            {<point name="construct.b.pmeqcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeqcrtdp
            
            #add-point:AFTER FIELD pmeqcrtdp
            {<point name="construct.a.pmeqcrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeqcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeqcrtdp
            #add-point:ON ACTION controlp INFIELD pmeqcrtdp
            {<point name="construct.c.pmeqcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqcrtdt
            #add-point:BEFORE FIELD pmeqcrtdt
            {<point name="construct.b.pmeqcrtdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqmodid
            #add-point:BEFORE FIELD pmeqmodid
            {<point name="construct.b.pmeqmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeqmodid
            
            #add-point:AFTER FIELD pmeqmodid
            {<point name="construct.a.pmeqmodid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmeqmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeqmodid
            #add-point:ON ACTION controlp INFIELD pmeqmodid
            {<point name="construct.c.pmeqmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqmoddt
            #add-point:BEFORE FIELD pmeqmoddt
            {<point name="construct.b.pmeqmoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON pmerstus,pmerseq,pmer002,pmer003,pmer004,pmer005,pmer006,pmer007,pmerunit 

           FROM s_detail1[1].pmerstus,s_detail1[1].pmerseq,s_detail1[1].pmer002,s_detail1[1].pmer003, 
               s_detail1[1].pmer004,s_detail1[1].pmer005,s_detail1[1].pmer006,s_detail1[1].pmer007,s_detail1[1].pmerunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<pmercrtdt>>----
 
         #----<<pmermoddt>>----
         
         #----<<pmercnfdt>>----
         
         #----<<pmerpstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmerstus
            #add-point:BEFORE FIELD pmerstus
            {<point name="construct.b.page1.pmerstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmerstus
            
            #add-point:AFTER FIELD pmerstus
            {<point name="construct.a.page1.pmerstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmerstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmerstus
            #add-point:ON ACTION controlp INFIELD pmerstus
            {<point name="construct.c.page1.pmerstus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmerseq
            #add-point:BEFORE FIELD pmerseq
            {<point name="construct.b.page1.pmerseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmerseq
            
            #add-point:AFTER FIELD pmerseq
            {<point name="construct.a.page1.pmerseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmerseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmerseq
            #add-point:ON ACTION controlp INFIELD pmerseq
            {<point name="construct.c.page1.pmerseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.pmer002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer002
            #add-point:ON ACTION controlp INFIELD pmer002
            {<point name="construct.c.page1.pmer002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer002
            #add-point:BEFORE FIELD pmer002
            {<point name="construct.b.page1.pmer002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer002
            
            #add-point:AFTER FIELD pmer002
            {<point name="construct.a.page1.pmer002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmer003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer003
            #add-point:ON ACTION controlp INFIELD pmer003
            {<point name="construct.c.page1.pmer003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer003
            #add-point:BEFORE FIELD pmer003
            {<point name="construct.b.page1.pmer003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer003
            
            #add-point:AFTER FIELD pmer003
            {<point name="construct.a.page1.pmer003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmer004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer004
            #add-point:ON ACTION controlp INFIELD pmer004
            {<point name="construct.c.page1.pmer004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer004
            #add-point:BEFORE FIELD pmer004
            {<point name="construct.b.page1.pmer004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer004
            
            #add-point:AFTER FIELD pmer004
            {<point name="construct.a.page1.pmer004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer005
            #add-point:BEFORE FIELD pmer005
            {<point name="construct.b.page1.pmer005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer005
            
            #add-point:AFTER FIELD pmer005
            {<point name="construct.a.page1.pmer005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmer005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer005
            #add-point:ON ACTION controlp INFIELD pmer005
            {<point name="construct.c.page1.pmer005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.pmer006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer006
            #add-point:ON ACTION controlp INFIELD pmer006
            {<point name="construct.c.page1.pmer006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer006
            #add-point:BEFORE FIELD pmer006
            {<point name="construct.b.page1.pmer006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer006
            
            #add-point:AFTER FIELD pmer006
            {<point name="construct.a.page1.pmer006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer007
            #add-point:BEFORE FIELD pmer007
            {<point name="construct.b.page1.pmer007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer007
            
            #add-point:AFTER FIELD pmer007
            {<point name="construct.a.page1.pmer007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmer007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer007
            #add-point:ON ACTION controlp INFIELD pmer007
            {<point name="construct.c.page1.pmer007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmerunit
            #add-point:BEFORE FIELD pmerunit
            {<point name="construct.b.page1.pmerunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmerunit
            
            #add-point:AFTER FIELD pmerunit
            {<point name="construct.a.page1.pmerunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.pmerunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmerunit
            #add-point:ON ACTION controlp INFIELD pmerunit
            {<point name="construct.c.page1.pmerunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON pmesstus,pmes002,pmes003,pmesunit
           FROM s_detail2[1].pmesstus,s_detail2[1].pmes002,s_detail2[1].pmes003,s_detail2[1].pmesunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<pmescrtdt>>----
 
         #----<<pmesmoddt>>----
         
         #----<<pmescnfdt>>----
         
         #----<<pmespstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmesstus
            #add-point:BEFORE FIELD pmesstus
            {<point name="construct.b.page2.pmesstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmesstus
            
            #add-point:AFTER FIELD pmesstus
            {<point name="construct.a.page2.pmesstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmesstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmesstus
            #add-point:ON ACTION controlp INFIELD pmesstus
            {<point name="construct.c.page2.pmesstus" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.pmes002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmes002
            #add-point:ON ACTION controlp INFIELD pmes002
            {<point name="construct.c.page2.pmes002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmes002
            #add-point:BEFORE FIELD pmes002
            {<point name="construct.b.page2.pmes002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmes002
            
            #add-point:AFTER FIELD pmes002
            {<point name="construct.a.page2.pmes002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmes003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmes003
            #add-point:ON ACTION controlp INFIELD pmes003
            {<point name="construct.c.page2.pmes003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmes003
            #add-point:BEFORE FIELD pmes003
            {<point name="construct.b.page2.pmes003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmes003
            
            #add-point:AFTER FIELD pmes003
            {<point name="construct.a.page2.pmes003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmesunit
            #add-point:BEFORE FIELD pmesunit
            {<point name="construct.b.page2.pmesunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmesunit
            
            #add-point:AFTER FIELD pmesunit
            {<point name="construct.a.page2.pmesunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.pmesunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmesunit
            #add-point:ON ACTION controlp INFIELD pmesunit
            {<point name="construct.c.page2.pmesunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.default_search" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apmi820_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pmeq001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.delete" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION apmi820_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_pmeq_m.pmeq001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.pmeql001 = g_pmeq_m.pmeq001
LET g_master_multi_table_t.pmeql003 = g_pmeq_m.pmeql003
LET g_master_multi_table_t.pmeql004 = g_pmeq_m.pmeql004
 
   
   CALL s_transaction_begin()
 
   OPEN apmi820_cl USING g_enterprise,g_pmeq_m.pmeq001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmi820_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmi820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmi820_master_referesh USING g_pmeq_m.pmeq001 INTO g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
       g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt,g_pmeq_m.pmequnit_desc,g_pmeq_m.pmeq002_desc, 
       g_pmeq_m.pmeqownid_desc,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp_desc, 
       g_pmeq_m.pmeqmodid_desc
   
   #檢查是否允許此動作
   IF NOT apmi820_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmeq_m_mask_o.* =  g_pmeq_m.*
   CALL apmi820_pmeq_t_mask()
   LET g_pmeq_m_mask_n.* =  g_pmeq_m.*
   
   CALL apmi820_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL apmi820_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_pmeq001_t = g_pmeq_m.pmeq001
 
 
      DELETE FROM pmeq_t
       WHERE pmeqent = g_enterprise AND pmeq001 = g_pmeq_m.pmeq001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_pmeq_m.pmeq001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM pmer_t
       WHERE pmerent = g_enterprise AND pmer001 = g_pmeq_m.pmeq001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmer_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM pmes_t
       WHERE pmesent = g_enterprise AND
             pmes001 = g_pmeq_m.pmeq001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmes_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE apmi820_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_pmer_d.clear() 
      CALL g_pmer2_d.clear()       
 
     
      CALL apmi820_ui_browser_refresh()  
      #CALL apmi820_ui_headershow()  
      #CALL apmi820_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL apmi820_browser_fill("")
         CALL apmi820_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'pmeqlent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.pmeql001
   LET l_field_keys[02] = 'pmeql001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'pmeql_t')
 
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE apmi820_cl
 
   #功能已完成,通報訊息中心
   CALL apmi820_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="apmi820.delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apmi820_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM pmer_t
       WHERE pmerent = g_enterprise AND
         pmer001 = ps_keys_bak[1] AND pmerseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmer_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM pmes_t
       WHERE pmesent = g_enterprise AND
             pmes001 = ps_keys_bak[1] AND pmes002 = ps_keys_bak[2] AND pmes003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmes_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_pmer2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000010
#+ 
#+ Filename...: apmi820
#+ Description: 要貨模板基本資料維護作業
#+ Creator....: 04226(2015-03-26 11:47:32)
#+ Modifier...: 04226(2015-04-01 09:28:35) -SD/PR-
]]>
  </section>
  <section id="apmi820.detail_reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION apmi820_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pmer_t.*
   DEFINE l_detail2    RECORD LIKE pmes_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apmi820_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apmi820_detail AS ",
                "SELECT * FROM pmer_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmi820_detail SELECT * FROM pmer_t 
                                         WHERE pmerent = g_enterprise AND pmer001 = g_pmeq001_t
 
   
   #將key修正為調整後   
   UPDATE apmi820_detail 
      #更新key欄位
      SET pmer001 = g_pmeq_m.pmeq001
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:3)
      #, pmerstus = "Y" 
 
#應用 a13 樣板自動產生(Version:3)
      #, pmesstus = "Y" 
 
 
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO pmer_t SELECT * FROM apmi820_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmi820_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE apmi820_detail AS ",
      "SELECT * FROM pmes_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmi820_detail SELECT * FROM pmes_t
                                         WHERE pmesent = g_enterprise AND pmes001 = g_pmeq001_t
 
 
   #將key修正為調整後   
   UPDATE apmi820_detail SET pmes001 = g_pmeq_m.pmeq001
 
  
   #將資料塞回原table   
   INSERT INTO pmes_t SELECT * FROM apmi820_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmi820_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_pmeq001_t = g_pmeq_m.pmeq001
 
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION apmi820_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.fetch" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apmi820_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_pmeq_m.pmeq001 = g_browser[g_current_idx].b_pmeq001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apmi820_master_referesh USING g_pmeq_m.pmeq001 INTO g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
       g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt,g_pmeq_m.pmequnit_desc,g_pmeq_m.pmeq002_desc, 
       g_pmeq_m.pmeqownid_desc,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp_desc, 
       g_pmeq_m.pmeqmodid_desc
   
   #遮罩相關處理
   LET g_pmeq_m_mask_o.* =  g_pmeq_m.*
   CALL apmi820_pmeq_t_mask()
   LET g_pmeq_m_mask_n.* =  g_pmeq_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi820_set_act_visible()   
   CALL apmi820_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_pmeq_m_t.* = g_pmeq_m.*
   LET g_pmeq_m_o.* = g_pmeq_m.*
   
   LET g_data_owner = g_pmeq_m.pmeqownid      
   LET g_data_dept  = g_pmeq_m.pmeqowndp
   
   #重新顯示   
   CALL apmi820_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION apmi820_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.global" ver="7" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:35)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_pmeq_m        RECORD
       pmeq001 LIKE pmeq_t.pmeq001, 
   pmeql003 LIKE pmeql_t.pmeql003, 
   pmeql004 LIKE pmeql_t.pmeql004, 
   pmequnit LIKE pmeq_t.pmequnit, 
   pmequnit_desc LIKE type_t.chr80, 
   pmeq002 LIKE pmeq_t.pmeq002, 
   pmeq002_desc LIKE type_t.chr80, 
   pmeqstus LIKE pmeq_t.pmeqstus, 
   pmeqownid LIKE pmeq_t.pmeqownid, 
   pmeqownid_desc LIKE type_t.chr80, 
   pmeqowndp LIKE pmeq_t.pmeqowndp, 
   pmeqowndp_desc LIKE type_t.chr80, 
   pmeqcrtid LIKE pmeq_t.pmeqcrtid, 
   pmeqcrtid_desc LIKE type_t.chr80, 
   pmeqcrtdp LIKE pmeq_t.pmeqcrtdp, 
   pmeqcrtdp_desc LIKE type_t.chr80, 
   pmeqcrtdt LIKE pmeq_t.pmeqcrtdt, 
   pmeqmodid LIKE pmeq_t.pmeqmodid, 
   pmeqmodid_desc LIKE type_t.chr80, 
   pmeqmoddt LIKE pmeq_t.pmeqmoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_pmer_d        RECORD
       pmerstus LIKE pmer_t.pmerstus, 
   pmerseq LIKE pmer_t.pmerseq, 
   pmer002 LIKE pmer_t.pmer002, 
   pmer003 LIKE pmer_t.pmer003, 
   pmer003_desc LIKE type_t.chr500, 
   pmer003_desc_desc LIKE type_t.chr500, 
   pmer004 LIKE pmer_t.pmer004, 
   pmer004_desc LIKE type_t.chr500, 
   pmer005 LIKE pmer_t.pmer005, 
   pmer006 LIKE pmer_t.pmer006, 
   pmer006_desc LIKE type_t.chr500, 
   pmer007 LIKE pmer_t.pmer007, 
   pmerunit LIKE pmer_t.pmerunit
       END RECORD
PRIVATE TYPE type_g_pmer2_d RECORD
       pmesstus LIKE pmes_t.pmesstus, 
   pmes002 LIKE pmes_t.pmes002, 
   pmes002_desc LIKE type_t.chr500, 
   pmes003 LIKE pmes_t.pmes003, 
   pmes003_desc LIKE type_t.chr500, 
   pmesunit LIKE pmes_t.pmesunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_pmeq001 LIKE pmeq_t.pmeq001
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_pmeq_m          type_g_pmeq_m
DEFINE g_pmeq_m_t        type_g_pmeq_m
DEFINE g_pmeq_m_o        type_g_pmeq_m
DEFINE g_pmeq_m_mask_o   type_g_pmeq_m #轉換遮罩前資料
DEFINE g_pmeq_m_mask_n   type_g_pmeq_m #轉換遮罩後資料
 
   DEFINE g_pmeq001_t LIKE pmeq_t.pmeq001
 
 
DEFINE g_pmer_d          DYNAMIC ARRAY OF type_g_pmer_d
DEFINE g_pmer_d_t        type_g_pmer_d
DEFINE g_pmer_d_o        type_g_pmer_d
DEFINE g_pmer_d_mask_o   DYNAMIC ARRAY OF type_g_pmer_d #轉換遮罩前資料
DEFINE g_pmer_d_mask_n   DYNAMIC ARRAY OF type_g_pmer_d #轉換遮罩後資料
DEFINE g_pmer2_d          DYNAMIC ARRAY OF type_g_pmer2_d
DEFINE g_pmer2_d_t        type_g_pmer2_d
DEFINE g_pmer2_d_o        type_g_pmer2_d
DEFINE g_pmer2_d_mask_o   DYNAMIC ARRAY OF type_g_pmer2_d #轉換遮罩前資料
DEFINE g_pmer2_d_mask_n   DYNAMIC ARRAY OF type_g_pmer2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      pmeql001 LIKE pmeql_t.pmeql001,
      pmeql003 LIKE pmeql_t.pmeql003,
      pmeql004 LIKE pmeql_t.pmeql004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="apmi820.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION apmi820_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pmer_d.getLength() THEN
         LET g_detail_idx = g_pmer_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmer_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmer_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_pmer2_d.getLength() THEN
         LET g_detail_idx = g_pmer2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmer2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmer2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.init" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apmi820_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('pmeqstus','17','N,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL apmi820_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="apmi820.input" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION apmi820_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmeq_m.pmeq001,g_pmeq_m.pmeql003,g_pmeq_m.pmeql004,g_pmeq_m.pmequnit,g_pmeq_m.pmequnit_desc, 
       g_pmeq_m.pmeq002,g_pmeq_m.pmeq002_desc,g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqownid_desc, 
       g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdp_desc,g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmodid_desc,g_pmeq_m.pmeqmoddt 

   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT pmerstus,pmerseq,pmer002,pmer003,pmer004,pmer005,pmer006,pmer007,pmerunit  
       FROM pmer_t WHERE pmerent=? AND pmer001=? AND pmerseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi820_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT pmesstus,pmes002,pmes003,pmesunit FROM pmes_t WHERE pmesent=? AND pmes001=?  
       AND pmes002=? AND pmes003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi820_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apmi820_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apmi820_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_pmeq_m.pmeq001,g_pmeq_m.pmeql003,g_pmeq_m.pmeql004,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
       g_pmeq_m.pmeqstus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="apmi820.input.body" ver="3" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_pmer_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmer_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmi820_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_pmer_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmi820_cl USING g_enterprise,g_pmeq_m.pmeq001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi820_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi820_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmer_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmer_d[l_ac].pmerseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_pmer_d_t.* = g_pmer_d[l_ac].*  #BACKUP
               LET g_pmer_d_o.* = g_pmer_d[l_ac].*  #BACKUP
               CALL apmi820_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL apmi820_set_no_entry_b(l_cmd)
               IF NOT apmi820_lock_b("pmer_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmi820_bcl INTO g_pmer_d[l_ac].pmerstus,g_pmer_d[l_ac].pmerseq,g_pmer_d[l_ac].pmer002, 
                      g_pmer_d[l_ac].pmer003,g_pmer_d[l_ac].pmer004,g_pmer_d[l_ac].pmer005,g_pmer_d[l_ac].pmer006, 
                      g_pmer_d[l_ac].pmer007,g_pmer_d[l_ac].pmerunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_pmer_d_t.pmerseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmer_d_mask_o[l_ac].* =  g_pmer_d[l_ac].*
                  CALL apmi820_pmer_t_mask()
                  LET g_pmer_d_mask_n[l_ac].* =  g_pmer_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmi820_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmer_d[l_ac].* TO NULL 
            INITIALIZE g_pmer_d_t.* TO NULL 
            INITIALIZE g_pmer_d_o.* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmer_d[l_ac].pmerstus = 'Y'
 
 
            #自定義預設值
                  LET g_pmer_d[l_ac].pmerstus = "Y"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_pmer_d_t.* = g_pmer_d[l_ac].*     #新輸入資料
            LET g_pmer_d_o.* = g_pmer_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmi820_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmi820_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmer_d[li_reproduce_target].* = g_pmer_d[li_reproduce].*
 
               LET g_pmer_d[li_reproduce_target].pmerseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmer_t 
             WHERE pmerent = g_enterprise AND pmer001 = g_pmeq_m.pmeq001
 
               AND pmerseq = g_pmer_d[l_ac].pmerseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmeq_m.pmeq001
               LET gs_keys[2] = g_pmer_d[g_detail_idx].pmerseq
               CALL apmi820_insert_b('pmer_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pmer_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmer_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmi820_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmeq_m.pmeq001
 
               LET gs_keys[gs_keys.getLength()+1] = g_pmer_d_t.pmerseq
 
            
               #刪除同層單身
               IF NOT apmi820_delete_b('pmer_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi820_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmi820_key_delete_b(gs_keys,'pmer_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi820_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE apmi820_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_pmer_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmer_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmerstus
            #add-point:BEFORE FIELD pmerstus
            {<point name="input.b.page1.pmerstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmerstus
            
            #add-point:AFTER FIELD pmerstus
            {<point name="input.a.page1.pmerstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmerstus
            #add-point:ON CHANGE pmerstus
            {<point name="input.g.page1.pmerstus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmerseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmer_d[l_ac].pmerseq,"0","1","","","azz-00079",1) THEN
               NEXT FIELD pmerseq
            END IF 
 
 
            #add-point:AFTER FIELD pmerseq
            {<point name="input.a.page1.pmerseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmerseq
            #add-point:BEFORE FIELD pmerseq
            {<point name="input.b.page1.pmerseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmerseq
            #add-point:ON CHANGE pmerseq
            {<point name="input.g.page1.pmerseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer002
            
            #add-point:AFTER FIELD pmer002
            {<point name="input.a.page1.pmer002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer002
            #add-point:BEFORE FIELD pmer002
            {<point name="input.b.page1.pmer002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmer002
            #add-point:ON CHANGE pmer002
            {<point name="input.g.page1.pmer002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer003
            
            #add-point:AFTER FIELD pmer003
            {<point name="input.a.page1.pmer003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer003
            #add-point:BEFORE FIELD pmer003
            {<point name="input.b.page1.pmer003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmer003
            #add-point:ON CHANGE pmer003
            {<point name="input.g.page1.pmer003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer004
            
            #add-point:AFTER FIELD pmer004
            {<point name="input.a.page1.pmer004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer004
            #add-point:BEFORE FIELD pmer004
            {<point name="input.b.page1.pmer004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmer004
            #add-point:ON CHANGE pmer004
            {<point name="input.g.page1.pmer004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer005
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_pmer_d[l_ac].pmer005,"1","1","","","azz-00079",1) THEN
               NEXT FIELD pmer005
            END IF 
 
 
            #add-point:AFTER FIELD pmer005
            {<point name="input.a.page1.pmer005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer005
            #add-point:BEFORE FIELD pmer005
            {<point name="input.b.page1.pmer005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmer005
            #add-point:ON CHANGE pmer005
            {<point name="input.g.page1.pmer005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer006
            
            #add-point:AFTER FIELD pmer006
            {<point name="input.a.page1.pmer006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer006
            #add-point:BEFORE FIELD pmer006
            {<point name="input.b.page1.pmer006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmer006
            #add-point:ON CHANGE pmer006
            {<point name="input.g.page1.pmer006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmer007
            #add-point:BEFORE FIELD pmer007
            {<point name="input.b.page1.pmer007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmer007
            
            #add-point:AFTER FIELD pmer007
            {<point name="input.a.page1.pmer007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmer007
            #add-point:ON CHANGE pmer007
            {<point name="input.g.page1.pmer007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmerunit
            #add-point:BEFORE FIELD pmerunit
            {<point name="input.b.page1.pmerunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmerunit
            
            #add-point:AFTER FIELD pmerunit
            {<point name="input.a.page1.pmerunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmerunit
            #add-point:ON CHANGE pmerunit
            {<point name="input.g.page1.pmerunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.pmerstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmerstus
            #add-point:ON ACTION controlp INFIELD pmerstus
            {<point name="input.c.page1.pmerstus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmerseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmerseq
            #add-point:ON ACTION controlp INFIELD pmerseq
            {<point name="input.c.page1.pmerseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmer002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer002
            #add-point:ON ACTION controlp INFIELD pmer002
            {<point name="input.c.page1.pmer002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmer003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer003
            #add-point:ON ACTION controlp INFIELD pmer003
            {<point name="input.c.page1.pmer003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmer004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer004
            #add-point:ON ACTION controlp INFIELD pmer004
            {<point name="input.c.page1.pmer004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmer005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer005
            #add-point:ON ACTION controlp INFIELD pmer005
            {<point name="input.c.page1.pmer005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmer006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer006
            #add-point:ON ACTION controlp INFIELD pmer006
            {<point name="input.c.page1.pmer006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmer007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmer007
            #add-point:ON ACTION controlp INFIELD pmer007
            {<point name="input.c.page1.pmer007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmerunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmerunit
            #add-point:ON ACTION controlp INFIELD pmerunit
            {<point name="input.c.page1.pmerunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pmer_d[l_ac].* = g_pmer_d_t.*
               CLOSE apmi820_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_pmer_d[l_ac].pmerseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pmer_d[l_ac].* = g_pmer_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
      
               #將遮罩欄位還原
               CALL apmi820_pmer_t_mask_restore('restore_mask_o')
      
               UPDATE pmer_t SET (pmer001,pmerstus,pmerseq,pmer002,pmer003,pmer004,pmer005,pmer006,pmer007, 
                   pmerunit) = (g_pmeq_m.pmeq001,g_pmer_d[l_ac].pmerstus,g_pmer_d[l_ac].pmerseq,g_pmer_d[l_ac].pmer002, 
                   g_pmer_d[l_ac].pmer003,g_pmer_d[l_ac].pmer004,g_pmer_d[l_ac].pmer005,g_pmer_d[l_ac].pmer006, 
                   g_pmer_d[l_ac].pmer007,g_pmer_d[l_ac].pmerunit)
                WHERE pmerent = g_enterprise AND pmer001 = g_pmeq_m.pmeq001 
 
                  AND pmerseq = g_pmer_d_t.pmerseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmer_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmer_d[l_ac].* = g_pmer_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmer_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_pmer_d[l_ac].* = g_pmer_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmeq_m.pmeq001
               LET gs_keys_bak[1] = g_pmeq001_t
               LET gs_keys[2] = g_pmer_d[g_detail_idx].pmerseq
               LET gs_keys_bak[2] = g_pmer_d_t.pmerseq
               CALL apmi820_update_b('pmer_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL apmi820_pmer_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_pmer_d[g_detail_idx].pmerseq = g_pmer_d_t.pmerseq 
 
                  ) THEN
                  LET gs_keys[01] = g_pmeq_m.pmeq001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_pmer_d_t.pmerseq
 
                  CALL apmi820_key_update_b(gs_keys,'pmer_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmeq_m),util.JSON.stringify(g_pmer_d_t)
               LET g_log2 = util.JSON.stringify(g_pmeq_m),util.JSON.stringify(g_pmer_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL apmi820_unlock_b("pmer_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_pmer_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmer_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_pmer2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmer2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmi820_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_pmer2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmer2_d[l_ac].* TO NULL 
            INITIALIZE g_pmer2_d_t.* TO NULL 
            INITIALIZE g_pmer2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmer2_d[l_ac].pmesstus = 'Y'
 
 
            #自定義預設值(單身2)
                  LET g_pmer2_d[l_ac].pmesstus = "Y"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_pmer2_d_t.* = g_pmer2_d[l_ac].*     #新輸入資料
            LET g_pmer2_d_o.* = g_pmer2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmi820_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmi820_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmer2_d[li_reproduce_target].* = g_pmer2_d[li_reproduce].*
 
               LET g_pmer2_d[li_reproduce_target].pmes002 = NULL
               LET g_pmer2_d[li_reproduce_target].pmes003 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmi820_cl USING g_enterprise,g_pmeq_m.pmeq001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi820_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi820_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmer2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmer2_d[l_ac].pmes002 IS NOT NULL
               AND g_pmer2_d[l_ac].pmes003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_pmer2_d_t.* = g_pmer2_d[l_ac].*  #BACKUP
               LET g_pmer2_d_o.* = g_pmer2_d[l_ac].*  #BACKUP
               CALL apmi820_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL apmi820_set_no_entry_b(l_cmd)
               IF NOT apmi820_lock_b("pmes_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmi820_bcl2 INTO g_pmer2_d[l_ac].pmesstus,g_pmer2_d[l_ac].pmes002,g_pmer2_d[l_ac].pmes003, 
                      g_pmer2_d[l_ac].pmesunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmer2_d_mask_o[l_ac].* =  g_pmer2_d[l_ac].*
                  CALL apmi820_pmes_t_mask()
                  LET g_pmer2_d_mask_n[l_ac].* =  g_pmer2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmi820_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmeq_m.pmeq001
               LET gs_keys[gs_keys.getLength()+1] = g_pmer2_d_t.pmes002
               LET gs_keys[gs_keys.getLength()+1] = g_pmer2_d_t.pmes003
            
               #刪除同層單身
               IF NOT apmi820_delete_b('pmes_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi820_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmi820_key_delete_b(gs_keys,'pmes_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmi820_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE apmi820_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_pmer_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmer2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmes_t 
             WHERE pmesent = g_enterprise AND pmes001 = g_pmeq_m.pmeq001
               AND pmes002 = g_pmer2_d[l_ac].pmes002
               AND pmes003 = g_pmer2_d[l_ac].pmes003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmeq_m.pmeq001
               LET gs_keys[2] = g_pmer2_d[g_detail_idx].pmes002
               LET gs_keys[3] = g_pmer2_d[g_detail_idx].pmes003
               CALL apmi820_insert_b('pmes_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_pmer_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmes_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmi820_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_pmer2_d[l_ac].* = g_pmer2_d_t.*
               CLOSE apmi820_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_pmer2_d[l_ac].* = g_pmer2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               #將遮罩欄位還原
               CALL apmi820_pmes_t_mask_restore('restore_mask_o')
                              
               UPDATE pmes_t SET (pmes001,pmesstus,pmes002,pmes003,pmesunit) = (g_pmeq_m.pmeq001,g_pmer2_d[l_ac].pmesstus, 
                   g_pmer2_d[l_ac].pmes002,g_pmer2_d[l_ac].pmes003,g_pmer2_d[l_ac].pmesunit) #自訂欄位頁簽 

                WHERE pmesent = g_enterprise AND pmes001 = g_pmeq_m.pmeq001
                  AND pmes002 = g_pmer2_d_t.pmes002 #項次 
                  AND pmes003 = g_pmer2_d_t.pmes003
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmes_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmer2_d[l_ac].* = g_pmer2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmes_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_pmer2_d[l_ac].* = g_pmer2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmeq_m.pmeq001
               LET gs_keys_bak[1] = g_pmeq001_t
               LET gs_keys[2] = g_pmer2_d[g_detail_idx].pmes002
               LET gs_keys_bak[2] = g_pmer2_d_t.pmes002
               LET gs_keys[3] = g_pmer2_d[g_detail_idx].pmes003
               LET gs_keys_bak[3] = g_pmer2_d_t.pmes003
               CALL apmi820_update_b('pmes_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL apmi820_pmes_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_pmer2_d[g_detail_idx].pmes002 = g_pmer2_d_t.pmes002 
                  AND g_pmer2_d[g_detail_idx].pmes003 = g_pmer2_d_t.pmes003 
                  ) THEN
                  LET gs_keys[01] = g_pmeq_m.pmeq001
                  LET gs_keys[gs_keys.getLength()+1] = g_pmer2_d_t.pmes002
                  LET gs_keys[gs_keys.getLength()+1] = g_pmer2_d_t.pmes003
                  CALL apmi820_key_update_b(gs_keys,'pmes_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmeq_m),util.JSON.stringify(g_pmer2_d_t)
               LET g_log2 = util.JSON.stringify(g_pmeq_m),util.JSON.stringify(g_pmer2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmesstus
            #add-point:BEFORE FIELD pmesstus
            {<point name="input.b.page2.pmesstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmesstus
            
            #add-point:AFTER FIELD pmesstus
            {<point name="input.a.page2.pmesstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmesstus
            #add-point:ON CHANGE pmesstus
            {<point name="input.g.page2.pmesstus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmes002
            
            #add-point:AFTER FIELD pmes002
            {<point name="input.a.page2.pmes002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmes002
            #add-point:BEFORE FIELD pmes002
            {<point name="input.b.page2.pmes002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmes002
            #add-point:ON CHANGE pmes002
            {<point name="input.g.page2.pmes002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmes003
            
            #add-point:AFTER FIELD pmes003
            {<point name="input.a.page2.pmes003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmes003
            #add-point:BEFORE FIELD pmes003
            {<point name="input.b.page2.pmes003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmes003
            #add-point:ON CHANGE pmes003
            {<point name="input.g.page2.pmes003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmesunit
            #add-point:BEFORE FIELD pmesunit
            {<point name="input.b.page2.pmesunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmesunit
            
            #add-point:AFTER FIELD pmesunit
            {<point name="input.a.page2.pmesunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmesunit
            #add-point:ON CHANGE pmesunit
            {<point name="input.g.page2.pmesunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.pmesstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmesstus
            #add-point:ON ACTION controlp INFIELD pmesstus
            {<point name="input.c.page2.pmesstus" />}
            #END add-point
 
         #Ctrlp:input.c.page2.pmes002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmes002
            #add-point:ON ACTION controlp INFIELD pmes002
            {<point name="input.c.page2.pmes002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.pmes003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmes003
            #add-point:ON ACTION controlp INFIELD pmes003
            {<point name="input.c.page2.pmes003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.pmesunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmesunit
            #add-point:ON ACTION controlp INFIELD pmesunit
            {<point name="input.c.page2.pmesunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pmer2_d[l_ac].* = g_pmer2_d_t.*
               END IF
               CLOSE apmi820_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL apmi820_unlock_b("pmes_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_pmer2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmer2_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="apmi820.input.head" ver="3" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_pmeq_m.pmeq001,g_pmeq_m.pmeql003,g_pmeq_m.pmeql004,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
          g_pmeq_m.pmeqstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN apmi820_cl USING g_enterprise,g_pmeq_m.pmeq001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmi820_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE apmi820_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            LET g_master_multi_table_t.pmeql001 = g_pmeq_m.pmeq001
LET g_master_multi_table_t.pmeql003 = g_pmeq_m.pmeql003
LET g_master_multi_table_t.pmeql004 = g_pmeq_m.pmeql004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.pmeql001 = ''
LET g_master_multi_table_t.pmeql003 = ''
LET g_master_multi_table_t.pmeql004 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL apmi820_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL apmi820_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeq001
            
            #add-point:AFTER FIELD pmeq001
            {<point name="input.a.pmeq001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeq001
            #add-point:BEFORE FIELD pmeq001
            {<point name="input.b.pmeq001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmeq001
            #add-point:ON CHANGE pmeq001
            {<point name="input.g.pmeq001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeql003
            #add-point:BEFORE FIELD pmeql003
            {<point name="input.b.pmeql003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeql003
            
            #add-point:AFTER FIELD pmeql003
            {<point name="input.a.pmeql003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmeql003
            #add-point:ON CHANGE pmeql003
            {<point name="input.g.pmeql003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeql004
            #add-point:BEFORE FIELD pmeql004
            {<point name="input.b.pmeql004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeql004
            
            #add-point:AFTER FIELD pmeql004
            {<point name="input.a.pmeql004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmeql004
            #add-point:ON CHANGE pmeql004
            {<point name="input.g.pmeql004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmequnit
            
            #add-point:AFTER FIELD pmequnit
            {<point name="input.a.pmequnit" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmequnit
            #add-point:BEFORE FIELD pmequnit
            {<point name="input.b.pmequnit" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmequnit
            #add-point:ON CHANGE pmequnit
            {<point name="input.g.pmequnit" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeq002
            
            #add-point:AFTER FIELD pmeq002
            {<point name="input.a.pmeq002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeq002
            #add-point:BEFORE FIELD pmeq002
            {<point name="input.b.pmeq002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmeq002
            #add-point:ON CHANGE pmeq002
            {<point name="input.g.pmeq002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmeqstus
            #add-point:BEFORE FIELD pmeqstus
            {<point name="input.b.pmeqstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmeqstus
            
            #add-point:AFTER FIELD pmeqstus
            {<point name="input.a.pmeqstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE pmeqstus
            #add-point:ON CHANGE pmeqstus
            {<point name="input.g.pmeqstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.pmeq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeq001
            #add-point:ON ACTION controlp INFIELD pmeq001
            {<point name="input.c.pmeq001" />}
            #END add-point
 
         #Ctrlp:input.c.pmeql003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeql003
            #add-point:ON ACTION controlp INFIELD pmeql003
            {<point name="input.c.pmeql003" />}
            #END add-point
 
         #Ctrlp:input.c.pmeql004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeql004
            #add-point:ON ACTION controlp INFIELD pmeql004
            {<point name="input.c.pmeql004" />}
            #END add-point
 
         #Ctrlp:input.c.pmequnit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmequnit
            #add-point:ON ACTION controlp INFIELD pmequnit
            {<point name="input.c.pmequnit" />}
            #END add-point
 
         #Ctrlp:input.c.pmeq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeq002
            #add-point:ON ACTION controlp INFIELD pmeq002
            {<point name="input.c.pmeq002" />}
            #END add-point
 
         #Ctrlp:input.c.pmeqstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmeqstus
            #add-point:ON ACTION controlp INFIELD pmeqstus
            {<point name="input.c.pmeqstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_pmeq_m.pmeq001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO pmeq_t (pmeqent,pmeq001,pmequnit,pmeq002,pmeqstus,pmeqownid,pmeqowndp,pmeqcrtid, 
                   pmeqcrtdp,pmeqcrtdt,pmeqmodid,pmeqmoddt)
               VALUES (g_enterprise,g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002,g_pmeq_m.pmeqstus, 
                   g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp,g_pmeq_m.pmeqcrtdt, 
                   g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_pmeq_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_pmeq_m.pmeq001 = g_master_multi_table_t.pmeql001 AND
         g_pmeq_m.pmeql003 = g_master_multi_table_t.pmeql003 AND 
         g_pmeq_m.pmeql004 = g_master_multi_table_t.pmeql004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pmeqlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pmeq_m.pmeq001
            LET l_field_keys[02] = 'pmeql001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.pmeql001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pmeql002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_pmeq_m.pmeql003
            LET l_fields[01] = 'pmeql003'
            LET l_vars[02] = g_pmeq_m.pmeql004
            LET l_fields[02] = 'pmeql004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pmeql_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apmi820_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL apmi820_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL apmi820_pmeq_t_mask_restore('restore_mask_o')
               
               UPDATE pmeq_t SET (pmeq001,pmequnit,pmeq002,pmeqstus,pmeqownid,pmeqowndp,pmeqcrtid,pmeqcrtdp, 
                   pmeqcrtdt,pmeqmodid,pmeqmoddt) = (g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
                   g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp, 
                   g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt)
                WHERE pmeqent = g_enterprise AND pmeq001 = g_pmeq001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "pmeq_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_pmeq_m.pmeq001 = g_master_multi_table_t.pmeql001 AND
         g_pmeq_m.pmeql003 = g_master_multi_table_t.pmeql003 AND 
         g_pmeq_m.pmeql004 = g_master_multi_table_t.pmeql004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'pmeqlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_pmeq_m.pmeq001
            LET l_field_keys[02] = 'pmeql001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.pmeql001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pmeql002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_pmeq_m.pmeql003
            LET l_fields[01] = 'pmeql003'
            LET l_vars[02] = g_pmeq_m.pmeql004
            LET l_fields[02] = 'pmeql004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pmeql_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL apmi820_pmeq_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_pmeq_m_t)
               LET g_log2 = util.JSON.stringify(g_pmeq_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_pmeq001_t = g_pmeq_m.pmeq001
 
            
      END INPUT
   
]]>
  </section>
  <section id="apmi820.input.other" ver="3" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD pmeq001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pmerstus
               WHEN "s_detail2"
                  NEXT FIELD pmesstus
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.insert" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION apmi820_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_pmer_d.clear()   
   CALL g_pmer2_d.clear()  
 
 
   INITIALIZE g_pmeq_m.* LIKE pmeq_t.*             #DEFAULT 設定
   
   LET g_pmeq001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmeq_m.pmeqownid = g_user
      LET g_pmeq_m.pmeqowndp = g_dept
      LET g_pmeq_m.pmeqcrtid = g_user
      LET g_pmeq_m.pmeqcrtdp = g_dept 
      LET g_pmeq_m.pmeqcrtdt = cl_get_current()
      LET g_pmeq_m.pmeqmodid = g_user
      LET g_pmeq_m.pmeqmoddt = cl_get_current()
      LET g_pmeq_m.pmeqstus = 'Y'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_pmeq_m_t.* = g_pmeq_m.*
      LET g_pmeq_m_o.* = g_pmeq_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmeq_m.pmeqstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
    
      CALL apmi820_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_pmeq_m.* TO NULL
         INITIALIZE g_pmer_d TO NULL
         INITIALIZE g_pmer2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL apmi820_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_pmer_d.clear()
      #CALL g_pmer2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi820_set_act_visible()   
   CALL apmi820_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmeq001_t = g_pmeq_m.pmeq001
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmeqent = '" ||g_enterprise|| "' AND",
                      " pmeq001 = '", g_pmeq_m.pmeq001, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmi820_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE apmi820_cl
   
   CALL apmi820_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE apmi820_master_referesh USING g_pmeq_m.pmeq001 INTO g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
       g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt,g_pmeq_m.pmequnit_desc,g_pmeq_m.pmeq002_desc, 
       g_pmeq_m.pmeqownid_desc,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp_desc, 
       g_pmeq_m.pmeqmodid_desc
   
   #遮罩相關處理
   LET g_pmeq_m_mask_o.* =  g_pmeq_m.*
   CALL apmi820_pmeq_t_mask()
   LET g_pmeq_m_mask_n.* =  g_pmeq_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmeq_m.pmeq001,g_pmeq_m.pmeql003,g_pmeq_m.pmeql004,g_pmeq_m.pmequnit,g_pmeq_m.pmequnit_desc, 
       g_pmeq_m.pmeq002,g_pmeq_m.pmeq002_desc,g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqownid_desc, 
       g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdp_desc,g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmodid_desc,g_pmeq_m.pmeqmoddt 

   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL apmi820_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.insert_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apmi820_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO pmer_t
                  (pmerent,
                   pmer001,
                   pmerseq
                   ,pmerstus,pmer002,pmer003,pmer004,pmer005,pmer006,pmer007,pmerunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_pmer_d[g_detail_idx].pmerstus,g_pmer_d[g_detail_idx].pmer002,g_pmer_d[g_detail_idx].pmer003, 
                       g_pmer_d[g_detail_idx].pmer004,g_pmer_d[g_detail_idx].pmer005,g_pmer_d[g_detail_idx].pmer006, 
                       g_pmer_d[g_detail_idx].pmer007,g_pmer_d[g_detail_idx].pmerunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmer_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmer_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO pmes_t
                  (pmesent,
                   pmes001,
                   pmes002,pmes003
                   ,pmesstus,pmesunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_pmer2_d[g_detail_idx].pmesstus,g_pmer2_d[g_detail_idx].pmesunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmes_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_pmer2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION apmi820_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.key_update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION apmi820_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.lock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apmi820_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL apmi820_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pmer_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apmi820_bcl USING g_enterprise,
                                       g_pmeq_m.pmeq001,g_pmer_d[g_detail_idx].pmerseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmi820_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "pmes_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apmi820_bcl2 USING g_enterprise,
                                             g_pmeq_m.pmeq001,g_pmer2_d[g_detail_idx].pmes002,g_pmer2_d[g_detail_idx].pmes003 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmi820_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.main" ver="3" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT pmeq001,'','',pmequnit,'',pmeq002,'',pmeqstus,pmeqownid,'',pmeqowndp, 
       '',pmeqcrtid,'',pmeqcrtdp,'',pmeqcrtdt,pmeqmodid,'',pmeqmoddt", 
                      " FROM pmeq_t",
                      " WHERE pmeqent= ? AND pmeq001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmi820_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.pmeq001,t0.pmequnit,t0.pmeq002,t0.pmeqstus,t0.pmeqownid,t0.pmeqowndp, 
       t0.pmeqcrtid,t0.pmeqcrtdp,t0.pmeqcrtdt,t0.pmeqmodid,t0.pmeqmoddt,t1.ooefl003 ,t2.rtaal003 ,t3.ooag011 , 
       t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011",
               " FROM pmeq_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.pmequnit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaal_t t2 ON t2.rtaalent='"||g_enterprise||"' AND t2.rtaal001=t0.pmeq002 AND t2.rtaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.pmeqownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.pmeqowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.pmeqcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.pmeqcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.pmeqmodid  ",
 
               " WHERE t0.pmeqent = '" ||g_enterprise|| "' AND t0.pmeq001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apmi820_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmi820 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmi820_init()   
 
      #進入選單 Menu (="N")
      CALL apmi820_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apmi820
      
   END IF 
   
   CLOSE apmi820_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="apmi820.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/apm/apmi820_mask.4gl"
]]>
  </section>
  <section id="apmi820.modify" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION apmi820_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_pmeq_m_t.* = g_pmeq_m.*
   LET g_pmeq_m_o.* = g_pmeq_m.*
   
   IF g_pmeq_m.pmeq001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_pmeq001_t = g_pmeq_m.pmeq001
 
   CALL s_transaction_begin()
   
   OPEN apmi820_cl USING g_enterprise,g_pmeq_m.pmeq001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmi820_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmi820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmi820_master_referesh USING g_pmeq_m.pmeq001 INTO g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
       g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt,g_pmeq_m.pmequnit_desc,g_pmeq_m.pmeq002_desc, 
       g_pmeq_m.pmeqownid_desc,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp_desc, 
       g_pmeq_m.pmeqmodid_desc
   
   #檢查是否允許此動作
   IF NOT apmi820_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmeq_m_mask_o.* =  g_pmeq_m.*
   CALL apmi820_pmeq_t_mask()
   LET g_pmeq_m_mask_n.* =  g_pmeq_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL apmi820_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_pmeq001_t = g_pmeq_m.pmeq001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_pmeq_m.pmeqmodid = g_user 
LET g_pmeq_m.pmeqmoddt = cl_get_current()
LET g_pmeq_m.pmeqmodid_desc = cl_get_username(g_pmeq_m.pmeqmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL apmi820_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE pmeq_t SET (pmeqmodid,pmeqmoddt) = (g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt)
          WHERE pmeqent = g_enterprise AND pmeq001 = g_pmeq001_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pmeq_m.* = g_pmeq_m_t.*
         CALL apmi820_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_pmeq_m.pmeq001 != g_pmeq001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE pmer_t SET pmer001 = g_pmeq_m.pmeq001
 
          WHERE pmerent = g_enterprise AND pmer001 = g_pmeq001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmer_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmer_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE pmes_t
            SET pmes001 = g_pmeq_m.pmeq001
 
          WHERE pmesent = g_enterprise AND
                pmes001 = g_pmeq001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmes_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmes_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi820_set_act_visible()   
   CALL apmi820_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " pmeqent = '" ||g_enterprise|| "' AND",
                      " pmeq001 = '", g_pmeq_m.pmeq001, "' "
 
   #填到對應位置
   CALL apmi820_browser_fill("")
 
   CLOSE apmi820_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmi820_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="apmi820.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION apmi820_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL apmi820_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_pmeq_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="apmi820.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="apmi820.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="apmi820.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apmi820_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_pmer_d.clear()
   CALL g_pmer2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL apmi820_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL apmi820_browser_fill("")
      CALL apmi820_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL apmi820_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL apmi820_fetch("F") 
      #顯示單身筆數
      CALL apmi820_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.reproduce" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION apmi820_reproduce()
   DEFINE l_newno     LIKE pmeq_t.pmeq001 
   DEFINE l_oldno     LIKE pmeq_t.pmeq001 
 
   DEFINE l_master    RECORD LIKE pmeq_t.*
   DEFINE l_detail    RECORD LIKE pmer_t.*
   DEFINE l_detail2    RECORD LIKE pmes_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_pmeq_m.pmeq001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_pmeq001_t = g_pmeq_m.pmeq001
 
    
   LET g_pmeq_m.pmeq001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_pmeq_m.pmeqownid = g_user
      LET g_pmeq_m.pmeqowndp = g_dept
      LET g_pmeq_m.pmeqcrtid = g_user
      LET g_pmeq_m.pmeqcrtdp = g_dept 
      LET g_pmeq_m.pmeqcrtdt = cl_get_current()
      LET g_pmeq_m.pmeqmodid = g_user
      LET g_pmeq_m.pmeqmoddt = cl_get_current()
      LET g_pmeq_m.pmeqstus = 'Y'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmeq_m.pmeqstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL apmi820_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_pmeq_m.* TO NULL
      INITIALIZE g_pmer_d TO NULL
      INITIALIZE g_pmer2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL apmi820_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmi820_set_act_visible()   
   CALL apmi820_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmeq001_t = g_pmeq_m.pmeq001
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmeqent = '" ||g_enterprise|| "' AND",
                      " pmeq001 = '", g_pmeq_m.pmeq001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmi820_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL apmi820_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL apmi820_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION apmi820_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION apmi820_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION apmi820_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION apmi820_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION apmi820_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pmeq001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apmi820_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_no_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION apmi820_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pmeq001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apmi820_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="apmi820.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION apmi820_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pmeq_m.pmeq001
   LET g_pk_array[1].column = 'pmeq001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmi820.show" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apmi820_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL apmi820_b_fill() #單身填充
      CALL apmi820_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL apmi820_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_pmeq_m_mask_o.* =  g_pmeq_m.*
   CALL apmi820_pmeq_t_mask()
   LET g_pmeq_m_mask_n.* =  g_pmeq_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmeq_m.pmeq001,g_pmeq_m.pmeql003,g_pmeq_m.pmeql004,g_pmeq_m.pmequnit,g_pmeq_m.pmequnit_desc, 
       g_pmeq_m.pmeq002,g_pmeq_m.pmeq002_desc,g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqownid_desc, 
       g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdp_desc,g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmodid_desc,g_pmeq_m.pmeqmoddt 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_pmeq_m.pmeqstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_pmer_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_pmer2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apmi820_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="apmi820.state_change" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION apmi820_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_pmeq_m.pmeq001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN apmi820_cl USING g_enterprise,g_pmeq_m.pmeq001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmi820_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE apmi820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE apmi820_master_referesh USING g_pmeq_m.pmeq001 INTO g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
       g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt,g_pmeq_m.pmequnit_desc,g_pmeq_m.pmeq002_desc, 
       g_pmeq_m.pmeqownid_desc,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp_desc, 
       g_pmeq_m.pmeqmodid_desc
 
   #檢查是否允許此動作
   IF NOT apmi820_action_chk() THEN
      CLOSE apmi820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmeq_m.pmeq001,g_pmeq_m.pmeql003,g_pmeq_m.pmeql004,g_pmeq_m.pmequnit,g_pmeq_m.pmequnit_desc, 
       g_pmeq_m.pmeq002,g_pmeq_m.pmeq002_desc,g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqownid_desc, 
       g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdp_desc,g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmodid_desc,g_pmeq_m.pmeqmoddt 

 
   CASE g_pmeq_m.pmeqstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_pmeq_m.pmeqstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.inactive"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.active"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_pmeq_m.pmeqstus = lc_state OR cl_null(lc_state) THEN
      CLOSE apmi820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_pmeq_m.pmeqmodid = g_user
   LET g_pmeq_m.pmeqmoddt = cl_get_current()
   LET g_pmeq_m.pmeqstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE pmeq_t 
      SET (pmeqstus,pmeqmodid,pmeqmoddt) 
        = (g_pmeq_m.pmeqstus,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt)     
    WHERE pmeqent = g_enterprise AND pmeq001 = g_pmeq_m.pmeq001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE apmi820_master_referesh USING g_pmeq_m.pmeq001 INTO g_pmeq_m.pmeq001,g_pmeq_m.pmequnit, 
          g_pmeq_m.pmeq002,g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid, 
          g_pmeq_m.pmeqcrtdp,g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt,g_pmeq_m.pmequnit_desc, 
          g_pmeq_m.pmeq002_desc,g_pmeq_m.pmeqownid_desc,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid_desc, 
          g_pmeq_m.pmeqcrtdp_desc,g_pmeq_m.pmeqmodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_pmeq_m.pmeq001,g_pmeq_m.pmeql003,g_pmeq_m.pmeql004,g_pmeq_m.pmequnit,g_pmeq_m.pmequnit_desc, 
          g_pmeq_m.pmeq002,g_pmeq_m.pmeq002_desc,g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqownid_desc, 
          g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp, 
          g_pmeq_m.pmeqcrtdp_desc,g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmodid_desc,g_pmeq_m.pmeqmoddt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE apmi820_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmi820_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="apmi820.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION apmi820_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="apmi820.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apmi820_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pmeq001 = g_pmeq_m.pmeq001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION apmi820_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="apmi820.ui_dialog" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION apmi820_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apmi820_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_pmeq_m.* TO NULL
         CALL g_pmer_d.clear()
         CALL g_pmer2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmi820_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_pmer_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmi820_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL apmi820_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_pmer2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmi820_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL apmi820_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL apmi820_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apmi820_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apmi820_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apmi820_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apmi820_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL apmi820_set_act_visible()   
            CALL apmi820_set_act_no_visible()
            IF NOT (g_pmeq_m.pmeq001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " pmeqent = '" ||g_enterprise|| "' AND",
                                  " pmeq001 = '", g_pmeq_m.pmeq001, "' "
 
               #填到對應位置
               CALL apmi820_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL apmi820_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL apmi820_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL apmi820_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL apmi820_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi820_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL apmi820_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi820_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL apmi820_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi820_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL apmi820_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi820_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL apmi820_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmi820_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_pmer_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_pmer2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apmi820_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apmi820_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apmi820_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION gen_apmi821
            LET g_action_choice="gen_apmi821"
            IF cl_auth_chk_act("gen_apmi821") THEN
               
               #add-point:ON ACTION gen_apmi821
               {<point name="menu.gen_apmi821" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apmi820_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apmi820_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apmi820_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION upd_apmi821
            LET g_action_choice="upd_apmi821"
            IF cl_auth_chk_act("upd_apmi821") THEN
               
               #add-point:ON ACTION upd_apmi821
               {<point name="menu.upd_apmi821" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL apmi820_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apmi820_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apmi820_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="apmi820.ui_headershow" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION apmi820_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_pmeq_m.pmeq001 = g_browser[g_current_idx].b_pmeq001   
 
   EXECUTE apmi820_master_referesh USING g_pmeq_m.pmeq001 INTO g_pmeq_m.pmeq001,g_pmeq_m.pmequnit,g_pmeq_m.pmeq002, 
       g_pmeq_m.pmeqstus,g_pmeq_m.pmeqownid,g_pmeq_m.pmeqowndp,g_pmeq_m.pmeqcrtid,g_pmeq_m.pmeqcrtdp, 
       g_pmeq_m.pmeqcrtdt,g_pmeq_m.pmeqmodid,g_pmeq_m.pmeqmoddt,g_pmeq_m.pmequnit_desc,g_pmeq_m.pmeq002_desc, 
       g_pmeq_m.pmeqownid_desc,g_pmeq_m.pmeqowndp_desc,g_pmeq_m.pmeqcrtid_desc,g_pmeq_m.pmeqcrtdp_desc, 
       g_pmeq_m.pmeqmodid_desc
   CALL apmi820_pmeq_t_mask()
   CALL apmi820_show()
      
END FUNCTION
]]>
  </section>
  <section id="apmi820.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apmi820_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmi820_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmi820_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="apmi820.update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apmi820_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmer_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL apmi820_pmer_t_mask_restore('restore_mask_o')
               
      UPDATE pmer_t 
         SET (pmer001,
              pmerseq
              ,pmerstus,pmer002,pmer003,pmer004,pmer005,pmer006,pmer007,pmerunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pmer_d[g_detail_idx].pmerstus,g_pmer_d[g_detail_idx].pmer002,g_pmer_d[g_detail_idx].pmer003, 
                  g_pmer_d[g_detail_idx].pmer004,g_pmer_d[g_detail_idx].pmer005,g_pmer_d[g_detail_idx].pmer006, 
                  g_pmer_d[g_detail_idx].pmer007,g_pmer_d[g_detail_idx].pmerunit) 
         WHERE pmerent = g_enterprise AND pmer001 = ps_keys_bak[1] AND pmerseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmer_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmer_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmi820_pmer_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmes_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL apmi820_pmes_t_mask_restore('restore_mask_o')
               
      UPDATE pmes_t 
         SET (pmes001,
              pmes002,pmes003
              ,pmesstus,pmesunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_pmer2_d[g_detail_idx].pmesstus,g_pmer2_d[g_detail_idx].pmesunit) 
         WHERE pmesent = g_enterprise AND pmes001 = ps_keys_bak[1] AND pmes002 = ps_keys_bak[2] AND pmes003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmes_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmes_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmi820_pmes_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
