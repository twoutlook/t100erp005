<add_points prog="apmt420" std_prog="apmt420" erpver="1.0" module="APM" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="construct.c.page1.pmdg002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdg002  #顯示到畫面上

            NEXT FIELD pmdg002                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.pmdg003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdg003  #顯示到畫面上

            NEXT FIELD pmdg003                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.pmdg005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaf001_12()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdg005  #顯示到畫面上
             
            NEXT FIELD pmdg005                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.pmdg008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdg008  #顯示到畫面上

            NEXT FIELD pmdg008                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.pmdg014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '221'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdg014  #顯示到畫面上

            NEXT FIELD pmdg014                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.pmdg016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '263'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdg016  #顯示到畫面上

            NEXT FIELD pmdg016                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdf002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdf002  #顯示到畫面上

            NEXT FIELD pmdf002                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdf003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdf003  #顯示到畫面上

            NEXT FIELD pmdf003                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdf004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdf004  #顯示到畫面上

            NEXT FIELD pmdf004                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdf005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdf005  #顯示到畫面上

            NEXT FIELD pmdf005                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdf006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdf006  #顯示到畫面上

            NEXT FIELD pmdf006                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdf009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooib002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdf009  #顯示到畫面上

            NEXT FIELD pmdf009                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdf010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdf010  #顯示到畫面上

            NEXT FIELD pmdf010                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfcnfid  #顯示到畫面上

            NEXT FIELD pmdfcnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfcrtdp  #顯示到畫面上

            NEXT FIELD pmdfcrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfcrtid  #顯示到畫面上

            NEXT FIELD pmdfcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmdfdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfdocno  #顯示到畫面上

            NEXT FIELD pmdfdocno                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfmodid  #顯示到畫面上

            NEXT FIELD pmdfmodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfowndp  #顯示到畫面上

            NEXT FIELD pmdfowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfownid  #顯示到畫面上

            NEXT FIELD pmdfownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.pmdfpstid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdfpstid  #顯示到畫面上

            NEXT FIELD pmdfpstid                     #返回原欄位

]]>
</point>
  <point name="input.a.page1.pmdg002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf004_ref(g_pmdg_d[l_ac].pmdg002) RETURNING g_pmdg_d[l_ac].pmdg002_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg002_desc
            IF NOT cl_null(g_pmdg_d[l_ac].pmdg002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg002 != g_pmdg_d_t.pmdg002)) THEN
                  IF NOT apmt420_pmdf004_chk(g_pmdg_d[l_ac].pmdg002) THEN
                     LET g_pmdg_d[l_ac].pmdg002 = g_pmdg_d_t.pmdg002
                     CALL apmt420_pmdf004_ref(g_pmdg_d[l_ac].pmdg002) RETURNING g_pmdg_d[l_ac].pmdg002_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg002_desc
                     NEXT FIELD CURRENT
                  END IF       
               END IF
            END IF ]]>
</point>
  <point name="input.a.page1.pmdg003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdg003_ref(g_pmdg_d[l_ac].pmdg003) RETURNING g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
            IF NOT cl_null(g_pmdg_d[l_ac].pmdg003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg003 != g_pmdg_d_t.pmdg003 OR cl_null(g_pmdg_d_t.pmdg003))) THEN
                  IF NOT apmt420_pmdg003_chk(g_pmdg_d[l_ac].pmdg003) THEN
                     LET g_pmdg_d[l_ac].pmdg003 = g_pmdg_d_t.pmdg003
                     CALL apmt420_pmdg003_ref(g_pmdg_d[l_ac].pmdg003) RETURNING g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
                     NEXT FIELD CURRENT
                  ELSE
                     LET g_pmdg_d[l_ac].pmdg004 = ' '
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg004
                     
                     LET g_pmdg_d[l_ac].pmdg005 = ''
                     LET g_pmdg_d[l_ac].pmdg008 = ''
                     SELECT imaf157,imaf143 INTO g_pmdg_d[l_ac].pmdg005,g_pmdg_d[l_ac].pmdg008 FROM imaf_t
                        WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = g_pmdg_d[l_ac].pmdg003
                        
                     #如果整體參數使用採購計價單位時，[C:詢價單位]=[T:料件據點進銷存檔].[C:採購計價單位] 
                     IF cl_get_para(g_enterprise,g_site,'S-BAS-0019') THEN
                        SELECT imaf144 INTO g_pmdg_d[l_ac].pmdg008 FROM imaf_t
                        WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = g_pmdg_d[l_ac].pmdg003
                     END IF
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg005,g_pmdg_d[l_ac].pmdg008
                     CALL apmt420_pmdg005_ref(g_pmdg_d[l_ac].pmdg005) RETURNING g_pmdg_d[l_ac].pmdg005_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg005_desc
                     
                     CALL apmt420_pmdg008_ref(g_pmdg_d[l_ac].pmdg008) RETURNING g_pmdg_d[l_ac].pmdg008_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg008_desc
                     
                     #依據單頭的稅別與單身的料號呼叫取稅率的應用元件，取得稅率值後更新顯示在pmdg011欄位
                     LET l_pmab039 = ''
                     SELECT pmab039 INTO l_pmab039 FROM pmab_t,pmaa_t 
                        WHERE pmaaent = pmabent AND pmaa001 = pmab001 AND pmaastus = 'Y'
                          AND pmabent = g_enterprise AND pmabsite = g_site AND pmab001 = g_pmdg_d[l_ac].pmdg002
                     IF SQLCA.sqlcode = 100 THEN
                        SELECT pmab039 INTO l_pmab039 FROM pmab_t,pmaa_t 
                           WHERE pmaaent = pmabent AND pmaa001 = pmab001 AND pmaastus = 'Y'
                             AND pmabent = g_enterprise AND pmabsite = 'ALL' AND pmab001 = g_pmdg_d[l_ac].pmdg002
                     END IF
                     IF (NOT cl_null(g_pmdg_d[l_ac].pmdg002)) AND (NOT cl_null(l_pmab039)) THEN
                        CALL s_tax_chktype(g_site,g_pmdg_d[l_ac].pmdg002,g_pmdg_d[l_ac].pmdg003,'2',l_pmab039)
                           RETURNING l_success,g_pmdg_d[l_ac].pmdg018,g_pmdg_d[l_ac].pmdg011
                        IF NOT l_success THEN
                           LET g_pmdg_d[l_ac].pmdg003 = g_pmdg_d_t.pmdg003
                           CALL apmt420_pmdg003_ref(g_pmdg_d[l_ac].pmdg003) RETURNING g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
                           DISPLAY BY NAME g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
                           NEXT FIELD CURRENT
                        ELSE
                           DISPLAY BY NAME g_pmdg_d[l_ac].pmdg018,g_pmdg_d[l_ac].pmdg011
                           CALL apmt420_pmdf006_ref(g_pmdg_d[l_ac].pmdg018) RETURNING g_pmdg_d[l_ac].pmdg018_desc
                           DISPLAY BY NAME g_pmdg_d[l_ac].pmdg018_desc   
                        END IF
                     END IF                        
                  END IF
               END IF
            END IF 
            CALL apmt420_set_entry_b(l_cmd)
            CALL apmt420_set_no_entry_b(l_cmd)
]]>
</point>
  <point name="input.a.page1.pmdg005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdg005_ref(g_pmdg_d[l_ac].pmdg005) RETURNING g_pmdg_d[l_ac].pmdg005_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg005_desc
            IF NOT cl_null(g_pmdg_d[l_ac].pmdg005) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg005 != g_pmdg_d_t.pmdg005 OR cl_null(g_pmdg_d_t.pmdg005))) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmdg_d[l_ac].pmdg005
             
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_imaa001_3") THEN
                     #檢查成功時後續處理
                     IF cl_chk_exist("v_imaf001_2") THEN
                     
                     ELSE
                        #檢查失敗時後續處理
                        LET g_pmdg_d[l_ac].pmdg005 = g_pmdg_d_t.pmdg005
                        CALL apmt420_pmdg005_ref(g_pmdg_d[l_ac].pmdg005) RETURNING g_pmdg_d[l_ac].pmdg005_desc
                        DISPLAY BY NAME g_pmdg_d[l_ac].pmdg005_desc
                        NEXT FIELD CURRENT
                     END IF
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdg_d[l_ac].pmdg005 = g_pmdg_d_t.pmdg005
                     CALL apmt420_pmdg005_ref(g_pmdg_d[l_ac].pmdg005) RETURNING g_pmdg_d[l_ac].pmdg005_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg005_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
]]>
</point>
  <point name="input.a.page1.pmdg007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmdg_d[l_ac].pmdg007) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg007 != g_pmdg_d_t.pmdg007 OR cl_null(g_pmdg_d_t.pmdg007))) THEN
                  #根據單位對數量與最低採購數量進行取位
                  CALL apmt420_pmdg008_round()
               END IF
            END IF 
]]>
</point>
  <point name="input.a.page1.pmdg008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdg008_ref(g_pmdg_d[l_ac].pmdg008) RETURNING g_pmdg_d[l_ac].pmdg008_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg008_desc
            IF NOT cl_null(g_pmdg_d[l_ac].pmdg008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg008 != g_pmdg_d_t.pmdg008 OR cl_null(g_pmdg_d_t.pmdg008))) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmdg_d[l_ac].pmdg008
   
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooca001") THEN
                     #檢查成功時後續處理 
                     #根據單位對數量與最低採購數量進行取位
                     IF NOT cl_null(g_pmdg_d[l_ac].pmdg007) OR NOT cl_null(g_pmdg_d[l_ac].pmdg013) THEN
                        CALL apmt420_pmdg008_round()
                     END IF
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdg_d[l_ac].pmdg008 = g_pmdg_d_t.pmdg008
                     CALL apmt420_pmdg008_ref(g_pmdg_d[l_ac].pmdg008) RETURNING g_pmdg_d[l_ac].pmdg008_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg008_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
]]>
</point>
  <point name="input.a.page1.pmdg010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmdg_d[l_ac].pmdg010) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg010 != g_pmdg_d_t.pmdg010 OR cl_null(g_pmdg_d_t.pmdg010))) THEN 
                  IF NOT cl_null(g_pmdf_m.pmdf005) THEN
                     #呼叫幣別取位應用元件對單價作取位(依單頭幣別做取位基準)
                     CALL s_curr_round(g_site,g_pmdf_m.pmdf005,g_pmdg_d[l_ac].pmdg010,'1') RETURNING g_pmdg_d[l_ac].pmdg010
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg010
                  END IF
               END IF                  
            END IF 
]]>
</point>
  <point name="input.a.page1.pmdg012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmdg_d[l_ac].pmdg012) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page1.pmdg013" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmdg_d[l_ac].pmdg013) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg013 != g_pmdg_d_t.pmdg013 OR cl_null(g_pmdg_d_t.pmdg013))) THEN
                  #根據單位對數量與最低採購數量進行取位
                  CALL apmt420_pmdg008_round()
               END IF            
            END IF 
]]>
</point>
  <point name="input.a.page1.pmdg014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdg014_ref(g_pmdg_d[l_ac].pmdg014) RETURNING g_pmdg_d[l_ac].pmdg014_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg014_desc
            IF NOT cl_null(g_pmdg_d[l_ac].pmdg014) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg014 != g_pmdg_d_t.pmdg014 OR cl_null(g_pmdg_d_t.pmdg014))) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmdg_d[l_ac].pmdg014
   
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oocq002_221") THEN
                     #檢查成功時後續處理
                     
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdg_d[l_ac].pmdg014 = g_pmdg_d_t.pmdg014
                     CALL apmt420_pmdg014_ref(g_pmdg_d[l_ac].pmdg014) RETURNING g_pmdg_d[l_ac].pmdg014_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg014_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
]]>
</point>
  <point name="input.a.page1.pmdg016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdg016_ref(g_pmdg_d[l_ac].pmdg016) RETURNING g_pmdg_d[l_ac].pmdg016_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg016_desc
            IF NOT cl_null(g_pmdg_d[l_ac].pmdg016) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg016 != g_pmdg_d_t.pmdg016 OR cl_null(g_pmdg_d_t.pmdg016))) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmdg_d[l_ac].pmdg016
   
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_oocq002_263") THEN
                     #檢查成功時後續處理 
                     
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdg_d[l_ac].pmdg016 = g_pmdg_d_t.pmdg016
                     CALL apmt420_pmdg016_ref(g_pmdg_d[l_ac].pmdg016) RETURNING g_pmdg_d[l_ac].pmdg016_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg016_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.pmdgseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmdf_m.pmdfdocno) AND NOT cl_null(g_pmdg_d[l_ac].pmdgseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdf_m.pmdfdocno != g_pmdfdocno_t OR g_pmdg_d[l_ac].pmdgseq != g_pmdg_d_t.pmdgseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdg_t WHERE "||"pmdgent = '" ||g_enterprise|| "' AND "||"pmdgdocno = '"||g_pmdf_m.pmdfdocno ||"' AND "|| "pmdgseq = '"||g_pmdg_d[l_ac].pmdgseq ||"'",'std-00004',0) THEN 
                     LET g_pmdg_d[l_ac].pmdgseq = g_pmdg_d_t.pmdgseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.pmdh001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page2.pmdh002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page2.pmdh003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmdg2_d[l_ac].pmdh003) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page2.pmdh004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_pmdg2_d[l_ac].pmdh004) THEN 
            END IF 
]]>
</point>
  <point name="input.a.page2.pmdhdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_pmdf_m.pmdfdocno IS NOT NULL AND g_pmdg2_d[g_detail_idx].pmdhdocno IS NOT NULL AND g_pmdg2_d[g_detail_idx].pmdhseq IS NOT NULL AND g_pmdg2_d[g_detail_idx].pmdh001 IS NOT NULL AND g_pmdg2_d[g_detail_idx].pmdh002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdf_m.pmdfdocno != g_pmdfdocno_t OR g_pmdg2_d[g_detail_idx].pmdhdocno != g_pmdg2_d_t.pmdhdocno OR g_pmdg2_d[g_detail_idx].pmdhseq != g_pmdg2_d_t.pmdhseq OR g_pmdg2_d[g_detail_idx].pmdh001 != g_pmdg2_d_t.pmdh001 OR g_pmdg2_d[g_detail_idx].pmdh002 != g_pmdg2_d_t.pmdh002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdh_t WHERE "||"pmdhent = '" ||g_enterprise|| "' AND "||"pmdhdocno = '"||g_pmdf_m.pmdfdocno ||"' AND "|| "pmdhseq = '"||g_pmdg2_d[g_detail_idx].pmdhdocno ||"' AND "|| "pmdh001 = '"||g_pmdg2_d[g_detail_idx].pmdhseq ||"' AND "|| "pmdh002 = '"||g_pmdg2_d[g_detail_idx].pmdh001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page2.pmdhseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pmdf_m.pmdfdocno) AND NOT cl_null(g_pmdg2_d[g_detail_idx].pmdhseq) AND NOT cl_null(g_pmdg2_d[g_detail_idx].pmdh001) AND NOT cl_null(g_pmdg2_d[g_detail_idx].pmdh002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmdf_m.pmdfdocno != g_pmdfdocno_t OR g_pmdg2_d[g_detail_idx].pmdhseq != g_pmdg2_d_t.pmdhseq OR g_pmdg2_d[g_detail_idx].pmdh001 != g_pmdg2_d_t.pmdh001 OR g_pmdg2_d[g_detail_idx].pmdh002 != g_pmdg2_d_t.pmdh002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdh_t WHERE "||"pmdhent = '" ||g_enterprise|| "' AND "||"pmdhdocno = '"||g_pmdf_m.pmdfdocno ||"' AND "|| "pmdhseq = '"||g_pmdg2_d[g_detail_idx].pmdhseq ||"' AND "|| "pmdh001 = '"||g_pmdg2_d[g_detail_idx].pmdh001 ||"' AND "|| "pmdh002 = '"||g_pmdg2_d[g_detail_idx].pmdh002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.pmdf002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf002_ref(g_pmdf_m.pmdf002) RETURNING g_pmdf_m.pmdf002_desc
            DISPLAY BY NAME g_pmdf_m.pmdf002_desc
            
            IF NOT cl_null(g_pmdf_m.pmdf002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmdf_m.pmdf002 != g_pmdf_m_t.pmdf002 OR cl_null(g_pmdf_m_t.pmdf002))) THEN
                  #此段落由子樣板a19產生
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmdf_m.pmdf002
   
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN
                     #檢查成功時後續處理
                     SELECT ooag003 INTO g_pmdf_m.pmdf003 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_pmdf_m.pmdf002
                     CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
                     DISPLAY BY NAME g_pmdf_m.pmdf003_desc                      
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdf_m.pmdf002 = g_pmdf_m_t.pmdf002
                     CALL apmt420_pmdf002_ref(g_pmdf_m.pmdf002) RETURNING g_pmdf_m.pmdf002_desc
                     DISPLAY BY NAME g_pmdf_m.pmdf002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
]]>
</point>
  <point name="input.a.pmdf003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
            DISPLAY BY NAME g_pmdf_m.pmdf003_desc  
            
            IF NOT cl_null(g_pmdf_m.pmdf003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmdf_m.pmdf003
               LET g_chkparam.arg2 = g_pmdf_m.pmdfdocdt

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_pmdf_m.pmdf003 = g_pmdf_m_t.pmdf003
                  CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
                  DISPLAY BY NAME g_pmdf_m.pmdf003_desc 
                  NEXT FIELD CURRENT
               END IF           
            END IF 
]]>
</point>
  <point name="input.a.pmdf004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf004_ref(g_pmdf_m.pmdf004) RETURNING g_pmdf_m.pmdf004_desc
            DISPLAY BY NAME g_pmdf_m.pmdf004_desc
            
            IF NOT cl_null(g_pmdf_m.pmdf004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmdf_m.pmdf004 != g_pmdf_m_t.pmdf004 OR cl_null(g_pmdf_m_t.pmdf004))) THEN
                  IF NOT apmt420_pmdf004_chk(g_pmdf_m.pmdf004) THEN
                     LET g_pmdf_m.pmdf004 = g_pmdf_m_t.pmdf004
                     CALL apmt420_pmdf004_ref(g_pmdf_m.pmdf004) RETURNING g_pmdf_m.pmdf004_desc
                     DISPLAY BY NAME g_pmdf_m.pmdf004_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF g_pmdf_m.pmdf004 != g_pmdf_m_t.pmdf004 OR cl_null(g_pmdf_m_t.pmdf004) THEN
                     #根據供應商帶欄位預設值
                     CALL apmt420_pmdf004_desc()
                   END IF
               END IF
            END IF 
            CALL apmt420_set_entry(p_cmd)
            CALL apmt420_set_no_entry(p_cmd)
]]>
</point>
  <point name="input.a.pmdf005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf005_ref(g_pmdf_m.pmdf005) RETURNING g_pmdf_m.pmdf005_desc
            DISPLAY BY NAME g_pmdf_m.pmdf005_desc 
            IF NOT cl_null(g_pmdf_m.pmdf005) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmdf_m.pmdf005 != g_pmdf_m_t.pmdf005 OR cl_null(g_pmdf_m_t.pmdf005))) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_pmdf_m.pmdf005
   
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooaj002") THEN
                     #檢查成功時後續處理
                     #呼叫幣別取位應用元件對單價作取位(依單頭幣別做取位基準),更新单身及子作业中的单价
                     LET l_pmdgseq = 0
                     LET l_pmdg010 = 0
                     DECLARE pmdf005_cs CURSOR FOR 
                         SELECT pmdgseq,pmdg010 FROM pmdg_t WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno
                     FOREACH pmdf005_cs INTO l_pmdgseq,l_pmdg010
                        CALL s_curr_round(g_site,g_pmdf_m.pmdf005,l_pmdg010,'1') RETURNING l_pmdg010
                        UPDATE pmdg_t SET pmdg010 = l_pmdg010 
                          WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno
                            AND pmdgseq = l_pmdgseq
                     END FOREACH
                     CALL apmt420_b_fill()
                     #更新子作业中的单价
                     LET l_pmdhseq = 0
                     LET l_pmdh003 = 0
                     LET l_pmdh001 = 0
                     LET l_pmdh002 = 0
                     DECLARE pmdf005_cs2 CURSOR FOR 
                         SELECT pmdhseq,pmdh001,pmdh002,pmdh003 FROM pmdh_t WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno
                     FOREACH pmdf005_cs2 INTO l_pmdhseq,l_pmdh001,l_pmdh002,l_pmdh003
                        CALL s_curr_round(g_site,g_pmdf_m.pmdf005,l_pmdh003,'1') RETURNING l_pmdh003
                        UPDATE pmdh_t SET pmdh003 = l_pmdh003 
                          WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno
                            AND pmdhseq = l_pmdhseq AND pmdh001 = l_pmdh001 AND pmdh002 = l_pmdh002
                     END FOREACH   
                     CALL apmt420_pmdh_fill()                     
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdf_m.pmdf005 = g_pmdf_m_t.pmdf005
                     CALL apmt420_pmdf005_ref(g_pmdf_m.pmdf005) RETURNING g_pmdf_m.pmdf005_desc
                     DISPLAY BY NAME g_pmdf_m.pmdf005_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
]]>
</point>
  <point name="input.a.pmdf006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf006_ref(g_pmdf_m.pmdf006) RETURNING g_pmdf_m.pmdf006_desc
            DISPLAY BY NAME g_pmdf_m.pmdf006_desc 
            IF NOT cl_null(g_pmdf_m.pmdf006) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmdf_m.pmdf006 != g_pmdf_m_t.pmdf006 OR cl_null(g_pmdf_m_t.pmdf006))) THEN
                  #此段落由子樣板a19產生
                  CALL s_tax_chk(g_site,g_pmdf_m.pmdf006)
                        RETURNING l_success,g_pmdf_m.pmdf006_desc,g_pmdf_m.pmdf008,g_pmdf_m.pmdf007,l_oodb011
                     DISPLAY BY NAME g_pmdf_m.pmdf008,g_pmdf_m.pmdf007
                  IF NOT l_success THEN
                     LET g_pmdf_m.pmdf006 = g_pmdf_m_t.pmdf006
                     CALL apmt420_pmdf006_ref(g_pmdf_m.pmdf006) RETURNING g_pmdf_m.pmdf006_desc
                     DISPLAY BY NAME g_pmdf_m.pmdf006_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
]]>
</point>
  <point name="input.a.pmdf009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf009_ref(g_pmdf_m.pmdf009) RETURNING g_pmdf_m.pmdf009_desc
            DISPLAY BY NAME g_pmdf_m.pmdf009_desc 
            IF NOT cl_null(g_pmdf_m.pmdf009) THEN 
               #如果供應商欄位有值，則要判斷當前付款條件是否在供應商付款條件中
               IF NOT cl_null(g_pmdf_m.pmdf004) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmdf_m.pmdf004
                  LET g_chkparam.arg2 = g_pmdf_m.pmdf009
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmad002_1") THEN
                     #檢查成功時後續處理
                     
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdf_m.pmdf009 = g_pmdf_m_t.pmdf009
                     CALL apmt420_pmdf009_ref(g_pmdf_m.pmdf009) RETURNING g_pmdf_m.pmdf009_desc
                     DISPLAY BY NAME g_pmdf_m.pmdf009_desc 
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  #如果供應商欄位沒有值，則需判斷當前付款條件是否在付款條件檔 中
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmdf_m.pmdf009
       
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooib002") THEN
                     #檢查成功時後續處理
                     
                  ELSE
                     #檢查失敗時後續處理
                     LET g_pmdf_m.pmdf009 = g_pmdf_m_t.pmdf009
                     CALL apmt420_pmdf009_ref(g_pmdf_m.pmdf009) RETURNING g_pmdf_m.pmdf009_desc
                     DISPLAY BY NAME g_pmdf_m.pmdf009_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF   
            END IF 
]]>
</point>
  <point name="input.a.pmdf010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf010_ref(g_pmdf_m.pmdf010) RETURNING g_pmdf_m.pmdf010_desc
            DISPLAY BY NAME g_pmdf_m.pmdf010_desc 
            IF NOT cl_null(g_pmdf_m.pmdf010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmdf_m.pmdf010

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_238") THEN
                  #檢查成功時後續處理
                  
               ELSE
                  #檢查失敗時後續處理
                  LET g_pmdf_m.pmdf010 = g_pmdf_m_t.pmdf010
                  CALL apmt420_pmdf010_ref(g_pmdf_m.pmdf010) RETURNING g_pmdf_m.pmdf010_desc
                  DISPLAY BY NAME g_pmdf_m.pmdf010_desc 
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
</point>
  <point name="input.a.pmdfdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL apmt420_get_oobal004(g_pmdf_m.pmdfdocno) RETURNING g_pmdf_m.pmdfdocno_desc
            DISPLAY BY NAME g_pmdf_m.pmdfdocno_desc
            
            IF  NOT cl_null(g_pmdf_m.pmdfdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmdf_m.pmdfdocno != g_pmdfdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pmdf_t WHERE "||"pmdfent = '" ||g_enterprise|| "' AND "||"pmdfdocno = '"||g_pmdf_m.pmdfdocno ||"'",'std-00004',0) THEN 
                     LET g_pmdf_m.pmdfdocno = g_pmdf_m_t.pmdfdocno
                     CALL apmt420_get_oobal004(g_pmdf_m.pmdfdocno) RETURNING g_pmdf_m.pmdfdocno_desc
                     DISPLAY BY NAME g_pmdf_m.pmdfdocno_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT s_aooi200_chk_slip(g_site,'',g_pmdf_m.pmdfdocno,g_prog) THEN
                     LET g_pmdf_m.pmdfdocno = g_pmdf_m_t.pmdfdocno
                     CALL apmt420_get_oobal004(g_pmdf_m.pmdfdocno) RETURNING g_pmdf_m.pmdfdocno_desc
                     DISPLAY BY NAME g_pmdf_m.pmdfdocno_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL apmt420_get_col_default()
               END IF
            END IF


]]>
</point>
  <point name="input.c.page1.pmdg002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
			
			LET g_qryparam.where = "1=1 "
            LET l_sql = ''
            CALL s_control_get_doc_sql("pmaa083",g_pmdf_m.pmdfdocno,'2') RETURNING l_success,l_sql
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql
            END IF

            LET g_qryparam.default1 = g_pmdg_d[l_ac].pmdg002             #給予default值

            #給予arg

            CALL q_pmaa001_3()                                #呼叫開窗
            LET g_qryparam.where = " "

            LET g_pmdg_d[l_ac].pmdg002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdg_d[l_ac].pmdg002 TO pmdg002              #顯示到畫面上
            CALL apmt420_pmdf004_ref(g_pmdg_d[l_ac].pmdg002) RETURNING g_pmdg_d[l_ac].pmdg002_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg002_desc
  
            NEXT FIELD pmdg002                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.pmdg003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdg_d[l_ac].pmdg003             #給予default值
            LET g_qryparam.where = "1=1 "
            LET l_sql1 = ''
            CALL s_control_get_doc_sql("imaf016",g_pmdf_m.pmdfdocno,'4') RETURNING l_success,l_sql1
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql1
            END IF

            LET l_sql2 = ''
            CALL s_control_get_doc_sql("imaa009",g_pmdf_m.pmdfdocno,'5') RETURNING l_success,l_sql2
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql2
            END IF
            
            
            #LET g_qryparam.where = " SELECT imaf001 FROM imaf_t WHERE imafent = '",g_enterprise,"' AND imafsite = '",g_site,"' "
            #
            ##獲取單據別
			#LET l_ooba002 = ''
			#CALL s_aooi200_get_slip(g_pmdf_m.pmdfdocno) RETURNING l_success,l_ooba002
			##獲取單號的營運據點
			#LET l_site = ''
			#CALL s_aooi200_get_site(g_pmdf_m.pmdfdocno) RETURNING l_success,l_site
			##獲取參照表編號
			#LET l_ooef004 = ''
			#SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef005 = l_site
			#
			##判斷是否有設定生命週期範圍
			#LET l_n = 0
			#SELECT COUNT(oobd004) INTO l_n FROM ooba_t,oobd_t WHERE oobaent=oobdent AND ooba001=oobd001 AND ooba002=oobd002 
            #    AND oobaent = g_enterprise AND ooba001 = l_ooef004 AND ooba002 = l_ooba002 AND oobd003='210'
            #IF l_n > 0 THEN
            #   LET g_qryparam.where = g_qryparam.where," AND imaf016 IN (SELECT oobd004 FROM oobd_t WHERE oobdent = '",g_enterprise,"' AND oobd001 = '",l_ooef004,"' AND oobd002 = '",l_ooba002,"' AND oobd003 = '210') "
            #END IF
            #
            #LET g_qryparam.where = " imaa001 IN ( ",g_qryparam.where,")" 
            #
            #
            ##判斷是否在產品分類設定範圍內
            #LET l_n = 0
            #SELECT COUNT(oobh003) INTO l_n FROM ooba_t,oobh_t WHERE oobaent=oobhent AND ooba001=oobh001 AND ooba002=oobh002
            #    AND oobaent = g_enterprise AND ooba001 = l_ooef004 AND ooba002 = l_ooba002
            #IF l_n > 0 THEN
            #   LET l_ooba014 = ''
            #   SELECT ooba014 INTO l_ooba014 FROM ooba_t WHERE oobaent = g_enterprise AND ooba001 = l_ooef004 AND ooba002 = l_ooba002
            #   #正向列表
            #   IF l_ooba014 = '1' THEN
            #      LET g_qryparam.where = g_qryparam.where," AND imaa009 IN (SELECT oobh003 FROM oobh_t WHERE oobhent = '",g_enterprise,"' AND oobh001 = '",l_ooef004,"' AND oobh002 = '",l_ooba002,"' ) "
            #   END IF
            #   
            #   #負向列表
            #   IF l_ooba014 = '2' THEN
            #      LET g_qryparam.where = g_qryparam.where," AND imaa009 NOT IN (SELECT oobh003 FROM oobh_t WHERE oobhent = '",g_enterprise,"' AND oobh001 = '",l_ooef004,"' AND oobh002 = '",l_ooba002,"' ) "
            #   END IF
            #END IF 

            #給予arg

            CALL q_imaf001()                                #呼叫開窗
            LET g_qryparam.where = " "

            LET g_pmdg_d[l_ac].pmdg003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdg_d[l_ac].pmdg003 TO pmdg003              #顯示到畫面上
            CALL apmt420_pmdg003_ref(g_pmdg_d[l_ac].pmdg003) RETURNING g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
   
            NEXT FIELD pmdg003                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.pmdg005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdg_d[l_ac].pmdg005             #給予default值
            

            #給予arg

            CALL q_imaf001_12()                                #呼叫開窗

            LET g_pmdg_d[l_ac].pmdg005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            CALL apmt420_pmdg005_ref(g_pmdg_d[l_ac].pmdg005) RETURNING g_pmdg_d[l_ac].pmdg005_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg005_desc
 
            DISPLAY g_pmdg_d[l_ac].pmdg005 TO pmdg005              #顯示到畫面上
            

            NEXT FIELD pmdg005                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.pmdg008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdg_d[l_ac].pmdg008             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_pmdg_d[l_ac].pmdg008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdg_d[l_ac].pmdg008 TO pmdg008              #顯示到畫面上
            CALL apmt420_pmdg008_ref(g_pmdg_d[l_ac].pmdg008) RETURNING g_pmdg_d[l_ac].pmdg008_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg008_desc            

            NEXT FIELD pmdg008                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.pmdg014" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdg_d[l_ac].pmdg014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "221" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_pmdg_d[l_ac].pmdg014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdg_d[l_ac].pmdg014 TO pmdg014              #顯示到畫面上
            CALL apmt420_pmdg014_ref(g_pmdg_d[l_ac].pmdg014) RETURNING g_pmdg_d[l_ac].pmdg014_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg014_desc           

            NEXT FIELD pmdg014                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.pmdg016" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdg_d[l_ac].pmdg016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "263" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_pmdg_d[l_ac].pmdg016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdg_d[l_ac].pmdg016 TO pmdg016              #顯示到畫面上
            CALL apmt420_pmdg016_ref(g_pmdg_d[l_ac].pmdg016) RETURNING g_pmdg_d[l_ac].pmdg016_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg016_desc

            NEXT FIELD pmdg016                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdf002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdf_m.pmdf002             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_pmdf_m.pmdf002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdf_m.pmdf002 TO pmdf002              #顯示到畫面上
            CALL apmt420_pmdf002_ref(g_pmdf_m.pmdf002) RETURNING g_pmdf_m.pmdf002_desc
            DISPLAY BY NAME g_pmdf_m.pmdf002_desc
            
            NEXT FIELD pmdf002                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdf003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdf_m.pmdf003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_pmdf_m.pmdfdocdt #

            CALL q_ooeg001()                                #呼叫開窗

            LET g_pmdf_m.pmdf003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdf_m.pmdf003 TO pmdf003              #顯示到畫面上
            CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
            DISPLAY BY NAME g_pmdf_m.pmdf003_desc
                        
            NEXT FIELD pmdf003                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdf004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
			
			LET g_qryparam.where = "1=1 "
            LET l_sql = ''
            CALL s_control_get_doc_sql("pmaa083",g_pmdf_m.pmdfdocno,'2') RETURNING l_success,l_sql
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql
            END IF

            LET g_qryparam.default1 = g_pmdf_m.pmdf004             #給予default值

            #給予arg

            CALL q_pmaa001_3()                                #呼叫開窗
            LET g_qryparam.where = " "

            LET g_pmdf_m.pmdf004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdf_m.pmdf004 TO pmdf004              #顯示到畫面上
            CALL apmt420_pmdf004_ref(g_pmdf_m.pmdf004) RETURNING g_pmdf_m.pmdf004_desc
            DISPLAY BY NAME g_pmdf_m.pmdf004_desc
            

            NEXT FIELD pmdf004                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdf005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdf_m.pmdf005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #

            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_pmdf_m.pmdf005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdf_m.pmdf005 TO pmdf005              #顯示到畫面上
            CALL apmt420_pmdf005_ref(g_pmdf_m.pmdf005) RETURNING g_pmdf_m.pmdf005_desc
            DISPLAY BY NAME g_pmdf_m.pmdf005_desc

            NEXT FIELD pmdf005                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdf006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdf_m.pmdf006             #給予default值

            #給予arg

            CALL q_oodb002_2()                                #呼叫開窗

            LET g_pmdf_m.pmdf006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdf_m.pmdf006 TO pmdf006              #顯示到畫面上
            CALL apmt420_pmdf006_ref(g_pmdf_m.pmdf006) RETURNING g_pmdf_m.pmdf006_desc
            DISPLAY BY NAME g_pmdf_m.pmdf006_desc            
            
            NEXT FIELD pmdf006                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdf009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdf_m.pmdf009             #給予default值

            #給予arg
            IF NOT cl_null(g_pmdf_m.pmdf004) THEN
               LET g_qryparam.arg1 = g_pmdf_m.pmdf004 #
               CALL q_pmad002_2()                                #呼叫開窗
            ELSE
               CALL q_ooib002_1()
            END IF

            LET g_pmdf_m.pmdf009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdf_m.pmdf009 TO pmdf009              #顯示到畫面上
            CALL apmt420_pmdf009_ref(g_pmdf_m.pmdf009) RETURNING g_pmdf_m.pmdf009_desc
            DISPLAY BY NAME g_pmdf_m.pmdf009_desc         

            NEXT FIELD pmdf009                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdf010" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdf_m.pmdf010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '238' #

            CALL q_oocq002()                                #呼叫開窗

            LET g_pmdf_m.pmdf010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdf_m.pmdf010 TO pmdf010              #顯示到畫面上
            CALL apmt420_pmdf010_ref(g_pmdf_m.pmdf010) RETURNING g_pmdf_m.pmdf010_desc
            DISPLAY BY NAME g_pmdf_m.pmdf010_desc

            NEXT FIELD pmdf010                          #返回原欄位

]]>
</point>
  <point name="input.c.pmdfdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdf_m.pmdfdocno             #給予default值

            #給予arg
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_pmdf_m.pmdfdocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            CALL apmt420_get_oobal004(g_pmdf_m.pmdfdocno) RETURNING g_pmdf_m.pmdfdocno_desc
            DISPLAY BY NAME g_pmdf_m.pmdfdocno_desc

            DISPLAY g_pmdf_m.pmdfdocno TO pmdfdocno              #顯示到畫面上

            NEXT FIELD pmdfdocno                          #返回原欄位

]]>
</point>
  <point name="show.body.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #CALL apmt420_pmdf004_ref(g_pmdg_d[l_ac].pmdg002) RETURNING g_pmdg_d[l_ac].pmdg002_desc
            #DISPLAY BY NAME g_pmdg_d[l_ac].pmdg002_desc

            CALL apmt420_pmdg003_ref(g_pmdg_d[l_ac].pmdg003) RETURNING g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].imaal004

            #CALL apmt420_pmdg005_ref(g_pmdg_d[l_ac].pmdg005) RETURNING g_pmdg_d[l_ac].pmdg005_desc
            #DISPLAY BY NAME g_pmdg_d[l_ac].pmdg005_desc
            #
            #CALL apmt420_pmdg014_ref(g_pmdg_d[l_ac].pmdg014) RETURNING g_pmdg_d[l_ac].pmdg014_desc
            #DISPLAY BY NAME g_pmdg_d[l_ac].pmdg014_desc
            #
            #CALL apmt420_pmdg008_ref(g_pmdg_d[l_ac].pmdg008) RETURNING g_pmdg_d[l_ac].pmdg008_desc
            #DISPLAY BY NAME g_pmdg_d[l_ac].pmdg008_desc
            #
            #CALL apmt420_pmdg016_ref(g_pmdg_d[l_ac].pmdg016) RETURNING g_pmdg_d[l_ac].pmdg016_desc
            #DISPLAY BY NAME g_pmdg_d[l_ac].pmdg016_desc
            
            CALL apmt420_pmdf006_ref(g_pmdg_d[l_ac].pmdg018) RETURNING g_pmdg_d[l_ac].pmdg018_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg018_desc
]]>
</point>
  <point name="show.head.reference" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdfdocno_ref(g_pmdf_m.pmdfdocno) RETURNING g_pmdf_m.pmdfdocno_desc
            DISPLAY BY NAME g_pmdf_m.pmdfdocno_desc
            
            #CALL apmt420_pmdf002_ref(g_pmdf_m.pmdf002) RETURNING g_pmdf_m.pmdf002_desc
            #DISPLAY BY NAME g_pmdf_m.pmdf002_desc
            #
            #CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
            #DISPLAY BY NAME g_pmdf_m.pmdf003_desc
            #
            #CALL apmt420_pmdf004_ref(g_pmdf_m.pmdf004) RETURNING g_pmdf_m.pmdf004_desc
            #DISPLAY BY NAME g_pmdf_m.pmdf004_desc
            #
            #CALL apmt420_pmdf005_ref(g_pmdf_m.pmdf005) RETURNING g_pmdf_m.pmdf005_desc
            #DISPLAY BY NAME g_pmdf_m.pmdf005_desc
            
            CALL apmt420_pmdf006_ref(g_pmdf_m.pmdf006) RETURNING g_pmdf_m.pmdf006_desc
            DISPLAY BY NAME g_pmdf_m.pmdf006_desc
            
            #CALL apmt420_pmdf009_ref(g_pmdf_m.pmdf009) RETURNING g_pmdf_m.pmdf009_desc
            #DISPLAY BY NAME g_pmdf_m.pmdf009_desc
            #
            #CALL apmt420_pmdf010_ref(g_pmdf_m.pmdf010) RETURNING g_pmdf_m.pmdf010_desc
            #DISPLAY BY NAME g_pmdf_m.pmdf010_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfcnfid_desc

]]>
</point>
  <point name="function.apmt420_reproduce_init" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#複製功能單頭初始化
PRIVATE FUNCTION apmt420_reproduce_init()
      LET g_pmdf_m.pmdfdocno = ''
      LET g_pmdf_m.pmdfdocno_desc = ''
      LET g_pmdf_m.pmdfdocdt = g_today
      DISPLAY BY NAME g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocno_desc,g_pmdf_m.pmdfdocdt
      LET g_pmdf_m.pmdfstus = 'N'
      CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
      DISPLAY BY NAME g_pmdf_m.pmdfstus
      LET g_pmdf_m.pmdf002 = g_user
      LET g_pmdf_m.pmdf003 = g_dept
      CALL apmt420_pmdf002_ref(g_pmdf_m.pmdf002) RETURNING g_pmdf_m.pmdf002_desc
      DISPLAY BY NAME g_pmdf_m.pmdf002,g_pmdf_m.pmdf002_desc
      
      CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
      DISPLAY BY NAME g_pmdf_m.pmdf003,g_pmdf_m.pmdf003_desc
      
      LET g_pmdf_m.pmdfownid = g_user
      LET g_pmdf_m.pmdfowndp = g_dept
      LET g_pmdf_m.pmdfcrtid = g_user
      LET g_pmdf_m.pmdfcrtdp = g_dept 
      LET g_pmdf_m.pmdfcrtdt = cl_get_current()
      LET g_pmdf_m.pmdfmodid = NULL
      LET g_pmdf_m.pmdfmodid_desc = NULL
      LET g_pmdf_m.pmdfmoddt = NULL
      LET g_pmdf_m.pmdfcnfid = NULL
      LET g_pmdf_m.pmdfcnfid_desc = NULL
      LET g_pmdf_m.pmdfcnfdt = NULL
      
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfownid_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmdf_m.pmdfcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmdf_m.pmdfcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmdf_m.pmdfcrtdp_desc


            DISPLAY BY NAME g_pmdf_m.pmdfownid,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtid_desc,g_pmdf_m.pmdfcrtdp,g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfid_desc,g_pmdf_m.pmdfcnfdt
   
      
      INITIALIZE g_pmdf_m_t.* TO NULL
      LET g_pmdf_m_t.* = g_pmdf_m.*
               
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdfdocno_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#已經自動編號過的單據編號，抓取對應的單據別說明
PRIVATE FUNCTION apmt420_pmdfdocno_ref(p_pmdfdocno)
DEFINE p_pmdfdocno    LIKE pmdf_t.pmdfdocno
DEFINE l_oobal002     LIKE oobal_t.oobal002
DEFINE l_ooef004      LIKE ooef_t.ooef004
DEFINE r_pmdfdocno_desc  LIKE oobal_t.oobal004
DEFINE l_flag          LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_flag1         LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_site          LIKE type_t.chr20


      LET l_flag = TRUE
      LET l_flag1 = TRUE
      LET l_ooef004 = NULL
      LET l_oobal002 = NULL
      IF NOT cl_null(p_pmdfdocno) THEN
         CALL s_aooi200_get_site(p_pmdfdocno) RETURNING l_flag,l_site
         IF l_flag THEN
            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooef005 = l_site
               AND ooefent = g_enterprise
         END IF
         CALL s_aooi200_get_slip(p_pmdfdocno) RETURNING l_flag1,l_oobal002
         IF l_flag1 THEN
            IF NOT cl_null(l_oobal002) AND NOT cl_null(l_ooef004) THEN
               SELECT oobal004 INTO r_pmdfdocno_desc FROM oobal_t
                WHERE oobal001 = l_ooef004
                  AND oobal002 = l_oobal002
                  AND oobal003 = g_dlang
                  AND oobalent = g_enterprise
            ELSE
               LET r_pmdfdocno_desc = ""
            END IF
         END IF
      ELSE
         LET r_pmdfdocno_desc = ""
      END IF

      RETURN r_pmdfdocno_desc
      
END FUNCTION]]>
</point>
  <point name="function.apmt420_get_oobal004" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[#未自動編號的單據別，抓取對應的說明
PRIVATE FUNCTION apmt420_get_oobal004(p_pmdfdocno)
DEFINE p_pmdfdocno    LIKE pmdf_t.pmdfdocno
DEFINE r_pmdfdocno_desc  LIKE oobal_t.oobal004

      IF NOT cl_null(p_pmdfdocno) THEN
         SELECT oobal004 INTO r_pmdfdocno_desc FROM oobal_t,ooef_t
          WHERE ooef001 = g_site AND ooefent = oobalent
            AND oobal001 = ooef004
            AND oobal002 = p_pmdfdocno
            AND oobal003 = g_dlang
            AND oobalent = g_enterprise
      END IF
   
      RETURN r_pmdfdocno_desc
   
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf004_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf004_chk(p_pmdf004)
DEFINE p_pmdf004    LIKE pmdf_t.pmdf004
DEFINE l_success    LIKE type_t.num5
DEFINE l_flag       LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5

      LET r_success = TRUE
      
      IF NOT cl_null(p_pmdf004) THEN
         #檢核輸入的供應商是否在單據別限制範圍內，若不在限制內則不允許跟此供應商採購
         CALL s_control_chk_doc('2',g_pmdf_m.pmdfdocno,p_pmdf004,'','','','') RETURNING l_success,l_flag
         IF NOT l_success THEN
            LET r_success = FALSE
            RETURN r_success
         ELSE
            IF NOT l_flag THEN
               CALL cl_err(p_pmdf004,'apm-00239',1)
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
         
         #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
         INITIALIZE g_chkparam.* TO NULL
         
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = p_pmdf004

            
         #呼叫檢查存在並帶值的library
         IF cl_chk_exist("v_pmaa001_1") THEN
            #檢查成功時後續處理             
         ELSE
            #檢查失敗時後續處理
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      RETURN r_success
      
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf004_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf004_ref(p_pmdf004)
DEFINE p_pmdf004     LIKE pmdf_t.pmdf004
DEFINE r_pmaal004    LIKE pmaal_t.pmaal004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdf004
       CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmaal004 = '', g_rtn_fields[1] , ''
       RETURN r_pmaal004
       
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf005_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf005_ref(p_pmdf005)
DEFINE p_pmdf005      LIKE pmdf_t.pmdf005
DEFINE r_pmdf005_desc LIKE ooail_t.ooail003

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdf005
       CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdf005_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmdf005_desc
     
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf006_ref" cite_std="N" status="u" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf006_ref(p_pmdf006)
DEFINE p_pmdf006      LIKE pmdf_t.pmdf006
DEFINE r_pmdf006_desc LIKE oodbl_t.oodbl004
DEFINE l_ooef019      LIKE ooef_t.ooef019

       LET l_ooef019 = ''
       SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
       
       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdf006
       CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdf006_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmdf006_desc
      
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf009_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf009_ref(p_pmdf009)
DEFINE p_pmdf009      LIKE pmdf_t.pmdf009
DEFINE r_pmdf009_desc LIKE ooibl_t.ooibl004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdf009
       CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdf009_desc = g_rtn_fields[1]
       RETURN r_pmdf009_desc
    
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf010_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf010_ref(p_pmdf010)
DEFINE p_pmdf010      LIKE pmdf_t.pmdf010
DEFINE r_pmdf010_desc LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdf010
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdf010_desc = g_rtn_fields[1]
       RETURN r_pmdf010_desc
   
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf002_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="10" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf002_ref(p_pmdf002)
DEFINE p_pmdf002      LIKE pmdf_t.pmdf002
DEFINE r_pmdf002_desc LIKE oofa_t.oofa011

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdf002
       CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
       LET r_pmdf002_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmdf002_desc

END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf003_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="11" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdf003_ref(p_pmdf003)
DEFINE p_pmdf003      LIKE pmdf_t.pmdf003
DEFINE r_pmdf003_desc LIKE oofa_t.oofa011

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdf003
       CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdf003_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmdf003_desc

END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdg003_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="12" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdg003_ref(p_pmdg003)
DEFINE p_pmdg003      LIKE pmdg_t.pmdg003
DEFINE r_imaal003     LIKE imaal_t.imaal003
DEFINE r_imaal004     LIKE imaal_t.imaal004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdg003
       CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_imaal003 = '', g_rtn_fields[1] , ''
       LET r_imaal004 = '', g_rtn_fields[2] , ''
       RETURN r_imaal003,r_imaal004

END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdg005_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="13" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdg005_ref(p_pmdg005)
DEFINE p_pmdg005      LIKE pmdg_t.pmdg005
DEFINE r_imaal003     LIKE imaal_t.imaal003

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdg005
       CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_imaal003 = '', g_rtn_fields[1] , ''
       RETURN r_imaal003

END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdg014_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="14" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdg014_ref(p_pmdg014)
DEFINE p_pmdg014      LIKE pmdg_t.pmdg014
DEFINE r_pmdg014_desc LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdg014
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdg014_desc = g_rtn_fields[1]
       RETURN r_pmdg014_desc
   
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdg008_round" cite_std="N" status="" ver="1" src="s" new="Y" order="15" mark_hard="N">
<![CDATA[#呼叫單位取位的應用元件對數量與最低採購數量進行取位
PRIVATE FUNCTION apmt420_pmdg008_round()
DEFINE l_success   LIKE type_t.num5
DEFINE l_ooca002   LIKE ooca_t.ooca002      #小数位数
DEFINE l_ooca004   LIKE ooca_t.ooca004      #舍入类型 
        
       LET l_success = NULL
       LET l_ooca002 = 0
       LET l_ooca004 = NULL
       
       #抓取单位档中的小数位数和舍入类型
       IF NOT cl_null(g_pmdg_d[l_ac].pmdg008) THEN
          CALL s_aooi250_get_msg(g_pmdg_d[l_ac].pmdg008) RETURNING l_success,l_ooca002,l_ooca004
          IF l_success THEN
             IF NOT cl_null(g_pmdg_d[l_ac].pmdg007) THEN
                CALL s_num_round(l_ooca004,g_pmdg_d[l_ac].pmdg007,l_ooca002) RETURNING g_pmdg_d[l_ac].pmdg007
                DISPLAY BY NAME g_pmdg_d[l_ac].pmdg007
             END IF
             IF NOT cl_null(g_pmdg_d[l_ac].pmdg013) THEN
                CALL s_num_round(l_ooca004,g_pmdg_d[l_ac].pmdg013,l_ooca002) RETURNING g_pmdg_d[l_ac].pmdg013
                DISPLAY BY NAME g_pmdg_d[l_ac].pmdg013
             END IF
          END IF
       END IF
       
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdg008_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="16" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdg008_ref(p_pmdg008)
DEFINE p_pmdg008      LIKE pmdg_t.pmdg008
DEFINE r_pmdg008_desc LIKE oocal_t.oocal003

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdg008
       CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdg008_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmdg008_desc

END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdg016_ref" cite_std="N" status="" ver="1" src="s" new="Y" order="17" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdg016_ref(p_pmdg016)
DEFINE p_pmdg016      LIKE pmdg_t.pmdg016
DEFINE r_pmdg016_desc LIKE oocql_t.oocql004

       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = p_pmdg016
       CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET r_pmdg016_desc = '', g_rtn_fields[1] , ''
       RETURN r_pmdg016_desc

END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdg003_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="18" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdg003_chk(p_pmdg003)
DEFINE p_pmdg003    LIKE pmdg_t.pmdg003
DEFINE l_success    LIKE type_t.num5
DEFINE l_flag       LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5
  
      LET r_success = TRUE
      
      IF NOT cl_null(p_pmdg003) THEN
         #檢核輸入的料件的生命週期是否在單據別限制範圍內，若不在限制內則不允許請購此料
         CALL s_control_chk_doc('4',g_pmdf_m.pmdfdocno,p_pmdg003,'','','','') RETURNING l_success,l_flag
         IF NOT l_success THEN
            LET r_success = FALSE
            RETURN r_success
         ELSE
            IF NOT l_flag THEN
               CALL cl_err(p_pmdg003,'ain-00015',1)
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
         
         #檢核輸入的料件的產品分類是否在單據別限制範圍內，若不在限制內則不允許請購此料
         CALL s_control_chk_doc('5',g_pmdf_m.pmdfdocno,g_pmdg_d[l_ac].pmdg003,'','','','') RETURNING l_success,l_flag
         IF NOT l_success THEN
            LET r_success = FALSE
            RETURN r_success
         ELSE
            IF NOT l_flag THEN
               #CALL cl_err(p_pmdg003,'apm-00238',1)
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF

         #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
         INITIALIZE g_chkparam.* TO NULL
         
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = g_pmdg_d[l_ac].pmdg003
           
         #呼叫檢查存在並帶值的library
         IF cl_chk_exist("v_imaa001") THEN
            IF NOT cl_chk_exist("v_imaf001_1") THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
         ELSE
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      RETURN r_success
            
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdh_fill" cite_std="N" status="" ver="1" src="s" new="Y" order="19" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION apmt420_pmdh_fill()
DEFINE li_ac           LIKE type_t.num5

       CALL g_pmdg2_d.clear()

       LET g_sql = "SELECT  UNIQUE pmdhseq,pmdh001,pmdh002,pmdh003,pmdh004 FROM pmdh_t",    
                   "",
                   " WHERE pmdhent=? AND pmdhdocno=? "
       
       IF NOT cl_null(g_wc2_table2) THEN
          LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
       END IF
       
       LET g_sql = g_sql, " ORDER BY  pmdh_t.pmdhseq,pmdh_t.pmdh001,pmdh_t.pmdh002" 
       
       PREPARE apmt420_pb3 FROM g_sql
       DECLARE b_fill_curs3 CURSOR FOR apmt420_pb3
       
       OPEN b_fill_curs3 USING g_enterprise,g_pmdf_m.pmdfdocno
       LET li_ac = 1
       FOREACH b_fill_curs3 INTO g_pmdg2_d[li_ac].seq,g_pmdg2_d[li_ac].pmdh001,g_pmdg2_d[li_ac].pmdh002,g_pmdg2_d[li_ac].pmdh003,g_pmdg2_d[li_ac].pmdh004
          IF SQLCA.sqlcode THEN
             CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
             EXIT FOREACH
          END IF

          LET li_ac = li_ac + 1
          IF l_ac > g_max_rec THEN
             CALL cl_err( '', 9035, 0 )
             EXIT FOREACH
          END IF
          
       END FOREACH
       CALL g_pmdg2_d.deleteElement(g_pmdg2_d.getLength())
END FUNCTION]]>
</point>
  <point name="function.apmt420_get_col_default" cite_std="N" status="" ver="1" src="s" new="Y" order="20" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 取得單據別設定的欄位預設值
# Memo...........: 需搭配單據別aooi200的設定
# Usage..........: CALL apmt420_get_col_default()
# Date & Author..: 2014/03/10 By lixiang
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt420_get_col_default()
   LET g_pmdf_m.pmdfdocdt = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdfdocdt',g_pmdf_m.pmdfdocdt)
   LET g_pmdf_m.pmdf002 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf002',g_pmdf_m.pmdf002)
   LET g_pmdf_m.pmdf003 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf003',g_pmdf_m.pmdf003)
   LET g_pmdf_m.pmdf004 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf004',g_pmdf_m.pmdf004)
   LET g_pmdf_m.pmdf005 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf005',g_pmdf_m.pmdf005)
   LET g_pmdf_m.pmdf006 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf006',g_pmdf_m.pmdf006)
   LET g_pmdf_m.pmdf007 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf007',g_pmdf_m.pmdf007)
   LET g_pmdf_m.pmdf008 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf008',g_pmdf_m.pmdf008)
   LET g_pmdf_m.pmdf009 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf009',g_pmdf_m.pmdf009)
   LET g_pmdf_m.pmdf010 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf010',g_pmdf_m.pmdf010)
   LET g_pmdf_m.pmdf030 = s_aooi200_get_doc_default(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf030',g_pmdf_m.pmdf030)
   
   DISPLAY BY NAME g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdfdocno_desc,
       g_pmdf_m.pmdf004,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003,g_pmdf_m.pmdf003_desc, 
       g_pmdf_m.pmdfstus,g_pmdf_m.pmdf005,g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf006,g_pmdf_m.pmdf006_desc, 
       g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf009_desc,g_pmdf_m.pmdf010,g_pmdf_m.pmdf010_desc, 
       g_pmdf_m.pmdf030
       
       
   CALL apmt420_pmdf002_ref(g_pmdf_m.pmdf002) RETURNING g_pmdf_m.pmdf002_desc
   DISPLAY BY NAME g_pmdf_m.pmdf002_desc
   
   CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
   DISPLAY BY NAME g_pmdf_m.pmdf003_desc
   
   CALL apmt420_pmdf004_ref(g_pmdf_m.pmdf004) RETURNING g_pmdf_m.pmdf004_desc
   DISPLAY BY NAME g_pmdf_m.pmdf004_desc
   
   CALL apmt420_pmdf005_ref(g_pmdf_m.pmdf005) RETURNING g_pmdf_m.pmdf005_desc
   DISPLAY BY NAME g_pmdf_m.pmdf005_desc
   
   CALL apmt420_pmdf006_ref(g_pmdf_m.pmdf006) RETURNING g_pmdf_m.pmdf006_desc
   DISPLAY BY NAME g_pmdf_m.pmdf006_desc
   
   CALL apmt420_pmdf009_ref(g_pmdf_m.pmdf009) RETURNING g_pmdf_m.pmdf009_desc
   DISPLAY BY NAME g_pmdf_m.pmdf009_desc
   
   CALL apmt420_pmdf010_ref(g_pmdf_m.pmdf010) RETURNING g_pmdf_m.pmdf010_desc
   DISPLAY BY NAME g_pmdf_m.pmdf010_desc
            
END FUNCTION]]>
</point>
  <point name="function.apmt420_pmdf004_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="21" mark_hard="N">
<![CDATA[#根據供應商帶出相關欄位預設值
PRIVATE FUNCTION apmt420_pmdf004_desc()
DEFINE l_success   LIKE type_t.num5
DEFINE l_oodb011   LIKE oodb_t.oodb011
DEFINE l_pmab      RECORD LIKE pmab_t.*

        INITIALIZE l_pmab.* TO NULL        
	    
        #先抓據點級
        SELECT pmab_t.* INTO l_pmab.* FROM pmab_t,pmaa_t 
              WHERE pmabent = pmaaent AND pmab001 = pmaa001 AND pmaastus = 'Y'
                AND pmabent = g_enterprise AND pmabsite = g_site AND pmab001 = g_pmdf_m.pmdf004  
        #據點級沒有設置慣用資料，則抓集團層
        IF SQLCA.sqlcode = 100 THEN
           SELECT pmab_t.* INTO l_pmab.* FROM pmab_t,pmaa_t 
              WHERE pmabent = pmaaent AND pmab001 = pmaa001 AND pmaastus = 'Y'
                AND pmabent = g_enterprise AND pmabsite = 'ALL' AND pmab001 = g_pmdf_m.pmdf004  
        END IF     
        
        #先判斷欄位是否在單據別設定的預設欄位中，如果存在，則不重新帶值，不存在，則根據供應商帶預設值
        IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf005') THEN
           LET g_pmdf_m.pmdf005 = l_pmab.pmab033
           CALL apmt420_pmdf005_ref(g_pmdf_m.pmdf005) RETURNING g_pmdf_m.pmdf005_desc
           DISPLAY BY NAME g_pmdf_m.pmdf005_desc
        END IF
        
        IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf006') THEN
           LET g_pmdf_m.pmdf006 = l_pmab.pmab034
           CALL apmt420_pmdf006_ref(g_pmdf_m.pmdf006) RETURNING g_pmdf_m.pmdf006_desc
           DISPLAY BY NAME g_pmdf_m.pmdf006_desc
           
           #根據稅別帶出稅率、含稅否等
           IF NOT cl_null(g_pmdf_m.pmdf006) THEN
              CALL s_tax_chk(g_site,g_pmdf_m.pmdf006)
                  RETURNING l_success,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf008,g_pmdf_m.pmdf007,l_oodb011
              DISPLAY BY NAME g_pmdf_m.pmdf008,g_pmdf_m.pmdf007 
           END IF
        END IF
        
        IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf009') THEN
           LET g_pmdf_m.pmdf009 = l_pmab.pmab037
           CALL apmt420_pmdf009_ref(g_pmdf_m.pmdf009) RETURNING g_pmdf_m.pmdf009_desc
           DISPLAY BY NAME g_pmdf_m.pmdf009_desc
        END IF
        
        IF NOT s_aooi200_chk_doc_fields(g_site,'1',g_pmdf_m.pmdfdocno,'pmdf010') THEN
           LET g_pmdf_m.pmdf010 = l_pmab.pmab053
           CALL apmt420_pmdf010_ref(g_pmdf_m.pmdf010) RETURNING g_pmdf_m.pmdf010_desc
           DISPLAY BY NAME g_pmdf_m.pmdf010_desc
        END IF
        
END FUNCTION]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL apmt420_pmdh_fill()]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #IF cl_null(g_wc) OR g_wc = " 1=1" THEN
   IF cl_null(g_wc) THEN
      IF g_argv[1] = '1' THEN
         LET g_wc = " pmdf001 = 'N' "
      END IF
      IF g_argv[1] = '2' THEN
         LET g_wc = " pmdf001 = 'Y' "
      END IF
   ELSE
      IF g_argv[1] = '1' THEN
         LET g_wc = g_wc, " AND pmdf001 = 'N' "
      END IF
      IF g_argv[1] = '2' THEN
         LET g_wc = g_wc, " AND pmdf001 = 'Y' "
      END IF
   END IF
   
   LET g_wc = g_wc, " AND pmdfsite = '",g_site,"' "
   
   LET l_wc  = g_wc.trim()
   ]]>
</point>
  <point name="construct.c.page1.pmdg018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmdg018  #顯示到畫面上

            NEXT FIELD pmdg018                     #返回原欄位

]]>
</point>
  <point name="default_search.after" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_argv[1] = '1' THEN
      LET g_wc = " pmdf001 = 'N' "
   END IF
   IF g_argv[1] = '2' THEN
      LET g_wc = " pmdf001 = 'Y' "
   END IF
   IF g_argv[1] NOT MATCHES '[12]' THEN
      LET g_wc = " 1=1"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET g_wc = g_wc, " pmdfdocno = '", g_argv[01], "' "
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
   END IF]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      DELETE FROM pmdh_t
       WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno
       
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdh_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF NOT s_aooi200_del_docno(g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #複製分量計價單身(子作業)
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apmt420_detail2 AS ",
                "SELECT * FROM pmdh_t "
   PREPARE repro_tb2 FROM ls_sql
   EXECUTE repro_tb2
   FREE repro_tb2
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmt420_detail2 SELECT * FROM pmdh_t 
                                         WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdfdocno_t

   
   #將key修正為調整後   
   UPDATE apmt420_detail2 
      #更新key欄位
      SET pmdhdocno = g_pmdf_m.pmdfdocno

   #將資料塞回原table   
   INSERT INTO pmdh_t SELECT * FROM apmt420_detail2
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF

   #刪除TEMP TABLE
   DROP TABLE apmt420_detail]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)
   IF g_pmdf_m.pmdfstus != 'N' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF      ]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_flag      LIKE type_t.num5   #標記單據編號是否已編號]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #若是[P:一般採購詢價作業]時，單身的[C:作業編號]、[C:製程序]兩個欄位必須隱藏
   IF g_argv[1] = '1' THEN   #一般採購
      CALL cl_set_comp_visible("pmdg014,pmdg014_desc,pmdg015",FALSE)
   END IF]]>
</point>
  <point name="input.a.page1.pmdg009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_set_entry_b(l_cmd)
            CALL apmt420_set_no_entry_b(l_cmd)
            
            IF g_pmdg_d[l_ac].pmdg009 = 'Y' AND g_pmdg_d[l_ac].pmdg009 != g_pmdg_d_t.pmdg009 THEN
               #當勾選時開出apmt420_01子程式維護量計價資料
               CALL apmt420_01('1',g_pmdf_m.pmdfdocno,g_pmdg_d[l_ac].pmdgseq,g_pmdg_d[l_ac].pmdg003,g_pmdg_d[l_ac].pmdg004,g_pmdg_d[l_ac].pmdg005,g_pmdg_d[l_ac].pmdg014,g_pmdg_d[l_ac].pmdg015,g_pmdg_d[l_ac].pmdg007,g_pmdg_d[l_ac].pmdg008)
               
               #当勾选分量计价时，單價欄位不可以維護，那單價的值是由分量計架維護好后回寫，用單價最大的那一個回寫
               SELECT pmdh003,pmdh004 INTO g_pmdg_d[l_ac].pmdg010,g_pmdg_d[l_ac].pmdg012 FROM pmdh_t 
                 WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno AND pmdhseq = g_pmdg_d[l_ac].pmdgseq
                   AND pmdh003 = (SELECT MAX(pmdh003) FROM pmdh_t WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno AND pmdhseq = g_pmdg_d[l_ac].pmdgseq)
               IF cl_null(g_pmdg_d[l_ac].pmdg010) THEN
                  LET g_pmdg_d[l_ac].pmdg010 = 0
               END IF
               IF cl_null(g_pmdg_d[l_ac].pmdg012) THEN
                  LET g_pmdg_d[l_ac].pmdg012 = 0
               END IF
               DISPLAY BY NAME g_pmdg_d[l_ac].pmdg010,g_pmdg_d[l_ac].pmdg012
            END IF
            ]]>
</point>
  <point name="input.a.page1.pmdg018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL apmt420_pmdf006_ref(g_pmdg_d[l_ac].pmdg018) RETURNING g_pmdg_d[l_ac].pmdg018_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg018_desc 
            IF NOT cl_null(g_pmdg_d[l_ac].pmdg018) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmdg_d[l_ac].pmdg018 != g_pmdg_d_t.pmdg018 OR cl_null(g_pmdg_d_t.pmdg018))) THEN
                  #此段落由子樣板a19產生
                  CALL s_tax_chk(g_site,g_pmdg_d[l_ac].pmdg018)
                        RETURNING l_success,g_pmdg_d[l_ac].pmdg018_desc,l_oodb005,g_pmdg_d[l_ac].pmdg011,l_oodb011
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg011
                  IF NOT l_success THEN
                     LET g_pmdg_d[l_ac].pmdg018 = g_pmdg_d_t.pmdg018
                     CALL apmt420_pmdf006_ref(g_pmdg_d[l_ac].pmdg018) RETURNING g_pmdg_d[l_ac].pmdg018_desc
                     DISPLAY BY NAME g_pmdg_d[l_ac].pmdg018_desc 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
          ]]>
</point>
  <point name="input.a.pmdfdocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #IF NOT cl_null(g_pmdf_m.pmdfdocdt) THEN
            #   CALL s_aooi200_gen_docno(g_site,g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_prog) RETURNING l_success,g_pmdf_m.pmdfdocno
            #   IF NOT l_success THEN
            #      CALL cl_err(g_pmdf_m.pmdfdocno,'apm-00003',1)
            #      LET g_pmdf_m.pmdfdocdt = g_pmdf_m_t.pmdfdocdt
            #      DISPLAY g_pmdf_m.pmdfdocdt TO pmdfdocdt
            #      NEXT FIELD pmdfdocno           
            #   END IF
            #ELSE
            #   NEXT FIELD pmdfdocdt
            #END IF
            #LET g_flag = TRUE
            #CALL apmt420_set_entry(p_cmd)
            #CALL apmt420_set_no_entry(p_cmd)]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #若user操作時 點了退出，apmt420_01的子作業中維護的資料需要刪除
   #判斷是否有維護分量計價
   IF l_ac > 0 AND INT_FLAG = TRUE THEN
      IF p_cmd = 'a' OR (p_cmd = 'u' AND g_pmdg_d_t.pmdg009 = 'N')THEN
         DELETE FROM pmdh_t 
            WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno
              AND pmdhseq = g_pmdg_d[l_ac].pmdgseq
         IF SQLCA.SQLcode  THEN
            CALL cl_err("pmdh_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')                    
         END IF
      END IF
   END IF]]>
</point>
  <point name="input.b.page1.pmdg009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_pmdg_d_t.pmdg009 = g_pmdg_d[l_ac].pmdg009]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_errshow = 1
   LET g_flag = FALSE  #標記單據別是否已編號，如果已編號，則單據編號、單據日期欄位不可以錄入
   CALL apmt420_set_no_entry(p_cmd)
   CALL apmt420_set_entry(p_cmd)]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  DELETE FROM pmdh_t
                    WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno 
                      AND pmdhseq = g_pmdg_d_t.pmdgseq
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("pmdg_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF g_pmdg_d[l_ac].pmdgseq != g_pmdg_d_t.pmdgseq THEN
                  UPDATE pmdh_t SET pmdhseq = g_pmdg_d[l_ac].pmdgseq
                    WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno
                      AND pmdhseq = g_pmdg_d_t.pmdgseq 
                  IF SQLCA.SQLcode  THEN
                     CALL cl_err("pmdh_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')                    
                  END IF
               END IF
               IF g_pmdg_d[l_ac].pmdg009 = 'N' THEN
                  #判斷是否有維護分量計價
                  DELETE FROM pmdh_t 
                     WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdf_m.pmdfdocno
                       AND pmdhseq = g_pmdg_d[l_ac].pmdgseq
                  IF SQLCA.SQLcode  THEN
                     CALL cl_err("pmdh_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')                    
                  END IF
               END IF]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF cl_null(g_pmdg_d[l_ac].pmdg004) THEN
                  LET g_pmdg_d[l_ac].pmdg004 = ' '
               END IF
               IF cl_null(g_pmdg_d[l_ac].pmdg014) THEN
                  LET g_pmdg_d[l_ac].pmdg014 = ' '
               END IF
               IF cl_null(g_pmdg_d[l_ac].pmdg015) THEN
                  LET g_pmdg_d[l_ac].pmdg015 = ' '
               END IF]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_pmdg_d[l_ac].pmdgsite = g_site
            LET g_pmdg_d[l_ac].pmdg001 = g_pmdf_m.pmdf001
            
            SELECT MAX(pmdgseq)+1 INTO g_pmdg_d[l_ac].pmdgseq FROM pmdg_t
               WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno
            IF cl_null(g_pmdg_d[l_ac].pmdgseq) OR g_pmdg_d[l_ac].pmdgseq = 0 THEN
               LET g_pmdg_d[l_ac].pmdgseq = 1
            END IF
            
            #單頭pmdf004有輸入值時，單身供應商欄位預設單頭pmdf004的值
            IF NOT cl_null(g_pmdf_m.pmdf004) THEN
               LET g_pmdg_d[l_ac].pmdg002 = g_pmdf_m.pmdf004
               CALL apmt420_pmdf004_ref(g_pmdg_d[l_ac].pmdg002) RETURNING g_pmdg_d[l_ac].pmdg002_desc
               DISPLAY BY NAME g_pmdg_d[l_ac].pmdg002_desc
            END IF
            
            #LET g_pmdg_d[l_ac].pmdg004 = ' '
            #LET g_pmdg_d[l_ac].pmdg014 = ' '
            #LET g_pmdg_d[l_ac].pmdg015 = ' '
            
            #稅別、稅率
            LET g_pmdg_d[l_ac].pmdg018 = g_pmdf_m.pmdf006
            LET g_pmdg_d[l_ac].pmdg011 = g_pmdf_m.pmdf007
            LET g_pmdg_d[l_ac].pmdg017 = g_pmdf_m.pmdfdocdt
            ]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF g_pmdg_d[l_ac].pmdg009 = 'N' THEN
               CALL cl_set_act_visible("open_apmt420_01",FALSE)
            ELSE
               CALL cl_set_act_visible("open_apmt420_01",TRUE)
            END IF]]>
</point>
  <point name="input.c.page1.pmdg018" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmdg_d[l_ac].pmdg018             #給予default值

            #給予arg

            CALL q_oodb002_2()                                #呼叫開窗

            LET g_pmdg_d[l_ac].pmdg018 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmdg_d[l_ac].pmdg018 TO pmdg018              #顯示到畫面上
            CALL apmt420_pmdf006_ref(g_pmdg_d[l_ac].pmdg018) RETURNING g_pmdg_d[l_ac].pmdg018_desc
            DISPLAY BY NAME g_pmdg_d[l_ac].pmdg018_desc

            NEXT FIELD pmdg018                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.pmdg030" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         ON ACTION open_apmt420_01

            LET g_action_choice="open_apmt420_01"
            IF cl_auth_chk_act("open_apmt420_01") THEN 
               IF l_ac > 0 THEN   #防止數組溢出錯誤
                  IF g_pmdg_d[l_ac].pmdg009 = 'Y' AND NOT cl_null(g_pmdf_m.pmdfdocno) AND NOT cl_null(g_pmdg_d[l_ac].pmdgseq) THEN
                     CALL apmt420_01('1',g_pmdf_m.pmdfdocno,g_pmdg_d[l_ac].pmdgseq,g_pmdg_d[l_ac].pmdg003,g_pmdg_d[l_ac].pmdg004,g_pmdg_d[l_ac].pmdg005,g_pmdg_d[l_ac].pmdg014,g_pmdg_d[l_ac].pmdg015,g_pmdg_d[l_ac].pmdg007,g_pmdg_d[l_ac].pmdg008)
                     NEXT FIELD CURRENT
                  END IF
                END IF                
            END IF]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_ooef004       LIKE ooef_t.ooef004
   DEFINE  l_ooef019       LIKE ooef_t.ooef019
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_flag          LIKE type_t.num5
   DEFINE  l_pmdg010       LIKE pmdg_t.pmdg010
   DEFINE  l_pmdgseq       LIKE pmdg_t.pmdgseq
   DEFINE  l_pmdh001       LIKE pmdh_t.pmdh001
   DEFINE  l_pmdh002       LIKE pmdh_t.pmdh002
   DEFINE  l_pmdhseq       LIKE pmdh_t.pmdhseq
   DEFINE  l_pmdh003       LIKE pmdh_t.pmdh003
   
   DEFINE  l_ooba002       LIKE ooba_t.ooba002
   DEFINE  l_site          LIKE ooef_t.ooef001
   DEFINE  l_ooba014       LIKE ooba_t.ooba014
   DEFINE  l_sql1          STRING
   DEFINE  l_sql2          STRING
   DEFINE  l_sql           STRING
   DEFINE  l_oodb011       LIKE oodb_t.oodb011
   DEFINE  l_pmab039       LIKE pmab_t.pmab039
   DEFINE  l_oodb005       LIKE oodb_t.oodb005]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[                  #若有修改稅別時，需呼叫取稅率的應用元件重新更新單身每一筆資料的稅率
                  IF ((g_pmdf_m.pmdf006 != g_pmdf_m_t.pmdf006 OR cl_null(g_pmdf_m_t.pmdf006)) AND NOT cl_null(g_pmdf_m.pmdf006)) 
                      OR (cl_null(g_pmdf_m.pmdf006) AND NOT cl_null(g_pmdf_m_t.pmdf006)) THEN
                     UPDATE pmdg_t SET pmdg011 = g_pmdf_m.pmdf007 
                       WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno
                  END IF
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("g_pmdf_m",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  END IF
                  CALL apmt420_show()]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_aooi200_gen_docno(g_site,g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_prog) RETURNING l_success,g_pmdf_m.pmdfdocno
               IF NOT l_success THEN
                  CALL cl_err(g_pmdf_m.pmdfdocno,'apm-00003',1)
                  NEXT FIELD pmdfdocno
               END IF]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF l_cmd_t = 'r' THEN
               CALL apmt420_reproduce_init()
            END IF]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[     
      LET g_pmdf_m.pmdfsite = g_site
      LET g_pmdf_m.pmdfdocdt = g_today
      LET g_pmdf_m.pmdf002 = g_user
      LET g_pmdf_m.pmdf003 = g_dept
      CALL apmt420_pmdf002_ref(g_pmdf_m.pmdf002) RETURNING g_pmdf_m.pmdf002_desc
      DISPLAY BY NAME g_pmdf_m.pmdf002_desc
      
      CALL apmt420_pmdf003_ref(g_pmdf_m.pmdf003) RETURNING g_pmdf_m.pmdf003_desc
      DISPLAY BY NAME g_pmdf_m.pmdf003_desc
      
      #若是[P:一般採購詢價作業]在新增時[C:委外否(pmdf001)]預設為'N'
      #若是[P:委外採購詢價作業]在新增時[C:委外否(pmdf001)]預設為'Y'
      IF g_argv[1] = '1' THEN
         LET g_pmdf_m.pmdf001 = 'N'
      END IF
      IF g_argv[1] = '2' THEN
         LET g_pmdf_m.pmdf001 = 'Y'
      END IF
      
      INITIALIZE g_pmdf_m_t.* TO NULL
      LET g_pmdf_m_t.* = g_pmdf_m.*
      
      LET g_flag = FALSE  #標記單據別是否已編號，如果已編號，則單據編號、單據日期欄位不可以錄入
      ]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF cl_null(g_pmdg_d[g_detail_idx].pmdg004) THEN
         LET g_pmdg_d[g_detail_idx].pmdg004 = ' '
      END IF
      IF cl_null(g_pmdg_d[l_ac].pmdg014) THEN
         LET g_pmdg_d[g_detail_idx].pmdg014 = ' '
      END IF
      IF cl_null(g_pmdg_d[g_detail_idx].pmdg015) THEN
         LET g_pmdg_d[g_detail_idx].pmdg015 = ' '
      END IF]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_flag = FALSE]]>
</point>
  <point name="menu.open_apmt420_01" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF l_ac > 0 THEN   #防止數組溢出錯誤
                  IF g_pmdg_d[l_ac].pmdg009 = 'Y' AND NOT cl_null(g_pmdf_m.pmdfdocno) AND NOT cl_null(g_pmdg_d[l_ac].pmdgseq) THEN
                     CALL apmt420_01('2',g_pmdf_m.pmdfdocno,g_pmdg_d[l_ac].pmdgseq,g_pmdg_d[l_ac].pmdg003,g_pmdg_d[l_ac].pmdg004,g_pmdg_d[l_ac].pmdg005,g_pmdg_d[l_ac].pmdg014,g_pmdg_d[l_ac].pmdg015,g_pmdg_d[l_ac].pmdg007,g_pmdg_d[l_ac].pmdg008)
                  END IF
                END IF]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL apmr420_g01("pmdfent ="|| g_enterprise ||" AND pmdfdocno ='"|| g_pmdf_m.pmdfdocno||"'")]]>
</point>
  <point name="modify.body.a_fk_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update2" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="reproduce.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         LET g_errshow = 1]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("pmdg002",TRUE)
   CALL cl_set_comp_entry("pmdf002,pmdf003,pmdf004,pmdf005,pmdf006,pmdf009,pmdf010,pmdf030",TRUE)]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("pmdfdocdt",TRUE)]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("pmdg004,pmdg010,pmdg012",TRUE)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #IF g_flag THEN   #單據別已經編號，單據編號、單據日期欄位不可修改
   #   CALL cl_set_comp_entry("pmdfdocno,pmdfdocdt",FALSE)
   #END IF
   #
   IF NOT cl_null(g_pmdf_m.pmdf004) THEN
      CALL cl_set_comp_entry("pmdg002",FALSE)
   END IF
   
   #依單據別設定判斷欄位是否需要做輸入控制
   IF NOT cl_null(g_pmdf_m.pmdfdocno) THEN
      LET l_fields = ''
      CALL s_aooi200_get_doc_fields(g_site,'1',g_pmdf_m.pmdfdocno) RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_fields  STRING]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_comp_entry("pmdfdocdt",FALSE)]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_imaa005  LIKE imaa_t.imaa005]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[  
   #當料件有使用產品特徵功能時此欄位才可輸入
   LET l_imaa005  = ''
   SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_pmdg_d[l_ac].pmdg003
   IF cl_null(l_imaa005) THEN
      CALL cl_set_comp_entry("pmdg004",FALSE)
   END IF
   
   IF g_pmdg_d[l_ac].pmdg009 = 'Y' THEN
      CALL cl_set_comp_entry("pmdg010,pmdg012",FALSE)
      LET g_pmdg_d[l_ac].pmdg010 = 0
      LET g_pmdg_d[l_ac].pmdg012 = 0
   END IF]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL apmt420_pmdh_fill()
   CALL cl_show_fld_cont() ]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL s_transaction_begin()
      IF lc_state = 'Y' THEN
         CALL s_apmt420_conf_chk(g_pmdf_m.pmdfdocno) RETURNING l_success
         IF NOT l_success THEN
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00108') THEN
               RETURN
            ELSE
               CALL s_apmt420_conf_upd(g_pmdf_m.pmdfdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
      END IF
      IF lc_state = 'N' THEN
         CALL s_apmt420_unconf_chk(g_pmdf_m.pmdfdocno) RETURNING l_success
         IF NOT l_success THEN
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00110') THEN
               RETURN
            ELSE
               CALL s_apmt420_unconf_upd(g_pmdf_m.pmdfdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
      END IF
      IF lc_state = 'X' THEN
         CALL s_apmt420_invalid_chk(g_pmdf_m.pmdfdocno) RETURNING l_success
         IF NOT l_success THEN
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00109') THEN
               RETURN
            ELSE
               CALL s_apmt420_invalid_upd(g_pmdf_m.pmdfdocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
      END IF]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_pmdf_m.pmdfstus = 'X' THEN
      RETURN
   END IF]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_act_visible("open,invalid,confirmed",TRUE)
      CASE g_pmdf_m.pmdfstus 
         WHEN "N"
            CALL cl_set_act_visible("open",FALSE)
            
         WHEN "X"
            CALL cl_set_act_visible("open,invalid,confirmed",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
      END CASE]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success   LIKE type_t.num5]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="statechange.open" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body1.action" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body1.before_row" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF g_pmdg_d[l_ac].pmdg009 = 'N' THEN
                  CALL cl_set_act_visible("open_apmt420_01",FALSE)
               ELSE
                  CALL cl_set_act_visible("open_apmt420_01",TRUE)
               END IF]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF cl_null(g_pmdg_d[g_detail_idx].pmdg004) THEN
         LET g_pmdg_d[g_detail_idx].pmdg004 = ' '
      END IF
      IF cl_null(g_pmdg_d[l_ac].pmdg014) THEN
         LET g_pmdg_d[g_detail_idx].pmdg014 = ' '
      END IF
      IF cl_null(g_pmdg_d[g_detail_idx].pmdg015) THEN
         LET g_pmdg_d[g_detail_idx].pmdg015 = ' '
      END IF]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdf001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdfsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdfdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfdocno_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfdocno_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdfdocno_desc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdfstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdf030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdf030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.pmdf030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.pmdfcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.pmdfcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body2.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.pmdf001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdfsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.pmdfsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdfsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdfdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdfdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdfdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdfdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdfstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.pmdfstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdfstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.pmdf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.pmdf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.pmdf030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.pmdf030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.pmdf030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.pmdf001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.pmdfsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.pmdfdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.pmdfstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.pmdf007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.pmdf008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.pmdf030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmdg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdgseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdgseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmdg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg014" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmdg015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg018" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmdg011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmdg017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg016" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.pmdg030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.pmdg030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.pmdg030" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdgseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg015" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.pmdg017" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.body2.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.key.before_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.key.m_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.key.after_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.before_fill2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.fill2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="apmt420.b_fill" ver="7" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION apmt420_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_pmdg_d.clear()    #g_pmdg_d 單頭及單身 
   CALL g_pmdg2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF apmt420_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE pmdgsite,pmdg001,pmdgseq,pmdg002,pmdg003,pmdg004,pmdg005,pmdg014,pmdg015, 
          pmdg008,pmdg007,pmdg009,pmdg010,pmdg018,pmdg011,pmdg012,pmdg013,pmdg017,pmdg016,pmdg030 ,t1.pmaal004 , 
          t2.imaal003 ,t3.imaal003 ,t4.oocql004 ,t5.oocal003 ,t6.oocql004 FROM pmdg_t",   
                  " INNER JOIN pmdf_t ON pmdfdocno = pmdgdocno ",
 
                  #"",
                  " LEFT JOIN pmdh_t ON pmdgent = pmdhent AND pmdgdocno = pmdhdocno AND pmdgseq = pmdhseq ",
                  "",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=pmdg002 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=pmdg003 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=pmdg005 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='221' AND t4.oocql002=pmdg014 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=pmdg008 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='263' AND t6.oocql002=pmdg016 AND t6.oocql003='"||g_dlang||"' ",
 
                  " WHERE pmdgent=? AND pmdgdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
         IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
      
      LET g_sql = g_sql, " ORDER BY pmdg_t.pmdgseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE apmt420_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR apmt420_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_pmdf_m.pmdfdocno
                                               
      FOREACH b_fill_cs INTO g_pmdg_d[l_ac].pmdgsite,g_pmdg_d[l_ac].pmdg001,g_pmdg_d[l_ac].pmdgseq,g_pmdg_d[l_ac].pmdg002, 
          g_pmdg_d[l_ac].pmdg003,g_pmdg_d[l_ac].pmdg004,g_pmdg_d[l_ac].pmdg005,g_pmdg_d[l_ac].pmdg014, 
          g_pmdg_d[l_ac].pmdg015,g_pmdg_d[l_ac].pmdg008,g_pmdg_d[l_ac].pmdg007,g_pmdg_d[l_ac].pmdg009, 
          g_pmdg_d[l_ac].pmdg010,g_pmdg_d[l_ac].pmdg018,g_pmdg_d[l_ac].pmdg011,g_pmdg_d[l_ac].pmdg012, 
          g_pmdg_d[l_ac].pmdg013,g_pmdg_d[l_ac].pmdg017,g_pmdg_d[l_ac].pmdg016,g_pmdg_d[l_ac].pmdg030, 
          g_pmdg_d[l_ac].pmdg002_desc,g_pmdg_d[l_ac].pmdg003_desc,g_pmdg_d[l_ac].pmdg005_desc,g_pmdg_d[l_ac].pmdg014_desc, 
          g_pmdg_d[l_ac].pmdg008_desc,g_pmdg_d[l_ac].pmdg016_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_pmdg_d.deleteElement(g_pmdg_d.getLength())
   CALL g_pmdg2_d.deleteElement(g_pmdg2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apmt420_pb
 
   
END FUNCTION
]]>
</section>
  <section id="apmt420.b_fill2" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION apmt420_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF apmt420_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_pmdg_d.getLength() > 0 THEN
               CALL g_pmdg2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE pmdh001,pmdh002,pmdh003,pmdh004  FROM pmdh_t",    
                     "",
                     
                     " WHERE pmdhent=? AND pmdhdocno=? AND pmdhseq=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  pmdh_t.pmdh001,pmdh_t.pmdh002" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmt420_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR apmt420_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,
                                        g_pmdf_m.pmdfdocno,g_pmdg_d[g_detail_idx].pmdgseq
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_pmdg2_d[l_ac].pmdh001,g_pmdg2_d[l_ac].pmdh002,g_pmdg2_d[l_ac].pmdh003, 
             g_pmdg2_d[l_ac].pmdh004 
            IF SQLCA.sqlcode THEN
               CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               CALL cl_err( '', 9035, 0 )
               EXIT FOREACH
            END IF
            
         END FOREACH
               CALL g_pmdg2_d.deleteElement(g_pmdg2_d.getLength())
 
      END IF
   END IF
 
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apmt420_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="apmt420.browser_fill" ver="8" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apmt420_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_pmdf_m.* TO NULL
   CALL g_pmdg_d.clear()        
   CALL g_pmdg2_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "pmdfdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE pmdfdocno ",
                      " FROM pmdf_t ",
                      " ",
                      " LEFT JOIN pmdg_t ON pmdgent = pmdfent AND pmdfdocno = pmdgdocno ",
 
                      " LEFT JOIN pmdh_t ON pmdhent = pmdfent AND pmdgdocno = pmdhdocno AND pmdgseq = pmdhseq", 
 
 
                      " ", 
                      " ", 
                      " WHERE pmdfent = '" ||g_enterprise|| "' AND pmdgent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("pmdf_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE pmdfdocno ",
                      " FROM pmdf_t ", 
                      "  ",
                      "  ",
                      " WHERE pmdfent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("pmdf_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照pmdfdocno,pmdfdocdt,pmdf002,'',pmdf003,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT pmdfstus,pmdfdocno,pmdfdocdt,pmdf002,'',pmdf003,'',t1.oofa011 ,t2.ooefl003 ", 

               " FROM pmdf_t ",
               "  ",
               "  LEFT JOIN pmdg_t ON pmdgent = pmdfent AND pmdfdocno = pmdgdocno ",
 
               "  LEFT JOIN pmdh_t ON pmdhent = pmdfent AND pmdgdocno = pmdhdocno AND pmdgseq = pmdhseq",
 
 
               "  ",
               "  ",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=pmdf002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=pmdf003 AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE pmdfent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("pmdf_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_pmdfdocno,g_browser[g_cnt].b_pmdfdocdt, 
       g_browser[g_cnt].b_pmdf002,g_browser[g_cnt].b_pmdf002_desc,g_browser[g_cnt].b_pmdf003,g_browser[g_cnt].b_pmdf003_desc, 
       g_browser[g_cnt].b_pmdf002_desc,g_browser[g_cnt].b_pmdf003_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="apmt420.browser_search" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION apmt420_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY pmdfdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL apmt420_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="apmt420.construct" ver="8" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION apmt420_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_pmdf_m.* TO NULL
   CALL g_pmdg_d.clear()        
   CALL g_pmdg2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON pmdf001,pmdfsite,pmdfdocno,pmdfdocdt,pmdf002,pmdfdocno_desc,pmdf004, 
          pmdf003,pmdfstus,pmdf005,pmdf006,pmdf007,pmdf008,pmdf009,pmdf010,pmdf030,pmdfownid,pmdfowndp, 
          pmdfcrtid,pmdfcrtdp,pmdfcrtdt,pmdfmodid,pmdfmoddt,pmdfcnfid,pmdfcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<pmdfcrtdt>>----
         AFTER FIELD pmdfcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmdfmoddt>>----
         AFTER FIELD pmdfmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmdfcnfdt>>----
         AFTER FIELD pmdfcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmdfpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD pmdf001
            #add-point:BEFORE FIELD pmdf001
            {<point name="construct.b.pmdf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf001
            
            #add-point:AFTER FIELD pmdf001
            {<point name="construct.a.pmdf001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdf001
         ON ACTION controlp INFIELD pmdf001
            #add-point:ON ACTION controlp INFIELD pmdf001
            {<point name="construct.c.pmdf001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfsite
            #add-point:BEFORE FIELD pmdfsite
            {<point name="construct.b.pmdfsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfsite
            
            #add-point:AFTER FIELD pmdfsite
            {<point name="construct.a.pmdfsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdfsite
         ON ACTION controlp INFIELD pmdfsite
            #add-point:ON ACTION controlp INFIELD pmdfsite
            {<point name="construct.c.pmdfsite" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdfdocno
         ON ACTION controlp INFIELD pmdfdocno
            #add-point:ON ACTION controlp INFIELD pmdfdocno
            {<point name="construct.c.pmdfdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfdocno
            #add-point:BEFORE FIELD pmdfdocno
            {<point name="construct.b.pmdfdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfdocno
            
            #add-point:AFTER FIELD pmdfdocno
            {<point name="construct.a.pmdfdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfdocdt
            #add-point:BEFORE FIELD pmdfdocdt
            {<point name="construct.b.pmdfdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfdocdt
            
            #add-point:AFTER FIELD pmdfdocdt
            {<point name="construct.a.pmdfdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdfdocdt
         ON ACTION controlp INFIELD pmdfdocdt
            #add-point:ON ACTION controlp INFIELD pmdfdocdt
            {<point name="construct.c.pmdfdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdf002
         ON ACTION controlp INFIELD pmdf002
            #add-point:ON ACTION controlp INFIELD pmdf002
            {<point name="construct.c.pmdf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf002
            #add-point:BEFORE FIELD pmdf002
            {<point name="construct.b.pmdf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf002
            
            #add-point:AFTER FIELD pmdf002
            {<point name="construct.a.pmdf002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfdocno_desc
            #add-point:BEFORE FIELD pmdfdocno_desc
            {<point name="construct.b.pmdfdocno_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfdocno_desc
            
            #add-point:AFTER FIELD pmdfdocno_desc
            {<point name="construct.a.pmdfdocno_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdfdocno_desc
         ON ACTION controlp INFIELD pmdfdocno_desc
            #add-point:ON ACTION controlp INFIELD pmdfdocno_desc
            {<point name="construct.c.pmdfdocno_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdf004
         ON ACTION controlp INFIELD pmdf004
            #add-point:ON ACTION controlp INFIELD pmdf004
            {<point name="construct.c.pmdf004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf004
            #add-point:BEFORE FIELD pmdf004
            {<point name="construct.b.pmdf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf004
            
            #add-point:AFTER FIELD pmdf004
            {<point name="construct.a.pmdf004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdf003
         ON ACTION controlp INFIELD pmdf003
            #add-point:ON ACTION controlp INFIELD pmdf003
            {<point name="construct.c.pmdf003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf003
            #add-point:BEFORE FIELD pmdf003
            {<point name="construct.b.pmdf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf003
            
            #add-point:AFTER FIELD pmdf003
            {<point name="construct.a.pmdf003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfstus
            #add-point:BEFORE FIELD pmdfstus
            {<point name="construct.b.pmdfstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfstus
            
            #add-point:AFTER FIELD pmdfstus
            {<point name="construct.a.pmdfstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdfstus
         ON ACTION controlp INFIELD pmdfstus
            #add-point:ON ACTION controlp INFIELD pmdfstus
            {<point name="construct.c.pmdfstus" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdf005
         ON ACTION controlp INFIELD pmdf005
            #add-point:ON ACTION controlp INFIELD pmdf005
            {<point name="construct.c.pmdf005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf005
            #add-point:BEFORE FIELD pmdf005
            {<point name="construct.b.pmdf005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf005
            
            #add-point:AFTER FIELD pmdf005
            {<point name="construct.a.pmdf005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdf006
         ON ACTION controlp INFIELD pmdf006
            #add-point:ON ACTION controlp INFIELD pmdf006
            {<point name="construct.c.pmdf006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf006
            #add-point:BEFORE FIELD pmdf006
            {<point name="construct.b.pmdf006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf006
            
            #add-point:AFTER FIELD pmdf006
            {<point name="construct.a.pmdf006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf007
            #add-point:BEFORE FIELD pmdf007
            {<point name="construct.b.pmdf007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf007
            
            #add-point:AFTER FIELD pmdf007
            {<point name="construct.a.pmdf007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdf007
         ON ACTION controlp INFIELD pmdf007
            #add-point:ON ACTION controlp INFIELD pmdf007
            {<point name="construct.c.pmdf007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf008
            #add-point:BEFORE FIELD pmdf008
            {<point name="construct.b.pmdf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf008
            
            #add-point:AFTER FIELD pmdf008
            {<point name="construct.a.pmdf008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdf008
         ON ACTION controlp INFIELD pmdf008
            #add-point:ON ACTION controlp INFIELD pmdf008
            {<point name="construct.c.pmdf008" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdf009
         ON ACTION controlp INFIELD pmdf009
            #add-point:ON ACTION controlp INFIELD pmdf009
            {<point name="construct.c.pmdf009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf009
            #add-point:BEFORE FIELD pmdf009
            {<point name="construct.b.pmdf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf009
            
            #add-point:AFTER FIELD pmdf009
            {<point name="construct.a.pmdf009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdf010
         ON ACTION controlp INFIELD pmdf010
            #add-point:ON ACTION controlp INFIELD pmdf010
            {<point name="construct.c.pmdf010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf010
            #add-point:BEFORE FIELD pmdf010
            {<point name="construct.b.pmdf010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf010
            
            #add-point:AFTER FIELD pmdf010
            {<point name="construct.a.pmdf010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf030
            #add-point:BEFORE FIELD pmdf030
            {<point name="construct.b.pmdf030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf030
            
            #add-point:AFTER FIELD pmdf030
            {<point name="construct.a.pmdf030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdf030
         ON ACTION controlp INFIELD pmdf030
            #add-point:ON ACTION controlp INFIELD pmdf030
            {<point name="construct.c.pmdf030" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdfownid
         ON ACTION controlp INFIELD pmdfownid
            #add-point:ON ACTION controlp INFIELD pmdfownid
            {<point name="construct.c.pmdfownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfownid
            #add-point:BEFORE FIELD pmdfownid
            {<point name="construct.b.pmdfownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfownid
            
            #add-point:AFTER FIELD pmdfownid
            {<point name="construct.a.pmdfownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdfowndp
         ON ACTION controlp INFIELD pmdfowndp
            #add-point:ON ACTION controlp INFIELD pmdfowndp
            {<point name="construct.c.pmdfowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfowndp
            #add-point:BEFORE FIELD pmdfowndp
            {<point name="construct.b.pmdfowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfowndp
            
            #add-point:AFTER FIELD pmdfowndp
            {<point name="construct.a.pmdfowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdfcrtid
         ON ACTION controlp INFIELD pmdfcrtid
            #add-point:ON ACTION controlp INFIELD pmdfcrtid
            {<point name="construct.c.pmdfcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfcrtid
            #add-point:BEFORE FIELD pmdfcrtid
            {<point name="construct.b.pmdfcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfcrtid
            
            #add-point:AFTER FIELD pmdfcrtid
            {<point name="construct.a.pmdfcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmdfcrtdp
         ON ACTION controlp INFIELD pmdfcrtdp
            #add-point:ON ACTION controlp INFIELD pmdfcrtdp
            {<point name="construct.c.pmdfcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfcrtdp
            #add-point:BEFORE FIELD pmdfcrtdp
            {<point name="construct.b.pmdfcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfcrtdp
            
            #add-point:AFTER FIELD pmdfcrtdp
            {<point name="construct.a.pmdfcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfcrtdt
            #add-point:BEFORE FIELD pmdfcrtdt
            {<point name="construct.b.pmdfcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdfmodid
         ON ACTION controlp INFIELD pmdfmodid
            #add-point:ON ACTION controlp INFIELD pmdfmodid
            {<point name="construct.c.pmdfmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfmodid
            #add-point:BEFORE FIELD pmdfmodid
            {<point name="construct.b.pmdfmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfmodid
            
            #add-point:AFTER FIELD pmdfmodid
            {<point name="construct.a.pmdfmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfmoddt
            #add-point:BEFORE FIELD pmdfmoddt
            {<point name="construct.b.pmdfmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.pmdfcnfid
         ON ACTION controlp INFIELD pmdfcnfid
            #add-point:ON ACTION controlp INFIELD pmdfcnfid
            {<point name="construct.c.pmdfcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfcnfid
            #add-point:BEFORE FIELD pmdfcnfid
            {<point name="construct.b.pmdfcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfcnfid
            
            #add-point:AFTER FIELD pmdfcnfid
            {<point name="construct.a.pmdfcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfcnfdt
            #add-point:BEFORE FIELD pmdfcnfdt
            {<point name="construct.b.pmdfcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON pmdg001,pmdgseq,pmdg002,pmdg003,pmdg004,pmdg005,pmdg014,pmdg015,pmdg008, 
          pmdg007,pmdg009,pmdg010,pmdg018,pmdg011,pmdg012,pmdg013,pmdg017,pmdg016,pmdg030
           FROM s_detail1[1].pmdg001,s_detail1[1].pmdgseq,s_detail1[1].pmdg002,s_detail1[1].pmdg003, 
               s_detail1[1].pmdg004,s_detail1[1].pmdg005,s_detail1[1].pmdg014,s_detail1[1].pmdg015,s_detail1[1].pmdg008, 
               s_detail1[1].pmdg007,s_detail1[1].pmdg009,s_detail1[1].pmdg010,s_detail1[1].pmdg018,s_detail1[1].pmdg011, 
               s_detail1[1].pmdg012,s_detail1[1].pmdg013,s_detail1[1].pmdg017,s_detail1[1].pmdg016,s_detail1[1].pmdg030 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON NULL
           FROM NULL
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="apmt420.default_search" ver="4" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION apmt420_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pmdfdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="apmt420.delete" ver="11" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION apmt420_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_pmdf_m.pmdfdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE apmt420_master_referesh USING g_pmdf_m.pmdfdocno INTO g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite, 
       g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus, 
       g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010, 
       g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtdp, 
       g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt, 
       g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003_desc,g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf009_desc, 
       g_pmdf_m.pmdf010_desc,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid_desc, 
       g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfcnfid_desc
   
   
 
   CALL apmt420_show()
   
   CALL s_transaction_begin()
 
   OPEN apmt420_cl USING g_enterprise,g_pmdf_m.pmdfdocno
   IF STATUS THEN
      CALL cl_err("OPEN apmt420_cl:", STATUS, 1)
      CLOSE apmt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt420_master_referesh USING g_pmdf_m.pmdfdocno INTO g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite, 
       g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus, 
       g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010, 
       g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtdp, 
       g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt, 
       g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003_desc,g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf009_desc, 
       g_pmdf_m.pmdf010_desc,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid_desc, 
       g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_pmdf_m.pmdfdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL apmt420_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_pmdfdocno_t = g_pmdf_m.pmdfdocno
 
 
      DELETE FROM pmdf_t
       WHERE pmdfent = g_enterprise AND pmdfdocno = g_pmdf_m.pmdfdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_pmdf_m.pmdfdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM pmdg_t
       WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdg_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM pmdh_t
       WHERE pmdhent = g_enterprise AND
             pmdhdocno = g_pmdf_m.pmdfdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdh_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
                                                               
      CLEAR FORM
      CALL g_pmdg_d.clear() 
      CALL g_pmdg2_d.clear()       
 
     
      #CALL apmt420_ui_browser_refresh()  
      CALL apmt420_ui_headershow()  
      CALL apmt420_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL apmt420_browser_fill("")
         CALL apmt420_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL apmt420_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE apmt420_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_pmdf_m.pmdfdocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="apmt420.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION apmt420_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM pmdg_t
       WHERE pmdgent = g_enterprise AND
         pmdgdocno = ps_keys_bak[1] AND pmdgseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM pmdh_t
       WHERE pmdhdocno = ps_keys_bak[1] AND pmdhseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdh_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="apmt420.description" ver="55" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000322
#+ 
#+ Filename...: apmt420
#+ Description: 一般採購詢價作業
#+ Creator....: 02294(2013/11/15)
#+ Modifier...: 02294(2014/06/28)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="apmt420.detail_reproduce" ver="2" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION apmt420_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pmdg_t.*
 
   DEFINE l_detail2    RECORD LIKE pmdh_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apmt420_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apmt420_detail AS ",
                "SELECT * FROM pmdg_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmt420_detail SELECT * FROM pmdg_t 
                                         WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdfdocno_t
 
   
   #將key修正為調整後   
   UPDATE apmt420_detail 
      #更新key欄位
      SET pmdgdocno = g_pmdf_m.pmdfdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO pmdg_t SELECT * FROM apmt420_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmt420_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE apmt420_detail AS ",
      "SELECT * FROM pmdh_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apmt420_detail SELECT * FROM pmdh_t
                                         WHERE pmdhent = g_enterprise AND pmdhdocno = g_pmdfdocno_t
 
 
   #將key修正為調整後   
   UPDATE apmt420_detail SET pmdhdocno = g_pmdf_m.pmdfdocno
 
  
   #將資料塞回原table   
   INSERT INTO pmdh_t SELECT * FROM apmt420_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmt420_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_pmdfdocno_t = g_pmdf_m.pmdfdocno
 
   
   DROP TABLE apmt420_detail
   
END FUNCTION
]]>
</section>
  <section id="apmt420.detail_show" ver="4" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION apmt420_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apmt420.fetch" ver="6" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apmt420_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_pmdf_m.pmdfdocno = g_browser[g_current_idx].b_pmdfdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apmt420_master_referesh USING g_pmdf_m.pmdfdocno INTO g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite, 
       g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus, 
       g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010, 
       g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtdp, 
       g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt, 
       g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003_desc,g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf009_desc, 
       g_pmdf_m.pmdf010_desc,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid_desc, 
       g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("pmdf_t",SQLCA.sqlcode,1)
      INITIALIZE g_pmdf_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL apmt420_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="apmt420.fill_chk" ver="4" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION apmt420_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="apmt420.filter" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION apmt420_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pmdfdocno,pmdfdocdt,pmdf002,pmdf003
                          FROM s_browse[1].b_pmdfdocno,s_browse[1].b_pmdfdocdt,s_browse[1].b_pmdf002, 
                              s_browse[1].b_pmdf003
 
         BEFORE CONSTRUCT
               DISPLAY apmt420_filter_parser('pmdfdocno') TO s_browse[1].b_pmdfdocno
            DISPLAY apmt420_filter_parser('pmdfdocdt') TO s_browse[1].b_pmdfdocdt
            DISPLAY apmt420_filter_parser('pmdf002') TO s_browse[1].b_pmdf002
            DISPLAY apmt420_filter_parser('pmdf003') TO s_browse[1].b_pmdf003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL apmt420_filter_show('pmdfdocno')
   CALL apmt420_filter_show('pmdfdocdt')
   CALL apmt420_filter_show('pmdf002')
   CALL apmt420_filter_show('pmdf003')
 
END FUNCTION
]]>
</section>
  <section id="apmt420.filter_parser" ver="2" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION apmt420_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="apmt420.filter_show" ver="2" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION apmt420_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmt420_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="apmt420.global" ver="11" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_pmdf_m        RECORD
       pmdf001 LIKE pmdf_t.pmdf001, 
   pmdfsite LIKE pmdf_t.pmdfsite, 
   pmdfdocno LIKE pmdf_t.pmdfdocno, 
   fflabel1 LIKE type_t.chr80, 
   pmdfdocdt LIKE pmdf_t.pmdfdocdt, 
   pmdf002 LIKE pmdf_t.pmdf002, 
   pmdf002_desc LIKE type_t.chr80, 
   pmdfdocno_desc LIKE type_t.chr80, 
   fflabel3 LIKE type_t.chr80, 
   pmdf004 LIKE pmdf_t.pmdf004, 
   pmdf004_desc LIKE type_t.chr80, 
   pmdf003 LIKE pmdf_t.pmdf003, 
   pmdf003_desc LIKE type_t.chr80, 
   pmdfstus LIKE pmdf_t.pmdfstus, 
   pmdf005 LIKE pmdf_t.pmdf005, 
   pmdf005_desc LIKE type_t.chr80, 
   pmdf006 LIKE pmdf_t.pmdf006, 
   pmdf006_desc LIKE type_t.chr80, 
   pmdf007 LIKE pmdf_t.pmdf007, 
   pmdf008 LIKE pmdf_t.pmdf008, 
   pmdf009 LIKE pmdf_t.pmdf009, 
   pmdf009_desc LIKE type_t.chr80, 
   pmdf010 LIKE pmdf_t.pmdf010, 
   pmdf010_desc LIKE type_t.chr80, 
   pmdf030 LIKE pmdf_t.pmdf030, 
   pmdfownid LIKE pmdf_t.pmdfownid, 
   pmdfownid_desc LIKE type_t.chr80, 
   pmdfowndp LIKE pmdf_t.pmdfowndp, 
   pmdfowndp_desc LIKE type_t.chr80, 
   pmdfcrtid LIKE pmdf_t.pmdfcrtid, 
   pmdfcrtid_desc LIKE type_t.chr80, 
   pmdfcrtdp LIKE pmdf_t.pmdfcrtdp, 
   pmdfcrtdp_desc LIKE type_t.chr80, 
   pmdfcrtdt DATETIME YEAR TO SECOND, 
   pmdfmodid LIKE pmdf_t.pmdfmodid, 
   pmdfmodid_desc LIKE type_t.chr80, 
   pmdfmoddt DATETIME YEAR TO SECOND, 
   pmdfcnfid LIKE pmdf_t.pmdfcnfid, 
   pmdfcnfid_desc LIKE type_t.chr80, 
   pmdfcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_pmdg_d        RECORD
       pmdgsite LIKE pmdg_t.pmdgsite, 
   pmdg001 LIKE pmdg_t.pmdg001, 
   pmdgseq LIKE pmdg_t.pmdgseq, 
   pmdg002 LIKE pmdg_t.pmdg002, 
   pmdg002_desc LIKE type_t.chr500, 
   pmdg003 LIKE pmdg_t.pmdg003, 
   pmdg003_desc LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr80, 
   pmdg004 LIKE pmdg_t.pmdg004, 
   pmdg005 LIKE pmdg_t.pmdg005, 
   pmdg005_desc LIKE type_t.chr500, 
   pmdg014 LIKE pmdg_t.pmdg014, 
   pmdg014_desc LIKE type_t.chr500, 
   pmdg015 LIKE pmdg_t.pmdg015, 
   pmdg008 LIKE pmdg_t.pmdg008, 
   pmdg008_desc LIKE type_t.chr500, 
   pmdg007 LIKE pmdg_t.pmdg007, 
   pmdg009 LIKE pmdg_t.pmdg009, 
   pmdg010 LIKE pmdg_t.pmdg010, 
   pmdg018 LIKE pmdg_t.pmdg018, 
   pmdg018_desc LIKE type_t.chr80, 
   pmdg011 LIKE pmdg_t.pmdg011, 
   pmdg012 LIKE pmdg_t.pmdg012, 
   pmdg013 LIKE pmdg_t.pmdg013, 
   pmdg017 LIKE pmdg_t.pmdg017, 
   pmdg016 LIKE pmdg_t.pmdg016, 
   pmdg016_desc LIKE type_t.chr500, 
   pmdg030 LIKE pmdg_t.pmdg030
       END RECORD
PRIVATE TYPE type_g_pmdg2_d RECORD
       seq LIKE type_t.chr80, 
   pmdh001 LIKE pmdh_t.pmdh001, 
   pmdh002 LIKE pmdh_t.pmdh002, 
   pmdh003 LIKE pmdh_t.pmdh003, 
   pmdh004 LIKE pmdh_t.pmdh004
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_pmdf_m          type_g_pmdf_m
DEFINE g_pmdf_m_t        type_g_pmdf_m
 
   DEFINE g_pmdfdocno_t LIKE pmdf_t.pmdfdocno
 
 
DEFINE g_pmdg_d          DYNAMIC ARRAY OF type_g_pmdg_d
DEFINE g_pmdg_d_t        type_g_pmdg_d
DEFINE g_pmdg2_d   DYNAMIC ARRAY OF type_g_pmdg2_d
DEFINE g_pmdg2_d_t type_g_pmdg2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_pmdfdocno LIKE pmdf_t.pmdfdocno,
      b_pmdfdocdt LIKE pmdf_t.pmdfdocdt,
      b_pmdf002 LIKE pmdf_t.pmdf002,
   b_pmdf002_desc LIKE type_t.chr80,
      b_pmdf003 LIKE pmdf_t.pmdf003,
   b_pmdf003_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_pmdfdocno LIKE pmdf_t.pmdfdocno,
      b_pmdfdocdt LIKE pmdf_t.pmdfdocdt,
      b_pmdf002 LIKE pmdf_t.pmdf002,
   b_pmdf002_desc LIKE type_t.chr80,
      b_pmdf003 LIKE pmdf_t.pmdf003,
   b_pmdf003_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="apmt420.idx_chk" ver="2" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION apmt420_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pmdg_d.getLength() THEN
         LET g_detail_idx = g_pmdg_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmdg_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmdg_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_pmdg2_d.getLength() THEN
         LET g_detail_idx2 = g_pmdg2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_pmdg2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_pmdg2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="apmt420.init" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apmt420_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('pmdfstus','13','N,X,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL apmt420_default_search()
    
END FUNCTION
]]>
</section>
  <section id="apmt420.input" ver="5" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION apmt420_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT pmdgsite,pmdg001,pmdgseq,pmdg002,pmdg003,pmdg004,pmdg005,pmdg014,pmdg015, 
       pmdg008,pmdg007,pmdg009,pmdg010,pmdg018,pmdg011,pmdg012,pmdg013,pmdg017,pmdg016,pmdg030 FROM  
       pmdg_t WHERE pmdgent=? AND pmdgdocno=? AND pmdgseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt420_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT pmdh001,pmdh002,pmdh003,pmdh004 FROM pmdh_t WHERE pmdhent=? AND pmdhdocno=?  
       AND pmdhseq=? AND pmdh001=? AND pmdh002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt420_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apmt420_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apmt420_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite,g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002, 
       g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus,g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007, 
       g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010,g_pmdf_m.pmdf030
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="apmt420.input.body" ver="7" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_pmdg_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmdg_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmt420_b_fill()
            LET g_rec_b = g_pmdg_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
                           CALL apmt420_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmt420_cl USING g_enterprise,g_pmdf_m.pmdfdocno
            IF STATUS THEN
               CALL cl_err("OPEN apmt420_cl:", STATUS, 1)
               CLOSE apmt420_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_pmdg_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmdg_d[l_ac].pmdgseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_pmdg_d_t.* = g_pmdg_d[l_ac].*  #BACKUP
               CALL apmt420_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL apmt420_set_no_entry_b(l_cmd)
               IF NOT apmt420_lock_b("pmdg_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmt420_bcl INTO g_pmdg_d[l_ac].pmdgsite,g_pmdg_d[l_ac].pmdg001,g_pmdg_d[l_ac].pmdgseq, 
                      g_pmdg_d[l_ac].pmdg002,g_pmdg_d[l_ac].pmdg003,g_pmdg_d[l_ac].pmdg004,g_pmdg_d[l_ac].pmdg005, 
                      g_pmdg_d[l_ac].pmdg014,g_pmdg_d[l_ac].pmdg015,g_pmdg_d[l_ac].pmdg008,g_pmdg_d[l_ac].pmdg007, 
                      g_pmdg_d[l_ac].pmdg009,g_pmdg_d[l_ac].pmdg010,g_pmdg_d[l_ac].pmdg018,g_pmdg_d[l_ac].pmdg011, 
                      g_pmdg_d[l_ac].pmdg012,g_pmdg_d[l_ac].pmdg013,g_pmdg_d[l_ac].pmdg017,g_pmdg_d[l_ac].pmdg016, 
                      g_pmdg_d[l_ac].pmdg030
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_pmdg_d_t.pmdgseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL apmt420_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmdg_d[l_ac].* TO NULL 
                  LET g_pmdg_d[l_ac].pmdg009 = "N"
      LET g_pmdg_d[l_ac].pmdg012 = "0"
      LET g_pmdg_d[l_ac].pmdg013 = "0"
 
            LET g_pmdg_d_t.* = g_pmdg_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmt420_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL apmt420_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmdg_d[li_reproduce_target].* = g_pmdg_d[li_reproduce].*
 
               LET g_pmdg_d[li_reproduce_target].pmdgseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM pmdg_t 
             WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno
 
               AND pmdgseq = g_pmdg_d[l_ac].pmdgseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmdf_m.pmdfdocno
               LET gs_keys[2] = g_pmdg_d[g_detail_idx].pmdgseq
               CALL apmt420_insert_b('pmdg_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_pmdg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("pmdg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmt420_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_pmdg_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_pmdg_d.deleteElement(l_ac)
               NEXT FIELD pmdgseq
            END IF
         
            IF g_pmdg_d[l_ac].pmdgseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM pmdg_t
                WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno AND
 
                      pmdgseq = g_pmdg_d_t.pmdgseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmdg_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE apmt420_bcl
               LET l_count = g_pmdg_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmdf_m.pmdfdocno
               LET gs_keys[2] = g_pmdg_d[g_detail_idx].pmdgseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL apmt420_delete_b('pmdg_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD pmdg001
            #add-point:BEFORE FIELD pmdg001
            {<point name="input.b.page1.pmdg001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg001
            
            #add-point:AFTER FIELD pmdg001
            {<point name="input.a.page1.pmdg001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg001
            #add-point:ON CHANGE pmdg001
            {<point name="input.g.page1.pmdg001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdgseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pmdg_d[l_ac].pmdgseq,"1","1","","","azz-00079",1) THEN
               NEXT FIELD pmdgseq
            END IF
 
 
            #add-point:AFTER FIELD pmdgseq
            {<point name="input.a.page1.pmdgseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdgseq
            #add-point:BEFORE FIELD pmdgseq
            {<point name="input.b.page1.pmdgseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdgseq
            #add-point:ON CHANGE pmdgseq
            {<point name="input.g.page1.pmdgseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg002
            
            #add-point:AFTER FIELD pmdg002
            {<point name="input.a.page1.pmdg002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg002
            #add-point:BEFORE FIELD pmdg002
            {<point name="input.b.page1.pmdg002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg002
            #add-point:ON CHANGE pmdg002
            {<point name="input.g.page1.pmdg002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg003
            
            #add-point:AFTER FIELD pmdg003
            {<point name="input.a.page1.pmdg003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg003
            #add-point:BEFORE FIELD pmdg003
            {<point name="input.b.page1.pmdg003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg003
            #add-point:ON CHANGE pmdg003
            {<point name="input.g.page1.pmdg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg004
            #add-point:BEFORE FIELD pmdg004
            {<point name="input.b.page1.pmdg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg004
            
            #add-point:AFTER FIELD pmdg004
            {<point name="input.a.page1.pmdg004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg004
            #add-point:ON CHANGE pmdg004
            {<point name="input.g.page1.pmdg004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg005
            
            #add-point:AFTER FIELD pmdg005
            {<point name="input.a.page1.pmdg005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg005
            #add-point:BEFORE FIELD pmdg005
            {<point name="input.b.page1.pmdg005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg005
            #add-point:ON CHANGE pmdg005
            {<point name="input.g.page1.pmdg005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg014
            
            #add-point:AFTER FIELD pmdg014
            {<point name="input.a.page1.pmdg014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg014
            #add-point:BEFORE FIELD pmdg014
            {<point name="input.b.page1.pmdg014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg014
            #add-point:ON CHANGE pmdg014
            {<point name="input.g.page1.pmdg014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg015
            #add-point:BEFORE FIELD pmdg015
            {<point name="input.b.page1.pmdg015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg015
            
            #add-point:AFTER FIELD pmdg015
            {<point name="input.a.page1.pmdg015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg015
            #add-point:ON CHANGE pmdg015
            {<point name="input.g.page1.pmdg015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg008
            
            #add-point:AFTER FIELD pmdg008
            {<point name="input.a.page1.pmdg008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg008
            #add-point:BEFORE FIELD pmdg008
            {<point name="input.b.page1.pmdg008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg008
            #add-point:ON CHANGE pmdg008
            {<point name="input.g.page1.pmdg008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pmdg_d[l_ac].pmdg007,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD pmdg007
            END IF
 
 
            #add-point:AFTER FIELD pmdg007
            {<point name="input.a.page1.pmdg007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg007
            #add-point:BEFORE FIELD pmdg007
            {<point name="input.b.page1.pmdg007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg007
            #add-point:ON CHANGE pmdg007
            {<point name="input.g.page1.pmdg007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg009
            #add-point:BEFORE FIELD pmdg009
            {<point name="input.b.page1.pmdg009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg009
            
            #add-point:AFTER FIELD pmdg009
            {<point name="input.a.page1.pmdg009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg009
            #add-point:ON CHANGE pmdg009
            {<point name="input.g.page1.pmdg009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg010
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pmdg_d[l_ac].pmdg010,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD pmdg010
            END IF
 
 
            #add-point:AFTER FIELD pmdg010
            {<point name="input.a.page1.pmdg010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg010
            #add-point:BEFORE FIELD pmdg010
            {<point name="input.b.page1.pmdg010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg010
            #add-point:ON CHANGE pmdg010
            {<point name="input.g.page1.pmdg010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg018
            
            #add-point:AFTER FIELD pmdg018
            {<point name="input.a.page1.pmdg018" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg018
            #add-point:BEFORE FIELD pmdg018
            {<point name="input.b.page1.pmdg018" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg018
            #add-point:ON CHANGE pmdg018
            {<point name="input.g.page1.pmdg018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg011
            #add-point:BEFORE FIELD pmdg011
            {<point name="input.b.page1.pmdg011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg011
            
            #add-point:AFTER FIELD pmdg011
            {<point name="input.a.page1.pmdg011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg011
            #add-point:ON CHANGE pmdg011
            {<point name="input.g.page1.pmdg011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pmdg_d[l_ac].pmdg012,"0.000","1","100.000","1","azz-00087",1) THEN 

               NEXT FIELD pmdg012
            END IF
 
 
            #add-point:AFTER FIELD pmdg012
            {<point name="input.a.page1.pmdg012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg012
            #add-point:BEFORE FIELD pmdg012
            {<point name="input.b.page1.pmdg012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg012
            #add-point:ON CHANGE pmdg012
            {<point name="input.g.page1.pmdg012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg013
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pmdg_d[l_ac].pmdg013,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD pmdg013
            END IF
 
 
            #add-point:AFTER FIELD pmdg013
            {<point name="input.a.page1.pmdg013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg013
            #add-point:BEFORE FIELD pmdg013
            {<point name="input.b.page1.pmdg013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg013
            #add-point:ON CHANGE pmdg013
            {<point name="input.g.page1.pmdg013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg017
            #add-point:BEFORE FIELD pmdg017
            {<point name="input.b.page1.pmdg017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg017
            
            #add-point:AFTER FIELD pmdg017
            {<point name="input.a.page1.pmdg017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg017
            #add-point:ON CHANGE pmdg017
            {<point name="input.g.page1.pmdg017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg016
            
            #add-point:AFTER FIELD pmdg016
            {<point name="input.a.page1.pmdg016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg016
            #add-point:BEFORE FIELD pmdg016
            {<point name="input.b.page1.pmdg016" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg016
            #add-point:ON CHANGE pmdg016
            {<point name="input.g.page1.pmdg016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdg030
            #add-point:BEFORE FIELD pmdg030
            {<point name="input.b.page1.pmdg030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdg030
            
            #add-point:AFTER FIELD pmdg030
            {<point name="input.a.page1.pmdg030" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdg030
            #add-point:ON CHANGE pmdg030
            {<point name="input.g.page1.pmdg030" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.pmdg001
         ON ACTION controlp INFIELD pmdg001
            #add-point:ON ACTION controlp INFIELD pmdg001
            {<point name="input.c.page1.pmdg001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdgseq
         ON ACTION controlp INFIELD pmdgseq
            #add-point:ON ACTION controlp INFIELD pmdgseq
            {<point name="input.c.page1.pmdgseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg002
         ON ACTION controlp INFIELD pmdg002
            #add-point:ON ACTION controlp INFIELD pmdg002
            {<point name="input.c.page1.pmdg002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg003
         ON ACTION controlp INFIELD pmdg003
            #add-point:ON ACTION controlp INFIELD pmdg003
            {<point name="input.c.page1.pmdg003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg004
         ON ACTION controlp INFIELD pmdg004
            #add-point:ON ACTION controlp INFIELD pmdg004
            {<point name="input.c.page1.pmdg004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg005
         ON ACTION controlp INFIELD pmdg005
            #add-point:ON ACTION controlp INFIELD pmdg005
            {<point name="input.c.page1.pmdg005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg014
         ON ACTION controlp INFIELD pmdg014
            #add-point:ON ACTION controlp INFIELD pmdg014
            {<point name="input.c.page1.pmdg014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg015
         ON ACTION controlp INFIELD pmdg015
            #add-point:ON ACTION controlp INFIELD pmdg015
            {<point name="input.c.page1.pmdg015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg008
         ON ACTION controlp INFIELD pmdg008
            #add-point:ON ACTION controlp INFIELD pmdg008
            {<point name="input.c.page1.pmdg008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg007
         ON ACTION controlp INFIELD pmdg007
            #add-point:ON ACTION controlp INFIELD pmdg007
            {<point name="input.c.page1.pmdg007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg009
         ON ACTION controlp INFIELD pmdg009
            #add-point:ON ACTION controlp INFIELD pmdg009
            {<point name="input.c.page1.pmdg009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg010
         ON ACTION controlp INFIELD pmdg010
            #add-point:ON ACTION controlp INFIELD pmdg010
            {<point name="input.c.page1.pmdg010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg018
         ON ACTION controlp INFIELD pmdg018
            #add-point:ON ACTION controlp INFIELD pmdg018
            {<point name="input.c.page1.pmdg018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg011
         ON ACTION controlp INFIELD pmdg011
            #add-point:ON ACTION controlp INFIELD pmdg011
            {<point name="input.c.page1.pmdg011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg012
         ON ACTION controlp INFIELD pmdg012
            #add-point:ON ACTION controlp INFIELD pmdg012
            {<point name="input.c.page1.pmdg012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg013
         ON ACTION controlp INFIELD pmdg013
            #add-point:ON ACTION controlp INFIELD pmdg013
            {<point name="input.c.page1.pmdg013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg017
         ON ACTION controlp INFIELD pmdg017
            #add-point:ON ACTION controlp INFIELD pmdg017
            {<point name="input.c.page1.pmdg017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg016
         ON ACTION controlp INFIELD pmdg016
            #add-point:ON ACTION controlp INFIELD pmdg016
            {<point name="input.c.page1.pmdg016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.pmdg030
         ON ACTION controlp INFIELD pmdg030
            #add-point:ON ACTION controlp INFIELD pmdg030
            {<point name="input.c.page1.pmdg030" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_pmdg_d[l_ac].* = g_pmdg_d_t.*
               CLOSE apmt420_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_pmdg_d[l_ac].pmdgseq,-263,1)
               LET g_pmdg_d[l_ac].* = g_pmdg_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE pmdg_t SET (pmdgdocno,pmdgsite,pmdg001,pmdgseq,pmdg002,pmdg003,pmdg004,pmdg005, 
                   pmdg014,pmdg015,pmdg008,pmdg007,pmdg009,pmdg010,pmdg018,pmdg011,pmdg012,pmdg013,pmdg017, 
                   pmdg016,pmdg030) = (g_pmdf_m.pmdfdocno,g_pmdg_d[l_ac].pmdgsite,g_pmdg_d[l_ac].pmdg001, 
                   g_pmdg_d[l_ac].pmdgseq,g_pmdg_d[l_ac].pmdg002,g_pmdg_d[l_ac].pmdg003,g_pmdg_d[l_ac].pmdg004, 
                   g_pmdg_d[l_ac].pmdg005,g_pmdg_d[l_ac].pmdg014,g_pmdg_d[l_ac].pmdg015,g_pmdg_d[l_ac].pmdg008, 
                   g_pmdg_d[l_ac].pmdg007,g_pmdg_d[l_ac].pmdg009,g_pmdg_d[l_ac].pmdg010,g_pmdg_d[l_ac].pmdg018, 
                   g_pmdg_d[l_ac].pmdg011,g_pmdg_d[l_ac].pmdg012,g_pmdg_d[l_ac].pmdg013,g_pmdg_d[l_ac].pmdg017, 
                   g_pmdg_d[l_ac].pmdg016,g_pmdg_d[l_ac].pmdg030)
                WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdf_m.pmdfdocno 
 
                  AND pmdgseq = g_pmdg_d_t.pmdgseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("pmdg_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_pmdg_d[l_ac].* = g_pmdg_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("pmdg_t",SQLCA.sqlcode,1)
                     LET g_pmdg_d[l_ac].* = g_pmdg_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmdf_m.pmdfdocno
               LET gs_keys_bak[1] = g_pmdfdocno_t
               LET gs_keys[2] = g_pmdg_d[g_detail_idx].pmdgseq
               LET gs_keys_bak[2] = g_pmdg_d_t.pmdgseq
               CALL apmt420_update_b('pmdg_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_pmdf_m),util.JSON.stringify(g_pmdg_d_t)
               LET g_log2 = util.JSON.stringify(g_pmdf_m),util.JSON.stringify(g_pmdg_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL apmt420_unlock_b("pmdg_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_pmdg_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_pmdg_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
      DISPLAY ARRAY g_pmdg2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW 
            CALL apmt420_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx2 = l_ac
            
            #add-point:page2, before row動作
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL apmt420_idx_chk()
            LET g_current_page = 2
      
         #自訂ACTION(detail_show,page_2)
         
      
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
 
      
]]>
</section>
  <section id="apmt420.input.head" ver="7" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite,g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002, 
          g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus,g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007, 
          g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010,g_pmdf_m.pmdf030 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD pmdf001
            #add-point:BEFORE FIELD pmdf001
            {<point name="input.b.pmdf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf001
            
            #add-point:AFTER FIELD pmdf001
            {<point name="input.a.pmdf001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf001
            #add-point:ON CHANGE pmdf001
            {<point name="input.g.pmdf001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfsite
            #add-point:BEFORE FIELD pmdfsite
            {<point name="input.b.pmdfsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfsite
            
            #add-point:AFTER FIELD pmdfsite
            {<point name="input.a.pmdfsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdfsite
            #add-point:ON CHANGE pmdfsite
            {<point name="input.g.pmdfsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfdocno
            
            #add-point:AFTER FIELD pmdfdocno
            {<point name="input.a.pmdfdocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfdocno
            #add-point:BEFORE FIELD pmdfdocno
            {<point name="input.b.pmdfdocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdfdocno
            #add-point:ON CHANGE pmdfdocno
            {<point name="input.g.pmdfdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfdocdt
            #add-point:BEFORE FIELD pmdfdocdt
            {<point name="input.b.pmdfdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfdocdt
            
            #add-point:AFTER FIELD pmdfdocdt
            {<point name="input.a.pmdfdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdfdocdt
            #add-point:ON CHANGE pmdfdocdt
            {<point name="input.g.pmdfdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf002
            
            #add-point:AFTER FIELD pmdf002
            {<point name="input.a.pmdf002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf002
            #add-point:BEFORE FIELD pmdf002
            {<point name="input.b.pmdf002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf002
            #add-point:ON CHANGE pmdf002
            {<point name="input.g.pmdf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf004
            
            #add-point:AFTER FIELD pmdf004
            {<point name="input.a.pmdf004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf004
            #add-point:BEFORE FIELD pmdf004
            {<point name="input.b.pmdf004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf004
            #add-point:ON CHANGE pmdf004
            {<point name="input.g.pmdf004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf003
            
            #add-point:AFTER FIELD pmdf003
            {<point name="input.a.pmdf003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf003
            #add-point:BEFORE FIELD pmdf003
            {<point name="input.b.pmdf003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf003
            #add-point:ON CHANGE pmdf003
            {<point name="input.g.pmdf003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdfstus
            #add-point:BEFORE FIELD pmdfstus
            {<point name="input.b.pmdfstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdfstus
            
            #add-point:AFTER FIELD pmdfstus
            {<point name="input.a.pmdfstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdfstus
            #add-point:ON CHANGE pmdfstus
            {<point name="input.g.pmdfstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf005
            
            #add-point:AFTER FIELD pmdf005
            {<point name="input.a.pmdf005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf005
            #add-point:BEFORE FIELD pmdf005
            {<point name="input.b.pmdf005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf005
            #add-point:ON CHANGE pmdf005
            {<point name="input.g.pmdf005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf006
            
            #add-point:AFTER FIELD pmdf006
            {<point name="input.a.pmdf006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf006
            #add-point:BEFORE FIELD pmdf006
            {<point name="input.b.pmdf006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf006
            #add-point:ON CHANGE pmdf006
            {<point name="input.g.pmdf006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf007
            #add-point:BEFORE FIELD pmdf007
            {<point name="input.b.pmdf007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf007
            
            #add-point:AFTER FIELD pmdf007
            {<point name="input.a.pmdf007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf007
            #add-point:ON CHANGE pmdf007
            {<point name="input.g.pmdf007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf008
            #add-point:BEFORE FIELD pmdf008
            {<point name="input.b.pmdf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf008
            
            #add-point:AFTER FIELD pmdf008
            {<point name="input.a.pmdf008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf008
            #add-point:ON CHANGE pmdf008
            {<point name="input.g.pmdf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf009
            
            #add-point:AFTER FIELD pmdf009
            {<point name="input.a.pmdf009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf009
            #add-point:BEFORE FIELD pmdf009
            {<point name="input.b.pmdf009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf009
            #add-point:ON CHANGE pmdf009
            {<point name="input.g.pmdf009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf010
            
            #add-point:AFTER FIELD pmdf010
            {<point name="input.a.pmdf010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf010
            #add-point:BEFORE FIELD pmdf010
            {<point name="input.b.pmdf010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf010
            #add-point:ON CHANGE pmdf010
            {<point name="input.g.pmdf010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD pmdf030
            #add-point:BEFORE FIELD pmdf030
            {<point name="input.b.pmdf030" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD pmdf030
            
            #add-point:AFTER FIELD pmdf030
            {<point name="input.a.pmdf030" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE pmdf030
            #add-point:ON CHANGE pmdf030
            {<point name="input.g.pmdf030" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.pmdf001
         ON ACTION controlp INFIELD pmdf001
            #add-point:ON ACTION controlp INFIELD pmdf001
            {<point name="input.c.pmdf001" />}
            #END add-point
 
         #Ctrlp:input.c.pmdfsite
         ON ACTION controlp INFIELD pmdfsite
            #add-point:ON ACTION controlp INFIELD pmdfsite
            {<point name="input.c.pmdfsite" />}
            #END add-point
 
         #Ctrlp:input.c.pmdfdocno
         ON ACTION controlp INFIELD pmdfdocno
            #add-point:ON ACTION controlp INFIELD pmdfdocno
            {<point name="input.c.pmdfdocno" />}
            #END add-point
 
         #Ctrlp:input.c.pmdfdocdt
         ON ACTION controlp INFIELD pmdfdocdt
            #add-point:ON ACTION controlp INFIELD pmdfdocdt
            {<point name="input.c.pmdfdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf002
         ON ACTION controlp INFIELD pmdf002
            #add-point:ON ACTION controlp INFIELD pmdf002
            {<point name="input.c.pmdf002" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf004
         ON ACTION controlp INFIELD pmdf004
            #add-point:ON ACTION controlp INFIELD pmdf004
            {<point name="input.c.pmdf004" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf003
         ON ACTION controlp INFIELD pmdf003
            #add-point:ON ACTION controlp INFIELD pmdf003
            {<point name="input.c.pmdf003" />}
            #END add-point
 
         #Ctrlp:input.c.pmdfstus
         ON ACTION controlp INFIELD pmdfstus
            #add-point:ON ACTION controlp INFIELD pmdfstus
            {<point name="input.c.pmdfstus" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf005
         ON ACTION controlp INFIELD pmdf005
            #add-point:ON ACTION controlp INFIELD pmdf005
            {<point name="input.c.pmdf005" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf006
         ON ACTION controlp INFIELD pmdf006
            #add-point:ON ACTION controlp INFIELD pmdf006
            {<point name="input.c.pmdf006" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf007
         ON ACTION controlp INFIELD pmdf007
            #add-point:ON ACTION controlp INFIELD pmdf007
            {<point name="input.c.pmdf007" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf008
         ON ACTION controlp INFIELD pmdf008
            #add-point:ON ACTION controlp INFIELD pmdf008
            {<point name="input.c.pmdf008" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf009
         ON ACTION controlp INFIELD pmdf009
            #add-point:ON ACTION controlp INFIELD pmdf009
            {<point name="input.c.pmdf009" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf010
         ON ACTION controlp INFIELD pmdf010
            #add-point:ON ACTION controlp INFIELD pmdf010
            {<point name="input.c.pmdf010" />}
            #END add-point
 
         #Ctrlp:input.c.pmdf030
         ON ACTION controlp INFIELD pmdf030
            #add-point:ON ACTION controlp INFIELD pmdf030
            {<point name="input.c.pmdf030" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_pmdf_m.pmdfdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO pmdf_t (pmdfent,pmdf001,pmdfsite,pmdfdocno,pmdfdocdt,pmdf002,pmdf004,pmdf003, 
                   pmdfstus,pmdf005,pmdf006,pmdf007,pmdf008,pmdf009,pmdf010,pmdf030,pmdfownid,pmdfowndp, 
                   pmdfcrtid,pmdfcrtdp,pmdfcrtdt,pmdfcnfid,pmdfcnfdt)
               VALUES (g_enterprise,g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite,g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt, 
                   g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus,g_pmdf_m.pmdf005, 
                   g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010, 
                   g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtdp, 
                   g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_pmdf_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apmt420_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE pmdf_t SET (pmdf001,pmdfsite,pmdfdocno,pmdfdocdt,pmdf002,pmdf004,pmdf003,pmdfstus, 
                   pmdf005,pmdf006,pmdf007,pmdf008,pmdf009,pmdf010,pmdf030,pmdfownid,pmdfowndp,pmdfcrtid, 
                   pmdfcrtdp,pmdfcrtdt,pmdfcnfid,pmdfcnfdt) = (g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite,g_pmdf_m.pmdfdocno, 
                   g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus, 
                   g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009, 
                   g_pmdf_m.pmdf010,g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid, 
                   g_pmdf_m.pmdfcrtdp,g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt)
                WHERE pmdfent = g_enterprise AND pmdfdocno = g_pmdfdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("pmdf_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_pmdf_m_t)
               LET g_log2 = util.JSON.stringify(g_pmdf_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_pmdfdocno_t = g_pmdf_m.pmdfdocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="apmt420.input.other" ver="5" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD pmdfdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pmdgsite
               WHEN "s_detail2"
                  NEXT FIELD seq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="apmt420.insert" ver="4" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION apmt420_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_pmdg_d.clear()   
   CALL g_pmdg2_d.clear()  
 
 
   INITIALIZE g_pmdf_m.* LIKE pmdf_t.*             #DEFAULT 設定
   
   LET g_pmdfdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_pmdf_m.pmdfownid = g_user
      LET g_pmdf_m.pmdfowndp = g_dept
      LET g_pmdf_m.pmdfcrtid = g_user
      LET g_pmdf_m.pmdfcrtdp = g_dept 
      LET g_pmdf_m.pmdfcrtdt = cl_get_current()
      LET g_pmdf_m.pmdfmodid = ""
      LET g_pmdf_m.pmdfmoddt = ""
      LET g_pmdf_m.pmdfstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_pmdf_m.pmdfstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL apmt420_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pmdf_m.* = g_pmdf_m_t.*
         CALL apmt420_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_pmdg_d.clear()
      CALL g_pmdg2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_pmdfdocno_t = g_pmdf_m.pmdfdocno
 
   
   LET g_wc = g_wc,  
              " OR ( pmdfent = '" ||g_enterprise|| "' AND",
              " pmdfdocno = '", g_pmdf_m.pmdfdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE apmt420_cl
   
END FUNCTION
]]>
</section>
  <section id="apmt420.insert_b" ver="3" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION apmt420_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO pmdg_t
                  (pmdgent,
                   pmdgdocno,
                   pmdgseq
                   ,pmdgsite,pmdg001,pmdg002,pmdg003,pmdg004,pmdg005,pmdg014,pmdg015,pmdg008,pmdg007,pmdg009,pmdg010,pmdg018,pmdg011,pmdg012,pmdg013,pmdg017,pmdg016,pmdg030) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_pmdg_d[g_detail_idx].pmdgsite,g_pmdg_d[g_detail_idx].pmdg001,g_pmdg_d[g_detail_idx].pmdg002, 
                       g_pmdg_d[g_detail_idx].pmdg003,g_pmdg_d[g_detail_idx].pmdg004,g_pmdg_d[g_detail_idx].pmdg005, 
                       g_pmdg_d[g_detail_idx].pmdg014,g_pmdg_d[g_detail_idx].pmdg015,g_pmdg_d[g_detail_idx].pmdg008, 
                       g_pmdg_d[g_detail_idx].pmdg007,g_pmdg_d[g_detail_idx].pmdg009,g_pmdg_d[g_detail_idx].pmdg010, 
                       g_pmdg_d[g_detail_idx].pmdg018,g_pmdg_d[g_detail_idx].pmdg011,g_pmdg_d[g_detail_idx].pmdg012, 
                       g_pmdg_d[g_detail_idx].pmdg013,g_pmdg_d[g_detail_idx].pmdg017,g_pmdg_d[g_detail_idx].pmdg016, 
                       g_pmdg_d[g_detail_idx].pmdg030)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdg_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO pmdh_t
                  (pmdhent,
                   pmdhdocno,pmdhseq,
                   pmdh001,pmdh002
                   ,pmdh003,pmdh004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_pmdg2_d[g_detail_idx2].pmdh003,g_pmdg2_d[g_detail_idx2].pmdh004)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("pmdh_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="apmt420.lock_b" ver="3" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION apmt420_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL apmt420_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pmdg_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apmt420_bcl USING g_enterprise,
                                       g_pmdf_m.pmdfdocno,g_pmdg_d[g_detail_idx].pmdgseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("apmt420_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "pmdh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN apmt420_bcl2 USING g_enterprise,
                                             g_pmdf_m.pmdfdocno,g_pmdg_d[g_detail_idx].pmdgseq,
                                             g_pmdg2_d[g_detail_idx2].pmdh001,g_pmdg2_d[g_detail_idx2].pmdh002 

      IF SQLCA.sqlcode THEN
         CALL cl_err("apmt420_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="apmt420.main" ver="9" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT pmdf001,pmdfsite,pmdfdocno,'',pmdfdocdt,pmdf002,'','','',pmdf004,'',pmdf003, 
       '',pmdfstus,pmdf005,'',pmdf006,'',pmdf007,pmdf008,pmdf009,'',pmdf010,'',pmdf030,pmdfownid,'', 
       pmdfowndp,'',pmdfcrtid,'',pmdfcrtdp,'',pmdfcrtdt,pmdfmodid,'',pmdfmoddt,pmdfcnfid,'',pmdfcnfdt", 
        
                      " FROM pmdf_t",
                      " WHERE pmdfent= ? AND pmdfdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt420_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE pmdf001,pmdfsite,pmdfdocno,pmdfdocdt,pmdf002,pmdf004,pmdf003,pmdfstus, 
       pmdf005,pmdf006,pmdf007,pmdf008,pmdf009,pmdf010,pmdf030,pmdfownid,pmdfowndp,pmdfcrtid,pmdfcrtdp, 
       pmdfcrtdt,pmdfmodid,pmdfmoddt,pmdfcnfid,pmdfcnfdt,t1.oofa011 ,t2.pmaal004 ,t3.ooefl003 ,t4.ooail003 , 
       t5.ooibl004 ,t6.oocql004 ,t7.oofa011 ,t8.ooefl003 ,t9.oofa011 ,t10.ooefl003 ,t11.oofa011 ,t12.oofa011", 

               " FROM pmdf_t",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=pmdf002  ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=pmdf004 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=pmdf003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t4 ON t4.ooailent='"||g_enterprise||"' AND t4.ooail001=pmdf005 AND t4.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t5 ON t5.ooiblent='"||g_enterprise||"' AND t5.ooibl002=pmdf009 AND t5.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='238' AND t6.oocql002=pmdf010 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=pmdfownid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=pmdfowndp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=pmdfcrtid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent='"||g_enterprise||"' AND t10.ooefl001=pmdfcrtdp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=pmdfmodid  ",
               " LEFT JOIN oofa_t t12 ON t12.oofaent='"||g_enterprise||"' AND t12.oofa002='2' AND t12.oofa003=pmdfcnfid  ",
 
               " WHERE pmdfent = '" ||g_enterprise|| "' AND pmdfdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apmt420_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmt420 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmt420_init()   
 
      #進入選單 Menu (="N")
      CALL apmt420_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apmt420
      
   END IF 
   
   CLOSE apmt420_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="apmt420.modify" ver="10" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION apmt420_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_pmdf_m.pmdfdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE apmt420_master_referesh USING g_pmdf_m.pmdfdocno INTO g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite, 
       g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus, 
       g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010, 
       g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtdp, 
       g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt, 
       g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003_desc,g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf009_desc, 
       g_pmdf_m.pmdf010_desc,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid_desc, 
       g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfcnfid_desc
 
   ERROR ""
  
   LET g_pmdfdocno_t = g_pmdf_m.pmdfdocno
 
   CALL s_transaction_begin()
   
   OPEN apmt420_cl USING g_enterprise,g_pmdf_m.pmdfdocno
   IF STATUS THEN
      CALL cl_err("OPEN apmt420_cl:", STATUS, 1)
      CLOSE apmt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt420_master_referesh USING g_pmdf_m.pmdfdocno INTO g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite, 
       g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus, 
       g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010, 
       g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtdp, 
       g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt, 
       g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003_desc,g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf009_desc, 
       g_pmdf_m.pmdf010_desc,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid_desc, 
       g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_pmdf_m.pmdfdocno,SQLCA.sqlcode,0)
      CLOSE apmt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL apmt420_show()
   WHILE TRUE
      LET g_pmdfdocno_t = g_pmdf_m.pmdfdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_pmdf_m.pmdfmodid = g_user 
LET g_pmdf_m.pmdfmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL apmt420_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pmdf_m.* = g_pmdf_m_t.*
         CALL apmt420_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE pmdf_t SET (pmdfmodid,pmdfmoddt) = (g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmoddt)
       WHERE pmdfent = g_enterprise AND pmdfdocno = g_pmdfdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_pmdf_m.pmdfdocno != g_pmdfdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE pmdg_t SET pmdgdocno = g_pmdf_m.pmdfdocno
 
          WHERE pmdgent = g_enterprise AND pmdgdocno = g_pmdfdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("pmdg_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("pmdg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE pmdh_t
            SET pmdhdocno = g_pmdf_m.pmdfdocno
 
          WHERE pmdhent = g_enterprise AND
                pmdhdocno = g_pmdfdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("pmdh_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("pmdh_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_pmdf_m.pmdfdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE apmt420_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_pmdf_m.pmdfdocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="apmt420.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="apmt420.other_function" ver="2" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="apmt420.query" ver="5" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apmt420_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_pmdg_d.clear()
   CALL g_pmdg2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL apmt420_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL apmt420_browser_fill("")
      CALL apmt420_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL apmt420_filter_show('pmdfdocno')
   CALL apmt420_filter_show('pmdfdocdt')
   CALL apmt420_filter_show('pmdf002')
   CALL apmt420_filter_show('pmdf003')
   CALL apmt420_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL apmt420_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="apmt420.reproduce" ver="4" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION apmt420_reproduce()
   DEFINE l_newno     LIKE pmdf_t.pmdfdocno 
   DEFINE l_oldno     LIKE pmdf_t.pmdfdocno 
 
   DEFINE l_master    RECORD LIKE pmdf_t.*
   DEFINE l_detail    RECORD LIKE pmdg_t.*
 
   DEFINE l_detail2    RECORD LIKE pmdh_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_pmdf_m.pmdfdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_pmdfdocno_t = g_pmdf_m.pmdfdocno
 
    
   LET g_pmdf_m.pmdfdocno = ""
 
    
   CALL apmt420_set_entry('a')
   CALL apmt420_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_pmdf_m.pmdfownid = g_user
      LET g_pmdf_m.pmdfowndp = g_dept
      LET g_pmdf_m.pmdfcrtid = g_user
      LET g_pmdf_m.pmdfcrtdp = g_dept 
      LET g_pmdf_m.pmdfcrtdt = cl_get_current()
      LET g_pmdf_m.pmdfmodid = ""
      LET g_pmdf_m.pmdfmoddt = ""
      LET g_pmdf_m.pmdfstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL apmt420_input("r")
   
      LET g_pmdf_m.pmdfdocno_desc = ''
   DISPLAY BY NAME g_pmdf_m.pmdfdocno_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " pmdfdocno = '", g_pmdf_m.pmdfdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apmt420.set_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION apmt420_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pmdfdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="apmt420.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION apmt420_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="apmt420.set_no_entry" ver="3" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION apmt420_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pmdfdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="apmt420.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION apmt420_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="apmt420.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION apmt420_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pmdf_m.pmdfdocno
   LET g_pk_array[1].column = 'pmdfdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="apmt420.show" ver="7" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apmt420_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_pmdf_m_t.* = g_pmdf_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL apmt420_b_fill() #單身填充
      CALL apmt420_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_pmdf_m.pmdfownid_desc = cl_get_username(g_pmdf_m.pmdfownid)
      #LET g_pmdf_m.pmdfowndp_desc = cl_get_deptname(g_pmdf_m.pmdfowndp)
      #LET g_pmdf_m.pmdfcrtid_desc = cl_get_username(g_pmdf_m.pmdfcrtid)
      #LET g_pmdf_m.pmdfcrtdp_desc = cl_get_deptname(g_pmdf_m.pmdfcrtdp)
      #LET g_pmdf_m.pmdfmodid_desc = cl_get_username(g_pmdf_m.pmdfmodid)
      #LET g_pmdf_m.pmdfcnfid_desc = cl_get_deptname(g_pmdf_m.pmdfcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL apmt420_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite,g_pmdf_m.pmdfdocno,g_pmdf_m.fflabel1,g_pmdf_m.pmdfdocdt, 
       g_pmdf_m.pmdf002,g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdfdocno_desc,g_pmdf_m.fflabel3,g_pmdf_m.pmdf004, 
       g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003,g_pmdf_m.pmdf003_desc,g_pmdf_m.pmdfstus,g_pmdf_m.pmdf005, 
       g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf006,g_pmdf_m.pmdf006_desc,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008, 
       g_pmdf_m.pmdf009,g_pmdf_m.pmdf009_desc,g_pmdf_m.pmdf010,g_pmdf_m.pmdf010_desc,g_pmdf_m.pmdf030, 
       g_pmdf_m.pmdfownid,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid, 
       g_pmdf_m.pmdfcrtid_desc,g_pmdf_m.pmdfcrtdp,g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid, 
       g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfid_desc,g_pmdf_m.pmdfcnfdt 

   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_pmdf_m.pmdfstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_pmdg_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_pmdg2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apmt420_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="apmt420.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="apmt420.state_change" ver="5" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION apmt420_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_pmdf_m.pmdfdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_pmdf_m.pmdfstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE pmdf_t SET pmdfstus = lc_state 
    WHERE pmdfent = g_enterprise AND pmdfdocno = g_pmdf_m.pmdfdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_pmdf_m.pmdfstus = lc_state
      DISPLAY BY NAME g_pmdf_m.pmdfstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="apmt420.ui_browser_refresh" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apmt420_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pmdfdocno = g_pmdf_m.pmdfdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="apmt420.ui_detailshow" ver="2" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION apmt420_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="apmt420.ui_dialog" ver="21" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION apmt420_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apmt420_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL apmt420_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_pmdfdocno = g_pmdfdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL apmt420_fetch('') # reload data
               LET l_ac = 1
               CALL apmt420_ui_detailshow() #Setting the current row 
      
               CALL apmt420_idx_chk()
               #NEXT FIELD pmdgseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_pmdg_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL apmt420_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
                              CALL apmt420_b_fill2('2')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL apmt420_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         DISPLAY ARRAY g_pmdg2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL apmt420_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL apmt420_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apmt420_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apmt420_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apmt420_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apmt420_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL apmt420_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL apmt420_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL apmt420_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL apmt420_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL apmt420_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt420_idx_chk()
            
         ON ACTION previous
            CALL apmt420_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt420_idx_chk()
            
         ON ACTION jump
            CALL apmt420_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt420_idx_chk()
            
         ON ACTION next
            CALL apmt420_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt420_idx_chk()
            
         ON ACTION last
            CALL apmt420_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt420_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD pmdgseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apmt420_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apmt420_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apmt420_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apmt420_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apmt420_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apmt420_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION open_apmt420_01
            LET g_action_choice="open_apmt420_01"
            IF cl_auth_chk_act("open_apmt420_01") THEN
               
               #add-point:ON ACTION open_apmt420_01
               {<point name="menu.open_apmt420_01" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL apmt420_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apmt420_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apmt420_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_pmdf_m.pmdfdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="apmt420.ui_headershow" ver="4" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION apmt420_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_pmdf_m.pmdfdocno = g_browser[g_current_idx].b_pmdfdocno   
 
   EXECUTE apmt420_master_referesh USING g_pmdf_m.pmdfdocno INTO g_pmdf_m.pmdf001,g_pmdf_m.pmdfsite, 
       g_pmdf_m.pmdfdocno,g_pmdf_m.pmdfdocdt,g_pmdf_m.pmdf002,g_pmdf_m.pmdf004,g_pmdf_m.pmdf003,g_pmdf_m.pmdfstus, 
       g_pmdf_m.pmdf005,g_pmdf_m.pmdf006,g_pmdf_m.pmdf007,g_pmdf_m.pmdf008,g_pmdf_m.pmdf009,g_pmdf_m.pmdf010, 
       g_pmdf_m.pmdf030,g_pmdf_m.pmdfownid,g_pmdf_m.pmdfowndp,g_pmdf_m.pmdfcrtid,g_pmdf_m.pmdfcrtdp, 
       g_pmdf_m.pmdfcrtdt,g_pmdf_m.pmdfmodid,g_pmdf_m.pmdfmoddt,g_pmdf_m.pmdfcnfid,g_pmdf_m.pmdfcnfdt, 
       g_pmdf_m.pmdf002_desc,g_pmdf_m.pmdf004_desc,g_pmdf_m.pmdf003_desc,g_pmdf_m.pmdf005_desc,g_pmdf_m.pmdf009_desc, 
       g_pmdf_m.pmdf010_desc,g_pmdf_m.pmdfownid_desc,g_pmdf_m.pmdfowndp_desc,g_pmdf_m.pmdfcrtid_desc, 
       g_pmdf_m.pmdfcrtdp_desc,g_pmdf_m.pmdfmodid_desc,g_pmdf_m.pmdfcnfid_desc
   CALL apmt420_show()
   
END FUNCTION
]]>
</section>
  <section id="apmt420.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apmt420_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmt420_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmt420_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="apmt420.update_b" ver="3" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION apmt420_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmdg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE pmdg_t 
         SET (pmdgdocno,
              pmdgseq
              ,pmdgsite,pmdg001,pmdg002,pmdg003,pmdg004,pmdg005,pmdg014,pmdg015,pmdg008,pmdg007,pmdg009,pmdg010,pmdg018,pmdg011,pmdg012,pmdg013,pmdg017,pmdg016,pmdg030) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pmdg_d[g_detail_idx].pmdgsite,g_pmdg_d[g_detail_idx].pmdg001,g_pmdg_d[g_detail_idx].pmdg002, 
                  g_pmdg_d[g_detail_idx].pmdg003,g_pmdg_d[g_detail_idx].pmdg004,g_pmdg_d[g_detail_idx].pmdg005, 
                  g_pmdg_d[g_detail_idx].pmdg014,g_pmdg_d[g_detail_idx].pmdg015,g_pmdg_d[g_detail_idx].pmdg008, 
                  g_pmdg_d[g_detail_idx].pmdg007,g_pmdg_d[g_detail_idx].pmdg009,g_pmdg_d[g_detail_idx].pmdg010, 
                  g_pmdg_d[g_detail_idx].pmdg018,g_pmdg_d[g_detail_idx].pmdg011,g_pmdg_d[g_detail_idx].pmdg012, 
                  g_pmdg_d[g_detail_idx].pmdg013,g_pmdg_d[g_detail_idx].pmdg017,g_pmdg_d[g_detail_idx].pmdg016, 
                  g_pmdg_d[g_detail_idx].pmdg030) 
         WHERE pmdgent = g_enterprise AND pmdgdocno = ps_keys_bak[1] AND pmdgseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("pmdg_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("pmdg_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmdh_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE pmdh_t 
         SET (pmdhdocno,pmdhseq,
              pmdh001,pmdh002
              ,pmdh003,pmdh004) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_pmdg2_d[g_detail_idx2].pmdh003,g_pmdg2_d[g_detail_idx2].pmdh004) 
         WHERE pmdhent = g_enterprise AND pmdhdocno = ps_keys_bak[1] AND pmdhseq = ps_keys_bak[2] AND pmdh001 = ps_keys_bak[3] AND pmdh002 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("pmdh_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("pmdh_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmdh_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.key.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE pmdh_t 
         SET (pmdhdocno,pmdhseq) 
              = 
             (ps_keys[1],ps_keys[2]) 
         WHERE pmdhent = g_enterprise AND pmdhdocno = ps_keys_bak[1] AND pmdhseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.key.m_update2"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("pmdh_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("pmdh_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.key.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>