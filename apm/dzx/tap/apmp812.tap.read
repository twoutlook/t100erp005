<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="apmp812" std_prog="apmp812" erpver="1.0" module="APM" ver="1" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.apmp812_create_tmp" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 建立暫存檔
# Memo...........:
# Usage..........: CALL apmp812_create_tmp()
#                  RETURNING r_success
# Date & Author..: 2015/06/11 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp812_create_tmp()
   DEFINE r_success      LIKE type_t.num5
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_err_cnt      LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET r_success = TRUE
   LET l_err_cnt = 0
   
   CALL apmp812_drop_tmp() RETURNING l_success
  
   CREATE TEMP TABLE apmp812_acc_rtax(
      pmcc001     LIKE pmcc_t.pmcc001,
      pmcc002     LIKE pmcc_t.pmcc002,
      pmcc003     LIKE pmcc_t.pmcc003,
      pmcc004     LIKE pmcc_t.pmcc004,
      pmcc005     LIKE pmcc_t.pmcc005,
      rtax001     LIKE rtax_t.rtax001)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Create apmp812_acc_rtax'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF

   CREATE TEMP TABLE apmp812_debs_tmp(
      pmaa001       LIKE pmaa_t.pmaa001,
      pmcc001       LIKE pmcc_t.pmcc001,
      pmcc002       LIKE pmcc_t.pmcc002,
      pmcc005       LIKE pmcc_t.pmcc005,
      sum_debs012   LIKE debs_t.debs012,
      sum_debs016   LIKE debs_t.debs016,
      sum_debs017   LIKE debs_t.debs017) 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Create apmp812_debs_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF

   CREATE TEMP TABLE apmp812_stbb_tmp(
      pmaa001      LIKE pmaa_t.pmaa001,
      pmcc001      LIKE pmcc_t.pmcc001,
      pmcc002      LIKE pmcc_t.pmcc002,
      pmcc005      LIKE pmcc_t.pmcc005,
      sum_stbb009  LIKE stbb_t.stbb009)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Create apmp812_stbb_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF

   CREATE TEMP TABLE apmp812_pmdt_tmp(
      pmaa001        LIKE pmaa_t.pmaa001,
      pmcc001        LIKE pmcc_t.pmcc001,
      pmcc002        LIKE pmcc_t.pmcc002,
      pmcc005        LIKE pmcc_t.pmcc005,
      sum_purchase   LIKE pmdt_t.pmdt039,
      sum_return     LIKE pmdt_t.pmdt039)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Create apmp812_pmdt_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF
 
   CREATE TEMP TABLE apmp812_pmdn_tmp(
      pmaa001        LIKE pmaa_t.pmaa001,
      pmcc001        LIKE pmcc_t.pmcc001,
      pmcc002        LIKE pmcc_t.pmcc002,
      pmcc005        LIKE pmcc_t.pmcc005,
      pmdndocno   LIKE pmdn_t.pmdndocno,
      pmdnseq     LIKE pmdn_t.pmdnseq,
      cnt_type    LIKE type_t.chr10,
      cnt_doc     LIKE type_t.num5)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Create apmp812_pmdn_tmp'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF
   
   IF l_err_cnt > 0 THEN
      LET r_success = FALSE
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.apmp812_drop_tmp" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 刪除暫存檔
# Memo...........:
# Usage..........: CALL apmp812_drop_tmp()
#                  RETURNING r_success
# Date & Author..: 2015/06/11 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION apmp812_drop_tmp()
   DEFINE r_success      LIKE type_t.num5
   DEFINE l_err_cnt      LIKE type_t.num5
   
   WHENEVER ERROR CONTINUE
   
   LET r_success = TRUE
   LET l_err_cnt = 0

   DROP TABLE apmp812_acc_rtax
   IF SQLCA.sqlcode THEN
      #INITIALIZE g_errparam TO NULL
      #LET g_errparam.code = SQLCA.sqlcode
      #LET g_errparam.extend = 'Drop apmp812_acc_rtax'
      #LET g_errparam.popup = TRUE
      #CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF

   DROP TABLE apmp812_debs_tmp
   IF SQLCA.sqlcode THEN
      #INITIALIZE g_errparam TO NULL
      #LET g_errparam.code = SQLCA.sqlcode
      #LET g_errparam.extend = 'Drop apmp812_debs_tmp'
      #LET g_errparam.popup = TRUE
      #CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF

   DROP TABLE apmp812_stbb_tmp
   IF SQLCA.sqlcode THEN
      #INITIALIZE g_errparam TO NULL
      #LET g_errparam.code = SQLCA.sqlcode
      #LET g_errparam.extend = 'Drop apmp812_stbb_tmp'
      #LET g_errparam.popup = TRUE
      #CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF

   DROP TABLE apmp812_pmdt_tmp
   IF SQLCA.sqlcode THEN
      #INITIALIZE g_errparam TO NULL
      #LET g_errparam.code = SQLCA.sqlcode
      #LET g_errparam.extend = 'Drop apmp812_pmdt_tmp'
      #LET g_errparam.popup = TRUE
      #CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF

   DROP TABLE apmp812_pmdn_tmp
   IF SQLCA.sqlcode THEN
      #INITIALIZE g_errparam TO NULL
      #LET g_errparam.code = SQLCA.sqlcode
      #LET g_errparam.extend = 'Drop apmp812_pmdn_tmp'
      #LET g_errparam.popup = TRUE
      #CALL cl_err()

      LET l_err_cnt = l_err_cnt + 1
   END IF
   
   IF l_err_cnt > 0 THEN
      LET r_success = FALSE
   END IF

   RETURN r_success   
END FUNCTION]]>
  </point>
  <point name="construct.c.pmcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmcc001()                      
            DISPLAY g_qryparam.return1 TO pmcc001 
            NEXT FIELD pmcc001 ]]>
  </point>
  <point name="construct.c.pmcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmcc002_1()                     
            DISPLAY g_qryparam.return1 TO pmcc002  
            NEXT FIELD pmcc002  ]]>
  </point>
  <point name="main.background" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_argv[1] = cl_replace_str(g_argv[1], '\"', '')   #wc
   DISPLAY 'g_argv[1]-wc: ',g_argv[1]
   
   CALL apmp812_create_tmp() RETURNING l_success]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL apmp812_drop_tmp() RETURNING l_success]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET lc_param.wc = g_argv[1] 
      
      LET ls_js = util.JSON.stringify(lc_param)]]>
  </point>
  <point name="process.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_err_cnt         LIKE type_t.num5
   DEFINE l_rtax_sql        STRING
   DEFINE l_pmcc001         LIKE pmcc_t.pmcc001
   DEFINE l_pmcc002         LIKE pmcc_t.pmcc002
   DEFINE l_pmcc003         LIKE pmcc_t.pmcc003
   DEFINE l_pmcc004         LIKE pmcc_t.pmcc004
   DEFINE l_pmcc005         LIKE pmcc_t.pmcc005
   DEFINE l_acc_rtax001     LIKE rtax_t.rtax001
   DEFINE l_pmaa001         LIKE pmaa_t.pmaa001
   DEFINE l_pmaa011         LIKE pmaa_t.pmaa011
   DEFINE l_stbb002         LIKE stbb_t.stbb002
   DEFINE l_sum_stbb009     LIKE stbb_t.stbb009]]>
  </point>
  <point name="process.pre_process" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_err_cnt = 0
   CALL s_transaction_begin()
   IF g_bgjob = "N" THEN
      CALL cl_err_collect_init()
   END IF
   
   #0-1.品類下展SQL
   LET l_rtax_sql = " SELECT UNIQUE rtax001 ",
                    "   FROM rtax_t ",
                    "  WHERE rtaxent = ",g_enterprise, 
                    "  START WITH rtax003 = ? ",
                    "CONNECT BY PRIOR rtax001 = rtax003 ",
                    "  UNION ",
                    " SELECT UNIQUE rtax001 ",
                    "  FROM rtax_t ",
                    " WHERE rtaxent = ",g_enterprise, 
                    "   AND rtax001 = ? "
                    
   #1.取供應商評核項目
   LET ls_sql = "SELECT pmcc001,pmcc002,pmcc003,pmcc004,pmcc005 ",   #評核期別,評核品類,評核開始日期,評核結束日期,定量評核整體權重
                "  FROM pmcc_t ",
                " WHERE pmccent = ",g_enterprise,
                "   AND ",lc_param.wc,
                "   AND pmccstus = 'Y' "
   PREPARE apmp812_get_pmpcc_pre FROM ls_sql
   DECLARE apmp812_get_pmpcc_pcur CURSOR FOR apmp812_get_pmpcc_pre
   DISPLAY "[apmp812_get_pmpcc_pre] ",ls_sql
   
   #2.取評核資料
   #2.1.銷售額佔比,毛利額佔比,毛利率-SQL
   LET ls_sql = "INSERT INTO apmp812_debs_tmp ",
                "SELECT pmaa001,pmcc001,pmcc002,pmcc005, ",
                "       COALESCE(SUM(COALESCE(debs012,0)),0) sum_debs012, ",   #總銷售成本
                "       COALESCE(SUM(COALESCE(debs016,0)),0) sum_debs016, ",   #應收金額
                "       COALESCE(SUM(COALESCE(debs017,0)),0) sum_debs017 ",    #毛利額佔比
                "  FROM pmaa_t ",
                "       LEFT JOIN (SELECT debsent,debs002,debs005,debs007, ",   #企業編號,統計日期,品類,主供應商
                "                         debs012,debs016,debs017, ",           #總銷售成本,應收金額,毛利額佔比
                "                         pmcc001,pmcc002,pmcc005 ",
                "                    FROM debs_t,apmp812_acc_rtax ",
                "                   WHERE debs005 = rtax001 ",
                "                      AND debs002 BETWEEN pmcc003 AND pmcc004 ) ",
                "              ON pmaaent = debsent AND pmaa001 = debs007 ",
                " WHERE pmaaent = ",g_enterprise,
                "   AND pmaa002 = '1' ",                #交易對象=1.供應商
                "   AND pmaastus = 'Y' ",
                " GROUP BY pmaa001,pmcc001,pmcc002,pmcc005 "
   PREPARE apmp812_ins_debs_tmp FROM ls_sql          
   DISPLAY "[apmp812_ins_debs_tmp] ",ls_sql
   
   #2.2.採購收入佔比-SQL
   #需要幣別金額轉換時(待確認)
   #LET ls_sql = "SELECT pmaa001,pmaa011,pmcc001,pmcc002,pmcc005,stbb002,sum_stbb009 ",
   #             "  FROM ( ",
   #             "        SELECT pmaa001,pmaa011,pmcc001,pmcc002,pmcc005,stbb002, ",    #供應商編號,統計幣別,期別,品類,評核比率,幣別
   #             "               COALESCE(SUM(COALESCE(stbb009,0)),0) sum_stbb009, ",   #總銷售成本"
   #             "          FROM pmaa_t ",
   #             "               LEFT JOIN (SELECT stbaent,stba002,stbb002,stbb009, ",   #企業編號,供應商編號,幣別,費用金額
   #             "                                 pmcc001,pmcc002,pmcc005 ",
   #             "                            FROM stbb_t,stba_t,apmp812_acc_rtax ",
   #             "                           WHERE stbbent = stbaent AND stbbdocno = stbadocno ",
   #             "                             AND stbastus = 'Y' ",
   #             "                             AND stbb011 = rtax001 ",
   #             "                             AND stbb005 BETWEEN pmcc003 AND pmcc004 ",
   #             "                             AND stbb006 BETWEEN pmcc003 AND pmcc004 ) ",
   #             "                      ON pmaaent = stbaent AND pmaa001 = stba002 ",
   #             "         WHERE pmaaent = ",g_enterprise,
   #             "           AND pmaa002 = '1' ",                #交易對象=1.供應商
   #             "           AND pmaastus = 'Y' ",
   #             "         GROUP BY pmaa001,pmaa011,pmcc001,pmcc002,pmcc005,stbb002 ",
   #             "       ) ",
   #             "ORDER BY pmaa001,pmcc001,pmcc002,pmaa011,stbb002"
   #PREPARE apmp812_stbb_tmp_pre FROM ls_sql
   #DECLARE apmp812_stbb_tmp_cur CURSOR FOR apmp812_stbb_tmp_pre
   #DISPLAY "[apmp812_stbb_tmp_pre] ",ls_sql

   LET ls_sql = "INSERT INTO apmp812_stbb_tmp ",
                "   SELECT pmaa001,pmcc001,pmcc002,pmcc005, ",                      #供應商編號,期別,品類,評核比率
                "          COALESCE(SUM(COALESCE(stbb009,0)),0) sum_stbb009 ",      #總銷售成本"
                "     FROM pmaa_t ",
                "          LEFT JOIN (SELECT stbaent,stba002,stbb002,stbb009, ",    #企業編號,供應商編號,幣別,費用金額
                "                            pmcc001,pmcc002,pmcc005 ",
                "                       FROM stbb_t,stba_t,apmp812_acc_rtax ",
                "                      WHERE stbbent = stbaent AND stbbdocno = stbadocno ",
                "                        AND stbastus = 'Y' ",
                "                        AND stbb011 = rtax001 ",
                "                        AND stbb005 BETWEEN pmcc003 AND pmcc004 ",
                "                        AND stbb006 BETWEEN pmcc003 AND pmcc004 ) ",
                "                 ON pmaaent = stbaent AND pmaa001 = stba002 ",
                "    WHERE pmaaent = ",g_enterprise,
                "      AND pmaa002 = '1' ",                #交易對象=1.供應商
                "      AND pmaastus = 'Y' ",
                "    GROUP BY pmaa001,pmcc001,pmcc002,pmcc005 "
   PREPARE apmp812_ins_stbb_tmp FROM ls_sql
   DISPLAY "[apmp812_ins_stbb_tmp] ",ls_sql
   
   #2.3.進貨額佔比,退貨額佔比,淨進貨額佔比-SQL
   #需要幣別金額轉換時(待確認)
   #LET ls_sql = "SELECT pmaa001,pmcc001,pmcc002,pmcc005,pmds037, ",
   #             "       SUM(sum_purchase),SUM(sum_return) ",
   #             "  FROM pmaa_t ",
   #             "       LEFT JOIN (SELECT pmdtent,pmds007,pmds037, ", #企業編號,供應商編號,幣別
   #             "                         COALESCE((CASE WHEN pmds000 = '3' OR pmds000 = '4' THEN pmdt039 END),0) sum_purchase, ",  #進貨額
   #             "                         COALESCE((CASE WHEN pmds000 = '7' THEN pmdt039 END),0) sum_return ",                      #退貨額
   #             "                         pmcc001,pmcc002,pmcc005 ",                
   #             "                    FROM pmdt_t,pmds_t,imaa_t,apmp812_acc_rtax ",
   #             "                   WHERE pmdtent = pmdsent AND pmdtdocno = pmdsdocno ",
   #             "                     AND pmdtent = imaaent AND pmdt006 = imaa001 ",
   #             "                     AND pmdsdocno = 'Y' ",
   #             "                     AND imaa009 = rtax001 ",
   #             "                     AND pmdsdocdt BETWEEN pmcc003 AND pmcc004 ",
   #             "                     AND pmdsdocdt BETWEEN pmcc003 AND pmcc004 ) ",                
   #             "         ON pmaaent = pmdtent AND pmaa001 = pmds007 ",
   #             " WHERE pmaaent = ",g_enterprise,
   #             "   AND pmaa002 = '1' ",                #交易對象=1.供應商
   #             "   AND pmaastus = 'Y' ",
   #             " GROUP BY pmaa001,pmcc002,pmcc005,pmds037 "
   #PREPARE apmp812_pmdt_tmp_pre FROM ls_sql
   #DECLARE apmp812_pmdt_tmp_cur CURSOR FOR apmp812_pmdt_tmp_pre
   #DISPLAY "[apmp812_pmdt_tmp_pre] ",ls_sql

   LET ls_sql = "INSERT INTO apmp812_pmdt_tmp ",
                "SELECT pmaa001,pmcc001,pmcc002,pmcc005, ",
                "       SUM(sum_purchase),SUM(sum_return) ",
                "  FROM pmaa_t ",
                "       LEFT JOIN (SELECT pmdtent,pmds007,pmds037, ", #企業編號,供應商編號,幣別
                "                         COALESCE((CASE WHEN pmds000 = '3' OR pmds000 = '4' THEN pmdt039 END),0) sum_purchase, ",  #進貨額
                "                         COALESCE((CASE WHEN pmds000 = '7' THEN pmdt039 END),0) sum_return, ",                      #退貨額
                "                         pmcc001,pmcc002,pmcc005 ",                
                "                    FROM pmdt_t,pmds_t,imaa_t,apmp812_acc_rtax ",
                "                   WHERE pmdtent = pmdsent AND pmdtdocno = pmdsdocno ",
                "                     AND pmdtent = imaaent AND pmdt006 = imaa001 ",
                "                     AND pmdsdocno = 'Y' ",
                "                     AND imaa009 = rtax001 ",
                "                     AND pmdsdocdt BETWEEN pmcc003 AND pmcc004 ",
                "                     AND pmdsdocdt BETWEEN pmcc003 AND pmcc004 ) ",                
                "         ON pmaaent = pmdtent AND pmaa001 = pmds007 ",
                " WHERE pmaaent = ",g_enterprise,
                "   AND pmaa002 = '1' ",                #交易對象=1.供應商
                "   AND pmaastus = 'Y' ",
                " GROUP BY pmaa001,pmcc001,pmcc002,pmcc005 "
   PREPARE apmp812_ins_pmdt_tmp FROM ls_sql
   DISPLAY "[apmp812_ins_pmdt_tmp] ",ls_sql
   
   #2.4.配送能力訂單滿足率-SQL
   LET ls_sql = "INSERT INTO apmp812_pmdn_tmp ",
                "SELECT pmaa001,pmcc001,pmcc002,pmcc005,pmdndocno,'','1',COUNT(pmdt001) cnt_doc ",
                "  FROM pmaa_t ",
                "       LEFT JOIN (SELECT pmdnent,pmdl004,pmdndocno,pmdnseq, ",
                "                         (SELECT UNIQUE pmdt001 FROM pmdt_t ",
                "                           WHERE pmdndocno = pmdt001 AND pmdnseq = pmdt002 ",
                "                             AND pmdt020 > 0) pmdt001, ",
                "                         pmcc001,pmcc002,pmcc005",
                "                    FROM pmdn_t,pmdl_t,imaa_t,apmp812_acc_rtax ",
                "                   WHERE pmdnent = pmdlent AND pmdndocno = pmdldocno ",
                "                     AND pmdnent = imaaent AND pmdn001 = imaa001 ",
                "                     AND pmdlstus = 'Y' ",
                "                     AND imaa009 = rtax001 ",
                "                     AND pmdldocdt BETWEEN pmcc003 AND pmcc004 ",
                "                     AND pmdldocdt BETWEEN pmcc003 AND pmcc004) ",   
                "         ON pmaaent = pmdnent AND pmaa001 = pmdl004 ",
                " WHERE pmaaent = ",g_enterprise,
                "   AND pmaa002 = '1' ",                #交易對象=1.供應商
                "   AND pmaastus = 'Y' ",
                " GROUP BY pmaa001,pmcc001,pmcc002,pmcc005,pmdndocno "
   PREPARE apmp812_ins_pmdn_tmp1 FROM ls_sql
   DISPLAY "[apmp812_ins_pmdn_tmp1] ",ls_sql

   #2.5.送貨達標率-SQL
   LET ls_sql = "INSERT INTO apmp812_pmdn_tmp ",
                "SELECT pmaa001,pmcc001,pmcc002,pmcc005,pmdndocno,pmdnseq,'1',COUNT(pmdt001) cnt_doc ",
                "  FROM pmaa_t ",
                "       LEFT JOIN (SELECT pmdnent,pmdl004,pmdndocno,pmdnseq, ",
                "                         (SELECT UNIQUE pmdt001 FROM pmdt_t ",
                "                           WHERE pmdndocno = pmdt001 AND pmdnseq = pmdt002 ",
                "                             AND pmdt020 > 0) pmdt001, ",
                "                         pmcc001,pmcc002,pmcc005 ",
                "                    FROM pmdn_t,pmdl_t,imaa_t,apmp812_acc_rtax ",
                "                   WHERE pmdnent = pmdlent AND pmdndocno = pmdldocno ",
                "                     AND pmdnent = imaaent AND pmdn001 = imaa001 ",
                "                     AND pmdlstus = 'Y' ",
                "                     AND imaa009 = rtax001 ",
                "                     AND pmdldocdt BETWEEN pmcc003 AND pmcc004 ",
                "                     AND pmdldocdt BETWEEN pmcc003 AND pmcc004) ",   
                "         ON pmaaent = pmdnent AND pmaa001 = pmdl004 ",
                " WHERE pmaaent = ",g_enterprise,
                "   AND pmaa002 = '1' ",                #交易對象=1.供應商
                "   AND pmaastus = 'Y' ",
                " GROUP BY pmaa001,pmcc001,pmcc002,pmcc005,pmdndocno,pmdnseq "
   PREPARE apmp812_ins_pmdn_tmp2 FROM ls_sql
   DISPLAY "[apmp812_ins_pmdn_tmp2] ",ls_sql
   
   #2.6.訂單滿足率-SQL
   LET ls_sql = "INSERT INTO apmp812_pmdn_tmp ",
                "SELECT pmaa001,pmcc001,pmcc002,pmcc005,pmdndocno,pmdnseq,'1',COUNT(cnt_pmdn007) cnt_doc ",
                "  FROM pmaa_t ",
                "       LEFT JOIN (SELECT pmdnent,pmdl004,pmdndocno,pmdnseq, ",
                "                         ( ",
                "                           CASE WHEN pmdn007 <= (SELECT SUM(pmdt020) FROM pmdt_t ",
                "                                                  WHERE pmdt001 = pmdndocno ",
                "                                                    AND pmdt002 = pmdnseq ",
                "                                                    AND pmdt020 > 0) THEN 1 ",
                "                                ELSE 1 ",
                "                            END ",
                "                          ) cnt_pmdn007, ",
                "                         pmcc001,pmcc002,pmcc005 ",
                "                    FROM pmdn_t,pmdl_t,imaa_t,apmp812_acc_rtax ",
                "                   WHERE pmdnent = pmdlent AND pmdndocno = pmdldocno ",
                "                     AND pmdnent = imaaent AND pmdn001 = imaa001 ",
                "                     AND pmdlstus = 'Y' ",
                "                     AND imaa009 = rtax001 ",
                "                     AND pmdldocdt BETWEEN pmcc003 AND pmcc004 ",
                "                     AND pmdldocdt BETWEEN pmcc003 AND pmcc004) ",   
                "         ON pmaaent = pmdnent AND pmaa001 = pmdl004 ",
                " WHERE pmaaent = ",g_enterprise,
                "   AND pmaa002 = '1' ",                #交易對象=1.供應商
                "   AND pmaastus = 'Y' ",
                " GROUP BY pmaa001,pmcc001,pmcc002,pmcc005,pmdndocno "
   PREPARE apmp812_ins_pmdn_tmp3 FROM ls_sql
   DISPLAY "[apmp812_ins_pmdn_tmp3] ",ls_sql
   
   #3.取得所有要結算的品類
   FOREACH apmp812_get_pmpcc_pcur INTO l_pmcc001,l_pmcc002,l_pmcc003,l_pmcc004,l_pmcc005
      IF l_pmcc002 <> 'ALL' THEN
         LET ls_sql = "INSERT INTO apmp812_acc_rtax ",
                      "   SELECT UNIQUE '",l_pmcc001,"', ",
                      "                 '",l_pmcc002,"', ",
                      "                 '",l_pmcc003,"', ",
                      "                 '",l_pmcc004,"', ",
                      "                 '",l_pmcc005,"', ",
                      "                 rtax001 ", 
                      "     FROM rtax_t ",
                      "    WHERE rtaxent = ",g_enterprise,
                      "    START WITH rtax003 = '",l_pmcc002,"' ",
                      "  CONNECT BY PRIOR rtax001 = rtax003 ",
                      "    UNION ",
                      "   SELECT UNIQUE '",l_pmcc001,"', ",
                      "                 '",l_pmcc002,"', ",
                      "                 '",l_pmcc003,"', ",
                      "                 '",l_pmcc004,"', ",
                      "                 '",l_pmcc005,"', ",
                      "                 rtax001 ", 
                      "    FROM rtax_t ",
                      "   WHERE rtaxent = ",g_enterprise,
                      "     AND rtax001 = '",l_pmcc002,"' "
         PREPARE apmp812_ins_acc_rtax FROM ls_sql
         EXECUTE apmp812_ins_acc_rtax         
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'apmp812_ins_acc_rtax'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            
            LET l_err_cnt = l_err_cnt + 1            
         END IF
      ELSE
         INSERT INTO apmp812_acc_rtax      
            SELECT UNIQUE l_pmcc001,rtax001,l_pmcc003,l_pmcc004,l_pmcc005,rtax001 
             FROM rtax_t l_pmcc002
            WHERE rtaxent = g_enterprise
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert apmp812_acc_rtax'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            
            LET l_err_cnt = l_err_cnt + 1            
         END IF            
      END IF      
   END FOREACH  

   #4.計算評核分數
   #4.1.銷售額佔比,毛利額佔比,毛利率
   EXECUTE apmp812_ins_debs_tmp
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert apmp812_debs_tmp Error'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF    
   
   #4.1.1.銷售額佔比
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'1',
             g_dept,
             (sum_debs016/(SELECT SUM(sum_debs016) 
                             FROM apmp812_debs_tmp t2
                            WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001))*(pmcc005/100)      
        FROM apmp812_debs_tmp t1
       WHERE pmcc001 IS NOT NULL          
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-1'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF 
   
   #4.1.2.毛利額佔比
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'2',
             g_dept,
             (sum_debs017/(SELECT SUM(sum_debs017) 
                             FROM apmp812_debs_tmp t2
                            WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001))*(pmcc005/100)      
        FROM apmp812_debs_tmp t1 
       WHERE pmcc001 IS NOT NULL  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-2'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF          
   #4.1.3.毛利率     
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'3',
             g_dept,
             ((sum_debs016-sum_debs012)/(SELECT SUM(sum_debs016-sum_debs012) 
                                          FROM apmp812_debs_tmp t2
                                         WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001))*(pmcc005/100)      
        FROM apmp812_debs_tmp t1
       WHERE pmcc001 IS NOT NULL  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-3'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF          
   #4.2.採購收入佔比
   #須幣別金額轉換處理時(待確認)
   #FOREACH apmp812_stbb_tmp_cur INTO l_pmaa001,l_pmaa011,l_pmcc001,l_pmcc002,l_pmcc005,l_stbb002,l_sum_stbb009     
   #   #幣別金額轉換(待確認)
   #   #IF l_pmaa011 <> l_stbb002 THEN 
   #   #   
   #   #END IF
   #
   #   INSERT INTO apmp812_stbb_tmp(pmaa001,pmcc001,pmcc002,pmcc005,sum_stbb009)
   #        VALUES(l_pmaa001,l_pmcc001,l_pmcc002,l_pmcc005,l_sum_stbb009)
   #END FOREACH
   EXECUTE apmp812_ins_stbb_tmp
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert apmp812_stbb_tmp Error'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF 
   
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'4',
             g_dept,
             (sum_stbb009/(SELECT SUM(sum_stbb009) 
                             FROM apmp812_stbb_tmp t2
                            WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001))*(pmcc005/100)      
        FROM apmp812_stbb_tmp t1
       WHERE pmcc001 IS NOT NULL                         
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-4'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   #4.3.進貨額佔比,退貨額佔比,淨進貨額佔比
   #須幣別金額轉換處理時(待確認)
   #FOREACH apmp812_pmdt_tmp_cur
   #END FOREACH
   
   EXECUTE apmp812_ins_pmdt_tmp
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert apmp812_pmdt_tmp Error'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF   
   
   #4.3.1.進貨額佔比
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'5',
             g_dept,
             (sum_purchase/(SELECT SUM(sum_purchase) 
                             FROM apmp812_pmdt_tmp t2
                            WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001))*(pmcc005/100)      
        FROM apmp812_pmdt_tmp t1
       WHERE pmcc001 IS NOT NULL      
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-5'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   #4.3.2.退貨額佔比
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'6',
             g_dept,
             (sum_return/(SELECT SUM(sum_return) 
                             FROM apmp812_pmdt_tmp t2
                            WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001))*(pmcc005/100)      
        FROM apmp812_pmdt_tmp t1 
       WHERE pmcc001 IS NOT NULL     
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-6'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   #4.3.3.淨進貨額佔比
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'7',
             g_dept,
             ((sum_return-sum_return)/(SELECT SUM(sum_return-sum_return) 
                             FROM apmp812_pmdt_tmp t2
                            WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001))*(pmcc005/100)      
        FROM apmp812_pmdt_tmp t1
       WHERE pmcc001 IS NOT NULL    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-7'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   #4.4.配送能力,送貨達標率,訂單滿足率
   #4.4.1.配送能力
   EXECUTE apmp812_ins_pmdn_tmp1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert apmp812_pmdn_tmp1 Error'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'8',
             g_dept,(cnt_doc/COUNT(pmdndocno))*(pmcc005/100)      
        FROM apmp812_pmdn_tmp
       WHERE cnt_type = '1'
         AND pmcc001 IS NOT NULL    
        GROUP BY pmcc001,pmcc002,pmaa001,cnt_doc,pmcc005 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-8'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   #4.4.2.送貨達標率
   EXECUTE apmp812_ins_pmdn_tmp2
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert apmp812_pmdn_tmp2 Error'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF 
   
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'9',
             g_dept,(cnt_doc/(SELECT COUNT(*) FROM apmp812_pmdn_tmp t2
                               WHERE t2.pmaa001 = t1.pmaa001 AND t2.pmcc001 = t1.pmcc001
                                 AND cnt_type = '2'))*(pmcc005/100)      
        FROM apmp812_pmdn_tmp t1
       WHERE cnt_type = '2'
         AND pmcc001 IS NOT NULL   
        GROUP BY pmcc001,pmcc002,pmaa001,cnt_doc,pmcc005 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-9'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   #4.4.3.訂單滿足率
   EXECUTE apmp812_ins_pmdn_tmp1
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert apmp812_pmdn_tmp3 Error'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF 
   
   INSERT INTO pmcj_t(pmcjent,pmcj001,pmcj002,pmcj004,pmcj005,    #企業編號,評核期別,評核品類,供應商編號,評核項目
                      pmcj006,pmcj007 )                           #評核部門,評核分數
      SELECT g_enterprise,pmcc001,pmcc002,pmaa001,'10',
             g_dept,(cnt_doc/COUNT(pmdndocno))*(pmcc005/100)      
        FROM apmp812_pmdn_tmp
       WHERE cnt_type = '3' 
         AND pmcc001 IS NOT NULL  
        GROUP BY pmcc001,pmcc002,pmaa001,cnt_doc,pmcc005 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'Insert pmcj_t Error-10'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      LET l_err_cnt = l_err_cnt + 1            
   END IF  
   
   IF g_bgjob = "N" THEN
      CALL cl_err_collect_show()
   END IF   
   
   IF l_err_cnt > 0 THEN
      CALL s_transaction_end('N',0) 
   ELSE
      CALL s_transaction_end('Y',1)  
   END IF   ]]>
  </point>
  <section id="apmp812.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000000
#+ 
#+ Filename...: apmp812
#+ Description: 供應商績效評核定量評分整批產生作業
#+ Creator....: 02749(2015-06-12 03:50:05)
#+ Modifier...: 02749(2015-06-12 05:36:09) -SD/PR-
]]>
  </section>
  <section id="apmp812.get_buffer" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION apmp812_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="apmp812.global" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 p01 樣板自動產生(Version:10)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       pmcc001 LIKE pmcc_t.pmcc001, 
   pmcc002 LIKE pmcc_t.pmcc002, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="apmp812.init" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION apmp812_init()
   #add-point:init段define 
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define (客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="apmp812.main" ver="1" status="" src="s" readonly="">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   {<point name="main.define" edit="s"/>}
   #end add-point 
   #add-point:main段define (客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL apmp812_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmp812 WITH FORM cl_ap_formpath("apm",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL apmp812_init()
 
      #進入選單 Menu (="N")
      CALL apmp812_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_apmp812
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="apmp812.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION apmp812_msgcentre_notify()
 
   DEFINE lc_state LIKE type_t.chr5
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   {<point name="msg_centre.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="apmp812.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="apmp812.process" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION apmp812_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   {<point name="process.define" edit="s"/>}
   #end add-point
   #add-point:process段define (客製用)
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE apmp812_process_cs CURSOR FROM ls_sql
#  FOREACH apmp812_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL apmp812_msgcentre_notify()
 
END FUNCTION
]]>
  </section>
  <section id="apmp812.transfer_argv" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION apmp812_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   {<point name="transfer_agrv.define" edit="s"/>}
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="apmp812.ui_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION apmp812_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define (客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
         
         #應用 a58 樣板自動產生(Version:2)
         CONSTRUCT BY NAME g_master.wc ON pmcc001,pmcc002
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.pmcc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmcc001
            #add-point:ON ACTION controlp INFIELD pmcc001
            {<point name="construct.c.pmcc001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmcc001
            #add-point:BEFORE FIELD pmcc001
            {<point name="construct.b.pmcc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmcc001
            
            #add-point:AFTER FIELD pmcc001
            {<point name="construct.a.pmcc001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.pmcc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD pmcc002
            #add-point:ON ACTION controlp INFIELD pmcc002
            {<point name="construct.c.pmcc002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD pmcc002
            #add-point:BEFORE FIELD pmcc002
            {<point name="construct.b.pmcc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD pmcc002
            
            #add-point:AFTER FIELD pmcc002
            {<point name="construct.a.pmcc002" />}
            #END add-point
            
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL apmp812_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.before_dialog3"/>}
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         {<point name="ui_dialog.before_qbeclear" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL apmp812_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL apmp812_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = apmp812_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
