#該程式未解開Section, 採用最新樣板產出!
{<section id="apmr050_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:3(2016-08-03 15:32:32), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000042
#+ Filename...: apmr050_x01
#+ Description: ...
#+ Creator....: 02574(2015-07-07 10:51:15)
#+ Modifier...: 08734 -SD/PR-

{</section>}

{<section id="apmr050_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #Where Condition 
       bdate LIKE type_t.dat,         #採購日期-起 
       edate LIKE type_t.dat          #採購日期-迄
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="apmr050_x01.main" readonly="Y" >}
PUBLIC FUNCTION apmr050_x01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  Where Condition 
DEFINE  p_arg2 LIKE type_t.dat         #tm.bdate  採購日期-起 
DEFINE  p_arg3 LIKE type_t.dat         #tm.edate  採購日期-迄
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.bdate = p_arg2
   LET tm.edate = p_arg3
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apmr050_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr050_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apmr050_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apmr050_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apmr050_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apmr050_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="apmr050_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apmr050_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdl015.pmdl_t.pmdl015,pmdn001.pmdn_t.pmdn001,l_pmdn015_min.type_t.num20_6,pmdlcnfdt.pmdl_t.pmdlcnfdt,l_pmdn015_average.type_t.num20_6,l_pmdn015_recent.type_t.num20_6,l_pmdn015_max.type_t.num20_6,l_pmdl004_pmaal004.type_t.chr100,l_imaa127.type_t.chr30,l_imaa127_desc.type_t.chr50,l_imaa127desc.type_t.chr80" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="apmr050_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apmr050_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="apmr050_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmr050_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdl001,pmdl002,pmdl003,pmdl004,pmdl005,pmdl006,pmdl007,pmdl008,pmdl009,pmdl010, 
       pmdl011,pmdl012,pmdl013,pmdl015,pmdl016,pmdl017,pmdl018,pmdl019,pmdl020,pmdl021,pmdl022,pmdl023, 
       pmdl024,pmdl025,pmdl026,pmdl027,pmdl028,pmdl029,pmdl030,pmdl031,pmdl032,pmdl033,pmdl040,pmdl041, 
       pmdl042,pmdl043,pmdl044,pmdl046,pmdl047,pmdl048,pmdl049,pmdl051,pmdl052,pmdl053,pmdl054,pmdl055, 
       pmdldocdt,pmdldocno,pmdlent,pmdlsite,pmdlstus,pmdlunit,pmdn001,0,pmdlcnfdt,0,0,0,pmdn002,pmdn003, 
       pmdn004,pmdn005,pmdn006,pmdn007,pmdn008,pmdn009,pmdn010,pmdn011,pmdn012,pmdn013,pmdn014,pmdn015, 
       pmdn016,pmdn017,pmdn019,pmdn020,pmdn021,pmdn022,pmdn023,pmdn024,pmdn025,pmdn026,pmdn027,pmdn028, 
       pmdn029,pmdn030,pmdn031,pmdn032,pmdn033,pmdn035,pmdn036,pmdn037,pmdn038,pmdn039,pmdn040,pmdn041, 
       pmdn042,pmdn043,pmdn044,pmdn045,pmdn046,pmdn047,pmdn048,pmdn049,pmdn050,pmdn051,pmdn052,pmdn053, 
       pmdn054,pmdn055,pmdn056,pmdn057,pmdnorga,pmdnseq,pmdnsite,pmdnunit,( SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = pmdl_t.pmdl022 AND pmaal_t.pmaalent = pmdl_t.pmdlent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t t1 WHERE t1.pmaal001 = pmdl_t.pmdl021 AND t1.pmaalent = pmdl_t.pmdlent AND t1.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t t2 WHERE t2.pmaal001 = pmdl_t.pmdl004 AND t2.pmaalent = pmdl_t.pmdlent AND t2.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t t3 WHERE t3.pmaal001 = pmdl_t.pmdl052 AND t3.pmaalent = pmdl_t.pmdlent AND t3.pmaal002 = '" , 
       g_dlang,"'" ,"),( SELECT pmaal004 FROM pmaal_t t4 WHERE t4.pmaal001 = pmdl_t.pmdl032 AND t4.pmaalent = pmdl_t.pmdlent AND t4.pmaal002 = '" , 
       g_dlang,"'" ,"),x.t5_pmaal004,x.imaal_t_imaal003,x.t10_imaal003,trim(pmdl004)||'.'||trim((SELECT pmaal004 FROM pmaal_t t2 WHERE t2.pmaal001 = pmdl_t.pmdl004 AND t2.pmaalent = pmdl_t.pmdlent AND t2.pmaal002 = '" , 
       g_dlang,"'" ,")),trim(pmdl021)||'.'||trim((SELECT pmaal004 FROM pmaal_t t1 WHERE t1.pmaal001 = pmdl_t.pmdl021 AND t1.pmaalent = pmdl_t.pmdlent AND t1.pmaal002 = '" , 
       g_dlang,"'" ,")),trim(pmdl022)||'.'||trim((SELECT pmaal004 FROM pmaal_t WHERE pmaal_t.pmaal001 = pmdl_t.pmdl022 AND pmaal_t.pmaalent = pmdl_t.pmdlent AND pmaal_t.pmaal002 = '" , 
       g_dlang,"'" ,")),trim(pmdl032)||'.'||trim((SELECT pmaal004 FROM pmaal_t t4 WHERE t4.pmaal001 = pmdl_t.pmdl032 AND t4.pmaalent = pmdl_t.pmdlent AND t4.pmaal002 = '" , 
       g_dlang,"'" ,")),trim(pmdl052)||'.'||trim((SELECT pmaal004 FROM pmaal_t t3 WHERE t3.pmaal001 = pmdl_t.pmdl052 AND t3.pmaalent = pmdl_t.pmdlent AND t3.pmaal002 = '" , 
       g_dlang,"'" ,")),trim(pmdn023)||'.'||trim(x.t5_pmaal004),NULL,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmdl_t LEFT OUTER JOIN ( SELECT pmdn_t.*,( SELECT pmaal004 FROM pmaal_t t5 WHERE t5.pmaal001 = pmdn_t.pmdn023 AND t5.pmaalent = pmdn_t.pmdnent AND t5.pmaal002 = '" , 
        g_dlang,"'" ,") t5_pmaal004,( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaal001 = pmdn_t.pmdn001 AND imaal_t.imaalent = pmdn_t.pmdnent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal003,( SELECT imaal003 FROM imaal_t t10 WHERE t10.imaal001 = pmdn_t.pmdn003 AND t10.imaalent = pmdn_t.pmdnent AND t10.imaal002 = '" , 
        g_dlang,"'" ,") t10_imaal003 FROM pmdn_t ) x  ON pmdl_t.pmdlent = x.pmdnent AND pmdl_t.pmdldocno  
        = x.pmdndocno"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE pmdl_t.pmdlstus = 'Y' AND " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmdl_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE apmr050_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apmr050_x01_curs CURSOR FOR apmr050_x01_prepare
 
END FUNCTION

{</section>}

{<section id="apmr050_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apmr050_x01_ins_data()
DEFINE sr RECORD 
   pmdl001 LIKE pmdl_t.pmdl001, 
   pmdl002 LIKE pmdl_t.pmdl002, 
   pmdl003 LIKE pmdl_t.pmdl003, 
   pmdl004 LIKE pmdl_t.pmdl004, 
   pmdl005 LIKE pmdl_t.pmdl005, 
   pmdl006 LIKE pmdl_t.pmdl006, 
   pmdl007 LIKE pmdl_t.pmdl007, 
   pmdl008 LIKE pmdl_t.pmdl008, 
   pmdl009 LIKE pmdl_t.pmdl009, 
   pmdl010 LIKE pmdl_t.pmdl010, 
   pmdl011 LIKE pmdl_t.pmdl011, 
   pmdl012 LIKE pmdl_t.pmdl012, 
   pmdl013 LIKE pmdl_t.pmdl013, 
   pmdl015 LIKE pmdl_t.pmdl015, 
   pmdl016 LIKE pmdl_t.pmdl016, 
   pmdl017 LIKE pmdl_t.pmdl017, 
   pmdl018 LIKE pmdl_t.pmdl018, 
   pmdl019 LIKE pmdl_t.pmdl019, 
   pmdl020 LIKE pmdl_t.pmdl020, 
   pmdl021 LIKE pmdl_t.pmdl021, 
   pmdl022 LIKE pmdl_t.pmdl022, 
   pmdl023 LIKE pmdl_t.pmdl023, 
   pmdl024 LIKE pmdl_t.pmdl024, 
   pmdl025 LIKE pmdl_t.pmdl025, 
   pmdl026 LIKE pmdl_t.pmdl026, 
   pmdl027 LIKE pmdl_t.pmdl027, 
   pmdl028 LIKE pmdl_t.pmdl028, 
   pmdl029 LIKE pmdl_t.pmdl029, 
   pmdl030 LIKE pmdl_t.pmdl030, 
   pmdl031 LIKE pmdl_t.pmdl031, 
   pmdl032 LIKE pmdl_t.pmdl032, 
   pmdl033 LIKE pmdl_t.pmdl033, 
   pmdl040 LIKE pmdl_t.pmdl040, 
   pmdl041 LIKE pmdl_t.pmdl041, 
   pmdl042 LIKE pmdl_t.pmdl042, 
   pmdl043 LIKE pmdl_t.pmdl043, 
   pmdl044 LIKE pmdl_t.pmdl044, 
   pmdl046 LIKE pmdl_t.pmdl046, 
   pmdl047 LIKE pmdl_t.pmdl047, 
   pmdl048 LIKE pmdl_t.pmdl048, 
   pmdl049 LIKE pmdl_t.pmdl049, 
   pmdl051 LIKE pmdl_t.pmdl051, 
   pmdl052 LIKE pmdl_t.pmdl052, 
   pmdl053 LIKE pmdl_t.pmdl053, 
   pmdl054 LIKE pmdl_t.pmdl054, 
   pmdl055 LIKE pmdl_t.pmdl055, 
   pmdldocdt LIKE pmdl_t.pmdldocdt, 
   pmdldocno LIKE pmdl_t.pmdldocno, 
   pmdlent LIKE pmdl_t.pmdlent, 
   pmdlsite LIKE pmdl_t.pmdlsite, 
   pmdlstus LIKE pmdl_t.pmdlstus, 
   pmdlunit LIKE pmdl_t.pmdlunit, 
   pmdn001 LIKE pmdn_t.pmdn001, 
   l_pmdn015_min LIKE type_t.num20_6, 
   pmdlcnfdt LIKE pmdl_t.pmdlcnfdt, 
   l_pmdn015_average LIKE type_t.num20_6, 
   l_pmdn015_recent LIKE type_t.num20_6, 
   l_pmdn015_max LIKE type_t.num20_6, 
   pmdn002 LIKE pmdn_t.pmdn002, 
   pmdn003 LIKE pmdn_t.pmdn003, 
   pmdn004 LIKE pmdn_t.pmdn004, 
   pmdn005 LIKE pmdn_t.pmdn005, 
   pmdn006 LIKE pmdn_t.pmdn006, 
   pmdn007 LIKE pmdn_t.pmdn007, 
   pmdn008 LIKE pmdn_t.pmdn008, 
   pmdn009 LIKE pmdn_t.pmdn009, 
   pmdn010 LIKE pmdn_t.pmdn010, 
   pmdn011 LIKE pmdn_t.pmdn011, 
   pmdn012 LIKE pmdn_t.pmdn012, 
   pmdn013 LIKE pmdn_t.pmdn013, 
   pmdn014 LIKE pmdn_t.pmdn014, 
   pmdn015 LIKE pmdn_t.pmdn015, 
   pmdn016 LIKE pmdn_t.pmdn016, 
   pmdn017 LIKE pmdn_t.pmdn017, 
   pmdn019 LIKE pmdn_t.pmdn019, 
   pmdn020 LIKE pmdn_t.pmdn020, 
   pmdn021 LIKE pmdn_t.pmdn021, 
   pmdn022 LIKE pmdn_t.pmdn022, 
   pmdn023 LIKE pmdn_t.pmdn023, 
   pmdn024 LIKE pmdn_t.pmdn024, 
   pmdn025 LIKE pmdn_t.pmdn025, 
   pmdn026 LIKE pmdn_t.pmdn026, 
   pmdn027 LIKE pmdn_t.pmdn027, 
   pmdn028 LIKE pmdn_t.pmdn028, 
   pmdn029 LIKE pmdn_t.pmdn029, 
   pmdn030 LIKE pmdn_t.pmdn030, 
   pmdn031 LIKE pmdn_t.pmdn031, 
   pmdn032 LIKE pmdn_t.pmdn032, 
   pmdn033 LIKE pmdn_t.pmdn033, 
   pmdn035 LIKE pmdn_t.pmdn035, 
   pmdn036 LIKE pmdn_t.pmdn036, 
   pmdn037 LIKE pmdn_t.pmdn037, 
   pmdn038 LIKE pmdn_t.pmdn038, 
   pmdn039 LIKE pmdn_t.pmdn039, 
   pmdn040 LIKE pmdn_t.pmdn040, 
   pmdn041 LIKE pmdn_t.pmdn041, 
   pmdn042 LIKE pmdn_t.pmdn042, 
   pmdn043 LIKE pmdn_t.pmdn043, 
   pmdn044 LIKE pmdn_t.pmdn044, 
   pmdn045 LIKE pmdn_t.pmdn045, 
   pmdn046 LIKE pmdn_t.pmdn046, 
   pmdn047 LIKE pmdn_t.pmdn047, 
   pmdn048 LIKE pmdn_t.pmdn048, 
   pmdn049 LIKE pmdn_t.pmdn049, 
   pmdn050 LIKE pmdn_t.pmdn050, 
   pmdn051 LIKE pmdn_t.pmdn051, 
   pmdn052 LIKE pmdn_t.pmdn052, 
   pmdn053 LIKE pmdn_t.pmdn053, 
   pmdn054 LIKE pmdn_t.pmdn054, 
   pmdn055 LIKE pmdn_t.pmdn055, 
   pmdn056 LIKE pmdn_t.pmdn056, 
   pmdn057 LIKE pmdn_t.pmdn057, 
   pmdnorga LIKE pmdn_t.pmdnorga, 
   pmdnseq LIKE pmdn_t.pmdnseq, 
   pmdnsite LIKE pmdn_t.pmdnsite, 
   pmdnunit LIKE pmdn_t.pmdnunit, 
   pmaal_t_pmaal004 LIKE pmaal_t.pmaal004, 
   t1_pmaal004 LIKE pmaal_t.pmaal004, 
   t2_pmaal004 LIKE pmaal_t.pmaal004, 
   t3_pmaal004 LIKE pmaal_t.pmaal004, 
   t4_pmaal004 LIKE pmaal_t.pmaal004, 
   x_t5_pmaal004 LIKE pmaal_t.pmaal004, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_t10_imaal003 LIKE imaal_t.imaal003, 
   l_pmdl004_pmaal004 LIKE type_t.chr100, 
   l_pmdl021_pmaal004 LIKE type_t.chr100, 
   l_pmdl022_pmaal004 LIKE type_t.chr100, 
   l_pmdl032_pmaal004 LIKE type_t.chr100, 
   l_pmdl052_pmaal004 LIKE type_t.chr100, 
   l_pmdn023_pmaal004 LIKE type_t.chr100, 
   l_imaa127 LIKE type_t.chr30, 
   l_imaa127_desc LIKE type_t.chr50, 
   l_imaa127desc LIKE type_t.chr80
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr050_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdl015,sr.pmdn001,sr.l_pmdn015_min,sr.pmdlcnfdt,sr.l_pmdn015_average,sr.l_pmdn015_recent,sr.l_pmdn015_max,sr.l_pmdl004_pmaal004,sr.l_imaa127,sr.l_imaa127_desc,sr.l_imaa127desc
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apmr050_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="apmr050_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apmr050_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="apmr050_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

