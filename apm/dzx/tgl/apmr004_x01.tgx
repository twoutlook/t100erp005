{<section id="apmr004_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:12(2016-12-21 12:20:17), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000167
#+ Filename...: apmr004_x01
#+ Description: ...
#+ Creator....: 05231(2014-06-04 15:22:55)
#+ Modifier...: 01534 -SD/PR-
{</section>}



{<section id="apmr004_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 LIKE type_t.chr1          #多庫儲批明細
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="apmr004_x01.main" readonly="Y" >}
PUBLIC FUNCTION apmr004_x01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.a1  多庫儲批明細
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2

   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apmr004_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr004_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apmr004_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apmr004_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apmr004_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apmr004_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="apmr004_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apmr004_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdsdocno.pmds_t.pmdsdocno,pmdsdocdt.pmds_t.pmdsdocdt,l_pmds000_desc.type_t.chr100,pmds011.pmds_t.pmds011,l_pmds011_desc.type_t.chr100,pmdsstus.pmds_t.pmdsstus,l_pmdsstus_desc.type_t.chr100,l_pmds002_desc.ooag_t.ooag011,l_pmds003_desc.ooefl_t.ooefl003,l_pmds007_desc.pmaal_t.pmaal004,l_pmds008_desc.pmaal_t.pmaal004,pmdtseq.pmdt_t.pmdtseq,pmds006.pmds_t.pmds006,pmdt002.pmdt_t.pmdt002,l_pmdt005_desc.type_t.chr30,pmdt006.pmdt_t.pmdt006,x_t6_imaal003.imaal_t.imaal003,x_t6_imaal004.imaal_t.imaal004,pmdt007.pmdt_t.pmdt007,l_imaa127_desc.type_t.chr50,pmdt020.pmdt_t.pmdt020,pmdt019.pmdt_t.pmdt019,pmdt022.pmdt_t.pmdt022,pmdt021.pmdt_t.pmdt021,pmdt024.pmdt_t.pmdt024,pmdt023.pmdt_t.pmdt023,pmdt036.pmdt_t.pmdt036,pmdt038.pmdt_t.pmdt038,pmdt039.pmdt_t.pmdt039,pmdt016.pmdt_t.pmdt016,l_pmdt016_desc.type_t.chr100,pmdt017.pmdt_t.pmdt017,l_pmdt017_desc.type_t.chr100,pmdt018.pmdt_t.pmdt018,pmdt059.pmdt_t.pmdt059,pmds002.pmds_t.pmds002,pmds003.pmds_t.pmds003,pmds007.pmds_t.pmds007,pmds008.pmds_t.pmds008,pmdt063.pmdt_t.pmdt063,pmdt072.pmdt_t.pmdt072,pmdt073.pmdt_t.pmdt073,pmdt074.pmdt_t.pmdt074,l_pmdt072_desc.type_t.chr30,l_pmdt073_desc.type_t.chr30,l_pmdt074_desc.type_t.chr30,l_pmdt007_desc.type_t.chr100" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="apmr004_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apmr004_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  


      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="apmr004_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmr004_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdsdocno,pmdsdocdt,pmds000,'',pmds011,'',pmdsstus,'',NULL,'','','',pmdsent,pmdssite,pmdtseq,pmds006,pmdt002,'',pmdt006,x.t6_imaal003,x.t6_imaal004,pmdt007,'',pmdt020,pmdt019,pmdt022,pmdt021,pmdt024,pmdt023,pmdt036,pmdt038,pmdt039,pmdt016,'',pmdt017,'',pmdt018,pmdt059,pmds002,pmds003,pmds007,pmds008,pmdt063,pmdt072,pmdt073,pmdt074,'','','',''"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmds_t LEFT OUTER JOIN ( SELECT pmdt_t.*,( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaal001 = pmdt_t.pmdt006 AND imaal_t.imaalent = pmdt_t.pmdtent AND imaal_t.imaal002 = '" ,g_dlang,"'" ,") t6_imaal003,( SELECT imaal004 FROM imaal_t WHERE imaal_t.imaal001 = pmdt_t.pmdt006 AND imaal_t.imaalent = pmdt_t.pmdtent AND imaal_t.imaal002 = '" ,g_dlang,"'" ,") t6_imaal004 FROM pmdt_t ) x  ON pmds_t.pmdsent = x.pmdtent AND pmds_t.pmdsdocno = x.pmdtdocno"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmds_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE apmr004_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apmr004_x01_curs CURSOR FOR apmr004_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="apmr004_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apmr004_x01_ins_data()
DEFINE sr RECORD 
   pmdsdocno LIKE pmds_t.pmdsdocno, 
   pmdsdocdt LIKE pmds_t.pmdsdocdt, 
   pmds000 LIKE pmds_t.pmds000, 
   l_pmds000_desc LIKE type_t.chr100, 
   pmds011 LIKE pmds_t.pmds011, 
   l_pmds011_desc LIKE type_t.chr100, 
   pmdsstus LIKE pmds_t.pmdsstus, 
   l_pmdsstus_desc LIKE type_t.chr100, 
   l_pmds002_desc LIKE ooag_t.ooag011, 
   l_pmds003_desc LIKE ooefl_t.ooefl003, 
   l_pmds007_desc LIKE pmaal_t.pmaal004, 
   l_pmds008_desc LIKE pmaal_t.pmaal004, 
   pmdsent LIKE pmds_t.pmdsent, 
   pmdssite LIKE pmds_t.pmdssite, 
   pmdtseq LIKE pmdt_t.pmdtseq, 
   pmds006 LIKE pmds_t.pmds006, 
   pmdt002 LIKE pmdt_t.pmdt002, 
   l_pmdt005_desc LIKE type_t.chr30, 
   pmdt006 LIKE pmdt_t.pmdt006, 
   x_t6_imaal003 LIKE imaal_t.imaal003, 
   x_t6_imaal004 LIKE imaal_t.imaal004, 
   pmdt007 LIKE pmdt_t.pmdt007, 
   l_imaa127_desc LIKE type_t.chr50, 
   pmdt020 LIKE pmdt_t.pmdt020, 
   pmdt019 LIKE pmdt_t.pmdt019, 
   pmdt022 LIKE pmdt_t.pmdt022, 
   pmdt021 LIKE pmdt_t.pmdt021, 
   pmdt024 LIKE pmdt_t.pmdt024, 
   pmdt023 LIKE pmdt_t.pmdt023, 
   pmdt036 LIKE pmdt_t.pmdt036, 
   pmdt038 LIKE pmdt_t.pmdt038, 
   pmdt039 LIKE pmdt_t.pmdt039, 
   pmdt016 LIKE pmdt_t.pmdt016, 
   l_pmdt016_desc LIKE type_t.chr100, 
   pmdt017 LIKE pmdt_t.pmdt017, 
   l_pmdt017_desc LIKE type_t.chr100, 
   pmdt018 LIKE pmdt_t.pmdt018, 
   pmdt059 LIKE pmdt_t.pmdt059, 
   pmds002 LIKE pmds_t.pmds002, 
   pmds003 LIKE pmds_t.pmds003, 
   pmds007 LIKE pmds_t.pmds007, 
   pmds008 LIKE pmds_t.pmds008, 
   pmdt063 LIKE pmdt_t.pmdt063, 
   pmdt072 LIKE pmdt_t.pmdt072, 
   pmdt073 LIKE pmdt_t.pmdt073, 
   pmdt074 LIKE pmdt_t.pmdt074, 
   l_pmdt072_desc LIKE type_t.chr30, 
   l_pmdt073_desc LIKE type_t.chr30, 
   l_pmdt074_desc LIKE type_t.chr30, 
   l_pmdt007_desc LIKE type_t.chr100
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr004_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdsdocno,sr.pmdsdocdt,sr.l_pmds000_desc,sr.pmds011,sr.l_pmds011_desc,sr.pmdsstus,sr.l_pmdsstus_desc,sr.l_pmds002_desc,sr.l_pmds003_desc,sr.l_pmds007_desc,sr.l_pmds008_desc,sr.pmdtseq,sr.pmds006,sr.pmdt002,sr.l_pmdt005_desc,sr.pmdt006,sr.x_t6_imaal003,sr.x_t6_imaal004,sr.pmdt007,sr.l_imaa127_desc,sr.pmdt020,sr.pmdt019,sr.pmdt022,sr.pmdt021,sr.pmdt024,sr.pmdt023,sr.pmdt036,sr.pmdt038,sr.pmdt039,sr.pmdt016,sr.l_pmdt016_desc,sr.pmdt017,sr.l_pmdt017_desc,sr.pmdt018,sr.pmdt059,sr.pmds002,sr.pmds003,sr.pmds007,sr.pmds008,sr.pmdt063,sr.pmdt072,sr.pmdt073,sr.pmdt074,sr.l_pmdt072_desc,sr.l_pmdt073_desc,sr.l_pmdt074_desc,sr.l_pmdt007_desc
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apmr004_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="apmr004_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apmr004_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="apmr004_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
