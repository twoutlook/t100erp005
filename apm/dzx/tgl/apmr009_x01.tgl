#該程式未解開Section, 採用最新樣板產出!
{<section id="apmr009_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:4(2016-06-29 22:04:41), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000060
#+ Filename...: apmr009_x01
#+ Description: ...
#+ Creator....: 05423(2014-11-07 13:57:41)
#+ Modifier...: 02749 -SD/PR-

{</section>}

{<section id="apmr009_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="apmr009_x01.main" readonly="Y" >}
PUBLIC FUNCTION apmr009_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apmr009_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr009_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apmr009_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apmr009_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apmr009_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apmr009_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="apmr009_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apmr009_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdidocno.pmdi_t.pmdidocno,pmdidocdt.pmdi_t.pmdidocdt,l_pmdistus_desc.type_t.chr30,l_pmdi002_desc.type_t.chr30,l_pmdi003_desc.type_t.chr30,l_pmdi004_desc.type_t.chr50,l_pmdi019_desc.type_t.chr30,l_pmdi005_desc.type_t.chr30,l_pmdi006_desc.type_t.chr30,pmdi007.pmdi_t.pmdi007,pmdi008.pmdi_t.pmdi008,l_pmdi009_desc.type_t.chr30,l_pmdi011_desc.type_t.chr30,pmdi015.pmdi_t.pmdi015,pmdi016.pmdi_t.pmdi016,pmdjseq.pmdj_t.pmdjseq,l_imaa009_desc.type_t.chr30,imaf_t_imaf141.imaf_t.imaf141,pmdj002.pmdj_t.pmdj002,imaal_t_imaal003.imaal_t.imaal003,imaal_t_imaal004.imaal_t.imaal004,pmdj003.pmdj_t.pmdj003,l_pmdj003_desc.type_t.chr30,pmdj031.pmdj_t.pmdj031,l_pmdj031_desc.type_t.chr50,l_pmdj031desc.type_t.chr80,pmdj005.pmdj_t.pmdj005,pmdj008.pmdj_t.pmdj008,pmdj010.pmdj_t.pmdj010,pmdj011.pmdj_t.pmdj011,pmdj030.pmdj_t.pmdj030,l_keys.type_t.chr200,pmdi010.pmdi_t.pmdi010,pmdi012.pmdi_t.pmdi012,pmdi014.pmdi_t.pmdi014,pmdi017.pmdi_t.pmdi017,pmdi018.pmdi_t.pmdi018,pmdi020.pmdi_t.pmdi020,pmdi030.pmdi_t.pmdi030,pmdi031.pmdi_t.pmdi031,pmdi032.pmdi_t.pmdi032,pmdj009.pmdj_t.pmdj009,pmdj012.pmdj_t.pmdj012,pmdj013.pmdj_t.pmdj013,pmdj014.pmdj_t.pmdj014,pmdj015.pmdj_t.pmdj015,pmdj016.pmdj_t.pmdj016,pmdj032.pmdj_t.pmdj032,l_pmdi005_ref.type_t.chr30,l_pmdi006_ref.type_t.chr30,l_pmdi009_ref.type_t.chr30,l_pmdi011_ref.type_t.chr30,l_pmdi019_ref.type_t.chr30,l_pmdj014_desc.type_t.chr30,l_pmdj015_desc.type_t.chr30,l_pmdj016_desc.type_t.chr30,l_pmdj032_desc.type_t.chr30,l_pmdj014desc.type_t.chr50,l_pmdj015desc.type_t.chr50,l_pmdj016desc.type_t.chr50,l_pmdj032desc.type_t.chr50,l_pmdidocno_desc.type_t.chr80,l_pmidstus_desc.type_t.chr30,l_pmdi014_desc.type_t.chr30,l_pmdi017_desc.type_t.chr30,l_pmdi018_desc.type_t.chr30,l_pmdi002_ref.type_t.chr30,l_pmdi003_ref.type_t.chr30,l_pmdi004_ref.type_t.chr30,l_pmdidocnodesc.type_t.chr200,l_pmidstusdesc.type_t.chr50,l_pmdi014desc.type_t.chr50,l_pmdi017desc.type_t.chr50,l_pmdi018desc.type_t.chr50,l_pmdj003desc.type_t.chr200" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="apmr009_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apmr009_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="apmr009_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmr009_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdidocno,pmdidocdt,pmdistus,NULL,pmdi002,NULL,pmdi003,NULL,pmdi004,NULL, 
       pmdi019,NULL,pmdi005,NULL,pmdi006,NULL,pmdi007,pmdi008,pmdi009,NULL,pmdi011,NULL,pmdi015,pmdi016, 
       pmdjseq,imaa_t.imaa009,NULL,imaf_t.imaf141,NULL,pmdj002,imaal_t.imaal003,imaal_t.imaal004,pmdj003, 
       NULL,pmdj031,NULL,NULL,pmdj005,pmdj008,pmdj010,pmdj011,pmdj030,NULL,pmdi010,pmdi012,pmdi014,pmdi017, 
       pmdi018,pmdi020,pmdi030,pmdi031,pmdi032,pmdj009,pmdj012,pmdj013,pmdj014,pmdj015,pmdj016,pmdj032, 
       NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, 
       NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmdi_t,pmdj_t,imaa_t,imaal_t,imaf_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmdi_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE apmr009_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apmr009_x01_curs CURSOR FOR apmr009_x01_prepare
 
END FUNCTION

{</section>}

{<section id="apmr009_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apmr009_x01_ins_data()
DEFINE sr RECORD 
   pmdidocno LIKE pmdi_t.pmdidocno, 
   pmdidocdt LIKE pmdi_t.pmdidocdt, 
   pmdistus LIKE pmdi_t.pmdistus, 
   l_pmdistus_desc LIKE type_t.chr30, 
   pmdi002 LIKE pmdi_t.pmdi002, 
   l_pmdi002_desc LIKE type_t.chr30, 
   pmdi003 LIKE pmdi_t.pmdi003, 
   l_pmdi003_desc LIKE type_t.chr30, 
   pmdi004 LIKE pmdi_t.pmdi004, 
   l_pmdi004_desc LIKE type_t.chr50, 
   pmdi019 LIKE pmdi_t.pmdi019, 
   l_pmdi019_desc LIKE type_t.chr30, 
   pmdi005 LIKE pmdi_t.pmdi005, 
   l_pmdi005_desc LIKE type_t.chr30, 
   pmdi006 LIKE pmdi_t.pmdi006, 
   l_pmdi006_desc LIKE type_t.chr30, 
   pmdi007 LIKE pmdi_t.pmdi007, 
   pmdi008 LIKE pmdi_t.pmdi008, 
   pmdi009 LIKE pmdi_t.pmdi009, 
   l_pmdi009_desc LIKE type_t.chr30, 
   pmdi011 LIKE pmdi_t.pmdi011, 
   l_pmdi011_desc LIKE type_t.chr30, 
   pmdi015 LIKE pmdi_t.pmdi015, 
   pmdi016 LIKE pmdi_t.pmdi016, 
   pmdjseq LIKE pmdj_t.pmdjseq, 
   imaa_t_imaa009 LIKE imaa_t.imaa009, 
   l_imaa009_desc LIKE type_t.chr30, 
   imaf_t_imaf141 LIKE imaf_t.imaf141, 
   l_imaf141_desc LIKE type_t.chr30, 
   pmdj002 LIKE pmdj_t.pmdj002, 
   imaal_t_imaal003 LIKE imaal_t.imaal003, 
   imaal_t_imaal004 LIKE imaal_t.imaal004, 
   pmdj003 LIKE pmdj_t.pmdj003, 
   l_pmdj003_desc LIKE type_t.chr30, 
   pmdj031 LIKE pmdj_t.pmdj031, 
   l_pmdj031_desc LIKE type_t.chr50, 
   l_pmdj031desc LIKE type_t.chr80, 
   pmdj005 LIKE pmdj_t.pmdj005, 
   pmdj008 LIKE pmdj_t.pmdj008, 
   pmdj010 LIKE pmdj_t.pmdj010, 
   pmdj011 LIKE pmdj_t.pmdj011, 
   pmdj030 LIKE pmdj_t.pmdj030, 
   l_keys LIKE type_t.chr200, 
   pmdi010 LIKE pmdi_t.pmdi010, 
   pmdi012 LIKE pmdi_t.pmdi012, 
   pmdi014 LIKE pmdi_t.pmdi014, 
   pmdi017 LIKE pmdi_t.pmdi017, 
   pmdi018 LIKE pmdi_t.pmdi018, 
   pmdi020 LIKE pmdi_t.pmdi020, 
   pmdi030 LIKE pmdi_t.pmdi030, 
   pmdi031 LIKE pmdi_t.pmdi031, 
   pmdi032 LIKE pmdi_t.pmdi032, 
   pmdj009 LIKE pmdj_t.pmdj009, 
   pmdj012 LIKE pmdj_t.pmdj012, 
   pmdj013 LIKE pmdj_t.pmdj013, 
   pmdj014 LIKE pmdj_t.pmdj014, 
   pmdj015 LIKE pmdj_t.pmdj015, 
   pmdj016 LIKE pmdj_t.pmdj016, 
   pmdj032 LIKE pmdj_t.pmdj032, 
   l_pmdi005_ref LIKE type_t.chr30, 
   l_pmdi006_ref LIKE type_t.chr30, 
   l_pmdi009_ref LIKE type_t.chr30, 
   l_pmdi011_ref LIKE type_t.chr30, 
   l_pmdi019_ref LIKE type_t.chr30, 
   l_pmdj014_desc LIKE type_t.chr30, 
   l_pmdj015_desc LIKE type_t.chr30, 
   l_pmdj016_desc LIKE type_t.chr30, 
   l_pmdj032_desc LIKE type_t.chr30, 
   l_pmdj014desc LIKE type_t.chr50, 
   l_pmdj015desc LIKE type_t.chr50, 
   l_pmdj016desc LIKE type_t.chr50, 
   l_pmdj032desc LIKE type_t.chr50, 
   l_pmdidocno_desc LIKE type_t.chr80, 
   l_pmidstus_desc LIKE type_t.chr30, 
   l_pmdi014_desc LIKE type_t.chr30, 
   l_pmdi017_desc LIKE type_t.chr30, 
   l_pmdi018_desc LIKE type_t.chr30, 
   l_pmdi002_ref LIKE type_t.chr30, 
   l_pmdi003_ref LIKE type_t.chr30, 
   l_pmdi004_ref LIKE type_t.chr30, 
   l_pmdidocnodesc LIKE type_t.chr200, 
   l_pmidstusdesc LIKE type_t.chr50, 
   l_pmdi014desc LIKE type_t.chr50, 
   l_pmdi017desc LIKE type_t.chr50, 
   l_pmdi018desc LIKE type_t.chr50, 
   l_pmdj003desc LIKE type_t.chr200
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr009_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdidocno,sr.pmdidocdt,sr.l_pmdistus_desc,sr.l_pmdi002_desc,sr.l_pmdi003_desc,sr.l_pmdi004_desc,sr.l_pmdi019_desc,sr.l_pmdi005_desc,sr.l_pmdi006_desc,sr.pmdi007,sr.pmdi008,sr.l_pmdi009_desc,sr.l_pmdi011_desc,sr.pmdi015,sr.pmdi016,sr.pmdjseq,sr.l_imaa009_desc,sr.imaf_t_imaf141,sr.pmdj002,sr.imaal_t_imaal003,sr.imaal_t_imaal004,sr.pmdj003,sr.l_pmdj003_desc,sr.pmdj031,sr.l_pmdj031_desc,sr.l_pmdj031desc,sr.pmdj005,sr.pmdj008,sr.pmdj010,sr.pmdj011,sr.pmdj030,sr.l_keys,sr.pmdi010,sr.pmdi012,sr.pmdi014,sr.pmdi017,sr.pmdi018,sr.pmdi020,sr.pmdi030,sr.pmdi031,sr.pmdi032,sr.pmdj009,sr.pmdj012,sr.pmdj013,sr.pmdj014,sr.pmdj015,sr.pmdj016,sr.pmdj032,sr.l_pmdi005_ref,sr.l_pmdi006_ref,sr.l_pmdi009_ref,sr.l_pmdi011_ref,sr.l_pmdi019_ref,sr.l_pmdj014_desc,sr.l_pmdj015_desc,sr.l_pmdj016_desc,sr.l_pmdj032_desc,sr.l_pmdj014desc,sr.l_pmdj015desc,sr.l_pmdj016desc,sr.l_pmdj032desc,sr.l_pmdidocno_desc,sr.l_pmidstus_desc,sr.l_pmdi014_desc,sr.l_pmdi017_desc,sr.l_pmdi018_desc,sr.l_pmdi002_ref,sr.l_pmdi003_ref,sr.l_pmdi004_ref,sr.l_pmdidocnodesc,sr.l_pmidstusdesc,sr.l_pmdi014desc,sr.l_pmdi017desc,sr.l_pmdi018desc,sr.l_pmdj003desc
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apmr009_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="apmr009_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apmr009_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="apmr009_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

