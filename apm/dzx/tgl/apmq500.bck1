#該程式未解開Section, 採用最新樣板產出!
{<section id="apmq500.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:9(2016-04-28 13:49:44), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000097
#+ Filename...: apmq500
#+ Description: 採購追蹤查詢作業
#+ Creator....: 04441(2014-07-29 00:00:00)
#+ Modifier...: 04441 -SD/PR-

{</section>}

{<section id="apmq500.global" >}
#應用 q01 樣板自動產生(Version:32)
#add-point:填寫註解說明
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用)
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_pmdl_d RECORD
       
       sel LIKE type_t.chr500, 
   pmdlstus LIKE pmdl_t.pmdlstus, 
   pmdldocno LIKE pmdl_t.pmdldocno, 
   pmdldocdt LIKE pmdl_t.pmdldocdt, 
   pmdl004 LIKE pmdl_t.pmdl004, 
   pmdl004_desc LIKE type_t.chr500, 
   pmdl002 LIKE pmdl_t.pmdl002, 
   prog_b_pmdl002 STRING, 
   pmdl002_desc LIKE type_t.chr500, 
   pmdl003 LIKE pmdl_t.pmdl003, 
   pmdl003_desc LIKE type_t.chr500, 
   pmdn045 LIKE pmdn_t.pmdn045, 
   pmdoseq LIKE pmdo_t.pmdoseq, 
   pmdoseq1 LIKE pmdo_t.pmdoseq1, 
   pmdoseq2 LIKE pmdo_t.pmdoseq2, 
   pmdo003 LIKE pmdo_t.pmdo003, 
   pmdo001 LIKE pmdo_t.pmdo001, 
   pmdo001_desc LIKE type_t.chr500, 
   pmdo001_desc_desc LIKE type_t.chr500, 
   pmdo002 LIKE pmdo_t.pmdo002, 
   pmdo002_desc LIKE type_t.chr500, 
   pmdo006 LIKE pmdo_t.pmdo006, 
   pmdo004 LIKE pmdo_t.pmdo004, 
   pmdo004_desc LIKE type_t.chr500, 
   pmdo013 LIKE pmdo_t.pmdo013, 
   pmdo015 LIKE pmdo_t.pmdo015, 
   pmdo019 LIKE pmdo_t.pmdo019, 
   pmdo017 LIKE pmdo_t.pmdo017, 
   pmdo016 LIKE pmdo_t.pmdo016, 
   num01 LIKE type_t.num20_6, 
   pmdn050 LIKE pmdn_t.pmdn050
       END RECORD
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_pmdl_d            DYNAMIC ARRAY OF type_g_pmdl_d
DEFINE g_pmdl_d_t          type_g_pmdl_d
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
DEFINE g_tot_cnt             LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page         LIKE type_t.num10             #每頁筆數
DEFINE g_page_act_list       STRING                        #分頁ACTION清單
DEFINE g_current_row_tot     LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_start_num      LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num        LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="apmq500.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmq500_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE apmq500_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmq500_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmq500 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmq500_init()   
 
      #進入選單 Menu (="N")
      CALL apmq500_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apmq500
      
   END IF 
   
   CLOSE apmq500_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="apmq500.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apmq500_init()
   #add-point:init段define-客製 name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   {<point name="init.before_function" />}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
      CALL cl_set_combo_scc_part('b_pmdlstus','13','N,Y,H,C,A,D,R,W,UH,X')
 
      CALL cl_set_combo_scc('b_pmdn045','2035') 
   CALL cl_set_combo_scc('b_pmdo003','2055') 
  
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init" />}
   #end add-point
 
   CALL apmq500_default_search()
END FUNCTION

{</section>}

{<section id="apmq500.default_search" >}
PRIVATE FUNCTION apmq500_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
 
 
   #add-point:default_search段開始前 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " pmdldocno = '", g_argv[01], "' AND "
   END IF
 
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="apmq500.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmq500_ui_dialog() 
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old   STRING
   DEFINE ls_js     STRING
   DEFINE la_param  RECORD
                    prog       STRING,
                    actionid   STRING,
                    background LIKE type_t.chr1,
                    param      DYNAMIC ARRAY OF STRING
                    END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   {<point name="ui_dialog.before_function" />}
   #end add-point
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET g_current_row_tot = 0
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   #應用 qs03 樣板自動產生(Version:3) 
   # 若有做串查功能，在CONSTRUCT後，需先將顯示欄位開啟、查詢欄位隱藏 
   CALL gfrm_curr.setFieldHidden('b_pmdl002', TRUE) 
   CALL gfrm_curr.setFieldHidden('prog_b_pmdl002', FALSE) 
 
  
 
 
 
   CALL apmq500_b_fill()
  
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_pmdl_d.clear()
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 0
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL apmq500_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落 name="ui_dialog.input"
         {<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落 name="ui_dialog.construct"
         {<point name="ui_dialog.construct" mark="Y"/>}
         #end add-point
     
         DISPLAY ARRAY g_pmdl_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL apmq500_detail_action_trans()
 
               LET g_master_idx = l_ac
               #為避免按上下筆時影響執行效能，所以做一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL apmq500_b_fill2()
               LET g_action_choice = lc_action_choice_old
 
               #add-point:input段before row name="input.body.before_row"
               {<point name="input.body.before_row" mark="Y"/>}
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION 相關動作 name="menu.detail_show.page1_sub."
                  {<point name="menu.detail_show.page1_sub." mark="Y"/>}
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:4)
               ON ACTION prog_aooi130
                  LET g_action_choice="prog_aooi130"
                  IF cl_auth_chk_act("prog_aooi130") THEN
                     
                     #add-point:ON ACTION prog_aooi130 name="menu.detail_show.page1_sub.prog_aooi130"
                     {<point name="menu.detail_show.page1_sub.prog_aooi130" mark="Y"/>}
                     #END add-point
                     
                     
                  END IF
 
 
 
 
               END MENU
 
 
 
               #add-point:ON ACTION detail_qrystr name="menu.detail_show.page1.detail_qrystr"
               {<point name="menu.detail_show.page1.detail_qrystr" mark="Y"/>}
               #END add-point
               
 
 
 
 
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            {<point name="ui_dialog.body.page1.action" mark="Y"/>}
            #end add-point
 
         END DISPLAY
 
         #add-point:第一頁籤程式段mark結束用 name="ui_dialog.page1.mark.end"
         {<point name="ui_dialog.page1.mark.end"/>}
         #end add-point
 
 
 
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL apmq500_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
            NEXT FIELD pmdldocno
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
         
            IF cl_null(g_wc2) THEN
               LET g_wc2 = " 1=1"
            END IF
 
 
 
            #add-point:ON ACTION accept name="ui_dialog.accept"
            {<point name="ui_dialog.accept"/>}
            #end add-point
 
            LET g_detail_idx = 1
            LET g_detail_idx2 = 1
            CALL apmq500_b_fill()
 
            IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = -100
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            {<point name="ui_dialog.agendum"/>}
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_pmdl_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
         ON ACTION datarefresh   # 重新整理
            CALL apmq500_b_fill()
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL apmq500_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL apmq500_b_fill()
 
         ON ACTION detail_next               #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL apmq500_b_fill()
 
         ON ACTION detail_last               #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL apmq500_b_fill()
 
         #應用 qs19 樣板自動產生(Version:3)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_pmdl_d.getLength()
               LET g_pmdl_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_pmdl_d.getLength()
               LET g_pmdl_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_pmdl_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_pmdl_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_pmdl_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_pmdl_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
 
 
 
 
         #應用 qs16 樣板自動產生(Version:3)
         ON ACTION filter
            LET g_action_choice="filter"
            CALL apmq500_filter()
            #add-point:ON ACTION filter name="menu.filter"
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
 
 
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               {<point name="menu.datainfo" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         {<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後 name="ui_dialog.qbeclear"
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         {<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION

{</section>}

{<section id="apmq500.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apmq500_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
 
   CALL g_pmdl_d.clear()
 
   #add-point:陣列清空 name="b_fill.array_clear"
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs04 樣板自動產生(Version:9)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET ls_sql_rank = "SELECT  UNIQUE '',pmdlstus,pmdldocno,pmdldocdt,pmdl004,'',pmdl002,'',pmdl003,'', 
       '','','','','','','','','','','','','','','','','','','',''  ,DENSE_RANK() OVER( ORDER BY pmdl_t.pmdldocno) AS RANK FROM pmdl_t", 

 
 
                     "",
                     " WHERE AND ", ls_wc
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("pmdl_t"),
                     " ORDER BY pmdl_t.pmdldocno"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   {<point name="b_fill.rank_sql_after"/>}
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql  #總筆數
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   {<point name="b_fill.rank_sql_after_count"/>}
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '',pmdlstus,pmdldocno,pmdldocdt,pmdl004,'',pmdl002,'',pmdl003,'','','','','', 
       '','','','','','','','','','','','','','','',''",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE apmq500_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR apmq500_pb
 
   OPEN b_fill_curs USING g_enterprise
 
   FOREACH b_fill_curs INTO g_pmdl_d[l_ac].sel,g_pmdl_d[l_ac].pmdlstus,g_pmdl_d[l_ac].pmdldocno,g_pmdl_d[l_ac].pmdldocdt, 
       g_pmdl_d[l_ac].pmdl004,g_pmdl_d[l_ac].pmdl004_desc,g_pmdl_d[l_ac].pmdl002,g_pmdl_d[l_ac].pmdl002_desc, 
       g_pmdl_d[l_ac].pmdl003,g_pmdl_d[l_ac].pmdl003_desc,g_pmdl_d[l_ac].pmdn045,g_pmdl_d[l_ac].pmdoseq, 
       g_pmdl_d[l_ac].pmdoseq1,g_pmdl_d[l_ac].pmdoseq2,g_pmdl_d[l_ac].pmdo003,g_pmdl_d[l_ac].pmdo001, 
       g_pmdl_d[l_ac].pmdo001_desc,g_pmdl_d[l_ac].pmdo001_desc_desc,g_pmdl_d[l_ac].pmdo002,g_pmdl_d[l_ac].pmdo002_desc, 
       g_pmdl_d[l_ac].pmdo006,g_pmdl_d[l_ac].pmdo004,g_pmdl_d[l_ac].pmdo004_desc,g_pmdl_d[l_ac].pmdo013, 
       g_pmdl_d[l_ac].pmdo015,g_pmdl_d[l_ac].pmdo019,g_pmdl_d[l_ac].pmdo017,g_pmdl_d[l_ac].pmdo016,g_pmdl_d[l_ac].num01, 
       g_pmdl_d[l_ac].pmdn050
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      #應用 qs24 樣板自動產生(Version:5) 
      #+ b_fill段欄位串查功能設定 
      IF FGL_GETENV("GUIMODE") = "GWC" THEN 
         LET g_hyper_url = apmq500_get_hyper_data("prog_b_pmdl002")
         LET g_pmdl_d[l_ac].prog_b_pmdl002 = "<a href = '",g_hyper_url,"'>",cl_bpm_replace_xml_specail_char(g_pmdl_d[l_ac].pmdl002), 
             "</a>"
 
      ELSE 
         LET g_pmdl_d[l_ac].prog_b_pmdl002 = g_pmdl_d[l_ac].pmdl002
 
      END IF 
 
 
 
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL apmq500_detail_show("'1'")
 
      CALL apmq500_pmdl_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
 
 
 
   #應用 qs05 樣板自動產生(Version:3)
   #+ b_fill段其他table資料取得(包含sql組成及資料填充)
 
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   CALL g_pmdl_d.deleteElement(g_pmdl_d.getLength())
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = g_pmdl_d.getLength()
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #應用 qs06 樣板自動產生(Version:3)
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE apmq500_pb
 
 
 
 
 
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL apmq500_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL apmq500_detail_action_trans()
 
   LET l_ac = 1
   IF g_pmdl_d.getLength() > 0 THEN
      CALL apmq500_b_fill2()
   END IF
 
      CALL apmq500_filter_show('pmdlstus','b_pmdlstus')
   CALL apmq500_filter_show('pmdldocno','b_pmdldocno')
   CALL apmq500_filter_show('pmdldocdt','b_pmdldocdt')
   CALL apmq500_filter_show('pmdl004','b_pmdl004')
   CALL apmq500_filter_show('pmdl002','b_pmdl002')
   CALL apmq500_filter_show('pmdl003','b_pmdl003')
   CALL apmq500_filter_show('pmdn045','b_pmdn045')
   CALL apmq500_filter_show('pmdoseq','b_pmdoseq')
   CALL apmq500_filter_show('pmdoseq1','b_pmdoseq1')
   CALL apmq500_filter_show('pmdoseq2','b_pmdoseq2')
   CALL apmq500_filter_show('pmdo003','b_pmdo003')
   CALL apmq500_filter_show('pmdo001','b_pmdo001')
   CALL apmq500_filter_show('pmdo002','b_pmdo002')
   CALL apmq500_filter_show('pmdo006','b_pmdo006')
   CALL apmq500_filter_show('pmdo004','b_pmdo004')
   CALL apmq500_filter_show('pmdo013','b_pmdo013')
   CALL apmq500_filter_show('pmdo015','b_pmdo015')
   CALL apmq500_filter_show('pmdo019','b_pmdo019')
   CALL apmq500_filter_show('pmdo017','b_pmdo017')
   CALL apmq500_filter_show('pmdo016','b_pmdo016')
   CALL apmq500_filter_show('pmdn050','b_pmdn050')
 
 
END FUNCTION

{</section>}

{<section id="apmq500.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apmq500_b_fill2()
   #add-point:b_fill2段define-客製 name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="b_fill2.before_function"
   {<point name="b_fill2.before_function" />}
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #應用 qs07 樣板自動產生(Version:6)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
 
   #add-point:陣列清空 name="b_fill2.array_clear"
   {<point name="b_fill2.array_clear" />}
   #end add-point
 
 
 
 
   #add-point:陣列長度調整 name="b_fill2.array_deleteElement"
   {<point name="b_fill2.array_deleteElement" />}
   #end add-point
 
 
   DISPLAY li_ac TO FORMONLY.cnt
   LET g_detail_idx2 = 1
   DISPLAY g_detail_idx2 TO FORMONLY.idx
 
 
 
 
 
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION

{</section>}

{<section id="apmq500.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION apmq500_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      #應用 a12 樣板自動產生(Version:4)
 
 
 
 
      #add-point:show段單身reference name="detail_show.body.reference"
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="apmq500.filter" >}
#應用 qs13 樣板自動產生(Version:8)
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION apmq500_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter.before_function"
   {<point name="filter.before_function" />}
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   #應用 qs02 樣板自動產生(Version:3) 
   # 若有做串查功能，在CONSTRUCT前，需先將查詢欄位開啟、顯示欄位隱藏 
   CALL gfrm_curr.setFieldHidden('prog_b_pmdl002', TRUE) 
   CALL gfrm_curr.setFieldHidden('b_pmdl002', FALSE) 
 
  
 
 
 
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #應用 qs08 樣板自動產生(Version:5)
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pmdlstus,pmdldocno,pmdldocdt,pmdl004,pmdl002,pmdl003,pmdn045,pmdoseq, 
          pmdoseq1,pmdoseq2,pmdo003,pmdo001,pmdo002,pmdo006,pmdo004,pmdo013,pmdo015,pmdo019,pmdo017, 
          pmdo016,pmdn050
                          FROM s_detail1[1].b_pmdlstus,s_detail1[1].b_pmdldocno,s_detail1[1].b_pmdldocdt, 
                              s_detail1[1].b_pmdl004,s_detail1[1].b_pmdl002,s_detail1[1].b_pmdl003,s_detail1[1].b_pmdn045, 
                              s_detail1[1].b_pmdoseq,s_detail1[1].b_pmdoseq1,s_detail1[1].b_pmdoseq2, 
                              s_detail1[1].b_pmdo003,s_detail1[1].b_pmdo001,s_detail1[1].b_pmdo002,s_detail1[1].b_pmdo006, 
                              s_detail1[1].b_pmdo004,s_detail1[1].b_pmdo013,s_detail1[1].b_pmdo015,s_detail1[1].b_pmdo019, 
                              s_detail1[1].b_pmdo017,s_detail1[1].b_pmdo016,s_detail1[1].b_pmdn050
 
         BEFORE CONSTRUCT
                     DISPLAY apmq500_filter_parser('pmdlstus') TO s_detail1[1].b_pmdlstus
            DISPLAY apmq500_filter_parser('pmdldocno') TO s_detail1[1].b_pmdldocno
            DISPLAY apmq500_filter_parser('pmdldocdt') TO s_detail1[1].b_pmdldocdt
            DISPLAY apmq500_filter_parser('pmdl004') TO s_detail1[1].b_pmdl004
            DISPLAY apmq500_filter_parser('pmdl002') TO s_detail1[1].b_pmdl002
            DISPLAY apmq500_filter_parser('pmdl003') TO s_detail1[1].b_pmdl003
            DISPLAY apmq500_filter_parser('pmdn045') TO s_detail1[1].b_pmdn045
            DISPLAY apmq500_filter_parser('pmdoseq') TO s_detail1[1].b_pmdoseq
            DISPLAY apmq500_filter_parser('pmdoseq1') TO s_detail1[1].b_pmdoseq1
            DISPLAY apmq500_filter_parser('pmdoseq2') TO s_detail1[1].b_pmdoseq2
            DISPLAY apmq500_filter_parser('pmdo003') TO s_detail1[1].b_pmdo003
            DISPLAY apmq500_filter_parser('pmdo001') TO s_detail1[1].b_pmdo001
            DISPLAY apmq500_filter_parser('pmdo002') TO s_detail1[1].b_pmdo002
            DISPLAY apmq500_filter_parser('pmdo006') TO s_detail1[1].b_pmdo006
            DISPLAY apmq500_filter_parser('pmdo004') TO s_detail1[1].b_pmdo004
            DISPLAY apmq500_filter_parser('pmdo013') TO s_detail1[1].b_pmdo013
            DISPLAY apmq500_filter_parser('pmdo015') TO s_detail1[1].b_pmdo015
            DISPLAY apmq500_filter_parser('pmdo019') TO s_detail1[1].b_pmdo019
            DISPLAY apmq500_filter_parser('pmdo017') TO s_detail1[1].b_pmdo017
            DISPLAY apmq500_filter_parser('pmdo016') TO s_detail1[1].b_pmdo016
            DISPLAY apmq500_filter_parser('pmdn050') TO s_detail1[1].b_pmdn050
 
 
         #單身公用欄位開窗相關處理
         
 
         #單身一般欄位開窗相關處理
                  #----<<b_sel>>----
         #----<<b_pmdlstus>>----
         #Ctrlp:construct.c.filter.page1.b_pmdlstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdlstus
            #add-point:ON ACTION controlp INFIELD b_pmdlstus name="construct.c.filter.page1.b_pmdlstus"
            {<point name="construct.c.filter.page1.b_pmdlstus" />}
            #END add-point
 
 
         #----<<b_pmdldocno>>----
         #Ctrlp:construct.c.page1.b_pmdldocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdldocno
            #add-point:ON ACTION controlp INFIELD b_pmdldocno name="construct.c.filter.page1.b_pmdldocno"
            {<point name="construct.c.filter.page1.b_pmdldocno" />}
            #END add-point
 
 
         #----<<b_pmdldocdt>>----
         #Ctrlp:construct.c.filter.page1.b_pmdldocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdldocdt
            #add-point:ON ACTION controlp INFIELD b_pmdldocdt name="construct.c.filter.page1.b_pmdldocdt"
            {<point name="construct.c.filter.page1.b_pmdldocdt" />}
            #END add-point
 
 
         #----<<b_pmdl004>>----
         #Ctrlp:construct.c.page1.b_pmdl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdl004
            #add-point:ON ACTION controlp INFIELD b_pmdl004 name="construct.c.filter.page1.b_pmdl004"
            {<point name="construct.c.filter.page1.b_pmdl004" />}
            #END add-point
 
 
         #----<<b_pmdl004_desc>>----
         #----<<b_pmdl002>>----
         #Ctrlp:construct.c.page1.b_pmdl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdl002
            #add-point:ON ACTION controlp INFIELD b_pmdl002 name="construct.c.filter.page1.b_pmdl002"
            {<point name="construct.c.filter.page1.b_pmdl002" />}
            #END add-point
 
 
         #----<<prog_b_pmdl002>>----
         #----<<b_pmdl002_desc>>----
         #----<<b_pmdl003>>----
         #Ctrlp:construct.c.page1.b_pmdl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdl003
            #add-point:ON ACTION controlp INFIELD b_pmdl003 name="construct.c.filter.page1.b_pmdl003"
            {<point name="construct.c.filter.page1.b_pmdl003" />}
            #END add-point
 
 
         #----<<b_pmdl003_desc>>----
         #----<<b_pmdn045>>----
         #Ctrlp:construct.c.filter.page1.b_pmdn045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdn045
            #add-point:ON ACTION controlp INFIELD b_pmdn045 name="construct.c.filter.page1.b_pmdn045"
            {<point name="construct.c.filter.page1.b_pmdn045" />}
            #END add-point
 
 
         #----<<b_pmdoseq>>----
         #Ctrlp:construct.c.filter.page1.b_pmdoseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdoseq
            #add-point:ON ACTION controlp INFIELD b_pmdoseq name="construct.c.filter.page1.b_pmdoseq"
            {<point name="construct.c.filter.page1.b_pmdoseq" />}
            #END add-point
 
 
         #----<<b_pmdoseq1>>----
         #Ctrlp:construct.c.filter.page1.b_pmdoseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdoseq1
            #add-point:ON ACTION controlp INFIELD b_pmdoseq1 name="construct.c.filter.page1.b_pmdoseq1"
            {<point name="construct.c.filter.page1.b_pmdoseq1" />}
            #END add-point
 
 
         #----<<b_pmdoseq2>>----
         #Ctrlp:construct.c.filter.page1.b_pmdoseq2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdoseq2
            #add-point:ON ACTION controlp INFIELD b_pmdoseq2 name="construct.c.filter.page1.b_pmdoseq2"
            {<point name="construct.c.filter.page1.b_pmdoseq2" />}
            #END add-point
 
 
         #----<<b_pmdo003>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo003
            #add-point:ON ACTION controlp INFIELD b_pmdo003 name="construct.c.filter.page1.b_pmdo003"
            {<point name="construct.c.filter.page1.b_pmdo003" />}
            #END add-point
 
 
         #----<<b_pmdo001>>----
         #Ctrlp:construct.c.page1.b_pmdo001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo001
            #add-point:ON ACTION controlp INFIELD b_pmdo001 name="construct.c.filter.page1.b_pmdo001"
            {<point name="construct.c.filter.page1.b_pmdo001" />}
            #END add-point
 
 
         #----<<b_pmdo001_desc>>----
         #----<<b_pmdo001_desc_desc>>----
         #----<<b_pmdo002>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo002
            #add-point:ON ACTION controlp INFIELD b_pmdo002 name="construct.c.filter.page1.b_pmdo002"
            {<point name="construct.c.filter.page1.b_pmdo002" />}
            #END add-point
 
 
         #----<<b_pmdo002_desc>>----
         #----<<b_pmdo006>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo006
            #add-point:ON ACTION controlp INFIELD b_pmdo006 name="construct.c.filter.page1.b_pmdo006"
            {<point name="construct.c.filter.page1.b_pmdo006" />}
            #END add-point
 
 
         #----<<b_pmdo004>>----
         #Ctrlp:construct.c.page1.b_pmdo004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo004
            #add-point:ON ACTION controlp INFIELD b_pmdo004 name="construct.c.filter.page1.b_pmdo004"
            {<point name="construct.c.filter.page1.b_pmdo004" />}
            #END add-point
 
 
         #----<<b_pmdo004_desc>>----
         #----<<b_pmdo013>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo013
            #add-point:ON ACTION controlp INFIELD b_pmdo013 name="construct.c.filter.page1.b_pmdo013"
            {<point name="construct.c.filter.page1.b_pmdo013" />}
            #END add-point
 
 
         #----<<b_pmdo015>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo015
            #add-point:ON ACTION controlp INFIELD b_pmdo015 name="construct.c.filter.page1.b_pmdo015"
            {<point name="construct.c.filter.page1.b_pmdo015" />}
            #END add-point
 
 
         #----<<b_pmdo019>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo019
            #add-point:ON ACTION controlp INFIELD b_pmdo019 name="construct.c.filter.page1.b_pmdo019"
            {<point name="construct.c.filter.page1.b_pmdo019" />}
            #END add-point
 
 
         #----<<b_pmdo017>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo017
            #add-point:ON ACTION controlp INFIELD b_pmdo017 name="construct.c.filter.page1.b_pmdo017"
            {<point name="construct.c.filter.page1.b_pmdo017" />}
            #END add-point
 
 
         #----<<b_pmdo016>>----
         #Ctrlp:construct.c.filter.page1.b_pmdo016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdo016
            #add-point:ON ACTION controlp INFIELD b_pmdo016 name="construct.c.filter.page1.b_pmdo016"
            {<point name="construct.c.filter.page1.b_pmdo016" />}
            #END add-point
 
 
         #----<<num01>>----
         #----<<b_pmdn050>>----
         #Ctrlp:construct.c.filter.page1.b_pmdn050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmdn050
            #add-point:ON ACTION controlp INFIELD b_pmdn050 name="construct.c.filter.page1.b_pmdn050"
            {<point name="construct.c.filter.page1.b_pmdn050" />}
            #END add-point
 
 
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
 
 
   #應用 qs03 樣板自動產生(Version:3) 
   # 若有做串查功能，在CONSTRUCT後，需先將顯示欄位開啟、查詢欄位隱藏 
   CALL gfrm_curr.setFieldHidden('b_pmdl002', TRUE) 
   CALL gfrm_curr.setFieldHidden('prog_b_pmdl002', FALSE) 
 
  
 
 
 
 
   #add-point:離開DIALOG後相關處理 name="filter.after_dialog"
   {<point name="filter.after_dialog" />}
   #end add-point
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL apmq500_filter_show('pmdlstus','b_pmdlstus')
   CALL apmq500_filter_show('pmdldocno','b_pmdldocno')
   CALL apmq500_filter_show('pmdldocdt','b_pmdldocdt')
   CALL apmq500_filter_show('pmdl004','b_pmdl004')
   CALL apmq500_filter_show('pmdl002','b_pmdl002')
   CALL apmq500_filter_show('pmdl003','b_pmdl003')
   CALL apmq500_filter_show('pmdn045','b_pmdn045')
   CALL apmq500_filter_show('pmdoseq','b_pmdoseq')
   CALL apmq500_filter_show('pmdoseq1','b_pmdoseq1')
   CALL apmq500_filter_show('pmdoseq2','b_pmdoseq2')
   CALL apmq500_filter_show('pmdo003','b_pmdo003')
   CALL apmq500_filter_show('pmdo001','b_pmdo001')
   CALL apmq500_filter_show('pmdo002','b_pmdo002')
   CALL apmq500_filter_show('pmdo006','b_pmdo006')
   CALL apmq500_filter_show('pmdo004','b_pmdo004')
   CALL apmq500_filter_show('pmdo013','b_pmdo013')
   CALL apmq500_filter_show('pmdo015','b_pmdo015')
   CALL apmq500_filter_show('pmdo019','b_pmdo019')
   CALL apmq500_filter_show('pmdo017','b_pmdo017')
   CALL apmq500_filter_show('pmdo016','b_pmdo016')
   CALL apmq500_filter_show('pmdn050','b_pmdn050')
 
 
   CALL apmq500_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION

{</section>}

{<section id="apmq500.filter_parser" >}
#應用 qs14 樣板自動產生(Version:6)
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION apmq500_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   {<point name="filter_parser.before_function" />}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 

{</section>}

{<section id="apmq500.filter_show" >}
#應用 qs15 樣板自動產生(Version:6)
#+ filter標題欄位顯示搜尋條件
PRIVATE FUNCTION apmq500_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   {<point name="filter_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   {<point name="filter_show.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   {<point name="filter_show.before_function" />}
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmq500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 

{</section>}

{<section id="apmq500.get_hyper_data" >}
#應用 qs01 樣板自動產生(Version:8) 
#+ 取得單身串查網址(包含程式代號及參數) 
PRIVATE FUNCTION apmq500_get_hyper_data(ps_field_name) 
   #add-point:get_hyper_data段define-客製 name="get_hyper_data.define_customerization" 
   {<point name="get_hyper_data.define_customerization" edit="c" mark="Y"/>} 
   #end add-point 
   DEFINE ps_field_name    STRING 
   DEFINE ps_url           STRING 
   DEFINE ls_js            STRING 
   DEFINE la_param         RECORD 
                           prog       STRING, 
                           actionid   STRING, 
                           background LIKE type_t.chr1, 
                           param      DYNAMIC ARRAY OF STRING 
                           END RECORD 
   DEFINE ps_type          LIKE type_t.chr10 
   #add-point:get_hyper_data段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="get_hyper_data.define" 
   {<point name="get_hyper_data.define"/>} 
   #end add-point 
  
  
   #add-point:FUNCTION前置處理 name="get_hyper_data.before_function" 
   {<point name="get_hyper_data.before_function" />} 
   #end add-point 
  
   LET ps_url = NULL 
  
   # 設定要做串查的程式代碼 
   CASE 
      WHEN ps_field_name = "prog_b_pmdl002" 
         LET la_param.prog = "aooi130" 
  
         # 設定傳入參數，請依序放置於 la_param.param[1]、la_param.param[2]、... 
         #應用 qs25 樣板自動產生(Version:3)
         #+ 產生串查功能傳入參數部分
 
 
 
         LET la_param.param[1] = g_pmdl_d[l_ac].pmdl002 
         #add-point:傳入參數設定 name="get_hyper_data.set_parameter_prog_b_pmdl002" 
         {<point name="get_hyper_data.set_parameter_prog_b_pmdl002"/>} 
         #end add-point 
  
 
   END CASE 
  
   # 設定傳入參數，請依序放置於 la_param.param[1]、la_param.param[2]、... 
   #add-point:傳入參數設定 name="get_hyper_data.set_parameter" 
   {<point name="get_hyper_data.set_parameter"/>} 
   #end add-point 
  
   #將陣列資料組合成一個string字串 
   LET ls_js = util.JSON.stringify(la_param) 
  
   #依環境設定要走GDC或GWC模式 (""表示會依據目前的環境判斷，若有自行定義，會依據所定義的模式去執行) 
   LET ps_type = "" 
   #add-point:定義執行模式 name="get_hyper_data.set_env" 
   {<point name="get_hyper_data.set_env"/>} 
   #end add-point 
  
   #呼叫lib，取得完整的url資訊 
   CALL cl_ap_url(ps_type,ls_js) RETURNING ps_url 
  
   RETURN ps_url 
  
END FUNCTION 

{</section>}

{<section id="apmq500.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION apmq500_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   {<point name="detail_action_trans.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   {<point name="detail_action_trans.define"/>}
   #end add-point
 
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   {<point name="detail_action_trans.before_function" />}
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION

{</section>}

{<section id="apmq500.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION apmq500_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="detail_index_setting.define_customerization"
   {<point name="detail_index_setting.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   {<point name="detail_index_setting.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   {<point name="detail_index_setting.before_function" />}
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_pmdl_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_pmdl_d.getLength() AND g_pmdl_d.getLength() > 0
            LET g_detail_idx = g_pmdl_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_pmdl_d.getLength() THEN
               LET g_detail_idx = g_pmdl_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION

{</section>}

{<section id="apmq500.mask_functions" >}
 &include "erp/apm/apmq500_mask.4gl"

{</section>}

{<section id="apmq500.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

