{<section id="apmr421_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:4(2015-11-18 16:44:18), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000074
#+ Filename...: apmr421_x01
#+ Description: ...
#+ Creator....: 05423(2014-09-02 15:20:09)
#+ Modifier...: 07024 -SD/PR-
{</section>}
 
 
 
{<section id="apmr421_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="apmr421_x01.main" readonly="Y" >}
PUBLIC FUNCTION apmr421_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apmr421_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr421_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apmr421_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apmr421_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apmr421_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apmr421_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="apmr421_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apmr421_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmdfdocno.pmdf_t.pmdfdocno,pmdfdocdt.pmdf_t.pmdfdocdt,pmdg002.pmdg_t.pmdg002,l_pmdg002_desc.type_t.chr500,l_pmdg002_pmaal004.type_t.chr30,l_pmaa080_desc.type_t.chr30,pmdf002.pmdf_t.pmdf002,l_pmdf002_desc.type_t.chr500,l_pmdf002_ooag011.type_t.chr30,pmdf003.pmdf_t.pmdf003,l_pmdf003_desc.type_t.chr500,l_pmdf003_ooefl003.type_t.chr30,pmdf005.pmdf_t.pmdf005,l_pmdf005_desc.type_t.chr30,l_pmdf005_ooail003.type_t.chr1000,pmdf006.pmdf_t.pmdf006,l_pmdf006_desc.type_t.chr30,l_pmdf006_oodbl004.type_t.chr1000,pmdf009.pmdf_t.pmdf009,l_pmdf009_desc.type_t.chr30,l_pmdf009_ooibl004.type_t.chr1000,pmdf010.pmdf_t.pmdf010,l_pmdf010_desc.type_t.chr30,l_pmdf010_oocql004.type_t.chr1000,l_imaa009_desc.type_t.chr30,pmdg003.pmdg_t.pmdg003,imaal_t_imaal003.imaal_t.imaal003,imaal_t_imaal004.imaal_t.imaal004,pmdg004.pmdg_t.pmdg004,l_pmdg004_desc.type_t.chr30,l_pmdg004_desc1.type_t.chr1000,l_imaa127.type_t.chr30,l_imaa127_desc.type_t.chr50,l_imaa127_oocql004.type_t.chr500,pmdg008.pmdg_t.pmdg008,pmdg007.pmdg_t.pmdg007,pmdg010.pmdg_t.pmdg010,pmdg013.pmdg_t.pmdg013,pmdg012.pmdg_t.pmdg012,pmdg017.pmdg_t.pmdg017,pmdf004.pmdf_t.pmdf004,l_pmdf004_desc.type_t.chr30,l_pmdf004_pmaal004.type_t.chr1000,pmdf007.pmdf_t.pmdf007,pmdf030.pmdf_t.pmdf030,pmdfstus.pmdf_t.pmdfstus,l_pmdfstus_desc.type_t.chr30,l_pmdfstus_gzcbl004.type_t.chr50,pmdg005.pmdg_t.pmdg005,l_pmdg005_desc.type_t.chr30,l_pmdg005_imaal003.type_t.chr1000,pmdg009.pmdg_t.pmdg009,pmdg011.pmdg_t.pmdg011,pmdg016.pmdg_t.pmdg016,l_pmdg016_desc.type_t.chr30,l_pmdg016_oocql004.type_t.chr1000,pmdg018.pmdg_t.pmdg018,l_pmdg018_desc.type_t.chr30,l_pmdg018_oodbl004.type_t.chr1000,pmdg030.pmdg_t.pmdg030,pmdgseq.pmdg_t.pmdgseq" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="apmr421_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apmr421_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="apmr421_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmr421_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmdfdocno,pmdfdocdt,pmdg002,NULL,trim(pmdg002)||'.'||trim(pmaal_t.pmaal004), 
       NULL,pmdf002,NULL,trim(pmdf002)||'.'||trim(ooag_t.ooag011),pmdf003,NULL,trim(pmdf003)||'.'||trim(ooefl_t.ooefl003), 
       pmdf005,NULL,NULL,pmdf006,NULL,NULL,pmdf009,NULL,NULL,pmdf010,NULL,NULL,NULL,pmdg003,imaal_t.imaal003, 
       imaal_t.imaal004,pmdg004,NULL,NULL,NULL,NULL,NULL,pmdg008,pmdg007,pmdg010,pmdg013,pmdg012,pmdg017, 
       pmdf004,NULL,NULL,pmdf007,pmdf030,pmdfstus,NULL,NULL,pmdg005,NULL,NULL,pmdg009,pmdg011,pmdg016, 
       NULL,NULL,pmdg018,NULL,NULL,pmdg030,pmdgseq"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmdf_t,pmdg_t,pmaa_t,imaa_t,imaal_t,ooag_t,oocql_t,ooefl_t,oodbl_t,ooibl_t,pmaal_t, 
        rtaxl_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmdf_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE apmr421_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apmr421_x01_curs CURSOR FOR apmr421_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="apmr421_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apmr421_x01_ins_data()
DEFINE sr RECORD 
   pmdfdocno LIKE pmdf_t.pmdfdocno, 
   pmdfdocdt LIKE pmdf_t.pmdfdocdt, 
   pmdg002 LIKE pmdg_t.pmdg002, 
   l_pmdg002_desc LIKE type_t.chr500, 
   l_pmdg002_pmaal004 LIKE type_t.chr30, 
   l_pmaa080_desc LIKE type_t.chr30, 
   pmdf002 LIKE pmdf_t.pmdf002, 
   l_pmdf002_desc LIKE type_t.chr500, 
   l_pmdf002_ooag011 LIKE type_t.chr30, 
   pmdf003 LIKE pmdf_t.pmdf003, 
   l_pmdf003_desc LIKE type_t.chr500, 
   l_pmdf003_ooefl003 LIKE type_t.chr30, 
   pmdf005 LIKE pmdf_t.pmdf005, 
   l_pmdf005_desc LIKE type_t.chr30, 
   l_pmdf005_ooail003 LIKE type_t.chr1000, 
   pmdf006 LIKE pmdf_t.pmdf006, 
   l_pmdf006_desc LIKE type_t.chr30, 
   l_pmdf006_oodbl004 LIKE type_t.chr1000, 
   pmdf009 LIKE pmdf_t.pmdf009, 
   l_pmdf009_desc LIKE type_t.chr30, 
   l_pmdf009_ooibl004 LIKE type_t.chr1000, 
   pmdf010 LIKE pmdf_t.pmdf010, 
   l_pmdf010_desc LIKE type_t.chr30, 
   l_pmdf010_oocql004 LIKE type_t.chr1000, 
   l_imaa009_desc LIKE type_t.chr30, 
   pmdg003 LIKE pmdg_t.pmdg003, 
   imaal_t_imaal003 LIKE imaal_t.imaal003, 
   imaal_t_imaal004 LIKE imaal_t.imaal004, 
   pmdg004 LIKE pmdg_t.pmdg004, 
   l_pmdg004_desc LIKE type_t.chr30, 
   l_pmdg004_desc1 LIKE type_t.chr1000, 
   l_imaa127 LIKE type_t.chr30, 
   l_imaa127_desc LIKE type_t.chr50, 
   l_imaa127_oocql004 LIKE type_t.chr500, 
   pmdg008 LIKE pmdg_t.pmdg008, 
   pmdg007 LIKE pmdg_t.pmdg007, 
   pmdg010 LIKE pmdg_t.pmdg010, 
   pmdg013 LIKE pmdg_t.pmdg013, 
   pmdg012 LIKE pmdg_t.pmdg012, 
   pmdg017 LIKE pmdg_t.pmdg017, 
   pmdf004 LIKE pmdf_t.pmdf004, 
   l_pmdf004_desc LIKE type_t.chr30, 
   l_pmdf004_pmaal004 LIKE type_t.chr1000, 
   pmdf007 LIKE pmdf_t.pmdf007, 
   pmdf030 LIKE pmdf_t.pmdf030, 
   pmdfstus LIKE pmdf_t.pmdfstus, 
   l_pmdfstus_desc LIKE type_t.chr30, 
   l_pmdfstus_gzcbl004 LIKE type_t.chr50, 
   pmdg005 LIKE pmdg_t.pmdg005, 
   l_pmdg005_desc LIKE type_t.chr30, 
   l_pmdg005_imaal003 LIKE type_t.chr1000, 
   pmdg009 LIKE pmdg_t.pmdg009, 
   pmdg011 LIKE pmdg_t.pmdg011, 
   pmdg016 LIKE pmdg_t.pmdg016, 
   l_pmdg016_desc LIKE type_t.chr30, 
   l_pmdg016_oocql004 LIKE type_t.chr1000, 
   pmdg018 LIKE pmdg_t.pmdg018, 
   l_pmdg018_desc LIKE type_t.chr30, 
   l_pmdg018_oodbl004 LIKE type_t.chr1000, 
   pmdg030 LIKE pmdg_t.pmdg030, 
   pmdgseq LIKE pmdg_t.pmdgseq
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr421_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmdfdocno,sr.pmdfdocdt,sr.pmdg002,sr.l_pmdg002_desc,sr.l_pmdg002_pmaal004,sr.l_pmaa080_desc,sr.pmdf002,sr.l_pmdf002_desc,sr.l_pmdf002_ooag011,sr.pmdf003,sr.l_pmdf003_desc,sr.l_pmdf003_ooefl003,sr.pmdf005,sr.l_pmdf005_desc,sr.l_pmdf005_ooail003,sr.pmdf006,sr.l_pmdf006_desc,sr.l_pmdf006_oodbl004,sr.pmdf009,sr.l_pmdf009_desc,sr.l_pmdf009_ooibl004,sr.pmdf010,sr.l_pmdf010_desc,sr.l_pmdf010_oocql004,sr.l_imaa009_desc,sr.pmdg003,sr.imaal_t_imaal003,sr.imaal_t_imaal004,sr.pmdg004,sr.l_pmdg004_desc,sr.l_pmdg004_desc1,sr.l_imaa127,sr.l_imaa127_desc,sr.l_imaa127_oocql004,sr.pmdg008,sr.pmdg007,sr.pmdg010,sr.pmdg013,sr.pmdg012,sr.pmdg017,sr.pmdf004,sr.l_pmdf004_desc,sr.l_pmdf004_pmaal004,sr.pmdf007,sr.pmdf030,sr.pmdfstus,sr.l_pmdfstus_desc,sr.l_pmdfstus_gzcbl004,sr.pmdg005,sr.l_pmdg005_desc,sr.l_pmdg005_imaal003,sr.pmdg009,sr.pmdg011,sr.pmdg016,sr.l_pmdg016_desc,sr.l_pmdg016_oocql004,sr.pmdg018,sr.l_pmdg018_desc,sr.l_pmdg018_oodbl004,sr.pmdg030,sr.pmdgseq
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apmr421_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="apmr421_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apmr421_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="apmr421_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
