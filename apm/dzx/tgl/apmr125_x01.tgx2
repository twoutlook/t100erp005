{<section id="apmr125_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:3(2015-11-16 16:35:55), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000060
#+ Filename...: apmr125_x01
#+ Description: ...
#+ Creator....: 05423(2014-10-29 09:32:55)
#+ Modifier...: 07024 -SD/PR-
{</section>}
 
 
 
{<section id="apmr125_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="apmr125_x01.main" readonly="Y" >}
PUBLIC FUNCTION apmr125_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "apmr125_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL apmr125_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL apmr125_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL apmr125_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL apmr125_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL apmr125_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="apmr125_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION apmr125_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "pmar001.pmar_t.pmar001,l_pmar001_desc.type_t.chr500,l_pmar001_pmaal004.type_t.chr1000,pmaa003.pmaa_t.pmaa003,pmaa080.pmaa_t.pmaa080,l_pmaa080_desc.type_t.chr30,l_pmaa080_oocql004.type_t.chr1000,pmar002.pmar_t.pmar002,imaal_t_imaal003.imaal_t.imaal003,imaal_t_imaal004.imaal_t.imaal004,pmar003.pmar_t.pmar003,l_pmar003_desc.type_t.chr50,l_pmar003_desc1.type_t.chr1000,imaa_t_imaa009.imaa_t.imaa009,l_imaa009_desc.type_t.chr30,l_imaa127_desc.type_t.chr100,pmar000.pmar_t.pmar000,pmar004.pmar_t.pmar004,pmar005.pmar_t.pmar005,pmar006.pmar_t.pmar006,l_pmar006_desc.type_t.chr30,pmar007.pmar_t.pmar007,l_pmar007_desc.type_t.chr30,l_pmar007_ooail003.type_t.chr1000,pmar008.pmar_t.pmar008,pmar009.pmar_t.pmar009,l_pmar009_desc.type_t.chr30,l_pmar009_oodbl004.type_t.chr1000,pmar011.pmar_t.pmar011,pmar010.pmar_t.pmar010,pmar012.pmar_t.pmar012,pmar013.pmar_t.pmar013,pmar014.pmar_t.pmar014,l_pmar014_desc.type_t.chr30,pmar015.pmar_t.pmar015,pmar016.pmar_t.pmar016,pmar017.pmar_t.pmar017,pmar018.pmar_t.pmar018,pmar019.pmar_t.pmar019,pmar020.pmar_t.pmar020,l_pmar020_desc.type_t.chr30,l_pmar020_oodbl004.type_t.chr1000" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="apmr125_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION apmr125_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="apmr125_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION apmr125_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT pmar001,NULL,NULL,pmaa003,pmaa080,NULL,NULL,pmar002,imaal_t.imaal003,imaal_t.imaal004, 
       pmar003,NULL,NULL,imaa_t.imaa009,NULL,NULL,NULL,pmar000,pmar004,pmar005,pmar006,NULL,pmar007, 
       NULL,NULL,pmar008,pmar009,NULL,NULL,pmar011,pmar010,pmar012,pmar013,pmar014,NULL,pmar015,pmar016, 
       pmar017,pmar018,pmar019,pmar020,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM pmar_t,pmaa_t,imaa_t,imaal_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("pmar_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE apmr125_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE apmr125_x01_curs CURSOR FOR apmr125_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="apmr125_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION apmr125_x01_ins_data()
DEFINE sr RECORD 
   pmar001 LIKE pmar_t.pmar001, 
   l_pmar001_desc LIKE type_t.chr500, 
   l_pmar001_pmaal004 LIKE type_t.chr1000, 
   pmaa003 LIKE pmaa_t.pmaa003, 
   pmaa080 LIKE pmaa_t.pmaa080, 
   l_pmaa080_desc LIKE type_t.chr30, 
   l_pmaa080_oocql004 LIKE type_t.chr1000, 
   pmar002 LIKE pmar_t.pmar002, 
   imaal_t_imaal003 LIKE imaal_t.imaal003, 
   imaal_t_imaal004 LIKE imaal_t.imaal004, 
   pmar003 LIKE pmar_t.pmar003, 
   l_pmar003_desc LIKE type_t.chr50, 
   l_pmar003_desc1 LIKE type_t.chr1000, 
   imaa_t_imaa009 LIKE imaa_t.imaa009, 
   l_imaa009_desc LIKE type_t.chr30, 
   l_imaa127 LIKE type_t.chr30, 
   l_imaa127_desc LIKE type_t.chr100, 
   pmar000 LIKE pmar_t.pmar000, 
   pmar004 LIKE pmar_t.pmar004, 
   pmar005 LIKE pmar_t.pmar005, 
   pmar006 LIKE pmar_t.pmar006, 
   l_pmar006_desc LIKE type_t.chr30, 
   pmar007 LIKE pmar_t.pmar007, 
   l_pmar007_desc LIKE type_t.chr30, 
   l_pmar007_ooail003 LIKE type_t.chr1000, 
   pmar008 LIKE pmar_t.pmar008, 
   pmar009 LIKE pmar_t.pmar009, 
   l_pmar009_desc LIKE type_t.chr30, 
   l_pmar009_oodbl004 LIKE type_t.chr1000, 
   pmar011 LIKE pmar_t.pmar011, 
   pmar010 LIKE pmar_t.pmar010, 
   pmar012 LIKE pmar_t.pmar012, 
   pmar013 LIKE pmar_t.pmar013, 
   pmar014 LIKE pmar_t.pmar014, 
   l_pmar014_desc LIKE type_t.chr30, 
   pmar015 LIKE pmar_t.pmar015, 
   pmar016 LIKE pmar_t.pmar016, 
   pmar017 LIKE pmar_t.pmar017, 
   pmar018 LIKE pmar_t.pmar018, 
   pmar019 LIKE pmar_t.pmar019, 
   pmar020 LIKE pmar_t.pmar020, 
   l_pmar020_desc LIKE type_t.chr30, 
   l_pmar020_oodbl004 LIKE type_t.chr1000
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH apmr125_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.pmar001,sr.l_pmar001_desc,sr.l_pmar001_pmaal004,sr.pmaa003,sr.pmaa080,sr.l_pmaa080_desc,sr.l_pmaa080_oocql004,sr.pmar002,sr.imaal_t_imaal003,sr.imaal_t_imaal004,sr.pmar003,sr.l_pmar003_desc,sr.l_pmar003_desc1,sr.imaa_t_imaa009,sr.l_imaa009_desc,sr.l_imaa127_desc,sr.pmar000,sr.pmar004,sr.pmar005,sr.pmar006,sr.l_pmar006_desc,sr.pmar007,sr.l_pmar007_desc,sr.l_pmar007_ooail003,sr.pmar008,sr.pmar009,sr.l_pmar009_desc,sr.l_pmar009_oodbl004,sr.pmar011,sr.pmar010,sr.pmar012,sr.pmar013,sr.pmar014,sr.l_pmar014_desc,sr.pmar015,sr.pmar016,sr.pmar017,sr.pmar018,sr.pmar019,sr.pmar020,sr.l_pmar020_desc,sr.l_pmar020_oodbl004
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "apmr125_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="apmr125_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION apmr125_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="apmr125_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
