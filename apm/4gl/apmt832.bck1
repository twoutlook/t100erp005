#該程式未解開Section, 採用最新樣板產出!
{<section id="apmt832.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0031(2017-01-16 16:14:40), PR版次:0031(2017-02-20 11:09:01)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000475
#+ Filename...: apmt832
#+ Description: 鋪貨單維護作業
#+ Creator....: 01533(2014-01-07 09:36:16)
#+ Modifier...: 06189 -SD/PR- 01996
 
{</section>}
 
{<section id="apmt832.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#160318-00025#21  2016/04/19  BY 07900     校验代码重复错误讯息的修改
#160812-00017#8   2016/08/16  By 06137     在satatchange( )的FUNCTION中，有RETURN指令但沒有加上transaction_end( ) 造成transaction沒有結束就直接RETURN
#160818-00017#28  2016/08/29  By 08742     删除修改未重新判断状态码
#160824-00007#19  2016/09/19  By 06814     舊值備份處理
#160921-00037#2   2016/09/23  By 06814     1.單身新增欄位(產品特徵&說明)
#                                          2.單身手動錄入商品時管控必須存在採購協議，修改為管控必須存在商品清單且有效（採購類型需有值）。
#161015-00003#1   2016/10/15  by 08172     单据编号离开单头时新增
#161016-00004#1   2016/10/16  by 08172     铺货单的单身表增加“参考单价”字段，规格参考要货单单身表中的“参考单价”字段。
#161017-00029#2   2016/10/18  by 08742     1.录入条码或开窗选择条码后，需要根据条码带出产品特征imay019，
#                                          2.录入产品特征或开窗选择产品特征后，需要根据商品和产品特征带出条码imay003
#add by geza 20161031 #161027-00055#3
#铺货仓库存：单身pmcp006铺货库位的库存量，若单身pmcp006为空，则取单身pmcpsite铺货组织的默认收货成本仓ooef123的库存
#配送中心：取单身pmcpsite铺货组织+pmcp001商品编号(rtdxsite营运组织+rtdx001商品编号)对应的rtdx029配送中心
#配送中心名称：按单身配送中心带出对应名称ooefl003
#配送仓可用库存：单身配送中心的所有库位为'可用'的ooef124的库存量(inag009)之和，加减aini007中设定的加减项的已审核未发过货的数量
#161006-00008#11  2016/10/21 by sakura 整批修改組織
#161031-00059#1   2016/10/31  by 08172     铺货单明细操作菜单增加【调整需求日期】按钮，可以整批调整单身记录的需求日期
#161101-00057#1   2016/11/01  by 08172     apmt830单身增加汇总数量
#161110-00008#2   2016/11/10  by geza      apmt832铺货单单身录入时 铺货组织和需求日期默认取上一笔；
#161109-00078#5   2016/11/10  by 06814     將取消審核功能打開
#161129-00067#1   2016/11/30  by 08172     参考单价名称改为预计销货价格，此字段取值改为imaa116原先逻辑mark
#161124-00039#1   2016/12/06  by geza      使用inax计算可用库存
#161227-00012#1   2016/12/27  by geza      apmt832可用库存取值的时候，去掉取aini007里的循环部分，直接从inax总计数量
#161129-00027#9   2016/12/30  by sunxh     apmt832单身铺货库位必录
#170116-00018#2   2017/01/16  by geza      1.单身新增配送仓库pmcp016字段，按adbi261物流组织仓库出货范围所设置预带，允许手动修改，允许为空 2 預計可用量抓取inas計算
#161228-00033#3   2017/02/08  by sakura   為了客戶DB種類的相容性:rownum寫法的改寫
#160711-00040#24  2017/02/20  By xujing   T類作業的單別開窗的where條件(找CALL q_ooba002_開頭的)增加如下程式段
#                                          CALL s_control_get_docno_sql(g_user,g_dept) RETURNING l_success,l_sql1
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_pmco_m        RECORD
       pmcosite LIKE pmco_t.pmcosite, 
   pmcosite_desc LIKE type_t.chr80, 
   pmcodocdt LIKE pmco_t.pmcodocdt, 
   pmcodocno LIKE pmco_t.pmcodocno, 
   pmcodocno_desc LIKE type_t.chr80, 
   pmcounit LIKE pmco_t.pmcounit, 
   pmco003 LIKE pmco_t.pmco003, 
   pmco004 LIKE pmco_t.pmco004, 
   pmco001 LIKE pmco_t.pmco001, 
   pmco001_desc LIKE type_t.chr80, 
   pmco002 LIKE pmco_t.pmco002, 
   pmco002_desc LIKE type_t.chr80, 
   pmco005 LIKE pmco_t.pmco005, 
   pmcostus LIKE pmco_t.pmcostus, 
   pmcoownid LIKE pmco_t.pmcoownid, 
   pmcoownid_desc LIKE type_t.chr80, 
   pmcoowndp LIKE pmco_t.pmcoowndp, 
   pmcoowndp_desc LIKE type_t.chr80, 
   pmcocrtid LIKE pmco_t.pmcocrtid, 
   pmcocrtid_desc LIKE type_t.chr80, 
   pmcocrtdp LIKE pmco_t.pmcocrtdp, 
   pmcocrtdp_desc LIKE type_t.chr80, 
   pmcocrtdt LIKE pmco_t.pmcocrtdt, 
   pmcomodid LIKE pmco_t.pmcomodid, 
   pmcomodid_desc LIKE type_t.chr80, 
   pmcomoddt LIKE pmco_t.pmcomoddt, 
   pmcocnfid LIKE pmco_t.pmcocnfid, 
   pmcocnfid_desc LIKE type_t.chr80, 
   pmcocnfdt LIKE pmco_t.pmcocnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_pmcp_d        RECORD
       pmcpseq LIKE pmcp_t.pmcpseq, 
   pmcpsite LIKE pmcp_t.pmcpsite, 
   pmcpsite_desc LIKE type_t.chr500, 
   pmcp006 LIKE pmcp_t.pmcp006, 
   pmcp006_desc LIKE type_t.chr500, 
   l_inag009 LIKE type_t.num20_6, 
   rtdx029 LIKE type_t.chr10, 
   rtdx029_desc LIKE type_t.chr500, 
   l_inag009_1 LIKE type_t.num20_6, 
   pmcp002 LIKE pmcp_t.pmcp002, 
   pmcp001 LIKE pmcp_t.pmcp001, 
   pmcp001_desc LIKE type_t.chr500, 
   pmcp001_desc1 LIKE type_t.chr500, 
   pmcp003 LIKE pmcp_t.pmcp003, 
   pmcp003_desc LIKE type_t.chr500, 
   pmcp016 LIKE pmcp_t.pmcp016, 
   pmcp009 LIKE pmcp_t.pmcp009, 
   pmcp009_desc LIKE type_t.chr500, 
   pmcp010 LIKE pmcp_t.pmcp010, 
   pmcp011 LIKE pmcp_t.pmcp011, 
   pmcp004 LIKE pmcp_t.pmcp004, 
   pmcp005 LIKE pmcp_t.pmcp005, 
   pmcp005_desc LIKE type_t.chr500, 
   pmcp015 LIKE pmcp_t.pmcp015, 
   pmcp013 LIKE pmcp_t.pmcp013, 
   pmcp012 LIKE pmcp_t.pmcp012, 
   pmcp012_desc LIKE type_t.chr500, 
   pmcp007 LIKE pmcp_t.pmcp007, 
   pmcp008 LIKE pmcp_t.pmcp008, 
   pmcp008_desc LIKE type_t.chr500, 
   pmcp014 LIKE pmcp_t.pmcp014, 
   pmcpunit LIKE pmcp_t.pmcpunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_pmcosite LIKE pmco_t.pmcosite,
   b_pmcosite_desc LIKE type_t.chr80,
      b_pmcodocno LIKE pmco_t.pmcodocno,
      b_pmcodocdt LIKE pmco_t.pmcodocdt,
      b_pmco003 LIKE pmco_t.pmco003,
      b_pmco004 LIKE pmco_t.pmco004,
      b_pmco001 LIKE pmco_t.pmco001,
   b_pmco001_desc LIKE type_t.chr80,
      b_pmco002 LIKE pmco_t.pmco002,
   b_pmco002_desc LIKE type_t.chr80,
      b_pmco005 LIKE pmco_t.pmco005,
      b_pmcounit LIKE pmco_t.pmcounit
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_ooef004      LIKE ooef_t.ooef004
DEFINE g_ooef005      LIKE ooef_t.ooef005
DEFINE g_flag         LIKE type_t.num5
DEFINE g_pmcpsite     LIKE pmcp_t.pmcpsite   #161031-00059#1 by 08172
DEFINE g_pmcp007      LIKE pmcp_t.pmcp007    #161031-00059#1 by 08172
DEFINE g_wc_date      STRING                 #161031-00059#1 by 08172


 TYPE type_g_pmcp2_d        RECORD
   sel        LIKE type_t.chr1, 
   pmcpsite   LIKE pmcp_t.pmcpsite, 
   pmcpsite_desc LIKE type_t.chr500,
   pmcp002    LIKE pmcp_t.pmcp002,   
   pmcp001    LIKE pmcp_t.pmcp001, 
   pmcp001_desc LIKE type_t.chr80, 
   pmcp001_desc_1 LIKE type_t.chr80, 
   pmcp009    LIKE pmcp_t.pmcp009,
   pmcp009_desc LIKE type_t.chr80, 
   pmcp010    LIKE pmcp_t.pmcp010,  
   pmcp011    LIKE pmcp_t.pmcp011,  
   pmcp004    LIKE pmcp_t.pmcp004, 
   pmcp005    LIKE pmcp_t.pmcp005, 
   pmcp005_desc LIKE type_t.chr80, 
   pmcp007    LIKE pmcp_t.pmcp007, 
   pmcp008    LIKE pmcp_t.pmcp008, 
   pmcp008_desc LIKE type_t.chr500
       END RECORD

DEFINE g_pmcp2_d   DYNAMIC ARRAY OF type_g_pmcp2_d
DEFINE g_pmcp2_d_t   type_g_pmcp2_d

 type type_g_pmcp2_m        RECORD
   pmcp009 LIKE pmcp_t.pmcp009, 
   pmcp009_desc LIKE type_t.chr80,
   pmcp011 LIKE pmcp_t.pmcp011,  
   pmcp005 LIKE pmcp_t.pmcp005,
   pmcp005_desc LIKE type_t.chr80,
   pmcp007 LIKE pmcp_t.pmcp007, 
   pmcp008 LIKE pmcp_t.pmcp008, 
   pmcp008_desc LIKE type_t.chr80
       END RECORD
DEFINE g_pmcp2_m        type_g_pmcp2_m

 type type_tm        RECORD
   wc       STRING,
   rtdx001  LIKE rtdx_t.rtdx001,
   imaa009  LIKE imaa_t.imaa009,
   rtdxsite LIKE rtdx_t.rtdxsite
  END RECORD
DEFINE tm        type_tm
DEFINE g_rec_b3          LIKE type_t.num5
DEFINE g_detail_idx3     LIKE type_t.num5
DEFINE l_ac3             LIKE type_t.num5 

DEFINE g_c               LIKE type_t.num5
DEFINE g_site_flag   LIKE type_t.num5
#end add-point
       
#模組變數(Module Variables)
DEFINE g_pmco_m          type_g_pmco_m
DEFINE g_pmco_m_t        type_g_pmco_m
DEFINE g_pmco_m_o        type_g_pmco_m
DEFINE g_pmco_m_mask_o   type_g_pmco_m #轉換遮罩前資料
DEFINE g_pmco_m_mask_n   type_g_pmco_m #轉換遮罩後資料
 
   DEFINE g_pmcodocno_t LIKE pmco_t.pmcodocno
 
 
DEFINE g_pmcp_d          DYNAMIC ARRAY OF type_g_pmcp_d
DEFINE g_pmcp_d_t        type_g_pmcp_d
DEFINE g_pmcp_d_o        type_g_pmcp_d
DEFINE g_pmcp_d_mask_o   DYNAMIC ARRAY OF type_g_pmcp_d #轉換遮罩前資料
DEFINE g_pmcp_d_mask_n   DYNAMIC ARRAY OF type_g_pmcp_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="apmt832.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apm","")
 
   #add-point:作業初始化 name="main.init"
   LET g_c = FALSE
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT pmcosite,'',pmcodocdt,pmcodocno,'',pmcounit,pmco003,pmco004,pmco001,'', 
       pmco002,'',pmco005,pmcostus,pmcoownid,'',pmcoowndp,'',pmcocrtid,'',pmcocrtdp,'',pmcocrtdt,pmcomodid, 
       '',pmcomoddt,pmcocnfid,'',pmcocnfdt", 
                      " FROM pmco_t",
                      " WHERE pmcoent= ? AND pmcodocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt832_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.pmcosite,t0.pmcodocdt,t0.pmcodocno,t0.pmcounit,t0.pmco003,t0.pmco004, 
       t0.pmco001,t0.pmco002,t0.pmco005,t0.pmcostus,t0.pmcoownid,t0.pmcoowndp,t0.pmcocrtid,t0.pmcocrtdp, 
       t0.pmcocrtdt,t0.pmcomodid,t0.pmcomoddt,t0.pmcocnfid,t0.pmcocnfdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 , 
       t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooag011",
               " FROM pmco_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.pmcosite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.pmco001  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.pmco002 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.pmcoownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.pmcoowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.pmcocrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.pmcocrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.pmcomodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.pmcocnfid  ",
 
               " WHERE t0.pmcoent = " ||g_enterprise|| " AND t0.pmcodocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE apmt832_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apmt832 WITH FORM cl_ap_formpath("apm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL apmt832_init()   
 
      #進入選單 Menu (="N")
      CALL apmt832_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_apmt832
      
   END IF 
   
   CLOSE apmt832_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="apmt832.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION apmt832_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('pmcostus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('pmcp013','6014') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
   
   #初始化搜尋條件
   CALL apmt832_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="apmt832.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION apmt832_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL apmt832_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   LET g_ooef004 = ''
   LET g_ooef005 = ''
   SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00007'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
   IF cl_null(g_ooef005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00008'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF  
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_pmco_m.* TO NULL
         CALL g_pmcp_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL apmt832_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL apmt832_fetch('') # reload data
               LET l_ac = 1
               CALL apmt832_ui_detailshow() #Setting the current row 
         
               CALL apmt832_idx_chk()
               #NEXT FIELD pmcpseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_pmcp_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL apmt832_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL apmt832_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL apmt832_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL apmt832_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL apmt832_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL apmt832_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
        
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL apmt832_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL apmt832_set_act_visible()   
            CALL apmt832_set_act_no_visible()
            IF NOT (g_pmco_m.pmcodocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " pmcoent = " ||g_enterprise|| " AND",
                                  " pmcodocno = '", g_pmco_m.pmcodocno, "' "
 
               #填到對應位置
               CALL apmt832_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "pmco_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "pmcp_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL apmt832_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "pmco_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "pmcp_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL apmt832_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL apmt832_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL apmt832_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL apmt832_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt832_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL apmt832_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt832_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL apmt832_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt832_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL apmt832_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt832_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL apmt832_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apmt832_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_pmcp_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD pmcpseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL apmt832_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL apmt832_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apmt832_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL apmt832_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION batchgen
            LET g_action_choice="batchgen"
            IF cl_auth_chk_act("batchgen") THEN
               
               #add-point:ON ACTION batchgen name="menu.batchgen"
               IF NOT cl_null(g_pmco_m.pmcodocno) THEN
                  CALL apmt832_s01(g_pmco_m.pmcodocno)   
                  CALL apmt832_b_fill()
                  CALL apmt832_show()
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datechange
            LET g_action_choice="datechange"
            IF cl_auth_chk_act("datechange") THEN
               
               #add-point:ON ACTION datechange name="menu.datechange"
               CALL apmt832_date_change()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = " pmcoent = '",g_enterprise,"' AND pmcodocno = '",g_pmco_m.pmcodocno,"' " #150324-00006#7 Add By Ken 150331
               #END add-point
               &include "erp/apm/apmt832_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               LET g_rep_wc = " pmcoent = '",g_enterprise,"' AND pmcodocno = '",g_pmco_m.pmcodocno,"' " #150324-00006#7 Add By Ken 150331
               #END add-point
               &include "erp/apm/apmt832_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apmt832_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_pmco001
            LET g_action_choice="prog_pmco001"
            IF cl_auth_chk_act("prog_pmco001") THEN
               
               #add-point:ON ACTION prog_pmco001 name="menu.prog_pmco001"
               #應用 a45 樣板自動產生(Version:2)
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_pmco_m.pmco001)
 


               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL apmt832_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL apmt832_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL apmt832_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_pmco_m.pmcodocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="apmt832.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION apmt832_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   CALL s_aooi500_sql_where(g_prog,'pmcosite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim()
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT pmcodocno ",
                      " FROM pmco_t ",
                      " ",
                      " LEFT JOIN pmcp_t ON pmcpent = pmcoent AND pmcodocno = pmcpdocno ", "  ",
                      #add-point:browser_fill段sql(pmcp_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE pmcoent = " ||g_enterprise|| " AND pmcpent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("pmco_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT pmcodocno ",
                      " FROM pmco_t ", 
                      "  ",
                      "  ",
                      " WHERE pmcoent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("pmco_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_pmco_m.* TO NULL
      CALL g_pmcp_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.pmcosite,t0.pmcodocno,t0.pmcodocdt,t0.pmco003,t0.pmco004,t0.pmco001,t0.pmco002,t0.pmco005,t0.pmcounit Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.pmcostus,t0.pmcosite,t0.pmcodocno,t0.pmcodocdt,t0.pmco003,t0.pmco004, 
          t0.pmco001,t0.pmco002,t0.pmco005,t0.pmcounit,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ",
                  " FROM pmco_t t0",
                  "  ",
                  "  LEFT JOIN pmcp_t ON pmcpent = pmcoent AND pmcodocno = pmcpdocno ", "  ", 
                  #add-point:browser_fill段sql(pmcp_t1) name="browser_fill.join.pmcp_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.pmcosite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.pmco001  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.pmco002 AND t3.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.pmcoent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("pmco_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.pmcostus,t0.pmcosite,t0.pmcodocno,t0.pmcodocdt,t0.pmco003,t0.pmco004, 
          t0.pmco001,t0.pmco002,t0.pmco005,t0.pmcounit,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ",
                  " FROM pmco_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.pmcosite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.pmco001  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.pmco002 AND t3.ooefl002='"||g_dlang||"' ",
 
                  " WHERE t0.pmcoent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("pmco_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY pmcodocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"pmco_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_pmcosite,g_browser[g_cnt].b_pmcodocno, 
          g_browser[g_cnt].b_pmcodocdt,g_browser[g_cnt].b_pmco003,g_browser[g_cnt].b_pmco004,g_browser[g_cnt].b_pmco001, 
          g_browser[g_cnt].b_pmco002,g_browser[g_cnt].b_pmco005,g_browser[g_cnt].b_pmcounit,g_browser[g_cnt].b_pmcosite_desc, 
          g_browser[g_cnt].b_pmco001_desc,g_browser[g_cnt].b_pmco002_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL apmt832_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_pmcodocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION apmt832_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_pmco_m.pmcodocno = g_browser[g_current_idx].b_pmcodocno   
 
   EXECUTE apmt832_master_referesh USING g_pmco_m.pmcodocno INTO g_pmco_m.pmcosite,g_pmco_m.pmcodocdt, 
       g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002, 
       g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt, 
       g_pmco_m.pmcosite_desc,g_pmco_m.pmco001_desc,g_pmco_m.pmco002_desc,g_pmco_m.pmcoownid_desc,g_pmco_m.pmcoowndp_desc, 
       g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcocnfid_desc 
 
   
   CALL apmt832_pmco_t_mask()
   CALL apmt832_show()
      
END FUNCTION
 
{</section>}
 
{<section id="apmt832.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION apmt832_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION apmt832_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pmcodocno = g_pmco_m.pmcodocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION apmt832_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_pmco_m.* TO NULL
   CALL g_pmcp_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON pmcosite,pmcodocdt,pmcodocno,pmcodocno_desc,pmcounit,pmco003,pmco004, 
          pmco001,pmco002,pmco005,pmcostus,pmcoownid,pmcoowndp,pmcocrtid,pmcocrtdp,pmcocrtdt,pmcomodid, 
          pmcomoddt,pmcocnfid,pmcocnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<pmcocrtdt>>----
         AFTER FIELD pmcocrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<pmcomoddt>>----
         AFTER FIELD pmcomoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmcocnfdt>>----
         AFTER FIELD pmcocnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<pmcopstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.pmcosite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcosite
            #add-point:ON ACTION controlp INFIELD pmcosite name="construct.c.pmcosite"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			  LET g_qryparam.where = "ooef201 = 'Y'"
#            CALL q_ooef001()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmcosite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO pmcosite  #顯示到畫面上

            NEXT FIELD pmcosite                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcosite
            #add-point:BEFORE FIELD pmcosite name="construct.b.pmcosite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcosite
            
            #add-point:AFTER FIELD pmcosite name="construct.a.pmcosite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcodocdt
            #add-point:BEFORE FIELD pmcodocdt name="construct.b.pmcodocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcodocdt
            
            #add-point:AFTER FIELD pmcodocdt name="construct.a.pmcodocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmcodocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcodocdt
            #add-point:ON ACTION controlp INFIELD pmcodocdt name="construct.c.pmcodocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pmcodocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcodocno
            #add-point:ON ACTION controlp INFIELD pmcodocno name="construct.c.pmcodocno"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmcodocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcodocno  #顯示到畫面上

            NEXT FIELD pmcodocno                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcodocno
            #add-point:BEFORE FIELD pmcodocno name="construct.b.pmcodocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcodocno
            
            #add-point:AFTER FIELD pmcodocno name="construct.a.pmcodocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcodocno_desc
            #add-point:BEFORE FIELD pmcodocno_desc name="construct.b.pmcodocno_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcodocno_desc
            
            #add-point:AFTER FIELD pmcodocno_desc name="construct.a.pmcodocno_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmcodocno_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcodocno_desc
            #add-point:ON ACTION controlp INFIELD pmcodocno_desc name="construct.c.pmcodocno_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcounit
            #add-point:BEFORE FIELD pmcounit name="construct.b.pmcounit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcounit
            
            #add-point:AFTER FIELD pmcounit name="construct.a.pmcounit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmcounit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcounit
            #add-point:ON ACTION controlp INFIELD pmcounit name="construct.c.pmcounit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco003
            #add-point:BEFORE FIELD pmco003 name="construct.b.pmco003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco003
            
            #add-point:AFTER FIELD pmco003 name="construct.a.pmco003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmco003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco003
            #add-point:ON ACTION controlp INFIELD pmco003 name="construct.c.pmco003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco004
            #add-point:BEFORE FIELD pmco004 name="construct.b.pmco004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco004
            
            #add-point:AFTER FIELD pmco004 name="construct.a.pmco004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmco004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco004
            #add-point:ON ACTION controlp INFIELD pmco004 name="construct.c.pmco004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pmco001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco001
            #add-point:ON ACTION controlp INFIELD pmco001 name="construct.c.pmco001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmco001  #顯示到畫面上

            NEXT FIELD pmco001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco001
            #add-point:BEFORE FIELD pmco001 name="construct.b.pmco001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco001
            
            #add-point:AFTER FIELD pmco001 name="construct.a.pmco001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmco002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco002
            #add-point:ON ACTION controlp INFIELD pmco002 name="construct.c.pmco002"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_pmco_m.pmcodocdt
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmco002  #顯示到畫面上

            NEXT FIELD pmco002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco002
            #add-point:BEFORE FIELD pmco002 name="construct.b.pmco002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco002
            
            #add-point:AFTER FIELD pmco002 name="construct.a.pmco002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco005
            #add-point:BEFORE FIELD pmco005 name="construct.b.pmco005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco005
            
            #add-point:AFTER FIELD pmco005 name="construct.a.pmco005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmco005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco005
            #add-point:ON ACTION controlp INFIELD pmco005 name="construct.c.pmco005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcostus
            #add-point:BEFORE FIELD pmcostus name="construct.b.pmcostus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcostus
            
            #add-point:AFTER FIELD pmcostus name="construct.a.pmcostus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmcostus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcostus
            #add-point:ON ACTION controlp INFIELD pmcostus name="construct.c.pmcostus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pmcoownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcoownid
            #add-point:ON ACTION controlp INFIELD pmcoownid name="construct.c.pmcoownid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcoownid  #顯示到畫面上

            NEXT FIELD pmcoownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcoownid
            #add-point:BEFORE FIELD pmcoownid name="construct.b.pmcoownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcoownid
            
            #add-point:AFTER FIELD pmcoownid name="construct.a.pmcoownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmcoowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcoowndp
            #add-point:ON ACTION controlp INFIELD pmcoowndp name="construct.c.pmcoowndp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcoowndp  #顯示到畫面上

            NEXT FIELD pmcoowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcoowndp
            #add-point:BEFORE FIELD pmcoowndp name="construct.b.pmcoowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcoowndp
            
            #add-point:AFTER FIELD pmcoowndp name="construct.a.pmcoowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmcocrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcocrtid
            #add-point:ON ACTION controlp INFIELD pmcocrtid name="construct.c.pmcocrtid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcocrtid  #顯示到畫面上

            NEXT FIELD pmcocrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcocrtid
            #add-point:BEFORE FIELD pmcocrtid name="construct.b.pmcocrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcocrtid
            
            #add-point:AFTER FIELD pmcocrtid name="construct.a.pmcocrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmcocrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcocrtdp
            #add-point:ON ACTION controlp INFIELD pmcocrtdp name="construct.c.pmcocrtdp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcocrtdp  #顯示到畫面上

            NEXT FIELD pmcocrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcocrtdp
            #add-point:BEFORE FIELD pmcocrtdp name="construct.b.pmcocrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcocrtdp
            
            #add-point:AFTER FIELD pmcocrtdp name="construct.a.pmcocrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcocrtdt
            #add-point:BEFORE FIELD pmcocrtdt name="construct.b.pmcocrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pmcomodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcomodid
            #add-point:ON ACTION controlp INFIELD pmcomodid name="construct.c.pmcomodid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcomodid  #顯示到畫面上

            NEXT FIELD pmcomodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcomodid
            #add-point:BEFORE FIELD pmcomodid name="construct.b.pmcomodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcomodid
            
            #add-point:AFTER FIELD pmcomodid name="construct.a.pmcomodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcomoddt
            #add-point:BEFORE FIELD pmcomoddt name="construct.b.pmcomoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.pmcocnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcocnfid
            #add-point:ON ACTION controlp INFIELD pmcocnfid name="construct.c.pmcocnfid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcocnfid  #顯示到畫面上

            NEXT FIELD pmcocnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcocnfid
            #add-point:BEFORE FIELD pmcocnfid name="construct.b.pmcocnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcocnfid
            
            #add-point:AFTER FIELD pmcocnfid name="construct.a.pmcocnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcocnfdt
            #add-point:BEFORE FIELD pmcocnfdt name="construct.b.pmcocnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON pmcpseq,pmcpsite,pmcp006,pmcp002,pmcp001,pmcp003,pmcp003_desc,pmcp016, 
          pmcp009,pmcp010,pmcp011,pmcp004,pmcp005,pmcp015,pmcp013,pmcp012,pmcp007,pmcp008,pmcp014,pmcpunit 
 
           FROM s_detail1[1].pmcpseq,s_detail1[1].pmcpsite,s_detail1[1].pmcp006,s_detail1[1].pmcp002, 
               s_detail1[1].pmcp001,s_detail1[1].pmcp003,s_detail1[1].pmcp003_desc,s_detail1[1].pmcp016, 
               s_detail1[1].pmcp009,s_detail1[1].pmcp010,s_detail1[1].pmcp011,s_detail1[1].pmcp004,s_detail1[1].pmcp005, 
               s_detail1[1].pmcp015,s_detail1[1].pmcp013,s_detail1[1].pmcp012,s_detail1[1].pmcp007,s_detail1[1].pmcp008, 
               s_detail1[1].pmcp014,s_detail1[1].pmcpunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcpseq
            #add-point:BEFORE FIELD pmcpseq name="construct.b.page1.pmcpseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcpseq
            
            #add-point:AFTER FIELD pmcpseq name="construct.a.page1.pmcpseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcpseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcpseq
            #add-point:ON ACTION controlp INFIELD pmcpseq name="construct.c.page1.pmcpseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.pmcpsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcpsite
            #add-point:ON ACTION controlp INFIELD pmcpsite name="construct.c.page1.pmcpsite"
            #此段落由子樣板a08產生
            #開窗c段
		   	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
			#LET g_qryparam.arg1 = '2'
#			   LET g_qryparam.where = "ooef201 ='Y'"
#            CALL q_ooef001()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmcpsite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO pmcpsite  #顯示到畫面上

            NEXT FIELD pmcpsite                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcpsite
            #add-point:BEFORE FIELD pmcpsite name="construct.b.page1.pmcpsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcpsite
            
            #add-point:AFTER FIELD pmcpsite name="construct.a.page1.pmcpsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp006
            #add-point:ON ACTION controlp INFIELD pmcp006 name="construct.c.page1.pmcp006"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_pmcp_d[l_ac].pmcpsite
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp006  #顯示到畫面上

            NEXT FIELD pmcp006                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp006
            #add-point:BEFORE FIELD pmcp006 name="construct.b.page1.pmcp006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp006
            
            #add-point:AFTER FIELD pmcp006 name="construct.a.page1.pmcp006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp002
            #add-point:ON ACTION controlp INFIELD pmcp002 name="construct.c.page1.pmcp002"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp002  #顯示到畫面上

            NEXT FIELD pmcp002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp002
            #add-point:BEFORE FIELD pmcp002 name="construct.b.page1.pmcp002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp002
            
            #add-point:AFTER FIELD pmcp002 name="construct.a.page1.pmcp002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp001
            #add-point:ON ACTION controlp INFIELD pmcp001 name="construct.c.page1.pmcp001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp001  #顯示到畫面上

            NEXT FIELD pmcp001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp001
            #add-point:BEFORE FIELD pmcp001 name="construct.b.page1.pmcp001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp001
            
            #add-point:AFTER FIELD pmcp001 name="construct.a.page1.pmcp001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp003
            #add-point:BEFORE FIELD pmcp003 name="construct.b.page1.pmcp003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp003
            
            #add-point:AFTER FIELD pmcp003 name="construct.a.page1.pmcp003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp003
            #add-point:ON ACTION controlp INFIELD pmcp003 name="construct.c.page1.pmcp003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp003_desc
            #add-point:BEFORE FIELD pmcp003_desc name="construct.b.page1.pmcp003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp003_desc
            
            #add-point:AFTER FIELD pmcp003_desc name="construct.a.page1.pmcp003_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp003_desc
            #add-point:ON ACTION controlp INFIELD pmcp003_desc name="construct.c.page1.pmcp003_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.pmcp016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp016
            #add-point:ON ACTION controlp INFIELD pmcp016 name="construct.c.page1.pmcp016"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp016  #顯示到畫面上
            NEXT FIELD pmcp016                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp016
            #add-point:BEFORE FIELD pmcp016 name="construct.b.page1.pmcp016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp016
            
            #add-point:AFTER FIELD pmcp016 name="construct.a.page1.pmcp016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp009
            #add-point:ON ACTION controlp INFIELD pmcp009 name="construct.c.page1.pmcp009"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp009  #顯示到畫面上

            NEXT FIELD pmcp009                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp009
            #add-point:BEFORE FIELD pmcp009 name="construct.b.page1.pmcp009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp009
            
            #add-point:AFTER FIELD pmcp009 name="construct.a.page1.pmcp009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp010
            #add-point:BEFORE FIELD pmcp010 name="construct.b.page1.pmcp010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp010
            
            #add-point:AFTER FIELD pmcp010 name="construct.a.page1.pmcp010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp010
            #add-point:ON ACTION controlp INFIELD pmcp010 name="construct.c.page1.pmcp010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp011
            #add-point:BEFORE FIELD pmcp011 name="construct.b.page1.pmcp011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp011
            
            #add-point:AFTER FIELD pmcp011 name="construct.a.page1.pmcp011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp011
            #add-point:ON ACTION controlp INFIELD pmcp011 name="construct.c.page1.pmcp011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp004
            #add-point:BEFORE FIELD pmcp004 name="construct.b.page1.pmcp004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp004
            
            #add-point:AFTER FIELD pmcp004 name="construct.a.page1.pmcp004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp004
            #add-point:ON ACTION controlp INFIELD pmcp004 name="construct.c.page1.pmcp004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.pmcp005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp005
            #add-point:ON ACTION controlp INFIELD pmcp005 name="construct.c.page1.pmcp005"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp005  #顯示到畫面上

            NEXT FIELD pmcp005                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp005
            #add-point:BEFORE FIELD pmcp005 name="construct.b.page1.pmcp005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp005
            
            #add-point:AFTER FIELD pmcp005 name="construct.a.page1.pmcp005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp015
            #add-point:BEFORE FIELD pmcp015 name="construct.b.page1.pmcp015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp015
            
            #add-point:AFTER FIELD pmcp015 name="construct.a.page1.pmcp015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp015
            #add-point:ON ACTION controlp INFIELD pmcp015 name="construct.c.page1.pmcp015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp013
            #add-point:BEFORE FIELD pmcp013 name="construct.b.page1.pmcp013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp013
            
            #add-point:AFTER FIELD pmcp013 name="construct.a.page1.pmcp013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp013
            #add-point:ON ACTION controlp INFIELD pmcp013 name="construct.c.page1.pmcp013"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.pmcp012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp012
            #add-point:ON ACTION controlp INFIELD pmcp012 name="construct.c.page1.pmcp012"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp012  #顯示到畫面上

            NEXT FIELD pmcp012                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp012
            #add-point:BEFORE FIELD pmcp012 name="construct.b.page1.pmcp012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp012
            
            #add-point:AFTER FIELD pmcp012 name="construct.a.page1.pmcp012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp007
            #add-point:BEFORE FIELD pmcp007 name="construct.b.page1.pmcp007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp007
            
            #add-point:AFTER FIELD pmcp007 name="construct.a.page1.pmcp007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp007
            #add-point:ON ACTION controlp INFIELD pmcp007 name="construct.c.page1.pmcp007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.pmcp008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp008
            #add-point:ON ACTION controlp INFIELD pmcp008 name="construct.c.page1.pmcp008"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = '274'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmcp008  #顯示到畫面上

            NEXT FIELD pmcp008                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp008
            #add-point:BEFORE FIELD pmcp008 name="construct.b.page1.pmcp008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp008
            
            #add-point:AFTER FIELD pmcp008 name="construct.a.page1.pmcp008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp014
            #add-point:BEFORE FIELD pmcp014 name="construct.b.page1.pmcp014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp014
            
            #add-point:AFTER FIELD pmcp014 name="construct.a.page1.pmcp014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcp014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp014
            #add-point:ON ACTION controlp INFIELD pmcp014 name="construct.c.page1.pmcp014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcpunit
            #add-point:BEFORE FIELD pmcpunit name="construct.b.page1.pmcpunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcpunit
            
            #add-point:AFTER FIELD pmcpunit name="construct.a.page1.pmcpunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.pmcpunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcpunit
            #add-point:ON ACTION controlp INFIELD pmcpunit name="construct.c.page1.pmcpunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         #161214-00004#4 by sunxh 161214(S)
         LET g_pmcp_d[1].pmcpseq = ""
          DISPLAY ARRAY g_pmcp_d TO s_detail1.*
            BEFORE DISPLAY
               EXIT DISPLAY
         END DISPLAY
         #161214-00004#4 by sunxh 161214(E)
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "pmco_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "pmcp_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION apmt832_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pmcosite,pmcodocno,pmcodocdt,pmco003,pmco004,pmco001,pmco002,pmco005, 
          pmcounit
                          FROM s_browse[1].b_pmcosite,s_browse[1].b_pmcodocno,s_browse[1].b_pmcodocdt, 
                              s_browse[1].b_pmco003,s_browse[1].b_pmco004,s_browse[1].b_pmco001,s_browse[1].b_pmco002, 
                              s_browse[1].b_pmco005,s_browse[1].b_pmcounit
 
         BEFORE CONSTRUCT
               DISPLAY apmt832_filter_parser('pmcosite') TO s_browse[1].b_pmcosite
            DISPLAY apmt832_filter_parser('pmcodocno') TO s_browse[1].b_pmcodocno
            DISPLAY apmt832_filter_parser('pmcodocdt') TO s_browse[1].b_pmcodocdt
            DISPLAY apmt832_filter_parser('pmco003') TO s_browse[1].b_pmco003
            DISPLAY apmt832_filter_parser('pmco004') TO s_browse[1].b_pmco004
            DISPLAY apmt832_filter_parser('pmco001') TO s_browse[1].b_pmco001
            DISPLAY apmt832_filter_parser('pmco002') TO s_browse[1].b_pmco002
            DISPLAY apmt832_filter_parser('pmco005') TO s_browse[1].b_pmco005
            DISPLAY apmt832_filter_parser('pmcounit') TO s_browse[1].b_pmcounit
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         #161006-00008#11 by sakura add(S)
         ON ACTION controlp INFIELD b_pmcosite
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmcosite',g_site,'c')
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO b_pmcosite
            NEXT FIELD b_pmcosite         
         #161006-00008#11 by sakura add(E)
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL apmt832_filter_show('pmcosite')
   CALL apmt832_filter_show('pmcodocno')
   CALL apmt832_filter_show('pmcodocdt')
   CALL apmt832_filter_show('pmco003')
   CALL apmt832_filter_show('pmco004')
   CALL apmt832_filter_show('pmco001')
   CALL apmt832_filter_show('pmco002')
   CALL apmt832_filter_show('pmco005')
   CALL apmt832_filter_show('pmcounit')
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION apmt832_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION apmt832_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = apmt832_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION apmt832_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_pmcp_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL apmt832_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL apmt832_browser_fill("")
      CALL apmt832_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL apmt832_filter_show('pmcosite')
   CALL apmt832_filter_show('pmcodocno')
   CALL apmt832_filter_show('pmcodocdt')
   CALL apmt832_filter_show('pmco003')
   CALL apmt832_filter_show('pmco004')
   CALL apmt832_filter_show('pmco001')
   CALL apmt832_filter_show('pmco002')
   CALL apmt832_filter_show('pmco005')
   CALL apmt832_filter_show('pmcounit')
   CALL apmt832_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL apmt832_fetch("F") 
      #顯示單身筆數
      CALL apmt832_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION apmt832_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_pmco_m.pmcodocno = g_browser[g_current_idx].b_pmcodocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE apmt832_master_referesh USING g_pmco_m.pmcodocno INTO g_pmco_m.pmcosite,g_pmco_m.pmcodocdt, 
       g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002, 
       g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt, 
       g_pmco_m.pmcosite_desc,g_pmco_m.pmco001_desc,g_pmco_m.pmco002_desc,g_pmco_m.pmcoownid_desc,g_pmco_m.pmcoowndp_desc, 
       g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcocnfid_desc 
 
   
   #遮罩相關處理
   LET g_pmco_m_mask_o.* =  g_pmco_m.*
   CALL apmt832_pmco_t_mask()
   LET g_pmco_m_mask_n.* =  g_pmco_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt832_set_act_visible()   
   CALL apmt832_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   IF g_pmco_m.pmcostus = 'Y' OR g_pmco_m.pmcostus  = 'X' THEN
      CALL cl_set_act_visible("modify,modify_detail,delete", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,modify_detail,delete", TRUE)
   END IF
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_pmco_m_t.* = g_pmco_m.*
   LET g_pmco_m_o.* = g_pmco_m.*
   
   LET g_data_owner = g_pmco_m.pmcoownid      
   LET g_data_dept  = g_pmco_m.pmcoowndp
   
   #重新顯示   
   CALL apmt832_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.insert" >}
#+ 資料新增
PRIVATE FUNCTION apmt832_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_insert      LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_pmcp_d.clear()   
 
 
   INITIALIZE g_pmco_m.* TO NULL             #DEFAULT 設定
   
   LET g_pmcodocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_pmco_m.pmcoownid = g_user
      LET g_pmco_m.pmcoowndp = g_dept
      LET g_pmco_m.pmcocrtid = g_user
      LET g_pmco_m.pmcocrtdp = g_dept 
      LET g_pmco_m.pmcocrtdt = cl_get_current()
      LET g_pmco_m.pmcomodid = g_user
      LET g_pmco_m.pmcomoddt = cl_get_current()
      LET g_pmco_m.pmcostus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
#      LET g_pmco_m.pmcosite = g_site
      LET g_site_flag = FALSE
      CALL s_aooi500_default(g_prog,'pmcosite',g_pmco_m.pmcosite)
         RETURNING l_insert,g_pmco_m.pmcosite
      IF NOT l_insert THEN
         RETURN
      END IF
      LET g_pmco_m.pmcounit = g_site
      LET g_pmco_m.pmcodocdt = g_today
      LET g_pmco_m.pmco003 = g_today
      LET g_pmco_m.pmco001 = g_user
      LET g_pmco_m.pmco002 = g_dept
      LET g_pmco_m.pmcostus = 'N'
      CALL s_arti200_get_def_doc_type(g_site,g_prog,'1') RETURNING l_success,g_pmco_m.pmcodocno
      CALL apmt832_pmcosite_ref()
      CALL apmt832_pmco001_ref() 
      CALL apmt832_pmco002_ref() 
      LET g_pmco_m_t.* = g_pmco_m.*
      LET g_flag = FALSE
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_pmco_m_t.* = g_pmco_m.*
      LET g_pmco_m_o.* = g_pmco_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_pmco_m.pmcostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL apmt832_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_pmco_m.* TO NULL
         INITIALIZE g_pmcp_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL apmt832_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_pmcp_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt832_set_act_visible()   
   CALL apmt832_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmcoent = " ||g_enterprise|| " AND",
                      " pmcodocno = '", g_pmco_m.pmcodocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmt832_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE apmt832_cl
   
   CALL apmt832_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE apmt832_master_referesh USING g_pmco_m.pmcodocno INTO g_pmco_m.pmcosite,g_pmco_m.pmcodocdt, 
       g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002, 
       g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt, 
       g_pmco_m.pmcosite_desc,g_pmco_m.pmco001_desc,g_pmco_m.pmco002_desc,g_pmco_m.pmcoownid_desc,g_pmco_m.pmcoowndp_desc, 
       g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcocnfid_desc 
 
   
   
   #遮罩相關處理
   LET g_pmco_m_mask_o.* =  g_pmco_m.*
   CALL apmt832_pmco_t_mask()
   LET g_pmco_m_mask_n.* =  g_pmco_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcosite_desc,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcodocno_desc, 
       g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco001_desc,g_pmco_m.pmco002, 
       g_pmco_m.pmco002_desc,g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoownid_desc, 
       g_pmco_m.pmcoowndp,g_pmco_m.pmcoowndp_desc,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcomoddt, 
       g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfid_desc,g_pmco_m.pmcocnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_pmco_m.pmcoownid      
   LET g_data_dept  = g_pmco_m.pmcoowndp
   
   #功能已完成,通報訊息中心
   CALL apmt832_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.modify" >}
#+ 資料修改
PRIVATE FUNCTION apmt832_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_pmco_m_t.* = g_pmco_m.*
   LET g_pmco_m_o.* = g_pmco_m.*
   
   IF g_pmco_m.pmcodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
   CALL s_transaction_begin()
   
   OPEN apmt832_cl USING g_enterprise,g_pmco_m.pmcodocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmt832_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE apmt832_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt832_master_referesh USING g_pmco_m.pmcodocno INTO g_pmco_m.pmcosite,g_pmco_m.pmcodocdt, 
       g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002, 
       g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt, 
       g_pmco_m.pmcosite_desc,g_pmco_m.pmco001_desc,g_pmco_m.pmco002_desc,g_pmco_m.pmcoownid_desc,g_pmco_m.pmcoowndp_desc, 
       g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcocnfid_desc 
 
   
   #檢查是否允許此動作
   IF NOT apmt832_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmco_m_mask_o.* =  g_pmco_m.*
   CALL apmt832_pmco_t_mask()
   LET g_pmco_m_mask_n.* =  g_pmco_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL apmt832_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_pmco_m.pmcomodid = g_user 
LET g_pmco_m.pmcomoddt = cl_get_current()
LET g_pmco_m.pmcomodid_desc = cl_get_username(g_pmco_m.pmcomodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_pmco_m.pmcostus MATCHES "[DR]" THEN
         LET g_pmco_m.pmcostus = "N"
      END IF
      
      #150707-00026 s983961 add 已拒绝的资料 修改后没有及时更改状态图标 (s)
      IF g_pmco_m.pmcostus = "N" THEN
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      END IF
      #150707-00026 s983961 add 已拒绝的资料 修改后没有及时更改状态图标 (e)
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL apmt832_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE pmco_t SET (pmcomodid,pmcomoddt) = (g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt)
          WHERE pmcoent = g_enterprise AND pmcodocno = g_pmcodocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_pmco_m.* = g_pmco_m_t.*
            CALL apmt832_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_pmco_m.pmcodocno != g_pmco_m_t.pmcodocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE pmcp_t SET pmcpdocno = g_pmco_m.pmcodocno
 
          WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m_t.pmcodocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "pmcp_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmcp_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt832_set_act_visible()   
   CALL apmt832_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " pmcoent = " ||g_enterprise|| " AND",
                      " pmcodocno = '", g_pmco_m.pmcodocno, "' "
 
   #填到對應位置
   CALL apmt832_browser_fill("")
 
   CLOSE apmt832_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmt832_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="apmt832.input" >}
#+ 資料輸入
PRIVATE FUNCTION apmt832_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE   l_flag         LIKE type_t.num5
   DEFINE   l_str          STRING
   DEFINE   l_pmcp001      LIKE pmcp_t.pmcp001
   DEFINE l_success        LIKE type_t.num5
   DEFINE l_rate           LIKE inaj_t.inaj014
   DEFINE l_pmcp005        LIKE pmcp_t.pmcp005
   DEFINE t_pmcp011        LIKE pmcp_t.pmcp011
   DEFINE t_pmcp005        LIKE pmcp_t.pmcp005
   
   DEFINE l_pmcp004        LIKE pmcp_t.pmcp004  #ken
   DEFINE l_pmcp011        LIKE pmcp_t.pmcp011  #ken
   DEFINE l_errno          LIKE type_t.chr10
   DEFINE r_success        LIKE type_t.num5
   #160921-00037#2 20160922 add by beckxie---S
   DEFINE l_imaa005        LIKE imaa_t.imaa005   
   DEFINE l_inam           DYNAMIC ARRAY OF RECORD   #記錄產品特徵
          inam001          LIKE inam_t.inam001,
          inam002          LIKE inam_t.inam002,
          inam004          LIKE inam_t.inam004
                           END RECORD
   DEFINE l_pmcp RECORD  #鋪貨單明細檔
          pmcpent          LIKE pmcp_t.pmcpent, #企業編號
          pmcpsite         LIKE pmcp_t.pmcpsite, #營運據點
          pmcpunit         LIKE pmcp_t.pmcpunit, #應用組織
          pmcpdocno        LIKE pmcp_t.pmcpdocno, #鋪貨單號
          pmcpseq          LIKE pmcp_t.pmcpseq, #項次
          pmcp001          LIKE pmcp_t.pmcp001, #商品編號
          pmcp002          LIKE pmcp_t.pmcp002, #商品條碼
          pmcp003          LIKE pmcp_t.pmcp003, #產品特徵
          pmcp004          LIKE pmcp_t.pmcp004, #鋪貨數量
          pmcp005          LIKE pmcp_t.pmcp005, #鋪貨單位
          pmcp006          LIKE pmcp_t.pmcp006, #鋪貨庫位
          pmcp007          LIKE pmcp_t.pmcp007, #需求日期
          pmcp008          LIKE pmcp_t.pmcp008, #需求時段
          pmcp009          LIKE pmcp_t.pmcp009, #包裝單位
          pmcp010          LIKE pmcp_t.pmcp010, #件裝數
          pmcp011          LIKE pmcp_t.pmcp011, #鋪貨件數
          pmcp012          LIKE pmcp_t.pmcp012, #供應商編號
          pmcp013          LIKE pmcp_t.pmcp013, #採購類型
          pmcp014          LIKE pmcp_t.pmcp014, #備註
          pmcp015          LIKE pmcp_t.pmcp015, #预计销货价格 #161129-00067#1 add pmcp015 by 08172
          pmcp016          LIKE pmcp_t.pmcp016  #库位 #add by geza 20170119 #170116-00018#2
   END RECORD
   #160921-00037#2 20160922 add by beckxie---E
#   DEFINE l_i  LIKE type_t.num5 #161129-00027#9 add by sunxh
   DEFINE l_rtdx029  LIKE rtdx_t.rtdx029 #161129-00027#9 add by sunxh
   DEFINE  l_sql1          STRING     #160711-00040#24 add
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcosite_desc,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcodocno_desc, 
       g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco001_desc,g_pmco_m.pmco002, 
       g_pmco_m.pmco002_desc,g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoownid_desc, 
       g_pmco_m.pmcoowndp,g_pmco_m.pmcoowndp_desc,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcomoddt, 
       g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfid_desc,g_pmco_m.pmcocnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT pmcpseq,pmcpsite,pmcp006,pmcp002,pmcp001,pmcp003,pmcp016,pmcp009,pmcp010, 
       pmcp011,pmcp004,pmcp005,pmcp015,pmcp013,pmcp012,pmcp007,pmcp008,pmcp014,pmcpunit FROM pmcp_t  
       WHERE pmcpent=? AND pmcpdocno=? AND pmcpseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE apmt832_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL apmt832_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL apmt832_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003, 
       g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002,g_pmco_m.pmco005,g_pmco_m.pmcostus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   LET g_ooef004 = ''
   LET g_ooef005 = ''
   SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00007'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
   IF cl_null(g_ooef005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00008'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="apmt832.input.head" >}
      #單頭段
      INPUT BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003, 
          g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002,g_pmco_m.pmco005,g_pmco_m.pmcostus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN apmt832_cl USING g_enterprise,g_pmco_m.pmcodocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmt832_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE apmt832_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL apmt832_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL apmt832_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcosite
            
            #add-point:AFTER FIELD pmcosite name="input.a.pmcosite"
            IF NOT cl_null(g_pmco_m.pmcosite) THEN
#               CALL  apmt832_pmcosite_ref()
               CALL s_aooi500_chk(g_prog,'pmcosite',g_pmco_m.pmcosite,g_pmco_m.pmcosite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_pmco_m.pmcosite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_pmco_m.pmcosite = g_pmco_m_t.pmcosite
                  CALL s_desc_get_department_desc(g_pmco_m.pmcosite) RETURNING g_pmco_m.pmcosite_desc
                  DISPLAY BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcosite_desc
                  NEXT FIELD CURRENT
               END IF

               LET g_site_flag = TRUE
               CALL apmt832_set_entry(p_cmd)
               CALL apmt832_set_no_entry(p_cmd)
            END IF
            CALL  apmt832_pmcosite_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcosite
            #add-point:BEFORE FIELD pmcosite name="input.b.pmcosite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcosite
            #add-point:ON CHANGE pmcosite name="input.g.pmcosite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcodocdt
            #add-point:BEFORE FIELD pmcodocdt name="input.b.pmcodocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcodocdt
            
            #add-point:AFTER FIELD pmcodocdt name="input.a.pmcodocdt"
            IF cl_null(g_pmco_m.pmcodocdt) THEN  
               NEXT FIELD pmcodocdt
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcodocdt
            #add-point:ON CHANGE pmcodocdt name="input.g.pmcodocdt"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcodocno
            
            #add-point:AFTER FIELD pmcodocno name="input.a.pmcodocno"
            #此段落由子樣板a05產生
            CALL apmt832_get_oobal004()        
            IF  NOT cl_null(g_pmco_m.pmcodocno) THEN 
               IF  NOT cl_null(g_pmco_m.pmcodocno) THEN 
                 IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pmco_m.pmcodocno != g_pmcodocno_t )) THEN 
                   IF NOT ap_chk_notDup("","SELECT COUNT(1) FROM pmco_t WHERE "||"pmcoent = '" ||g_enterprise|| "' AND "||"pmcodocno = '"||g_pmco_m.pmcodocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                   END IF
                 END IF
               END IF
               
               IF NOT s_aooi200_chk_slip(g_site,'',g_pmco_m.pmcodocno,g_prog) AND p_cmd = 'a' THEN
                  LET g_pmco_m.pmcodocno =  g_pmco_m_t.pmcodocno
                  CALL apmt832_get_oobal004()
                  DISPLAY BY NAME g_pmco_m.pmcodocno_desc
                  NEXT FIELD CURRENT
               END IF
               #161015-00003#1 by 08172
#               CALL s_aooi200_gen_docno(g_site,g_pmco_m.pmcodocno,g_pmco_m.pmcodocdt,g_prog) RETURNING l_flag,g_pmco_m.pmcodocno
#               IF NOT l_flag THEN
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = 'apm-00003'
#                  LET g_errparam.extend = g_pmco_m.pmcodocno
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#
#                  LET g_pmco_m.pmcodocno = g_pmco_m.pmcodocno
#                  DISPLAY g_pmco_m.pmcodocno TO pmcodocno
#                  NEXT FIELD CURRENT           
#               END IF
               #161015-00003#1 by 08172
               LET g_flag = TRUE 
            END IF
               #成功自动编号，关闭单据编号，日期栏位
            CALL apmt832_set_entry(p_cmd)
            CALL apmt832_set_no_entry(p_cmd)    

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcodocno
            #add-point:BEFORE FIELD pmcodocno name="input.b.pmcodocno"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcodocno
            #add-point:ON CHANGE pmcodocno name="input.g.pmcodocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcounit
            #add-point:BEFORE FIELD pmcounit name="input.b.pmcounit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcounit
            
            #add-point:AFTER FIELD pmcounit name="input.a.pmcounit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcounit
            #add-point:ON CHANGE pmcounit name="input.g.pmcounit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco003
            #add-point:BEFORE FIELD pmco003 name="input.b.pmco003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco003
            
            #add-point:AFTER FIELD pmco003 name="input.a.pmco003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmco003
            #add-point:ON CHANGE pmco003 name="input.g.pmco003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco004
            #add-point:BEFORE FIELD pmco004 name="input.b.pmco004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco004
            
            #add-point:AFTER FIELD pmco004 name="input.a.pmco004"
            IF NOT cl_null(g_pmco_m.pmco004) THEN
               IF NOT apmt832_pmco004_chk() THEN
                  LET g_pmco_m.pmco004 = g_pmco_m_t.pmco004
                  NEXT FIELD pmco004
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmco004
            #add-point:ON CHANGE pmco004 name="input.g.pmco004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco001
            
            #add-point:AFTER FIELD pmco001 name="input.a.pmco001"
            IF NOT cl_null(g_pmco_m.pmco001) THEN 
#此段落由子樣板a19產生
               LET g_pmco_m.pmco001_desc = ''
               DISPLAY BY NAME g_pmco_m.pmco001_desc   
               
              #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmco_m.pmco001

               #160318-00025#21  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
               #160318-00025#21  by 07900 --add-end  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  CALL apmt832_pmco001_ref()
               ELSE
                  LET g_pmco_m.pmco001 = g_pmco_m_t.pmco001
                  CALL apmt832_pmco001_ref()
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
              
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco001
            #add-point:BEFORE FIELD pmco001 name="input.b.pmco001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmco001
            #add-point:ON CHANGE pmco001 name="input.g.pmco001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco002
            
            #add-point:AFTER FIELD pmco002 name="input.a.pmco002"
            IF NOT cl_null(g_pmco_m.pmco002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmco_m.pmco002
               LET g_chkparam.arg2 = g_pmco_m.pmcodocdt

               #160318-00025#21  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#21  by 07900 --add-end   
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooeg001") THEN
                  LET g_pmco_m.pmco002 = g_pmco_m_t.pmco002
                  CALL apmt832_pmco002_ref()
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF 
            CALL apmt832_pmco002_ref()
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco002
            #add-point:BEFORE FIELD pmco002 name="input.b.pmco002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmco002
            #add-point:ON CHANGE pmco002 name="input.g.pmco002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmco005
            #add-point:BEFORE FIELD pmco005 name="input.b.pmco005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmco005
            
            #add-point:AFTER FIELD pmco005 name="input.a.pmco005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmco005
            #add-point:ON CHANGE pmco005 name="input.g.pmco005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcostus
            #add-point:BEFORE FIELD pmcostus name="input.b.pmcostus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcostus
            
            #add-point:AFTER FIELD pmcostus name="input.a.pmcostus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcostus
            #add-point:ON CHANGE pmcostus name="input.g.pmcostus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.pmcosite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcosite
            #add-point:ON ACTION controlp INFIELD pmcosite name="input.c.pmcosite"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmco_m.pmcosite             #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_pmco_m.pmcosite #
#            LET g_qryparam.arg2 = '8' #
#
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmcosite',g_pmco_m.pmcosite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()

            LET g_pmco_m.pmcosite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmco_m.pmcosite TO pmcosite              #顯示到畫面上
            CALL apmt832_pmcosite_ref()
            NEXT FIELD pmcosite     
            #END add-point
 
 
         #Ctrlp:input.c.pmcodocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcodocdt
            #add-point:ON ACTION controlp INFIELD pmcodocdt name="input.c.pmcodocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.pmcodocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcodocno
            #add-point:ON ACTION controlp INFIELD pmcodocno name="input.c.pmcodocno"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmco_m.pmcodocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #
            #LET g_qryparam.arg2 = "apmt832" #   #160705-00042#4 160711 by sakura mark
            LET g_qryparam.arg2 = g_prog         #160705-00042#4 160711 by sakura add
            #160711-00040#24 add(s)
            CALL s_control_get_docno_sql(g_user,g_dept)
                RETURNING l_success,l_sql1
            IF NOT cl_null(l_sql1) THEN
               LET g_qryparam.where = l_sql1
            END IF
            #160711-00040#24 add(e)
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_pmco_m.pmcodocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmco_m.pmcodocno TO pmcodocno              #顯示到畫面上

            NEXT FIELD pmcodocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.pmcounit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcounit
            #add-point:ON ACTION controlp INFIELD pmcounit name="input.c.pmcounit"
            
            #END add-point
 
 
         #Ctrlp:input.c.pmco003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco003
            #add-point:ON ACTION controlp INFIELD pmco003 name="input.c.pmco003"
            
            #END add-point
 
 
         #Ctrlp:input.c.pmco004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco004
            #add-point:ON ACTION controlp INFIELD pmco004 name="input.c.pmco004"
            
            #END add-point
 
 
         #Ctrlp:input.c.pmco001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco001
            #add-point:ON ACTION controlp INFIELD pmco001 name="input.c.pmco001"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmco_m.pmco001             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_pmco_m.pmco001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmco_m.pmco001 TO pmco001              #顯示到畫面上
            CALL apmt832_pmco001_ref()
            NEXT FIELD pmco001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.pmco002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco002
            #add-point:ON ACTION controlp INFIELD pmco002 name="input.c.pmco002"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmco_m.pmco002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_pmco_m.pmcodocdt

            CALL q_ooeg001()                                #呼叫開窗

            LET g_pmco_m.pmco002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmco_m.pmco002 TO pmco002              #顯示到畫面上
            CALL apmt832_pmco002_ref()
            NEXT FIELD pmco002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.pmco005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmco005
            #add-point:ON ACTION controlp INFIELD pmco005 name="input.c.pmco005"
            
            #END add-point
 
 
         #Ctrlp:input.c.pmcostus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcostus
            #add-point:ON ACTION controlp INFIELD pmcostus name="input.c.pmcostus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_pmco_m.pmcodocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               #161015-00003#1 -s by 08172
               IF NOT cl_null(g_pmco_m.pmcodocno) THEN
                  CALL s_aooi200_gen_docno(g_site,g_pmco_m.pmcodocno,g_pmco_m.pmcodocdt,g_prog) RETURNING l_flag,g_pmco_m.pmcodocno
                  IF NOT l_flag THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'apm-00003'
                     LET g_errparam.extend = g_pmco_m.pmcodocno
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                  
                     NEXT FIELD pmcodocno 
                  ELSE
                     IF NOT ap_chk_notDup("","SELECT COUNT(1) FROM pmco_t WHERE "||"pmcoent = '" ||g_enterprise|| "' AND "||"pmcodocno = '"||g_pmco_m.pmcodocno ||"'",'std-00004',0) THEN 
                        LET g_pmco_m.pmcodocno = g_pmco_m_t.pmcodocno
                        NEXT FIELD pmcodocno
                     END IF                  
                  END IF
                  LET g_pmco_m_t.pmcodocno = g_pmco_m.pmcodocno
               END IF
               #161015-00003#1 -e by 08172
               #end add-point
               
               INSERT INTO pmco_t (pmcoent,pmcosite,pmcodocdt,pmcodocno,pmcounit,pmco003,pmco004,pmco001, 
                   pmco002,pmco005,pmcostus,pmcoownid,pmcoowndp,pmcocrtid,pmcocrtdp,pmcocrtdt,pmcomodid, 
                   pmcomoddt,pmcocnfid,pmcocnfdt)
               VALUES (g_enterprise,g_pmco_m.pmcosite,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcounit, 
                   g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002,g_pmco_m.pmco005, 
                   g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
                   g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt)  
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_pmco_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               IF l_cmd_t <> 'r' AND p_cmd = 'a' THEN
                  CALL apmt832_s01(g_pmco_m.pmcodocno)
               END IF
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL apmt832_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL apmt832_b_fill()
                  CALL apmt832_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL apmt832_pmco_t_mask_restore('restore_mask_o')
               
               UPDATE pmco_t SET (pmcosite,pmcodocdt,pmcodocno,pmcounit,pmco003,pmco004,pmco001,pmco002, 
                   pmco005,pmcostus,pmcoownid,pmcoowndp,pmcocrtid,pmcocrtdp,pmcocrtdt,pmcomodid,pmcomoddt, 
                   pmcocnfid,pmcocnfdt) = (g_pmco_m.pmcosite,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcounit, 
                   g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002,g_pmco_m.pmco005, 
                   g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
                   g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt) 
 
                WHERE pmcoent = g_enterprise AND pmcodocno = g_pmcodocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "pmco_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL apmt832_pmco_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_pmco_m_t)
               LET g_log2 = util.JSON.stringify(g_pmco_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="apmt832.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_pmcp_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_pmcp_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL apmt832_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_pmcp_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN apmt832_cl USING g_enterprise,g_pmco_m.pmcodocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN apmt832_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE apmt832_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_pmcp_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_pmcp_d[l_ac].pmcpseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_pmcp_d_t.* = g_pmcp_d[l_ac].*  #BACKUP
               LET g_pmcp_d_o.* = g_pmcp_d[l_ac].*  #BACKUP
               CALL apmt832_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL apmt832_set_no_entry_b(l_cmd)
               IF NOT apmt832_lock_b("pmcp_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apmt832_bcl INTO g_pmcp_d[l_ac].pmcpseq,g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp006, 
                      g_pmcp_d[l_ac].pmcp002,g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcp016, 
                      g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp010,g_pmcp_d[l_ac].pmcp011,g_pmcp_d[l_ac].pmcp004, 
                      g_pmcp_d[l_ac].pmcp005,g_pmcp_d[l_ac].pmcp015,g_pmcp_d[l_ac].pmcp013,g_pmcp_d[l_ac].pmcp012, 
                      g_pmcp_d[l_ac].pmcp007,g_pmcp_d[l_ac].pmcp008,g_pmcp_d[l_ac].pmcp014,g_pmcp_d[l_ac].pmcpunit 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_pmcp_d_t.pmcpseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_pmcp_d_mask_o[l_ac].* =  g_pmcp_d[l_ac].*
                  CALL apmt832_pmcp_t_mask()
                  LET g_pmcp_d_mask_n[l_ac].* =  g_pmcp_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL apmt832_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
             LET t_pmcp011 = g_pmcp_d[l_ac].pmcp011
             LET t_pmcp005 = g_pmcp_d[l_ac].pmcp005
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pmcp_d[l_ac].* TO NULL 
            INITIALIZE g_pmcp_d_t.* TO NULL 
            INITIALIZE g_pmcp_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            #add by geza 20161110 #161110-00008#2(S)
            SELECT NVL(MAX(pmcpseq)+1,1) INTO g_pmcp_d[l_ac].pmcpseq FROM pmcp_t
             WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m.pmcodocno
            IF g_pmcp_d[l_ac].pmcpseq > 1 THEN 
               #apmt832铺货单单身录入时 铺货组织和需求日期默认取上一笔
               SELECT pmcpsite,pmcp007 INTO g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp007
                 FROM pmcp_t
                WHERE pmcpent = g_enterprise
                  AND pmcpdocno = g_pmco_m.pmcodocno
                  AND pmcpseq = g_pmcp_d[l_ac].pmcpseq -1 
            END IF
            
            LET g_pmcp_d[l_ac].pmcpunit = g_pmco_m.pmcounit 
            CALL apmt832_pmcpsite_ref()
            #add geza 20161110 #161110-00008#2(S)
            #end add-point
            LET g_pmcp_d_t.* = g_pmcp_d[l_ac].*     #新輸入資料
            LET g_pmcp_d_o.* = g_pmcp_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apmt832_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL apmt832_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_pmcp_d[li_reproduce_target].* = g_pmcp_d[li_reproduce].*
 
               LET g_pmcp_d[li_reproduce_target].pmcpseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            #mark by geza 20161110 #161110-00008#2(S)
#            SELECT NVL(MAX(pmcpseq)+1,1) INTO g_pmcp_d[l_ac].pmcpseq FROM pmcp_t
#             WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m.pmcodocno
#             
#            LET g_pmcp_d[l_ac].pmcpsite = g_pmco_m.pmcosite 
#            LET g_pmcp_d[l_ac].pmcpunit = g_pmco_m.pmcounit 
#            CALL apmt832_pmcpsite_ref()
            #mark by geza 20161110 #161110-00008#2(S)
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM pmcp_t 
             WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m.pmcodocno
 
               AND pmcpseq = g_pmcp_d[l_ac].pmcpseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmco_m.pmcodocno
               LET gs_keys[2] = g_pmcp_d[g_detail_idx].pmcpseq
               CALL apmt832_insert_b('pmcp_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_pmcp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "pmcp_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apmt832_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               #160921-00037#2 20160923 add by beckxie---S
               IF l_inam.getLength() > 1 THEN  #因為第一筆資料已呈現在畫面並寫入DB, 從第二筆開始處理           
                  INITIALIZE l_pmcp TO NULL
                  
                  SELECT MAX(pmcpseq) INTO l_pmcp.pmcpseq
                    FROM pmcp_t
                   WHERE pmcpent   = g_enterprise
                     AND pmcpdocno = g_pmdl_m.pmdldocno                     
                  #取得l_inam[1]該筆單身的資料
                  SELECT pmcpent,pmcpsite,pmcpunit,pmcpdocno,pmcpseq,
                         pmcp001,pmcp002,pmcp003,pmcp004,pmcp005,
                         pmcp006,pmcp007,pmcp008,pmcp009,pmcp010,
                         pmcp011,pmcp012,pmcp013,pmcp014,pmcp015,  #161129-00067#1 add pmcp015 by 08172
                         pmcp016 #add by geza 20160119 170116-00018#2
                    INTO l_pmcp.pmcpent,l_pmcp.pmcpsite,l_pmcp.pmcpunit,l_pmcp.pmcpdocno,l_pmcp.pmcpseq,
                         l_pmcp.pmcp001, l_pmcp.pmcp002, l_pmcp.pmcp003,  l_pmcp.pmcp004,l_pmcp.pmcp005,
                         l_pmcp.pmcp006, l_pmcp.pmcp007, l_pmcp.pmcp008,  l_pmcp.pmcp009,l_pmcp.pmcp010,
                         l_pmcp.pmcp011, l_pmcp.pmcp012, l_pmcp.pmcp013,  l_pmcp.pmcp014,l_pmcp.pmcp015,  #161129-00067#1 add pmcp015 by 08172
                         l_pmcp.pmcp016 #add by geza 20160119 170116-00018#2
                    FROM pmcp_t
                   WHERE pmcpent = g_enterprise
                     AND pmcpdocno = g_pmco_m.pmcodocno
                     AND pmcpseq = g_pmcp_d[l_ac].pmcpseq
                     
                  CALL cl_err_collect_init()
                  FOR l_i = 2 TO l_inam.getLength() 
                     IF cl_null(l_pmcp.pmcpseq) OR l_pmcp.pmcpseq = 0 THEN
                        LET l_pmcp.pmcpseq = 1
                     ELSE
                        LET l_pmcp.pmcpseq = l_pmcp.pmcpseq + 1             
                     END IF 
                     
                     LET l_pmcp.pmcp003 = l_inam[l_i].inam002
                     LET l_pmcp.pmcp004 = l_inam[l_i].inam004
                     LET l_pmcp.pmcp011 = l_inam[l_i].inam004
                     
                     #161228-00033#3 by sakura mark(S)
                     ##161017-00029#2 16/10/18 by 08742 -S
                     #SELECT imay003 INTO  l_pmcp.pmcp002
                     #  FROM imay_t
                     # WHERE imayent = g_enterprise
                     #   AND imay019 = l_pmcp.pmcp003
                     #   AND imay001 = l_pmcp.pmcp001
                     #   AND ROWNUM = 1 
                     #IF sqlca.sqlcode = 100 THEN 
                     #   SELECT imay003 INTO  l_pmcp.pmcp002
                     #     FROM imay_t
                     #    WHERE imayent = g_enterprise
                     #      AND imay006 = 'Y'
                     #      AND imay001 = l_pmcp.pmcp001
                     #END IF                         
                     ##161017-00029#2 16/10/18 by 08742 -E
                     #161228-00033#3 by sakura mark(E)
                     
                     #161228-00033#3 by sakura add(S)
                     LET l_pmcp.pmcp002 = ''
                     LET g_sql = "SELECT imay003 ",
                                 "  FROM imay_t ",
                                 " WHERE imayent = ",g_enterprise,
                                 "   AND imay019 = '",l_pmcp.pmcp003,"'",
                                 "   AND imay001 = '",l_pmcp.pmcp001,"'"
                     PREPARE apmt832_sel_imay003_pre FROM g_sql
                     DECLARE apmt832_sel_imay003_cur SCROLL CURSOR FOR apmt832_sel_imay003_pre   
                     OPEN apmt832_sel_imay003_cur
                     FETCH FIRST apmt832_sel_imay003_cur INTO l_pmcp.pmcp002
                     CLOSE apmt832_sel_imay003_cur               
                     FREE  apmt832_sel_imay003_pre
                     
                     IF cl_null(l_pmcp.pmcp002) THEN
                        LET l_pmcp.pmcp002 = ''
                        SELECT imay003 INTO  l_pmcp.pmcp002
                          FROM imay_t
                         WHERE imayent = g_enterprise
                           AND imay006 = 'Y'
                           AND imay001 = l_pmcp.pmcp001                     
                     END IF
                     #161228-00033#3 by sakura add(E)
                     
                     INSERT INTO pmcp_t 
                           (pmcpent,pmcpsite,pmcpunit,pmcpdocno,pmcpseq,
                            pmcp001,pmcp002,pmcp003,pmcp004,pmcp005,
                            pmcp006,pmcp007,pmcp008,pmcp009,pmcp010,
                            pmcp011,pmcp012,pmcp013,pmcp014,pmcp015,pmcp016)  #161129-00067#1 add pmcp015 by 08172  #add by geza 20160119 170116-00018#2 pmcp016
                     VALUES(l_pmcp.pmcpent,l_pmcp.pmcpsite,l_pmcp.pmcpunit,l_pmcp.pmcpdocno,l_pmcp.pmcpseq,
                            l_pmcp.pmcp001, l_pmcp.pmcp002, l_pmcp.pmcp003,  l_pmcp.pmcp004,l_pmcp.pmcp005,
                            l_pmcp.pmcp006, l_pmcp.pmcp007, l_pmcp.pmcp008,  l_pmcp.pmcp009,l_pmcp.pmcp010,
                            l_pmcp.pmcp011, l_pmcp.pmcp012, l_pmcp.pmcp013,  l_pmcp.pmcp014,l_pmcp.pmcp015,l_pmcp.pmcp016) #161129-00067#1 add pmcp015 by 08172 #add by geza 20160119 170116-00018#2 pmcp016
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "pmdn_t"
                        LET g_errparam.popup = FALSE
                        CALL cl_err()
               
                     END IF
                     
                  END FOR
                  
                  CALL cl_err_collect_show() 
                  CALL apmt832_b_fill()
                  LET g_rec_b = l_inam.getLength() - 1
                  CALL l_inam.clear() #新增完清除
               END IF
               #160921-00037#2 20160923 add by beckxie---E
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_pmco_m.pmcodocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_pmcp_d_t.pmcpseq
 
            
               #刪除同層單身
               IF NOT apmt832_delete_b('pmcp_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmt832_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT apmt832_key_delete_b(gs_keys,'pmcp_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE apmt832_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE apmt832_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_pmcp_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_pmcp_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcpseq
            #add-point:BEFORE FIELD pmcpseq name="input.b.page1.pmcpseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcpseq
            
            #add-point:AFTER FIELD pmcpseq name="input.a.page1.pmcpseq"
            #此段落由子樣板a05產生
            IF  g_pmco_m.pmcodocno IS NOT NULL AND g_pmcp_d[g_detail_idx].pmcpseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pmco_m.pmcodocno != g_pmcodocno_t OR g_pmcp_d[g_detail_idx].pmcpseq != g_pmcp_d_t.pmcpseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(1) FROM pmcp_t WHERE "||"pmcpent = '" ||g_enterprise|| "' AND "||"pmcpdocno = '"||g_pmco_m.pmcodocno ||"' AND "|| "pmcpseq = '"||g_pmcp_d[g_detail_idx].pmcpseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcpseq
            #add-point:ON CHANGE pmcpseq name="input.g.page1.pmcpseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcpsite
            
            #add-point:AFTER FIELD pmcpsite name="input.a.page1.pmcpsite"
            IF NOT cl_null(g_pmcp_d[l_ac].pmcpsite) THEN
                INITIALIZE g_chkparam.* TO NULL
                LET g_errshow = '1'
                LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcpsite
                LET g_chkparam.arg2 = '8'
                LET g_chkparam.arg3 = g_pmco_m.pmcosite
#                IF NOT cl_chk_exist("v_ooed004") THEN
#                   LET g_pmcp_d[l_ac].pmcpsite = g_pmcp_d_t.pmcpsite
#                   CALL apmt832_pmcpsite_ref()
#                   NEXT FIELD CURRENT
#                END IF
                CALL s_aooi500_chk(g_prog,'pmcpsite',g_pmcp_d[l_ac].pmcpsite,g_pmco_m.pmcosite) RETURNING l_success,l_errno
                IF NOT l_success THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.extend = ''
                   LET g_errparam.code   = l_errno
                   LET g_errparam.popup  = TRUE
                   CALL cl_err()

                   LET g_pmcp_d[l_ac].pmcpsite = g_pmcp_d_t.pmcpsite
                  
                   CALL s_desc_get_department_desc(g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].pmcpsite_desc
                   DISPLAY BY NAME g_pmcp_d[l_ac].pmcpsite_desc
                   NEXT FIELD CURRENT
                END IF
         
                #庫位不為空時檢查
                IF NOT cl_null(g_pmcp_d[l_ac].pmcp006) THEN
                   INITIALIZE g_chkparam.* TO NULL
               
                   #設定g_chkparam.*的參數
                   LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcpsite
                   LET g_chkparam.arg2 = g_pmcp_d[l_ac].pmcp006
                      
                   #呼叫檢查存在並帶值的library
                   IF NOT cl_chk_exist("v_inaa001_1") THEN
                      LET g_pmcp_d[l_ac].pmcpsite = g_pmcp_d_t.pmcpsite
                      CALL apmt832_pmcpsite_ref()
                      NEXT FIELD CURRENT
                   END IF       
                END IF
                
                #商品條碼不為空檢查
                IF NOT cl_null(g_pmcp_d[l_ac].pmcp002) THEN
                   CALL apmt832_pmcp002_other()
                   IF NOT apmt832_pmcp001_chk() THEN
                      LET g_pmcp_d[l_ac].pmcpsite = g_pmcp_d_t.pmcpsite
                      CALL apmt832_pmcpsite_ref()
                      NEXT FIELD CURRENT
                   END IF
                END IF
                
                #商品不為空時檢查
                IF NOT cl_null(g_pmcp_d[l_ac].pmcp001) THEN
                   IF NOT apmt832_pmcp001_chk() THEN
                      LET g_pmcp_d[l_ac].pmcpsite = g_pmcp_d_t.pmcpsite
                      CALL apmt832_pmcpsite_ref()
                      NEXT FIELD CURRENT
                   END IF
                END IF
                #add by geza 20161031 #161027-00055#3(S)
                #庫位為空時檢查,单身铺货库位需要按门店编号(pmcpsite)预带(ooef123)，允许用户手动修改
                IF cl_null(g_pmcp_d[l_ac].pmcp006) THEN
                   SELECT ooef123 INTO g_pmcp_d[l_ac].pmcp006
                     FROM ooef_t
                    WHERE ooefent = g_enterprise
                      AND ooef001 = g_pmcp_d[l_ac].pmcpsite
                      AND ooefstus = 'Y'
                   CALL apmt832_pmcp006_ref()   
                END IF
                #add by geza 20161031 #161027-00055#3(E)
            END IF
            #add by geza 20161031 #161027-00055#3(S)
            IF g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN
               CALL apmt832_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp006,g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009
            ELSE
               LET g_pmcp_d[l_ac].l_inag009 = 0            
            END IF
            IF g_pmcp_d[l_ac].pmcpsite IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL  THEN
               SELECT rtdx029 INTO g_pmcp_d[l_ac].rtdx029
                 FROM rtdx_t 
                WHERE rtdxent = g_enterprise
                  AND rtdx001 = g_pmcp_d[l_ac].pmcp001
                  AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
                  AND rtdxstus = 'Y'
               SELECT ooefl003 INTO g_pmcp_d[l_ac].rtdx029_desc
                 FROM ooefl_t 
                WHERE ooeflent = g_enterprise
                  AND ooefl001 = g_pmcp_d[l_ac].rtdx029   
                  AND ooefl002 = g_lang          
            END IF 
            #mark by geza 20170116  #170116-00018#2(S)
#            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN                   
#               #CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003) RETURNING g_pmcp_d[l_ac].l_inag009_1 #mark by geza 20161209 161124-00039#1
#               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009_1 #add by geza 20161209 161124-00039#1
            #mark by geza 20170116  #170116-00018#2(E)
            #add by geza 20170116  #170116-00018#2(S)
            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL AND g_pmcp_d[l_ac].pmcp016 IS NOT NULL AND g_pmcp_d[l_ac].pmcp005 IS NOT NULL THEN                   
               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp016,g_pmcp_d[l_ac].pmcp005) RETURNING g_pmcp_d[l_ac].l_inag009_1 
            #add by geza 20170116  #170116-00018#2(E)
            ELSE
               #LET g_pmcp_d[l_ac].l_inag009_1 = 0  #mark by geza 20170116 #170116-00018#2
               LET g_pmcp_d[l_ac].l_inag009_1 =''   #add by geza 20170116 #170116-00018#2               
            END IF   
            #add by geza 20161031 #161027-00055#3(E)
            CALL apmt832_pmcpsite_ref()
            
            #add by geza 20161031 #170116-00018#2(S)
            IF cl_null(g_pmcp_d_o.pmcpsite) OR (g_pmcp_d_o.pmcpsite IS NOT NULL AND g_pmcp_d[l_ac].pmcpsite <> g_pmcp_d_o.pmcpsite )THEN
               CALL apmt832_get_inaa001(g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcpsite)         
                         RETURNING g_pmcp_d[l_ac].pmcp016
            END IF                        
            LET g_pmcp_d_o.pmcpsite = g_pmcp_d[l_ac].pmcpsite
            #add by geza 20161031 #170116-00018#2(E)           

            #150427-00012#5 150603 s983961---add(s)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcpsite
            #add-point:BEFORE FIELD pmcpsite name="input.b.page1.pmcpsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcpsite
            #add-point:ON CHANGE pmcpsite name="input.g.page1.pmcpsite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp006
            
            #add-point:AFTER FIELD pmcp006 name="input.a.page1.pmcp006"
           LET g_pmcp_d[l_ac].pmcp006_desc = '' 
           IF  NOT cl_null(g_pmcp_d[l_ac].pmcp006) THEN
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcpsite
               LET g_chkparam.arg2 = g_pmcp_d[l_ac].pmcp006
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_inaa001_1") THEN
                  LET g_pmcp_d[l_ac].pmcp006 = g_pmcp_d_t.pmcp006
                  CALL apmt832_pmcp006_ref()
                  NEXT FIELD CURRENT
               END IF      
           #161129-00027#9 add by sunxh 161230--str--
           ELSE
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'apm-08321'
              LET g_errparam.extend = ''
              LET g_errparam.popup = FALSE
              CALL cl_err()
           #161129-00027#9 add by sunxh 161230--str--           
           END IF
           CALL apmt832_pmcp006_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp006
            #add-point:BEFORE FIELD pmcp006 name="input.b.page1.pmcp006"
            IF cl_null(g_pmcp_d[l_ac].pmcpsite) THEN
               NEXT FIELD pmcpsite
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp006
            #add-point:ON CHANGE pmcp006 name="input.g.page1.pmcp006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp002
            #add-point:BEFORE FIELD pmcp002 name="input.b.page1.pmcp002"
            IF cl_null(g_pmcp_d[l_ac].pmcpsite) THEN
               NEXT FIELD pmcpsite
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp002
            
            #add-point:AFTER FIELD pmcp002 name="input.a.page1.pmcp002"
           LET g_c = TRUE
           IF NOT cl_null(g_pmcp_d[l_ac].pmcp002) THEN
               
               IF NOT apmt832_pmcp002_chk() THEN
                  LET g_pmcp_d[l_ac].pmcp002 = g_pmcp_d_t.pmcp002
                  NEXT FIELD pmcp002
               ELSE
                   IF cl_null(g_pmcp_d[l_ac].pmcp001) THEN  
                     SELECT  imay001 INTO  g_pmcp_d[l_ac].pmcp001 FROM imay_t
                      WHERE  imayent = g_enterprise AND imay003 =  g_pmcp_d[l_ac].pmcp002                 
                     IF NOT apmt832_pmcp001_chk() THEN
                        LET g_pmcp_d[l_ac].pmcp002 = g_pmcp_d_t.pmcp002
                        LET g_pmcp_d[l_ac].pmcp001= ''             
                        NEXT FIELD pmcp002 
                     END IF    
                   ELSE
                     SELECT  imay001 INTO  l_pmcp001 FROM imay_t
                      WHERE  imayent = g_enterprise AND imay003 =  g_pmcp_d[l_ac].pmcp002
                     IF l_pmcp001 <> g_pmcp_d[l_ac].pmcp001 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'art-00274'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET  g_pmcp_d[l_ac].pmcp002 =  g_pmcp_d_t.pmcp002
                        NEXT FIELD pmcp002 
                     END IF
                   END IF     
                   
               END IF
               CALL apmt832_pmcp002_other()
               #商品生命周期的判断  2015/03/19  geza
               #CALL s_life_cycle_chk(g_prog,g_pmco_m.pmcosite,'1',g_pmcp_d[l_ac].pmcp001) RETURNING r_success  #150616-00035#78-mark by dongsz
               IF NOT cl_null(g_pmcp_d[l_ac].pmcp001) THEN  #161015-00003#1 by 08172
                  CALL s_life_cycle_chk(g_prog,g_pmco_m.pmcosite,'1',g_pmcp_d[l_ac].pmcp001,'','') RETURNING r_success  #150616-00035#78-add by dongsz
                  IF r_success = FALSE THEN 
                     NEXT FIELD CURRENT
                  END IF 
               END IF   #161015-00003#1 by 08172     
               #161017-00029#2 16/10/18 by 08742 -S
               SELECT imay019 INTO  g_pmcp_d[l_ac].pmcp003
                 FROM imay_t
                WHERE imayent = g_enterprise
                  AND imay003 = g_pmcp_d[l_ac].pmcp002
               CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003)
                  RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc
               #161017-00029#2 16/10/18 by 08742 -E               
            END IF
            #add by geza 20161031 #161027-00055#3(S)
            IF g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN
               CALL apmt832_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp006,g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009
            ELSE
               LET g_pmcp_d[l_ac].l_inag009 = 0            
            END IF
            IF g_pmcp_d[l_ac].pmcpsite IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL  THEN
               SELECT rtdx029 INTO g_pmcp_d[l_ac].rtdx029
                 FROM rtdx_t 
                WHERE rtdxent = g_enterprise
                  AND rtdx001 = g_pmcp_d[l_ac].pmcp001
                  AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
                  AND rtdxstus = 'Y'
               SELECT ooefl003 INTO g_pmcp_d[l_ac].rtdx029_desc
                 FROM ooefl_t 
                WHERE ooeflent = g_enterprise
                  AND ooefl001 = g_pmcp_d[l_ac].rtdx029   
                  AND ooefl002 = g_lang          
            END IF 
            #mark by geza 20170116  #170116-00018#2(S)
#            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN                   
#               #CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003) RETURNING g_pmcp_d[l_ac].l_inag009_1 #mark by geza 20161209 161124-00039#1
#               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009_1 #add by geza 20161209 161124-00039#1
            #add by geza 20170116  #170116-00018#2(S)
            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL AND g_pmcp_d[l_ac].pmcp016 IS NOT NULL AND g_pmcp_d[l_ac].pmcp005 IS NOT NULL THEN                   
               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp016,g_pmcp_d[l_ac].pmcp005) RETURNING g_pmcp_d[l_ac].l_inag009_1 
            #add by geza 20170116  #170116-00018#2(E)
            ELSE
               #LET g_pmcp_d[l_ac].l_inag009_1 = 0   #mark by geza 20170116 #170116-00018#2
               LET g_pmcp_d[l_ac].l_inag009_1 =''   #add by geza 20170116 #170116-00018#2           
            END IF
            #add by geza 20161031 #161027-00055#3(E)
            
            #add by geza 20161031 #170116-00018#2(S)
            IF cl_null(g_pmcp_d_o.pmcp001) OR (g_pmcp_d_o.pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 <> g_pmcp_d_o.pmcp001 )THEN
               CALL apmt832_get_inaa001(g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcpsite)         
                         RETURNING g_pmcp_d[l_ac].pmcp016
            END IF                        
            LET g_pmcp_d_o.pmcp001 = g_pmcp_d[l_ac].pmcp001
            #add by geza 20161031 #170116-00018#2(E)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp002
            #add-point:ON CHANGE pmcp002 name="input.g.page1.pmcp002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp001
            
            #add-point:AFTER FIELD pmcp001 name="input.a.page1.pmcp001"
            LET g_pmcp_d[l_ac].pmcp001_desc = ''
            LET g_pmcp_d[l_ac].pmcp001_desc1 = ''
            LET g_pmcp_d[l_ac].pmcp009 = ''
            LET g_pmcp_d[l_ac].pmcp013 = ''
            LET g_pmcp_d[l_ac].pmcp012 = ''
            LET g_c = FALSE
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp001) THEN
               IF NOT apmt832_pmcp001_chk() THEN
                 #LET g_pmcp_d[l_ac].pmcp001 = g_pmcp_d_t.pmcp001   #160824-00007#19 20160919 mark by beckxie
                 LET g_pmcp_d[l_ac].pmcp001 = g_pmcp_d_o.pmcp001   #160824-00007#19 20160919 add by beckxie
                 CALL apmt832_pmcp001_ref()
                 NEXT FIELD pmcp001
              END IF
              #IF l_cmd = 'a' OR (l_cmd = 'u' AND g_pmcp_d[l_ac].pmcp001 <> g_pmcp_d_t.pmcp001) THEN   #160824-00007#19 20160919 mark by beckxie
              IF g_pmcp_d[l_ac].pmcp001 <> g_pmcp_d_o.pmcp001 OR cl_null(g_pmcp_d_o.pmcp001) THEN   #160824-00007#19 20160919 add by beckxie
                 CALL apmt832_pmcp001_init()
              END IF
            END IF
            CALL apmt832_pmcp001_ref()
            #161017-00029#2 16/10/20 by 08742 -S
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp003) THEN
            LET g_pmcp_d[l_ac].pmcp003 = ' '
               SELECT imay019 INTO  g_pmcp_d[l_ac].pmcp003
                 FROM imay_t
                WHERE imayent = g_enterprise
                  AND imay003 = g_pmcp_d[l_ac].pmcp002                      
               CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003)
                  RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc
            END IF 
            #161017-00029#2 16/10/20 by 08742 -E
            #商品生命周期的判断  2015/03/19  geza
            #CALL s_life_cycle_chk(g_prog,g_pmco_m.pmcosite,'1',g_pmcp_d[l_ac].pmcp001) RETURNING r_success  #150616-00035#78-mark by dongsz
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp001) THEN  #161015-00003#1 by 08172
               CALL s_life_cycle_chk(g_prog,g_pmco_m.pmcosite,'1',g_pmcp_d[l_ac].pmcp001,'','') RETURNING r_success  #150616-00035#78-add by dongsz            
               IF r_success = FALSE THEN 
                  LET g_pmcp_d[l_ac].pmcp001 = g_pmcp_d_o.pmcp001   #160824-00007#19 20160919 add by beckxie
                  LET g_pmcp_d[l_ac].pmcp002 = ''                   #160824-00007#19 20160919 add by beckxie
                  CALL apmt832_pmcp001_ref()                        #160824-00007#19 20160919 add by beckxie
                  NEXT FIELD CURRENT
               END IF 
            END IF   #161015-00003#1 by 08172
            
            #add by geza 20161031 #170116-00018#2(S)
            #带出库位
            IF cl_null(g_pmcp_d_o.pmcp001) OR (g_pmcp_d_o.pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 <> g_pmcp_d_o.pmcp001 )THEN
               CALL apmt832_get_inaa001(g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcpsite)         
                         RETURNING g_pmcp_d[l_ac].pmcp016
            END IF                        
            #add by geza 20161031 #170116-00018#2(E) 
            
            LET g_pmcp_d_o.pmcp001 = g_pmcp_d[l_ac].pmcp001   #160824-00007#19 20160919 add by beckxie
            #add by geza 20161031 #161027-00055#3(S)
            IF g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN
               CALL apmt832_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp006,g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009
            ELSE
               LET g_pmcp_d[l_ac].l_inag009 = 0            
            END IF
            IF g_pmcp_d[l_ac].pmcpsite IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL  THEN
               SELECT rtdx029 INTO g_pmcp_d[l_ac].rtdx029
                 FROM rtdx_t 
                WHERE rtdxent = g_enterprise
                  AND rtdx001 = g_pmcp_d[l_ac].pmcp001
                  AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
                  AND rtdxstus = 'Y'
               SELECT ooefl003 INTO g_pmcp_d[l_ac].rtdx029_desc
                 FROM ooefl_t 
                WHERE ooeflent = g_enterprise
                  AND ooefl001 = g_pmcp_d[l_ac].rtdx029   
                  AND ooefl002 = g_lang          
            END IF 
            #mark by geza 20170116  #170116-00018#2(S)
#            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN                   
#               #CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003) RETURNING g_pmcp_d[l_ac].l_inag009_1 #mark by geza 20161209 161124-00039#1
#               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009_1 #add by geza 20161209 161124-00039#1
            #add by geza 20170116  #170116-00018#2(S)
            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL AND g_pmcp_d[l_ac].pmcp016 IS NOT NULL AND g_pmcp_d[l_ac].pmcp005 IS NOT NULL THEN                   
               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp016,g_pmcp_d[l_ac].pmcp005) RETURNING g_pmcp_d[l_ac].l_inag009_1 
            #add by geza 20170116  #170116-00018#2(E)
               #LET g_pmcp_d[l_ac].l_inag009_1 = 0 #mark by geza 20170116 #170116-00018#2
               LET g_pmcp_d[l_ac].l_inag009_1 =''   #add by geza 20170116 #170116-00018#2          
            END IF            
            #add by geza 20161031 #161027-00055#3(E)
            CALL apmt832_set_entry_b(l_cmd)      #160921-00037#2 20160922 add by beckxie
            CALL apmt832_set_no_entry_b(l_cmd)   #160921-00037#2 20160922 add by beckxie
   
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp001
            #add-point:BEFORE FIELD pmcp001 name="input.b.page1.pmcp001"
            IF cl_null(g_pmcp_d[l_ac].pmcpsite) THEN
               NEXT FIELD pmcpsite
            END IF
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp001
            #add-point:ON CHANGE pmcp001 name="input.g.page1.pmcp001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp003
            
            #add-point:AFTER FIELD pmcp003 name="input.a.page1.pmcp003"
            #160921-00037#2 20160922 add by beckxie---S
            CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003) RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc
            DISPLAY BY NAME g_pmcp_d[l_ac].pmcp003_desc
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp003) THEN 
               IF NOT s_feature_check(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003) THEN
                  LET g_pmcp_d[l_ac].pmcp003 = g_pmcp_d_o.pmcp003
                  CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003) RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc
                  DISPLAY BY NAME g_pmcp_d[l_ac].pmcp003_desc
                  NEXT FIELD CURRENT
               END IF
               IF NOT s_feature_direct_input(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003,g_pmcp_d_o.pmcp003,g_pmco_m.pmcodocno,g_pmco_m.pmcosite) THEN
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET  g_pmcp_d_o.pmcp003 = g_pmcp_d[l_ac].pmcp003
            #160921-00037#2 20160922 add by beckxie---E
            #161228-00033#3 by sakura mark(S)
            ##161017-00029#2 16/10/18 by 08742 -S
            #SELECT imay003 INTO  g_pmcp_d[l_ac].pmcp002
            #  FROM imay_t
            # WHERE imayent = g_enterprise
            #   AND imay019 = g_pmcp_d[l_ac].pmcp003
            #   AND imay001 = g_pmcp_d[l_ac].pmcp001
            #   AND ROWNUM = 1
            #IF sqlca.sqlcode = 100 THEN 
            #   SELECT imay003 INTO  g_pmcp_d[l_ac].pmcp002
            #     FROM imay_t
            #    WHERE imayent = g_enterprise
            #      AND imay006 = 'Y'
            #      AND imay001 = g_pmcp_d[l_ac].pmcp001
            #END IF 
            #CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003)
            #   RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc
            ##161017-00029#2 16/10/18 by 08742 -E
            #161228-00033#3 by sakura mark(E)

            #161228-00033#3 by sakura add(S)
            LET g_pmcp_d[l_ac].pmcp002 = ''
            LET g_sql = "SELECT imay003 ",
                        "  FROM imay_t ",
                        " WHERE imayent = ",g_enterprise,
                        "   AND imay019 = '",g_pmcp_d[l_ac].pmcp003,"'",
                        "   AND imay001 = '",g_pmcp_d[l_ac].pmcp001,"'"
            PREPARE apmt832_sel_imay003_pre1 FROM g_sql
            DECLARE apmt832_sel_imay003_cur1 SCROLL CURSOR FOR apmt832_sel_imay003_pre1   
            OPEN apmt832_sel_imay003_cur1
            FETCH FIRST apmt832_sel_imay003_cur1 INTO g_pmcp_d[l_ac].pmcp002
            CLOSE apmt832_sel_imay003_cur1               
            FREE  apmt832_sel_imay003_pre1
            
            IF cl_null(g_pmcp_d[l_ac].pmcp002) THEN 
               LET g_pmcp_d[l_ac].pmcp002 = ''
               SELECT imay003 INTO  g_pmcp_d[l_ac].pmcp002
                 FROM imay_t
                WHERE imayent = g_enterprise
                  AND imay006 = 'Y'
                  AND imay001 = g_pmcp_d[l_ac].pmcp001
            END IF 
            CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003)
               RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc            
            #161228-00033#3 by sakura add(E)

            #add by geza 20161031 #161027-00055#3(S)
            IF g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN
               CALL apmt832_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp006,g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009
            ELSE
               LET g_pmcp_d[l_ac].l_inag009 = 0            
            END IF
            IF g_pmcp_d[l_ac].pmcpsite IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL  THEN
               SELECT rtdx029 INTO g_pmcp_d[l_ac].rtdx029
                 FROM rtdx_t 
                WHERE rtdxent = g_enterprise
                  AND rtdx001 = g_pmcp_d[l_ac].pmcp001
                  AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
                  AND rtdxstus = 'Y'
               SELECT ooefl003 INTO g_pmcp_d[l_ac].rtdx029_desc
                 FROM ooefl_t 
                WHERE ooeflent = g_enterprise
                  AND ooefl001 = g_pmcp_d[l_ac].rtdx029   
                  AND ooefl002 = g_lang          
            END IF 
            #mark by geza 20170116  #170116-00018#2(S)
#            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN                   
#               #CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003) RETURNING g_pmcp_d[l_ac].l_inag009_1 #mark by geza 20161209 161124-00039#1
#               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009_1 #add by geza 20161209 161124-00039#1
            #add by geza 20170116  #170116-00018#2(S)
            IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL AND g_pmcp_d[l_ac].pmcp016 IS NOT NULL AND g_pmcp_d[l_ac].pmcp005 IS NOT NULL THEN                   
               CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp016,g_pmcp_d[l_ac].pmcp005) RETURNING g_pmcp_d[l_ac].l_inag009_1 
            #add by geza 20170116  #170116-00018#2(E)
            ELSE
               #LET g_pmcp_d[l_ac].l_inag009_1 = 0 #mark by geza 20170116 #170116-00018#2
               LET g_pmcp_d[l_ac].l_inag009_1 =''   #add by geza 20170116 #170116-00018#2          
            END IF            
            #add by geza 20161031 #161027-00055#3(E)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp003
            #add-point:BEFORE FIELD pmcp003 name="input.b.page1.pmcp003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp003
            #add-point:ON CHANGE pmcp003 name="input.g.page1.pmcp003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp003_desc
            #add-point:BEFORE FIELD pmcp003_desc name="input.b.page1.pmcp003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp003_desc
            
            #add-point:AFTER FIELD pmcp003_desc name="input.a.page1.pmcp003_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp003_desc
            #add-point:ON CHANGE pmcp003_desc name="input.g.page1.pmcp003_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp016
            
            #add-point:AFTER FIELD pmcp016 name="input.a.page1.pmcp016"
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp016) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcp016

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001_3") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
               LET l_rtdx029 = ''
               SELECT rtdx029 INTO l_rtdx029
                 FROM rtdx_t 
                WHERE rtdxent = g_enterprise
                  AND rtdx001 = g_pmcp_d[l_ac].pmcp001
                  AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
                  AND rtdxstus = 'Y'
               IF NOT cl_null(l_rtdx029) THEN 
                  #應用 a17 樣板自動產生(Version:3)
                  #欄位存在檢查
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = l_rtdx029
                  LET g_chkparam.arg2 = g_pmcp_d[l_ac].pmcp016
               
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_inaa001_1") THEN
                     #檢查成功時後續處理
                  ELSE
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  END IF
               
               
               
               END IF 

            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp016
            #add-point:BEFORE FIELD pmcp016 name="input.b.page1.pmcp016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp016
            #add-point:ON CHANGE pmcp016 name="input.g.page1.pmcp016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp009
            
            #add-point:AFTER FIELD pmcp009 name="input.a.page1.pmcp009"
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp009) THEN
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcp009 
               #160318-00025#21  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
               #160318-00025#21  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooca001") THEN
                  LET g_pmcp_d[l_ac].pmcp009 = g_pmcp_d_t.pmcp009
                 
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp009
            #add-point:BEFORE FIELD pmcp009 name="input.b.page1.pmcp009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp009
            #add-point:ON CHANGE pmcp009 name="input.g.page1.pmcp009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp010
            #add-point:BEFORE FIELD pmcp010 name="input.b.page1.pmcp010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp010
            
            #add-point:AFTER FIELD pmcp010 name="input.a.page1.pmcp010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp010
            #add-point:ON CHANGE pmcp010 name="input.g.page1.pmcp010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp011
            #add-point:BEFORE FIELD pmcp011 name="input.b.page1.pmcp011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp011
            
            #add-point:AFTER FIELD pmcp011 name="input.a.page1.pmcp011"
            IF NOT cl_ap_chk_Range(g_pmcp_d[l_ac].pmcp011,"0.000","0","","","azz-00079",1) THEN
               LET g_pmcp_d[l_ac].pmcp011 = g_pmcp_d_t.pmcp011
               NEXT FIELD pmcp011
            END IF
            
            #ken----------------------------------------------------s
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp011) THEN
               CALL s_aooi250_take_decimals(g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp011) RETURNING l_success,g_pmcp_d[l_ac].pmcp011
            END IF

            #換算鋪貨數量
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp005) AND NOT cl_null(g_pmcp_d[l_ac].pmcp011) THEN
               CALL s_aooi250_convert_qty(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp005,g_pmcp_d[l_ac].pmcp011)
                   RETURNING l_success,l_pmcp004
               IF l_success THEN
                  LET g_pmcp_d[l_ac].pmcp004 = l_pmcp004   
               END IF
            END IF
            #ken----------------------------------------------------e 
            
            #ken_mark-----------------------------------------------s
            #IF NOT cl_null(g_pmcp_d[l_ac].pmcp011) AND NOT cl_null(g_pmcp_d[l_ac].pmcp010)  THEN
            #   #單位不為空
            #   IF NOT cl_null(g_pmcp_d[l_ac].pmcp005) AND NOT cl_null(g_pmcp_d[l_ac].pmcp009) AND (t_pmcp011 <>g_pmcp_d[l_ac].pmcp011 OR  cl_null(t_pmcp011)) THEN
            #      #库存单位
            #      #SELECT imaa104 INTO  l_pmcp005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 =  g_pmcp_d[l_ac].pmcp001
            #      CALL  s_aimi190_get_convert(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp005) RETURNING l_success,l_rate
            #      IF l_success THEN
            #         LET g_pmcp_d[l_ac].pmcp004 =  g_pmcp_d[l_ac].pmcp011*g_pmcp_d[l_ac].pmcp010*l_rate
            #      ELSE
            #         LET g_pmcp_d[l_ac].pmcp011 = g_pmcp_d_t.pmcp011
            #         NEXT FIELD pmcp011 
            #      END IF
            #      LET t_pmcp011 =  g_pmcp_d[l_ac].pmcp011                
            #   END IF
            #END IF
            #ken_mrak-----------------------------------------------e
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp011
            #add-point:ON CHANGE pmcp011 name="input.g.page1.pmcp011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp004
            #add-point:BEFORE FIELD pmcp004 name="input.b.page1.pmcp004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp004
            
            #add-point:AFTER FIELD pmcp004 name="input.a.page1.pmcp004"
            #ken--------------------------------s
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp004) THEN
               CALL s_aooi250_take_decimals(g_pmcp_d[l_ac].pmcp005,g_pmcp_d[l_ac].pmcp004) RETURNING l_success,g_pmcp_d[l_ac].pmcp004
            END IF

            #換算鋪貨件數      
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp005) AND NOT cl_null(g_pmcp_d[l_ac].pmcp004) THEN 
               CALL s_aooi250_convert_qty(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp005,g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp004)
                   RETURNING l_success,l_pmcp011
               IF l_success THEN
                  LET g_pmcp_d[l_ac].pmcp011 = l_pmcp011   
               END IF
            END IF
            
            IF cl_null(g_pmcp_d[l_ac].pmcp004) THEN
               LET g_pmcp_d[l_ac].pmcp011 = null
            END IF
            
            CALL apmt832_set_entry_b(l_cmd)
            CALL apmt832_set_no_entry_b(l_cmd)
            #ken--------------------------------e 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp004
            #add-point:ON CHANGE pmcp004 name="input.g.page1.pmcp004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp005
            
            #add-point:AFTER FIELD pmcp005 name="input.a.page1.pmcp005"
            LET g_pmcp_d[l_ac].pmcp005_desc = ''
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp005) THEN
               IF g_pmcp_d[l_ac].pmcp005 != g_pmcp_d_o.pmcp005 OR g_pmcp_d_o.pmcp005 IS NULL THEN #ken
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcp005 
                  #160318-00025#21  by 07900 --add-str
                  LET g_errshow = TRUE #是否開窗                   
                  LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
                  #160318-00025#21  by 07900 --add-end
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooca001") THEN
                     LET g_pmcp_d[l_ac].pmcp005 = g_pmcp_d_o.pmcp005
                     CALL apmt832_pmcp005_ref()
                     #檢查失敗時後續處理
                     NEXT FIELD CURRENT
                  ELSE
                     #ken----------------------------------------------------s
                     IF NOT cl_null(g_pmcp_d[l_ac].pmcp011) THEN
                        CALL s_aooi250_take_decimals(g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp011) RETURNING l_success,g_pmcp_d[l_ac].pmcp011
                     END IF
                     
                     #換算鋪貨數量
                     IF NOT cl_null(g_pmcp_d[l_ac].pmcp005) AND NOT cl_null(g_pmcp_d[l_ac].pmcp011) THEN
                        CALL s_aooi250_convert_qty(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp005,g_pmcp_d[l_ac].pmcp011)
                            RETURNING l_success,l_pmcp004
                        IF l_success THEN
                           LET g_pmcp_d[l_ac].pmcp004 = l_pmcp004   
                        END IF
                     END IF
                     #ken----------------------------------------------------e                
                  
                     #ken_mark-------------------------------------------------------------------s
                     #IF NOT cl_null(g_pmcp_d[l_ac].pmcp001) AND NOT cl_null(g_pmcp_d[l_ac].pmcp009) AND NOT cl_null(g_pmcp_d[l_ac].pmcp011) AND (t_pmcp005 <>g_pmcp_d[l_ac].pmcp005 OR cl_null(t_pmcp005)) THEN
                     #   #库存单位
                     #  # SELECT imaa104 INTO  l_pmcp005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 =  g_pmcp_d[l_ac].pmcp001
                     #   CALL  s_aimi190_get_convert(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp005) RETURNING l_success,l_rate
                     #   IF l_success THEN
                     #      LET g_pmcp_d[l_ac].pmcp004 =  g_pmcp_d[l_ac].pmcp011*g_pmcp_d[l_ac].pmcp010*l_rate
                     #   ELSE
                     #      LET g_pmcp_d[l_ac].pmcp005 = g_pmcp_d_t.pmcp005
                     #      CALL apmt832_pmcp005_ref()
                     #      NEXT FIELD CURRENT
                     #   END IF 
                     #   LET t_pmcp005 =  g_pmcp_d[l_ac].pmcp005                    
                     #END IF
                     #ken_mark-------------------------------------------------------------------e
                  END IF
               END IF
            END IF
            LET g_pmcp_d_o.pmcp005 = g_pmcp_d[l_ac].pmcp005 #ken
            CALL apmt832_pmcp005_ref()
            CALL apmt832_set_entry_b(l_cmd)
            CALL apmt832_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp005
            #add-point:BEFORE FIELD pmcp005 name="input.b.page1.pmcp005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp005
            #add-point:ON CHANGE pmcp005 name="input.g.page1.pmcp005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp015
            #add-point:BEFORE FIELD pmcp015 name="input.b.page1.pmcp015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp015
            
            #add-point:AFTER FIELD pmcp015 name="input.a.page1.pmcp015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp015
            #add-point:ON CHANGE pmcp015 name="input.g.page1.pmcp015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp013
            #add-point:BEFORE FIELD pmcp013 name="input.b.page1.pmcp013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp013
            
            #add-point:AFTER FIELD pmcp013 name="input.a.page1.pmcp013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp013
            #add-point:ON CHANGE pmcp013 name="input.g.page1.pmcp013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp012
            
            #add-point:AFTER FIELD pmcp012 name="input.a.page1.pmcp012"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcp012
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmcp_d[l_ac].pmcp012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pmcp_d[l_ac].pmcp012_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp012
            #add-point:BEFORE FIELD pmcp012 name="input.b.page1.pmcp012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp012
            #add-point:ON CHANGE pmcp012 name="input.g.page1.pmcp012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp007
            #add-point:BEFORE FIELD pmcp007 name="input.b.page1.pmcp007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp007
            
            #add-point:AFTER FIELD pmcp007 name="input.a.page1.pmcp007"
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp007) THEN
               IF NOT cl_null(g_pmco_m.pmco004) AND g_pmcp_d[l_ac].pmcp007 > g_pmco_m.pmco004 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00346'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_pmcp_d[l_ac].pmcp007 = g_pmcp_d_t.pmcp007
                  NEXT FIELD pmcp007
               END IF
           
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp007
            #add-point:ON CHANGE pmcp007 name="input.g.page1.pmcp007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp008
            
            #add-point:AFTER FIELD pmcp008 name="input.a.page1.pmcp008"
            LET g_pmcp_d[l_ac].pmcp008_desc= '' 
            IF NOT cl_null(g_pmcp_d[l_ac].pmcp008) THEN    
              IF NOT s_azzi650_chk_exist('274',g_pmcp_d[l_ac].pmcp008) THEN
                  LET g_pmcp_d[l_ac].pmcp008 =  g_pmcp_d_t.pmcp008
                  CALL apmt832_pmcp008_ref()
                  NEXT FIELD pmcp008
               END IF 
            END IF               
            CALL apmt832_pmcp008_ref()
            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp008
            #add-point:BEFORE FIELD pmcp008 name="input.b.page1.pmcp008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp008
            #add-point:ON CHANGE pmcp008 name="input.g.page1.pmcp008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcp014
            #add-point:BEFORE FIELD pmcp014 name="input.b.page1.pmcp014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcp014
            
            #add-point:AFTER FIELD pmcp014 name="input.a.page1.pmcp014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcp014
            #add-point:ON CHANGE pmcp014 name="input.g.page1.pmcp014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmcpunit
            #add-point:BEFORE FIELD pmcpunit name="input.b.page1.pmcpunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmcpunit
            
            #add-point:AFTER FIELD pmcpunit name="input.a.page1.pmcpunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE pmcpunit
            #add-point:ON CHANGE pmcpunit name="input.g.page1.pmcpunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.pmcpseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcpseq
            #add-point:ON ACTION controlp INFIELD pmcpseq name="input.c.page1.pmcpseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcpsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcpsite
            #add-point:ON ACTION controlp INFIELD pmcpsite name="input.c.page1.pmcpsite"
#此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcpsite             #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_pmco_m.pmcosite #
#            LET g_qryparam.arg2 = '8' #
#
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'pmcpsite',g_pmco_m.pmcosite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()

            LET g_pmcp_d[l_ac].pmcpsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmcp_d[l_ac].pmcpsite TO pmcpsite              #顯示到畫面上
            CALL apmt832_pmcpsite_ref()
            NEXT FIELD pmcpsite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp006
            #add-point:ON ACTION controlp INFIELD pmcp006 name="input.c.page1.pmcp006"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcp006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_pmcp_d[l_ac].pmcpsite #

            CALL q_inaa001_6()                                #呼叫開窗

            LET g_pmcp_d[l_ac].pmcp006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmcp_d[l_ac].pmcp006 TO pmcp006              #顯示到畫面上
            CALL apmt832_pmcp006_ref()
            NEXT FIELD pmcp006                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp002
            #add-point:ON ACTION controlp INFIELD pmcp002 name="input.c.page1.pmcp002"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcp002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_pmcp_d[l_ac].pmcpsite
            LET g_qryparam.arg2 = g_pmco_m.pmcodocdt
            CALL q_imay003_5()                                #呼叫開窗

            LET g_pmcp_d[l_ac].pmcp002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmcp_d[l_ac].pmcp002 TO pmcp002              #顯示到畫面上
            LET g_c = TRUE
            CALL apmt832_pmcp002_other()
            NEXT FIELD pmcp002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp001
            #add-point:ON ACTION controlp INFIELD pmcp001 name="input.c.page1.pmcp001"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcp001             #給予default值

            #給予arg
            LET g_qryparam.arg1 =  g_pmcp_d[l_ac].pmcpsite
            LET g_qryparam.arg2 = g_pmco_m.pmcodocdt
            
            CALL q_rtdx001_15()                                #呼叫開窗

            LET g_pmcp_d[l_ac].pmcp001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmcp_d[l_ac].pmcp001 TO pmcp001              #顯示到畫面上
            LET g_c = FALSE
            CALL apmt832_pmcp001_ref()
            NEXT FIELD pmcp001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp003
            #add-point:ON ACTION controlp INFIELD pmcp003 name="input.c.page1.pmcp003"
            #160921-00037#2 20160922 add by beckxie---S
            LET l_imaa005 = ''
            SELECT imaa005 INTO l_imaa005
              FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_pmcp_d[l_ac].pmcp001
               
            IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'Y' AND NOT cl_null(l_imaa005) THEN
               IF l_cmd = 'a' THEN            
                  CALL l_inam.clear()            
                  CALL s_feature(l_cmd,g_pmcp_d[l_ac].pmcp001,'','',g_site,g_pmco_m.pmcodocno) RETURNING l_success,l_inam
                  LET g_pmcp_d[l_ac].pmcp003 = l_inam[1].inam002
                  LET g_pmcp_d[l_ac].pmcp004 = l_inam[1].inam004
                  LET g_pmcp_d[l_ac].pmcp011 = l_inam[1].inam004
                  DISPLAY BY NAME g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcp004,g_pmcp_d[l_ac].pmcp011
                  
               END IF
               IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003,g_site,g_pmco_m.pmcodocno)
                     RETURNING l_success,g_pmcp_d[l_ac].pmcp003
                  CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003) RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc
                  DISPLAY BY NAME g_pmcp_d[l_ac].pmcp003_desc
                  DISPLAY BY NAME g_pmcp_d[l_ac].pmcp003
               END IF
            END IF  
            #160921-00037#2 20160922 add by beckxie---E
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp003_desc
            #add-point:ON ACTION controlp INFIELD pmcp003_desc name="input.c.page1.pmcp003_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp016
            #add-point:ON ACTION controlp INFIELD pmcp016 name="input.c.page1.pmcp016"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcp016             #給予default值
            LET g_qryparam.default2 = "" #g_pmcp_d[l_ac].inaa001 #庫位編號
            #給予arg
            SELECT rtdx029 INTO l_rtdx029 
              FROM rtdx_t
             WHERE rtdxent = g_enterprise
               AND rtdx001 = g_pmcp_d[l_ac].pmcp001
               AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
            
            LET g_qryparam.arg1 = l_rtdx029

 
            CALL q_inaa001_6()                                #呼叫開窗
 
            LET g_pmcp_d[l_ac].pmcp016 = g_qryparam.return1              
            #LET g_pmcp_d[l_ac].inaa001 = g_qryparam.return2 
            DISPLAY g_pmcp_d[l_ac].pmcp016 TO pmcp016              #
            #DISPLAY g_pmcp_d[l_ac].inaa001 TO inaa001 #庫位編號
            NEXT FIELD pmcp016                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp009
            #add-point:ON ACTION controlp INFIELD pmcp009 name="input.c.page1.pmcp009"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcp009             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_pmcp_d[l_ac].pmcp009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmcp_d[l_ac].pmcp009 TO pmcp009              #顯示到畫面上

            NEXT FIELD pmcp009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp010
            #add-point:ON ACTION controlp INFIELD pmcp010 name="input.c.page1.pmcp010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp011
            #add-point:ON ACTION controlp INFIELD pmcp011 name="input.c.page1.pmcp011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp004
            #add-point:ON ACTION controlp INFIELD pmcp004 name="input.c.page1.pmcp004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp005
            #add-point:ON ACTION controlp INFIELD pmcp005 name="input.c.page1.pmcp005"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcp005             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_pmcp_d[l_ac].pmcp005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmcp_d[l_ac].pmcp005 TO pmcp005              #顯示到畫面上
            CALL apmt832_pmcp005_ref()
            NEXT FIELD pmcp005                          #返回原欄位
            

            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp015
            #add-point:ON ACTION controlp INFIELD pmcp015 name="input.c.page1.pmcp015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp013
            #add-point:ON ACTION controlp INFIELD pmcp013 name="input.c.page1.pmcp013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp012
            #add-point:ON ACTION controlp INFIELD pmcp012 name="input.c.page1.pmcp012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp007
            #add-point:ON ACTION controlp INFIELD pmcp007 name="input.c.page1.pmcp007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp008
            #add-point:ON ACTION controlp INFIELD pmcp008 name="input.c.page1.pmcp008"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pmcp_d[l_ac].pmcp008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "274" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_pmcp_d[l_ac].pmcp008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pmcp_d[l_ac].pmcp008 TO pmcp008              #顯示到畫面上
            CALL apmt832_pmcp008_ref() 
            NEXT FIELD pmcp008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcp014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcp014
            #add-point:ON ACTION controlp INFIELD pmcp014 name="input.c.page1.pmcp014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.pmcpunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmcpunit
            #add-point:ON ACTION controlp INFIELD pmcpunit name="input.c.page1.pmcpunit"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_pmcp_d[l_ac].* = g_pmcp_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE apmt832_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_pmcp_d[l_ac].pmcpseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_pmcp_d[l_ac].* = g_pmcp_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL apmt832_pmcp_t_mask_restore('restore_mask_o')
      
               UPDATE pmcp_t SET (pmcpdocno,pmcpseq,pmcpsite,pmcp006,pmcp002,pmcp001,pmcp003,pmcp016, 
                   pmcp009,pmcp010,pmcp011,pmcp004,pmcp005,pmcp015,pmcp013,pmcp012,pmcp007,pmcp008,pmcp014, 
                   pmcpunit) = (g_pmco_m.pmcodocno,g_pmcp_d[l_ac].pmcpseq,g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp006, 
                   g_pmcp_d[l_ac].pmcp002,g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcp016, 
                   g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp010,g_pmcp_d[l_ac].pmcp011,g_pmcp_d[l_ac].pmcp004, 
                   g_pmcp_d[l_ac].pmcp005,g_pmcp_d[l_ac].pmcp015,g_pmcp_d[l_ac].pmcp013,g_pmcp_d[l_ac].pmcp012, 
                   g_pmcp_d[l_ac].pmcp007,g_pmcp_d[l_ac].pmcp008,g_pmcp_d[l_ac].pmcp014,g_pmcp_d[l_ac].pmcpunit) 
 
                WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m.pmcodocno 
 
                  AND pmcpseq = g_pmcp_d_t.pmcpseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_pmcp_d[l_ac].* = g_pmcp_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmcp_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_pmcp_d[l_ac].* = g_pmcp_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "pmcp_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_pmco_m.pmcodocno
               LET gs_keys_bak[1] = g_pmcodocno_t
               LET gs_keys[2] = g_pmcp_d[g_detail_idx].pmcpseq
               LET gs_keys_bak[2] = g_pmcp_d_t.pmcpseq
               CALL apmt832_update_b('pmcp_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL apmt832_pmcp_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_pmcp_d[g_detail_idx].pmcpseq = g_pmcp_d_t.pmcpseq 
 
                  ) THEN
                  LET gs_keys[01] = g_pmco_m.pmcodocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_pmcp_d_t.pmcpseq
 
                  CALL apmt832_key_update_b(gs_keys,'pmcp_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_pmco_m),util.JSON.stringify(g_pmcp_d_t)
               LET g_log2 = util.JSON.stringify(g_pmco_m),util.JSON.stringify(g_pmcp_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL apmt832_unlock_b("pmcp_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
   
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
          
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_pmcp_d[li_reproduce_target].* = g_pmcp_d[li_reproduce].*
 
               LET g_pmcp_d[li_reproduce_target].pmcpseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_pmcp_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_pmcp_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="apmt832.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD pmcosite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pmcpseq
 
               #add-point:input段modify_detail 

               #end add-point  
            END CASE
         END IF
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD pmcodocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD pmcpseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"

         #161129-00027#9 add by sunxh 170106--end--  
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
 
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION apmt832_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   IF g_pmco_m.pmcostus = 'N' THEN
      CALL cl_set_act_visible("batchgen",TRUE)            
   ELSE
      CALL cl_set_act_visible("batchgen",FALSE)
   END IF
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL apmt832_b_fill() #單身填充
      CALL apmt832_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL apmt832_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
            CALL apmt832_pmcodocno_ref()
     #      CALL apmt832_pmcosite_ref()
     #      CALL apmt832_pmco001_ref()
     #      CALL apmt832_pmco002_ref()
     #      INITIALIZE g_ref_fields TO NULL
     #      LET g_ref_fields[1] = g_pmco_m.pmcoownid
     #      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
     #      LET g_pmco_m.pmcoownid_desc = '', g_rtn_fields[1] , ''
     #      DISPLAY BY NAME g_pmco_m.pmcoownid_desc
     #
     #      INITIALIZE g_ref_fields TO NULL
     #      LET g_ref_fields[1] = g_pmco_m.pmcoowndp
     #      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
     #      LET g_pmco_m.pmcoowndp_desc = '', g_rtn_fields[1] , ''
     #      DISPLAY BY NAME g_pmco_m.pmcoowndp_desc
     #
     #      INITIALIZE g_ref_fields TO NULL
     #      LET g_ref_fields[1] = g_pmco_m.pmcocrtid
     #      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
     #      LET g_pmco_m.pmcocrtid_desc = '', g_rtn_fields[1] , ''
     #      DISPLAY BY NAME g_pmco_m.pmcocrtid_desc
     #
     #      INITIALIZE g_ref_fields TO NULL
     #      LET g_ref_fields[1] = g_pmco_m.pmcocrtdp
     #      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
     #      LET g_pmco_m.pmcocrtdp_desc = '', g_rtn_fields[1] , ''
     #      DISPLAY BY NAME g_pmco_m.pmcocrtdp_desc
     #
     #      INITIALIZE g_ref_fields TO NULL
     #      LET g_ref_fields[1] = g_pmco_m.pmcomodid
     #      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
     #      LET g_pmco_m.pmcomodid_desc = '', g_rtn_fields[1] , ''
     #      DISPLAY BY NAME g_pmco_m.pmcomodid_desc
     #
     #      INITIALIZE g_ref_fields TO NULL
     #      LET g_ref_fields[1] = g_pmco_m.pmcocnfid
     #      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
     #      LET g_pmco_m.pmcocnfid_desc = '', g_rtn_fields[1] , ''
     #      DISPLAY BY NAME g_pmco_m.pmcocnfid_desc

   #end add-point
   
   #遮罩相關處理
   LET g_pmco_m_mask_o.* =  g_pmco_m.*
   CALL apmt832_pmco_t_mask()
   LET g_pmco_m_mask_n.* =  g_pmco_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcosite_desc,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcodocno_desc, 
       g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco001_desc,g_pmco_m.pmco002, 
       g_pmco_m.pmco002_desc,g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoownid_desc, 
       g_pmco_m.pmcoowndp,g_pmco_m.pmcoowndp_desc,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcomoddt, 
       g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfid_desc,g_pmco_m.pmcocnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_pmco_m.pmcostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_pmcp_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcp001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pmcp_d[l_ac].pmcp001_desc = '', g_rtn_fields[1] , ''
            LET g_pmcp_d[l_ac].pmcp001_desc1 = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_pmcp_d[l_ac].pmcp001_desc,g_pmcp_d[l_ac].pmcp001_desc1 

            CALL apmt832_pmcpsite_ref()
            
            CALL apmt832_pmcp006_ref()
            CALL apmt832_pmcp008_ref()
            CALL apmt832_pmcp005_ref()
            SELECT pmaal004 INTO g_pmcp_d[l_ac].pmcp012_desc FROM pmaal_t 
             WHERE pmaalent =  g_enterprise AND pmaal001 = g_pmcp_d[l_ac].pmcp012 AND pmaal002 = g_dlang
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL apmt832_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION apmt832_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION apmt832_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE pmco_t.pmcodocno 
   DEFINE l_oldno     LIKE pmco_t.pmcodocno 
 
   DEFINE l_master    RECORD LIKE pmco_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE pmcp_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_pmco_m.pmcodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
    
   LET g_pmco_m.pmcodocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_pmco_m.pmcoownid = g_user
      LET g_pmco_m.pmcoowndp = g_dept
      LET g_pmco_m.pmcocrtid = g_user
      LET g_pmco_m.pmcocrtdp = g_dept 
      LET g_pmco_m.pmcocrtdt = cl_get_current()
      LET g_pmco_m.pmcomodid = g_user
      LET g_pmco_m.pmcomoddt = cl_get_current()
      LET g_pmco_m.pmcostus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_pmco_m.pmcostus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_pmco_m.pmcodocno_desc = ''
   DISPLAY BY NAME g_pmco_m.pmcodocno_desc
 
   
   CALL apmt832_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_pmco_m.* TO NULL
      INITIALIZE g_pmcp_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL apmt832_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL apmt832_set_act_visible()   
   CALL apmt832_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " pmcoent = " ||g_enterprise|| " AND",
                      " pmcodocno = '", g_pmco_m.pmcodocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL apmt832_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL apmt832_idx_chk()
   
   LET g_data_owner = g_pmco_m.pmcoownid      
   LET g_data_dept  = g_pmco_m.pmcoowndp
   
   #功能已完成,通報訊息中心
   CALL apmt832_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION apmt832_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pmcp_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE apmt832_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM pmcp_t
    WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmcodocno_t
 
    INTO TEMP apmt832_detail
 
   #將key修正為調整後   
   UPDATE apmt832_detail 
      #更新key欄位
      SET pmcpdocno = g_pmco_m.pmcodocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO pmcp_t SELECT * FROM apmt832_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE apmt832_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.delete" >}
#+ 資料刪除
PRIVATE FUNCTION apmt832_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_pmco_m.pmcodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN apmt832_cl USING g_enterprise,g_pmco_m.pmcodocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmt832_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE apmt832_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE apmt832_master_referesh USING g_pmco_m.pmcodocno INTO g_pmco_m.pmcosite,g_pmco_m.pmcodocdt, 
       g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002, 
       g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt, 
       g_pmco_m.pmcosite_desc,g_pmco_m.pmco001_desc,g_pmco_m.pmco002_desc,g_pmco_m.pmcoownid_desc,g_pmco_m.pmcoowndp_desc, 
       g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcocnfid_desc 
 
   
   
   #檢查是否允許此動作
   IF NOT apmt832_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_pmco_m_mask_o.* =  g_pmco_m.*
   CALL apmt832_pmco_t_mask()
   LET g_pmco_m_mask_n.* =  g_pmco_m.*
   
   CALL apmt832_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL apmt832_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_pmcodocno_t = g_pmco_m.pmcodocno
 
 
      DELETE FROM pmco_t
       WHERE pmcoent = g_enterprise AND pmcodocno = g_pmco_m.pmcodocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_pmco_m.pmcodocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM pmcp_t
       WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m.pmcodocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmcp_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_pmco_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE apmt832_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_pmcp_d.clear() 
 
     
      CALL apmt832_ui_browser_refresh()  
      #CALL apmt832_ui_headershow()  
      #CALL apmt832_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL apmt832_browser_fill("")
         CALL apmt832_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE apmt832_cl
 
   #功能已完成,通報訊息中心
   CALL apmt832_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="apmt832.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION apmt832_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_success  LIKE type_t.num5   #160921-00037#2 20160923 add by beckxie
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_pmcp_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF apmt832_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT pmcpseq,pmcpsite,pmcp006,pmcp002,pmcp001,pmcp003,pmcp016,pmcp009, 
             pmcp010,pmcp011,pmcp004,pmcp005,pmcp015,pmcp013,pmcp012,pmcp007,pmcp008,pmcp014,pmcpunit , 
             t1.ooefl003 ,t3.imaal003 ,t4.oocal003 ,t5.oocal003 ,t6.pmaal004 ,t7.oocql004 FROM pmcp_t", 
                
                     " INNER JOIN pmco_t ON pmcoent = " ||g_enterprise|| " AND pmcodocno = pmcpdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=pmcpsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent="||g_enterprise||" AND t3.imaal001=pmcp001 AND t3.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=pmcp009 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=pmcp005 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t6 ON t6.pmaalent="||g_enterprise||" AND t6.pmaal001=pmcp012 AND t6.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent="||g_enterprise||" AND t7.oocql001='274' AND t7.oocql002=pmcp008 AND t7.oocql003='"||g_dlang||"' ",
 
                     " WHERE pmcpent=? AND pmcpdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY pmcp_t.pmcpseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE apmt832_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR apmt832_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_pmco_m.pmcodocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_pmco_m.pmcodocno INTO g_pmcp_d[l_ac].pmcpseq,g_pmcp_d[l_ac].pmcpsite, 
          g_pmcp_d[l_ac].pmcp006,g_pmcp_d[l_ac].pmcp002,g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003, 
          g_pmcp_d[l_ac].pmcp016,g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp010,g_pmcp_d[l_ac].pmcp011, 
          g_pmcp_d[l_ac].pmcp004,g_pmcp_d[l_ac].pmcp005,g_pmcp_d[l_ac].pmcp015,g_pmcp_d[l_ac].pmcp013, 
          g_pmcp_d[l_ac].pmcp012,g_pmcp_d[l_ac].pmcp007,g_pmcp_d[l_ac].pmcp008,g_pmcp_d[l_ac].pmcp014, 
          g_pmcp_d[l_ac].pmcpunit,g_pmcp_d[l_ac].pmcpsite_desc,g_pmcp_d[l_ac].pmcp001_desc,g_pmcp_d[l_ac].pmcp009_desc, 
          g_pmcp_d[l_ac].pmcp005_desc,g_pmcp_d[l_ac].pmcp012_desc,g_pmcp_d[l_ac].pmcp008_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcp001
         CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_pmcp_d[l_ac].pmcp001_desc = '', g_rtn_fields[1] , ''
         LET g_pmcp_d[l_ac].pmcp001_desc1 = '', g_rtn_fields[2] , ''
         DISPLAY BY NAME g_pmcp_d[l_ac].pmcp001_desc,g_pmcp_d[l_ac].pmcp001_desc1 
            
     #    CALL apmt832_pmcpsite_ref()
         CALL apmt832_pmcp006_ref()
         #160921-00037#2 20160923 add by beckxie---S
         CALL s_feature_description(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp003) RETURNING l_success,g_pmcp_d[l_ac].pmcp003_desc
         DISPLAY BY NAME g_pmcp_d[l_ac].pmcp003_desc
         #160921-00037#2 20160923 add by beckxie---E
         
     #   CALL apmt832_pmcp008_ref()
     #   CALL apmt832_pmcp005_ref()
     #   SELECT pmaal004 INTO g_pmcp_d[l_ac].pmcp012_desc FROM pmaal_t 
     #    WHERE pmaalent =  g_enterprise AND pmaal001 = g_pmcp_d[l_ac].pmcp012 AND pmaal002 = g_dlang
         #add by geza 20161031 #161027-00055#3(S)
         IF g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN
            CALL apmt832_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].pmcp006,g_pmcp_d[l_ac].pmcp003,g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009
         ELSE
            LET g_pmcp_d[l_ac].l_inag009 = 0            
         END IF
         IF g_pmcp_d[l_ac].pmcpsite IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL  THEN
            SELECT rtdx029 INTO g_pmcp_d[l_ac].rtdx029
              FROM rtdx_t 
             WHERE rtdxent = g_enterprise
               AND rtdx001 = g_pmcp_d[l_ac].pmcp001
               AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
               AND rtdxstus = 'Y'
            SELECT ooefl003 INTO g_pmcp_d[l_ac].rtdx029_desc
              FROM ooefl_t 
             WHERE ooeflent = g_enterprise
               AND ooefl001 = g_pmcp_d[l_ac].rtdx029   
               AND ooefl002 = g_lang          
         END IF 
         #mark by geza 20170116  #170116-00018#2(S)
#        IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL THEN                   
#            #CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003) RETURNING g_pmcp_d[l_ac].l_inag009_1 #mark by geza 20161209 161124-00039#1
#            CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite) RETURNING g_pmcp_d[l_ac].l_inag009_1 #add by geza 20161209 161124-00039#1
         #add by geza 20170116  #170116-00018#2(S)
         IF g_pmcp_d[l_ac].rtdx029 IS NOT NULL AND g_pmcp_d[l_ac].pmcp001 IS NOT NULL AND g_pmcp_d[l_ac].pmcp003 IS NOT NULL AND g_pmcp_d[l_ac].pmcp016 IS NOT NULL AND g_pmcp_d[l_ac].pmcp005 IS NOT NULL THEN                   
            CALL apmt832_rtdx029_inag009_count(g_pmcp_d[l_ac].pmcp001,g_pmcp_d[l_ac].rtdx029,g_pmcp_d[l_ac].pmcp003,'',g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp016,g_pmcp_d[l_ac].pmcp005) RETURNING g_pmcp_d[l_ac].l_inag009_1 
         #add by geza 20170116  #170116-00018#2(E)
         ELSE
            #LET g_pmcp_d[l_ac].l_inag009_1 = 0   #mark by geza 20170116 #170116-00018#2
            LET g_pmcp_d[l_ac].l_inag009_1 =''   #add by geza 20170116 #170116-00018#2        
         END IF   
         #add by geza 20161031 #161027-00055#3(E)
         #161129-00067#1 -s 20161130 by 08172
         SELECT imaa116 INTO g_pmcp_d[l_ac].pmcp015
           FROM imaa_t
          WHERE imaaent = g_enterprise
            AND imaa001 = g_pmcp_d[l_ac].pmcp001
            AND imaastus = 'Y'
         #161129-00067#1 -e 20161130 by 08172
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_pmcp_d.deleteElement(g_pmcp_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE apmt832_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_pmcp_d.getLength()
      LET g_pmcp_d_mask_o[l_ac].* =  g_pmcp_d[l_ac].*
      CALL apmt832_pmcp_t_mask()
      LET g_pmcp_d_mask_n[l_ac].* =  g_pmcp_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION apmt832_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM pmcp_t
       WHERE pmcpent = g_enterprise AND
         pmcpdocno = ps_keys_bak[1] AND pmcpseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmcp_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION apmt832_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO pmcp_t
                  (pmcpent,
                   pmcpdocno,
                   pmcpseq
                   ,pmcpsite,pmcp006,pmcp002,pmcp001,pmcp003,pmcp016,pmcp009,pmcp010,pmcp011,pmcp004,pmcp005,pmcp015,pmcp013,pmcp012,pmcp007,pmcp008,pmcp014,pmcpunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_pmcp_d[g_detail_idx].pmcpsite,g_pmcp_d[g_detail_idx].pmcp006,g_pmcp_d[g_detail_idx].pmcp002, 
                       g_pmcp_d[g_detail_idx].pmcp001,g_pmcp_d[g_detail_idx].pmcp003,g_pmcp_d[g_detail_idx].pmcp016, 
                       g_pmcp_d[g_detail_idx].pmcp009,g_pmcp_d[g_detail_idx].pmcp010,g_pmcp_d[g_detail_idx].pmcp011, 
                       g_pmcp_d[g_detail_idx].pmcp004,g_pmcp_d[g_detail_idx].pmcp005,g_pmcp_d[g_detail_idx].pmcp015, 
                       g_pmcp_d[g_detail_idx].pmcp013,g_pmcp_d[g_detail_idx].pmcp012,g_pmcp_d[g_detail_idx].pmcp007, 
                       g_pmcp_d[g_detail_idx].pmcp008,g_pmcp_d[g_detail_idx].pmcp014,g_pmcp_d[g_detail_idx].pmcpunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "pmcp_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_pmcp_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION apmt832_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pmcp_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL apmt832_pmcp_t_mask_restore('restore_mask_o')
               
      UPDATE pmcp_t 
         SET (pmcpdocno,
              pmcpseq
              ,pmcpsite,pmcp006,pmcp002,pmcp001,pmcp003,pmcp016,pmcp009,pmcp010,pmcp011,pmcp004,pmcp005,pmcp015,pmcp013,pmcp012,pmcp007,pmcp008,pmcp014,pmcpunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_pmcp_d[g_detail_idx].pmcpsite,g_pmcp_d[g_detail_idx].pmcp006,g_pmcp_d[g_detail_idx].pmcp002, 
                  g_pmcp_d[g_detail_idx].pmcp001,g_pmcp_d[g_detail_idx].pmcp003,g_pmcp_d[g_detail_idx].pmcp016, 
                  g_pmcp_d[g_detail_idx].pmcp009,g_pmcp_d[g_detail_idx].pmcp010,g_pmcp_d[g_detail_idx].pmcp011, 
                  g_pmcp_d[g_detail_idx].pmcp004,g_pmcp_d[g_detail_idx].pmcp005,g_pmcp_d[g_detail_idx].pmcp015, 
                  g_pmcp_d[g_detail_idx].pmcp013,g_pmcp_d[g_detail_idx].pmcp012,g_pmcp_d[g_detail_idx].pmcp007, 
                  g_pmcp_d[g_detail_idx].pmcp008,g_pmcp_d[g_detail_idx].pmcp014,g_pmcp_d[g_detail_idx].pmcpunit)  
 
         WHERE pmcpent = g_enterprise AND pmcpdocno = ps_keys_bak[1] AND pmcpseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmcp_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "pmcp_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL apmt832_pmcp_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION apmt832_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION apmt832_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION apmt832_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL apmt832_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pmcp_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN apmt832_bcl USING g_enterprise,
                                       g_pmco_m.pmcodocno,g_pmcp_d[g_detail_idx].pmcpseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "apmt832_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION apmt832_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apmt832_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION apmt832_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("pmcodocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pmcodocno",TRUE)
      CALL cl_set_comp_entry("pmcodocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("pmcodocdt",TRUE)
      CALL cl_set_comp_entry("pmcosite",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION apmt832_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("pmcodocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
       CALL cl_set_comp_entry("pmcodocdt",FALSE)
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("pmcodocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("pmcodocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF g_flag THEN
      CALL cl_set_comp_entry("pmcodocno,pmcodocdt",FALSE)
   END IF
   IF NOT s_aooi500_comp_entry(g_prog,'pmcosite') OR g_site_flag THEN
      CALL cl_set_comp_entry("pmcosite",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION apmt832_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("pmcp011",TRUE)  #ken
   CALL cl_set_comp_entry("pmcp003",TRUE)  #160921-00037#2 20160923 add by beckxie
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION apmt832_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   DEFINE l_imaa005 LIKE imaa_t.imaa005   #160921-00037#2 20160923 add by beckxie
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   #ken------------------------------------s 
   IF NOT cl_null(g_pmcp_d[l_ac].pmcp004)  THEN
     CALL cl_set_comp_entry("pmcp011",FALSE)
   END IF
   #ken------------------------------------e  
   #160921-00037#2 20160923 add by beckxie---S
   #料件不使用產品特徵時，產品特徵欄位不可錄入
   LET l_imaa005 = ''
   SELECT imaa005 INTO l_imaa005 
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_pmcp_d[l_ac].pmcp001
   IF cl_null(l_imaa005) THEN
      CALL cl_set_comp_entry("pmcp003",FALSE)
      LET g_pmcp_d[l_ac].pmcp003 = ' '
   ELSE
      IF cl_null(g_pmcp_d[l_ac].pmcp003) THEN
         LET g_pmcp_d[l_ac].pmcp003 = ''
      END IF
   END IF
   #160921-00037#2 20160923 add by beckxie---E
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION apmt832_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION apmt832_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_pmco_m.pmcostus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   #161031-00059#1 -s by 08172
   IF g_pmco_m.pmcostus = 'N' THEN   
      CALL cl_set_act_visible("datechange", TRUE)
   ELSE
      CALL cl_set_act_visible("datechange", FALSE)
   END IF
   #161031-00059#1 -e by 08172
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION apmt832_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION apmt832_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION apmt832_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " pmcodocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "pmco_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "pmcp_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION apmt832_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.num5
   DEFINE l_indjdocno LIKE indj_t.indjdocno   #161109-00078#5 20161110 add by beckxie
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   DEFINE l_i  LIKE type_t.num5 #161129-00027#9 add by sunxh
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_pmco_m.pmcodocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN apmt832_cl USING g_enterprise,g_pmco_m.pmcodocno
   IF STATUS THEN
      CLOSE apmt832_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN apmt832_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE apmt832_master_referesh USING g_pmco_m.pmcodocno INTO g_pmco_m.pmcosite,g_pmco_m.pmcodocdt, 
       g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002, 
       g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfdt, 
       g_pmco_m.pmcosite_desc,g_pmco_m.pmco001_desc,g_pmco_m.pmco002_desc,g_pmco_m.pmcoownid_desc,g_pmco_m.pmcoowndp_desc, 
       g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcocnfid_desc 
 
   
 
   #檢查是否允許此動作
   IF NOT apmt832_action_chk() THEN
      CLOSE apmt832_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcosite_desc,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno,g_pmco_m.pmcodocno_desc, 
       g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco001_desc,g_pmco_m.pmco002, 
       g_pmco_m.pmco002_desc,g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoownid_desc, 
       g_pmco_m.pmcoowndp,g_pmco_m.pmcoowndp_desc,g_pmco_m.pmcocrtid,g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp, 
       g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomodid_desc,g_pmco_m.pmcomoddt, 
       g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfid_desc,g_pmco_m.pmcocnfdt
 
   CASE g_pmco_m.pmcostus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_pmco_m.pmcostus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)      
      CASE g_pmco_m.pmcostus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         WHEN "R"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "D"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
         WHEN "Y"
            HIDE OPTION "open"
            HIDE OPTION "invalid"
            #161109-00078#5 20161110 mark by beckxie---S
            #CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
            #RETURN
            #161109-00078#5 20161110 mark by beckxie---E
         WHEN "X"
            HIDE OPTION "open"
            HIDE OPTION "confirmed"
            HIDE OPTION "unconfirmed"
            CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
            RETURN
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         WHEN "A"    #只能顯示確認; 其餘應用功能皆隱藏
            CALL cl_set_act_visible("confirmed",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)            
      END CASE 
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT apmt832_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE apmt832_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT apmt832_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE apmt832_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
 
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_pmco_m.pmcostus = lc_state OR cl_null(lc_state) THEN
      CLOSE apmt832_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
             LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_apmt832_conf_chk(g_pmco_m.pmcodocno) RETURNING l_success,g_errno
         IF l_success THEN
            #161129-00027#9 add by sunxh 170106--str--
            FOR l_i = 1 TO g_pmcp_d.getLength()
               IF cl_null(g_pmcp_d[l_i].pmcp006) then 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-08321'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  RETURN              
               END IF
           END FOR 
           #161129-00027#9 add by sunxh 170106--end--           
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_apmt832_conf_upd(g_pmco_m.pmcodocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_pmco_m.pmcodocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                   CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
               RETURN            
            END IF
         ELSE
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_pmco_m.pmcodocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
            END IF
            RETURN            
         END IF         
      WHEN 'X'
         CALL s_apmt832_void_chk(g_pmco_m.pmcodocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_apmt832_void_upd(g_pmco_m.pmcodocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_pmco_m.pmcodocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_pmco_m.pmcodocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
            RETURN    
         END IF
         
       WHEN 'N' 
         CALL s_apmt832_unconf_chk(g_pmco_m.pmcodocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN               
               CALL s_transaction_begin()
               CALL s_apmt832_unconf_upd(g_pmco_m.pmcodocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_pmco_m.pmcodocno
                  LET g_errparam.popup = TRUE
                  
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_pmco_m.pmcodocno
                  LET g_errparam.popup = TRUE
                  #161109-00078#5 20161110 add by beckxie---S
                  IF g_errno = 'apm-01137' THEN
                     LET g_errparam.extend = ''
                     LET l_indjdocno = ''
                     #161228-00033#3 by sakura mark(S)
                     #SELECT DISTINCT indjdocno INTO l_indjdocno 
                     #  FROM indj_t
                     # WHERE indjent = g_enterprise
                     #   AND indj001 = g_pmco_m.pmcodocno
                     #   AND ROWNUM = 1
                     #161228-00033#3 by sakura mark(E)
                     #161228-00033#3 by sakura add(S)
                     LET l_indjdocno  = ''
                     LET g_sql = "SELECT indjdocno ",
                                 "  FROM indj_t ",
                                 " WHERE indjent = ",g_enterprise,
                                 "   AND indj001 = '",g_pmco_m.pmcodocno,"'"
                     PREPARE apmt832_sel_indjdocno_pre FROM g_sql
                     DECLARE apmt832_sel_indjdocno_cur SCROLL CURSOR FOR apmt832_sel_indjdocno_pre   
                     OPEN apmt832_sel_indjdocno_cur
                     FETCH FIRST apmt832_sel_indjdocno_cur INTO l_indjdocno
                     CLOSE apmt832_sel_indjdocno_cur
                     FREE  apmt832_sel_indjdocno_pre
                     #161228-00033#3 by sakura add(E)
                     LET g_errparam.replace[1] = l_indjdocno
                  END IF
                  #161109-00078#5 20161110 add by beckxie---E
                  CALL cl_err()
            CALL s_transaction_end('N','0')     #160812-00017#8 Add By Ken 160816
            RETURN    
         END IF
   END CASE	   
   #end add-point
   
   LET g_pmco_m.pmcomodid = g_user
   LET g_pmco_m.pmcomoddt = cl_get_current()
   LET g_pmco_m.pmcostus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE pmco_t 
      SET (pmcostus,pmcomodid,pmcomoddt) 
        = (g_pmco_m.pmcostus,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt)     
    WHERE pmcoent = g_enterprise AND pmcodocno = g_pmco_m.pmcodocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE apmt832_master_referesh USING g_pmco_m.pmcodocno INTO g_pmco_m.pmcosite,g_pmco_m.pmcodocdt, 
          g_pmco_m.pmcodocno,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001,g_pmco_m.pmco002, 
          g_pmco_m.pmco005,g_pmco_m.pmcostus,g_pmco_m.pmcoownid,g_pmco_m.pmcoowndp,g_pmco_m.pmcocrtid, 
          g_pmco_m.pmcocrtdp,g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid, 
          g_pmco_m.pmcocnfdt,g_pmco_m.pmcosite_desc,g_pmco_m.pmco001_desc,g_pmco_m.pmco002_desc,g_pmco_m.pmcoownid_desc, 
          g_pmco_m.pmcoowndp_desc,g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcomodid_desc, 
          g_pmco_m.pmcocnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_pmco_m.pmcosite,g_pmco_m.pmcosite_desc,g_pmco_m.pmcodocdt,g_pmco_m.pmcodocno, 
          g_pmco_m.pmcodocno_desc,g_pmco_m.pmcounit,g_pmco_m.pmco003,g_pmco_m.pmco004,g_pmco_m.pmco001, 
          g_pmco_m.pmco001_desc,g_pmco_m.pmco002,g_pmco_m.pmco002_desc,g_pmco_m.pmco005,g_pmco_m.pmcostus, 
          g_pmco_m.pmcoownid,g_pmco_m.pmcoownid_desc,g_pmco_m.pmcoowndp,g_pmco_m.pmcoowndp_desc,g_pmco_m.pmcocrtid, 
          g_pmco_m.pmcocrtid_desc,g_pmco_m.pmcocrtdp,g_pmco_m.pmcocrtdp_desc,g_pmco_m.pmcocrtdt,g_pmco_m.pmcomodid, 
          g_pmco_m.pmcomodid_desc,g_pmco_m.pmcomoddt,g_pmco_m.pmcocnfid,g_pmco_m.pmcocnfid_desc,g_pmco_m.pmcocnfdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE apmt832_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL apmt832_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="apmt832.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION apmt832_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pmcp_d.getLength() THEN
         LET g_detail_idx = g_pmcp_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pmcp_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_pmcp_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION apmt832_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL apmt832_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION apmt832_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="apmt832.status_show" >}
PRIVATE FUNCTION apmt832_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="apmt832.mask_functions" >}
&include "erp/apm/apmt832_mask.4gl"
 
{</section>}
 
{<section id="apmt832.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION apmt832_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE l_success  LIKE type_t.chr2
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL apmt832_show()
   CALL apmt832_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   CALL s_apmt832_conf_chk(g_pmco_m.pmcodocno) RETURNING l_success,g_errno
   IF NOT l_success THEN
      CLOSE apmt832_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF

   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_pmco_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_pmcp_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL apmt832_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL apmt832_ui_headershow()
   CALL apmt832_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION apmt832_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL apmt832_ui_headershow()  
   CALL apmt832_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="apmt832.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION apmt832_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_pmco_m.pmcodocno
   LET g_pk_array[1].column = 'pmcodocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="apmt832.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="apmt832.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION apmt832_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL apmt832_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_pmco_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="apmt832.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION apmt832_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#28 add-S
   SELECT pmcostus  INTO g_pmco_m.pmcostus
     FROM pmco_t
    WHERE pmcoent = g_enterprise
      AND pmcodocno = g_pmco_m.pmcodocno

   IF(g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_pmco_m.pmcostus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_pmco_m.pmcodocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL apmt832_set_act_visible()
        CALL apmt832_set_act_no_visible()
        CALL apmt832_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#28 add-E
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="apmt832.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmco001_ref()
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_pmco_m.pmco001
    CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
    LET g_pmco_m.pmco001_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME  g_pmco_m.pmco001_desc
    
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_get_oobal004()
     
     IF NOT cl_null(g_pmco_m.pmcodocno) THEN
         SELECT oobal004 INTO g_pmco_m.pmcodocno_desc FROM oobal_t,ooef_t
          WHERE ooef001 = g_site AND ooefent = oobalent
            AND oobal001 = ooef004
            AND oobal002 = g_pmco_m.pmcodocno
            AND oobal003 = g_dlang
            AND oobalent = g_enterprise
     END IF
     DISPLAY BY NAME g_pmco_m.pmcodocno_desc     
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcodocno_ref()
DEFINE l_oobal002     LIKE oobal_t.oobal002
DEFINE l_ooef004      LIKE ooef_t.ooef004
DEFINE r_pmdadocno_desc  LIKE oobal_t.oobal004
DEFINE l_flag          LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_flag1         LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_site          LIKE type_t.chr20


      LET l_flag = TRUE
      LET l_flag1 = TRUE
      LET l_ooef004 = NULL
      LET l_oobal002 = NULL
      IF NOT cl_null(g_pmco_m.pmcodocno) THEN
         CALL s_aooi200_get_site(g_pmco_m.pmcodocno) RETURNING l_flag,l_site
         IF l_flag THEN
            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooef005 = l_site
               AND ooefent = g_enterprise
         END IF
         CALL s_aooi200_get_slip(g_pmco_m.pmcodocno) RETURNING l_flag1,l_oobal002
         IF l_flag1 THEN
            IF NOT cl_null(l_oobal002) AND NOT cl_null(l_ooef004) THEN
               SELECT oobal004 INTO g_pmco_m.pmcodocno_desc FROM oobal_t
                WHERE oobal001 = l_ooef004
                  AND oobal002 = l_oobal002
                  AND oobal003 = g_dlang
                  AND oobalent = g_enterprise
            ELSE
               LET g_pmco_m.pmcodocno_desc = ""
            END IF
          END IF
      ELSE
         LET g_pmco_m.pmcodocno_desc = ""
      END IF
      
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp002_chk()
DEFINE l_n        LIKE type_t.num5
DEFINE l_rtdx001  LIKE rtdx_t.rtdx001
DEFINE l_rtdxstus LIKE rtdx_t.rtdxstus

    #检查条码是否存在
    #检查条码是否有效
    #检查条码是否主条码
    #检查条码对应的商品是否有效
    #設定g_chkparam.*的參數
    LET g_errshow = '1'
    LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcp002
   
    #呼叫檢查存在並帶值的library
    IF NOT cl_chk_exist("v_imay003_1") THEN  
       RETURN FALSE
    END IF
    
    #检查輸入的商品條碼 是否 存在與相應門店的 門店清單檔rtdx_t 中!
    
    SELECT DISTINCT imay001 INTO l_rtdx001 FROM imay_t
     WHERE imay003 = g_pmcp_d[l_ac].pmcp002 AND imayent = g_enterprise
    
    SELECT COUNT(1) INTO l_n FROM rtdx_t 
     WHERE rtdxent = g_enterprise AND rtdx001 = l_rtdx001
    
    IF l_n = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'art-00152'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()

       RETURN FALSE     
    ELSE
       SELECT rtdxstus INTO l_rtdxstus FROM rtdx_t
        WHERE rtdxent = g_enterprise AND rtdx001 = l_rtdx001
       IF l_rtdxstus = 'N' THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'art-00219'
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()

          RETURN FALSE 
       END IF
    END IF
    
    RETURN TRUE
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp002_other()
  
  #抓取商品
  SELECT  imay001 INTO  g_pmcp_d[l_ac].pmcp001 FROM imay_t
    WHERE  imayent = g_enterprise AND imay003 =  g_pmcp_d[l_ac].pmcp002
 
  CALL apmt832_pmcp001_ref()
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmco002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmco_m.pmco002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmco_m.pmco002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmco_m.pmco002_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcosite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmco_m.pmcosite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmco_m.pmcosite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmco_m.pmcosite_desc
   
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcpsite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcpsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmcp_d[l_ac].pmcpsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmcp_d[l_ac].pmcpsite_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp006_ref()
 
   #IF NOT cl_null ( g_pmcp_d[l_ac].pmcpsite) AND NOT cl_null( g_pmcp_d[l_ac].pmcp006)THEN
   #   SELECT inaa002 INTO g_pmcp_d[l_ac].pmcp006_desc FROM inaa_t 
   #    WHERE inaaent = g_enterprise AND inaasite =g_pmcp_d[l_ac].pmcpsite AND inaa001 = g_pmcp_d[l_ac].pmcp006  
   #END IF
   CALL s_desc_get_stock_desc(g_pmcp_d[l_ac].pmcpsite,g_pmcp_d[l_ac].pmcp006) RETURNING g_pmcp_d[l_ac].pmcp006_desc
   DISPLAY BY NAME g_pmcp_d[l_ac].pmcp006_desc 
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcp001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmcp_d[l_ac].pmcp001_desc = '', g_rtn_fields[1] , ''
   LET g_pmcp_d[l_ac].pmcp001_desc1 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_pmcp_d[l_ac].pmcp001_desc,g_pmcp_d[l_ac].pmcp001_desc1
   CALL apmt832_pmcp001_other()
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp001_chk()
DEFINE l_n        LIKE type_t.num5
DEFINE l_rtdxstus LIKE rtdx_t.rtdxstus
DEFINE l_pmcp001  LIKE pmcp_t.pmcp001
#DEFINE l_pmcp012  LIKE pmcp_t.pmcp012   #160921-00037#2 20160922 mark by beckxie
DEFINE l_starstus  LIKE star_t.starstus
DEFINE l_star004  LIKE star_t.star004

#.輸入值須存在[T:料件基本資料檔].[C:料件編號]，且[C:資料狀態]為確認
#检查是否存在门店清单是否有效
#检查条码是否有效
   #INITIALIZE g_chkparam.* TO NULL
   #LET g_errshow = '1'
   #LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcp001
   #LET g_chkparam.arg1 = g_pmcp_d[l_ac].pmcpsite
   #IF NOT cl_chk_exist("v_rtdx001_1") THEN
   #   RETURN FALSE
   #END IF
    
    SELECT rtdxstus  INTO l_rtdxstus FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent  LEFT JOIN imay_t ON rtdx002=imay003 AND imay001=rtdx001 AND imayent =rtdxent 
    WHERE rtdx001 =  g_pmcp_d[l_ac].pmcp001 AND rtdxsite = g_pmcp_d[l_ac].pmcpsite  AND rtdxent = g_enterprise 
   
   IF STATUS = 100 OR cl_null(l_rtdxstus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00151'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      IF l_rtdxstus <>'Y' THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'art-00156'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF  
   
   SELECT COUNT(1) INTO l_n  FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent  LEFT JOIN imay_t ON rtdx002=imay003 AND imay001=rtdx001 AND imayent =rtdxent 
    WHERE rtdx001 =  g_pmcp_d[l_ac].pmcp001 AND rtdxsite = g_pmcp_d[l_ac].pmcpsite  AND rtdxent = g_enterprise 
     AND imaastus <> 'Y' 
   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00126'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE  
   END IF 
     
 
   SELECT COUNT(1) INTO l_n  FROM rtdx_t LEFT JOIN imaa_t ON rtdx001=imaa001 AND rtdxent=imaaent  LEFT JOIN imay_t ON rtdx002=imay003 AND imay001=rtdx001 AND imayent =rtdxent 
    WHERE rtdx001 =  g_pmcp_d[l_ac].pmcp001 AND rtdxsite = g_pmcp_d[l_ac].pmcpsite  AND rtdxent = g_enterprise 
     AND imaystus <> 'Y'
     
   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00262'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE  
   END IF
   #160921-00037#2 20160922 add by beckxie---S
   #此商品在商品清單中的採購方式不可為空
   LET l_n = 0
   SELECT COUNT(1) INTO l_n FROM rtdx_t 
    WHERE rtdxent = g_enterprise 
      AND rtdxsite = g_pmcp_d[l_ac].pmcpsite
      AND rtdx001 = g_pmcp_d[l_ac].pmcp001
      AND rtdx027 IS NOT NULL 
   IF l_n = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-01128'   #此商品[ %1 ] 在 [商品清單查詢作業] 中的採購方式為空！
      LET g_errparam.extend = ''
      LET g_errparam.replace[1] = g_pmcp_d[l_ac].pmcp001
      LET g_errparam.popup = TRUE
      CALL cl_err()
      
      RETURN FALSE
   END IF
   #160921-00037#2 20160922 add by beckxie---E
#   #先抓取供應商; 
#   SELECT rtdx031  INTO  l_pmcp012 FROM rtdx_t 
#    WHERE rtdxent = g_enterprise AND rtdxsite = g_pmcp_d[l_ac].pmcpsite AND rtdx001 = g_pmcp_d[l_ac].pmcp001
   
   #160921-00037#2 20160922 mark by beckxie---S   
   ##加上 先抓取供應商;    geza 2015/03/19 add 
   #SELECT imaf153  INTO  l_pmcp012 FROM imaf_t 
   # WHERE imafent = g_enterprise AND imafsite = g_pmcp_d[l_ac].pmcpsite AND imaf001 = g_pmcp_d[l_ac].pmcp001
   #
   #IF NOT cl_null(l_pmcp012) THEN
   #   #根據根據供應商+商品 和單據日期抓取屬於哪個區間的合同
   # 
   #   SELECT COUNT(*) INTO l_n  FROM stan_t,star_t,stas_t     
   #    WHERE starent = stasent AND star001 = stas001 AND starsite = stassite  AND stan001 = star004   #add  by geza  starsite,stassite
   #      AND stanent = starent AND stanent = g_enterprise 
   #      AND starsite = g_pmcp_d[l_ac].pmcpsite  #add  by geza  
   #      AND stas003 = g_pmcp_d[l_ac].pmcp001 AND star003 = l_pmcp012 
   #   IF l_n = 0 THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = 'apm-00468'
   #      LET g_errparam.extend = ''
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   # #不存在采购协议
   #      RETURN FALSE  
   #   END IF
   #   
   #   SELECT DISTINCT star004,starstus INTO l_star004,l_starstus FROM stan_t,star_t,stas_t 
   #    WHERE starent = stasent AND star001 = stas001 AND starsite = stassite AND stan001 = star004  #add  by geza  starsite,stassite
   #      AND stanent = starent AND stanent = g_enterprise 
   #      AND starsite = g_pmcp_d[l_ac].pmcpsite  #add  by geza  
   #      AND stas003 = g_pmcp_d[l_ac].pmcp001 AND star003 = l_pmcp012 
   #      #AND g_pmco_m.pmcodocdt BETWEEN stan017 AND stan018   #160104-00014#1 20160105 mark by beckxie
   #      AND g_pmco_m.pmcodocdt BETWEEN stas018 AND stas019    #160104-00014#1 20160105  add by beckxie
   #   
   #   IF cl_null(l_star004) THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = 'apm-00333'
   #      LET g_errparam.extend = ''
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   # #不在生效範圍之內
   #      RETURN FALSE
   #   END IF 
   #   IF l_starstus <> 'Y' THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = 'apm-00334'
   #      LET g_errparam.extend = ''
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #    #作廢
   #      RETURN FALSE
   #   END IF
   #END IF
   #160921-00037#2 20160922 mark by beckxie---E
   
    IF NOT cl_null(g_pmcp_d[l_ac].pmcp002) THEN
      SELECT DISTINCT imay001 INTO l_pmcp001 FROM imay_t
       WHERE imayent = g_enterprise AND imay003 = g_pmcp_d[l_ac].pmcp002
            
      IF g_pmcp_d[l_ac].pmcp001 <> l_pmcp001 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'art-00274'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
    RETURN TRUE
    
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp001_other()
   DEFINE l_cnt     LIKE type_t.num5
   
   #[C:商品條碼]=[T:商品多條碼檔](imay_t).[C:條碼] WHERE [C:主條碼]='Y'
   IF g_c = FALSE THEN
     #161017-00029#2   2016/10/18  by 08742  -S
     LET l_cnt = 0
     SELECT COUNT(1) INTO l_cnt 
        FROM imay_t 
       WHERE imayent = g_enterprise 
         AND imay001 = g_pmcp_d[l_ac].pmcp001 
         AND imay003 = g_pmcp_d[l_ac].pmcp002 
         AND imaystus ='Y'
     IF l_cnt = 0 THEN   
     #161017-00029#2   2016/10/18  by 08742  -E     
        SELECT imay003 INTO g_pmcp_d[l_ac].pmcp002 FROM imay_t
         WHERE imayent = g_enterprise AND imay001 = g_pmcp_d[l_ac].pmcp001 AND imay006 = 'Y'
     END IF #161017-00029#2   2016/10/18  by 08742  add
   END IF
    
   #[C:單位]=[T:門店商品清單檔].[C:採購單位]
   #SELECT rtdx030 INTO g_pmcp_d[l_ac].pmcp005 FROM rtdx_t
   # WHERE rtdxent = g_enterprise AND rtdxsite =  g_pmcp_d[l_ac].pmcpsite AND rtdx001 = g_pmcp_d[l_ac].pmcp001
    
   #[C:包裝單位]=[T:商品多條碼檔].[C:包裝單位] (主條碼)
   #[C:件裝數]=[T:商品多條碼檔].[C:件裝數]     (主條碼)
   SELECT imay004,imay005 INTO g_pmcp_d[l_ac].pmcp009,g_pmcp_d[l_ac].pmcp010 FROM imay_t
    WHERE imayent = g_enterprise AND imay001 = g_pmcp_d[l_ac].pmcp001 AND imay006 = 'Y'
   CALL apmt832_pmcp009_ref() 
    
   #[C:採購類型]=[T:門店商品清單].[C:採購類型]
   #[C:供應商編號]=[T:門店商品清單].[C:主供應商] 並自動帶出供應商名稱
   #150312-00002#2  Modify-S By Ken 150319  原rtdx031 改imaf153
   SELECT rtdx027   #,rtdx031 
     INTO g_pmcp_d[l_ac].pmcp013   #,g_pmcp_d[l_ac].pmcp012 
     FROM rtdx_t
    WHERE rtdxent = g_enterprise AND rtdxsite =  g_pmcp_d[l_ac].pmcpsite AND rtdx001 = g_pmcp_d[l_ac].pmcp001
    
   SELECT imaf153
     INTO g_pmcp_d[l_ac].pmcp012 
     FROM imaf_t
    WHERE imafent = g_enterprise AND imafsite =  g_pmcp_d[l_ac].pmcpsite AND imaf001 = g_pmcp_d[l_ac].pmcp001
   #Modify-E     
     
   #帶出供應商簡稱
   SELECT pmaal004 INTO g_pmcp_d[l_ac].pmcp012_desc FROM pmaal_t 
    WHERE pmaalent =  g_enterprise AND pmaal001 = g_pmcp_d[l_ac].pmcp012 AND pmaal002 = g_dlang
    
   #[C:經營方式]= [T:採購協議單頭檔].[C:經營方式](由單身生效的商品回找單頭)(待确认)
   #161129-00067#1 -s 20161130 by 08172
   #161016-00004 -s by 08172
#   IF NOT cl_null(g_pmcp_d[l_ac].pmcp001) THEN
#       LET l_cnt = 0 
#      SELECT count(1) INTO l_cnt
#        FROM rtdx_t
#       WHERE rtdxent = g_enterprise 
#         AND rtdxsite = g_pmco_m.pmcosite
#         AND rtdx001 = g_pmcp_d[l_ac].pmcp001
#         AND g_pmco_m.pmcodocdt BETWEEN rtdx041 AND rtdx042 
#         
#      IF l_cnt = 0  THEN
#         SELECT rtdx034 INTO g_pmcp_d[l_ac].pmcp015
#           FROM rtdx_t
#          WHERE rtdxent = g_enterprise 
#            AND rtdxsite = g_pmco_m.pmcosite
#            AND rtdx001 = g_pmcp_d[l_ac].pmcp001
#      ELSE
#         SELECT rtdx032 INTO g_pmcp_d[l_ac].pmcp015
#           FROM rtdx_t
#          WHERE rtdxent = g_enterprise 
#            AND rtdxsite = g_pmco_m.pmcosite
#            AND rtdx001 = g_pmcp_d[l_ac].pmcp001                           
#      END IF 
#                          
#      DISPLAY BY NAME g_pmcp_d[l_ac].pmcp001
#   END IF
   #161016-00004 -e by 08172  
   SELECT imaa116 INTO g_pmcp_d[l_ac].pmcp015
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_pmcp_d[l_ac].pmcp001
      AND imaastus = 'Y'   
   #161129-00067#1 -e 20161130 by 08172    
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp008_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcp008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='274' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmcp_d[l_ac].pmcp008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmcp_d[l_ac].pmcp008_desc
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp001_init()
   #預設庫存單位
   SELECT imaa104 INTO g_pmcp_d[l_ac].pmcp005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 =  g_pmcp_d[l_ac].pmcp001
   CALL apmt832_pmcp005_ref()
END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcp005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmcp_d[l_ac].pmcp005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmcp_d[l_ac].pmcp005_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_s01(p_pmcodocno)
DEFINE p_pmcodocno  LIKE pmco_t.pmcodocno
DEFINE lwin_curr        ui.Window
DEFINE lfrm_curr        ui.Form
DEFINE ls_path          STRING
DEFINE l_sys       LIKE type_t.num5 
DEFINE r_success   LIKE type_t.num5
DEFINE r_rate      LIKE inaj_t.inaj014
DEFINE r_qty       LIKE inag_t.inag008 #sakura add
DEFINE t_pmcp011   LIKE pmcp_t.pmcp011
   

    OPEN WINDOW w_apmt832_s01 WITH FORM cl_ap_formpath("apm","apmt832_s01")
    LET lwin_curr = ui.Window.getCurrent()
    LET lfrm_curr = lwin_curr.getForm()
    LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
    LET ls_path = os.Path.join(ls_path,"toolbar_lib.4tb")
    CALL lfrm_curr.loadToolBar(ls_path)
   
    CLEAR FORM
    INITIALIZE g_pmcp2_m.* TO NULL
    CALL g_pmcp2_d.clear()
    LET g_rec_b3 = 0
    
    WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

         CONSTRUCT BY NAME tm.wc ON rtdx001,imaa009,rtdxsite
           
           
            ON ACTION controlp INFIELD rtdx001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
		         LET g_qryparam.reqry = FALSE
		         LET g_qryparam.arg1 = g_pmco_m.pmcosite
               CALL q_rtdx001_3()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO rtdx001  #顯示到畫面上
               NEXT FIELD rtdx001                     #返回原欄位
            
            
            ON ACTION controlp INFIELD imaa009
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
		         LET g_qryparam.reqry = FALSE
	           
               CALL q_rtax001_2()    
               DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上
               NEXT FIELD imaa009                     #返回原欄位
            
            
            
            ON ACTION controlp INFIELD rtdxsite
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
		         LET g_qryparam.reqry = FALSE
#	            LET g_qryparam.arg1 = g_pmco_m.pmcosite 
#               LET g_qryparam.arg2 = '8' 
#               CALL q_ooed004_3()                           #呼叫開窗
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'rtdxsite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
               CALL q_ooef001_24()
               DISPLAY g_qryparam.return1 TO rtdxsite  #顯示到畫面上
               NEXT FIELD rtdxsite                     #返回原欄位
               
                        
            ON ACTION accept
               IF NOT apmt832_s01_required_chk() THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00529'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               END IF
               IF apmt832_batchgen(tm.wc) THEN
                  CONTINUE DIALOG
               ELSE
                  NEXT FIELD CURRENT
               END IF
 
            ON ACTION cancel
               LET INT_FLAG = 1
               EXIT DIALOG 
           
           
            ON ACTION close
               LET INT_FLAG = 1
               EXIT DIALOG
           
            ON ACTION exit
               LET INT_FLAG =1
               EXIT DIALOG
         
         END CONSTRUCT

         #輸入開始
        INPUT BY NAME g_pmcp2_m.pmcp009,g_pmcp2_m.pmcp011,g_pmcp2_m.pmcp005,g_pmcp2_m.pmcp007,g_pmcp2_m.pmcp008  
            ATTRIBUTE(WITHOUT DEFAULTS)
           
           #自訂ACTION
           #add-point:單頭前置處理
      
           #end add-point
           
           #自訂ACTION(master_input)
           
           
           BEFORE INPUT
              #add-point:單頭輸入前處理
           
              #end add-point
            
           #---------------------------<  Master  >---------------------------
           #----<<pmcp009>>----
           #此段落由子樣板a01產生
           BEFORE FIELD pmcp009
              #add-point:BEFORE FIELD pmcp009
      
              #END add-point
      
           #此段落由子樣板a02產生
           AFTER FIELD pmcp009
              
              #add-point:AFTER FIELD pmcp009
              IF NOT cl_null(g_pmcp2_m.pmcp009) THEN
                 INITIALIZE g_chkparam.* TO NULL
                
                 #設定g_chkparam.*的參數
                 LET g_chkparam.arg1 = g_pmcp2_m.pmcp009
                 #160318-00025#21  by 07900 --add-str
                 LET g_errshow = TRUE #是否開窗                   
                 LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
                 #160318-00025#21  by 07900 --add-end
                 #呼叫檢查存在並帶值的library
                 IF NOT cl_chk_exist("v_ooca001") THEN
                    LET g_pmcp2_m.pmcp009 = ''
                   #檢查失敗時後續處理
                    NEXT FIELD CURRENT
                 END IF
              END IF 
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_pmcp2_m.pmcp009
              CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_pmcp2_m.pmcp009_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_pmcp2_m.pmcp009_desc              
              #END add-point
              
      
           #此段落由子樣板a04產生
           ON CHANGE pmcp009
              #add-point:ON CHANGE pmcp009
      
              #END add-point
      
           #----<<pmcp007>>----
           #此段落由子樣板a01產生
           BEFORE FIELD pmcp007
              #add-point:BEFORE FIELD pmcp007
      
              #END add-point
      
           #此段落由子樣板a02產生
           AFTER FIELD pmcp007
              
              #add-point:AFTER FIELD pmcp007
              IF NOT cl_null(g_pmcp2_m.pmcp007) THEN
                 IF NOT cl_null(g_pmco_m.pmco004) AND g_pmcp2_m.pmcp007 > g_pmco_m.pmco004 THEN
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = 'apm-00346'
                    LET g_errparam.extend = ''
                    LET g_errparam.popup = TRUE
                    CALL cl_err()

                    LET g_pmcp2_m.pmcp007 = ''
                    NEXT FIELD pmcp007
                 END IF
             
              END IF
              #END add-point
              
      
           #此段落由子樣板a04產生
           ON CHANGE pmcp007
              #add-point:ON CHANGE pmcp007
      
              #END add-point
      
           #----<<pmcp011>>----
           #此段落由子樣板a01產生
           BEFORE FIELD pmcp011
              #add-point:BEFORE FIELD pmcp011
      
              #END add-point
      
           #此段落由子樣板a02產生
           AFTER FIELD pmcp011
              
              #add-point:AFTER FIELD pmcp011
              IF NOT cl_ap_chk_Range(g_pmcp2_m.pmcp011,"0.000","0","","","azz-00079",1) THEN
                 LET g_pmcp2_m.pmcp011 = ''
                 NEXT FIELD pmcp011
              END IF
            
              #END add-point
              
      
           #此段落由子樣板a04產生
           ON CHANGE pmcp011
              #add-point:ON CHANGE pmcp011
      
              #END add-point
      
           #----<<pmcp008>>----
           #此段落由子樣板a02產生
           AFTER FIELD pmcp008
              
              #add-point:AFTER FIELD pmcp008
              LET g_pmcp2_m.pmcp008_desc= ''
              DISPLAY BY NAME g_pmcp2_m.pmcp008_desc
              IF NOT cl_null(g_pmcp2_m.pmcp008) THEN    
                 IF NOT s_azzi650_chk_exist('274',g_pmcp2_m.pmcp008) THEN
                    LET g_pmcp2_m.pmcp008 =  ''
                    NEXT FIELD pmcp008
                 END IF 
              END IF                   
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_pmcp2_m.pmcp008
              CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='274' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_pmcp2_m.pmcp008_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_pmcp2_m.pmcp008_desc
      
              #END add-point
              
      
           #此段落由子樣板a01產生
           BEFORE FIELD pmcp008
              #add-point:BEFORE FIELD pmcp008
      
              #END add-point
      
           #此段落由子樣板a04產生
           ON CHANGE pmcp008
              #add-point:ON CHANGE pmcp008
      
              #END add-point
      
           #----<<pmcp005>>----
           #此段落由子樣板a01產生
           BEFORE FIELD pmcp005
              #add-point:BEFORE FIELD pmcp005
      
              #END add-point
      
           #此段落由子樣板a02產生
           AFTER FIELD pmcp005
              
              #add-point:AFTER FIELD pmcp005
              LET g_pmcp2_m.pmcp005_desc = ''
              DISPLAY BY NAME g_pmcp2_m.pmcp005_desc
              IF NOT cl_null(g_pmcp2_m.pmcp005) THEN
                 #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                 INITIALIZE g_chkparam.* TO NULL
                 
                 #設定g_chkparam.*的參數
                 LET g_chkparam.arg1 = g_pmcp2_m.pmcp005 
                 #160318-00025#21  by 07900 --add-str
                 LET g_errshow = TRUE #是否開窗                   
                 LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
                 #160318-00025#21  by 07900 --add-end
                 #呼叫檢查存在並帶值的library
                 IF NOT cl_chk_exist("v_ooca001") THEN
                    LET g_pmcp2_m.pmcp005 = ''
                    #檢查失敗時後續處理
                    NEXT FIELD CURRENT  
      
                 END IF
              END IF
      
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_pmcp2_m.pmcp005
              CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_pmcp2_m.pmcp005_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_pmcp2_m.pmcp005_desc
      
              #END add-point
              
      
           #此段落由子樣板a04產生
           ON CHANGE pmcp005
      
      
      
           ON ACTION controlp INFIELD pmcp009
      
	  		     INITIALIZE g_qryparam.* TO NULL
              LET g_qryparam.state = 'i'
	  	        LET g_qryparam.reqry = FALSE
              LET g_qryparam.default1 = g_pmcp2_m.pmcp009             #給予default值
      
              #給予arg
      
              CALL q_ooca001_1()                                #呼叫開窗
      
              LET g_pmcp2_m.pmcp009 = g_qryparam.return1              #將開窗取得的值回傳到變數
      
              DISPLAY g_pmcp2_m.pmcp009 TO pmcp009              #顯示到畫面上
              
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_pmcp2_m.pmcp009
              CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_pmcp2_m.pmcp009_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_pmcp2_m.pmcp009_desc  
      
              NEXT FIELD pmcp009                          #返回原欄位
      
      
              #END add-point
      
           #----<<pmcp007>>----
           #Ctrlp:input.c.pmcp007
           ON ACTION controlp INFIELD pmcp007
              #add-point:ON ACTION controlp INFIELD pmcp007
      
              #END add-point
      
           #----<<pmcp011>>----
           #Ctrlp:input.c.pmcp011
           ON ACTION controlp INFIELD pmcp011
              #add-point:ON ACTION controlp INFIELD pmcp011
      
              #END add-point
      
           #----<<pmcp008>>----
           #Ctrlp:input.c.pmcp008
           ON ACTION controlp INFIELD pmcp008

	  	        INITIALIZE g_qryparam.* TO NULL
              LET g_qryparam.state = 'i'
	  	        LET g_qryparam.reqry = FALSE
      
              LET g_qryparam.default1 = g_pmcp2_m.pmcp008             #給予default值
      
              #給予arg
              LET g_qryparam.arg1 = "274" #
      
              CALL q_oocq002()                                #呼叫開窗
      
              LET g_pmcp2_m.pmcp008 = g_qryparam.return1              #將開窗取得的值回傳到變數
      
              DISPLAY g_pmcp2_m.pmcp008 TO pmcp008              #顯示到畫面上
              
               INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_pmcp2_m.pmcp008
              CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='274' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_pmcp2_m.pmcp008_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_pmcp2_m.pmcp008_desc
              NEXT FIELD pmcp008                          #返回原欄位
      
     
           ON ACTION controlp INFIELD pmcp005

	      	  INITIALIZE g_qryparam.* TO NULL
              LET g_qryparam.state = 'i'
	  	        LET g_qryparam.reqry = FALSE
      
              LET g_qryparam.default1 = g_pmcp2_m.pmcp005             #給予default值
      
              #給予arg
      
              CALL q_ooca001_1()                                #呼叫開窗
      
              LET g_pmcp2_m.pmcp005 = g_qryparam.return1              #將開窗取得的值回傳到變數
      
              DISPLAY g_pmcp2_m.pmcp005 TO pmcp005              #顯示到畫面上
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_pmcp2_m.pmcp005
              CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_pmcp2_m.pmcp005_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_pmcp2_m.pmcp005_desc  
              NEXT FIELD pmcp005                          #返回原欄位
      
           ON ACTION accept
               IF apmt832_batchgen(tm.wc) THEN
                  CONTINUE DIALOG
               ELSE
                  NEXT FIELD CURRENT
               END IF
            
           ON ACTION cancel
              LET INT_FLAG = 1
              EXIT DIALOG 
          
          
           ON ACTION close
              LET INT_FLAG = 1
              EXIT DIALOG
          
           ON ACTION exit
              LET INT_FLAG =1
              EXIT DIALOG
  
           AFTER INPUT
              #add-point:單頭輸入後處理
               
              #end add-point
              
        END INPUT 

         INPUT ARRAY g_pmcp2_d FROM s_detail3.* 
                ATTRIBUTE(COUNT = g_rec_b3,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
        
            BEFORE ROW
               LET l_ac3 = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx3 = l_ac3
               DISPLAY g_detail_idx3 TO FORMONLY.h_index 
               #未來加入條碼管理。可根據是否參加條碼管理
               IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp002) THEN
                  CALL cl_set_comp_entry("l_pmcp009",FALSE)
               ELSE
                  CALL cl_set_comp_entry("l_pmcp009",TRUE) 
               END IF
               LET g_pmcp2_d_t.* = g_pmcp2_d[l_ac3].* 
     

            BEFORE INPUT
               IF g_rec_b3 = 0 OR g_rec_b3 IS NULL THEN
                  NEXT FIELD rtdx001
               END IF
               CALL FGL_SET_ARR_CURR(g_detail_idx3)
               LET l_ac3 = DIALOG.getCurrentRow("s_detail3")
               DISPLAY g_rec_b3 TO FORMONLY.h_count 
               
            
            AFTER FIELD l_pmcp009
              IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp009) THEN
                 INITIALIZE g_chkparam.* TO NULL
                
                 #設定g_chkparam.*的參數
                 LET g_chkparam.arg1 = g_pmcp2_d[l_ac3].pmcp009
                 #160318-00025#21  by 07900 --add-str
                 LET g_errshow = TRUE #是否開窗                   
                 LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
                 #160318-00025#21  by 07900 --add-end
                 #呼叫檢查存在並帶值的library
                 IF NOT cl_chk_exist("v_ooca001") THEN
                    LET g_pmcp2_d[l_ac3].pmcp009 = ''
                   #檢查失敗時後續處理
                    NEXT FIELD CURRENT
                 END IF
                                
              END IF
            
            
            AFTER FIELD l_pmcp011
               IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp011) THEN
                  IF NOT cl_ap_chk_Range(g_pmcp2_d[l_ac3].pmcp011,"0.000","0","","","azz-00079",1) THEN
                    LET g_pmcp2_d[l_ac3].pmcp011 = ''
                    NEXT FIELD l_pmcp011
                  END IF
                  IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp011) AND NOT cl_null(g_pmcp2_d[l_ac3].pmcp010)  THEN
                    #單位不為空
                     IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp005) AND (t_pmcp011 <>g_pmcp2_d[l_ac3].pmcp011 OR  cl_null(t_pmcp011)) THEN
                    #141224-00013#15---sakura---mod---str      
                       #CALL  s_aimi190_get_convert(g_pmcp2_d[l_ac3].pmcp001,g_pmcp2_d[l_ac3].pmcp009,g_pmcp2_d[l_ac3].pmcp005) RETURNING r_success,r_rate
                        CALL  s_aooi250_convert_qty(g_pmcp2_d[l_ac3].pmcp001,g_pmcp2_d[l_ac3].pmcp009,g_pmcp2_d[l_ac3].pmcp005,g_pmcp2_d[l_ac3].pmcp011) RETURNING r_success,r_qty
                        IF r_success THEN
                          #LET g_pmcp2_d[l_ac3].pmcp004 = g_pmcp2_d[l_ac3].pmcp011*g_pmcp2_d[l_ac3].pmcp010*r_rate
                          LET g_pmcp2_d[l_ac3].pmcp004 = r_qty
                    #141224-00013#15---sakura---mod---end                           
                        ELSE
                           LET g_pmcp2_d[l_ac3].pmcp011 = g_pmcp2_d_t.pmcp011
                           NEXT FIELD l_pmcp011 
                        END IF
                        LET t_pmcp011 = g_pmcp2_d[l_ac3].pmcp011                
                     END IF
                  END IF
                      
               END IF
               
            AFTER FIELD l_pmcp004
            
            
            
            AFTER FIELD l_pmcp005
               LET g_pmcp2_d[l_ac3].pmcp005_desc = ''
               DISPLAY BY NAME  g_pmcp2_d[l_ac3].pmcp005_desc
               IF NOT cl_null( g_pmcp2_d[l_ac3].pmcp005) THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 =  g_pmcp2_d[l_ac3].pmcp005
                  #160318-00025#21  by 07900 --add-str
                  LET g_errshow = TRUE #是否開窗                   
                  LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
                  #160318-00025#21  by 07900 --add-end                  
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooca001") THEN
                     LET g_pmcp2_d[l_ac3].pmcp005 = ''
                     #檢查失 敗時後續處理
                     NEXT FIELD CURRENT  
                  END IF
                  IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp009) THEN
                     CALL s_aimi190_get_convert(g_pmcp2_d[l_ac3].pmcp001,g_pmcp2_d[l_ac3].pmcp009,g_pmcp2_d[l_ac3].pmcp005) RETURNING r_success,r_rate
                     IF NOT r_success THEN
                        LET g_pmcp2_d[l_ac3].pmcp005 = g_pmcp2_d_t.pmcp005
                        NEXT FIELD CURRENT
                     END IF
                  END IF          
               END IF
      
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] =  g_pmcp2_d[l_ac3].pmcp005
              CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET  g_pmcp2_d[l_ac3].pmcp005_desc = '', g_rtn_fields[1] , ''
          
            
            
            AFTER FIELD l_pmcp007
              IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp007) THEN
                 IF NOT cl_null(g_pmco_m.pmco004) AND g_pmcp2_d[l_ac3].pmcp007 > g_pmco_m.pmco004 THEN
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = 'apm-00346'
                    LET g_errparam.extend = ''
                    LET g_errparam.popup = TRUE
                    CALL cl_err()

                    LET g_pmcp2_d[l_ac3].pmcp007 = ''
                    NEXT FIELD l_pmcp007
                 END IF
             
              END IF
            
            
            AFTER FIELD l_pmcp008 
               LET g_pmcp2_d[l_ac3].pmcp008_desc= ''
               DISPLAY BY NAME g_pmcp2_d[l_ac3].pmcp008_desc
               IF NOT cl_null(g_pmcp2_d[l_ac3].pmcp008) THEN    
                  IF NOT s_azzi650_chk_exist('274',g_pmcp2_d[l_ac3].pmcp008) THEN
                     LET g_pmcp2_d[l_ac3].pmcp008 =  ''
                     NEXT FIELD l_pmcp008
                  END IF 
               END IF                   
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_pmcp2_d[l_ac3].pmcp008
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='274' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_pmcp2_d[l_ac3].pmcp008_desc = '', g_rtn_fields[1] , ''
         
      

            ON ACTION controlp INFIELD l_pmcp009
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
	  	         LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_pmcp2_d[l_ac3].pmcp009             
               CALL q_ooca001_1()                                        
               LET g_pmcp2_d[l_ac3].pmcp009 = g_qryparam.return1 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] =  g_pmcp2_d[l_ac3].pmcp009
               CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET  g_pmcp2_d[l_ac3].pmcp009_desc = '', g_rtn_fields[1] , ''                              
               NEXT FIELD l_pmcp009                      


            ON ACTION controlp INFIELD l_pmcp005
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
	  	         LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_pmcp2_d[l_ac3].pmcp005             
               CALL q_ooca001_1()                                        
               LET g_pmcp2_d[l_ac3].pmcp005 = g_qryparam.return1 
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] =  g_pmcp2_d[l_ac3].pmcp005
               CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET  g_pmcp2_d[l_ac3].pmcp005_desc = '', g_rtn_fields[1] , ''               
               NEXT FIELD l_pmcp005 
           
            ON ACTION controlp INFIELD l_pmcp008
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
	  	         LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_pmcp2_d[l_ac3].pmcp008             #給予default值
               LET g_qryparam.arg1 = "274"             
               CALL q_oocq002()                                      
               LET g_pmcp2_d[l_ac3].pmcp008 = g_qryparam.return1                  
                    
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_pmcp2_d[l_ac3].pmcp008
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='274' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_pmcp2_d[l_ac3].pmcp008_desc = '', g_rtn_fields[1] , ''
               NEXT FIELD l_pmcp008

            ON ACTION accept
              # CALL apmt832_batchgen(tm.wc)
              CALL apmt832_batchins()
              LET INT_FLAG = 1
              EXIT DIALOG 
              
              
            ON ACTION cancel
               LET INT_FLAG = 1
               EXIT DIALOG 
           
           
            ON ACTION close
               LET INT_FLAG = 1
               EXIT DIALOG
           
            ON ACTION exit
               LET INT_FLAG =1
               EXIT DIALOG
               
         END INPUT

        BEFORE DIALOG
         
           LET g_pmcp2_m.pmcp007 = g_today   
           DISPLAY  g_pmcp2_m.pmcp007 TO pmcp007
           NEXT FIELD rtdx001 

         
      END DIALOG
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         EXIT WHILE
      END IF
      
    END WHILE  
    CLOSE WINDOW w_apmt832_s01

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_batchgen(p_wc)
DEFINE p_wc       STRING
DEFINE l_sql      STRING
DEFINE r_success   LIKE type_t.num5
#DEFINE r_rate      LIKE inaj_t.inaj014 #sakura mark
DEFINE r_qty      LIKE inag_t.inag008 #sakura add
DEFINE l_flag     LIKE type_t.num5
DEFINE l_where           STRING  
   
   CALL s_aooi500_sql_where(g_prog,'pmcosite') RETURNING l_where
   LET l_where = cl_replace_str(l_where,'pmcosite','rtdxsite')
   LET l_where  = l_where.trim()
   LET l_flag = FALSE
#   LET l_sql = "SELECT DISTINCT rtdxsite,rtdx001,imay003 FROM rtdx_t INNER JOIN imaa_t ON rtdx001 = imaa001 AND rtdxent = imaaent  ",
#               " ,imay_t",
#               " WHERE rtdxent = '",g_enterprise,"' AND ",p_wc,
#               " AND rtdx001 = imay001 AND imayent = '",g_enterprise,"' AND imay004 = '",g_pmcp2_m.pmcp009,"'",
#               " AND rtdxsite IN (SELECT DISTINCT ooed004 FROM ooed_t ",
#               "               WHERE ooedent= '",g_enterprise,"' AND ooed001 = '2' AND ooed006 <='",g_today,"'",
#               "                 AND (ooed007 >='",g_today,"' OR ooed007 IS NULL) AND ooed004 IN (",
#               "                         SELECT ooed004 FROM ooed_t  START WITH ooed005='",g_pmco_m.pmcosite,"' AND ooed001='2' ",
#               "                           AND ooed006 <='",g_today,"'  AND (ooed007 >='",g_today,"' OR ooed007 IS NULL) ",
#               "                         CONNECT BY  nocycle PRIOR ooed004=ooed005 AND ooed001='2' AND ooed006 <='",g_today,"'",
#               "                         AND (ooed007 >='",g_today,"' OR ooed007 IS NULL) ",
#               "                  UNION SELECT ooed004 FROM ooed_t WHERE ooed004='",g_pmco_m.pmcosite,"'))",               
#               "   AND rtdx001 IN ( SELECT DISTINCT imay001 FROM imay_t WHERE imayent = '",g_enterprise,"' AND imay004 = '",g_pmcp2_m.pmcp009,"')",
#               " ORDER BY rtdxsite,rtdx001 "
          
    LET l_sql = "SELECT DISTINCT rtdxsite,rtdx001,imay003 FROM rtdx_t INNER JOIN imaa_t ON rtdx001 = imaa001 AND rtdxent = imaaent  ",
               " ,imay_t",
               " WHERE rtdxent = '",g_enterprise,"' AND ",p_wc,
               " AND rtdx001 = imay001 AND imayent = '",g_enterprise,"' AND imay004 = '",g_pmcp2_m.pmcp009,"'"," AND ",l_where,  
                           
               "   AND rtdx001 IN ( SELECT DISTINCT imay001 FROM imay_t WHERE imayent = '",g_enterprise,"' AND imay004 = '",g_pmcp2_m.pmcp009,"')",
               " ORDER BY rtdxsite,rtdx001 "
               
   PREPARE sel_rtdx FROM l_sql
   DECLARE cur_rtdx CURSOR  FOR sel_rtdx

   CALL g_pmcp2_d.clear()
   LET l_ac3 = 1
   CALL  cl_err_showmsg_init()
   
   FOREACH cur_rtdx INTO g_pmcp2_d[l_ac3].pmcpsite,g_pmcp2_d[l_ac3].pmcp001,g_pmcp2_d[l_ac3].pmcp002
      
      LET g_pmcp2_d[l_ac3].sel = 'N'
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pmcp2_d[l_ac3].pmcpsite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pmcp2_d[l_ac3].pmcpsite_desc = '', g_rtn_fields[1] , ''


      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pmcp2_d[l_ac3].pmcp001
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pmcp2_d[l_ac3].pmcp001_desc = '', g_rtn_fields[1] , ''
      LET g_pmcp2_d[l_ac3].pmcp001_desc_1 = '', g_rtn_fields[2] , ''
 
      SELECT imay005 INTO g_pmcp2_d[l_ac3].pmcp010 FROM imay_t
       WHERE imayent = g_enterprise AND imay003 = g_pmcp2_d[l_ac3].pmcp002 
      IF cl_null(g_pmcp2_d[l_ac3].pmcp010 ) THEN
         LET g_pmcp2_d[l_ac3].pmcp010 = 0 
      END IF
      
      LET g_pmcp2_d[l_ac3].pmcp009 = g_pmcp2_m.pmcp009 
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] =  g_pmcp2_d[l_ac3].pmcp009
      CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pmcp2_d[l_ac3].pmcp009_desc = '', g_rtn_fields[1] , ''
      
      LET g_pmcp2_d[l_ac3].pmcp011 = g_pmcp2_m.pmcp011
      
      LET g_pmcp2_d[l_ac3].pmcp005 = g_pmcp2_m.pmcp005
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] =  g_pmcp2_d[l_ac3].pmcp005
      CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pmcp2_d[l_ac3].pmcp005_desc = '', g_rtn_fields[1] , ''
     #141224-00013#15---sakura---mod---str
     #CALL s_aimi190_get_convert(g_pmcp2_d[l_ac3].pmcp001,g_pmcp2_d[l_ac3].pmcp009,g_pmcp2_d[l_ac3].pmcp005) RETURNING r_success,r_rate
      CALL s_aooi250_convert_qty(g_pmcp2_d[l_ac3].pmcp001,g_pmcp2_d[l_ac3].pmcp009,g_pmcp2_d[l_ac3].pmcp005,g_pmcp2_d[l_ac3].pmcp011) RETURNING r_success,r_qty
      
      IF NOT r_success THEN
         CONTINUE FOREACH
      END IF
     #LET g_pmcp2_d[l_ac3].pmcp004 = g_pmcp2_d[l_ac3].pmcp010 * g_pmcp2_d[l_ac3].pmcp011 * r_rate
      LET g_pmcp2_d[l_ac3].pmcp004 = r_qty
     #141224-00013#15---sakura---mod---end
      
      IF cl_null(g_pmcp2_d[l_ac3].pmcp004 ) THEN
         LET g_pmcp2_d[l_ac3].pmcp004 = 0 
      END IF
      
    
      
     
      
      LET g_pmcp2_d[l_ac3].pmcp007 = g_pmcp2_m.pmcp007
      
      LET g_pmcp2_d[l_ac3].pmcp008 = g_pmcp2_m.pmcp008
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_pmcp2_d[l_ac3].pmcp008
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='274' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_pmcp2_d[l_ac3].pmcp008_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_pmcp2_d[l_ac3].pmcp008_desc
      
      LET l_flag = TRUE
      LET l_ac3 = l_ac3 + 1
      IF l_ac3 > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

         END IF
         EXIT FOREACH
      END IF
         
   
   END FOREACH
   CALL g_pmcp2_d.deleteElement(g_pmcp2_d.getLength())
   LET g_rec_b3 = g_pmcp2_d.getLength()
   
   CALL cl_showmsg() 
   FREE sel_rtdx
   IF l_flag = FALSE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00491'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      RETURN TRUE
   END IF
 

END FUNCTION
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmco004_chk()
   DEFINE  l_n LIKE type_t.num5

   SELECT COUNT(1) INTO l_n FROM pmcp_t
    WHERE pmcpdocno = g_pmco_m.pmcodocno AND pmcpent = g_enterprise AND pmcp007 <  g_pmco_m.pmco004
    
   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00368'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   RETURN TRUE
  
   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_batchins()
DEFINE i          LIKE type_t.num5
DEFINE l_n        LIKE type_t.num5
DEFINE l_seq      LIKE pmcp_t.pmcpseq
DEFINE l_pmcp012  LIKE pmcp_t.pmcp012
DEFINE l_pmcp013  LIKE pmcp_t.pmcp013
#DEFINE l_cnt      LIKE type_t.num5  #161016-00004#1 by 08172  #161129-00067#1 20161130 by 08172
DEFINE l_pmcp015  LIKE pmcp_t.pmcp015  #161016-00004#1 by 08172 
DEFINE l_rtdx029  LIKE rtdx_t.rtdx029 #add by geza 20170119 #170116-00018#2
DEFINE l_pmcp016  LIKE pmcp_t.pmcp016  #add by geza 20170119 #170116-00018#2
   FOR i  =1 TO g_pmcp2_d.getLength()  
      IF g_pmcp2_d[i].sel = 'Y' THEN
         #161129-00067#1 -s 20161130 by 08172
         #161016-00004#1 -s by 08172
#         IF NOT cl_null(g_pmcp2_d[i].pmcp001) THEN
#            LET l_cnt = 0 
#            SELECT count(1) INTO l_cnt
#              FROM rtdx_t
#             WHERE rtdxent = g_enterprise 
#               AND rtdxsite = g_pmcp2_d[i].pmcpsite
#               AND rtdx001 = g_pmcp2_d[i].pmcp001
#               AND g_pmco_m.pmcodocdt BETWEEN rtdx041 AND rtdx042 
#               
#            IF l_cnt = 0  THEN
#               SELECT rtdx034 INTO l_pmcp015
#                 FROM rtdx_t
#                WHERE rtdxent = g_enterprise 
#                  AND rtdxsite = g_pmcp2_d[i].pmcpsite
#                  AND rtdx001 = g_pmcp2_d[i].pmcp001
#            ELSE
#               SELECT rtdx032 INTO l_pmcp015
#                 FROM rtdx_t
#                WHERE rtdxent = g_enterprise 
#                  AND rtdxsite = g_pmcp2_d[i].pmcpsite
#                  AND rtdx001 = g_pmcp2_d[i].pmcp001                        
#            END IF
#         END IF
         #161016-00004#1 -e by 08172
         SELECT imaa116 INTO l_pmcp015
           FROM imaa_t
          WHERE imaaent = g_enterprise
            #AND imaa001 = g_pmcp_d[l_ac].pmcp001 #mark by geza 20170119 #170116-00018#2
            AND imaa001 = g_pmcp2_d[i].pmcp001 #add by geza 20170119 #170116-00018#2 
            AND imaastus = 'Y'   
         #161129-00067#1 -e 20161130 by 08172    
         
         #add by geza 20170119 #170116-00018#2(S)
         LET l_rtdx029 =''
         SELECT rtdx029 INTO l_rtdx029
           FROM rtdx_t 
          WHERE rtdxent = g_enterprise
            AND rtdx001 = g_pmcp2_d[i].pmcp001
            AND rtdxsite = g_pmcp2_d[i].pmcpsite
         #带出默认库位 
         CALL apmt832_get_inaa001(l_rtdx029,g_pmcp2_d[i].pmcp001,g_pmcp2_d[i].pmcpsite)         
                         RETURNING l_pmcp016
         #add by geza 20170119 #170116-00018#2(E)
         
         SELECT COUNT(1) INTO l_n FROM pmcp_t
          WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m.pmcodocno 
            AND pmcpsite = g_pmcp2_d[i].pmcpsite AND pmcp001 =  g_pmcp2_d[i].pmcp001 
            AND pmcp002 = g_pmcp2_d[i].pmcp002         
                   
         IF l_n > 0 THEN        
            UPDATE pmcp_t
              SET pmcp009 = g_pmcp2_d[i].pmcp009,
                  pmcp010 = g_pmcp2_d[i].pmcp010,
                  pmcp011 = g_pmcp2_d[i].pmcp011,
                  pmcp004 = g_pmcp2_d[i].pmcp004, 
                  pmcp005 = g_pmcp2_d[i].pmcp005,
                  pmcp007 = g_pmcp2_d[i].pmcp007,
                  pmcp008 = g_pmcp2_d[i].pmcp008,
                  pmcp015 = l_pmcp015 ,  #161129-00067#1  20161130 by 08172
                  pmcp016 = l_pmcp016 #add by geza 20170119 #170116-00018#2
            WHERE pmcpent = g_enterprise  AND pmcpdocno = g_pmco_m.pmcodocno 
              AND pmcpsite = g_pmcp2_d[i].pmcpsite AND pmcp001 =  g_pmcp2_d[i].pmcp001 
              AND pmcp002 = g_pmcp2_d[i].pmcp002  
         ELSE
            SELECT NVL(MAX(pmcpseq),0)+1 INTO l_seq FROM pmcp_t
             WHERE pmcpent = g_enterprise AND pmcpdocno = g_pmco_m.pmcodocno

            #150312-00002#2  Modify-S By Ken 150319  原rtdx031 改imaf153
            SELECT rtdx027   #,rtdx031 
              INTO l_pmcp013   #,l_pmcp012 
              FROM rtdx_t
             WHERE rtdxent = g_enterprise AND rtdxsite =  g_pmcp2_d[i].pmcpsite AND rtdx001 = g_pmcp2_d[i].pmcp001
             
            SELECT imaf153 
              INTO l_pmcp012 
              FROM imaf_t
             WHERE imafent = g_enterprise AND imafsite =  g_pmcp2_d[i].pmcpsite AND imaf001 = g_pmcp2_d[i].pmcp001
            #Modify-E 
             
            INSERT INTO pmcp_t (pmcpent,pmcpsite,pmcpunit,pmcpdocno,pmcpseq,pmcp001,pmcp002,pmcp003,
            pmcp004,pmcp005,pmcp006,pmcp007,pmcp008,pmcp009,pmcp010,pmcp011,pmcp012,pmcp013,pmcp014,pmcp015,pmcp016)  #161129-00067#1  20161130 by 08172  #add by geza 20170119 #170116-00018#2 pmcp016 
            VALUES(g_enterprise,g_pmcp2_d[i].pmcpsite,g_pmco_m.pmcounit,g_pmco_m.pmcodocno,
                                      l_seq,g_pmcp2_d[i].pmcp001,g_pmcp2_d[i].pmcp002,'',g_pmcp2_d[i].pmcp004,g_pmcp2_d[i].pmcp005,
                                      '',g_pmcp2_d[i].pmcp007,g_pmcp2_d[i].pmcp008,g_pmcp2_d[i].pmcp009,g_pmcp2_d[i].pmcp010,
                                      g_pmcp2_d[i].pmcp011,l_pmcp012,l_pmcp013,'',l_pmcp015,l_pmcp016)   #161129-00067#1 20161130 by 08172  #add by geza 20170119 #170116-00018#2  l_pmcp016  
         END IF         
      END IF  
   END FOR
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_s01_required_chk()

   IF cl_null(g_pmcp2_m.pmcp009) OR cl_null(g_pmcp2_m.pmcp011) OR cl_null(g_pmcp2_m.pmcp005) OR cl_null(g_pmcp2_m.pmcp007) OR cl_null(g_pmcp2_m.pmcp008)THEN
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PUBLIC FUNCTION apmt832_pmcp009_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pmcp_d[l_ac].pmcp009
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pmcp_d[l_ac].pmcp009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pmcp_d[l_ac].pmcp009_desc
END FUNCTION

################################################################################
# Descriptions...: 铺货仓库存计算
# Memo...........:
# Usage..........: CALL apmt832_inag009_count(p_imaa001,p_ooef123,p_imay012,p_pmcpsite)
#                  RETURNING 回传参数
# Input parameter: p_imaa001 料号
#                : p_ooef123 库区
#                : p_imay012 产品特征
#                : p_pmcpsite 铺货组织
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20161031 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt832_inag009_count(p_imaa001,p_ooef123,p_imay012,p_pmcpsite)
DEFINE p_imaa001             LIKE imaa_t.imaa001     #料号
DEFINE p_pmcpsite            LIKE pmcp_t.pmcpsite    #料号
DEFINE p_ooef123             LIKE ooef_t.ooef123     #组织
DEFINE p_imay012             LIKE imay_t.imay012     #产品特征
DEFINE l_amount              LIKE inag_t.inag009     #数量   
   LET l_amount = 0
   #单身pmcp006铺货库位的库存量，若单身pmcp006为空，则取单身pmcpsite铺货组织的默认收货成本仓ooef123的库存
   IF p_ooef123 IS NULL THEN
      SELECT ooef123 INTO p_ooef123
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = p_pmcpsite
         AND ooefstus = 'Y'
   END IF
   SELECT SUM(inag009) INTO l_amount
     FROM inag_t
    WHERE inagent = g_enterprise
      AND inag001 = p_imaa001
      AND inag002 = p_imay012
      AND inag004 = p_ooef123
      AND inagsite = p_pmcpsite
   IF l_amount IS NULL THEN
      LET l_amount = 0
   END IF
   
   RETURN  l_amount     
END FUNCTION

################################################################################
# Descriptions...: 配送仓可用库存计算
# Memo...........:
# Usage..........: CALL apmt832_rtdx029_inag009_count(p_imaa001,p_site,p_imay012,p_inag003,p_pmcpsite,p_inag004,p_inag007)
#                  RETURNING 回传参数
# Input parameter: p_imaa001 料号
#                : p_site    配送中心
#                : p_imay012 产品特征
#                : p_inag003 库存管理特征
#                : p_pmcpsite 需求组织
#                : p_inag004 配送庫位
#                : p_inag007 單位
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20161031 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt832_rtdx029_inag009_count(p_imaa001,p_site,p_imay012,p_inag003,p_pmcpsite,p_inag004,p_inag007)
DEFINE p_imaa001             LIKE imaa_t.imaa001     #料号
DEFINE p_site                LIKE pmda_t.pmdasite    #组织
DEFINE p_imay012             LIKE imay_t.imay012     #产品特征
DEFINE l_amount              LIKE inag_t.inag009     #数量   
DEFINE l_inag009             LIKE inag_t.inag009     #数量  
DEFINE p_inag003             LIKE inag_t.inag003     #库存管理特征
DEFINE p_pmcpsite            LIKE pmcp_t.pmcpsite    #需求组织
DEFINE p_inag004             LIKE inag_t.inag004     #库位
DEFINE p_inag007             LIKE inag_t.inag007     #库存单位
DEFINE l_inas011             LIKE inas_t.inas011     #数量
DEFINE l_inaasite            LIKE inaa_t.inaasite
   #mark by geza 20170116 #170116-00018#2(S)
#   #add by geza 20161208 #161124-00039#1(S)
#   CALL s_aint700_adbi261_inv_scope_def(p_site,p_imaa001,p_pmcpsite,'Y')         
#               RETURNING l_inaasite,p_inag004 #add by geza 201611206 161124-00039#1
#   #抓库存单位
#   LET p_inag007 =''
#   SELECT imaa104 INTO p_inag007
#     FROM imaa_t
#    WHERE imaaent = g_enterprise
#      AND imaa001 = p_imaa001 
#   #add by geza 20161208 #161124-00039#1(E)
#   
#   LET l_amount = 0
#   SELECT SUM(inag009) INTO l_amount
#     FROM inag_t
#    WHERE inagent = g_enterprise
#      AND inag001 = p_imaa001
#      AND inag002 = p_imay012
#      AND inag004 = p_inag004 #add by geza 201611206 161124-00039#1
#      AND inag007 = p_inag007 #add by geza 201611206 161124-00039#1
#      AND inagsite = p_site
#      #AND EXISTS (SELECT 1 FROM inaa_t WHERE inagent = inaaent AND inaasite = p_site AND inaa001 = inag004 AND inaa008 = 'Y' AND inaastus = 'Y' ) #mark by geza 20161208 #161124-00039#1
#   
#   #mark by geza 20161227 161227-00012#1(S)   
#   #CALL s_get_inag009_valid(p_site,p_imaa001,p_imay012,l_amount,'2') RETURNING l_inag009  #mark by geza 201611206 161124-00039#1
#   #CALL s_get_inag009_valid(p_pmcpsite,p_imaa001,p_imay012,l_amount,'2',p_inag003,p_inag004,p_inag007,p_site) RETURNING l_inag009 #add by geza 20161208 #161124-00039#1
#   #mark by geza 20161227 161227-00012#1(E)
#   
#   #add by geza 20161227 161227-00012#1(S)   
#   IF l_amount IS NULL THEN
#      LET l_amount = 0
#   END IF
#   SELECT COALESCE(SUM((CASE WHEN inax002 = '1' THEN 1  ELSE -1 END)*inax014),0) INTO l_inag009
#     FROM inax_t 
#    WHERE inaxent = g_enterprise 
#      AND inax017 = p_site  
#      AND inax010 = p_imaa001  
#      AND inax011 = p_imay012  
#      AND inax015 = p_inag004
#      AND inax013 = p_inag007  
#   LET l_inag009 = l_inag009 + l_amount   
#   #add by geza 20161227 161227-00012#1(E)
   #mark by geza 20170116 #170116-00018#2(E)
   
   #add by geza 20170116 #170116-00018#2(S)
   #抓库存单位
   LET p_inag007 =''
   SELECT imaa104 INTO p_inag007
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = p_imaa001 
   
   LET l_amount = 0
   SELECT SUM(inag009) INTO l_amount
     FROM inag_t
    WHERE inagent = g_enterprise
      AND inag001 = p_imaa001
      AND inag002 = p_imay012
      AND inag004 = p_inag004 #add by geza 201611206 161124-00039#1
      AND inag007 = p_inag007 #add by geza 201611206 161124-00039#1
      AND inagsite = p_site
   
   LET l_inag009 = 0
   LET l_inas011 = 0
   SELECT COALESCE(SUM(inas011),0) INTO l_inas011
     FROM inas_t 
    WHERE inasent = g_enterprise
      AND inassite = p_site
      AND inas009 = p_imaa001
      AND inas010 = p_imay012
      AND inas013 = p_inag007
   LET l_inag009 = l_amount - l_inas011   
   #add by geza 20170116 #170116-00018#2(E)
   RETURN  l_inag009  
END FUNCTION

################################################################################
# Descriptions...: 整批调整需求日期
# Memo...........:
# Usage..........: CALL apmt832_date_change()
# Date & Author..: 161031-00059#1 2016/10/31 By 08172
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt832_date_change()
   DEFINE l_sql   STRING
   
   OPEN WINDOW w_apmt832_s02 WITH FORM cl_ap_formpath("apm",'apmt832_s02')
   
   LET g_pmcp007 = ''
   DISPLAY g_pmcp007 TO pmcp007
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
      CONSTRUCT BY NAME g_wc_date ON pmcpsite     
         
         ON ACTION controlp INFIELD pmcpsite
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " EXISTS (SELECT 1 ",
                                   "           FROM pmcp_t",
                                   "          WHERE pmcpent = ",g_enterprise,
                                   "            AND pmcpsite = ooef001",
                                   "            AND pmcpdocno = '",g_pmco_m.pmcodocno,"') "
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO pmcpsite  #顯示到畫面上
            NEXT FIELD pmcpsite   
                      
      END CONSTRUCT
      
      INPUT g_pmcp007 FROM pmcp007 ATTRIBUTE(WITHOUT DEFAULTS)
      
      BEFORE INPUT
         DISPLAY g_pmcp007 TO pmcp007
      AFTER INPUT
         
      END INPUT

      ON ACTION accept
         LET g_pmcpsite = GET_FLDBUF(pmcpsite)
         IF g_pmcpsite IS NULL THEN            
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code   = 'apm-01135' 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CONTINUE DIALOG
         END IF   
         LET g_pmcp007 = GET_FLDBUF(pmcp007)
         IF g_pmcp007 IS NULL THEN            
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code   = 'apm-01102' 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CONTINUE DIALOG
         END IF   
         LET l_sql = " UPDATE pmcp_t",
                     "    SET pmcp007 = '",g_pmcp007,"'",
                     "  WHERE pmcpent = ",g_enterprise,
                     "    AND pmcpdocno = '",g_pmco_m.pmcodocno,"'",
                     "    AND ",g_wc_date
         PREPARE apmt832_date_pre FROM l_sql
         EXECUTE apmt832_date_pre
         IF SQLCA.SQLcode  THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "upd pmcp_t"
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CONTINUE DIALOG
         END IF
         CALL apmt832_b_fill()            
         ACCEPT DIALOG
      
      ON ACTION cancel
         EXIT DIALOG 
                  
   END DIALOG

   CLOSE WINDOW w_apmt832_s02
END FUNCTION

################################################################################
# Descriptions...: 预带默认库位
# Memo...........:
# Usage..........: CALL apmt832_get_inaa001(p_site,p_imaa001,p_unit)
#                  RETURNING r_inaa001
# Input parameter: p_site      發貨組織
#                : p_imaa001   料件編號
#                : p_unit      需求組織
# Return code....: r_inaa001   库位
# Date & Author..: 20170117 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION apmt832_get_inaa001(p_site,p_imaa001,p_unit)
DEFINE l_sql            STRING
DEFINE l_sel_sql        STRING
DEFINE l_sql3           STRING 
DEFINE p_site           LIKE inaa_t.inaasite  #發貨組織
DEFINE p_imaa001        LIKE imaa_t.imaa001   #料件編號
DEFINE p_unit           LIKE inaa_t.inaaunit  #需求組織
DEFINE l_inaasite       LIKE inaa_t.inaasite
DEFINE l_inaa001        LIKE inaa_t.inaa001
DEFINE l_inaa142        LIKE inaa_t.inaa142
DEFINE l_inaa010        LIKE inaa_t.inaa010
   
   LET l_inaa001 = ''
   #抓取库位
   LET l_sel_sql = "SELECT UNIQUE inaasite,inaa001,inaa142,inaa010 " 
   LET l_sql3 = s_aint700_adbi261_sql('N','Y')  
   LET l_sql = l_sel_sql,l_sql3
   PREPARE apmt832_adbi261_sel_pre1 FROM l_sql
   DECLARE apmt832_adbi261_sel_cur1 SCROLL CURSOR FOR apmt832_adbi261_sel_pre1
   OPEN apmt832_adbi261_sel_cur1 USING p_site,p_imaa001,p_unit
   FETCH FIRST apmt832_adbi261_sel_cur1 INTO l_inaasite,l_inaa001,l_inaa142,l_inaa010
   
   RETURN l_inaa001
END FUNCTION

 
{</section>}
 
